<ResourceDictionary x:Class="NaroTheme.Resources" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock" xmlns:Ribbon="clr-namespace:Microsoft.Windows.Controls.Ribbon;assembly=RibbonControlsLibrary" xmlns:ae="clr-namespace:ICSharpCode.AvalonEdit;assembly=ICSharpCode.AvalonEdit">

	<ResourceDictionary.MergedDictionaries>
		<ResourceDictionary Source="/AvalonDock;component/themes/generic.xaml" />
		<ResourceDictionary Source="/AvalonDock;component/themes/aero.normalcolor.brushes.xaml" />
		<ResourceDictionary Source="Colors.xaml"></ResourceDictionary>
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="AvalonEditStyle">
		<Setter Property="ae:TextEditor.Background" Value="{DynamicResource textboxGradient}"></Setter>
	</Style>

	<Style x:Key="StackBackground" TargetType="{x:Type StackPanel}">
		<Setter Property="Background" Value="#c6c7e7"></Setter>
	</Style>

	<!--TreeView Style-->
	<Style x:Key="TreeViewStyle" TargetType="{x:Type TreeView}">
		<Setter Property="Height" Value="auto"></Setter>
		<Setter Property="Width" Value="auto"></Setter>

	</Style>

	<Style x:Key="ListHeader" TargetType="TextBlock">
		<Setter Property="Foreground" Value="White"></Setter>
		<Setter Property="FontFamily" Value="Verdana"></Setter>
		<Setter Property="FontSize" Value="10"></Setter>
		<Setter Property="FontWeight" Value="Bold"></Setter>
		<Setter Property="VerticalAlignment" Value="Center"></Setter>
	</Style>

	<!--Rounded button style-->

	<Style x:Key="RoundedButton" TargetType="{x:Type Button}">
		<!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>-->
		<Setter Property="Background" Value="{DynamicResource buttonGradient}" />
		<Setter Property="Foreground" Value="Black" />
		<Setter Property="BorderThickness" Value="3" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="0,0,0,0" />
		<Setter Property="Height" Value="22"></Setter>
		<Setter Property="Width" Value="70"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="ShowShine">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.2" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="HideShine">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border CornerRadius="6,6,6,6" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5" x:Name="border" BorderBrush="#c6c7c7">
						<Border.RenderTransform>
							<TransformGroup>
								<ScaleTransform ScaleX="1" ScaleY="1" />
								<SkewTransform AngleX="0" AngleY="0" />
								<RotateTransform Angle="0" />
								<TranslateTransform X="0" Y="0" />
							</TransformGroup>
						</Border.RenderTransform>
						<Border Background="{TemplateBinding Background}" CornerRadius="6,6,6,6" x:Name="border1">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="0.5*" />
									<RowDefinition Height="0.5*" />
								</Grid.RowDefinitions>
								<Border Grid.Row="0" CornerRadius="6,6,6,6">
									<Border.Background>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#00FFFFFF" Offset="0" />
											<GradientStop Color="#7EFFFFFF" Offset="1" />
										</LinearGradientBrush>
									</Border.Background>
								</Border>
								<Border Grid.Row="1" Opacity="0" x:Name="Shine" Width="Auto" Height="Auto" CornerRadius="0,0,3,3" Margin="1,0,-1,0" Background="{TemplateBinding BorderBrush}" />
								<ContentPresenter VerticalAlignment="Center" Grid.RowSpan="2" HorizontalAlignment="Center" x:Name="contentPresenter" />
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="border1" Value="0.5" />
							<Setter Property="Opacity" TargetName="border" Value="1" />
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.5" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" TargetName="border">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1" ScaleY="1" />
										<SkewTransform AngleX="0" AngleY="0" />
										<RotateTransform Angle="0" />
										<TranslateTransform X="0.2" Y="0.2" />
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter Property="BitmapEffect">
								<Setter.Value>
									<OuterGlowBitmapEffect GlowColor="LightGray" GlowSize="4" />
								</Setter.Value>
							</Setter>
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HideShine}" x:Name="HideShine_BeginStoryboard" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="ShowShine_BeginStoryboard" Storyboard="{StaticResource ShowShine}" />
							</Trigger.EnterActions>

							<Setter Property="BitmapEffect">
								<Setter.Value>
									<OuterGlowBitmapEffect GlowColor="White" GlowSize="4" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="RoundedButtonFloatinToolbar" TargetType="{x:Type Button}">
		<!--<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>-->
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="#00030345" />
		<Setter Property="BorderThickness" Value="3" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="0,0,0,0" />
		<Setter Property="Height" Value="22"></Setter>
		<Setter Property="Width" Value="70"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="ShowShine">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0.2" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="HideShine">
							<DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine" Storyboard.TargetProperty="(UIElement.Opacity)">
								<SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border CornerRadius="3,3,3,3" BorderThickness="0" RenderTransformOrigin="0.5,0.5" x:Name="border" BorderBrush="#c6c7c7">
						<Border.RenderTransform>
							<TransformGroup>
								<ScaleTransform ScaleX="1" ScaleY="1" />
								<SkewTransform AngleX="0" AngleY="0" />
								<RotateTransform Angle="0" />
								<TranslateTransform X="0" Y="0" />
							</TransformGroup>
						</Border.RenderTransform>
						<Border Background="{TemplateBinding Background}" CornerRadius="3,3,3,3" x:Name="border1">
							<Grid>
								<Grid.RowDefinitions>
									<RowDefinition Height="0.5*" />
									<RowDefinition Height="0.5*" />
								</Grid.RowDefinitions>
								<Border Grid.Row="0" CornerRadius="3,3,0,0">
									<Border.Background>
										<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
											<GradientStop Color="#00FFFFFF" Offset="0" />
											<GradientStop Color="#7EFFFFFF" Offset="1" />
										</LinearGradientBrush>
									</Border.Background>
								</Border>
								<Border Grid.Row="1" Opacity="0" x:Name="Shine" Width="Auto" Height="Auto" CornerRadius="0,0,3,3" Margin="1,0,-1,0" Background="{TemplateBinding BorderBrush}" />
								<ContentPresenter VerticalAlignment="Center" Grid.RowSpan="2" HorizontalAlignment="Center" x:Name="contentPresenter" />
							</Grid>
						</Border>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="border1" Value="0.5" />
							<Setter Property="Opacity" TargetName="border" Value="1" />
							<Setter Property="Opacity" TargetName="contentPresenter" Value="0.5" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="RenderTransform" TargetName="border">
								<Setter.Value>
									<TransformGroup>
										<ScaleTransform ScaleX="1" ScaleY="1" />
										<SkewTransform AngleX="0" AngleY="0" />
										<RotateTransform Angle="0" />
										<TranslateTransform X="0.2" Y="0.2" />
									</TransformGroup>
								</Setter.Value>
							</Setter>
							<Setter Property="BitmapEffect">
								<Setter.Value>
									<OuterGlowBitmapEffect GlowColor="LightGray" GlowSize="4" />
								</Setter.Value>
							</Setter>
						</Trigger>

						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource HideShine}" x:Name="HideShine_BeginStoryboard" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="ShowShine_BeginStoryboard" Storyboard="{StaticResource ShowShine}" />
							</Trigger.EnterActions>

							<Setter Property="BitmapEffect">
								<Setter.Value>
									<OuterGlowBitmapEffect GlowColor="White" GlowSize="4" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Rounded TextBox Style-->
	<Style x:Key="roundTextBox" TargetType="{x:Type TextBox}">
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="AllowDrop" Value="true" />
		<Setter Property="Background" Value="Transparent"></Setter>
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FontFamily" Value="Segoe UI" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="Padding" Value="2,2,2,2" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Grid>
						<Border x:Name="BorderBase" Background="{DynamicResource textboxGradient}" BorderThickness="1,1,1,1" BorderBrush="DarkGray" CornerRadius="3" />
						<Label x:Name="TextPrompt" Content="{TemplateBinding Tag}" Visibility="Collapsed" Focusable="False" Foreground="Silver"></Label>
						<ScrollViewer Margin="0" x:Name="PART_ContentHost" Foreground="{DynamicResource OutsideFontColor}" />
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsFocused" Value="False"></Condition>
								<Condition Property="Text" Value=""></Condition>
							</MultiTrigger.Conditions>
							<MultiTrigger.Setters>
								<Setter Property="Visibility" TargetName="TextPrompt" Value="Visible"></Setter>
							</MultiTrigger.Setters>
						</MultiTrigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderThickness" TargetName="BorderBase" Value="2,2,1,1"></Setter>
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Foreground" Value="DimGray" />
							<Setter Property="Background" Value="Red" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BitmapEffect">
					<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="LightGray" GlowSize="4" />
					</Setter.Value>
				</Setter>
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BitmapEffect">
					<Setter.Value>
						<OuterGlowBitmapEffect GlowColor="White" GlowSize="4" />
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>

	</Style>


	<Style x:Key="styleButton">
		<Setter Property="Button.Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="#ced2da" Offset="0.2" />
					<GradientStop Color="#b7bec7" Offset="0.25" />
					<GradientStop Color="#ebebeb" Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
		<Setter Property="Button.Height" Value="22"></Setter>
		<Setter Property="Button.Width" Value="70"></Setter>
	</Style>
	<Style x:Key="LightGradient">
		<Setter Property="StatusBarItem.Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="#ced2da" Offset="0.2" />
					<GradientStop Color="#b7bec7" Offset="0.25" />
					<GradientStop Color="#ebebeb" Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DarkGradient">
		<Setter Property="StatusBarItem.Background">
			<Setter.Value>
				<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
					<GradientStop Color="#bcc0c7" Offset="0.2" />
					<GradientStop Color="#a7aeb6" Offset="0.25" />
					<GradientStop Color="#d8d8d8" Offset="1" />
				</LinearGradientBrush>
			</Setter.Value>
		</Setter>
	</Style>

	<!--DockableContentTabItem Style-->
	<Style x:Key="DockableContentTabItemStyle" TargetType="{x:Type ad:DockableContent}">
		<Setter Property="Background" Value="{DynamicResource DockPaneBackground}"></Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ad:DockableContent}">
					<Grid SnapsToDevicePixels="True">
						<Border x:Name="PART_DragArea" BorderBrush="Black" BorderThickness="1,0,1,1" Margin="0,2,-1,0" Background="{DynamicResource DockPaneTabBackground}" Padding="1">
							<Grid Margin="4,0,4,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>
								<TextBlock x:Name="tabItemTitle" Grid.Column="1" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Text="{TemplateBinding Title}" Margin="2,0,0,0" VerticalAlignment="Center" Foreground="White" />
							</Grid>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"></Condition>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource DockPaneTabOver}" TargetName="PART_DragArea" />
							<Setter Property="Panel.ZIndex" Value="99" />
						</MultiTrigger>
						<Trigger Property="Selector.IsSelected" Value="true">
							<Setter Property="BorderBrush" Value="blue"></Setter>
							<Setter Property="Background" Value="{DynamicResource DockPaneTopColor}" TargetName="PART_DragArea" />
							<Setter Property="Margin" Value="0,1,-1,-2" TargetName="PART_DragArea" />
							<Setter Property="Padding" Value="2" TargetName="PART_DragArea" />
							<Setter Property="Panel.ZIndex" Value="100" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!--Brushes for dockable pane headers-->
	<!--<LinearGradientBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DockablePaneTitleBackgroundSelected}}"
                         StartPoint="0,0"
                         EndPoint="0,1">
        <GradientStop Color="#FFFCF2" Offset="0" />
        <GradientStop Color="#FFEDBA" Offset="0.5" />
        <GradientStop Color="#FFE8A6" Offset="0.5" />
        <GradientStop Color="#FFE8A6" Offset="1" />
    </LinearGradientBrush>-->


	<!--DockablePaneTitleBackground-->
	<!--<SolidColorBrush x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DockablePaneTitleBackground}}"
                     Color="#767676"/>-->

	<!--DockablePaneTitleForeground-->
	<!--<SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DockablePaneTitleForeground}}" 
        Color="White"/>-->

	<!--DockablePaneTitleForegroundSelected-->
	<!--<SolidColorBrush 
        x:Key="{ComponentResourceKey TypeInTargetAssembly={x:Type ad:DockingManager}, ResourceId={x:Static ad:AvalonDockBrushes.DockablePaneTitleForegroundSelected}}" 
        Color="White"/>-->

	<!--DockablePane Style-->

	<Style x:Key="DockablePaneStyle">
		<Setter Property="ad:DockablePane.Background" Value="{DynamicResource DockPaneTopColor}"></Setter>
		<Setter Property="ad:DockablePane.Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ad:DockablePane}" x:Name="template">
					<Border Focusable="True" Background="{TemplateBinding Background}">
						<Grid FocusManager.FocusedElement="{Binding ElementName=PART_SelectedContent}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Border x:Name="PART_Header" Grid.Row="0" Focusable="False" Background="{DynamicResource DockPaneTopColor}" BorderThickness="1,1,1,0" BorderBrush="{DynamicResource DockPaneTopColor}" Height="18">
								<DockPanel LastChildFill="True">
									<Button DockPanel.Dock="Right" Style="{DynamicResource PaneHeaderCommandStyle}" Command="ad:DockablePaneCommands.Close" Width="15" Height="15" Margin="2,0,2,0" VerticalAlignment="Center">
										<ad:ImageEx x:Name="IMG_Close" Source="/AvalonDock;component/resources/Images/Classic/PinClose.png" Width="13" Height="13" Stretch="UniformToFill" />
									</Button>
									<Button x:Name="btnPinAutoHide" DockPanel.Dock="Right" Style="{DynamicResource PaneHeaderCommandStyle}" Command="ad:DockablePaneCommands.ToggleAutoHide" Width="15" Height="15" VerticalAlignment="Center">
										<ad:ImageEx x:Name="IMG_AutoHide" Source="/AvalonDock;component/resources/Images/Classic/PinAutoHide.png" Width="13" Height="13" Stretch="UniformToFill" />
									</Button>
									<Button x:Name="PART_ShowContextMenuButton" DockPanel.Dock="Right" Style="{DynamicResource PaneHeaderCommandStyle}" Width="15" Height="15" VerticalAlignment="Center">
										<ad:ImageEx x:Name="IMG_ShowContextMenu" Source="/AvalonDock;component/resources/Images/Classic/PinMenu.png" Width="13" Height="13" Stretch="UniformToFill" />
									</Button>
									<TextBlock Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.Title}" x:Name="paneTitle" Grid.Row="0" Margin="2,0,0,0" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" VerticalAlignment="Center" Foreground="White" />
								</DockPanel>
							</Border>
							<Border Grid.Row="1" BorderThickness="1,0,1,1" BorderBrush="{StaticResource DockPaneTopColor}" Background="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.Background}">
								<ContentPresenter x:Name="PART_SelectedContent" Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SelectedItem.Content}" KeyboardNavigation.TabNavigation="Local" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="1" />
							</Border>
							<Border x:Name="PART_Tabs" Grid.Row="2" Margin="0,2,0,0" Height="23" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource DockPaneTopColor}"></Border>
							<ad:DockableTabPanel Grid.Row="2" Height="22" KeyboardNavigation.TabIndex="2" IsItemsHost="True" x:Name="paneTabsPanel" Margin="0,0,0,2" TabItemStyle="{DynamicResource DockableContentTabItemStyle}" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=SelectedItem.IsActiveContent}" Value="True">
							<Setter Property="Background" Value="{DynamicResource DockPaneTabBackground}" TargetName="PART_Header" />
							<Setter Property="Foreground" Value="White" TargetName="paneTitle" />
							<Setter Property="Source" Value="/AvalonDock;component/resources/Images/Classic/PinMenuSelected.png" TargetName="IMG_ShowContextMenu" />
							<Setter Property="Source" Value="/AvalonDock;component/resources/Images/Classic/PinAutoHideSelected.png" TargetName="IMG_AutoHide" />
							<Setter Property="Source" Value="/AvalonDock;component/resources/Images/Classic/PinCloseSelected.png" TargetName="IMG_Close" />
						</DataTrigger>
						<Trigger Property="ShowHeader" Value="False">
							<Setter Property="Visibility" Value="Collapsed" TargetName="PART_Header" />
						</Trigger>
						<Trigger Property="ShowTabs" Value="False">
							<Setter Property="Visibility" Value="Collapsed" TargetName="PART_Tabs" />
						</Trigger>
						<Trigger Property="HasSingleItem" Value="True">
							<Setter Property="Visibility" Value="Collapsed" TargetName="PART_Tabs" />
							<Setter Property="Visibility" Value="Collapsed" TargetName="paneTabsPanel" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Header" Property="Background" Value="{DynamicResource DockPaneTabBackground}" />
						</MultiTrigger>
						<!--<DataTrigger Binding="{Binding RelativeSource={RelativeSource Self},  Path=SelectedItem}" Value="AutoHide">
                            <Setter Property="LayoutTransform" TargetName="btnPinAutoHide">
                                <Setter.Value>
                                    <RotateTransform Angle="180"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>-->
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


	<!--AnchorTab Group-->

	<Style TargetType="{x:Type ad:DockablePaneAnchorTabGroup}">
		<Setter Property="Orientation" Value="Horizontal" />
		<Setter Property="Margin" Value="10,0,0,0" />
	</Style>

	<!--AnchorTab Style-->

	<Style TargetType="{x:Type ad:DockablePaneAnchorTab}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ad:DockablePaneAnchorTab}">
					<Grid>
						<Border Name="PART_Border" BorderThickness="1,0,1,1" BorderBrush="Black" Background="{DynamicResource DockPaneTabBackground}">
							<!--<StackPanel Orientation="Horizontal">-->
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
								</Grid.ColumnDefinitions>

								<Border Grid.Column="0" Width="auto" MinWidth="2" Height="20">
									<Border.Background>
										<VisualBrush Stretch="None" Visual="{Binding Path=ReferencedContent.Icon, RelativeSource={RelativeSource TemplatedParent}}" />
									</Border.Background>
								</Border>
								<TextBlock Grid.Column="1" Text="{Binding Path=ReferencedContent.Title, RelativeSource={RelativeSource TemplatedParent}}" Foreground="White" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="4,2,2,2" Height="auto" Width="auto" />
							</Grid>
							<!--</StackPanel>-->
						</Border>
					</Grid>
					<ControlTemplate.Triggers>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"></Condition>
								<Condition Property="Anchor">
									<Condition.Value>
										<ad:AnchorStyle>Left</ad:AnchorStyle>
									</Condition.Value>
								</Condition>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource DockPaneTabOver}" TargetName="PART_Border" />
							<Setter Property="BorderThickness" Value="1,1,1,1" TargetName="PART_Border" />
							<Setter Property="BorderBrush" Value="Black" TargetName="PART_Border" />
							<Setter Property="Panel.ZIndex" Value="99" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"></Condition>
								<Condition Property="Anchor">
									<Condition.Value>
										<ad:AnchorStyle>Top</ad:AnchorStyle>
									</Condition.Value>
								</Condition>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource DockPaneTabOver}" TargetName="PART_Border" />
							<Setter Property="BorderThickness" Value="1,1,1,1" TargetName="PART_Border" />
							<Setter Property="BorderBrush" Value="Black" TargetName="PART_Border" />
							<Setter Property="Panel.ZIndex" Value="99" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"></Condition>
								<Condition Property="Anchor">
									<Condition.Value>
										<ad:AnchorStyle>Bottom</ad:AnchorStyle>
									</Condition.Value>
								</Condition>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource DockPaneTabOver}" TargetName="PART_Border" />
							<Setter Property="BorderThickness" Value="1,1,1,0" TargetName="PART_Border" />
							<Setter Property="BorderBrush" Value="Black" TargetName="PART_Border" />
							<Setter Property="Panel.ZIndex" Value="99" />
						</MultiTrigger>

						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"></Condition>
								<Condition Property="Anchor">
									<Condition.Value>
										<ad:AnchorStyle>Right</ad:AnchorStyle>
									</Condition.Value>
								</Condition>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource DockPaneTabOver}" TargetName="PART_Border" />
							<Setter Property="BorderThickness" Value="1,1,1,0" TargetName="PART_Border" />
							<Setter Property="BorderBrush" Value="Black" TargetName="PART_Border" />
							<Setter Property="Panel.ZIndex" Value="99" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Ribbon:RibbonButton}" BasedOn="{StaticResource {x:Type Ribbon:RibbonButton}}">
		<!--<Setter Property="Background" Value="{DynamicResource RibbonButtonBackground}" />-->
		<Setter Property="Foreground" Value="Black"></Setter>
	</Style>

	<Style TargetType="{x:Type Ribbon:RibbonToggleButton}" BasedOn="{StaticResource {x:Type Ribbon:RibbonToggleButton}}">
		<!--<Setter Property="Background" Value="{DynamicResource RibbonButtonBackground}" />-->
		<Setter Property="Foreground" Value="Black"></Setter>
	</Style>

	<Style TargetType="{x:Type Ribbon:RibbonQuickAccessToolBar}" BasedOn="{StaticResource {x:Type Ribbon:RibbonQuickAccessToolBar}}">
		<Setter Property="Background" Value="{DynamicResource RibbonButtonBackground}"></Setter>
		<Setter Property="Height" Value="22"></Setter>
		<Setter Property="Margin" Value="0,0,0,1"></Setter>
	</Style>


	<!-- Styles for TIPS WINDOW -->

	<Style x:Key="TipsCheckBox" TargetType="{x:Type CheckBox}">
		<Setter Property="Foreground" Value="White" />
		<Setter Property="Padding" Value="0,0,0,0" />
		<Setter Property="FontFamily" Value="Verdana" />
		<Setter Property="FontSize" Value="10" />
		<Setter Property="FontWeight" Value="Bold" />
	</Style>

</ResourceDictionary>