// File generated by CPPExt (Package)
//

#ifndef _Hermit_OCWrappers_HeaderFile
#define _Hermit_OCWrappers_HeaderFile

// Include the wrapped header
#include <Hermit.hxx>



namespace OCNaroWrappers
{
//! This  is used to  reparameterize Rational  BSpline <br>
//!           Curves so that we can   concatenate them later to <br>
//!          build C1 Curves  It builds and 1D-reparameterizing <br>
//!          function starting from an Hermite interpolation and <br>
//!          adding knots and modifying poles of the 1D BSpline <br>
//!          obtained that way. The goal is to build a(u) so that <br>
//!          if we consider a BSpline curve <br>
//!                          N(u) <br>
//!                 f(u) =  ----- <br>
//!                          D(u) <br>
//! <br>
//!          the function a(u)D(u) has value 1 at the umin and umax <br>
//!          and has 0.0e0 derivative value a umin and umax. <br>
//!          The details of the computation occuring in this package <br>
//!          can be found by reading : <br>
//!          " Etude sur la concatenation de NURBS en vue du <br>
//!            balayage de surfaces" PFE n S85 Ensam Lille <br>
public ref class OCHermit abstract sealed
{

public:
// Methods


static /*instead*/  OCGeom2d_BSplineCurve^ Solution(OCNaroWrappers::OCGeom_BSplineCurve^ BS, Standard_Real TolPoles, Standard_Real TolKnots) ;


static /*instead*/  OCGeom2d_BSplineCurve^ Solution(OCNaroWrappers::OCGeom2d_BSplineCurve^ BS, Standard_Real TolPoles, Standard_Real TolKnots) ;

//!returns the knots to insert to a(u) to <br>
//!         stay with a constant sign and in the <br>
//!         tolerances. <br>
static /*instead*/  void Solutionbis(OCNaroWrappers::OCGeom_BSplineCurve^ BS, Standard_Real& Knotmin, Standard_Real& Knotmax, Standard_Real TolPoles, Standard_Real TolKnots) ;


};

}; // OCNaroWrappers

#endif
