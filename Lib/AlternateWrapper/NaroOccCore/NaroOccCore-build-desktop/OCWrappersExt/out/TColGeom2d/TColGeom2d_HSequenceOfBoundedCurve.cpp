// File generated by CPPExt (CPP file)
//

#include "TColGeom2d_HSequenceOfBoundedCurve.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_BoundedCurve.h"
#include "TColGeom2d_SequenceOfBoundedCurve.h"


using namespace OCNaroWrappers;

OCTColGeom2d_HSequenceOfBoundedCurve::OCTColGeom2d_HSequenceOfBoundedCurve(Handle(TColGeom2d_HSequenceOfBoundedCurve)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TColGeom2d_HSequenceOfBoundedCurve(*nativeHandle);
}

OCTColGeom2d_HSequenceOfBoundedCurve::OCTColGeom2d_HSequenceOfBoundedCurve() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TColGeom2d_HSequenceOfBoundedCurve(new TColGeom2d_HSequenceOfBoundedCurve());
}

 System::Boolean OCTColGeom2d_HSequenceOfBoundedCurve::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCTColGeom2d_HSequenceOfBoundedCurve::Length()
{
  return (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Length();
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::Clear()
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Clear();
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::Append(OCNaroWrappers::OCGeom2d_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Append(*((Handle_Geom2d_BoundedCurve*)anItem->Handle));
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::Append(OCNaroWrappers::OCTColGeom2d_HSequenceOfBoundedCurve^ aSequence)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Append(*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)aSequence->Handle));
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::Prepend(OCNaroWrappers::OCGeom2d_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Prepend(*((Handle_Geom2d_BoundedCurve*)anItem->Handle));
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::Prepend(OCNaroWrappers::OCTColGeom2d_HSequenceOfBoundedCurve^ aSequence)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Prepend(*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)aSequence->Handle));
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::Reverse()
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Reverse();
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCGeom2d_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->InsertBefore(anIndex, *((Handle_Geom2d_BoundedCurve*)anItem->Handle));
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCTColGeom2d_HSequenceOfBoundedCurve^ aSequence)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->InsertBefore(anIndex, *((Handle_TColGeom2d_HSequenceOfBoundedCurve*)aSequence->Handle));
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCGeom2d_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->InsertAfter(anIndex, *((Handle_Geom2d_BoundedCurve*)anItem->Handle));
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCTColGeom2d_HSequenceOfBoundedCurve^ aSequence)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->InsertAfter(anIndex, *((Handle_TColGeom2d_HSequenceOfBoundedCurve*)aSequence->Handle));
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCTColGeom2d_HSequenceOfBoundedCurve^ OCTColGeom2d_HSequenceOfBoundedCurve::Split(Standard_Integer anIndex)
{
  Handle(TColGeom2d_HSequenceOfBoundedCurve) tmp = (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Split(anIndex);
  return gcnew OCTColGeom2d_HSequenceOfBoundedCurve(&tmp);
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCGeom2d_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->SetValue(anIndex, *((Handle_Geom2d_BoundedCurve*)anItem->Handle));
}

OCGeom2d_BoundedCurve^ OCTColGeom2d_HSequenceOfBoundedCurve::Value(Standard_Integer anIndex)
{
  Handle(Geom2d_BoundedCurve) tmp = (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Value(anIndex);
  return gcnew OCGeom2d_BoundedCurve(&tmp);
}

OCGeom2d_BoundedCurve^ OCTColGeom2d_HSequenceOfBoundedCurve::ChangeValue(Standard_Integer anIndex)
{
  Handle(Geom2d_BoundedCurve) tmp = (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCGeom2d_BoundedCurve(&tmp);
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::Remove(Standard_Integer anIndex)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Remove(anIndex);
}

 void OCTColGeom2d_HSequenceOfBoundedCurve::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCTColGeom2d_SequenceOfBoundedCurve^ OCTColGeom2d_HSequenceOfBoundedCurve::Sequence()
{
  TColGeom2d_SequenceOfBoundedCurve* tmp = new TColGeom2d_SequenceOfBoundedCurve();
  *tmp = (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->Sequence();
  return gcnew OCTColGeom2d_SequenceOfBoundedCurve(tmp);
}

OCTColGeom2d_SequenceOfBoundedCurve^ OCTColGeom2d_HSequenceOfBoundedCurve::ChangeSequence()
{
  TColGeom2d_SequenceOfBoundedCurve* tmp = new TColGeom2d_SequenceOfBoundedCurve();
  *tmp = (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->ChangeSequence();
  return gcnew OCTColGeom2d_SequenceOfBoundedCurve(tmp);
}

OCTColGeom2d_HSequenceOfBoundedCurve^ OCTColGeom2d_HSequenceOfBoundedCurve::ShallowCopy()
{
  Handle(TColGeom2d_HSequenceOfBoundedCurve) tmp = (*((Handle_TColGeom2d_HSequenceOfBoundedCurve*)nativeHandle))->ShallowCopy();
  return gcnew OCTColGeom2d_HSequenceOfBoundedCurve(&tmp);
}


