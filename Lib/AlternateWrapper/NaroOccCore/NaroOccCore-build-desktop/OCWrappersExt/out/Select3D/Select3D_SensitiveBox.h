// File generated by CPPExt (Transient)
//
#ifndef _Select3D_SensitiveBox_OCWrappers_HeaderFile
#define _Select3D_SensitiveBox_OCWrappers_HeaderFile

// include the wrapped class
#include <Select3D_SensitiveBox.hxx>
#include "../Converter.h"

#include "Select3D_SensitiveEntity.h"

#include "../Bnd/Bnd_Box.h"
#include "../Bnd/Bnd_Box2d.h"


namespace OCNaroWrappers
{

ref class OCSelectBasics_EntityOwner;
ref class OCBnd_Box;
ref class OCSelect3D_Projector;
ref class OCSelectBasics_ListOfBox2d;
ref class OCSelect3D_SensitiveEntity;
ref class OCTopLoc_Location;
ref class OCTColgp_Array1OfPnt2d;
ref class OCBnd_Box2d;
ref class OCgp_Lin;


//! A framework to define selection by a sensitive box. <br>
public ref class OCSelect3D_SensitiveBox : OCSelect3D_SensitiveEntity {

protected:
  // dummy constructor;
  OCSelect3D_SensitiveBox(OCDummy^) : OCSelect3D_SensitiveEntity((OCDummy^)nullptr) {};

public:

// constructor from native
OCSelect3D_SensitiveBox(Handle(Select3D_SensitiveBox)* nativeHandle);

// Methods PUBLIC

//! Constructs a sensitive box object defined by the <br>
//! owner OwnerId, and the bounding box BoundingBox. <br>
OCSelect3D_SensitiveBox(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCBnd_Box^ BoundingBox);

//! Constructs a sensitive box object defined by the <br>
//! owner OwnerId, and the coordinates Xmin, YMin, ZMin, XMax, YMax, ZMax. <br>
//! Xmin, YMin and ZMin define the minimum point in <br>
//! the front lower left hand corner of the box, <br>
//! and   XMax, YMax   and ZMax define the maximum <br>
//! point in the back upper right hand corner of the box. <br>
OCSelect3D_SensitiveBox(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, Standard_Real XMin, Standard_Real YMin, Standard_Real ZMin, Standard_Real XMax, Standard_Real YMax, Standard_Real ZMax);

//! projection of the sensitive primitive in order to <br>
//!          get 2D boxes for the Sort Algorithm <br>
virtual /*instead*/  void Project(OCNaroWrappers::OCSelect3D_Projector^ aProjector) override;

//! gives the 2D boxes which represent the Box in the <br>
//!          selection process... <br>
virtual /*instead*/  void Areas(OCNaroWrappers::OCSelectBasics_ListOfBox2d^ boxes) ;


virtual /*instead*/  OCSelect3D_SensitiveEntity^ GetConnected(OCNaroWrappers::OCTopLoc_Location^ aLocation) override;


//! <br>
virtual /*instead*/  System::Boolean Matches(Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin) override;


virtual /*instead*/  System::Boolean Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol) override;


virtual /*instead*/  System::Boolean Matches(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCBnd_Box2d^ aBox, Standard_Real aTol) override;


virtual /*instead*/  Standard_Real ComputeDepth(OCNaroWrappers::OCgp_Lin^ EyeLine) ;


virtual /*instead*/  void Dump(Standard_OStream& S, System::Boolean FullDump) override;

//! Returns the sensitive 3D box used at the time of construction. <br>
 /*instead*/  OCBnd_Box^ Box() ;

~OCSelect3D_SensitiveBox()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
