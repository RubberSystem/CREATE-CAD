// File generated by CPPExt (Transient)
//
#ifndef _Select3D_SensitiveCurve_OCWrappers_HeaderFile
#define _Select3D_SensitiveCurve_OCWrappers_HeaderFile

// include the wrapped class
#include <Select3D_SensitiveCurve.hxx>
#include "../Converter.h"

#include "Select3D_SensitivePoly.h"



namespace OCNaroWrappers
{

ref class OCGeom_Curve;
ref class OCSelectBasics_EntityOwner;
ref class OCTColgp_HArray1OfPnt;
ref class OCTColgp_Array1OfPnt;
ref class OCTColgp_Array1OfPnt2d;
ref class OCBnd_Box2d;
ref class OCgp_Lin;
ref class OCSelect3D_SensitiveEntity;
ref class OCTopLoc_Location;


//! A framework to define a sensitive 3D curve. <br>
//! In some cases this class can raise Standard_ConstructionError and <br>
//! Standard_OutOfRange exceptions. For more details see Select3D_SensitivePoly. <br>
public ref class OCSelect3D_SensitiveCurve : OCSelect3D_SensitivePoly {

protected:
  // dummy constructor;
  OCSelect3D_SensitiveCurve(OCDummy^) : OCSelect3D_SensitivePoly((OCDummy^)nullptr) {};

public:

// constructor from native
OCSelect3D_SensitiveCurve(Handle(Select3D_SensitiveCurve)* nativeHandle);

// Methods PUBLIC

//! Constructs a sensitive curve object defined by the <br>
//! owner OwnerId, the curve TheCurve, and the <br>
//! maximum number of points on the curve: MaxPoints. <br>
OCSelect3D_SensitiveCurve(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCGeom_Curve^ TheCurve, Standard_Integer MaxPoints);

//! Constructs a sensitive curve object defined by the <br>
//! owner OwnerId and the set of points ThePoints. <br>
OCSelect3D_SensitiveCurve(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCTColgp_HArray1OfPnt^ ThePoints);

//! Creation of Sensitive Curve from Points. <br>
//!          Warning : This Method should disappear in the next version... <br>
OCSelect3D_SensitiveCurve(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCTColgp_Array1OfPnt^ ThePoints);


virtual /*instead*/  System::Boolean Matches(Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin) override;


virtual /*instead*/  System::Boolean Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol) override;


virtual /*instead*/  System::Boolean Matches(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCBnd_Box2d^ aBox, Standard_Real aTol) override;


virtual /*instead*/  Standard_Real ComputeDepth(OCNaroWrappers::OCgp_Lin^ EyeLine) ;

//! Gets index of last detected segment <br>
 /*instead*/  Standard_Integer GetLastDetected() ;


virtual /*instead*/  void Dump(Standard_OStream& S, System::Boolean FullDump) override;

//! Returns the copy of this <br>
virtual /*instead*/  OCSelect3D_SensitiveEntity^ GetConnected(OCNaroWrappers::OCTopLoc_Location^ theLocation) override;

~OCSelect3D_SensitiveCurve()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
