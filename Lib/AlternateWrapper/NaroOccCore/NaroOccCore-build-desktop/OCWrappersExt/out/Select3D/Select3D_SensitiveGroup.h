// File generated by CPPExt (Transient)
//
#ifndef _Select3D_SensitiveGroup_OCWrappers_HeaderFile
#define _Select3D_SensitiveGroup_OCWrappers_HeaderFile

// include the wrapped class
#include <Select3D_SensitiveGroup.hxx>
#include "../Converter.h"

#include "Select3D_SensitiveEntity.h"

#include "Select3D_ListOfSensitive.h"


namespace OCNaroWrappers
{

ref class OCSelectBasics_EntityOwner;
ref class OCSelect3D_ListOfSensitive;
ref class OCSelect3D_SensitiveEntity;
ref class OCSelect3D_Projector;
ref class OCSelectBasics_ListOfBox2d;
ref class OCTopLoc_Location;
ref class OCTColgp_Array1OfPnt2d;
ref class OCBnd_Box2d;
ref class OCgp_Lin;


//! A framework to define selection of a sensitive group <br>
//!          by a sensitive entity which is a set of 3D sensitive entities. <br>
//!          Remark: 2 modes are possible for rectangle selection <br>
//!          the group is considered selected <br>
//!          1) when all the entities inside are selected in the rectangle <br>
//!          2) only one entity inside is selected by the rectangle <br>
//!          By default the "Match All entities" mode is set. <br>
public ref class OCSelect3D_SensitiveGroup : OCSelect3D_SensitiveEntity {

protected:
  // dummy constructor;
  OCSelect3D_SensitiveGroup(OCDummy^) : OCSelect3D_SensitiveEntity((OCDummy^)nullptr) {};

public:

// constructor from native
OCSelect3D_SensitiveGroup(Handle(Select3D_SensitiveGroup)* nativeHandle);

// Methods PUBLIC

//! Constructs an empty sensitive group object. <br>
//! This is a set of sensitive 3D entities. The sensitive <br>
//! entities will be defined using the function Add to fill <br>
//! the entity owner OwnerId. If MatchAll is false, nothing can be added. <br>
OCSelect3D_SensitiveGroup(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, System::Boolean MatchAll);

//! Constructs a sensitive group object defined by the list <br>
//! TheList and the entity owner OwnerId. If MatchAll is false, nothing is done. <br>
OCSelect3D_SensitiveGroup(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCSelect3D_ListOfSensitive^ TheList, System::Boolean MatchAll);

//! Adds the list of sensitive entities LL to the empty <br>
//! sensitive group object created at construction time. <br>
 /*instead*/  void Add(OCNaroWrappers::OCSelect3D_ListOfSensitive^ LL) ;

//! Adds the sensitive entity aSensitive to the non-empty <br>
//! sensitive group object created at construction time. <br>
 /*instead*/  void Add(OCNaroWrappers::OCSelect3D_SensitiveEntity^ aSensitive) ;


 /*instead*/  void Remove(OCNaroWrappers::OCSelect3D_SensitiveEntity^ aSensitive) ;

//! Removes all sensitive entities from the list used at the <br>
//! time of construction, or added using the function Add. <br>
 /*instead*/  void Clear() ;

//! Returns true if the sensitive entity aSensitive is in <br>
//! the list used at the time of construction, or added using the function Add. <br>
 /*instead*/  System::Boolean IsIn(OCNaroWrappers::OCSelect3D_SensitiveEntity^ aSensitive) ;

//! Sets the requirement that all sensitive entities in the <br>
//! list used at the time of construction, or added using <br>
//! the function Add must be matched. <br>
 /*instead*/  void Set(System::Boolean MustMatchAllEntities) ;

//! Returns true if all sensitive entities in the list used <br>
//! at the time of construction, or added using the function Add must be matched. <br>
 /*instead*/  System::Boolean MustMatchAll() ;

//! projection of the sensitive primitive in order to <br>
//!          get 2D boxes for the Sort Algorithm <br>
virtual /*instead*/  void Project(OCNaroWrappers::OCSelect3D_Projector^ aProjector) override;

//! gives the 2D boxes which represent the segment in the <br>
//!          selection process... <br>
virtual /*instead*/  void Areas(OCNaroWrappers::OCSelectBasics_ListOfBox2d^ boxes) ;


virtual /*instead*/  Standard_Integer MaxBoxes() override;


virtual /*instead*/  OCSelect3D_SensitiveEntity^ GetConnected(OCNaroWrappers::OCTopLoc_Location^ aLocation) override;

//!  propagation of location on all the sensitive inside... <br>
virtual /*instead*/  void SetLocation(OCNaroWrappers::OCTopLoc_Location^ aLoc) override;

//!  propagation of location on all the sensitive inside... <br>
virtual /*instead*/  void ResetLocation() override;

//! projection of the sensitive primitive in order to <br>
//!          get 2D boxes for the Sort Algorithm <br>
virtual /*instead*/  System::Boolean Matches(Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin) override;


virtual /*instead*/  System::Boolean Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol) override;


virtual /*instead*/  System::Boolean Matches(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCBnd_Box2d^ aBox, Standard_Real aTol) override;

//! returns the depth of the touched entity <br>
virtual /*instead*/  Standard_Real ComputeDepth(OCNaroWrappers::OCgp_Lin^ EyeLine) ;


virtual /*instead*/  void SetLastPrj(OCNaroWrappers::OCSelect3D_Projector^ aPrj) override;

//! Sets the owner for all entities in group <br>
virtual /*instead*/  void Set(OCNaroWrappers::OCSelectBasics_EntityOwner^ TheOwnerId) override;

//! Gets group content <br>
 /*instead*/  OCSelect3D_ListOfSensitive^ GetEntities() ;

~OCSelect3D_SensitiveGroup()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
