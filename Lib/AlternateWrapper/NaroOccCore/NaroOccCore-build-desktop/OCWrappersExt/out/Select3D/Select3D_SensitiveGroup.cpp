// File generated by CPPExt (CPP file)
//

#include "Select3D_SensitiveGroup.h"
#include "../Converter.h"
#include "../SelectBasics/SelectBasics_EntityOwner.h"
#include "Select3D_ListOfSensitive.h"
#include "Select3D_SensitiveEntity.h"
#include "Select3D_Projector.h"
#include "../SelectBasics/SelectBasics_ListOfBox2d.h"
#include "../TopLoc/TopLoc_Location.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../Bnd/Bnd_Box2d.h"
#include "../gp/gp_Lin.h"


using namespace OCNaroWrappers;

OCSelect3D_SensitiveGroup::OCSelect3D_SensitiveGroup(Handle(Select3D_SensitiveGroup)* nativeHandle) : OCSelect3D_SensitiveEntity((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Select3D_SensitiveGroup(*nativeHandle);
}

OCSelect3D_SensitiveGroup::OCSelect3D_SensitiveGroup(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, System::Boolean MatchAll) : OCSelect3D_SensitiveEntity((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Select3D_SensitiveGroup(new Select3D_SensitiveGroup(*((Handle_SelectBasics_EntityOwner*)OwnerId->Handle), OCConverter::BooleanToStandardBoolean(MatchAll)));
}

OCSelect3D_SensitiveGroup::OCSelect3D_SensitiveGroup(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCSelect3D_ListOfSensitive^ TheList, System::Boolean MatchAll) : OCSelect3D_SensitiveEntity((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Select3D_SensitiveGroup(new Select3D_SensitiveGroup(*((Handle_SelectBasics_EntityOwner*)OwnerId->Handle), *((Select3D_ListOfSensitive*)TheList->Handle), OCConverter::BooleanToStandardBoolean(MatchAll)));
}

 void OCSelect3D_SensitiveGroup::Add(OCNaroWrappers::OCSelect3D_ListOfSensitive^ LL)
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Add(*((Select3D_ListOfSensitive*)LL->Handle));
}

 void OCSelect3D_SensitiveGroup::Add(OCNaroWrappers::OCSelect3D_SensitiveEntity^ aSensitive)
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Add(*((Handle_Select3D_SensitiveEntity*)aSensitive->Handle));
}

 void OCSelect3D_SensitiveGroup::Remove(OCNaroWrappers::OCSelect3D_SensitiveEntity^ aSensitive)
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Remove(*((Handle_Select3D_SensitiveEntity*)aSensitive->Handle));
}

 void OCSelect3D_SensitiveGroup::Clear()
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Clear();
}

 System::Boolean OCSelect3D_SensitiveGroup::IsIn(OCNaroWrappers::OCSelect3D_SensitiveEntity^ aSensitive)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Select3D_SensitiveGroup*)nativeHandle))->IsIn(*((Handle_Select3D_SensitiveEntity*)aSensitive->Handle)));
}

 void OCSelect3D_SensitiveGroup::Set(System::Boolean MustMatchAllEntities)
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Set(OCConverter::BooleanToStandardBoolean(MustMatchAllEntities));
}

 System::Boolean OCSelect3D_SensitiveGroup::MustMatchAll()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Select3D_SensitiveGroup*)nativeHandle))->MustMatchAll());
}

 void OCSelect3D_SensitiveGroup::Project(OCNaroWrappers::OCSelect3D_Projector^ aProjector)
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Project(*((Handle_Select3D_Projector*)aProjector->Handle));
}

 void OCSelect3D_SensitiveGroup::Areas(OCNaroWrappers::OCSelectBasics_ListOfBox2d^ boxes)
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Areas(*((SelectBasics_ListOfBox2d*)boxes->Handle));
}

 Standard_Integer OCSelect3D_SensitiveGroup::MaxBoxes()
{
  return (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->MaxBoxes();
}

OCSelect3D_SensitiveEntity^ OCSelect3D_SensitiveGroup::GetConnected(OCNaroWrappers::OCTopLoc_Location^ aLocation)
{
  Handle(Select3D_SensitiveEntity) tmp = (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->GetConnected(*((TopLoc_Location*)aLocation->Handle));
  return gcnew OCSelect3D_SensitiveEntity(&tmp);
}

 void OCSelect3D_SensitiveGroup::SetLocation(OCNaroWrappers::OCTopLoc_Location^ aLoc)
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->SetLocation(*((TopLoc_Location*)aLoc->Handle));
}

 void OCSelect3D_SensitiveGroup::ResetLocation()
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->ResetLocation();
}

 System::Boolean OCSelect3D_SensitiveGroup::Matches(Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Matches(X, Y, aTol, DMin));
}

 System::Boolean OCSelect3D_SensitiveGroup::Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Matches(XMin, YMin, XMax, YMax, aTol));
}

 System::Boolean OCSelect3D_SensitiveGroup::Matches(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCBnd_Box2d^ aBox, Standard_Real aTol)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Matches(*((TColgp_Array1OfPnt2d*)Polyline->Handle), *((Bnd_Box2d*)aBox->Handle), aTol));
}

 Standard_Real OCSelect3D_SensitiveGroup::ComputeDepth(OCNaroWrappers::OCgp_Lin^ EyeLine)
{
  return (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->ComputeDepth(*((gp_Lin*)EyeLine->Handle));
}

 void OCSelect3D_SensitiveGroup::SetLastPrj(OCNaroWrappers::OCSelect3D_Projector^ aPrj)
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->SetLastPrj(*((Handle_Select3D_Projector*)aPrj->Handle));
}

 void OCSelect3D_SensitiveGroup::Set(OCNaroWrappers::OCSelectBasics_EntityOwner^ TheOwnerId)
{
  (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->Set(*((Handle_SelectBasics_EntityOwner*)TheOwnerId->Handle));
}

OCSelect3D_ListOfSensitive^ OCSelect3D_SensitiveGroup::GetEntities()
{
  Select3D_ListOfSensitive* tmp = new Select3D_ListOfSensitive();
  *tmp = (*((Handle_Select3D_SensitiveGroup*)nativeHandle))->GetEntities();
  return gcnew OCSelect3D_ListOfSensitive(tmp);
}


