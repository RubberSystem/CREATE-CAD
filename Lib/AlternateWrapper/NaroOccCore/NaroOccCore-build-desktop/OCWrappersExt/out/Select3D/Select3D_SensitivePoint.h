// File generated by CPPExt (Transient)
//
#ifndef _Select3D_SensitivePoint_OCWrappers_HeaderFile
#define _Select3D_SensitivePoint_OCWrappers_HeaderFile

// include the wrapped class
#include <Select3D_SensitivePoint.hxx>
#include "../Converter.h"

#include "Select3D_SensitiveEntity.h"



namespace OCNaroWrappers
{

ref class OCSelectBasics_EntityOwner;
ref class OCgp_Pnt;
ref class OCSelect3D_Projector;
ref class OCSelectBasics_ListOfBox2d;
ref class OCSelect3D_SensitiveEntity;
ref class OCTopLoc_Location;
ref class OCTColgp_Array1OfPnt2d;
ref class OCBnd_Box2d;
ref class OCgp_Lin;


//! A framework to define sensitive 3D points. <br>
public ref class OCSelect3D_SensitivePoint : OCSelect3D_SensitiveEntity {

protected:
  // dummy constructor;
  OCSelect3D_SensitivePoint(OCDummy^) : OCSelect3D_SensitiveEntity((OCDummy^)nullptr) {};

public:

// constructor from native
OCSelect3D_SensitivePoint(Handle(Select3D_SensitivePoint)* nativeHandle);

// Methods PUBLIC

//! Constructs a sensitive point object defined by the <br>
//! owner OwnerId and the point Point. <br>
OCSelect3D_SensitivePoint(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCgp_Pnt^ Point);

//!Converts the stored 3D point into a 2D point according <br>
//!         to <aProjector> ; this method is called by the selection Manager. <br>
virtual /*instead*/  void Project(OCNaroWrappers::OCSelect3D_Projector^ aProjector) override;

//! stores in <aresult> the 2D sensitive box which represents <br>
//!          the point area in the selection process. <br>
virtual /*instead*/  void Areas(OCNaroWrappers::OCSelectBasics_ListOfBox2d^ aresult) ;


virtual /*instead*/  OCSelect3D_SensitiveEntity^ GetConnected(OCNaroWrappers::OCTopLoc_Location^ aLocation) override;

//! returns true if the X,Y position matches the point <br>
//!          else gives the distance between them. <br>
virtual /*instead*/  System::Boolean Matches(Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin) override;


virtual /*instead*/  System::Boolean Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol) override;


virtual /*instead*/  System::Boolean Matches(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCBnd_Box2d^ aBox, Standard_Real aTol) override;


virtual /*instead*/  Standard_Real ComputeDepth(OCNaroWrappers::OCgp_Lin^ EyeLine) ;

//! Returns the point used at the time of construction. <br>
 /*instead*/  OCgp_Pnt^ Point() ;


virtual /*instead*/  void Dump(Standard_OStream& S, System::Boolean FullDump) override;

~OCSelect3D_SensitivePoint()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
