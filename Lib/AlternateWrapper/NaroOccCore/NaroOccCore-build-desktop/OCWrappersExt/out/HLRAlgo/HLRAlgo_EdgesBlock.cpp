// File generated by CPPExt (CPP file)
//

#include "HLRAlgo_EdgesBlock.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCHLRAlgo_EdgesBlock::OCHLRAlgo_EdgesBlock(Handle(HLRAlgo_EdgesBlock)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_HLRAlgo_EdgesBlock(*nativeHandle);
}

OCHLRAlgo_EdgesBlock::OCHLRAlgo_EdgesBlock(Standard_Integer NbEdges) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_HLRAlgo_EdgesBlock(new HLRAlgo_EdgesBlock(NbEdges));
}

 Standard_Integer OCHLRAlgo_EdgesBlock::NbEdges()
{
  return (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->NbEdges();
}

 void OCHLRAlgo_EdgesBlock::Edge(Standard_Integer I, Standard_Integer EI)
{
  (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->Edge(I, EI);
}

 Standard_Integer OCHLRAlgo_EdgesBlock::Edge(Standard_Integer I)
{
  return (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->Edge(I);
}

 void OCHLRAlgo_EdgesBlock::Orientation(Standard_Integer I, OCTopAbs_Orientation Or)
{
  (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->Orientation(I, (TopAbs_Orientation)Or);
}

 OCTopAbs_Orientation OCHLRAlgo_EdgesBlock::Orientation(Standard_Integer I)
{
  return (OCTopAbs_Orientation)((*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->Orientation(I));
}

 System::Boolean OCHLRAlgo_EdgesBlock::OutLine(Standard_Integer I)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->OutLine(I));
}

 void OCHLRAlgo_EdgesBlock::OutLine(Standard_Integer I, System::Boolean B)
{
  (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->OutLine(I, OCConverter::BooleanToStandardBoolean(B));
}

 System::Boolean OCHLRAlgo_EdgesBlock::Internal(Standard_Integer I)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->Internal(I));
}

 void OCHLRAlgo_EdgesBlock::Internal(Standard_Integer I, System::Boolean B)
{
  (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->Internal(I, OCConverter::BooleanToStandardBoolean(B));
}

 System::Boolean OCHLRAlgo_EdgesBlock::Double(Standard_Integer I)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->Double(I));
}

 void OCHLRAlgo_EdgesBlock::Double(Standard_Integer I, System::Boolean B)
{
  (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->Double(I, OCConverter::BooleanToStandardBoolean(B));
}

 System::Boolean OCHLRAlgo_EdgesBlock::IsoLine(Standard_Integer I)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->IsoLine(I));
}

 void OCHLRAlgo_EdgesBlock::IsoLine(Standard_Integer I, System::Boolean B)
{
  (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->IsoLine(I, OCConverter::BooleanToStandardBoolean(B));
}

 void OCHLRAlgo_EdgesBlock::UpdateMinMax(Standard_Address TotMinMax)
{
  (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->UpdateMinMax(TotMinMax);
}

 Standard_Address OCHLRAlgo_EdgesBlock::MinMax()
{
  return (*((Handle_HLRAlgo_EdgesBlock*)nativeHandle))->MinMax();
}


