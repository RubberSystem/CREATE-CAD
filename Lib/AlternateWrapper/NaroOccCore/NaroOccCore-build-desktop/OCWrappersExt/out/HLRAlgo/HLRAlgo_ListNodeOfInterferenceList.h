// File generated by CPPExt (Transient)
//
#ifndef _HLRAlgo_ListNodeOfInterferenceList_OCWrappers_HeaderFile
#define _HLRAlgo_ListNodeOfInterferenceList_OCWrappers_HeaderFile

// include the wrapped class
#include <HLRAlgo_ListNodeOfInterferenceList.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_MapNode.h"

#include "HLRAlgo_Interference.h"


namespace OCNaroWrappers
{

ref class OCHLRAlgo_Interference;
ref class OCHLRAlgo_InterferenceList;
ref class OCHLRAlgo_ListIteratorOfInterferenceList;



public ref class OCHLRAlgo_ListNodeOfInterferenceList : OCTCollection_MapNode {

protected:
  // dummy constructor;
  OCHLRAlgo_ListNodeOfInterferenceList(OCDummy^) : OCTCollection_MapNode((OCDummy^)nullptr) {};

public:

// constructor from native
OCHLRAlgo_ListNodeOfInterferenceList(Handle(HLRAlgo_ListNodeOfInterferenceList)* nativeHandle);

// Methods PUBLIC


OCHLRAlgo_ListNodeOfInterferenceList(OCNaroWrappers::OCHLRAlgo_Interference^ I, TCollection_MapNodePtr n);


 /*instead*/  OCHLRAlgo_Interference^ Value() ;

~OCHLRAlgo_ListNodeOfInterferenceList()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
