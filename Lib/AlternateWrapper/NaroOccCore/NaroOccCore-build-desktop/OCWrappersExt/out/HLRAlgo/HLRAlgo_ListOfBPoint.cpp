// File generated by CPPExt (CPP file)
//

#include "HLRAlgo_ListOfBPoint.h"
#include "../Converter.h"
#include "HLRAlgo_ListIteratorOfListOfBPoint.h"
#include "HLRAlgo_BiPoint.h"
#include "HLRAlgo_ListNodeOfListOfBPoint.h"


using namespace OCNaroWrappers;

OCHLRAlgo_ListOfBPoint::OCHLRAlgo_ListOfBPoint(HLRAlgo_ListOfBPoint* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCHLRAlgo_ListOfBPoint::OCHLRAlgo_ListOfBPoint() 
{
  nativeHandle = new HLRAlgo_ListOfBPoint();
}

 void OCHLRAlgo_ListOfBPoint::Assign(OCNaroWrappers::OCHLRAlgo_ListOfBPoint^ Other)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->Assign(*((HLRAlgo_ListOfBPoint*)Other->Handle));
}

 Standard_Integer OCHLRAlgo_ListOfBPoint::Extent()
{
  return ((HLRAlgo_ListOfBPoint*)nativeHandle)->Extent();
}

 System::Boolean OCHLRAlgo_ListOfBPoint::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((HLRAlgo_ListOfBPoint*)nativeHandle)->IsEmpty());
}

 void OCHLRAlgo_ListOfBPoint::Prepend(OCNaroWrappers::OCHLRAlgo_BiPoint^ I)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->Prepend(*((HLRAlgo_BiPoint*)I->Handle));
}

 void OCHLRAlgo_ListOfBPoint::Prepend(OCNaroWrappers::OCHLRAlgo_BiPoint^ I, OCNaroWrappers::OCHLRAlgo_ListIteratorOfListOfBPoint^ theIt)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->Prepend(*((HLRAlgo_BiPoint*)I->Handle), *((HLRAlgo_ListIteratorOfListOfBPoint*)theIt->Handle));
}

 void OCHLRAlgo_ListOfBPoint::Prepend(OCNaroWrappers::OCHLRAlgo_ListOfBPoint^ Other)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->Prepend(*((HLRAlgo_ListOfBPoint*)Other->Handle));
}

 void OCHLRAlgo_ListOfBPoint::Append(OCNaroWrappers::OCHLRAlgo_BiPoint^ I)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->Append(*((HLRAlgo_BiPoint*)I->Handle));
}

 void OCHLRAlgo_ListOfBPoint::Append(OCNaroWrappers::OCHLRAlgo_BiPoint^ I, OCNaroWrappers::OCHLRAlgo_ListIteratorOfListOfBPoint^ theIt)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->Append(*((HLRAlgo_BiPoint*)I->Handle), *((HLRAlgo_ListIteratorOfListOfBPoint*)theIt->Handle));
}

 void OCHLRAlgo_ListOfBPoint::Append(OCNaroWrappers::OCHLRAlgo_ListOfBPoint^ Other)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->Append(*((HLRAlgo_ListOfBPoint*)Other->Handle));
}

OCHLRAlgo_BiPoint^ OCHLRAlgo_ListOfBPoint::First()
{
  HLRAlgo_BiPoint* tmp = new HLRAlgo_BiPoint();
  *tmp = ((HLRAlgo_ListOfBPoint*)nativeHandle)->First();
  return gcnew OCHLRAlgo_BiPoint(tmp);
}

OCHLRAlgo_BiPoint^ OCHLRAlgo_ListOfBPoint::Last()
{
  HLRAlgo_BiPoint* tmp = new HLRAlgo_BiPoint();
  *tmp = ((HLRAlgo_ListOfBPoint*)nativeHandle)->Last();
  return gcnew OCHLRAlgo_BiPoint(tmp);
}

 void OCHLRAlgo_ListOfBPoint::RemoveFirst()
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->RemoveFirst();
}

 void OCHLRAlgo_ListOfBPoint::Remove(OCNaroWrappers::OCHLRAlgo_ListIteratorOfListOfBPoint^ It)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->Remove(*((HLRAlgo_ListIteratorOfListOfBPoint*)It->Handle));
}

 void OCHLRAlgo_ListOfBPoint::InsertBefore(OCNaroWrappers::OCHLRAlgo_BiPoint^ I, OCNaroWrappers::OCHLRAlgo_ListIteratorOfListOfBPoint^ It)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->InsertBefore(*((HLRAlgo_BiPoint*)I->Handle), *((HLRAlgo_ListIteratorOfListOfBPoint*)It->Handle));
}

 void OCHLRAlgo_ListOfBPoint::InsertBefore(OCNaroWrappers::OCHLRAlgo_ListOfBPoint^ Other, OCNaroWrappers::OCHLRAlgo_ListIteratorOfListOfBPoint^ It)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->InsertBefore(*((HLRAlgo_ListOfBPoint*)Other->Handle), *((HLRAlgo_ListIteratorOfListOfBPoint*)It->Handle));
}

 void OCHLRAlgo_ListOfBPoint::InsertAfter(OCNaroWrappers::OCHLRAlgo_BiPoint^ I, OCNaroWrappers::OCHLRAlgo_ListIteratorOfListOfBPoint^ It)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->InsertAfter(*((HLRAlgo_BiPoint*)I->Handle), *((HLRAlgo_ListIteratorOfListOfBPoint*)It->Handle));
}

 void OCHLRAlgo_ListOfBPoint::InsertAfter(OCNaroWrappers::OCHLRAlgo_ListOfBPoint^ Other, OCNaroWrappers::OCHLRAlgo_ListIteratorOfListOfBPoint^ It)
{
  ((HLRAlgo_ListOfBPoint*)nativeHandle)->InsertAfter(*((HLRAlgo_ListOfBPoint*)Other->Handle), *((HLRAlgo_ListIteratorOfListOfBPoint*)It->Handle));
}


