// File generated by CPPExt (Transient)
//
#ifndef _HLRAlgo_WiresBlock_OCWrappers_HeaderFile
#define _HLRAlgo_WiresBlock_OCWrappers_HeaderFile

// include the wrapped class
#include <HLRAlgo_WiresBlock.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../TColStd/TColStd_Array1OfTransient.h"


namespace OCNaroWrappers
{

ref class OCHLRAlgo_EdgesBlock;


//! A WiresBlock is a set of Blocks. It is used by the <br>
//!          DataStructure to structure the Edges. <br>
//! <br>
//!          A WiresBlock contains : <br>
//! <br>
//!          * An Array  of Blocks. <br>
public ref class OCHLRAlgo_WiresBlock : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCHLRAlgo_WiresBlock(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCHLRAlgo_WiresBlock(Handle(HLRAlgo_WiresBlock)* nativeHandle);

// Methods PUBLIC

//! Create a Block of Blocks. <br>
OCHLRAlgo_WiresBlock(Standard_Integer NbWires);


 /*instead*/  Standard_Integer NbWires() ;


 /*instead*/  void Set(Standard_Integer I, OCNaroWrappers::OCHLRAlgo_EdgesBlock^ W) ;


 /*instead*/  OCHLRAlgo_EdgesBlock^ Wire(Standard_Integer I) ;


 /*instead*/  void UpdateMinMax(Standard_Address TotMinMax) ;


 /*instead*/  Standard_Address MinMax() ;

~OCHLRAlgo_WiresBlock()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
