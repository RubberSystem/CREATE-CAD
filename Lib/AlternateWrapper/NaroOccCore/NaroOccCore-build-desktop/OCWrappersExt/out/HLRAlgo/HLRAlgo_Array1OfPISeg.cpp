// File generated by CPPExt (CPP file)
//

#include "HLRAlgo_Array1OfPISeg.h"
#include "../Converter.h"
#include "HLRAlgo_PolyInternalSegment.h"


using namespace OCNaroWrappers;

OCHLRAlgo_Array1OfPISeg::OCHLRAlgo_Array1OfPISeg(HLRAlgo_Array1OfPISeg* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCHLRAlgo_Array1OfPISeg::OCHLRAlgo_Array1OfPISeg(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new HLRAlgo_Array1OfPISeg(Low, Up);
}

OCHLRAlgo_Array1OfPISeg::OCHLRAlgo_Array1OfPISeg(OCNaroWrappers::OCHLRAlgo_PolyInternalSegment^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new HLRAlgo_Array1OfPISeg(*((HLRAlgo_PolyInternalSegment*)Item->Handle), Low, Up);
}

 void OCHLRAlgo_Array1OfPISeg::Init(OCNaroWrappers::OCHLRAlgo_PolyInternalSegment^ V)
{
  ((HLRAlgo_Array1OfPISeg*)nativeHandle)->Init(*((HLRAlgo_PolyInternalSegment*)V->Handle));
}

 System::Boolean OCHLRAlgo_Array1OfPISeg::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((HLRAlgo_Array1OfPISeg*)nativeHandle)->IsAllocated());
}

OCHLRAlgo_Array1OfPISeg^ OCHLRAlgo_Array1OfPISeg::Assign(OCNaroWrappers::OCHLRAlgo_Array1OfPISeg^ Other)
{
  HLRAlgo_Array1OfPISeg* tmp = new HLRAlgo_Array1OfPISeg(0, 0);
  *tmp = ((HLRAlgo_Array1OfPISeg*)nativeHandle)->Assign(*((HLRAlgo_Array1OfPISeg*)Other->Handle));
  return gcnew OCHLRAlgo_Array1OfPISeg(tmp);
}

 Standard_Integer OCHLRAlgo_Array1OfPISeg::Length()
{
  return ((HLRAlgo_Array1OfPISeg*)nativeHandle)->Length();
}

 Standard_Integer OCHLRAlgo_Array1OfPISeg::Lower()
{
  return ((HLRAlgo_Array1OfPISeg*)nativeHandle)->Lower();
}

 Standard_Integer OCHLRAlgo_Array1OfPISeg::Upper()
{
  return ((HLRAlgo_Array1OfPISeg*)nativeHandle)->Upper();
}

 void OCHLRAlgo_Array1OfPISeg::SetValue(Standard_Integer Index, OCNaroWrappers::OCHLRAlgo_PolyInternalSegment^ Value)
{
  ((HLRAlgo_Array1OfPISeg*)nativeHandle)->SetValue(Index, *((HLRAlgo_PolyInternalSegment*)Value->Handle));
}

OCHLRAlgo_PolyInternalSegment^ OCHLRAlgo_Array1OfPISeg::Value(Standard_Integer Index)
{
  HLRAlgo_PolyInternalSegment* tmp = new HLRAlgo_PolyInternalSegment();
  *tmp = ((HLRAlgo_Array1OfPISeg*)nativeHandle)->Value(Index);
  return gcnew OCHLRAlgo_PolyInternalSegment(tmp);
}

OCHLRAlgo_PolyInternalSegment^ OCHLRAlgo_Array1OfPISeg::ChangeValue(Standard_Integer Index)
{
  HLRAlgo_PolyInternalSegment* tmp = new HLRAlgo_PolyInternalSegment();
  *tmp = ((HLRAlgo_Array1OfPISeg*)nativeHandle)->ChangeValue(Index);
  return gcnew OCHLRAlgo_PolyInternalSegment(tmp);
}


