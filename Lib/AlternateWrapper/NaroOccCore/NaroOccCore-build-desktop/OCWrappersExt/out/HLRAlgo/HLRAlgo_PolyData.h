// File generated by CPPExt (Transient)
//
#ifndef _HLRAlgo_PolyData_OCWrappers_HeaderFile
#define _HLRAlgo_PolyData_OCWrappers_HeaderFile

// include the wrapped class
#include <HLRAlgo_PolyData.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCTColgp_HArray1OfXYZ;
ref class OCHLRAlgo_HArray1OfTData;
ref class OCHLRAlgo_HArray1OfPHDat;
ref class OCTColgp_Array1OfXYZ;
ref class OCHLRAlgo_Array1OfTData;
ref class OCHLRAlgo_Array1OfPHDat;
ref class OCHLRAlgo_EdgeStatus;



public ref class OCHLRAlgo_PolyData : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCHLRAlgo_PolyData(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCHLRAlgo_PolyData(Handle(HLRAlgo_PolyData)* nativeHandle);

// Methods PUBLIC


OCHLRAlgo_PolyData();


 /*instead*/  void HNodes(OCNaroWrappers::OCTColgp_HArray1OfXYZ^ HNodes) ;


 /*instead*/  void HTData(OCNaroWrappers::OCHLRAlgo_HArray1OfTData^ HTData) ;


 /*instead*/  void HPHDat(OCNaroWrappers::OCHLRAlgo_HArray1OfPHDat^ HPHDat) ;


 /*instead*/  void FaceIndex(Standard_Integer I) ;


 /*instead*/  Standard_Integer FaceIndex() ;


 /*instead*/  OCTColgp_Array1OfXYZ^ Nodes() ;


 /*instead*/  OCHLRAlgo_Array1OfTData^ TData() ;


 /*instead*/  OCHLRAlgo_Array1OfPHDat^ PHDat() ;


 /*instead*/  void UpdateGlobalMinMax(Standard_Address ToTMinMax) ;


 /*instead*/  System::Boolean Hiding() ;

//! process hiding between <Pt1> and <Pt2>. <br>
 /*instead*/  void HideByPolyData(Standard_Address Coordinates, Standard_Address RealPtr, Standard_Address Indices, System::Boolean HidingShell, OCNaroWrappers::OCHLRAlgo_EdgeStatus^ status) ;


 /*instead*/  Standard_Address Indices() ;

~OCHLRAlgo_PolyData()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
