// File generated by CPPExt (MPV)
//
#ifndef _HLRAlgo_BiPoint_OCWrappers_HeaderFile
#define _HLRAlgo_BiPoint_OCWrappers_HeaderFile

// include native header
#include <HLRAlgo_BiPoint.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{




public ref class OCHLRAlgo_BiPoint  {

protected:
  HLRAlgo_BiPoint* nativeHandle;
  OCHLRAlgo_BiPoint(OCDummy^) {};

public:
  property HLRAlgo_BiPoint* Handle
  {
    HLRAlgo_BiPoint* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCHLRAlgo_BiPoint(HLRAlgo_BiPoint* nativeHandle);

// Methods PUBLIC


OCHLRAlgo_BiPoint();


OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, System::Boolean reg1, System::Boolean regn, System::Boolean outl, System::Boolean intl);


OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, System::Boolean flag);


OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, Standard_Integer i1, Standard_Integer i1p1, Standard_Integer i1p2, System::Boolean reg1, System::Boolean regn, System::Boolean outl, System::Boolean intl);


OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, Standard_Integer i1, Standard_Integer i1p1, Standard_Integer i1p2, System::Boolean flag);


OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, Standard_Integer i1, Standard_Integer i1p1, Standard_Integer i1p2, Standard_Integer i2, Standard_Integer i2p1, Standard_Integer i2p2, System::Boolean reg1, System::Boolean regn, System::Boolean outl, System::Boolean intl);


OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, Standard_Integer i1, Standard_Integer i1p1, Standard_Integer i1p2, Standard_Integer i2, Standard_Integer i2p1, Standard_Integer i2p2, System::Boolean flag);


 /*instead*/  System::Boolean Rg1Line() ;


 /*instead*/  void Rg1Line(System::Boolean B) ;


 /*instead*/  System::Boolean RgNLine() ;


 /*instead*/  void RgNLine(System::Boolean B) ;


 /*instead*/  System::Boolean OutLine() ;


 /*instead*/  void OutLine(System::Boolean B) ;


 /*instead*/  System::Boolean IntLine() ;


 /*instead*/  void IntLine(System::Boolean B) ;


 /*instead*/  System::Boolean Hidden() ;


 /*instead*/  void Hidden(System::Boolean B) ;


 /*instead*/  Standard_Address Indices() ;


 /*instead*/  Standard_Address Coordinates() ;

~OCHLRAlgo_BiPoint()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
