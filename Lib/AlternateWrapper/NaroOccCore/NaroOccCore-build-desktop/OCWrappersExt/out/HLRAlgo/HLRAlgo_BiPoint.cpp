// File generated by CPPExt (CPP file)
//

#include "HLRAlgo_BiPoint.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCHLRAlgo_BiPoint::OCHLRAlgo_BiPoint(HLRAlgo_BiPoint* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCHLRAlgo_BiPoint::OCHLRAlgo_BiPoint() 
{
  nativeHandle = new HLRAlgo_BiPoint();
}

OCHLRAlgo_BiPoint::OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, System::Boolean reg1, System::Boolean regn, System::Boolean outl, System::Boolean intl) 
{
  nativeHandle = new HLRAlgo_BiPoint(X1, Y1, Z1, X2, Y2, Z2, XT1, YT1, ZT1, XT2, YT2, ZT2, Index, OCConverter::BooleanToStandardBoolean(reg1), OCConverter::BooleanToStandardBoolean(regn), OCConverter::BooleanToStandardBoolean(outl), OCConverter::BooleanToStandardBoolean(intl));
}

OCHLRAlgo_BiPoint::OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, System::Boolean flag) 
{
  nativeHandle = new HLRAlgo_BiPoint(X1, Y1, Z1, X2, Y2, Z2, XT1, YT1, ZT1, XT2, YT2, ZT2, Index, OCConverter::BooleanToStandardBoolean(flag));
}

OCHLRAlgo_BiPoint::OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, Standard_Integer i1, Standard_Integer i1p1, Standard_Integer i1p2, System::Boolean reg1, System::Boolean regn, System::Boolean outl, System::Boolean intl) 
{
  nativeHandle = new HLRAlgo_BiPoint(X1, Y1, Z1, X2, Y2, Z2, XT1, YT1, ZT1, XT2, YT2, ZT2, Index, i1, i1p1, i1p2, OCConverter::BooleanToStandardBoolean(reg1), OCConverter::BooleanToStandardBoolean(regn), OCConverter::BooleanToStandardBoolean(outl), OCConverter::BooleanToStandardBoolean(intl));
}

OCHLRAlgo_BiPoint::OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, Standard_Integer i1, Standard_Integer i1p1, Standard_Integer i1p2, System::Boolean flag) 
{
  nativeHandle = new HLRAlgo_BiPoint(X1, Y1, Z1, X2, Y2, Z2, XT1, YT1, ZT1, XT2, YT2, ZT2, Index, i1, i1p1, i1p2, OCConverter::BooleanToStandardBoolean(flag));
}

OCHLRAlgo_BiPoint::OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, Standard_Integer i1, Standard_Integer i1p1, Standard_Integer i1p2, Standard_Integer i2, Standard_Integer i2p1, Standard_Integer i2p2, System::Boolean reg1, System::Boolean regn, System::Boolean outl, System::Boolean intl) 
{
  nativeHandle = new HLRAlgo_BiPoint(X1, Y1, Z1, X2, Y2, Z2, XT1, YT1, ZT1, XT2, YT2, ZT2, Index, i1, i1p1, i1p2, i2, i2p1, i2p2, OCConverter::BooleanToStandardBoolean(reg1), OCConverter::BooleanToStandardBoolean(regn), OCConverter::BooleanToStandardBoolean(outl), OCConverter::BooleanToStandardBoolean(intl));
}

OCHLRAlgo_BiPoint::OCHLRAlgo_BiPoint(Standard_Real X1, Standard_Real Y1, Standard_Real Z1, Standard_Real X2, Standard_Real Y2, Standard_Real Z2, Standard_Real XT1, Standard_Real YT1, Standard_Real ZT1, Standard_Real XT2, Standard_Real YT2, Standard_Real ZT2, Standard_Integer Index, Standard_Integer i1, Standard_Integer i1p1, Standard_Integer i1p2, Standard_Integer i2, Standard_Integer i2p1, Standard_Integer i2p2, System::Boolean flag) 
{
  nativeHandle = new HLRAlgo_BiPoint(X1, Y1, Z1, X2, Y2, Z2, XT1, YT1, ZT1, XT2, YT2, ZT2, Index, i1, i1p1, i1p2, i2, i2p1, i2p2, OCConverter::BooleanToStandardBoolean(flag));
}

 System::Boolean OCHLRAlgo_BiPoint::Rg1Line()
{
  return OCConverter::StandardBooleanToBoolean(((HLRAlgo_BiPoint*)nativeHandle)->Rg1Line());
}

 void OCHLRAlgo_BiPoint::Rg1Line(System::Boolean B)
{
  ((HLRAlgo_BiPoint*)nativeHandle)->Rg1Line(OCConverter::BooleanToStandardBoolean(B));
}

 System::Boolean OCHLRAlgo_BiPoint::RgNLine()
{
  return OCConverter::StandardBooleanToBoolean(((HLRAlgo_BiPoint*)nativeHandle)->RgNLine());
}

 void OCHLRAlgo_BiPoint::RgNLine(System::Boolean B)
{
  ((HLRAlgo_BiPoint*)nativeHandle)->RgNLine(OCConverter::BooleanToStandardBoolean(B));
}

 System::Boolean OCHLRAlgo_BiPoint::OutLine()
{
  return OCConverter::StandardBooleanToBoolean(((HLRAlgo_BiPoint*)nativeHandle)->OutLine());
}

 void OCHLRAlgo_BiPoint::OutLine(System::Boolean B)
{
  ((HLRAlgo_BiPoint*)nativeHandle)->OutLine(OCConverter::BooleanToStandardBoolean(B));
}

 System::Boolean OCHLRAlgo_BiPoint::IntLine()
{
  return OCConverter::StandardBooleanToBoolean(((HLRAlgo_BiPoint*)nativeHandle)->IntLine());
}

 void OCHLRAlgo_BiPoint::IntLine(System::Boolean B)
{
  ((HLRAlgo_BiPoint*)nativeHandle)->IntLine(OCConverter::BooleanToStandardBoolean(B));
}

 System::Boolean OCHLRAlgo_BiPoint::Hidden()
{
  return OCConverter::StandardBooleanToBoolean(((HLRAlgo_BiPoint*)nativeHandle)->Hidden());
}

 void OCHLRAlgo_BiPoint::Hidden(System::Boolean B)
{
  ((HLRAlgo_BiPoint*)nativeHandle)->Hidden(OCConverter::BooleanToStandardBoolean(B));
}

 Standard_Address OCHLRAlgo_BiPoint::Indices()
{
  return ((HLRAlgo_BiPoint*)nativeHandle)->Indices();
}

 Standard_Address OCHLRAlgo_BiPoint::Coordinates()
{
  return ((HLRAlgo_BiPoint*)nativeHandle)->Coordinates();
}


