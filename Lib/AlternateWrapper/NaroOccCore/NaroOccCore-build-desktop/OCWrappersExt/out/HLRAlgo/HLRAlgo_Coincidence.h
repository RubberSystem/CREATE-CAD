// File generated by CPPExt (MPV)
//
#ifndef _HLRAlgo_Coincidence_OCWrappers_HeaderFile
#define _HLRAlgo_Coincidence_OCWrappers_HeaderFile

// include native header
#include <HLRAlgo_Coincidence.hxx>
#include "../Converter.h"


#include "../TopAbs/TopAbs_State.h"


namespace OCNaroWrappers
{



//! The Coincidence class is used in an Inteference to <br>
//!          store informations on the "hiding" edge. <br>
//! <br>
//!          2D  Data : The  tangent  and the  curvature of the <br>
//!          projection of the edge  at the intersection point. <br>
//!          This is necesserary  when the intersection  is  at <br>
//!          the extremity of the edge. <br>
//! <br>
//!          3D   Data  :  The   state of  the   edge  near the <br>
//!          intersection   with  the face (before  and after). <br>
//!          This is necessary  when the  intersection is  "ON" <br>
//!          the face. <br>
public ref class OCHLRAlgo_Coincidence  {

protected:
  HLRAlgo_Coincidence* nativeHandle;
  OCHLRAlgo_Coincidence(OCDummy^) {};

public:
  property HLRAlgo_Coincidence* Handle
  {
    HLRAlgo_Coincidence* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCHLRAlgo_Coincidence(HLRAlgo_Coincidence* nativeHandle);

// Methods PUBLIC


OCHLRAlgo_Coincidence();


 /*instead*/  void Set2D(Standard_Integer FE, Standard_Real Param) ;


 /*instead*/  void SetState3D(OCTopAbs_State stbef, OCTopAbs_State staft) ;


 /*instead*/  void Value2D(Standard_Integer& FE, Standard_Real& Param) ;


 /*instead*/  void State3D(OCTopAbs_State& stbef, OCTopAbs_State& staft) ;

~OCHLRAlgo_Coincidence()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
