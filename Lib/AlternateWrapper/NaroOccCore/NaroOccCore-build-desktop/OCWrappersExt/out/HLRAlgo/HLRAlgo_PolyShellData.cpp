// File generated by CPPExt (CPP file)
//

#include "HLRAlgo_PolyShellData.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HArray1OfTransient.h"
#include "../TColStd/TColStd_Array1OfTransient.h"
#include "HLRAlgo_ListOfBPoint.h"


using namespace OCNaroWrappers;

OCHLRAlgo_PolyShellData::OCHLRAlgo_PolyShellData(Handle(HLRAlgo_PolyShellData)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_HLRAlgo_PolyShellData(*nativeHandle);
}

OCHLRAlgo_PolyShellData::OCHLRAlgo_PolyShellData(Standard_Integer nbFace) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_HLRAlgo_PolyShellData(new HLRAlgo_PolyShellData(nbFace));
}

 void OCHLRAlgo_PolyShellData::UpdateGlobalMinMax(Standard_Address TotMinMax)
{
  (*((Handle_HLRAlgo_PolyShellData*)nativeHandle))->UpdateGlobalMinMax(TotMinMax);
}

 void OCHLRAlgo_PolyShellData::UpdateHiding(Standard_Integer nbHiding)
{
  (*((Handle_HLRAlgo_PolyShellData*)nativeHandle))->UpdateHiding(nbHiding);
}

 System::Boolean OCHLRAlgo_PolyShellData::Hiding()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_HLRAlgo_PolyShellData*)nativeHandle))->Hiding());
}

OCTColStd_Array1OfTransient^ OCHLRAlgo_PolyShellData::PolyData()
{
  TColStd_Array1OfTransient* tmp = new TColStd_Array1OfTransient(0, 0);
  *tmp = (*((Handle_HLRAlgo_PolyShellData*)nativeHandle))->PolyData();
  return gcnew OCTColStd_Array1OfTransient(tmp);
}

OCTColStd_Array1OfTransient^ OCHLRAlgo_PolyShellData::HidingPolyData()
{
  TColStd_Array1OfTransient* tmp = new TColStd_Array1OfTransient(0, 0);
  *tmp = (*((Handle_HLRAlgo_PolyShellData*)nativeHandle))->HidingPolyData();
  return gcnew OCTColStd_Array1OfTransient(tmp);
}

OCHLRAlgo_ListOfBPoint^ OCHLRAlgo_PolyShellData::Edges()
{
  HLRAlgo_ListOfBPoint* tmp = new HLRAlgo_ListOfBPoint();
  *tmp = (*((Handle_HLRAlgo_PolyShellData*)nativeHandle))->Edges();
  return gcnew OCHLRAlgo_ListOfBPoint(tmp);
}

 Standard_Address OCHLRAlgo_PolyShellData::Indices()
{
  return (*((Handle_HLRAlgo_PolyShellData*)nativeHandle))->Indices();
}


