// File generated by CPPExt (MPV)
//
#ifndef _HLRAlgo_Interference_OCWrappers_HeaderFile
#define _HLRAlgo_Interference_OCWrappers_HeaderFile

// include native header
#include <HLRAlgo_Interference.hxx>
#include "../Converter.h"


#include "HLRAlgo_Intersection.h"
#include "HLRAlgo_Coincidence.h"
#include "../TopAbs/TopAbs_Orientation.h"


namespace OCNaroWrappers
{

ref class OCHLRAlgo_Intersection;
ref class OCHLRAlgo_Coincidence;



public ref class OCHLRAlgo_Interference  {

protected:
  HLRAlgo_Interference* nativeHandle;
  OCHLRAlgo_Interference(OCDummy^) {};

public:
  property HLRAlgo_Interference* Handle
  {
    HLRAlgo_Interference* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCHLRAlgo_Interference(HLRAlgo_Interference* nativeHandle);

// Methods PUBLIC


OCHLRAlgo_Interference();


OCHLRAlgo_Interference(OCNaroWrappers::OCHLRAlgo_Intersection^ Inters, OCNaroWrappers::OCHLRAlgo_Coincidence^ Bound, OCTopAbs_Orientation Orient, OCTopAbs_Orientation Trans, OCTopAbs_Orientation BTrans);


 /*instead*/  void Intersection(OCNaroWrappers::OCHLRAlgo_Intersection^ I) ;


 /*instead*/  void Boundary(OCNaroWrappers::OCHLRAlgo_Coincidence^ B) ;


 /*instead*/  void Orientation(OCTopAbs_Orientation O) ;


 /*instead*/  void Transition(OCTopAbs_Orientation Tr) ;


 /*instead*/  void BoundaryTransition(OCTopAbs_Orientation BTr) ;


 /*instead*/  OCHLRAlgo_Intersection^ Intersection() ;


 /*instead*/  OCHLRAlgo_Intersection^ ChangeIntersection() ;


 /*instead*/  OCHLRAlgo_Coincidence^ Boundary() ;


 /*instead*/  OCHLRAlgo_Coincidence^ ChangeBoundary() ;


 /*instead*/  OCTopAbs_Orientation Orientation() ;


 /*instead*/  OCTopAbs_Orientation Transition() ;


 /*instead*/  OCTopAbs_Orientation BoundaryTransition() ;

~OCHLRAlgo_Interference()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
