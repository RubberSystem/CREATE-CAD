// File generated by CPPExt (MPV)
//
#ifndef _HLRAlgo_Intersection_OCWrappers_HeaderFile
#define _HLRAlgo_Intersection_OCWrappers_HeaderFile

// include native header
#include <HLRAlgo_Intersection.hxx>
#include "../Converter.h"


#include "../TopAbs/TopAbs_Orientation.h"
#include "../TopAbs/TopAbs_State.h"


namespace OCNaroWrappers
{



//! Describes  an intersection  on   an edge to  hide. <br>
//!          Contains a parameter and   a state (ON =   on  the <br>
//!          face, OUT = above the face, IN = under the Face) <br>
public ref class OCHLRAlgo_Intersection  {

protected:
  HLRAlgo_Intersection* nativeHandle;
  OCHLRAlgo_Intersection(OCDummy^) {};

public:
  property HLRAlgo_Intersection* Handle
  {
    HLRAlgo_Intersection* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCHLRAlgo_Intersection(HLRAlgo_Intersection* nativeHandle);

// Methods PUBLIC


OCHLRAlgo_Intersection();


OCHLRAlgo_Intersection(OCTopAbs_Orientation Ori, Standard_Integer Lev, Standard_Integer SegInd, Standard_Integer Ind, Standard_Real P, Standard_ShortReal Tol, OCTopAbs_State S);


 /*instead*/  void Orientation(OCTopAbs_Orientation Ori) ;


 /*instead*/  OCTopAbs_Orientation Orientation() ;


 /*instead*/  void Level(Standard_Integer Lev) ;


 /*instead*/  Standard_Integer Level() ;


 /*instead*/  void SegIndex(Standard_Integer SegInd) ;


 /*instead*/  Standard_Integer SegIndex() ;


 /*instead*/  void Index(Standard_Integer Ind) ;


 /*instead*/  Standard_Integer Index() ;


 /*instead*/  void Parameter(Standard_Real P) ;


 /*instead*/  Standard_Real Parameter() ;


 /*instead*/  void Tolerance(Standard_ShortReal T) ;


 /*instead*/  Standard_ShortReal Tolerance() ;


 /*instead*/  void State(OCTopAbs_State S) ;


 /*instead*/  OCTopAbs_State State() ;

~OCHLRAlgo_Intersection()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
