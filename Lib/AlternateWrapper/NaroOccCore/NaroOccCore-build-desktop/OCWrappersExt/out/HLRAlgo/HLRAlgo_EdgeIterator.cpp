// File generated by CPPExt (CPP file)
//

#include "HLRAlgo_EdgeIterator.h"
#include "../Converter.h"
#include "HLRAlgo_EdgeStatus.h"


using namespace OCNaroWrappers;

OCHLRAlgo_EdgeIterator::OCHLRAlgo_EdgeIterator(HLRAlgo_EdgeIterator* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCHLRAlgo_EdgeIterator::OCHLRAlgo_EdgeIterator() 
{
  nativeHandle = new HLRAlgo_EdgeIterator();
}

 void OCHLRAlgo_EdgeIterator::InitHidden(OCNaroWrappers::OCHLRAlgo_EdgeStatus^ status)
{
  ((HLRAlgo_EdgeIterator*)nativeHandle)->InitHidden(*((HLRAlgo_EdgeStatus*)status->Handle));
}

 System::Boolean OCHLRAlgo_EdgeIterator::MoreHidden()
{
  return OCConverter::StandardBooleanToBoolean(((HLRAlgo_EdgeIterator*)nativeHandle)->MoreHidden());
}

 void OCHLRAlgo_EdgeIterator::NextHidden()
{
  ((HLRAlgo_EdgeIterator*)nativeHandle)->NextHidden();
}

 void OCHLRAlgo_EdgeIterator::Hidden(Standard_Real& Start, Standard_ShortReal& TolStart, Standard_Real& End, Standard_ShortReal& TolEnd)
{
  ((HLRAlgo_EdgeIterator*)nativeHandle)->Hidden(Start, TolStart, End, TolEnd);
}

 void OCHLRAlgo_EdgeIterator::InitVisible(OCNaroWrappers::OCHLRAlgo_EdgeStatus^ status)
{
  ((HLRAlgo_EdgeIterator*)nativeHandle)->InitVisible(*((HLRAlgo_EdgeStatus*)status->Handle));
}

 System::Boolean OCHLRAlgo_EdgeIterator::MoreVisible()
{
  return OCConverter::StandardBooleanToBoolean(((HLRAlgo_EdgeIterator*)nativeHandle)->MoreVisible());
}

 void OCHLRAlgo_EdgeIterator::NextVisible()
{
  ((HLRAlgo_EdgeIterator*)nativeHandle)->NextVisible();
}

 void OCHLRAlgo_EdgeIterator::Visible(Standard_Real& Start, Standard_ShortReal& TolStart, Standard_Real& End, Standard_ShortReal& TolEnd)
{
  ((HLRAlgo_EdgeIterator*)nativeHandle)->Visible(Start, TolStart, End, TolEnd);
}


