// File generated by CPPExt (Transient)
//
#ifndef _HLRAlgo_PolyAlgo_OCWrappers_HeaderFile
#define _HLRAlgo_PolyAlgo_OCWrappers_HeaderFile

// include the wrapped class
#include <HLRAlgo_PolyAlgo.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "HLRAlgo_ListIteratorOfListOfBPoint.h"


namespace OCNaroWrappers
{

ref class OCTColStd_HArray1OfTransient;
ref class OCTColStd_Array1OfTransient;
ref class OCHLRAlgo_EdgeStatus;


//! to remove Hidden lines on Triangulations. <br>
public ref class OCHLRAlgo_PolyAlgo : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCHLRAlgo_PolyAlgo(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCHLRAlgo_PolyAlgo(Handle(HLRAlgo_PolyAlgo)* nativeHandle);

// Methods PUBLIC


OCHLRAlgo_PolyAlgo();


 /*instead*/  void Init(OCNaroWrappers::OCTColStd_HArray1OfTransient^ HShell) ;


 /*instead*/  OCTColStd_Array1OfTransient^ PolyShell() ;


 /*instead*/  void Clear() ;

//! Prepare all the data to process the algo. <br>
 /*instead*/  void Update() ;


 /*instead*/  void InitHide() ;


 /*instead*/  System::Boolean MoreHide() ;


 /*instead*/  void NextHide() ;

//! process hiding between <Pt1> and <Pt2>. <br>
 /*instead*/  void Hide(Standard_Address& Coordinates, OCNaroWrappers::OCHLRAlgo_EdgeStatus^ status, Standard_Integer& Index, System::Boolean& reg1, System::Boolean& regn, System::Boolean& outl, System::Boolean& intl) ;


 /*instead*/  void InitShow() ;


 /*instead*/  System::Boolean MoreShow() ;


 /*instead*/  void NextShow() ;

//! process hiding between <Pt1> and <Pt2>. <br>
 /*instead*/  void Show(Standard_Address& Coordinates, Standard_Integer& Index, System::Boolean& reg1, System::Boolean& regn, System::Boolean& outl, System::Boolean& intl) ;

~OCHLRAlgo_PolyAlgo()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
