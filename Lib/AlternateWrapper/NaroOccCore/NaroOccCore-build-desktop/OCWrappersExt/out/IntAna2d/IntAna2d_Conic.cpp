// File generated by CPPExt (CPP file)
//

#include "IntAna2d_Conic.h"
#include "../Converter.h"
#include "../gp/gp_Circ2d.h"
#include "../gp/gp_Lin2d.h"
#include "../gp/gp_Parab2d.h"
#include "../gp/gp_Hypr2d.h"
#include "../gp/gp_Elips2d.h"
#include "../gp/gp_XY.h"
#include "../gp/gp_Ax2d.h"


using namespace OCNaroWrappers;

OCIntAna2d_Conic::OCIntAna2d_Conic(IntAna2d_Conic* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCIntAna2d_Conic::OCIntAna2d_Conic(OCNaroWrappers::OCgp_Circ2d^ C) 
{
  nativeHandle = new IntAna2d_Conic(*((gp_Circ2d*)C->Handle));
}

OCIntAna2d_Conic::OCIntAna2d_Conic(OCNaroWrappers::OCgp_Lin2d^ C) 
{
  nativeHandle = new IntAna2d_Conic(*((gp_Lin2d*)C->Handle));
}

OCIntAna2d_Conic::OCIntAna2d_Conic(OCNaroWrappers::OCgp_Parab2d^ C) 
{
  nativeHandle = new IntAna2d_Conic(*((gp_Parab2d*)C->Handle));
}

OCIntAna2d_Conic::OCIntAna2d_Conic(OCNaroWrappers::OCgp_Hypr2d^ C) 
{
  nativeHandle = new IntAna2d_Conic(*((gp_Hypr2d*)C->Handle));
}

OCIntAna2d_Conic::OCIntAna2d_Conic(OCNaroWrappers::OCgp_Elips2d^ C) 
{
  nativeHandle = new IntAna2d_Conic(*((gp_Elips2d*)C->Handle));
}

 Standard_Real OCIntAna2d_Conic::Value(Standard_Real X, Standard_Real Y)
{
  return ((IntAna2d_Conic*)nativeHandle)->Value(X, Y);
}

OCgp_XY^ OCIntAna2d_Conic::Grad(Standard_Real X, Standard_Real Y)
{
  gp_XY* tmp = new gp_XY();
  *tmp = ((IntAna2d_Conic*)nativeHandle)->Grad(X, Y);
  return gcnew OCgp_XY(tmp);
}

 void OCIntAna2d_Conic::ValAndGrad(Standard_Real X, Standard_Real Y, Standard_Real& Val, OCNaroWrappers::OCgp_XY^ Grd)
{
  ((IntAna2d_Conic*)nativeHandle)->ValAndGrad(X, Y, Val, *((gp_XY*)Grd->Handle));
}

 void OCIntAna2d_Conic::Coefficients(Standard_Real& A, Standard_Real& B, Standard_Real& C, Standard_Real& D, Standard_Real& E, Standard_Real& F)
{
  ((IntAna2d_Conic*)nativeHandle)->Coefficients(A, B, C, D, E, F);
}

 void OCIntAna2d_Conic::NewCoefficients(Standard_Real& A, Standard_Real& B, Standard_Real& C, Standard_Real& D, Standard_Real& E, Standard_Real& F, OCNaroWrappers::OCgp_Ax2d^ Axis)
{
  ((IntAna2d_Conic*)nativeHandle)->NewCoefficients(A, B, C, D, E, F, *((gp_Ax2d*)Axis->Handle));
}


