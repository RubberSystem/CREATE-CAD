// File generated by CPPExt (CPP file)
//

#include "Bisector_BisecAna.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_TrimmedCurve.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Vec2d.h"
#include "../Geom2d/Geom2d_Point.h"
#include "../GccInt/GccInt_Bisec.h"
#include "../Geom2d/Geom2d_Geometry.h"
#include "../gp/gp_Trsf2d.h"


using namespace OCNaroWrappers;

OCBisector_BisecAna::OCBisector_BisecAna(Handle(Bisector_BisecAna)* nativeHandle) : OCBisector_Curve((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Bisector_BisecAna(*nativeHandle);
}

OCBisector_BisecAna::OCBisector_BisecAna() : OCBisector_Curve((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Bisector_BisecAna(new Bisector_BisecAna());
}

 void OCBisector_BisecAna::Perform(OCNaroWrappers::OCGeom2d_Curve^ Cu1, OCNaroWrappers::OCGeom2d_Curve^ Cu2, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, Standard_Real Sense, Standard_Real Tolerance, System::Boolean oncurve)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->Perform(*((Handle_Geom2d_Curve*)Cu1->Handle), *((Handle_Geom2d_Curve*)Cu2->Handle), *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle), Sense, Tolerance, OCConverter::BooleanToStandardBoolean(oncurve));
}

 void OCBisector_BisecAna::Perform(OCNaroWrappers::OCGeom2d_Curve^ Cu, OCNaroWrappers::OCGeom2d_Point^ Pnt, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, Standard_Real Sense, Standard_Real Tolerance, System::Boolean oncurve)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->Perform(*((Handle_Geom2d_Curve*)Cu->Handle), *((Handle_Geom2d_Point*)Pnt->Handle), *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle), Sense, Tolerance, OCConverter::BooleanToStandardBoolean(oncurve));
}

 void OCBisector_BisecAna::Perform(OCNaroWrappers::OCGeom2d_Point^ Pnt, OCNaroWrappers::OCGeom2d_Curve^ Cu, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, Standard_Real Sense, Standard_Real Tolerance, System::Boolean oncurve)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->Perform(*((Handle_Geom2d_Point*)Pnt->Handle), *((Handle_Geom2d_Curve*)Cu->Handle), *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle), Sense, Tolerance, OCConverter::BooleanToStandardBoolean(oncurve));
}

 void OCBisector_BisecAna::Perform(OCNaroWrappers::OCGeom2d_Point^ Pnt1, OCNaroWrappers::OCGeom2d_Point^ Pnt2, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, Standard_Real Sense, Standard_Real Tolerance, System::Boolean oncurve)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->Perform(*((Handle_Geom2d_Point*)Pnt1->Handle), *((Handle_Geom2d_Point*)Pnt2->Handle), *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle), Sense, Tolerance, OCConverter::BooleanToStandardBoolean(oncurve));
}

 void OCBisector_BisecAna::Init(OCNaroWrappers::OCGeom2d_TrimmedCurve^ bisector)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->Init(*((Handle_Geom2d_TrimmedCurve*)bisector->Handle));
}

 System::Boolean OCBisector_BisecAna::IsExtendAtStart()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecAna*)nativeHandle))->IsExtendAtStart());
}

 System::Boolean OCBisector_BisecAna::IsExtendAtEnd()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecAna*)nativeHandle))->IsExtendAtEnd());
}

 void OCBisector_BisecAna::SetTrim(OCNaroWrappers::OCGeom2d_Curve^ Cu)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->SetTrim(*((Handle_Geom2d_Curve*)Cu->Handle));
}

 void OCBisector_BisecAna::SetTrim(Standard_Real uf, Standard_Real ul)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->SetTrim(uf, ul);
}

 void OCBisector_BisecAna::Reverse()
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->Reverse();
}

 Standard_Real OCBisector_BisecAna::ReversedParameter(Standard_Real U)
{
  return (*((Handle_Bisector_BisecAna*)nativeHandle))->ReversedParameter(U);
}

 System::Boolean OCBisector_BisecAna::IsCN(Standard_Integer N)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecAna*)nativeHandle))->IsCN(N));
}

OCGeom2d_Geometry^ OCBisector_BisecAna::Copy()
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Bisector_BisecAna*)nativeHandle))->Copy();
  return gcnew OCGeom2d_Geometry(&tmp);
}

 void OCBisector_BisecAna::Transform(OCNaroWrappers::OCgp_Trsf2d^ T)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->Transform(*((gp_Trsf2d*)T->Handle));
}

 Standard_Real OCBisector_BisecAna::FirstParameter()
{
  return (*((Handle_Bisector_BisecAna*)nativeHandle))->FirstParameter();
}

 Standard_Real OCBisector_BisecAna::LastParameter()
{
  return (*((Handle_Bisector_BisecAna*)nativeHandle))->LastParameter();
}

 System::Boolean OCBisector_BisecAna::IsClosed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecAna*)nativeHandle))->IsClosed());
}

 System::Boolean OCBisector_BisecAna::IsPeriodic()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecAna*)nativeHandle))->IsPeriodic());
}

 OCGeomAbs_Shape OCBisector_BisecAna::Continuity()
{
  return (OCGeomAbs_Shape)((*((Handle_Bisector_BisecAna*)nativeHandle))->Continuity());
}

 void OCBisector_BisecAna::D0(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->D0(U, *((gp_Pnt2d*)P->Handle));
}

 void OCBisector_BisecAna::D1(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->D1(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle));
}

 void OCBisector_BisecAna::D2(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->D2(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle));
}

 void OCBisector_BisecAna::D3(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, OCNaroWrappers::OCgp_Vec2d^ V3)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->D3(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle), *((gp_Vec2d*)V3->Handle));
}

OCgp_Vec2d^ OCBisector_BisecAna::DN(Standard_Real U, Standard_Integer N)
{
  gp_Vec2d* tmp = new gp_Vec2d();
  *tmp = (*((Handle_Bisector_BisecAna*)nativeHandle))->DN(U, N);
  return gcnew OCgp_Vec2d(tmp);
}

OCGeom2d_Curve^ OCBisector_BisecAna::Geom2dCurve()
{
  Handle(Geom2d_Curve) tmp = (*((Handle_Bisector_BisecAna*)nativeHandle))->Geom2dCurve();
  return gcnew OCGeom2d_Curve(&tmp);
}

 Standard_Real OCBisector_BisecAna::Parameter(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  return (*((Handle_Bisector_BisecAna*)nativeHandle))->Parameter(*((gp_Pnt2d*)P->Handle));
}

 Standard_Real OCBisector_BisecAna::ParameterOfStartPoint()
{
  return (*((Handle_Bisector_BisecAna*)nativeHandle))->ParameterOfStartPoint();
}

 Standard_Real OCBisector_BisecAna::ParameterOfEndPoint()
{
  return (*((Handle_Bisector_BisecAna*)nativeHandle))->ParameterOfEndPoint();
}

 Standard_Integer OCBisector_BisecAna::NbIntervals()
{
  return (*((Handle_Bisector_BisecAna*)nativeHandle))->NbIntervals();
}

 Standard_Real OCBisector_BisecAna::IntervalFirst(Standard_Integer Index)
{
  return (*((Handle_Bisector_BisecAna*)nativeHandle))->IntervalFirst(Index);
}

 Standard_Real OCBisector_BisecAna::IntervalLast(Standard_Integer Index)
{
  return (*((Handle_Bisector_BisecAna*)nativeHandle))->IntervalLast(Index);
}

 void OCBisector_BisecAna::Dump(Standard_Integer Deep, Standard_Integer Offset)
{
  (*((Handle_Bisector_BisecAna*)nativeHandle))->Dump(Deep, Offset);
}


