// File generated by CPPExt (MPV)
//
#ifndef _Bisector_FunctionH_OCWrappers_HeaderFile
#define _Bisector_FunctionH_OCWrappers_HeaderFile

// include native header
#include <Bisector_FunctionH.hxx>
#include "../Converter.h"

#include "../math/math_FunctionWithDerivative.h"

#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Vec2d.h"
#include "../math/math_FunctionWithDerivative.h"


namespace OCNaroWrappers
{

ref class OCGeom2d_Curve;
ref class OCgp_Pnt2d;
ref class OCgp_Vec2d;


//! H(v) = (T1  .P2(v) - P1) * ||T(v)||  - <br>
//!                                  2         2 <br>
//!                 (T(v).P2(v) - P1) * ||T1|| <br>
public ref class OCBisector_FunctionH  : public OCmath_FunctionWithDerivative {

protected:
  // dummy constructor;
  OCBisector_FunctionH(OCDummy^) : OCmath_FunctionWithDerivative((OCDummy^)nullptr) {};

public:

// constructor from native
OCBisector_FunctionH(Bisector_FunctionH* nativeHandle);

// Methods PUBLIC


OCBisector_FunctionH(OCNaroWrappers::OCGeom2d_Curve^ C2, OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Vec2d^ T1);

//! Computes the values of the Functions for the variable <X>. <br>
 /*instead*/  System::Boolean Value(Standard_Real X, Standard_Real& F) ;


 /*instead*/  System::Boolean Derivative(Standard_Real X, Standard_Real& D) ;

//! Returns the values of the functions and the derivatives <br>
//!          for the variable <X>. <br>
 /*instead*/  System::Boolean Values(Standard_Real X, Standard_Real& F, Standard_Real& D) ;

~OCBisector_FunctionH()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
