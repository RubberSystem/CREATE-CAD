// File generated by CPPExt (CPP file)
//

#include "Bisector_FunctionInter.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "Bisector_Curve.h"


using namespace OCNaroWrappers;

OCBisector_FunctionInter::OCBisector_FunctionInter(Bisector_FunctionInter* nativeHandle) : OCmath_FunctionWithDerivative((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBisector_FunctionInter::OCBisector_FunctionInter() : OCmath_FunctionWithDerivative((OCDummy^)nullptr)

{
  nativeHandle = new Bisector_FunctionInter();
}

OCBisector_FunctionInter::OCBisector_FunctionInter(OCNaroWrappers::OCGeom2d_Curve^ C, OCNaroWrappers::OCBisector_Curve^ Bis1, OCNaroWrappers::OCBisector_Curve^ Bis2) : OCmath_FunctionWithDerivative((OCDummy^)nullptr)

{
  nativeHandle = new Bisector_FunctionInter(*((Handle_Geom2d_Curve*)C->Handle), *((Handle_Bisector_Curve*)Bis1->Handle), *((Handle_Bisector_Curve*)Bis2->Handle));
}

 void OCBisector_FunctionInter::Perform(OCNaroWrappers::OCGeom2d_Curve^ C, OCNaroWrappers::OCBisector_Curve^ Bis1, OCNaroWrappers::OCBisector_Curve^ Bis2)
{
  ((Bisector_FunctionInter*)nativeHandle)->Perform(*((Handle_Geom2d_Curve*)C->Handle), *((Handle_Bisector_Curve*)Bis1->Handle), *((Handle_Bisector_Curve*)Bis2->Handle));
}

 System::Boolean OCBisector_FunctionInter::Value(Standard_Real X, Standard_Real& F)
{
  return OCConverter::StandardBooleanToBoolean(((Bisector_FunctionInter*)nativeHandle)->Value(X, F));
}

 System::Boolean OCBisector_FunctionInter::Derivative(Standard_Real X, Standard_Real& D)
{
  return OCConverter::StandardBooleanToBoolean(((Bisector_FunctionInter*)nativeHandle)->Derivative(X, D));
}

 System::Boolean OCBisector_FunctionInter::Values(Standard_Real X, Standard_Real& F, Standard_Real& D)
{
  return OCConverter::StandardBooleanToBoolean(((Bisector_FunctionInter*)nativeHandle)->Values(X, F, D));
}


