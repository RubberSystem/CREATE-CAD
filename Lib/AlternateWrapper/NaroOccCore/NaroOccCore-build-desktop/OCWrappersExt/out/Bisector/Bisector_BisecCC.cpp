// File generated by CPPExt (CPP file)
//

#include "Bisector_BisecCC.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../gp/gp_Pnt2d.h"
#include "../Geom2d/Geom2d_Geometry.h"
#include "../gp/gp_Trsf2d.h"
#include "../gp/gp_Vec2d.h"
#include "Bisector_PolyBis.h"
#include "../TColStd/TColStd_SequenceOfReal.h"


using namespace OCNaroWrappers;

OCBisector_BisecCC::OCBisector_BisecCC(Handle(Bisector_BisecCC)* nativeHandle) : OCBisector_Curve((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Bisector_BisecCC(*nativeHandle);
}

OCBisector_BisecCC::OCBisector_BisecCC() : OCBisector_Curve((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Bisector_BisecCC(new Bisector_BisecCC());
}

OCBisector_BisecCC::OCBisector_BisecCC(OCNaroWrappers::OCGeom2d_Curve^ Cu1, OCNaroWrappers::OCGeom2d_Curve^ Cu2, Standard_Real Side1, Standard_Real Side2, OCNaroWrappers::OCgp_Pnt2d^ Origin, Standard_Real DistMax) : OCBisector_Curve((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Bisector_BisecCC(new Bisector_BisecCC(*((Handle_Geom2d_Curve*)Cu1->Handle), *((Handle_Geom2d_Curve*)Cu2->Handle), Side1, Side2, *((gp_Pnt2d*)Origin->Handle), DistMax));
}

 void OCBisector_BisecCC::Perform(OCNaroWrappers::OCGeom2d_Curve^ Cu1, OCNaroWrappers::OCGeom2d_Curve^ Cu2, Standard_Real Side1, Standard_Real Side2, OCNaroWrappers::OCgp_Pnt2d^ Origin, Standard_Real DistMax)
{
  (*((Handle_Bisector_BisecCC*)nativeHandle))->Perform(*((Handle_Geom2d_Curve*)Cu1->Handle), *((Handle_Geom2d_Curve*)Cu2->Handle), Side1, Side2, *((gp_Pnt2d*)Origin->Handle), DistMax);
}

 System::Boolean OCBisector_BisecCC::IsExtendAtStart()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecCC*)nativeHandle))->IsExtendAtStart());
}

 System::Boolean OCBisector_BisecCC::IsExtendAtEnd()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecCC*)nativeHandle))->IsExtendAtEnd());
}

 void OCBisector_BisecCC::Reverse()
{
  (*((Handle_Bisector_BisecCC*)nativeHandle))->Reverse();
}

 Standard_Real OCBisector_BisecCC::ReversedParameter(Standard_Real U)
{
  return (*((Handle_Bisector_BisecCC*)nativeHandle))->ReversedParameter(U);
}

 System::Boolean OCBisector_BisecCC::IsCN(Standard_Integer N)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecCC*)nativeHandle))->IsCN(N));
}

OCBisector_BisecCC^ OCBisector_BisecCC::ChangeGuide()
{
  Handle(Bisector_BisecCC) tmp = (*((Handle_Bisector_BisecCC*)nativeHandle))->ChangeGuide();
  return gcnew OCBisector_BisecCC(&tmp);
}

OCGeom2d_Geometry^ OCBisector_BisecCC::Copy()
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Bisector_BisecCC*)nativeHandle))->Copy();
  return gcnew OCGeom2d_Geometry(&tmp);
}

 void OCBisector_BisecCC::Transform(OCNaroWrappers::OCgp_Trsf2d^ T)
{
  (*((Handle_Bisector_BisecCC*)nativeHandle))->Transform(*((gp_Trsf2d*)T->Handle));
}

 Standard_Real OCBisector_BisecCC::FirstParameter()
{
  return (*((Handle_Bisector_BisecCC*)nativeHandle))->FirstParameter();
}

 Standard_Real OCBisector_BisecCC::LastParameter()
{
  return (*((Handle_Bisector_BisecCC*)nativeHandle))->LastParameter();
}

 OCGeomAbs_Shape OCBisector_BisecCC::Continuity()
{
  return (OCGeomAbs_Shape)((*((Handle_Bisector_BisecCC*)nativeHandle))->Continuity());
}

 Standard_Integer OCBisector_BisecCC::NbIntervals()
{
  return (*((Handle_Bisector_BisecCC*)nativeHandle))->NbIntervals();
}

 Standard_Real OCBisector_BisecCC::IntervalFirst(Standard_Integer Index)
{
  return (*((Handle_Bisector_BisecCC*)nativeHandle))->IntervalFirst(Index);
}

 Standard_Real OCBisector_BisecCC::IntervalLast(Standard_Integer Index)
{
  return (*((Handle_Bisector_BisecCC*)nativeHandle))->IntervalLast(Index);
}

 OCGeomAbs_Shape OCBisector_BisecCC::IntervalContinuity()
{
  return (OCGeomAbs_Shape)((*((Handle_Bisector_BisecCC*)nativeHandle))->IntervalContinuity());
}

 System::Boolean OCBisector_BisecCC::IsClosed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecCC*)nativeHandle))->IsClosed());
}

 System::Boolean OCBisector_BisecCC::IsPeriodic()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecCC*)nativeHandle))->IsPeriodic());
}

OCgp_Pnt2d^ OCBisector_BisecCC::ValueAndDist(Standard_Real U, Standard_Real& U1, Standard_Real& U2, Standard_Real& Distance)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = (*((Handle_Bisector_BisecCC*)nativeHandle))->ValueAndDist(U, U1, U2, Distance);
  return gcnew OCgp_Pnt2d(tmp);
}

OCgp_Pnt2d^ OCBisector_BisecCC::ValueByInt(Standard_Real U, Standard_Real& U1, Standard_Real& U2, Standard_Real& Distance)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = (*((Handle_Bisector_BisecCC*)nativeHandle))->ValueByInt(U, U1, U2, Distance);
  return gcnew OCgp_Pnt2d(tmp);
}

 void OCBisector_BisecCC::D0(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P)
{
  (*((Handle_Bisector_BisecCC*)nativeHandle))->D0(U, *((gp_Pnt2d*)P->Handle));
}

 void OCBisector_BisecCC::D1(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V)
{
  (*((Handle_Bisector_BisecCC*)nativeHandle))->D1(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V->Handle));
}

 void OCBisector_BisecCC::D2(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2)
{
  (*((Handle_Bisector_BisecCC*)nativeHandle))->D2(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle));
}

 void OCBisector_BisecCC::D3(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, OCNaroWrappers::OCgp_Vec2d^ V3)
{
  (*((Handle_Bisector_BisecCC*)nativeHandle))->D3(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle), *((gp_Vec2d*)V3->Handle));
}

OCgp_Vec2d^ OCBisector_BisecCC::DN(Standard_Real U, Standard_Integer N)
{
  gp_Vec2d* tmp = new gp_Vec2d();
  *tmp = (*((Handle_Bisector_BisecCC*)nativeHandle))->DN(U, N);
  return gcnew OCgp_Vec2d(tmp);
}

 System::Boolean OCBisector_BisecCC::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Bisector_BisecCC*)nativeHandle))->IsEmpty());
}

 Standard_Real OCBisector_BisecCC::LinkBisCurve(Standard_Real U)
{
  return (*((Handle_Bisector_BisecCC*)nativeHandle))->LinkBisCurve(U);
}

 Standard_Real OCBisector_BisecCC::LinkCurveBis(Standard_Real U)
{
  return (*((Handle_Bisector_BisecCC*)nativeHandle))->LinkCurveBis(U);
}

 Standard_Real OCBisector_BisecCC::Parameter(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  return (*((Handle_Bisector_BisecCC*)nativeHandle))->Parameter(*((gp_Pnt2d*)P->Handle));
}

OCGeom2d_Curve^ OCBisector_BisecCC::Curve(Standard_Integer IndCurve)
{
  Handle(Geom2d_Curve) tmp = (*((Handle_Bisector_BisecCC*)nativeHandle))->Curve(IndCurve);
  return gcnew OCGeom2d_Curve(&tmp);
}

OCBisector_PolyBis^ OCBisector_BisecCC::Polygon()
{
  Bisector_PolyBis* tmp = new Bisector_PolyBis();
  *tmp = (*((Handle_Bisector_BisecCC*)nativeHandle))->Polygon();
  return gcnew OCBisector_PolyBis(tmp);
}

 void OCBisector_BisecCC::Dump(Standard_Integer Deep, Standard_Integer Offset)
{
  (*((Handle_Bisector_BisecCC*)nativeHandle))->Dump(Deep, Offset);
}


