// File generated by CPPExt (MPV)
//
#ifndef _Bisector_Bisec_OCWrappers_HeaderFile
#define _Bisector_Bisec_OCWrappers_HeaderFile

// include native header
#include <Bisector_Bisec.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCGeom2d_TrimmedCurve;
ref class OCGeom2d_Curve;
ref class OCgp_Pnt2d;
ref class OCgp_Vec2d;
ref class OCGeom2d_Point;


//! Bisec  provides the bisecting line between two  elements <br>
//!  This line is trimed by a point <P> and it's contained in the domain <br>
//!  defined by the two vectors <V1>, <V2> and <Sense>. <br>
//! <br>
//!  Definition of  the domain: <br>
//!  if <Sense>  is  true the bisecting line is contained in the sector <br>
//!  defined by <-V1> and <-V2> in the sense indirect. <br>
//!  if <Sense>  is  false the bisecting line is contained in the sector <br>
//!  defined by <-V1> and <-V2> in the sense direct. <br>
public ref class OCBisector_Bisec  {

protected:
  Bisector_Bisec* nativeHandle;
  OCBisector_Bisec(OCDummy^) {};

public:
  property Bisector_Bisec* Handle
  {
    Bisector_Bisec* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBisector_Bisec(Bisector_Bisec* nativeHandle);

// Methods PUBLIC


OCBisector_Bisec();

//! Performs  the bisecting line  between the  curves <br>
//!            <Cu1> and <Cu2>. <br>
//!            <oncurve> is True if the point <P> is common to <Cu1> <br>
//!            and <Cu2>. <br>
 /*instead*/  void Perform(OCNaroWrappers::OCGeom2d_Curve^ Cu1, OCNaroWrappers::OCGeom2d_Curve^ Cu2, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, Standard_Real Sense, Standard_Real Tolerance, System::Boolean oncurve) ;

//! Performs  the bisecting line  between the  curve <br>
//!            <Cu1> and the point <Pnt>. <br>
//!            <oncurve> is True if the point <P> is the point <Pnt>. <br>
 /*instead*/  void Perform(OCNaroWrappers::OCGeom2d_Curve^ Cu, OCNaroWrappers::OCGeom2d_Point^ Pnt, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, Standard_Real Sense, Standard_Real Tolerance, System::Boolean oncurve) ;

//! Performs  the bisecting line  between the  curve <br>
//!            <Cu> and the point <Pnt>. <br>
//!            <oncurve> is True if the point <P> is the point <Pnt>. <br>
 /*instead*/  void Perform(OCNaroWrappers::OCGeom2d_Point^ Pnt, OCNaroWrappers::OCGeom2d_Curve^ Cu, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, Standard_Real Sense, Standard_Real Tolerance, System::Boolean oncurve) ;

//! Performs  the bisecting line  between the two points <br>
//!            <Pnt1>  and <Pnt2>. <br>
 /*instead*/  void Perform(OCNaroWrappers::OCGeom2d_Point^ Pnt1, OCNaroWrappers::OCGeom2d_Point^ Pnt2, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, Standard_Real Sense, Standard_Real Tolerance, System::Boolean oncurve) ;

//! Returns the Curve of <me>. <br>
 /*instead*/  OCGeom2d_TrimmedCurve^ Value() ;

//! Returns the Curve of <me>. <br>
//! <br>
 /*instead*/  OCGeom2d_TrimmedCurve^ ChangeValue() ;

~OCBisector_Bisec()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
