// File generated by CPPExt (MPV)
//
#ifndef _Bisector_PolyBis_OCWrappers_HeaderFile
#define _Bisector_PolyBis_OCWrappers_HeaderFile

// include native header
#include <Bisector_PolyBis.hxx>
#include "../Converter.h"


#include "Bisector_PointOnBis.h"


namespace OCNaroWrappers
{

ref class OCBisector_PointOnBis;
ref class OCgp_Trsf2d;


//! Polygon of PointOnBis <br>
public ref class OCBisector_PolyBis  {

protected:
  Bisector_PolyBis* nativeHandle;
  OCBisector_PolyBis(OCDummy^) {};

public:
  property Bisector_PolyBis* Handle
  {
    Bisector_PolyBis* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBisector_PolyBis(Bisector_PolyBis* nativeHandle);

// Methods PUBLIC


OCBisector_PolyBis();


 /*instead*/  void Append(OCNaroWrappers::OCBisector_PointOnBis^ Point) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  System::Boolean IsEmpty() ;


 /*instead*/  OCBisector_PointOnBis^ Value(Standard_Integer Index) ;


 /*instead*/  OCBisector_PointOnBis^ First() ;


 /*instead*/  OCBisector_PointOnBis^ Last() ;


 /*instead*/  Standard_Integer Interval(Standard_Real U) ;


 /*instead*/  void Transform(OCNaroWrappers::OCgp_Trsf2d^ T) ;

~OCBisector_PolyBis()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
