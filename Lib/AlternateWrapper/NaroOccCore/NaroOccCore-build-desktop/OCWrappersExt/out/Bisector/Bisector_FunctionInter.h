// File generated by CPPExt (MPV)
//
#ifndef _Bisector_FunctionInter_OCWrappers_HeaderFile
#define _Bisector_FunctionInter_OCWrappers_HeaderFile

// include native header
#include <Bisector_FunctionInter.hxx>
#include "../Converter.h"

#include "../math/math_FunctionWithDerivative.h"

#include "../math/math_FunctionWithDerivative.h"


namespace OCNaroWrappers
{

ref class OCGeom2d_Curve;
ref class OCBisector_Curve;


//!                           2                      2 <br>
//!          F(u) =  (PC(u) - PBis1(u))   + (PC(u) - PBis2(u)) <br>
public ref class OCBisector_FunctionInter  : public OCmath_FunctionWithDerivative {

protected:
  // dummy constructor;
  OCBisector_FunctionInter(OCDummy^) : OCmath_FunctionWithDerivative((OCDummy^)nullptr) {};

public:

// constructor from native
OCBisector_FunctionInter(Bisector_FunctionInter* nativeHandle);

// Methods PUBLIC


OCBisector_FunctionInter();


OCBisector_FunctionInter(OCNaroWrappers::OCGeom2d_Curve^ C, OCNaroWrappers::OCBisector_Curve^ Bis1, OCNaroWrappers::OCBisector_Curve^ Bis2);


 /*instead*/  void Perform(OCNaroWrappers::OCGeom2d_Curve^ C, OCNaroWrappers::OCBisector_Curve^ Bis1, OCNaroWrappers::OCBisector_Curve^ Bis2) ;

//! Computes the values of the Functions for the variable <X>. <br>
 /*instead*/  System::Boolean Value(Standard_Real X, Standard_Real& F) ;


 /*instead*/  System::Boolean Derivative(Standard_Real X, Standard_Real& D) ;

//! Returns the values of the functions and the derivatives <br>
//!          for the variable <X>. <br>
 /*instead*/  System::Boolean Values(Standard_Real X, Standard_Real& F, Standard_Real& D) ;

~OCBisector_FunctionInter()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
