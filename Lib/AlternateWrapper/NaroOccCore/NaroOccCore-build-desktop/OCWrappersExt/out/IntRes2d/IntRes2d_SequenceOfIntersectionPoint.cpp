// File generated by CPPExt (CPP file)
//

#include "IntRes2d_SequenceOfIntersectionPoint.h"
#include "../Converter.h"
#include "IntRes2d_IntersectionPoint.h"
#include "IntRes2d_SequenceNodeOfSequenceOfIntersectionPoint.h"


using namespace OCNaroWrappers;

OCIntRes2d_SequenceOfIntersectionPoint::OCIntRes2d_SequenceOfIntersectionPoint(IntRes2d_SequenceOfIntersectionPoint* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIntRes2d_SequenceOfIntersectionPoint::OCIntRes2d_SequenceOfIntersectionPoint() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new IntRes2d_SequenceOfIntersectionPoint();
}

OCIntRes2d_SequenceOfIntersectionPoint^ OCIntRes2d_SequenceOfIntersectionPoint::Assign(OCNaroWrappers::OCIntRes2d_SequenceOfIntersectionPoint^ Other)
{
  IntRes2d_SequenceOfIntersectionPoint* tmp = new IntRes2d_SequenceOfIntersectionPoint();
  *tmp = ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Assign(*((IntRes2d_SequenceOfIntersectionPoint*)Other->Handle));
  return gcnew OCIntRes2d_SequenceOfIntersectionPoint(tmp);
}

 void OCIntRes2d_SequenceOfIntersectionPoint::Append(OCNaroWrappers::OCIntRes2d_IntersectionPoint^ T)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Append(*((IntRes2d_IntersectionPoint*)T->Handle));
}

 void OCIntRes2d_SequenceOfIntersectionPoint::Append(OCNaroWrappers::OCIntRes2d_SequenceOfIntersectionPoint^ S)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Append(*((IntRes2d_SequenceOfIntersectionPoint*)S->Handle));
}

 void OCIntRes2d_SequenceOfIntersectionPoint::Prepend(OCNaroWrappers::OCIntRes2d_IntersectionPoint^ T)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Prepend(*((IntRes2d_IntersectionPoint*)T->Handle));
}

 void OCIntRes2d_SequenceOfIntersectionPoint::Prepend(OCNaroWrappers::OCIntRes2d_SequenceOfIntersectionPoint^ S)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Prepend(*((IntRes2d_SequenceOfIntersectionPoint*)S->Handle));
}

 void OCIntRes2d_SequenceOfIntersectionPoint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntRes2d_IntersectionPoint^ T)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->InsertBefore(Index, *((IntRes2d_IntersectionPoint*)T->Handle));
}

 void OCIntRes2d_SequenceOfIntersectionPoint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntRes2d_SequenceOfIntersectionPoint^ S)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->InsertBefore(Index, *((IntRes2d_SequenceOfIntersectionPoint*)S->Handle));
}

 void OCIntRes2d_SequenceOfIntersectionPoint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntRes2d_IntersectionPoint^ T)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->InsertAfter(Index, *((IntRes2d_IntersectionPoint*)T->Handle));
}

 void OCIntRes2d_SequenceOfIntersectionPoint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntRes2d_SequenceOfIntersectionPoint^ S)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->InsertAfter(Index, *((IntRes2d_SequenceOfIntersectionPoint*)S->Handle));
}

OCIntRes2d_IntersectionPoint^ OCIntRes2d_SequenceOfIntersectionPoint::First()
{
  IntRes2d_IntersectionPoint* tmp = new IntRes2d_IntersectionPoint();
  *tmp = ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->First();
  return gcnew OCIntRes2d_IntersectionPoint(tmp);
}

OCIntRes2d_IntersectionPoint^ OCIntRes2d_SequenceOfIntersectionPoint::Last()
{
  IntRes2d_IntersectionPoint* tmp = new IntRes2d_IntersectionPoint();
  *tmp = ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Last();
  return gcnew OCIntRes2d_IntersectionPoint(tmp);
}

 void OCIntRes2d_SequenceOfIntersectionPoint::Split(Standard_Integer Index, OCNaroWrappers::OCIntRes2d_SequenceOfIntersectionPoint^ Sub)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Split(Index, *((IntRes2d_SequenceOfIntersectionPoint*)Sub->Handle));
}

OCIntRes2d_IntersectionPoint^ OCIntRes2d_SequenceOfIntersectionPoint::Value(Standard_Integer Index)
{
  IntRes2d_IntersectionPoint* tmp = new IntRes2d_IntersectionPoint();
  *tmp = ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Value(Index);
  return gcnew OCIntRes2d_IntersectionPoint(tmp);
}

 void OCIntRes2d_SequenceOfIntersectionPoint::SetValue(Standard_Integer Index, OCNaroWrappers::OCIntRes2d_IntersectionPoint^ I)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->SetValue(Index, *((IntRes2d_IntersectionPoint*)I->Handle));
}

OCIntRes2d_IntersectionPoint^ OCIntRes2d_SequenceOfIntersectionPoint::ChangeValue(Standard_Integer Index)
{
  IntRes2d_IntersectionPoint* tmp = new IntRes2d_IntersectionPoint();
  *tmp = ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->ChangeValue(Index);
  return gcnew OCIntRes2d_IntersectionPoint(tmp);
}

 void OCIntRes2d_SequenceOfIntersectionPoint::Remove(Standard_Integer Index)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Remove(Index);
}

 void OCIntRes2d_SequenceOfIntersectionPoint::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((IntRes2d_SequenceOfIntersectionPoint*)nativeHandle)->Remove(FromIndex, ToIndex);
}


