// File generated by CPPExt (MPV)
//
#ifndef _IntRes2d_IntersectionPoint_OCWrappers_HeaderFile
#define _IntRes2d_IntersectionPoint_OCWrappers_HeaderFile

// include native header
#include <IntRes2d_IntersectionPoint.hxx>
#include "../Converter.h"


#include "../gp/gp_Pnt2d.h"
#include "IntRes2d_Transition.h"
#include "../Standard/Standard_Storable.h"


namespace OCNaroWrappers
{

ref class OCgp_Pnt2d;
ref class OCIntRes2d_Transition;


//! Definition of an intersection point between two <br>
//!          2D curves. <br>
public ref class OCIntRes2d_IntersectionPoint  {

protected:
  IntRes2d_IntersectionPoint* nativeHandle;
  OCIntRes2d_IntersectionPoint(OCDummy^) {};

public:
  property IntRes2d_IntersectionPoint* Handle
  {
    IntRes2d_IntersectionPoint* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntRes2d_IntersectionPoint(IntRes2d_IntersectionPoint* nativeHandle);

// Methods PUBLIC

//! Empty constructor. <br>
OCIntRes2d_IntersectionPoint();

//! Creates an IntersectionPoint. <br>
//!          if ReversedFlag is False, the parameter Uc1(resp. Uc2) <br>
//!          and the Transition Trans1 (resp. Trans2) refer to <br>
//!          the first curve (resp. second curve) otherwise Uc1 <br>
//!          and Trans1 (resp. Uc2 and Trans2) refer to the <br>
//!          second curve (resp. the first curve). <br>
OCIntRes2d_IntersectionPoint(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real Uc1, Standard_Real Uc2, OCNaroWrappers::OCIntRes2d_Transition^ Trans1, OCNaroWrappers::OCIntRes2d_Transition^ Trans2, System::Boolean ReversedFlag);

//! Sets the values for an existing intersection <br>
//!          point. The meaning of the parameters are the same <br>
//!          as for the Create. <br>
 /*instead*/  void SetValues(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real Uc1, Standard_Real Uc2, OCNaroWrappers::OCIntRes2d_Transition^ Trans1, OCNaroWrappers::OCIntRes2d_Transition^ Trans2, System::Boolean ReversedFlag) ;

//! Returns the value of the coordinates of the <br>
//!          intersection point in the 2D space. <br>
 /*instead*/  OCgp_Pnt2d^ Value() ;

//! Returns the parameter on the first curve. <br>
 /*instead*/  Standard_Real ParamOnFirst() ;

//! Returns the parameter on the second curve. <br>
 /*instead*/  Standard_Real ParamOnSecond() ;

//! Returns the transition of the 1st curve compared to <br>
//!          the 2nd one. <br>
 /*instead*/  OCIntRes2d_Transition^ TransitionOfFirst() ;

//! returns the transition of the 2nd curve compared to <br>
//!          the 1st one. <br>
 /*instead*/  OCIntRes2d_Transition^ TransitionOfSecond() ;

~OCIntRes2d_IntersectionPoint()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
