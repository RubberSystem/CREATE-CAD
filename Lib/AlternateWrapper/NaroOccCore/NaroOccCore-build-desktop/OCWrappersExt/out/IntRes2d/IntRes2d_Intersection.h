// File generated by CPPExt (MPV)
//
#ifndef _IntRes2d_Intersection_OCWrappers_HeaderFile
#define _IntRes2d_Intersection_OCWrappers_HeaderFile

// include native header
#include <IntRes2d_Intersection.hxx>
#include "../Converter.h"


#include "IntRes2d_SequenceOfIntersectionPoint.h"
#include "IntRes2d_SequenceOfIntersectionSegment.h"


namespace OCNaroWrappers
{

ref class OCIntRes2d_IntersectionPoint;
ref class OCIntRes2d_IntersectionSegment;


//! Defines  the root   class  of  all  the  Intersections <br>
//!          between  two 2D-Curves, and  provides all  the methods <br>
//!          about the results of the Intersections Algorithms. <br>
public ref class OCIntRes2d_Intersection  {

protected:
  IntRes2d_Intersection* nativeHandle;
  OCIntRes2d_Intersection(OCDummy^) {};

public:
  property IntRes2d_Intersection* Handle
  {
    IntRes2d_Intersection* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntRes2d_Intersection(IntRes2d_Intersection* nativeHandle);

// Methods PUBLIC

//! returns TRUE when the computation was successful. <br>
 /*instead*/  System::Boolean IsDone() ;

//! Returns TRUE if there is no intersection between the <br>
//!          given arguments. <br>
//!          The exception NotDone is raised if IsDone returns FALSE. <br>
 /*instead*/  System::Boolean IsEmpty() ;

//! This function returns the number of intersection <br>
//!          points between the 2 curves. <br>
//!          The exception NotDone is raised if IsDone returns FALSE. <br>
 /*instead*/  Standard_Integer NbPoints() ;

//! This function returns the intersection point <br>
//!          of range N; <br>
//!          The exception NotDone is raised if IsDone returns FALSE. <br>
//!          The exception OutOfRange is raised if (N <= 0) <br>
//!          or (N > NbPoints). <br>
 /*instead*/  OCIntRes2d_IntersectionPoint^ Point(Standard_Integer N) ;

//! This function returns the number of intersection <br>
//!          segments between the two curves. <br>
//!          The exception NotDone is raised if IsDone returns FALSE. <br>
 /*instead*/  Standard_Integer NbSegments() ;

//! This function returns the intersection segment <br>
//!          of range N; <br>
//!          The exception NotDone is raised if IsDone returns FALSE. <br>
//!          The exception OutOfRange is raised if (N <= 0) <br>
//!          or (N > NbPoints). <br>
 /*instead*/  OCIntRes2d_IntersectionSegment^ Segment(Standard_Integer N) ;


 /*instead*/  void SetReversedParameters(System::Boolean Reverseflag) ;

~OCIntRes2d_Intersection()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
