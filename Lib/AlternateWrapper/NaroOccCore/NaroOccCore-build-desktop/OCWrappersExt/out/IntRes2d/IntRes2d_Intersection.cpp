// File generated by CPPExt (CPP file)
//

#include "IntRes2d_Intersection.h"
#include "../Converter.h"
#include "IntRes2d_IntersectionPoint.h"
#include "IntRes2d_IntersectionSegment.h"


using namespace OCNaroWrappers;

OCIntRes2d_Intersection::OCIntRes2d_Intersection(IntRes2d_Intersection* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 System::Boolean OCIntRes2d_Intersection::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((IntRes2d_Intersection*)nativeHandle)->IsDone());
}

 System::Boolean OCIntRes2d_Intersection::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((IntRes2d_Intersection*)nativeHandle)->IsEmpty());
}

 Standard_Integer OCIntRes2d_Intersection::NbPoints()
{
  return ((IntRes2d_Intersection*)nativeHandle)->NbPoints();
}

OCIntRes2d_IntersectionPoint^ OCIntRes2d_Intersection::Point(Standard_Integer N)
{
  IntRes2d_IntersectionPoint* tmp = new IntRes2d_IntersectionPoint();
  *tmp = ((IntRes2d_Intersection*)nativeHandle)->Point(N);
  return gcnew OCIntRes2d_IntersectionPoint(tmp);
}

 Standard_Integer OCIntRes2d_Intersection::NbSegments()
{
  return ((IntRes2d_Intersection*)nativeHandle)->NbSegments();
}

OCIntRes2d_IntersectionSegment^ OCIntRes2d_Intersection::Segment(Standard_Integer N)
{
  IntRes2d_IntersectionSegment* tmp = new IntRes2d_IntersectionSegment();
  *tmp = ((IntRes2d_Intersection*)nativeHandle)->Segment(N);
  return gcnew OCIntRes2d_IntersectionSegment(tmp);
}

 void OCIntRes2d_Intersection::SetReversedParameters(System::Boolean Reverseflag)
{
  ((IntRes2d_Intersection*)nativeHandle)->SetReversedParameters(OCConverter::BooleanToStandardBoolean(Reverseflag));
}


