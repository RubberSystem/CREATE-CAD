// File generated by CPPExt (CPP file)
//

#include "IntCurveSurface_Intersection.h"
#include "../Converter.h"
#include "IntCurveSurface_IntersectionPoint.h"
#include "IntCurveSurface_IntersectionSegment.h"


using namespace OCNaroWrappers;

OCIntCurveSurface_Intersection::OCIntCurveSurface_Intersection(IntCurveSurface_Intersection* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 System::Boolean OCIntCurveSurface_Intersection::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((IntCurveSurface_Intersection*)nativeHandle)->IsDone());
}

 Standard_Integer OCIntCurveSurface_Intersection::NbPoints()
{
  return ((IntCurveSurface_Intersection*)nativeHandle)->NbPoints();
}

OCIntCurveSurface_IntersectionPoint^ OCIntCurveSurface_Intersection::Point(Standard_Integer Index)
{
  IntCurveSurface_IntersectionPoint* tmp = new IntCurveSurface_IntersectionPoint();
  *tmp = ((IntCurveSurface_Intersection*)nativeHandle)->Point(Index);
  return gcnew OCIntCurveSurface_IntersectionPoint(tmp);
}

 Standard_Integer OCIntCurveSurface_Intersection::NbSegments()
{
  return ((IntCurveSurface_Intersection*)nativeHandle)->NbSegments();
}

OCIntCurveSurface_IntersectionSegment^ OCIntCurveSurface_Intersection::Segment(Standard_Integer Index)
{
  IntCurveSurface_IntersectionSegment* tmp = new IntCurveSurface_IntersectionSegment();
  *tmp = ((IntCurveSurface_Intersection*)nativeHandle)->Segment(Index);
  return gcnew OCIntCurveSurface_IntersectionSegment(tmp);
}

 void OCIntCurveSurface_Intersection::Dump()
{
  ((IntCurveSurface_Intersection*)nativeHandle)->Dump();
}


