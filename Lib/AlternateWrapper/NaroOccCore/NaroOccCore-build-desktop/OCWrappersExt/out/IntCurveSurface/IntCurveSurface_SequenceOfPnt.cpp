// File generated by CPPExt (CPP file)
//

#include "IntCurveSurface_SequenceOfPnt.h"
#include "../Converter.h"
#include "IntCurveSurface_IntersectionPoint.h"
#include "IntCurveSurface_SequenceNodeOfSequenceOfPnt.h"


using namespace OCNaroWrappers;

OCIntCurveSurface_SequenceOfPnt::OCIntCurveSurface_SequenceOfPnt(IntCurveSurface_SequenceOfPnt* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIntCurveSurface_SequenceOfPnt::OCIntCurveSurface_SequenceOfPnt() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new IntCurveSurface_SequenceOfPnt();
}

OCIntCurveSurface_SequenceOfPnt^ OCIntCurveSurface_SequenceOfPnt::Assign(OCNaroWrappers::OCIntCurveSurface_SequenceOfPnt^ Other)
{
  IntCurveSurface_SequenceOfPnt* tmp = new IntCurveSurface_SequenceOfPnt();
  *tmp = ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Assign(*((IntCurveSurface_SequenceOfPnt*)Other->Handle));
  return gcnew OCIntCurveSurface_SequenceOfPnt(tmp);
}

 void OCIntCurveSurface_SequenceOfPnt::Append(OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ T)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Append(*((IntCurveSurface_IntersectionPoint*)T->Handle));
}

 void OCIntCurveSurface_SequenceOfPnt::Append(OCNaroWrappers::OCIntCurveSurface_SequenceOfPnt^ S)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Append(*((IntCurveSurface_SequenceOfPnt*)S->Handle));
}

 void OCIntCurveSurface_SequenceOfPnt::Prepend(OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ T)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Prepend(*((IntCurveSurface_IntersectionPoint*)T->Handle));
}

 void OCIntCurveSurface_SequenceOfPnt::Prepend(OCNaroWrappers::OCIntCurveSurface_SequenceOfPnt^ S)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Prepend(*((IntCurveSurface_SequenceOfPnt*)S->Handle));
}

 void OCIntCurveSurface_SequenceOfPnt::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ T)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->InsertBefore(Index, *((IntCurveSurface_IntersectionPoint*)T->Handle));
}

 void OCIntCurveSurface_SequenceOfPnt::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntCurveSurface_SequenceOfPnt^ S)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->InsertBefore(Index, *((IntCurveSurface_SequenceOfPnt*)S->Handle));
}

 void OCIntCurveSurface_SequenceOfPnt::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ T)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->InsertAfter(Index, *((IntCurveSurface_IntersectionPoint*)T->Handle));
}

 void OCIntCurveSurface_SequenceOfPnt::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntCurveSurface_SequenceOfPnt^ S)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->InsertAfter(Index, *((IntCurveSurface_SequenceOfPnt*)S->Handle));
}

OCIntCurveSurface_IntersectionPoint^ OCIntCurveSurface_SequenceOfPnt::First()
{
  IntCurveSurface_IntersectionPoint* tmp = new IntCurveSurface_IntersectionPoint();
  *tmp = ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->First();
  return gcnew OCIntCurveSurface_IntersectionPoint(tmp);
}

OCIntCurveSurface_IntersectionPoint^ OCIntCurveSurface_SequenceOfPnt::Last()
{
  IntCurveSurface_IntersectionPoint* tmp = new IntCurveSurface_IntersectionPoint();
  *tmp = ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Last();
  return gcnew OCIntCurveSurface_IntersectionPoint(tmp);
}

 void OCIntCurveSurface_SequenceOfPnt::Split(Standard_Integer Index, OCNaroWrappers::OCIntCurveSurface_SequenceOfPnt^ Sub)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Split(Index, *((IntCurveSurface_SequenceOfPnt*)Sub->Handle));
}

OCIntCurveSurface_IntersectionPoint^ OCIntCurveSurface_SequenceOfPnt::Value(Standard_Integer Index)
{
  IntCurveSurface_IntersectionPoint* tmp = new IntCurveSurface_IntersectionPoint();
  *tmp = ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Value(Index);
  return gcnew OCIntCurveSurface_IntersectionPoint(tmp);
}

 void OCIntCurveSurface_SequenceOfPnt::SetValue(Standard_Integer Index, OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ I)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->SetValue(Index, *((IntCurveSurface_IntersectionPoint*)I->Handle));
}

OCIntCurveSurface_IntersectionPoint^ OCIntCurveSurface_SequenceOfPnt::ChangeValue(Standard_Integer Index)
{
  IntCurveSurface_IntersectionPoint* tmp = new IntCurveSurface_IntersectionPoint();
  *tmp = ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->ChangeValue(Index);
  return gcnew OCIntCurveSurface_IntersectionPoint(tmp);
}

 void OCIntCurveSurface_SequenceOfPnt::Remove(Standard_Integer Index)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Remove(Index);
}

 void OCIntCurveSurface_SequenceOfPnt::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((IntCurveSurface_SequenceOfPnt*)nativeHandle)->Remove(FromIndex, ToIndex);
}


