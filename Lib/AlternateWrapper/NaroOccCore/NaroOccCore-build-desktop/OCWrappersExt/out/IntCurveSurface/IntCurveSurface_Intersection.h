// File generated by CPPExt (MPV)
//
#ifndef _IntCurveSurface_Intersection_OCWrappers_HeaderFile
#define _IntCurveSurface_Intersection_OCWrappers_HeaderFile

// include native header
#include <IntCurveSurface_Intersection.hxx>
#include "../Converter.h"


#include "IntCurveSurface_SequenceOfPnt.h"
#include "IntCurveSurface_SequenceOfSeg.h"


namespace OCNaroWrappers
{

ref class OCIntCurveSurface_IntersectionPoint;
ref class OCIntCurveSurface_IntersectionSegment;



public ref class OCIntCurveSurface_Intersection  {

protected:
  IntCurveSurface_Intersection* nativeHandle;
  OCIntCurveSurface_Intersection(OCDummy^) {};

public:
  property IntCurveSurface_Intersection* Handle
  {
    IntCurveSurface_Intersection* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntCurveSurface_Intersection(IntCurveSurface_Intersection* nativeHandle);

// Methods PUBLIC

//! returns the <done> field. <br>
 /*instead*/  System::Boolean IsDone() ;

//! returns the number of IntersectionPoint <br>
//!          if IsDone returns True. <br>
//!          else NotDone is raised. <br>
 /*instead*/  Standard_Integer NbPoints() ;

//! returns the IntersectionPoint of range <Index> <br>
//!          raises NotDone if the computation has failed or if <br>
//!          the computation has not been done <br>
//!          raises OutOfRange if Index is not in the range <1..NbPoints> <br>
 /*instead*/  OCIntCurveSurface_IntersectionPoint^ Point(Standard_Integer Index) ;

//! returns the number of IntersectionSegment <br>
//!          if IsDone returns True. <br>
//!          else NotDone is raised. <br>
 /*instead*/  Standard_Integer NbSegments() ;

//! returns the IntersectionSegment of range <Index> <br>
//!          raises NotDone if the computation has failed or if <br>
//!          the computation has not been done <br>
//!          raises OutOfRange if Index is not in the range <1..NbSegment> <br>
 /*instead*/  OCIntCurveSurface_IntersectionSegment^ Segment(Standard_Integer Index) ;

//! Dump all the fields. <br>
 /*instead*/  void Dump() ;

~OCIntCurveSurface_Intersection()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
