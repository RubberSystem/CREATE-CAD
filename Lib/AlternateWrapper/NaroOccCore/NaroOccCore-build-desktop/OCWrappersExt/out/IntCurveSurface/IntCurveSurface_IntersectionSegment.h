// File generated by CPPExt (MPV)
//
#ifndef _IntCurveSurface_IntersectionSegment_OCWrappers_HeaderFile
#define _IntCurveSurface_IntersectionSegment_OCWrappers_HeaderFile

// include native header
#include <IntCurveSurface_IntersectionSegment.hxx>
#include "../Converter.h"


#include "IntCurveSurface_IntersectionPoint.h"


namespace OCNaroWrappers
{

ref class OCIntCurveSurface_IntersectionPoint;


//! A IntersectionSegment describes a segment of curve <br>
//!          (w1,w2) where distance(C(w),Surface) is less than a <br>
//!          given tolerances. <br>
public ref class OCIntCurveSurface_IntersectionSegment  {

protected:
  IntCurveSurface_IntersectionSegment* nativeHandle;
  OCIntCurveSurface_IntersectionSegment(OCDummy^) {};

public:
  property IntCurveSurface_IntersectionSegment* Handle
  {
    IntCurveSurface_IntersectionSegment* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntCurveSurface_IntersectionSegment(IntCurveSurface_IntersectionSegment* nativeHandle);

// Methods PUBLIC


OCIntCurveSurface_IntersectionSegment();


OCIntCurveSurface_IntersectionSegment(OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ P1, OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ P2);


 /*instead*/  void SetValues(OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ P1, OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ P2) ;


 /*instead*/  void Values(OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ P1, OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ P2) ;


 /*instead*/  void FirstPoint(OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ P1) ;


 /*instead*/  void SecondPoint(OCNaroWrappers::OCIntCurveSurface_IntersectionPoint^ P2) ;


 /*instead*/  OCIntCurveSurface_IntersectionPoint^ FirstPoint() ;


 /*instead*/  OCIntCurveSurface_IntersectionPoint^ SecondPoint() ;


 /*instead*/  void Dump() ;

~OCIntCurveSurface_IntersectionSegment()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
