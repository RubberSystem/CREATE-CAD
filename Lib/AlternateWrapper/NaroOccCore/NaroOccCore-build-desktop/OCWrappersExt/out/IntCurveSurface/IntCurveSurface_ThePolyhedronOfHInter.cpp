// File generated by CPPExt (CPP file)
//

#include "IntCurveSurface_ThePolyhedronOfHInter.h"
#include "../Converter.h"
#include "../Bnd/Bnd_HArray1OfBox.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "../Adaptor3d/Adaptor3d_HSurfaceTool.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "../gp/gp_Pnt.h"
#include "../Bnd/Bnd_Box.h"
#include "../gp/gp_XYZ.h"


using namespace OCNaroWrappers;

OCIntCurveSurface_ThePolyhedronOfHInter::OCIntCurveSurface_ThePolyhedronOfHInter(IntCurveSurface_ThePolyhedronOfHInter* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCIntCurveSurface_ThePolyhedronOfHInter::OCIntCurveSurface_ThePolyhedronOfHInter(OCNaroWrappers::OCAdaptor3d_HSurface^ Surface, Standard_Integer nbdU, Standard_Integer nbdV, Standard_Real U1, Standard_Real V1, Standard_Real U2, Standard_Real V2) 
{
  nativeHandle = new IntCurveSurface_ThePolyhedronOfHInter(*((Handle_Adaptor3d_HSurface*)Surface->Handle), nbdU, nbdV, U1, V1, U2, V2);
}

OCIntCurveSurface_ThePolyhedronOfHInter::OCIntCurveSurface_ThePolyhedronOfHInter(OCNaroWrappers::OCAdaptor3d_HSurface^ Surface, OCNaroWrappers::OCTColStd_Array1OfReal^ Upars, OCNaroWrappers::OCTColStd_Array1OfReal^ Vpars) 
{
  nativeHandle = new IntCurveSurface_ThePolyhedronOfHInter(*((Handle_Adaptor3d_HSurface*)Surface->Handle), *((TColStd_Array1OfReal*)Upars->Handle), *((TColStd_Array1OfReal*)Vpars->Handle));
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::DeflectionOverEstimation(Standard_Real flec)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->DeflectionOverEstimation(flec);
}

 Standard_Real OCIntCurveSurface_ThePolyhedronOfHInter::DeflectionOnTriangle(OCNaroWrappers::OCAdaptor3d_HSurface^ Surface, Standard_Integer Index)
{
  return ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->DeflectionOnTriangle(*((Handle_Adaptor3d_HSurface*)Surface->Handle), Index);
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::UMinSingularity(System::Boolean Sing)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->UMinSingularity(OCConverter::BooleanToStandardBoolean(Sing));
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::UMaxSingularity(System::Boolean Sing)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->UMaxSingularity(OCConverter::BooleanToStandardBoolean(Sing));
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::VMinSingularity(System::Boolean Sing)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->VMinSingularity(OCConverter::BooleanToStandardBoolean(Sing));
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::VMaxSingularity(System::Boolean Sing)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->VMaxSingularity(OCConverter::BooleanToStandardBoolean(Sing));
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::Size(Standard_Integer& nbdu, Standard_Integer& nbdv)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Size(nbdu, nbdv);
}

 Standard_Integer OCIntCurveSurface_ThePolyhedronOfHInter::NbTriangles()
{
  return ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->NbTriangles();
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::Triangle(Standard_Integer Index, Standard_Integer& P1, Standard_Integer& P2, Standard_Integer& P3)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Triangle(Index, P1, P2, P3);
}

 Standard_Integer OCIntCurveSurface_ThePolyhedronOfHInter::TriConnex(Standard_Integer Triang, Standard_Integer Pivot, Standard_Integer Pedge, Standard_Integer& TriCon, Standard_Integer& OtherP)
{
  return ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->TriConnex(Triang, Pivot, Pedge, TriCon, OtherP);
}

 Standard_Integer OCIntCurveSurface_ThePolyhedronOfHInter::NbPoints()
{
  return ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->NbPoints();
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::Point(OCNaroWrappers::OCgp_Pnt^ thePnt, Standard_Integer lig, Standard_Integer col, Standard_Real U, Standard_Real V)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Point(*((gp_Pnt*)thePnt->Handle), lig, col, U, V);
}

OCgp_Pnt^ OCIntCurveSurface_ThePolyhedronOfHInter::Point(Standard_Integer Index, Standard_Real& U, Standard_Real& V)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Point(Index, U, V);
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCIntCurveSurface_ThePolyhedronOfHInter::Point(Standard_Integer Index)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Point(Index);
  return gcnew OCgp_Pnt(tmp);
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::Point(Standard_Integer Index, OCNaroWrappers::OCgp_Pnt^ P)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Point(Index, *((gp_Pnt*)P->Handle));
}

OCBnd_Box^ OCIntCurveSurface_ThePolyhedronOfHInter::Bounding()
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Bounding();
  return gcnew OCBnd_Box(tmp);
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::FillBounding()
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->FillBounding();
}

OCBnd_HArray1OfBox^ OCIntCurveSurface_ThePolyhedronOfHInter::ComponentsBounding()
{
  Handle(Bnd_HArray1OfBox) tmp = ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->ComponentsBounding();
  return gcnew OCBnd_HArray1OfBox(&tmp);
}

 Standard_Real OCIntCurveSurface_ThePolyhedronOfHInter::DeflectionOverEstimation()
{
  return ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->DeflectionOverEstimation();
}

 System::Boolean OCIntCurveSurface_ThePolyhedronOfHInter::HasUMinSingularity()
{
  return OCConverter::StandardBooleanToBoolean(((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->HasUMinSingularity());
}

 System::Boolean OCIntCurveSurface_ThePolyhedronOfHInter::HasUMaxSingularity()
{
  return OCConverter::StandardBooleanToBoolean(((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->HasUMaxSingularity());
}

 System::Boolean OCIntCurveSurface_ThePolyhedronOfHInter::HasVMinSingularity()
{
  return OCConverter::StandardBooleanToBoolean(((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->HasVMinSingularity());
}

 System::Boolean OCIntCurveSurface_ThePolyhedronOfHInter::HasVMaxSingularity()
{
  return OCConverter::StandardBooleanToBoolean(((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->HasVMaxSingularity());
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::PlaneEquation(Standard_Integer Triang, OCNaroWrappers::OCgp_XYZ^ NormalVector, Standard_Real& PolarDistance)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->PlaneEquation(Triang, *((gp_XYZ*)NormalVector->Handle), PolarDistance);
}

 System::Boolean OCIntCurveSurface_ThePolyhedronOfHInter::Contain(Standard_Integer Triang, OCNaroWrappers::OCgp_Pnt^ ThePnt)
{
  return OCConverter::StandardBooleanToBoolean(((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Contain(Triang, *((gp_Pnt*)ThePnt->Handle)));
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::Parameters(Standard_Integer Index, Standard_Real& U, Standard_Real& V)
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Parameters(Index, U, V);
}

 System::Boolean OCIntCurveSurface_ThePolyhedronOfHInter::IsOnBound(Standard_Integer Index1, Standard_Integer Index2)
{
  return OCConverter::StandardBooleanToBoolean(((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->IsOnBound(Index1, Index2));
}

 Standard_Real OCIntCurveSurface_ThePolyhedronOfHInter::GetBorderDeflection()
{
  return ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->GetBorderDeflection();
}

 void OCIntCurveSurface_ThePolyhedronOfHInter::Dump()
{
  ((IntCurveSurface_ThePolyhedronOfHInter*)nativeHandle)->Dump();
}


