// File generated by CPPExt (MPV)
//
#ifndef _AppDef_ResConstraintOfMyGradientOfCompute_OCWrappers_HeaderFile
#define _AppDef_ResConstraintOfMyGradientOfCompute_OCWrappers_HeaderFile

// include native header
#include <AppDef_ResConstraintOfMyGradientOfCompute.hxx>
#include "../Converter.h"


#include "../math/math_Matrix.h"
#include "../math/math_Vector.h"
#include "../TColStd/TColStd_Array1OfInteger.h"


namespace OCNaroWrappers
{

ref class OCAppDef_MultiLine;
ref class OCAppDef_MyLineTool;
ref class OCAppParCurves_MultiCurve;
ref class OCAppParCurves_HArray1OfConstraintCouple;
ref class OCmath_Matrix;
ref class OCmath_Vector;



public ref class OCAppDef_ResConstraintOfMyGradientOfCompute  {

protected:
  AppDef_ResConstraintOfMyGradientOfCompute* nativeHandle;
  OCAppDef_ResConstraintOfMyGradientOfCompute(OCDummy^) {};

public:
  property AppDef_ResConstraintOfMyGradientOfCompute* Handle
  {
    AppDef_ResConstraintOfMyGradientOfCompute* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCAppDef_ResConstraintOfMyGradientOfCompute(AppDef_ResConstraintOfMyGradientOfCompute* nativeHandle);

// Methods PUBLIC


OCAppDef_ResConstraintOfMyGradientOfCompute(OCNaroWrappers::OCAppDef_MultiLine^ SSP, OCNaroWrappers::OCAppParCurves_MultiCurve^ SCurv, Standard_Integer FirstPoint, Standard_Integer LastPoint, OCNaroWrappers::OCAppParCurves_HArray1OfConstraintCouple^ Constraints, OCNaroWrappers::OCmath_Matrix^ Bern, OCNaroWrappers::OCmath_Matrix^ DerivativeBern, Standard_Real Tolerance);


 /*instead*/  System::Boolean IsDone() ;


 /*instead*/  Standard_Real Error() ;


 /*instead*/  OCmath_Matrix^ ConstraintMatrix() ;


 /*instead*/  OCmath_Vector^ Duale() ;


 /*instead*/  OCmath_Matrix^ ConstraintDerivative(OCNaroWrappers::OCAppDef_MultiLine^ SSP, OCNaroWrappers::OCmath_Vector^ Parameters, Standard_Integer Deg, OCNaroWrappers::OCmath_Matrix^ DA) ;


 /*instead*/  OCmath_Matrix^ InverseMatrix() ;

~OCAppDef_ResConstraintOfMyGradientOfCompute()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
