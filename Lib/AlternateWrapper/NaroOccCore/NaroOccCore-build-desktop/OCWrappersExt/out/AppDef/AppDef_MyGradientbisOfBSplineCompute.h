// File generated by CPPExt (MPV)
//
#ifndef _AppDef_MyGradientbisOfBSplineCompute_OCWrappers_HeaderFile
#define _AppDef_MyGradientbisOfBSplineCompute_OCWrappers_HeaderFile

// include native header
#include <AppDef_MyGradientbisOfBSplineCompute.hxx>
#include "../Converter.h"


#include "../AppParCurves/AppParCurves_MultiCurve.h"
#include "../math/math_Vector.h"


namespace OCNaroWrappers
{

ref class OCAppDef_MultiLine;
ref class OCAppDef_MyLineTool;
ref class OCAppDef_ParLeastSquareOfMyGradientbisOfBSplineCompute;
ref class OCAppDef_ResConstraintOfMyGradientbisOfBSplineCompute;
ref class OCAppDef_ParFunctionOfMyGradientbisOfBSplineCompute;
ref class OCAppDef_Gradient_BFGSOfMyGradientbisOfBSplineCompute;
ref class OCAppParCurves_HArray1OfConstraintCouple;
ref class OCmath_Vector;
ref class OCAppParCurves_MultiCurve;



public ref class OCAppDef_MyGradientbisOfBSplineCompute  {

protected:
  AppDef_MyGradientbisOfBSplineCompute* nativeHandle;
  OCAppDef_MyGradientbisOfBSplineCompute(OCDummy^) {};

public:
  property AppDef_MyGradientbisOfBSplineCompute* Handle
  {
    AppDef_MyGradientbisOfBSplineCompute* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCAppDef_MyGradientbisOfBSplineCompute(AppDef_MyGradientbisOfBSplineCompute* nativeHandle);

// Methods PUBLIC


OCAppDef_MyGradientbisOfBSplineCompute(OCNaroWrappers::OCAppDef_MultiLine^ SSP, Standard_Integer FirstPoint, Standard_Integer LastPoint, OCNaroWrappers::OCAppParCurves_HArray1OfConstraintCouple^ TheConstraints, OCNaroWrappers::OCmath_Vector^ Parameters, Standard_Integer Deg, Standard_Real Tol3d, Standard_Real Tol2d, Standard_Integer NbIterations);


 /*instead*/  System::Boolean IsDone() ;


 /*instead*/  OCAppParCurves_MultiCurve^ Value() ;


 /*instead*/  Standard_Real Error(Standard_Integer Index) ;


 /*instead*/  Standard_Real MaxError3d() ;


 /*instead*/  Standard_Real MaxError2d() ;


 /*instead*/  Standard_Real AverageError() ;

~OCAppDef_MyGradientbisOfBSplineCompute()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
