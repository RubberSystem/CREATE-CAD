// File generated by CPPExt (MPV)
//
#ifndef _AppDef_Compute_OCWrappers_HeaderFile
#define _AppDef_Compute_OCWrappers_HeaderFile

// include native header
#include <AppDef_Compute.hxx>
#include "../Converter.h"


#include "../AppParCurves/AppParCurves_SequenceOfMultiCurve.h"
#include "../AppParCurves/AppParCurves_MultiCurve.h"
#include "../AppParCurves/AppParCurves_MultiBSpCurve.h"
#include "../Approx/Approx_ParametrizationType.h"
#include "../Approx/Approx_SequenceOfHArray1OfReal.h"
#include "../TColStd/TColStd_SequenceOfReal.h"
#include "../AppParCurves/AppParCurves_Constraint.h"


namespace OCNaroWrappers
{

ref class OCTColStd_HArray1OfReal;
ref class OCAppParCurves_HArray1OfConstraintCouple;
ref class OCAppDef_MultiLine;
ref class OCAppDef_MyLineTool;
ref class OCAppDef_MyGradientOfCompute;
ref class OCAppDef_ParLeastSquareOfMyGradientOfCompute;
ref class OCAppDef_ResConstraintOfMyGradientOfCompute;
ref class OCAppDef_ParFunctionOfMyGradientOfCompute;
ref class OCAppDef_Gradient_BFGSOfMyGradientOfCompute;
ref class OCmath_Vector;
ref class OCAppParCurves_MultiCurve;
ref class OCAppParCurves_MultiBSpCurve;
ref class OCTColStd_Array1OfReal;



public ref class OCAppDef_Compute  {

protected:
  AppDef_Compute* nativeHandle;
  OCAppDef_Compute(OCDummy^) {};

public:
  property AppDef_Compute* Handle
  {
    AppDef_Compute* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCAppDef_Compute(AppDef_Compute* nativeHandle);

// Methods PUBLIC


OCAppDef_Compute(OCNaroWrappers::OCAppDef_MultiLine^ Line, Standard_Integer degreemin, Standard_Integer degreemax, Standard_Real Tolerance3d, Standard_Real Tolerance2d, Standard_Integer NbIterations, System::Boolean cutting, OCApprox_ParametrizationType parametrization, System::Boolean Squares);


OCAppDef_Compute(OCNaroWrappers::OCAppDef_MultiLine^ Line, OCNaroWrappers::OCmath_Vector^ Parameters, Standard_Integer degreemin, Standard_Integer degreemax, Standard_Real Tolerance3d, Standard_Real Tolerance2d, Standard_Integer NbIterations, System::Boolean cutting, System::Boolean Squares);


OCAppDef_Compute(OCNaroWrappers::OCmath_Vector^ Parameters, Standard_Integer degreemin, Standard_Integer degreemax, Standard_Real Tolerance3d, Standard_Real Tolerance2d, Standard_Integer NbIterations, System::Boolean cutting, System::Boolean Squares);


OCAppDef_Compute(Standard_Integer degreemin, Standard_Integer degreemax, Standard_Real Tolerance3d, Standard_Real Tolerance2d, Standard_Integer NbIterations, System::Boolean cutting, OCApprox_ParametrizationType parametrization, System::Boolean Squares);


 /*instead*/  void Init(Standard_Integer degreemin, Standard_Integer degreemax, Standard_Real Tolerance3d, Standard_Real Tolerance2d, Standard_Integer NbIterations, System::Boolean cutting, OCApprox_ParametrizationType parametrization, System::Boolean Squares) ;


 /*instead*/  void Perform(OCNaroWrappers::OCAppDef_MultiLine^ Line) ;


 /*instead*/  void SetDegrees(Standard_Integer degreemin, Standard_Integer degreemax) ;


 /*instead*/  void SetTolerances(Standard_Real Tolerance3d, Standard_Real Tolerance2d) ;


 /*instead*/  void SetConstraints(OCAppParCurves_Constraint firstC, OCAppParCurves_Constraint lastC) ;


 /*instead*/  System::Boolean IsAllApproximated() ;


 /*instead*/  System::Boolean IsToleranceReached() ;


 /*instead*/  void Error(Standard_Integer Index, Standard_Real& tol3d, Standard_Real& tol2d) ;


 /*instead*/  Standard_Integer NbMultiCurves() ;


 /*instead*/  OCAppParCurves_MultiCurve^ Value(Standard_Integer Index) ;


 /*instead*/  OCAppParCurves_MultiCurve^ ChangeValue(Standard_Integer Index) ;


 /*instead*/  OCAppParCurves_MultiBSpCurve^ SplineValue() ;


 /*instead*/  void Parametrization(OCApprox_ParametrizationType& partype) ;


 /*instead*/  OCTColStd_Array1OfReal^ Parameters(Standard_Integer Index) ;

~OCAppDef_Compute()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
