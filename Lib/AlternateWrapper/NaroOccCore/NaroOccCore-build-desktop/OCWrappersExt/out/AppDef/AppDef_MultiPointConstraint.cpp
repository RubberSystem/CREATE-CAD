// File generated by CPPExt (CPP file)
//

#include "AppDef_MultiPointConstraint.h"
#include "../Converter.h"
#include "../MMgt/MMgt_TShared.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../TColgp/TColgp_Array1OfVec.h"
#include "../TColgp/TColgp_Array1OfVec2d.h"
#include "../gp/gp_Vec.h"
#include "../gp/gp_Vec2d.h"


using namespace OCNaroWrappers;

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(AppDef_MultiPointConstraint* nativeHandle) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint() : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint();
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(Standard_Integer NbPoints, Standard_Integer NbPoints2d) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(NbPoints, NbPoints2d);
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(OCNaroWrappers::OCTColgp_Array1OfPnt^ tabP) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(*((TColgp_Array1OfPnt*)tabP->Handle));
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ tabP) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(*((TColgp_Array1OfPnt2d*)tabP->Handle));
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(OCNaroWrappers::OCTColgp_Array1OfPnt^ tabP, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ tabP2d) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(*((TColgp_Array1OfPnt*)tabP->Handle), *((TColgp_Array1OfPnt2d*)tabP2d->Handle));
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(OCNaroWrappers::OCTColgp_Array1OfPnt^ tabP, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ tabP2d, OCNaroWrappers::OCTColgp_Array1OfVec^ tabVec, OCNaroWrappers::OCTColgp_Array1OfVec2d^ tabVec2d, OCNaroWrappers::OCTColgp_Array1OfVec^ tabCur, OCNaroWrappers::OCTColgp_Array1OfVec2d^ tabCur2d) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(*((TColgp_Array1OfPnt*)tabP->Handle), *((TColgp_Array1OfPnt2d*)tabP2d->Handle), *((TColgp_Array1OfVec*)tabVec->Handle), *((TColgp_Array1OfVec2d*)tabVec2d->Handle), *((TColgp_Array1OfVec*)tabCur->Handle), *((TColgp_Array1OfVec2d*)tabCur2d->Handle));
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(OCNaroWrappers::OCTColgp_Array1OfPnt^ tabP, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ tabP2d, OCNaroWrappers::OCTColgp_Array1OfVec^ tabVec, OCNaroWrappers::OCTColgp_Array1OfVec2d^ tabVec2d) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(*((TColgp_Array1OfPnt*)tabP->Handle), *((TColgp_Array1OfPnt2d*)tabP2d->Handle), *((TColgp_Array1OfVec*)tabVec->Handle), *((TColgp_Array1OfVec2d*)tabVec2d->Handle));
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(OCNaroWrappers::OCTColgp_Array1OfPnt^ tabP, OCNaroWrappers::OCTColgp_Array1OfVec^ tabVec, OCNaroWrappers::OCTColgp_Array1OfVec^ tabCur) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(*((TColgp_Array1OfPnt*)tabP->Handle), *((TColgp_Array1OfVec*)tabVec->Handle), *((TColgp_Array1OfVec*)tabCur->Handle));
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(OCNaroWrappers::OCTColgp_Array1OfPnt^ tabP, OCNaroWrappers::OCTColgp_Array1OfVec^ tabVec) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(*((TColgp_Array1OfPnt*)tabP->Handle), *((TColgp_Array1OfVec*)tabVec->Handle));
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ tabP2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ tabVec2d) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(*((TColgp_Array1OfPnt2d*)tabP2d->Handle), *((TColgp_Array1OfVec2d*)tabVec2d->Handle));
}

OCAppDef_MultiPointConstraint::OCAppDef_MultiPointConstraint(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ tabP2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ tabVec2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ tabCur2d) : OCAppParCurves_MultiPoint((OCDummy^)nullptr)

{
  nativeHandle = new AppDef_MultiPointConstraint(*((TColgp_Array1OfPnt2d*)tabP2d->Handle), *((TColgp_Array1OfVec2d*)tabVec2d->Handle), *((TColgp_Array1OfVec2d*)tabCur2d->Handle));
}

 void OCAppDef_MultiPointConstraint::SetTang(Standard_Integer Index, OCNaroWrappers::OCgp_Vec^ Tang)
{
  ((AppDef_MultiPointConstraint*)nativeHandle)->SetTang(Index, *((gp_Vec*)Tang->Handle));
}

OCgp_Vec^ OCAppDef_MultiPointConstraint::Tang(Standard_Integer Index)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ((AppDef_MultiPointConstraint*)nativeHandle)->Tang(Index);
  return gcnew OCgp_Vec(tmp);
}

 void OCAppDef_MultiPointConstraint::SetTang2d(Standard_Integer Index, OCNaroWrappers::OCgp_Vec2d^ Tang2d)
{
  ((AppDef_MultiPointConstraint*)nativeHandle)->SetTang2d(Index, *((gp_Vec2d*)Tang2d->Handle));
}

OCgp_Vec2d^ OCAppDef_MultiPointConstraint::Tang2d(Standard_Integer Index)
{
  gp_Vec2d* tmp = new gp_Vec2d();
  *tmp = ((AppDef_MultiPointConstraint*)nativeHandle)->Tang2d(Index);
  return gcnew OCgp_Vec2d(tmp);
}

 void OCAppDef_MultiPointConstraint::SetCurv(Standard_Integer Index, OCNaroWrappers::OCgp_Vec^ Curv)
{
  ((AppDef_MultiPointConstraint*)nativeHandle)->SetCurv(Index, *((gp_Vec*)Curv->Handle));
}

OCgp_Vec^ OCAppDef_MultiPointConstraint::Curv(Standard_Integer Index)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ((AppDef_MultiPointConstraint*)nativeHandle)->Curv(Index);
  return gcnew OCgp_Vec(tmp);
}

 void OCAppDef_MultiPointConstraint::SetCurv2d(Standard_Integer Index, OCNaroWrappers::OCgp_Vec2d^ Curv2d)
{
  ((AppDef_MultiPointConstraint*)nativeHandle)->SetCurv2d(Index, *((gp_Vec2d*)Curv2d->Handle));
}

OCgp_Vec2d^ OCAppDef_MultiPointConstraint::Curv2d(Standard_Integer Index)
{
  gp_Vec2d* tmp = new gp_Vec2d();
  *tmp = ((AppDef_MultiPointConstraint*)nativeHandle)->Curv2d(Index);
  return gcnew OCgp_Vec2d(tmp);
}

 System::Boolean OCAppDef_MultiPointConstraint::IsTangencyPoint()
{
  return OCConverter::StandardBooleanToBoolean(((AppDef_MultiPointConstraint*)nativeHandle)->IsTangencyPoint());
}

 System::Boolean OCAppDef_MultiPointConstraint::IsCurvaturePoint()
{
  return OCConverter::StandardBooleanToBoolean(((AppDef_MultiPointConstraint*)nativeHandle)->IsCurvaturePoint());
}

 void OCAppDef_MultiPointConstraint::Dump(Standard_OStream& o)
{
  ((AppDef_MultiPointConstraint*)nativeHandle)->Dump(o);
}


