// File generated by CPPExt (CPP file)
//

#include "BOPTools_IDMapOfPaveBlockIMapOfInteger.h"
#include "../Converter.h"
#include "BOPTools_PaveBlock.h"
#include "../TColStd/TColStd_IndexedMapOfInteger.h"
#include "BOPTools_PaveBlockMapHasher.h"
#include "BOPTools_IndexedDataMapNodeOfIDMapOfPaveBlockIMapOfInteger.h"


using namespace OCNaroWrappers;

OCBOPTools_IDMapOfPaveBlockIMapOfInteger::OCBOPTools_IDMapOfPaveBlockIMapOfInteger(BOPTools_IDMapOfPaveBlockIMapOfInteger* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBOPTools_IDMapOfPaveBlockIMapOfInteger::OCBOPTools_IDMapOfPaveBlockIMapOfInteger(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BOPTools_IDMapOfPaveBlockIMapOfInteger(NbBuckets);
}

OCBOPTools_IDMapOfPaveBlockIMapOfInteger^ OCBOPTools_IDMapOfPaveBlockIMapOfInteger::Assign(OCNaroWrappers::OCBOPTools_IDMapOfPaveBlockIMapOfInteger^ Other)
{
  BOPTools_IDMapOfPaveBlockIMapOfInteger* tmp = new BOPTools_IDMapOfPaveBlockIMapOfInteger(0);
  *tmp = ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->Assign(*((BOPTools_IDMapOfPaveBlockIMapOfInteger*)Other->Handle));
  return gcnew OCBOPTools_IDMapOfPaveBlockIMapOfInteger(tmp);
}

 void OCBOPTools_IDMapOfPaveBlockIMapOfInteger::ReSize(Standard_Integer NbBuckets)
{
  ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCBOPTools_IDMapOfPaveBlockIMapOfInteger::Add(OCNaroWrappers::OCBOPTools_PaveBlock^ K, OCNaroWrappers::OCTColStd_IndexedMapOfInteger^ I)
{
  return ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->Add(*((BOPTools_PaveBlock*)K->Handle), *((TColStd_IndexedMapOfInteger*)I->Handle));
}

 void OCBOPTools_IDMapOfPaveBlockIMapOfInteger::Substitute(Standard_Integer I, OCNaroWrappers::OCBOPTools_PaveBlock^ K, OCNaroWrappers::OCTColStd_IndexedMapOfInteger^ T)
{
  ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->Substitute(I, *((BOPTools_PaveBlock*)K->Handle), *((TColStd_IndexedMapOfInteger*)T->Handle));
}

 void OCBOPTools_IDMapOfPaveBlockIMapOfInteger::RemoveLast()
{
  ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->RemoveLast();
}

 System::Boolean OCBOPTools_IDMapOfPaveBlockIMapOfInteger::Contains(OCNaroWrappers::OCBOPTools_PaveBlock^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->Contains(*((BOPTools_PaveBlock*)K->Handle)));
}

OCBOPTools_PaveBlock^ OCBOPTools_IDMapOfPaveBlockIMapOfInteger::FindKey(Standard_Integer I)
{
  BOPTools_PaveBlock* tmp = new BOPTools_PaveBlock();
  *tmp = ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->FindKey(I);
  return gcnew OCBOPTools_PaveBlock(tmp);
}

OCTColStd_IndexedMapOfInteger^ OCBOPTools_IDMapOfPaveBlockIMapOfInteger::FindFromIndex(Standard_Integer I)
{
  TColStd_IndexedMapOfInteger* tmp = new TColStd_IndexedMapOfInteger(0);
  *tmp = ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->FindFromIndex(I);
  return gcnew OCTColStd_IndexedMapOfInteger(tmp);
}

OCTColStd_IndexedMapOfInteger^ OCBOPTools_IDMapOfPaveBlockIMapOfInteger::ChangeFromIndex(Standard_Integer I)
{
  TColStd_IndexedMapOfInteger* tmp = new TColStd_IndexedMapOfInteger(0);
  *tmp = ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->ChangeFromIndex(I);
  return gcnew OCTColStd_IndexedMapOfInteger(tmp);
}

 Standard_Integer OCBOPTools_IDMapOfPaveBlockIMapOfInteger::FindIndex(OCNaroWrappers::OCBOPTools_PaveBlock^ K)
{
  return ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->FindIndex(*((BOPTools_PaveBlock*)K->Handle));
}

OCTColStd_IndexedMapOfInteger^ OCBOPTools_IDMapOfPaveBlockIMapOfInteger::FindFromKey(OCNaroWrappers::OCBOPTools_PaveBlock^ K)
{
  TColStd_IndexedMapOfInteger* tmp = new TColStd_IndexedMapOfInteger(0);
  *tmp = ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->FindFromKey(*((BOPTools_PaveBlock*)K->Handle));
  return gcnew OCTColStd_IndexedMapOfInteger(tmp);
}

OCTColStd_IndexedMapOfInteger^ OCBOPTools_IDMapOfPaveBlockIMapOfInteger::ChangeFromKey(OCNaroWrappers::OCBOPTools_PaveBlock^ K)
{
  TColStd_IndexedMapOfInteger* tmp = new TColStd_IndexedMapOfInteger(0);
  *tmp = ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->ChangeFromKey(*((BOPTools_PaveBlock*)K->Handle));
  return gcnew OCTColStd_IndexedMapOfInteger(tmp);
}

 Standard_Address OCBOPTools_IDMapOfPaveBlockIMapOfInteger::FindFromKey1(OCNaroWrappers::OCBOPTools_PaveBlock^ K)
{
  return ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->FindFromKey1(*((BOPTools_PaveBlock*)K->Handle));
}

 Standard_Address OCBOPTools_IDMapOfPaveBlockIMapOfInteger::ChangeFromKey1(OCNaroWrappers::OCBOPTools_PaveBlock^ K)
{
  return ((BOPTools_IDMapOfPaveBlockIMapOfInteger*)nativeHandle)->ChangeFromKey1(*((BOPTools_PaveBlock*)K->Handle));
}


