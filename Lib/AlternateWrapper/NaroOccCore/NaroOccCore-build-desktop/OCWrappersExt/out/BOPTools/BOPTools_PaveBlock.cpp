// File generated by CPPExt (CPP file)
//

#include "BOPTools_PaveBlock.h"
#include "../Converter.h"
#include "BOPTools_Pave.h"
#include "../IntTools/IntTools_ShrunkRange.h"
#include "BOPTools_PointBetween.h"
#include "../IntTools/IntTools_Curve.h"
#include "../IntTools/IntTools_Range.h"


using namespace OCNaroWrappers;

OCBOPTools_PaveBlock::OCBOPTools_PaveBlock(BOPTools_PaveBlock* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBOPTools_PaveBlock::OCBOPTools_PaveBlock() 
{
  nativeHandle = new BOPTools_PaveBlock();
}

OCBOPTools_PaveBlock::OCBOPTools_PaveBlock(Standard_Integer anEdge, OCNaroWrappers::OCBOPTools_Pave^ aPave1, OCNaroWrappers::OCBOPTools_Pave^ aPave2) 
{
  nativeHandle = new BOPTools_PaveBlock(anEdge, *((BOPTools_Pave*)aPave1->Handle), *((BOPTools_Pave*)aPave2->Handle));
}

 void OCBOPTools_PaveBlock::SetEdge(Standard_Integer anEdge)
{
  ((BOPTools_PaveBlock*)nativeHandle)->SetEdge(anEdge);
}

 void OCBOPTools_PaveBlock::SetOriginalEdge(Standard_Integer anEdge)
{
  ((BOPTools_PaveBlock*)nativeHandle)->SetOriginalEdge(anEdge);
}

 void OCBOPTools_PaveBlock::SetPave1(OCNaroWrappers::OCBOPTools_Pave^ aPave)
{
  ((BOPTools_PaveBlock*)nativeHandle)->SetPave1(*((BOPTools_Pave*)aPave->Handle));
}

 void OCBOPTools_PaveBlock::SetPave2(OCNaroWrappers::OCBOPTools_Pave^ aPave)
{
  ((BOPTools_PaveBlock*)nativeHandle)->SetPave2(*((BOPTools_Pave*)aPave->Handle));
}

 void OCBOPTools_PaveBlock::SetShrunkRange(OCNaroWrappers::OCIntTools_ShrunkRange^ aSR)
{
  ((BOPTools_PaveBlock*)nativeHandle)->SetShrunkRange(*((IntTools_ShrunkRange*)aSR->Handle));
}

 void OCBOPTools_PaveBlock::SetPointBetween(OCNaroWrappers::OCBOPTools_PointBetween^ aP)
{
  ((BOPTools_PaveBlock*)nativeHandle)->SetPointBetween(*((BOPTools_PointBetween*)aP->Handle));
}

 void OCBOPTools_PaveBlock::SetCurve(OCNaroWrappers::OCIntTools_Curve^ aC)
{
  ((BOPTools_PaveBlock*)nativeHandle)->SetCurve(*((IntTools_Curve*)aC->Handle));
}

 void OCBOPTools_PaveBlock::SetFace1(Standard_Integer nF1)
{
  ((BOPTools_PaveBlock*)nativeHandle)->SetFace1(nF1);
}

 void OCBOPTools_PaveBlock::SetFace2(Standard_Integer nF2)
{
  ((BOPTools_PaveBlock*)nativeHandle)->SetFace2(nF2);
}

 Standard_Integer OCBOPTools_PaveBlock::Edge()
{
  return ((BOPTools_PaveBlock*)nativeHandle)->Edge();
}

 Standard_Integer OCBOPTools_PaveBlock::OriginalEdge()
{
  return ((BOPTools_PaveBlock*)nativeHandle)->OriginalEdge();
}

OCBOPTools_Pave^ OCBOPTools_PaveBlock::Pave1()
{
  BOPTools_Pave* tmp = new BOPTools_Pave();
  *tmp = ((BOPTools_PaveBlock*)nativeHandle)->Pave1();
  return gcnew OCBOPTools_Pave(tmp);
}

OCBOPTools_Pave^ OCBOPTools_PaveBlock::Pave2()
{
  BOPTools_Pave* tmp = new BOPTools_Pave();
  *tmp = ((BOPTools_PaveBlock*)nativeHandle)->Pave2();
  return gcnew OCBOPTools_Pave(tmp);
}

 System::Boolean OCBOPTools_PaveBlock::IsValid()
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_PaveBlock*)nativeHandle)->IsValid());
}

 System::Boolean OCBOPTools_PaveBlock::IsEqual(OCNaroWrappers::OCBOPTools_PaveBlock^ Other)
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_PaveBlock*)nativeHandle)->IsEqual(*((BOPTools_PaveBlock*)Other->Handle)));
}

 void OCBOPTools_PaveBlock::Parameters(Standard_Real& aT1, Standard_Real& aT2)
{
  ((BOPTools_PaveBlock*)nativeHandle)->Parameters(aT1, aT2);
}

OCIntTools_Range^ OCBOPTools_PaveBlock::Range()
{
  IntTools_Range* tmp = new IntTools_Range();
  *tmp = ((BOPTools_PaveBlock*)nativeHandle)->Range();
  return gcnew OCIntTools_Range(tmp);
}

OCIntTools_ShrunkRange^ OCBOPTools_PaveBlock::ShrunkRange()
{
  IntTools_ShrunkRange* tmp = new IntTools_ShrunkRange();
  *tmp = ((BOPTools_PaveBlock*)nativeHandle)->ShrunkRange();
  return gcnew OCIntTools_ShrunkRange(tmp);
}

OCBOPTools_PointBetween^ OCBOPTools_PaveBlock::PointBetween()
{
  BOPTools_PointBetween* tmp = new BOPTools_PointBetween();
  *tmp = ((BOPTools_PaveBlock*)nativeHandle)->PointBetween();
  return gcnew OCBOPTools_PointBetween(tmp);
}

OCIntTools_Curve^ OCBOPTools_PaveBlock::Curve()
{
  IntTools_Curve* tmp = new IntTools_Curve();
  *tmp = ((BOPTools_PaveBlock*)nativeHandle)->Curve();
  return gcnew OCIntTools_Curve(tmp);
}

 Standard_Integer OCBOPTools_PaveBlock::Face1()
{
  return ((BOPTools_PaveBlock*)nativeHandle)->Face1();
}

 Standard_Integer OCBOPTools_PaveBlock::Face2()
{
  return ((BOPTools_PaveBlock*)nativeHandle)->Face2();
}

 System::Boolean OCBOPTools_PaveBlock::IsInBlock(OCNaroWrappers::OCBOPTools_Pave^ aPaveX)
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_PaveBlock*)nativeHandle)->IsInBlock(*((BOPTools_Pave*)aPaveX->Handle)));
}


