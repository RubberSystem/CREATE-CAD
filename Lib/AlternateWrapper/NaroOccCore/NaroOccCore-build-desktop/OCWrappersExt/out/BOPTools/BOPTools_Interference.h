// File generated by CPPExt (MPV)
//
#ifndef _BOPTools_Interference_OCWrappers_HeaderFile
#define _BOPTools_Interference_OCWrappers_HeaderFile

// include native header
#include <BOPTools_Interference.hxx>
#include "../Converter.h"


#include "../BooleanOperations/BooleanOperations_KindOfInterference.h"


namespace OCNaroWrappers
{



//! class for storing information about an interference <br>
//!         that  takes  place  between  given  shape and shape <br>
//!         with  DS-index =aWith <br>
public ref class OCBOPTools_Interference  {

protected:
  BOPTools_Interference* nativeHandle;
  OCBOPTools_Interference(OCDummy^) {};

public:
  property BOPTools_Interference* Handle
  {
    BOPTools_Interference* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBOPTools_Interference(BOPTools_Interference* nativeHandle);

// Methods PUBLIC


//! Empty constructor <br>
OCBOPTools_Interference();

//!  constructor <br>
//! aWith  -  DS-index for the opposite shape <br>
//! aType  -  the type of the  interference <br>
//! anIndex-  the index of the result in corresponding <br>
//! interference table  (if the result is computed <br>
//! but there is no result  ->   anIndex=0) <br>
OCBOPTools_Interference(Standard_Integer aWith, OCBooleanOperations_KindOfInterference aType, Standard_Integer anIndex);


//! Modifier <br>
 /*instead*/  void SetWith(Standard_Integer aWith) ;


//! Modifier <br>
 /*instead*/  void SetType(OCBooleanOperations_KindOfInterference aType) ;


//! Modifier <br>
 /*instead*/  void SetIndex(Standard_Integer anIndex) ;


//! Selector <br>
 /*instead*/  Standard_Integer With() ;


//! Selector <br>
 /*instead*/  OCBooleanOperations_KindOfInterference Type() ;


//! Selector <br>
 /*instead*/  Standard_Integer Index() ;

~OCBOPTools_Interference()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
