// File generated by CPPExt (CPP file)
//

#include "BOPTools_Array1OfPave.h"
#include "../Converter.h"
#include "BOPTools_Pave.h"


using namespace OCNaroWrappers;

OCBOPTools_Array1OfPave::OCBOPTools_Array1OfPave(BOPTools_Array1OfPave* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBOPTools_Array1OfPave::OCBOPTools_Array1OfPave(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new BOPTools_Array1OfPave(Low, Up);
}

OCBOPTools_Array1OfPave::OCBOPTools_Array1OfPave(OCNaroWrappers::OCBOPTools_Pave^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new BOPTools_Array1OfPave(*((BOPTools_Pave*)Item->Handle), Low, Up);
}

 void OCBOPTools_Array1OfPave::Init(OCNaroWrappers::OCBOPTools_Pave^ V)
{
  ((BOPTools_Array1OfPave*)nativeHandle)->Init(*((BOPTools_Pave*)V->Handle));
}

 System::Boolean OCBOPTools_Array1OfPave::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_Array1OfPave*)nativeHandle)->IsAllocated());
}

OCBOPTools_Array1OfPave^ OCBOPTools_Array1OfPave::Assign(OCNaroWrappers::OCBOPTools_Array1OfPave^ Other)
{
  BOPTools_Array1OfPave* tmp = new BOPTools_Array1OfPave(0, 0);
  *tmp = ((BOPTools_Array1OfPave*)nativeHandle)->Assign(*((BOPTools_Array1OfPave*)Other->Handle));
  return gcnew OCBOPTools_Array1OfPave(tmp);
}

 Standard_Integer OCBOPTools_Array1OfPave::Length()
{
  return ((BOPTools_Array1OfPave*)nativeHandle)->Length();
}

 Standard_Integer OCBOPTools_Array1OfPave::Lower()
{
  return ((BOPTools_Array1OfPave*)nativeHandle)->Lower();
}

 Standard_Integer OCBOPTools_Array1OfPave::Upper()
{
  return ((BOPTools_Array1OfPave*)nativeHandle)->Upper();
}

 void OCBOPTools_Array1OfPave::SetValue(Standard_Integer Index, OCNaroWrappers::OCBOPTools_Pave^ Value)
{
  ((BOPTools_Array1OfPave*)nativeHandle)->SetValue(Index, *((BOPTools_Pave*)Value->Handle));
}

OCBOPTools_Pave^ OCBOPTools_Array1OfPave::Value(Standard_Integer Index)
{
  BOPTools_Pave* tmp = new BOPTools_Pave();
  *tmp = ((BOPTools_Array1OfPave*)nativeHandle)->Value(Index);
  return gcnew OCBOPTools_Pave(tmp);
}

OCBOPTools_Pave^ OCBOPTools_Array1OfPave::ChangeValue(Standard_Integer Index)
{
  BOPTools_Pave* tmp = new BOPTools_Pave();
  *tmp = ((BOPTools_Array1OfPave*)nativeHandle)->ChangeValue(Index);
  return gcnew OCBOPTools_Pave(tmp);
}


