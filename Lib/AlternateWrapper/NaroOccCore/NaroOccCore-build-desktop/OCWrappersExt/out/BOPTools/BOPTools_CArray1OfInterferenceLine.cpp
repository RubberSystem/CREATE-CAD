// File generated by CPPExt (CPP file)
//

#include "BOPTools_CArray1OfInterferenceLine.h"
#include "../Converter.h"
#include "BOPTools_InterferenceLine.h"


using namespace OCNaroWrappers;

OCBOPTools_CArray1OfInterferenceLine::OCBOPTools_CArray1OfInterferenceLine(BOPTools_CArray1OfInterferenceLine* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBOPTools_CArray1OfInterferenceLine::OCBOPTools_CArray1OfInterferenceLine(Standard_Integer Length, Standard_Integer BlockLength) 
{
  nativeHandle = new BOPTools_CArray1OfInterferenceLine(Length, BlockLength);
}

 void OCBOPTools_CArray1OfInterferenceLine::Resize(Standard_Integer theNewLength)
{
  ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->Resize(theNewLength);
}

 Standard_Integer OCBOPTools_CArray1OfInterferenceLine::Length()
{
  return ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->Length();
}

 Standard_Integer OCBOPTools_CArray1OfInterferenceLine::Extent()
{
  return ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->Extent();
}

 Standard_Integer OCBOPTools_CArray1OfInterferenceLine::FactLength()
{
  return ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->FactLength();
}

 Standard_Integer OCBOPTools_CArray1OfInterferenceLine::Append(OCNaroWrappers::OCBOPTools_InterferenceLine^ Value)
{
  return ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->Append(*((BOPTools_InterferenceLine*)Value->Handle));
}

 void OCBOPTools_CArray1OfInterferenceLine::Remove(Standard_Integer Index)
{
  ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->Remove(Index);
}

OCBOPTools_InterferenceLine^ OCBOPTools_CArray1OfInterferenceLine::Value(Standard_Integer Index)
{
  BOPTools_InterferenceLine* tmp = new BOPTools_InterferenceLine();
  *tmp = ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->Value(Index);
  return gcnew OCBOPTools_InterferenceLine(tmp);
}

OCBOPTools_InterferenceLine^ OCBOPTools_CArray1OfInterferenceLine::ChangeValue(Standard_Integer Index)
{
  BOPTools_InterferenceLine* tmp = new BOPTools_InterferenceLine();
  *tmp = ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->ChangeValue(Index);
  return gcnew OCBOPTools_InterferenceLine(tmp);
}

 void OCBOPTools_CArray1OfInterferenceLine::SetBlockLength(Standard_Integer aBL)
{
  ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->SetBlockLength(aBL);
}

 Standard_Integer OCBOPTools_CArray1OfInterferenceLine::BlockLength()
{
  return ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->BlockLength();
}

 void OCBOPTools_CArray1OfInterferenceLine::Purge()
{
  ((BOPTools_CArray1OfInterferenceLine*)nativeHandle)->Purge();
}


