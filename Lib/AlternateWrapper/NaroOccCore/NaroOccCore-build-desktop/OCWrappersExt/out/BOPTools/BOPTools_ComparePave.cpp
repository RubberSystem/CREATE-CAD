// File generated by CPPExt (CPP file)
//

#include "BOPTools_ComparePave.h"
#include "../Converter.h"
#include "BOPTools_Pave.h"


using namespace OCNaroWrappers;

OCBOPTools_ComparePave::OCBOPTools_ComparePave(BOPTools_ComparePave* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBOPTools_ComparePave::OCBOPTools_ComparePave() 
{
  nativeHandle = new BOPTools_ComparePave();
}

OCBOPTools_ComparePave::OCBOPTools_ComparePave(Standard_Real aTol) 
{
  nativeHandle = new BOPTools_ComparePave(aTol);
}

 System::Boolean OCBOPTools_ComparePave::IsLower(OCNaroWrappers::OCBOPTools_Pave^ Left, OCNaroWrappers::OCBOPTools_Pave^ Right)
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_ComparePave*)nativeHandle)->IsLower(*((BOPTools_Pave*)Left->Handle), *((BOPTools_Pave*)Right->Handle)));
}

 System::Boolean OCBOPTools_ComparePave::IsGreater(OCNaroWrappers::OCBOPTools_Pave^ Left, OCNaroWrappers::OCBOPTools_Pave^ Right)
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_ComparePave*)nativeHandle)->IsGreater(*((BOPTools_Pave*)Left->Handle), *((BOPTools_Pave*)Right->Handle)));
}

 System::Boolean OCBOPTools_ComparePave::IsEqual(OCNaroWrappers::OCBOPTools_Pave^ Left, OCNaroWrappers::OCBOPTools_Pave^ Right)
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_ComparePave*)nativeHandle)->IsEqual(*((BOPTools_Pave*)Left->Handle), *((BOPTools_Pave*)Right->Handle)));
}


