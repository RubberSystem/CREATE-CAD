// File generated by CPPExt (MPV)
//
#ifndef _BOPTools_PaveBlock_OCWrappers_HeaderFile
#define _BOPTools_PaveBlock_OCWrappers_HeaderFile

// include native header
#include <BOPTools_PaveBlock.hxx>
#include "../Converter.h"


#include "BOPTools_Pave.h"
#include "../IntTools/IntTools_Range.h"
#include "../IntTools/IntTools_ShrunkRange.h"
#include "../IntTools/IntTools_Curve.h"
#include "BOPTools_PointBetween.h"


namespace OCNaroWrappers
{

ref class OCBOPTools_Pave;
ref class OCIntTools_ShrunkRange;
ref class OCBOPTools_PointBetween;
ref class OCIntTools_Curve;
ref class OCIntTools_Range;



//!  Class for storing info about a couple <br>
//! of neighbouring paves on an edge <br>
public ref class OCBOPTools_PaveBlock  {

protected:
  BOPTools_PaveBlock* nativeHandle;
  OCBOPTools_PaveBlock(OCDummy^) {};

public:
  property BOPTools_PaveBlock* Handle
  {
    BOPTools_PaveBlock* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBOPTools_PaveBlock(BOPTools_PaveBlock* nativeHandle);

// Methods PUBLIC


//! Empty constructor <br>
OCBOPTools_PaveBlock();


//! Constructor <br>
//! Index  - DS-index of the edge <br>
//! aPave1 - one pave <br>
//! aPave2 - other pave <br>
OCBOPTools_PaveBlock(Standard_Integer anEdge, OCNaroWrappers::OCBOPTools_Pave^ aPave1, OCNaroWrappers::OCBOPTools_Pave^ aPave2);


//! Modifier <br>
//! Sets DS-index for the edge that is between aPave1 and aPave2 <br>
 /*instead*/  void SetEdge(Standard_Integer anEdge) ;


//! Modifier <br>
//! Sets DS-index for the edge from which this pave block comes from <br>
 /*instead*/  void SetOriginalEdge(Standard_Integer anEdge) ;


//! Modifier <br>
 /*instead*/  void SetPave1(OCNaroWrappers::OCBOPTools_Pave^ aPave) ;


//! Modifier <br>
 /*instead*/  void SetPave2(OCNaroWrappers::OCBOPTools_Pave^ aPave) ;


//! Modifier <br>
//! Sets the Shrunk Range for the pave block <br>
 /*instead*/  void SetShrunkRange(OCNaroWrappers::OCIntTools_ShrunkRange^ aSR) ;


//! Modifier <br>
//! Sets the point between the paves for the pave block <br>
 /*instead*/  void SetPointBetween(OCNaroWrappers::OCBOPTools_PointBetween^ aP) ;


//! Modifier <br>
//! Sets the intersection curve to which the pave block belongs to <br>
 /*instead*/  void SetCurve(OCNaroWrappers::OCIntTools_Curve^ aC) ;


//! Modifier <br>
//! Sets the DS-index of the first face <br>
 /*instead*/  void SetFace1(Standard_Integer nF1) ;


//! Modifier <br>
//! Sets the DS-index of the second face <br>
 /*instead*/  void SetFace2(Standard_Integer nF2) ;


//! Selector <br>
 /*instead*/  Standard_Integer Edge() ;


//! Selector <br>
 /*instead*/  Standard_Integer OriginalEdge() ;


//! Selector <br>
 /*instead*/  OCBOPTools_Pave^ Pave1() ;


//! Selector <br>
 /*instead*/  OCBOPTools_Pave^ Pave2() ;


//! Returns  TRUE if both paves have vertex index !=0 <br>
 /*instead*/  System::Boolean IsValid() ;


//! Returns  TRUE if <Other> is  equal to me <br>
 /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCBOPTools_PaveBlock^ Other) ;


//! Returns values for paves' parameters <br>
 /*instead*/  void Parameters(Standard_Real& aT1, Standard_Real& aT2) ;


//! Returns parmetric range for paves' parameters <br>
 /*instead*/  OCIntTools_Range^ Range() ;


//! Selector <br>
 /*instead*/  OCIntTools_ShrunkRange^ ShrunkRange() ;


//! Selector <br>
 /*instead*/  OCBOPTools_PointBetween^ PointBetween() ;


//! Selector <br>
 /*instead*/  OCIntTools_Curve^ Curve() ;


//! Selector <br>
 /*instead*/  Standard_Integer Face1() ;


//! Selector <br>
 /*instead*/  Standard_Integer Face2() ;


 /*instead*/  System::Boolean IsInBlock(OCNaroWrappers::OCBOPTools_Pave^ aPaveX) ;

~OCBOPTools_PaveBlock()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
