// File generated by CPPExt (CPP file)
//

#include "BOPTools_Tools3D.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopoDS/TopoDS_Wire.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../IntTools/IntTools_Context.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../gp/gp_Dir.h"
#include "../TopTools/TopTools_IndexedDataMapOfShapeListOfShape.h"
#include "../Geom/Geom_Surface.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Pln.h"
#include "../gp/gp_Pnt2d.h"
#include "../TopoDS/TopoDS_Solid.h"


using namespace OCNaroWrappers;

OCBOPTools_Tools3D::OCBOPTools_Tools3D(BOPTools_Tools3D* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 Standard_Integer OCBOPTools_Tools3D::SubShapesAmount(OCNaroWrappers::OCTopoDS_Shape^ aS, OCTopAbs_ShapeEnum aT)
{
  return BOPTools_Tools3D::SubShapesAmount(*((TopoDS_Shape*)aS->Handle), (TopAbs_ShapeEnum)aT);
}

 System::Boolean OCBOPTools_Tools3D::IsConvexWire(OCNaroWrappers::OCTopoDS_Wire^ aW)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::IsConvexWire(*((TopoDS_Wire*)aW->Handle)));
}

 void OCBOPTools_Tools3D::RemoveSims(OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCIntTools_Context^ aContext)
{
  BOPTools_Tools3D::RemoveSims(*((TopoDS_Face*)aF->Handle), *((Handle_IntTools_Context*)aContext->Handle));
}

 void OCBOPTools_Tools3D::RemoveSims(OCNaroWrappers::OCTopoDS_Shape^ aS, OCNaroWrappers::OCIntTools_Context^ aContext)
{
  BOPTools_Tools3D::RemoveSims(*((TopoDS_Shape*)aS->Handle), *((Handle_IntTools_Context*)aContext->Handle));
}

 OCTopAbs_Orientation OCBOPTools_Tools3D::EdgeOrientation(OCNaroWrappers::OCTopoDS_Edge^ aEx, OCNaroWrappers::OCTopoDS_Face^ aF1, OCNaroWrappers::OCTopoDS_Face^ aF2)
{
  return (OCTopAbs_Orientation)(BOPTools_Tools3D::EdgeOrientation(*((TopoDS_Edge*)aEx->Handle), *((TopoDS_Face*)aF1->Handle), *((TopoDS_Face*)aF2->Handle)));
}

 System::Boolean OCBOPTools_Tools3D::IsSplitToReverse1(OCNaroWrappers::OCTopoDS_Edge^ aE1, OCNaroWrappers::OCTopoDS_Edge^ aE2, OCNaroWrappers::OCIntTools_Context^ aContext)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::IsSplitToReverse1(*((TopoDS_Edge*)aE1->Handle), *((TopoDS_Edge*)aE2->Handle), *((Handle_IntTools_Context*)aContext->Handle)));
}

 void OCBOPTools_Tools3D::DoSplitSEAMOnFace(OCNaroWrappers::OCTopoDS_Edge^ aSp, OCNaroWrappers::OCTopoDS_Face^ aF)
{
  BOPTools_Tools3D::DoSplitSEAMOnFace(*((TopoDS_Edge*)aSp->Handle), *((TopoDS_Face*)aF->Handle));
}

 System::Boolean OCBOPTools_Tools3D::DoSplitSEAMOnFace(OCNaroWrappers::OCTopoDS_Edge^ theSplit, OCNaroWrappers::OCTopoDS_Edge^ theSeam, OCNaroWrappers::OCTopoDS_Face^ theFace, System::Boolean& IsReversed)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::DoSplitSEAMOnFace(*((TopoDS_Edge*)theSplit->Handle), *((TopoDS_Edge*)theSeam->Handle), *((TopoDS_Face*)theFace->Handle), (Standard_Boolean&)(IsReversed)));
}

 System::Boolean OCBOPTools_Tools3D::IsTouchCase(OCNaroWrappers::OCTopoDS_Edge^ aEx, OCNaroWrappers::OCTopoDS_Face^ aF1, OCNaroWrappers::OCTopoDS_Face^ aF2)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::IsTouchCase(*((TopoDS_Edge*)aEx->Handle), *((TopoDS_Face*)aF1->Handle), *((TopoDS_Face*)aF2->Handle)));
}

 System::Boolean OCBOPTools_Tools3D::GetTangentToEdge(OCNaroWrappers::OCTopoDS_Edge^ aE, Standard_Real aT, OCNaroWrappers::OCgp_Dir^ aD)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::GetTangentToEdge(*((TopoDS_Edge*)aE->Handle), aT, *((gp_Dir*)aD->Handle)));
}

 System::Boolean OCBOPTools_Tools3D::GetTangentToEdge(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCgp_Dir^ aD)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::GetTangentToEdge(*((TopoDS_Edge*)aE->Handle), *((gp_Dir*)aD->Handle)));
}

 void OCBOPTools_Tools3D::GetNormalToFaceOnEdge(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF, Standard_Real aT, OCNaroWrappers::OCgp_Dir^ aD)
{
  BOPTools_Tools3D::GetNormalToFaceOnEdge(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle), aT, *((gp_Dir*)aD->Handle));
}

 void OCBOPTools_Tools3D::GetNormalToFaceOnEdge(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCgp_Dir^ aD)
{
  BOPTools_Tools3D::GetNormalToFaceOnEdge(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle), *((gp_Dir*)aD->Handle));
}

 void OCBOPTools_Tools3D::GetBiNormal(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF, Standard_Real aT, OCNaroWrappers::OCgp_Dir^ aD)
{
  BOPTools_Tools3D::GetBiNormal(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle), aT, *((gp_Dir*)aD->Handle));
}

 void OCBOPTools_Tools3D::GetBiNormal(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCgp_Dir^ aD)
{
  BOPTools_Tools3D::GetBiNormal(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle), *((gp_Dir*)aD->Handle));
}

 System::Boolean OCBOPTools_Tools3D::IsSplitToReverse(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Edge^ aSp)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::IsSplitToReverse(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Edge*)aSp->Handle)));
}

 System::Boolean OCBOPTools_Tools3D::GetAdjacentFace(OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopTools_IndexedDataMapOfShapeListOfShape^ aEFMap, OCNaroWrappers::OCTopoDS_Face^ anAdjF)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::GetAdjacentFace(*((TopoDS_Face*)aF->Handle), *((TopoDS_Edge*)aE->Handle), *((TopTools_IndexedDataMapOfShapeListOfShape*)aEFMap->Handle), *((TopoDS_Face*)anAdjF->Handle)));
}

 System::Boolean OCBOPTools_Tools3D::IsKeepTwice(OCNaroWrappers::OCTopoDS_Face^ aF1, OCNaroWrappers::OCTopoDS_Face^ aF2, OCNaroWrappers::OCTopoDS_Face^ aF2Adj, OCNaroWrappers::OCTopoDS_Edge^ aSpEF2)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::IsKeepTwice(*((TopoDS_Face*)aF1->Handle), *((TopoDS_Face*)aF2->Handle), *((TopoDS_Face*)aF2Adj->Handle), *((TopoDS_Edge*)aSpEF2->Handle)));
}

 Standard_Integer OCBOPTools_Tools3D::SenseFlag(OCNaroWrappers::OCgp_Dir^ aNF1, OCNaroWrappers::OCgp_Dir^ aNF2)
{
  return BOPTools_Tools3D::SenseFlag(*((gp_Dir*)aNF1->Handle), *((gp_Dir*)aNF2->Handle));
}

 System::Boolean OCBOPTools_Tools3D::GetNormalToSurface(OCNaroWrappers::OCGeom_Surface^ aS, Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Dir^ aD)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::GetNormalToSurface(*((Handle_Geom_Surface*)aS->Handle), U, V, *((gp_Dir*)aD->Handle)));
}

 void OCBOPTools_Tools3D::GetPlanes(OCNaroWrappers::OCTopoDS_Edge^ aSp, OCNaroWrappers::OCTopoDS_Edge^ aE2, OCNaroWrappers::OCTopTools_IndexedDataMapOfShapeListOfShape^ aEFMap2, OCNaroWrappers::OCTopoDS_Edge^ aE1, OCNaroWrappers::OCTopoDS_Face^ aF1, OCTopAbs_State& aST1, OCNaroWrappers::OCIntTools_Context^ aContext)
{
  BOPTools_Tools3D::GetPlanes(*((TopoDS_Edge*)aSp->Handle), *((TopoDS_Edge*)aE2->Handle), *((TopTools_IndexedDataMapOfShapeListOfShape*)aEFMap2->Handle), *((TopoDS_Edge*)aE1->Handle), *((TopoDS_Face*)aF1->Handle), (TopAbs_State&)aST1, *((Handle_IntTools_Context*)aContext->Handle));
}

 OCTopAbs_Orientation OCBOPTools_Tools3D::Orientation(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF)
{
  return (OCTopAbs_Orientation)(BOPTools_Tools3D::Orientation(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle)));
}

 Standard_Real OCBOPTools_Tools3D::SignDistance(OCNaroWrappers::OCgp_Pnt^ aP, OCNaroWrappers::OCgp_Pln^ aPL)
{
  return BOPTools_Tools3D::SignDistance(*((gp_Pnt*)aP->Handle), *((gp_Pln*)aPL->Handle));
}

 void OCBOPTools_Tools3D::GetApproxNormalToFaceOnEdge(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF, Standard_Real aT, OCNaroWrappers::OCgp_Pnt^ aPx, OCNaroWrappers::OCgp_Dir^ aD)
{
  BOPTools_Tools3D::GetApproxNormalToFaceOnEdge(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle), aT, *((gp_Pnt*)aPx->Handle), *((gp_Dir*)aD->Handle));
}

 void OCBOPTools_Tools3D::PointNearEdge(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF, Standard_Real aT, Standard_Real aDt2D, OCNaroWrappers::OCgp_Pnt2d^ aP2D, OCNaroWrappers::OCgp_Pnt^ aPx)
{
  BOPTools_Tools3D::PointNearEdge(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle), aT, aDt2D, *((gp_Pnt2d*)aP2D->Handle), *((gp_Pnt*)aPx->Handle));
}

 void OCBOPTools_Tools3D::PointNearEdge(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF, Standard_Real aT, OCNaroWrappers::OCgp_Pnt2d^ aP2D, OCNaroWrappers::OCgp_Pnt^ aPx)
{
  BOPTools_Tools3D::PointNearEdge(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle), aT, *((gp_Pnt2d*)aP2D->Handle), *((gp_Pnt*)aPx->Handle));
}

 void OCBOPTools_Tools3D::PointNearEdge(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCgp_Pnt2d^ aP2D, OCNaroWrappers::OCgp_Pnt^ aPx)
{
  BOPTools_Tools3D::PointNearEdge(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle), *((gp_Pnt2d*)aP2D->Handle), *((gp_Pnt*)aPx->Handle));
}

 void OCBOPTools_Tools3D::PointToCompare(OCNaroWrappers::OCgp_Pnt^ aP1, OCNaroWrappers::OCgp_Pnt^ aP2, OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCgp_Pnt^ aPx, OCNaroWrappers::OCIntTools_Context^ aContext)
{
  BOPTools_Tools3D::PointToCompare(*((gp_Pnt*)aP1->Handle), *((gp_Pnt*)aP2->Handle), *((TopoDS_Face*)aF->Handle), *((gp_Pnt*)aPx->Handle), *((Handle_IntTools_Context*)aContext->Handle));
}

 void OCBOPTools_Tools3D::GetPlane(OCNaroWrappers::OCTopoDS_Edge^ aSp, OCNaroWrappers::OCTopoDS_Edge^ aE1, OCNaroWrappers::OCTopoDS_Face^ aF1, OCNaroWrappers::OCTopoDS_Face^ aF2, OCTopAbs_State& aST, OCNaroWrappers::OCIntTools_Context^ aContext)
{
  BOPTools_Tools3D::GetPlane(*((TopoDS_Edge*)aSp->Handle), *((TopoDS_Edge*)aE1->Handle), *((TopoDS_Face*)aF1->Handle), *((TopoDS_Face*)aF2->Handle), (TopAbs_State&)aST, *((Handle_IntTools_Context*)aContext->Handle));
}

 void OCBOPTools_Tools3D::GetPointState(OCNaroWrappers::OCTopoDS_Edge^ aSp, OCNaroWrappers::OCTopoDS_Edge^ aEF2, OCNaroWrappers::OCTopoDS_Face^ aF2Adj, OCNaroWrappers::OCTopoDS_Face^ aF1, OCTopAbs_State& aST)
{
  BOPTools_Tools3D::GetPointState(*((TopoDS_Edge*)aSp->Handle), *((TopoDS_Edge*)aEF2->Handle), *((TopoDS_Face*)aF2Adj->Handle), *((TopoDS_Face*)aF1->Handle), (TopAbs_State&)aST);
}

 void OCBOPTools_Tools3D::OrientEdgeOnFace(OCNaroWrappers::OCTopoDS_Edge^ aE, OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCTopoDS_Edge^ aER)
{
  BOPTools_Tools3D::OrientEdgeOnFace(*((TopoDS_Edge*)aE->Handle), *((TopoDS_Face*)aF->Handle), *((TopoDS_Edge*)aER->Handle));
}

 OCTopAbs_Orientation OCBOPTools_Tools3D::OrientTouchEdgeOnF1(OCNaroWrappers::OCTopoDS_Edge^ aSp, OCNaroWrappers::OCTopoDS_Edge^ aEx, OCNaroWrappers::OCTopoDS_Face^ aF1, OCNaroWrappers::OCTopoDS_Face^ aF2)
{
  return (OCTopAbs_Orientation)(BOPTools_Tools3D::OrientTouchEdgeOnF1(*((TopoDS_Edge*)aSp->Handle), *((TopoDS_Edge*)aEx->Handle), *((TopoDS_Face*)aF1->Handle), *((TopoDS_Face*)aF2->Handle)));
}

 void OCBOPTools_Tools3D::GetSeams(OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCTopoDS_Edge^ aSimm1, OCNaroWrappers::OCTopoDS_Edge^ aSimm2)
{
  BOPTools_Tools3D::GetSeams(*((TopoDS_Face*)aF->Handle), *((TopoDS_Edge*)aSimm1->Handle), *((TopoDS_Edge*)aSimm2->Handle));
}

 void OCBOPTools_Tools3D::GetSeam(OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCTopoDS_Edge^ aS1, OCNaroWrappers::OCTopoDS_Edge^ aS2)
{
  BOPTools_Tools3D::GetSeam(*((TopoDS_Face*)aF->Handle), *((TopoDS_Edge*)aS1->Handle), *((TopoDS_Edge*)aS2->Handle));
}

 System::Boolean OCBOPTools_Tools3D::IsValidArea(OCNaroWrappers::OCTopoDS_Face^ aF, System::Boolean& aNegativeFlag)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::IsValidArea(*((TopoDS_Face*)aF->Handle), (Standard_Boolean&)(aNegativeFlag)));
}

 Standard_Real OCBOPTools_Tools3D::MinStepIn2d()
{
  return BOPTools_Tools3D::MinStepIn2d();
}

 System::Boolean OCBOPTools_Tools3D::IsEmptyShape(OCNaroWrappers::OCTopoDS_Shape^ aS)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::IsEmptyShape(*((TopoDS_Shape*)aS->Handle)));
}

 void OCBOPTools_Tools3D::InvertShape(OCNaroWrappers::OCTopoDS_Shape^ aS, OCNaroWrappers::OCTopoDS_Shape^ aSInv)
{
  BOPTools_Tools3D::InvertShape(*((TopoDS_Shape*)aS->Handle), *((TopoDS_Shape*)aSInv->Handle));
}

 OCTopAbs_State OCBOPTools_Tools3D::GetStatePartIN2D(OCNaroWrappers::OCTopoDS_Edge^ aSp, OCNaroWrappers::OCTopoDS_Edge^ aEF1, OCNaroWrappers::OCTopoDS_Face^ aF1, OCNaroWrappers::OCTopoDS_Face^ aF2, OCNaroWrappers::OCIntTools_Context^ aContext)
{
  return (OCTopAbs_State)(BOPTools_Tools3D::GetStatePartIN2D(*((TopoDS_Edge*)aSp->Handle), *((TopoDS_Edge*)aEF1->Handle), *((TopoDS_Face*)aF1->Handle), *((TopoDS_Face*)aF2->Handle), *((Handle_IntTools_Context*)aContext->Handle)));
}

 System::Boolean OCBOPTools_Tools3D::CheckSameDomainFaceInside(OCNaroWrappers::OCTopoDS_Face^ theFace1, OCNaroWrappers::OCTopoDS_Face^ theFace2, OCNaroWrappers::OCIntTools_Context^ theContext)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::CheckSameDomainFaceInside(*((TopoDS_Face*)theFace1->Handle), *((TopoDS_Face*)theFace2->Handle), *((Handle_IntTools_Context*)theContext->Handle)));
}

 System::Boolean OCBOPTools_Tools3D::ComputeFaceState(OCNaroWrappers::OCTopoDS_Face^ theFace, OCNaroWrappers::OCTopoDS_Solid^ theRef, OCNaroWrappers::OCIntTools_Context^ theContext, OCTopAbs_State& theState)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::ComputeFaceState(*((TopoDS_Face*)theFace->Handle), *((TopoDS_Solid*)theRef->Handle), *((Handle_IntTools_Context*)theContext->Handle), (TopAbs_State&)theState));
}

 System::Boolean OCBOPTools_Tools3D::TreatedAsAnalytic(Standard_Real aTx, OCNaroWrappers::OCgp_Pnt^ aPx, OCNaroWrappers::OCTopoDS_Edge^ aEx, OCNaroWrappers::OCTopoDS_Face^ aFx, OCNaroWrappers::OCTopoDS_Edge^ aE1, OCNaroWrappers::OCTopoDS_Face^ aF1, Standard_Real aTolTangent, Standard_Real aTolRadius, OCTopAbs_State& aState, OCNaroWrappers::OCIntTools_Context^ aContext)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::TreatedAsAnalytic(aTx, *((gp_Pnt*)aPx->Handle), *((TopoDS_Edge*)aEx->Handle), *((TopoDS_Face*)aFx->Handle), *((TopoDS_Edge*)aE1->Handle), *((TopoDS_Face*)aF1->Handle), aTolTangent, aTolRadius, (TopAbs_State&)aState, *((Handle_IntTools_Context*)aContext->Handle)));
}

 System::Boolean OCBOPTools_Tools3D::TreatedAsAnalytic(OCNaroWrappers::OCTopoDS_Face^ aFx, OCNaroWrappers::OCTopoDS_Edge^ aSpE1, OCNaroWrappers::OCTopoDS_Face^ aF1, Standard_Real aTolTangent, Standard_Real aTolRadius, OCTopAbs_State& aState, OCNaroWrappers::OCIntTools_Context^ aContext)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::TreatedAsAnalytic(*((TopoDS_Face*)aFx->Handle), *((TopoDS_Edge*)aSpE1->Handle), *((TopoDS_Face*)aF1->Handle), aTolTangent, aTolRadius, (TopAbs_State&)aState, *((Handle_IntTools_Context*)aContext->Handle)));
}

 System::Boolean OCBOPTools_Tools3D::HasAnalyticSurfaceType(OCNaroWrappers::OCTopoDS_Face^ aF)
{
  return OCConverter::StandardBooleanToBoolean(BOPTools_Tools3D::HasAnalyticSurfaceType(*((TopoDS_Face*)aF->Handle)));
}


