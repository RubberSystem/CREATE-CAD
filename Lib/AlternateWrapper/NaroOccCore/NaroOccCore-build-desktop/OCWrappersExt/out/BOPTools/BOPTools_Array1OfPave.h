// File generated by CPPExt (MPV)
//
#ifndef _BOPTools_Array1OfPave_OCWrappers_HeaderFile
#define _BOPTools_Array1OfPave_OCWrappers_HeaderFile

// include native header
#include <BOPTools_Array1OfPave.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCBOPTools_Pave;



public ref class OCBOPTools_Array1OfPave  {

protected:
  BOPTools_Array1OfPave* nativeHandle;
  OCBOPTools_Array1OfPave(OCDummy^) {};

public:
  property BOPTools_Array1OfPave* Handle
  {
    BOPTools_Array1OfPave* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBOPTools_Array1OfPave(BOPTools_Array1OfPave* nativeHandle);

// Methods PUBLIC


OCBOPTools_Array1OfPave(Standard_Integer Low, Standard_Integer Up);


OCBOPTools_Array1OfPave(OCNaroWrappers::OCBOPTools_Pave^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCBOPTools_Pave^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCBOPTools_Array1OfPave^ Assign(OCNaroWrappers::OCBOPTools_Array1OfPave^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCBOPTools_Pave^ Value) ;


 /*instead*/  OCBOPTools_Pave^ Value(Standard_Integer Index) ;


 /*instead*/  OCBOPTools_Pave^ ChangeValue(Standard_Integer Index) ;

~OCBOPTools_Array1OfPave()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
