// File generated by CPPExt (CPP file)
//

#include "BOPTools_CommonBlockPool.h"
#include "../Converter.h"
#include "BOPTools_ListOfCommonBlock.h"


using namespace OCNaroWrappers;

OCBOPTools_CommonBlockPool::OCBOPTools_CommonBlockPool(BOPTools_CommonBlockPool* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBOPTools_CommonBlockPool::OCBOPTools_CommonBlockPool(Standard_Integer Length, Standard_Integer BlockLength) 
{
  nativeHandle = new BOPTools_CommonBlockPool(Length, BlockLength);
}

 void OCBOPTools_CommonBlockPool::Resize(Standard_Integer theNewLength)
{
  ((BOPTools_CommonBlockPool*)nativeHandle)->Resize(theNewLength);
}

 Standard_Integer OCBOPTools_CommonBlockPool::Length()
{
  return ((BOPTools_CommonBlockPool*)nativeHandle)->Length();
}

 Standard_Integer OCBOPTools_CommonBlockPool::Extent()
{
  return ((BOPTools_CommonBlockPool*)nativeHandle)->Extent();
}

 Standard_Integer OCBOPTools_CommonBlockPool::FactLength()
{
  return ((BOPTools_CommonBlockPool*)nativeHandle)->FactLength();
}

 Standard_Integer OCBOPTools_CommonBlockPool::Append(OCNaroWrappers::OCBOPTools_ListOfCommonBlock^ Value)
{
  return ((BOPTools_CommonBlockPool*)nativeHandle)->Append(*((BOPTools_ListOfCommonBlock*)Value->Handle));
}

 void OCBOPTools_CommonBlockPool::Remove(Standard_Integer Index)
{
  ((BOPTools_CommonBlockPool*)nativeHandle)->Remove(Index);
}

OCBOPTools_ListOfCommonBlock^ OCBOPTools_CommonBlockPool::Value(Standard_Integer Index)
{
  BOPTools_ListOfCommonBlock* tmp = new BOPTools_ListOfCommonBlock();
  *tmp = ((BOPTools_CommonBlockPool*)nativeHandle)->Value(Index);
  return gcnew OCBOPTools_ListOfCommonBlock(tmp);
}

OCBOPTools_ListOfCommonBlock^ OCBOPTools_CommonBlockPool::ChangeValue(Standard_Integer Index)
{
  BOPTools_ListOfCommonBlock* tmp = new BOPTools_ListOfCommonBlock();
  *tmp = ((BOPTools_CommonBlockPool*)nativeHandle)->ChangeValue(Index);
  return gcnew OCBOPTools_ListOfCommonBlock(tmp);
}

 void OCBOPTools_CommonBlockPool::SetBlockLength(Standard_Integer aBL)
{
  ((BOPTools_CommonBlockPool*)nativeHandle)->SetBlockLength(aBL);
}

 Standard_Integer OCBOPTools_CommonBlockPool::BlockLength()
{
  return ((BOPTools_CommonBlockPool*)nativeHandle)->BlockLength();
}

 void OCBOPTools_CommonBlockPool::Purge()
{
  ((BOPTools_CommonBlockPool*)nativeHandle)->Purge();
}


