// File generated by CPPExt (MPV)
//
#ifndef _BOPTools_StateFiller_OCWrappers_HeaderFile
#define _BOPTools_StateFiller_OCWrappers_HeaderFile

// include native header
#include <BOPTools_StateFiller.hxx>
#include "../Converter.h"


#include "../BooleanOperations/BooleanOperations_StateOfShape.h"
#include "../TopAbs/TopAbs_State.h"
#include "../TopAbs/TopAbs_ShapeEnum.h"


namespace OCNaroWrappers
{

ref class OCBOPTools_PaveFiller;
ref class OCTopoDS_Edge;
ref class OCTopoDS_Shape;



//!  root class to compute states (3D) <br>
public ref class OCBOPTools_StateFiller  {

protected:
  BOPTools_StateFiller* nativeHandle;
  OCBOPTools_StateFiller(OCDummy^) {};

public:
  property BOPTools_StateFiller* Handle
  {
    BOPTools_StateFiller* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBOPTools_StateFiller(BOPTools_StateFiller* nativeHandle);

// Methods PUBLIC


//! Constructor <br>
OCBOPTools_StateFiller(OCNaroWrappers::OCBOPTools_PaveFiller^ aFiller);


//! Launch the Filler <br>
virtual /*instead*/  void Do() ;


//! Returns true if Ok <br>
 /*instead*/  System::Boolean IsDone() ;


//! Convert conventional states to VDS-states <br>
static /*instead*/  OCBooleanOperations_StateOfShape ConvertState(OCTopAbs_State aSt) ;


//! Convert VDS-states to conventional states <br>
static /*instead*/  OCTopAbs_State ConvertState(OCBooleanOperations_StateOfShape aSt) ;


//! Computation the 3D-state of the edge <anEdge> <br>
//! to solid  <aRef> <br>
 /*instead*/  OCTopAbs_State ClassifyEdgeToSolidByOnePoint(OCNaroWrappers::OCTopoDS_Edge^ anEdge, OCNaroWrappers::OCTopoDS_Shape^ aRef) ;


//! Computation the 3D-state of the shape <aShape> <br>
//! to solid <aRef> <br>
 /*instead*/  OCBooleanOperations_StateOfShape ClassifyShapeByRef(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCTopoDS_Shape^ aRef) ;


//! Returns first subtype of <Shape> <br>
static /*instead*/  OCTopAbs_ShapeEnum SubType(OCNaroWrappers::OCTopoDS_Shape^ aShape) ;

~OCBOPTools_StateFiller()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
