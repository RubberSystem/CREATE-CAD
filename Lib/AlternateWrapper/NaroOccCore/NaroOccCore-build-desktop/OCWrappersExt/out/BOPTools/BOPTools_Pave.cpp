// File generated by CPPExt (CPP file)
//

#include "BOPTools_Pave.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCBOPTools_Pave::OCBOPTools_Pave(BOPTools_Pave* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBOPTools_Pave::OCBOPTools_Pave() 
{
  nativeHandle = new BOPTools_Pave();
}

OCBOPTools_Pave::OCBOPTools_Pave(Standard_Integer Index, Standard_Real aParam, OCBooleanOperations_KindOfInterference aType) 
{
  nativeHandle = new BOPTools_Pave(Index, aParam, (BooleanOperations_KindOfInterference)aType);
}

 void OCBOPTools_Pave::SetParam(Standard_Real aParam)
{
  ((BOPTools_Pave*)nativeHandle)->SetParam(aParam);
}

 void OCBOPTools_Pave::SetIndex(Standard_Integer Index)
{
  ((BOPTools_Pave*)nativeHandle)->SetIndex(Index);
}

 void OCBOPTools_Pave::SetType(OCBooleanOperations_KindOfInterference aType)
{
  ((BOPTools_Pave*)nativeHandle)->SetType((BooleanOperations_KindOfInterference)aType);
}

 void OCBOPTools_Pave::SetInterference(Standard_Integer Index)
{
  ((BOPTools_Pave*)nativeHandle)->SetInterference(Index);
}

 Standard_Real OCBOPTools_Pave::Param()
{
  return ((BOPTools_Pave*)nativeHandle)->Param();
}

 Standard_Integer OCBOPTools_Pave::Index()
{
  return ((BOPTools_Pave*)nativeHandle)->Index();
}

 OCBooleanOperations_KindOfInterference OCBOPTools_Pave::Type()
{
  return (OCBooleanOperations_KindOfInterference)(((BOPTools_Pave*)nativeHandle)->Type());
}

 Standard_Integer OCBOPTools_Pave::Interference()
{
  return ((BOPTools_Pave*)nativeHandle)->Interference();
}

 System::Boolean OCBOPTools_Pave::IsEqual(OCNaroWrappers::OCBOPTools_Pave^ Other)
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_Pave*)nativeHandle)->IsEqual(*((BOPTools_Pave*)Other->Handle)));
}


