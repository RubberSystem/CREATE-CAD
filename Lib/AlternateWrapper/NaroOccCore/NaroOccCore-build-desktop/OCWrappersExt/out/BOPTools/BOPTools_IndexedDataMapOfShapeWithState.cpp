// File generated by CPPExt (CPP file)
//

#include "BOPTools_IndexedDataMapOfShapeWithState.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "BOPTools_IndexedDataMapNodeOfIndexedDataMapOfShapeWithState.h"


using namespace OCNaroWrappers;

OCBOPTools_IndexedDataMapOfShapeWithState::OCBOPTools_IndexedDataMapOfShapeWithState(BOPTools_IndexedDataMapOfShapeWithState* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBOPTools_IndexedDataMapOfShapeWithState::OCBOPTools_IndexedDataMapOfShapeWithState(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BOPTools_IndexedDataMapOfShapeWithState(NbBuckets);
}

OCBOPTools_IndexedDataMapOfShapeWithState^ OCBOPTools_IndexedDataMapOfShapeWithState::Assign(OCNaroWrappers::OCBOPTools_IndexedDataMapOfShapeWithState^ Other)
{
  BOPTools_IndexedDataMapOfShapeWithState* tmp = new BOPTools_IndexedDataMapOfShapeWithState(0);
  *tmp = ((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->Assign(*((BOPTools_IndexedDataMapOfShapeWithState*)Other->Handle));
  return gcnew OCBOPTools_IndexedDataMapOfShapeWithState(tmp);
}

 void OCBOPTools_IndexedDataMapOfShapeWithState::ReSize(Standard_Integer NbBuckets)
{
  ((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCBOPTools_IndexedDataMapOfShapeWithState::Add(OCNaroWrappers::OCTopoDS_Shape^ K, OCBooleanOperations_StateOfShape I)
{
  return ((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->Add(*((TopoDS_Shape*)K->Handle), (BooleanOperations_StateOfShape)I);
}

 void OCBOPTools_IndexedDataMapOfShapeWithState::Substitute(Standard_Integer I, OCNaroWrappers::OCTopoDS_Shape^ K, OCBooleanOperations_StateOfShape T)
{
  ((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->Substitute(I, *((TopoDS_Shape*)K->Handle), (BooleanOperations_StateOfShape)T);
}

 void OCBOPTools_IndexedDataMapOfShapeWithState::RemoveLast()
{
  ((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->RemoveLast();
}

 System::Boolean OCBOPTools_IndexedDataMapOfShapeWithState::Contains(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->Contains(*((TopoDS_Shape*)K->Handle)));
}

OCTopoDS_Shape^ OCBOPTools_IndexedDataMapOfShapeWithState::FindKey(Standard_Integer I)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->FindKey(I);
  return gcnew OCTopoDS_Shape(tmp);
}

 OCBooleanOperations_StateOfShape OCBOPTools_IndexedDataMapOfShapeWithState::FindFromIndex(Standard_Integer I)
{
  return (OCBooleanOperations_StateOfShape)(((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->FindFromIndex(I));
}

 OCBooleanOperations_StateOfShape OCBOPTools_IndexedDataMapOfShapeWithState::ChangeFromIndex(Standard_Integer I)
{
  return (OCBooleanOperations_StateOfShape)(((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->ChangeFromIndex(I));
}

 Standard_Integer OCBOPTools_IndexedDataMapOfShapeWithState::FindIndex(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->FindIndex(*((TopoDS_Shape*)K->Handle));
}

 OCBooleanOperations_StateOfShape OCBOPTools_IndexedDataMapOfShapeWithState::FindFromKey(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return (OCBooleanOperations_StateOfShape)(((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->FindFromKey(*((TopoDS_Shape*)K->Handle)));
}

 OCBooleanOperations_StateOfShape OCBOPTools_IndexedDataMapOfShapeWithState::ChangeFromKey(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return (OCBooleanOperations_StateOfShape)(((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->ChangeFromKey(*((TopoDS_Shape*)K->Handle)));
}

 Standard_Address OCBOPTools_IndexedDataMapOfShapeWithState::FindFromKey1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->FindFromKey1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCBOPTools_IndexedDataMapOfShapeWithState::ChangeFromKey1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BOPTools_IndexedDataMapOfShapeWithState*)nativeHandle)->ChangeFromKey1(*((TopoDS_Shape*)K->Handle));
}


