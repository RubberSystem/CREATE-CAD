// File generated by CPPExt (CPP file)
//

#include "BOPTools_SequenceOfPaveBlock.h"
#include "../Converter.h"
#include "BOPTools_PaveBlock.h"
#include "BOPTools_SequenceNodeOfSequenceOfPaveBlock.h"


using namespace OCNaroWrappers;

OCBOPTools_SequenceOfPaveBlock::OCBOPTools_SequenceOfPaveBlock(BOPTools_SequenceOfPaveBlock* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBOPTools_SequenceOfPaveBlock::OCBOPTools_SequenceOfPaveBlock() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new BOPTools_SequenceOfPaveBlock();
}

OCBOPTools_SequenceOfPaveBlock^ OCBOPTools_SequenceOfPaveBlock::Assign(OCNaroWrappers::OCBOPTools_SequenceOfPaveBlock^ Other)
{
  BOPTools_SequenceOfPaveBlock* tmp = new BOPTools_SequenceOfPaveBlock();
  *tmp = ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Assign(*((BOPTools_SequenceOfPaveBlock*)Other->Handle));
  return gcnew OCBOPTools_SequenceOfPaveBlock(tmp);
}

 void OCBOPTools_SequenceOfPaveBlock::Append(OCNaroWrappers::OCBOPTools_PaveBlock^ T)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Append(*((BOPTools_PaveBlock*)T->Handle));
}

 void OCBOPTools_SequenceOfPaveBlock::Append(OCNaroWrappers::OCBOPTools_SequenceOfPaveBlock^ S)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Append(*((BOPTools_SequenceOfPaveBlock*)S->Handle));
}

 void OCBOPTools_SequenceOfPaveBlock::Prepend(OCNaroWrappers::OCBOPTools_PaveBlock^ T)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Prepend(*((BOPTools_PaveBlock*)T->Handle));
}

 void OCBOPTools_SequenceOfPaveBlock::Prepend(OCNaroWrappers::OCBOPTools_SequenceOfPaveBlock^ S)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Prepend(*((BOPTools_SequenceOfPaveBlock*)S->Handle));
}

 void OCBOPTools_SequenceOfPaveBlock::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCBOPTools_PaveBlock^ T)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->InsertBefore(Index, *((BOPTools_PaveBlock*)T->Handle));
}

 void OCBOPTools_SequenceOfPaveBlock::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCBOPTools_SequenceOfPaveBlock^ S)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->InsertBefore(Index, *((BOPTools_SequenceOfPaveBlock*)S->Handle));
}

 void OCBOPTools_SequenceOfPaveBlock::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCBOPTools_PaveBlock^ T)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->InsertAfter(Index, *((BOPTools_PaveBlock*)T->Handle));
}

 void OCBOPTools_SequenceOfPaveBlock::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCBOPTools_SequenceOfPaveBlock^ S)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->InsertAfter(Index, *((BOPTools_SequenceOfPaveBlock*)S->Handle));
}

OCBOPTools_PaveBlock^ OCBOPTools_SequenceOfPaveBlock::First()
{
  BOPTools_PaveBlock* tmp = new BOPTools_PaveBlock();
  *tmp = ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->First();
  return gcnew OCBOPTools_PaveBlock(tmp);
}

OCBOPTools_PaveBlock^ OCBOPTools_SequenceOfPaveBlock::Last()
{
  BOPTools_PaveBlock* tmp = new BOPTools_PaveBlock();
  *tmp = ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Last();
  return gcnew OCBOPTools_PaveBlock(tmp);
}

 void OCBOPTools_SequenceOfPaveBlock::Split(Standard_Integer Index, OCNaroWrappers::OCBOPTools_SequenceOfPaveBlock^ Sub)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Split(Index, *((BOPTools_SequenceOfPaveBlock*)Sub->Handle));
}

OCBOPTools_PaveBlock^ OCBOPTools_SequenceOfPaveBlock::Value(Standard_Integer Index)
{
  BOPTools_PaveBlock* tmp = new BOPTools_PaveBlock();
  *tmp = ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Value(Index);
  return gcnew OCBOPTools_PaveBlock(tmp);
}

 void OCBOPTools_SequenceOfPaveBlock::SetValue(Standard_Integer Index, OCNaroWrappers::OCBOPTools_PaveBlock^ I)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->SetValue(Index, *((BOPTools_PaveBlock*)I->Handle));
}

OCBOPTools_PaveBlock^ OCBOPTools_SequenceOfPaveBlock::ChangeValue(Standard_Integer Index)
{
  BOPTools_PaveBlock* tmp = new BOPTools_PaveBlock();
  *tmp = ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->ChangeValue(Index);
  return gcnew OCBOPTools_PaveBlock(tmp);
}

 void OCBOPTools_SequenceOfPaveBlock::Remove(Standard_Integer Index)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Remove(Index);
}

 void OCBOPTools_SequenceOfPaveBlock::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((BOPTools_SequenceOfPaveBlock*)nativeHandle)->Remove(FromIndex, ToIndex);
}


