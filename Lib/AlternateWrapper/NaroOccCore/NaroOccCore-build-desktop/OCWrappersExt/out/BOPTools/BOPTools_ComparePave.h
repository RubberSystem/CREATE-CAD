// File generated by CPPExt (MPV)
//
#ifndef _BOPTools_ComparePave_OCWrappers_HeaderFile
#define _BOPTools_ComparePave_OCWrappers_HeaderFile

// include native header
#include <BOPTools_ComparePave.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCBOPTools_Pave;



//! <br>
//! Auxiliary class for sorting paves along the edge <br>
//! in acoordance with increasing order of parameter <br>
public ref class OCBOPTools_ComparePave  {

protected:
  BOPTools_ComparePave* nativeHandle;
  OCBOPTools_ComparePave(OCDummy^) {};

public:
  property BOPTools_ComparePave* Handle
  {
    BOPTools_ComparePave* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBOPTools_ComparePave(BOPTools_ComparePave* nativeHandle);

// Methods PUBLIC


//! Empty constructor <br>
//! Default comparing tolerance value=1.e-12 <br>
OCBOPTools_ComparePave();


//! Constructor that use comparing tolerance value as parameter. <br>
OCBOPTools_ComparePave(Standard_Real aTol);


//! Returns True if <Left> is lower than <Right>. <br>
 /*instead*/  System::Boolean IsLower(OCNaroWrappers::OCBOPTools_Pave^ Left, OCNaroWrappers::OCBOPTools_Pave^ Right) ;


//! Returns True if <Left> is greater than <Right>. <br>
 /*instead*/  System::Boolean IsGreater(OCNaroWrappers::OCBOPTools_Pave^ Left, OCNaroWrappers::OCBOPTools_Pave^ Right) ;


//! Returns True when <Right> and <Left> are equal. <br>
 /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCBOPTools_Pave^ Left, OCNaroWrappers::OCBOPTools_Pave^ Right) ;

~OCBOPTools_ComparePave()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
