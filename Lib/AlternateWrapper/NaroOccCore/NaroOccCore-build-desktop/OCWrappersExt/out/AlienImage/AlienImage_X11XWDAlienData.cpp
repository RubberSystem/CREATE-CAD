// File generated by CPPExt (CPP file)
//

#include "AlienImage_X11XWDAlienData.h"
#include "../Converter.h"
#include "../OSD/OSD_File.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../Image/Image_Image.h"
#include "../Image/Image_PseudoColorImage.h"
#include "../Image/Image_ColorImage.h"


using namespace OCNaroWrappers;

OCAlienImage_X11XWDAlienData::OCAlienImage_X11XWDAlienData(Handle(AlienImage_X11XWDAlienData)* nativeHandle) : OCAlienImage_AlienImageData((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AlienImage_X11XWDAlienData(*nativeHandle);
}

OCAlienImage_X11XWDAlienData::OCAlienImage_X11XWDAlienData() : OCAlienImage_AlienImageData((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AlienImage_X11XWDAlienData(new AlienImage_X11XWDAlienData());
}

 System::Boolean OCAlienImage_X11XWDAlienData::Read(OCNaroWrappers::OCOSD_File^ afile)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AlienImage_X11XWDAlienData*)nativeHandle))->Read(*((OSD_File*)afile->Handle)));
}

 System::Boolean OCAlienImage_X11XWDAlienData::Write(OCNaroWrappers::OCOSD_File^ afile)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AlienImage_X11XWDAlienData*)nativeHandle))->Write(*((OSD_File*)afile->Handle)));
}

 void OCAlienImage_X11XWDAlienData::SetName(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  (*((Handle_AlienImage_X11XWDAlienData*)nativeHandle))->SetName(*((TCollection_AsciiString*)aName->Handle));
}

OCTCollection_AsciiString^ OCAlienImage_X11XWDAlienData::Name()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_AlienImage_X11XWDAlienData*)nativeHandle))->Name();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCImage_Image^ OCAlienImage_X11XWDAlienData::ToImage()
{
  Handle(Image_Image) tmp = (*((Handle_AlienImage_X11XWDAlienData*)nativeHandle))->ToImage();
  return gcnew OCImage_Image(&tmp);
}

 void OCAlienImage_X11XWDAlienData::FromImage(OCNaroWrappers::OCImage_Image^ anImage)
{
  (*((Handle_AlienImage_X11XWDAlienData*)nativeHandle))->FromImage(*((Handle_Image_Image*)anImage->Handle));
}


