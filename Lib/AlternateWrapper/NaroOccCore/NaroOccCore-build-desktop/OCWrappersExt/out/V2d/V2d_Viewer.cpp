// File generated by CPPExt (CPP file)
//

#include "V2d_Viewer.h"
#include "../Converter.h"
#include "../Aspect/Aspect_ColorMap.h"
#include "../Aspect/Aspect_TypeMap.h"
#include "../Aspect/Aspect_WidthMap.h"
#include "../Aspect/Aspect_FontMap.h"
#include "../Aspect/Aspect_MarkMap.h"
#include "../Graphic2d/Graphic2d_View.h"
#include "V2d_RectangularGrid.h"
#include "V2d_CircularGrid.h"
#include "V2d_View.h"
#include "../Aspect/Aspect_GraphicDevice.h"
#include "../Aspect/Aspect_Grid.h"
#include "../Quantity/Quantity_Color.h"


using namespace OCNaroWrappers;

OCV2d_Viewer::OCV2d_Viewer(Handle(V2d_Viewer)* nativeHandle) : OCViewer_Viewer((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_V2d_Viewer(*nativeHandle);
}

OCV2d_Viewer::OCV2d_Viewer(OCNaroWrappers::OCAspect_GraphicDevice^ aGraphicDevice, System::String^ aName, System::String^ aDomain) : OCViewer_Viewer((OCDummy^)nullptr)

{
  nativeHandle = new Handle_V2d_Viewer(new V2d_Viewer(*((Handle_Aspect_GraphicDevice*)aGraphicDevice->Handle), OCConverter::StringToStandardExtString(aName), OCConverter::StringToStandardCString(aDomain)));
}

OCV2d_Viewer::OCV2d_Viewer(OCNaroWrappers::OCAspect_GraphicDevice^ aGraphicDevice, OCNaroWrappers::OCGraphic2d_View^ aView, System::String^ aName, System::String^ aDomain) : OCViewer_Viewer((OCDummy^)nullptr)

{
  nativeHandle = new Handle_V2d_Viewer(new V2d_Viewer(*((Handle_Aspect_GraphicDevice*)aGraphicDevice->Handle), *((Handle_Graphic2d_View*)aView->Handle), OCConverter::StringToStandardExtString(aName), OCConverter::StringToStandardCString(aDomain)));
}

 void OCV2d_Viewer::AddView(OCNaroWrappers::OCV2d_View^ aView)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->AddView(*((Handle_V2d_View*)aView->Handle));
}

 void OCV2d_Viewer::RemoveView(OCNaroWrappers::OCV2d_View^ aView)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->RemoveView(*((Handle_V2d_View*)aView->Handle));
}

 void OCV2d_Viewer::Update()
{
  (*((Handle_V2d_Viewer*)nativeHandle))->Update();
}

 void OCV2d_Viewer::UpdateNew()
{
  (*((Handle_V2d_Viewer*)nativeHandle))->UpdateNew();
}

 void OCV2d_Viewer::SetColorMap(OCNaroWrappers::OCAspect_ColorMap^ aColorMap)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->SetColorMap(*((Handle_Aspect_ColorMap*)aColorMap->Handle));
}

 void OCV2d_Viewer::SetTypeMap(OCNaroWrappers::OCAspect_TypeMap^ aTypeMap)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->SetTypeMap(*((Handle_Aspect_TypeMap*)aTypeMap->Handle));
}

 void OCV2d_Viewer::SetWidthMap(OCNaroWrappers::OCAspect_WidthMap^ aWidthMap)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->SetWidthMap(*((Handle_Aspect_WidthMap*)aWidthMap->Handle));
}

 void OCV2d_Viewer::SetFontMap(OCNaroWrappers::OCAspect_FontMap^ aFontMap, System::Boolean useMFT)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->SetFontMap(*((Handle_Aspect_FontMap*)aFontMap->Handle), OCConverter::BooleanToStandardBoolean(useMFT));
}

 void OCV2d_Viewer::SetMarkMap(OCNaroWrappers::OCAspect_MarkMap^ aMarkMap)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->SetMarkMap(*((Handle_Aspect_MarkMap*)aMarkMap->Handle));
}

OCAspect_ColorMap^ OCV2d_Viewer::ColorMap()
{
  Handle(Aspect_ColorMap) tmp = (*((Handle_V2d_Viewer*)nativeHandle))->ColorMap();
  return gcnew OCAspect_ColorMap(&tmp);
}

OCAspect_TypeMap^ OCV2d_Viewer::TypeMap()
{
  Handle(Aspect_TypeMap) tmp = (*((Handle_V2d_Viewer*)nativeHandle))->TypeMap();
  return gcnew OCAspect_TypeMap(&tmp);
}

OCAspect_WidthMap^ OCV2d_Viewer::WidthMap()
{
  Handle(Aspect_WidthMap) tmp = (*((Handle_V2d_Viewer*)nativeHandle))->WidthMap();
  return gcnew OCAspect_WidthMap(&tmp);
}

OCAspect_FontMap^ OCV2d_Viewer::FontMap()
{
  Handle(Aspect_FontMap) tmp = (*((Handle_V2d_Viewer*)nativeHandle))->FontMap();
  return gcnew OCAspect_FontMap(&tmp);
}

OCAspect_MarkMap^ OCV2d_Viewer::MarkMap()
{
  Handle(Aspect_MarkMap) tmp = (*((Handle_V2d_Viewer*)nativeHandle))->MarkMap();
  return gcnew OCAspect_MarkMap(&tmp);
}

 System::Boolean OCV2d_Viewer::UseMFT()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_V2d_Viewer*)nativeHandle))->UseMFT());
}

OCGraphic2d_View^ OCV2d_Viewer::View()
{
  Handle(Graphic2d_View) tmp = (*((Handle_V2d_Viewer*)nativeHandle))->View();
  return gcnew OCGraphic2d_View(&tmp);
}

 Standard_Integer OCV2d_Viewer::InitializeColor(OCQuantity_NameOfColor aColor)
{
  return (*((Handle_V2d_Viewer*)nativeHandle))->InitializeColor((Quantity_NameOfColor)aColor);
}

 void OCV2d_Viewer::InitActiveViews()
{
  (*((Handle_V2d_Viewer*)nativeHandle))->InitActiveViews();
}

 System::Boolean OCV2d_Viewer::MoreActiveViews()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_V2d_Viewer*)nativeHandle))->MoreActiveViews());
}

 void OCV2d_Viewer::NextActiveViews()
{
  (*((Handle_V2d_Viewer*)nativeHandle))->NextActiveViews();
}

OCV2d_View^ OCV2d_Viewer::ActiveView()
{
  Handle(V2d_View) tmp = (*((Handle_V2d_Viewer*)nativeHandle))->ActiveView();
  return gcnew OCV2d_View(&tmp);
}

 System::Boolean OCV2d_Viewer::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_V2d_Viewer*)nativeHandle))->IsEmpty());
}

 OCAspect_GridType OCV2d_Viewer::GridType()
{
  return (OCAspect_GridType)((*((Handle_V2d_Viewer*)nativeHandle))->GridType());
}

 void OCV2d_Viewer::Hit(Quantity_Length X, Quantity_Length Y, Quantity_Length& gx, Quantity_Length& gy)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->Hit(X, Y, gx, gy);
}

 void OCV2d_Viewer::ActivateGrid(OCAspect_GridType aGridType, OCAspect_GridDrawMode aGridDrawMode)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->ActivateGrid((Aspect_GridType)aGridType, (Aspect_GridDrawMode)aGridDrawMode);
}

 void OCV2d_Viewer::DeactivateGrid()
{
  (*((Handle_V2d_Viewer*)nativeHandle))->DeactivateGrid();
}

 System::Boolean OCV2d_Viewer::IsActive()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_V2d_Viewer*)nativeHandle))->IsActive());
}

 void OCV2d_Viewer::RectangularGridValues(Quantity_Length& XOrigin, Quantity_Length& YOrigin, Quantity_Length& XStep, Quantity_Length& YStep, Quantity_PlaneAngle& RotationAngle)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->RectangularGridValues(XOrigin, YOrigin, XStep, YStep, RotationAngle);
}

 void OCV2d_Viewer::SetRectangularGridValues(Quantity_Length XOrigin, Quantity_Length YOrigin, Quantity_Length XStep, Quantity_Length YStep, Quantity_PlaneAngle RotationAngle)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->SetRectangularGridValues(XOrigin, YOrigin, XStep, YStep, RotationAngle);
}

 void OCV2d_Viewer::CircularGridValues(Quantity_Length& XOrigin, Quantity_Length& YOrigin, Quantity_Length& RadiusStep, Standard_Integer& DivisionNumber, Quantity_PlaneAngle& RotationAngle)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->CircularGridValues(XOrigin, YOrigin, RadiusStep, DivisionNumber, RotationAngle);
}

 void OCV2d_Viewer::SetCircularGridValues(Quantity_Length XOrigin, Quantity_Length YOrigin, Quantity_Length RadiusStep, Standard_Integer DivisionNumber, Quantity_PlaneAngle RotationAngle)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->SetCircularGridValues(XOrigin, YOrigin, RadiusStep, DivisionNumber, RotationAngle);
}

 void OCV2d_Viewer::SetGridColor(OCNaroWrappers::OCQuantity_Color^ color1, OCNaroWrappers::OCQuantity_Color^ color2)
{
  (*((Handle_V2d_Viewer*)nativeHandle))->SetGridColor(*((Quantity_Color*)color1->Handle), *((Quantity_Color*)color2->Handle));
}


