// File generated by CPPExt (Transient)
//
#ifndef _Prs2d_Length_OCWrappers_HeaderFile
#define _Prs2d_Length_OCWrappers_HeaderFile

// include the wrapped class
#include <Prs2d_Length.hxx>
#include "../Converter.h"

#include "Prs2d_Dimension.h"

#include "Prs2d_TypeOfDist.h"
#include "Prs2d_TypeOfArrow.h"
#include "Prs2d_ArrowSide.h"


namespace OCNaroWrappers
{

ref class OCGraphic2d_GraphicObject;
ref class OCgp_Pnt2d;
ref class OCTCollection_ExtendedString;
ref class OCgp_Lin2d;
ref class OCGraphic2d_Drawer;


//! Constructs the primitive Length <br>
public ref class OCPrs2d_Length : OCPrs2d_Dimension {

protected:
  // dummy constructor;
  OCPrs2d_Length(OCDummy^) : OCPrs2d_Dimension((OCDummy^)nullptr) {};

public:

// constructor from native
OCPrs2d_Length(Handle(Prs2d_Length)* nativeHandle);

// Methods PUBLIC

//! Initializes the length dimension between points <br>
//!          anAttachPnt1 and anAttachPnt2. <br>
//!          aLength is length of the attach lines <br>
//!          aTypeDist defines the orientation of the displayed length: <br>
//!          AIS2D_TOD_AUTOMATIC <br>
//!          AIS2D_TOD_OBLIQUE <br>
//!          AIS2D_TOD_HORIZONTAL <br>
//!          AIS2D_TOD_VERTICAL <br>
//!          anArrow defines the number of arrows (one, two or none) <br>
OCPrs2d_Length(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, OCNaroWrappers::OCgp_Pnt2d^ anAttachPnt1, OCNaroWrappers::OCgp_Pnt2d^ anAttachPnt2, OCNaroWrappers::OCTCollection_ExtendedString^ aText, Standard_Real aTxtScale, Standard_Real aLength, OCPrs2d_TypeOfDist aTypeDist, Standard_Real anArrAngle, Standard_Real anArrLength, OCPrs2d_TypeOfArrow anArrType, OCPrs2d_ArrowSide anArrow, System::Boolean IsReverseArrow);

//! Initializes the length dimension between point <br>
//!          anAttachPnt1 and line defined anAttachLin. <br>
//!          aLenAttachLin is length of the attach lines <br>
OCPrs2d_Length(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, OCNaroWrappers::OCgp_Pnt2d^ anAttachPnt, OCNaroWrappers::OCgp_Lin2d^ anAttachLin, OCNaroWrappers::OCTCollection_ExtendedString^ aText, Standard_Real aTxtScale, Standard_Real aLenAttachLin, Standard_Real anArrAngle, Standard_Real anArrLength, OCPrs2d_TypeOfArrow anArrType, OCPrs2d_ArrowSide anArrow, System::Boolean IsReverseArrow);

//! Initializes the length dimension between line <br>
//!          anAttachLin1 and line defined anAttachLin2. <br>
//!          aLenAttachLin is length of the attach lines <br>
OCPrs2d_Length(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, OCNaroWrappers::OCgp_Lin2d^ anAttachLin1, OCNaroWrappers::OCgp_Lin2d^ anAttachLin2, OCNaroWrappers::OCTCollection_ExtendedString^ aText, Standard_Real aTxtScale, Standard_Real aLenAttachLin, Standard_Real anArrAngle, Standard_Real anArrLength, OCPrs2d_TypeOfArrow anArrType, OCPrs2d_ArrowSide anArrow, System::Boolean IsReverseArrow);

//! Sets the length of attachment lines <br>
 /*instead*/  void SetAttachLinLength(Standard_Real aLength) ;


virtual /*instead*/  void Save(Aspect_FStream& aFStream) ;

//! returns coordinates of points, which are begining <br>
//!          and end of arrow <br>
 /*instead*/  void LineCoord(OCNaroWrappers::OCgp_Pnt2d^ aFirstPnt, OCNaroWrappers::OCgp_Pnt2d^ aSecondPnt) ;

//! returns coordinates of points, which are begining <br>
//!          and end of arrow <br>
 /*instead*/  void CallOutCoord(OCNaroWrappers::OCgp_Pnt2d^ aFirstPnt, OCNaroWrappers::OCgp_Pnt2d^ aSecondPnt) ;


 /*instead*/  OCPrs2d_TypeOfDist TypeOfDist() ;

~OCPrs2d_Length()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
