// File generated by CPPExt (CPP file)
//

#include "Prs2d_RadiusIndep.h"
#include "../Converter.h"
#include "../Graphic2d/Graphic2d_GraphicObject.h"
#include "../gp/gp_Pnt2d.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "../Graphic2d/Graphic2d_Drawer.h"


using namespace OCNaroWrappers;

OCPrs2d_RadiusIndep::OCPrs2d_RadiusIndep(Handle(Prs2d_RadiusIndep)* nativeHandle) : OCGraphic2d_Line((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Prs2d_RadiusIndep(*nativeHandle);
}

OCPrs2d_RadiusIndep::OCPrs2d_RadiusIndep(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGO, OCNaroWrappers::OCgp_Pnt2d^ anAttachPnt, OCNaroWrappers::OCgp_Pnt2d^ aCenter, Standard_Real aRad, OCNaroWrappers::OCTCollection_ExtendedString^ aText, Standard_Real aLength, OCPrs2d_TypeOfRadius aTypeRad, Standard_Real aTxtScale) : OCGraphic2d_Line((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Prs2d_RadiusIndep(new Prs2d_RadiusIndep(*((Handle_Graphic2d_GraphicObject*)aGO->Handle), *((gp_Pnt2d*)anAttachPnt->Handle), *((gp_Pnt2d*)aCenter->Handle), aRad, *((TCollection_ExtendedString*)aText->Handle), aLength, (Prs2d_TypeOfRadius)aTypeRad, aTxtScale));
}

 void OCPrs2d_RadiusIndep::Values(OCNaroWrappers::OCgp_Pnt2d^ anAttPnt, OCNaroWrappers::OCgp_Pnt2d^ aCenter, Standard_Real& aRad, OCNaroWrappers::OCTCollection_ExtendedString^ aText, Standard_Real& aLength, OCPrs2d_TypeOfRadius& aTypeRad, Standard_Real& aTxtScale)
{
  (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->Values(*((gp_Pnt2d*)anAttPnt->Handle), *((gp_Pnt2d*)aCenter->Handle), aRad, *((TCollection_ExtendedString*)aText->Handle), aLength, (Prs2d_TypeOfRadius&)aTypeRad, aTxtScale);
}

 void OCPrs2d_RadiusIndep::SetText(OCNaroWrappers::OCTCollection_ExtendedString^ aTxt)
{
  (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->SetText(*((TCollection_ExtendedString*)aTxt->Handle));
}

 void OCPrs2d_RadiusIndep::SetTextScale(Standard_Real aTxtScale)
{
  (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->SetTextScale(aTxtScale);
}

 void OCPrs2d_RadiusIndep::SetTextFont(Standard_Integer aTF)
{
  (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->SetTextFont(aTF);
}

 void OCPrs2d_RadiusIndep::SetFontOfSymb(Standard_Integer aFS)
{
  (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->SetFontOfSymb(aFS);
}

 void OCPrs2d_RadiusIndep::DrawSymbol(System::Boolean isDraw)
{
  (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->DrawSymbol(OCConverter::BooleanToStandardBoolean(isDraw));
}

 void OCPrs2d_RadiusIndep::SetSymbolCode(Standard_Integer aCode)
{
  (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->SetSymbolCode(aCode);
}

 Standard_Integer OCPrs2d_RadiusIndep::TextFont()
{
  return (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->TextFont();
}

 Standard_Integer OCPrs2d_RadiusIndep::FontOfSymb()
{
  return (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->FontOfSymb();
}

 System::Boolean OCPrs2d_RadiusIndep::IsDrawSymbol()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Prs2d_RadiusIndep*)nativeHandle))->IsDrawSymbol());
}

 Standard_Integer OCPrs2d_RadiusIndep::SymbolCode()
{
  return (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->SymbolCode();
}

 void OCPrs2d_RadiusIndep::Save(Aspect_FStream& aFStream)
{
  (*((Handle_Prs2d_RadiusIndep*)nativeHandle))->Save(aFStream);
}


