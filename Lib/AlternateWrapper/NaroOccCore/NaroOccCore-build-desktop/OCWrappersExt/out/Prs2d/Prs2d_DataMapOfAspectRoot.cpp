// File generated by CPPExt (CPP file)
//

#include "Prs2d_DataMapOfAspectRoot.h"
#include "../Converter.h"
#include "Prs2d_AspectRoot.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "Prs2d_DataMapNodeOfDataMapOfAspectRoot.h"
#include "Prs2d_DataMapIteratorOfDataMapOfAspectRoot.h"


using namespace OCNaroWrappers;

OCPrs2d_DataMapOfAspectRoot::OCPrs2d_DataMapOfAspectRoot(Prs2d_DataMapOfAspectRoot* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCPrs2d_DataMapOfAspectRoot::OCPrs2d_DataMapOfAspectRoot(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new Prs2d_DataMapOfAspectRoot(NbBuckets);
}

OCPrs2d_DataMapOfAspectRoot^ OCPrs2d_DataMapOfAspectRoot::Assign(OCNaroWrappers::OCPrs2d_DataMapOfAspectRoot^ Other)
{
  Prs2d_DataMapOfAspectRoot* tmp = new Prs2d_DataMapOfAspectRoot(0);
  *tmp = ((Prs2d_DataMapOfAspectRoot*)nativeHandle)->Assign(*((Prs2d_DataMapOfAspectRoot*)Other->Handle));
  return gcnew OCPrs2d_DataMapOfAspectRoot(tmp);
}

 void OCPrs2d_DataMapOfAspectRoot::ReSize(Standard_Integer NbBuckets)
{
  ((Prs2d_DataMapOfAspectRoot*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCPrs2d_DataMapOfAspectRoot::Bind(Standard_Integer K, OCNaroWrappers::OCPrs2d_AspectRoot^ I)
{
  return OCConverter::StandardBooleanToBoolean(((Prs2d_DataMapOfAspectRoot*)nativeHandle)->Bind(K, *((Handle_Prs2d_AspectRoot*)I->Handle)));
}

 System::Boolean OCPrs2d_DataMapOfAspectRoot::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((Prs2d_DataMapOfAspectRoot*)nativeHandle)->IsBound(K));
}

 System::Boolean OCPrs2d_DataMapOfAspectRoot::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((Prs2d_DataMapOfAspectRoot*)nativeHandle)->UnBind(K));
}

OCPrs2d_AspectRoot^ OCPrs2d_DataMapOfAspectRoot::Find(Standard_Integer K)
{
  Handle(Prs2d_AspectRoot) tmp = ((Prs2d_DataMapOfAspectRoot*)nativeHandle)->Find(K);
  return gcnew OCPrs2d_AspectRoot(&tmp);
}

OCPrs2d_AspectRoot^ OCPrs2d_DataMapOfAspectRoot::ChangeFind(Standard_Integer K)
{
  Handle(Prs2d_AspectRoot) tmp = ((Prs2d_DataMapOfAspectRoot*)nativeHandle)->ChangeFind(K);
  return gcnew OCPrs2d_AspectRoot(&tmp);
}

 Standard_Address OCPrs2d_DataMapOfAspectRoot::Find1(Standard_Integer K)
{
  return ((Prs2d_DataMapOfAspectRoot*)nativeHandle)->Find1(K);
}

 Standard_Address OCPrs2d_DataMapOfAspectRoot::ChangeFind1(Standard_Integer K)
{
  return ((Prs2d_DataMapOfAspectRoot*)nativeHandle)->ChangeFind1(K);
}


