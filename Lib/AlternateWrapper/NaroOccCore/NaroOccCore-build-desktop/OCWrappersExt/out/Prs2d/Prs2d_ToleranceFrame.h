// File generated by CPPExt (Transient)
//
#ifndef _Prs2d_ToleranceFrame_OCWrappers_HeaderFile
#define _Prs2d_ToleranceFrame_OCWrappers_HeaderFile

// include the wrapped class
#include <Prs2d_ToleranceFrame.hxx>
#include "../Converter.h"

#include "../Graphic2d/Graphic2d_Line.h"

#include "../TCollection/TCollection_ExtendedString.h"
#include "../TShort/TShort_Array1OfShortReal.h"
#include "Prs2d_TypeOfTolerance.h"


namespace OCNaroWrappers
{

ref class OCPrs2d_Tolerance;
ref class OCGraphic2d_GraphicObject;
ref class OCGraphic2d_Drawer;
ref class OCTColgp_HArray1OfPnt2d;
ref class OCTCollection_ExtendedString;



public ref class OCPrs2d_ToleranceFrame : OCGraphic2d_Line {

protected:
  // dummy constructor;
  OCPrs2d_ToleranceFrame(OCDummy^) : OCGraphic2d_Line((OCDummy^)nullptr) {};

public:

// constructor from native
OCPrs2d_ToleranceFrame(Handle(Prs2d_ToleranceFrame)* nativeHandle);

// Methods PUBLIC

//! Creates a frame with a type of tolerance <aTolType>, <br>
//!          tolerance <aTolTxt>, the reference point is <aXPosition>, <aYPosition <br>
//!          <aX>, <aY> - the center of left vertical edge of this frame <br>
OCPrs2d_ToleranceFrame(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGO, Quantity_Length aX, Quantity_Length aY, Quantity_Length aHeight, OCPrs2d_TypeOfTolerance aTolType, System::String^ aTolTxt, System::String^ aTxt1, System::String^ aTxt2, Standard_Real anAngle, Standard_Real aScale);

//! Defines the height of the frame <br>
 /*instead*/  void SetHeight(Standard_Real aHSize) ;

//! Indicates the current height of the frame <br>
 /*instead*/  Standard_Real Height() ;


virtual /*instead*/  void Save(Aspect_FStream& aFStream) ;

//! Returns array of 2d points, which produce frame for tolerance <br>
//!          Size of array == 4 <br>
 /*instead*/  OCTColgp_HArray1OfPnt2d^ ArrayOfPnt2d() ;

//! Sets the text to this tolerance <br>
 /*instead*/  void SetTolText(System::String^ aText) ;


 /*instead*/  void SetText1(System::String^ aText) ;


 /*instead*/  void SetText2(System::String^ aText) ;

//! Returns text and array, which contain points of cell <br>
//!          which separates the text from other parameters <br>
 /*instead*/  OCTCollection_ExtendedString^ TolText() ;


 /*instead*/  OCTCollection_ExtendedString^ Text1() ;


 /*instead*/  OCTCollection_ExtendedString^ Text2() ;


 /*instead*/  Standard_Real TextScale() ;

~OCPrs2d_ToleranceFrame()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
