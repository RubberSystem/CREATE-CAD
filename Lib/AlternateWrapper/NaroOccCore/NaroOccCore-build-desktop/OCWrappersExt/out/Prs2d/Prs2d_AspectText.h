// File generated by CPPExt (Transient)
//
#ifndef _Prs2d_AspectText_OCWrappers_HeaderFile
#define _Prs2d_AspectText_OCWrappers_HeaderFile

// include the wrapped class
#include <Prs2d_AspectText.hxx>
#include "../Converter.h"

#include "Prs2d_AspectRoot.h"

#include "../Quantity/Quantity_Color.h"
#include "../Aspect/Aspect_FontStyle.h"
#include "../Aspect/Aspect_TypeOfText.h"
#include "../Quantity/Quantity_NameOfColor.h"
#include "../Aspect/Aspect_TypeOfFont.h"


namespace OCNaroWrappers
{

ref class OCQuantity_Color;
ref class OCAspect_FontStyle;


//! defines the attributes when drawing a text presentation <br>
public ref class OCPrs2d_AspectText : OCPrs2d_AspectRoot {

protected:
  // dummy constructor;
  OCPrs2d_AspectText(OCDummy^) : OCPrs2d_AspectRoot((OCDummy^)nullptr) {};

public:

// constructor from native
OCPrs2d_AspectText(Handle(Prs2d_AspectText)* nativeHandle);

// Methods PUBLIC

//! constructor using basic aspect types. <br>
OCPrs2d_AspectText(OCQuantity_NameOfColor aColor, System::String^ aFont, Quantity_Length anHeight, OCAspect_TypeOfText aType, System::Boolean isUnderlined);

//! constructor using advanced aspect types. <br>
OCPrs2d_AspectText(OCNaroWrappers::OCQuantity_Color^ aColor, OCNaroWrappers::OCAspect_FontStyle^ aFont, OCAspect_TypeOfText aType, System::Boolean isUnderlined);

//! Change the color aspect with a predefined color. <br>
 /*instead*/  void SetColor(OCQuantity_NameOfColor aColor) ;

//! Change the color aspect. <br>
 /*instead*/  void SetColor(OCNaroWrappers::OCQuantity_Color^ aColor) ;

//! Change the font style aspect <br>
 /*instead*/  void SetFont(OCNaroWrappers::OCAspect_FontStyle^ aFont) ;

//! Change the font style aspect with a new font type but <br>
//! preserve all other parameters. <br>
 /*instead*/  void SetFont(OCAspect_TypeOfFont aFont) ;

//! Change the font style aspect with a new font slant <br>
//! added to the font original slant but preserve all other parameters. <br>
 /*instead*/  void SetRelativeSlant(Quantity_PlaneAngle aSlant) ;

//! Change the font style aspect with a new font height <br>
//! and CapsHeight indicator but preserve all other parameters. <br>
 /*instead*/  void SetHeight(Quantity_Length anHeight, System::Boolean isCapsHeight) ;

//! Change the char type aspect of bolded fonts. <br>
 /*instead*/  void SetType(OCAspect_TypeOfText aType) ;

//! Enable / Disable the underlined char aspect. <br>
 /*instead*/  void SetUnderlined(System::Boolean anIsUnderline) ;

//! Returns the current parameters of this text aspect. <br>
 /*instead*/  void Values(OCNaroWrappers::OCQuantity_Color^ aColor, OCNaroWrappers::OCAspect_FontStyle^ aFont, Quantity_PlaneAngle& aSlant, OCAspect_TypeOfText& aType, System::Boolean& isUnderlined) ;

//! Returns the current font index according to the font style aspect <br>
 /*instead*/  Standard_Integer FontIndex() ;

//! Returns the current color index according to the color aspect <br>
 /*instead*/  Standard_Integer ColorIndex() ;

//! Sets the current color index according to the color aspect <br>
 /*instead*/  void SetFontIndex(Standard_Integer anInd) ;

//! Sets the current color index according to the color aspect <br>
 /*instead*/  void SetColorIndex(Standard_Integer anInd) ;

~OCPrs2d_AspectText()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
