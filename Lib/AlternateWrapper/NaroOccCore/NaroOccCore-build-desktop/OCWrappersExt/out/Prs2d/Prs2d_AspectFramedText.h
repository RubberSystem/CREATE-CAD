// File generated by CPPExt (Transient)
//
#ifndef _Prs2d_AspectFramedText_OCWrappers_HeaderFile
#define _Prs2d_AspectFramedText_OCWrappers_HeaderFile

// include the wrapped class
#include <Prs2d_AspectFramedText.hxx>
#include "../Converter.h"

#include "Prs2d_AspectRoot.h"

#include "../Quantity/Quantity_NameOfColor.h"
#include "../Aspect/Aspect_TypeOfFont.h"
#include "../Aspect/Aspect_WidthOfLine.h"


namespace OCNaroWrappers
{



//! defines the attributes when drawing a framed text Presentation. <br>
public ref class OCPrs2d_AspectFramedText : OCPrs2d_AspectRoot {

protected:
  // dummy constructor;
  OCPrs2d_AspectFramedText(OCDummy^) : OCPrs2d_AspectRoot((OCDummy^)nullptr) {};

public:

// constructor from native
OCPrs2d_AspectFramedText(Handle(Prs2d_AspectFramedText)* nativeHandle);

// Methods PUBLIC


OCPrs2d_AspectFramedText(OCQuantity_NameOfColor ColorInd, OCQuantity_NameOfColor FrameColorInd, OCAspect_WidthOfLine FrameWidthInd, OCAspect_TypeOfFont FontInd, Standard_ShortReal aSlant, Standard_ShortReal aHScale, Standard_ShortReal aWScale, System::Boolean isUnderlined);


 /*instead*/  void SetColorOfText(OCQuantity_NameOfColor aColor) ;


 /*instead*/  void SetFrameColor(OCQuantity_NameOfColor aFrameColor) ;


 /*instead*/  void SetFrameWidth(OCAspect_WidthOfLine aFrameWidth) ;


 /*instead*/  void SetFontOfText(OCAspect_TypeOfFont aFont) ;


 /*instead*/  void SetSlant(Standard_ShortReal aSlant) ;


 /*instead*/  void SetHScale(Standard_ShortReal aHScale) ;


 /*instead*/  void SetWScale(Standard_ShortReal aWScale) ;


 /*instead*/  void SetUnderlined(System::Boolean anIsUnderlined) ;


 /*instead*/  void Values(OCQuantity_NameOfColor& aColorInd, OCQuantity_NameOfColor& aFrameColorInd, OCAspect_WidthOfLine& aFrameWidthInd, OCAspect_TypeOfFont& aFontInd, Standard_ShortReal& aSlant, Standard_ShortReal& aHScale, Standard_ShortReal& aWScale, System::Boolean& isUnderlined) ;

~OCPrs2d_AspectFramedText()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
