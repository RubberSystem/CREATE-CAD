// File generated by CPPExt (Transient)
//
#ifndef _Select2D_SensitiveBox_OCWrappers_HeaderFile
#define _Select2D_SensitiveBox_OCWrappers_HeaderFile

// include the wrapped class
#include <Select2D_SensitiveBox.hxx>
#include "../Converter.h"

#include "Select2D_SensitiveEntity.h"

#include "../Bnd/Bnd_Box2d.h"
#include "Select2D_TypeOfSelection.h"


namespace OCNaroWrappers
{

ref class OCSelectBasics_EntityOwner;
ref class OCgp_Pnt2d;
ref class OCSelectBasics_ListOfBox2d;


//! defines a Sensitive Box (inside or boundary) <br>
public ref class OCSelect2D_SensitiveBox : OCSelect2D_SensitiveEntity {

protected:
  // dummy constructor;
  OCSelect2D_SensitiveBox(OCDummy^) : OCSelect2D_SensitiveEntity((OCDummy^)nullptr) {};

public:

// constructor from native
OCSelect2D_SensitiveBox(Handle(Select2D_SensitiveBox)* nativeHandle);

// Methods PUBLIC

//! Constructs a sensitive box object defined by the <br>
//! owner OwnerId, the center point Center, the height <br>
//! Height, the width Width, and the selection type Type. <br>
//! Type can be: <br>
//! -   interior <br>
//! -   boundary. <br>
OCSelect2D_SensitiveBox(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCgp_Pnt2d^ Center, Standard_Real Height, Standard_Real Width, OCSelect2D_TypeOfSelection Type);

//! Constructs a sensitive box object defined by the <br>
//! owner OwnerId, the coordinates Xmin, YMin, XMax, <br>
//! YMax, and the selection type Type. <br>
//! Xmin, YMin define the minimum point in the lower left <br>
//! hand corner of the box, and   XMax, YMax define the <br>
//! maximum point in the upper right hand corner of the box. <br>
//! Type can be: <br>
//! -   interior <br>
//! -   boundary. <br>
OCSelect2D_SensitiveBox(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, Standard_Real Xmin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, OCSelect2D_TypeOfSelection Type);


 /*instead*/  void Areas(OCNaroWrappers::OCSelectBasics_ListOfBox2d^ aresul) ;


 /*instead*/  System::Boolean Matches(Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin) ;


 /*instead*/  System::Boolean Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol) ;

~OCSelect2D_SensitiveBox()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
