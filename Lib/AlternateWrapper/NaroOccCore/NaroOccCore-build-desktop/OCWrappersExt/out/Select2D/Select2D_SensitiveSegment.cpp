// File generated by CPPExt (CPP file)
//

#include "Select2D_SensitiveSegment.h"
#include "../Converter.h"
#include "../SelectBasics/SelectBasics_EntityOwner.h"
#include "../gp/gp_Pnt2d.h"
#include "../SelectBasics/SelectBasics_ListOfBox2d.h"


using namespace OCNaroWrappers;

OCSelect2D_SensitiveSegment::OCSelect2D_SensitiveSegment(Handle(Select2D_SensitiveSegment)* nativeHandle) : OCSelect2D_SensitiveEntity((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Select2D_SensitiveSegment(*nativeHandle);
}

OCSelect2D_SensitiveSegment::OCSelect2D_SensitiveSegment(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCgp_Pnt2d^ FirstP, OCNaroWrappers::OCgp_Pnt2d^ LastP, Standard_Integer MaxRect) : OCSelect2D_SensitiveEntity((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Select2D_SensitiveSegment(new Select2D_SensitiveSegment(*((Handle_SelectBasics_EntityOwner*)OwnerId->Handle), *((gp_Pnt2d*)FirstP->Handle), *((gp_Pnt2d*)LastP->Handle), MaxRect));
}

 void OCSelect2D_SensitiveSegment::Set(Standard_Integer MaxRect)
{
  (*((Handle_Select2D_SensitiveSegment*)nativeHandle))->Set(MaxRect);
}

 void OCSelect2D_SensitiveSegment::StartPoint(OCNaroWrappers::OCgp_Pnt2d^ aPt)
{
  (*((Handle_Select2D_SensitiveSegment*)nativeHandle))->StartPoint(*((gp_Pnt2d*)aPt->Handle));
}

 void OCSelect2D_SensitiveSegment::EndPoint(OCNaroWrappers::OCgp_Pnt2d^ aPt)
{
  (*((Handle_Select2D_SensitiveSegment*)nativeHandle))->EndPoint(*((gp_Pnt2d*)aPt->Handle));
}

OCgp_Pnt2d^ OCSelect2D_SensitiveSegment::StartPoint()
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = (*((Handle_Select2D_SensitiveSegment*)nativeHandle))->StartPoint();
  return gcnew OCgp_Pnt2d(tmp);
}

OCgp_Pnt2d^ OCSelect2D_SensitiveSegment::EndPoint()
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = (*((Handle_Select2D_SensitiveSegment*)nativeHandle))->EndPoint();
  return gcnew OCgp_Pnt2d(tmp);
}

 void OCSelect2D_SensitiveSegment::Areas(OCNaroWrappers::OCSelectBasics_ListOfBox2d^ aSeq)
{
  (*((Handle_Select2D_SensitiveSegment*)nativeHandle))->Areas(*((SelectBasics_ListOfBox2d*)aSeq->Handle));
}

 System::Boolean OCSelect2D_SensitiveSegment::Matches(Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Select2D_SensitiveSegment*)nativeHandle))->Matches(X, Y, aTol, DMin));
}

 System::Boolean OCSelect2D_SensitiveSegment::Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Select2D_SensitiveSegment*)nativeHandle))->Matches(XMin, YMin, XMax, YMax, aTol));
}

 Standard_Integer OCSelect2D_SensitiveSegment::MaxBoxes()
{
  return (*((Handle_Select2D_SensitiveSegment*)nativeHandle))->MaxBoxes();
}


