// File generated by CPPExt (Transient)
//
#ifndef _Select2D_SensitiveEntity_OCWrappers_HeaderFile
#define _Select2D_SensitiveEntity_OCWrappers_HeaderFile

// include the wrapped class
#include <Select2D_SensitiveEntity.hxx>
#include "../Converter.h"

#include "../SelectBasics/SelectBasics_SensitiveEntity.h"



namespace OCNaroWrappers
{

ref class OCSelectBasics_EntityOwner;
ref class OCSelect2D_Projector;
ref class OCTColgp_Array1OfPnt2d;
ref class OCBnd_Box2d;


//! A framework to define what all sensitive 2D entities have in common. <br>
//! This framework can be used to create new 2D sensitive entities. <br>
public ref class OCSelect2D_SensitiveEntity : OCSelectBasics_SensitiveEntity {

protected:
  // dummy constructor;
  OCSelect2D_SensitiveEntity(OCDummy^) : OCSelectBasics_SensitiveEntity((OCDummy^)nullptr) {};

public:

// constructor from native
OCSelect2D_SensitiveEntity(Handle(Select2D_SensitiveEntity)* nativeHandle);

// Methods PUBLIC


OCSelect2D_SensitiveEntity(OCNaroWrappers::OCSelectBasics_EntityOwner^ anOwnerId);

//! returns Standard_False unless if redefined... <br>
virtual /*instead*/  System::Boolean NeedsConversion() ;

//! Processes the projection of the sensitive primitives in <br>
//! the active view.   This must be performed before the selection action. <br>
//! This function must be implemented in daughter classes. <br>
virtual /*instead*/  void Convert(OCNaroWrappers::OCSelect2D_Projector^ aProjector) ;

//! Returns the maximum number of boxes. <br>
virtual /*instead*/  Standard_Integer MaxBoxes() ;

//! Sets and stores a tolerance value in the argument <br>
//! aTol of the function Matches inherited from SelectBasics_SensitiveEntity. <br>
 /*instead*/  void SetOwnTolerance(Standard_Real aValue) ;

//! Removes the in the argument aTol of the function <br>
//! Matches inherited from SelectBasics_SensitiveEntity. <br>
 /*instead*/  void UnsetOwnTolerance() ;

//! Returns true if the entity has a setting for the <br>
//! argument aTol   of the function Matches inherited <br>
//! from SelectBasics_SensitiveEntity. <br>
 /*instead*/  System::Boolean HasOwnTolerance() ;

//! Returns the tolerance value in the argument aTol of <br>
//! the function Matches inherited from SelectBasics_SensitiveEntity. <br>
 /*instead*/  Standard_Real OwnTolerance() ;

//! Returns true if this object can provide 3D information. <br>
virtual /*instead*/  System::Boolean Is3D() ;

//! Free contur selection for 2d is not defined <br>
virtual /*instead*/  System::Boolean Matches(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCBnd_Box2d^ aBox, Standard_Real aTol) ;

~OCSelect2D_SensitiveEntity()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
