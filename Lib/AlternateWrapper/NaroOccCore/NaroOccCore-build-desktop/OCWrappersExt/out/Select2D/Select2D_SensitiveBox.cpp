// File generated by CPPExt (CPP file)
//

#include "Select2D_SensitiveBox.h"
#include "../Converter.h"
#include "../SelectBasics/SelectBasics_EntityOwner.h"
#include "../gp/gp_Pnt2d.h"
#include "../SelectBasics/SelectBasics_ListOfBox2d.h"


using namespace OCNaroWrappers;

OCSelect2D_SensitiveBox::OCSelect2D_SensitiveBox(Handle(Select2D_SensitiveBox)* nativeHandle) : OCSelect2D_SensitiveEntity((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Select2D_SensitiveBox(*nativeHandle);
}

OCSelect2D_SensitiveBox::OCSelect2D_SensitiveBox(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, OCNaroWrappers::OCgp_Pnt2d^ Center, Standard_Real Height, Standard_Real Width, OCSelect2D_TypeOfSelection Type) : OCSelect2D_SensitiveEntity((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Select2D_SensitiveBox(new Select2D_SensitiveBox(*((Handle_SelectBasics_EntityOwner*)OwnerId->Handle), *((gp_Pnt2d*)Center->Handle), Height, Width, (Select2D_TypeOfSelection)Type));
}

OCSelect2D_SensitiveBox::OCSelect2D_SensitiveBox(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, Standard_Real Xmin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, OCSelect2D_TypeOfSelection Type) : OCSelect2D_SensitiveEntity((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Select2D_SensitiveBox(new Select2D_SensitiveBox(*((Handle_SelectBasics_EntityOwner*)OwnerId->Handle), Xmin, YMin, XMax, YMax, (Select2D_TypeOfSelection)Type));
}

 void OCSelect2D_SensitiveBox::Areas(OCNaroWrappers::OCSelectBasics_ListOfBox2d^ aresul)
{
  (*((Handle_Select2D_SensitiveBox*)nativeHandle))->Areas(*((SelectBasics_ListOfBox2d*)aresul->Handle));
}

 System::Boolean OCSelect2D_SensitiveBox::Matches(Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Select2D_SensitiveBox*)nativeHandle))->Matches(X, Y, aTol, DMin));
}

 System::Boolean OCSelect2D_SensitiveBox::Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Select2D_SensitiveBox*)nativeHandle))->Matches(XMin, YMin, XMax, YMax, aTol));
}


