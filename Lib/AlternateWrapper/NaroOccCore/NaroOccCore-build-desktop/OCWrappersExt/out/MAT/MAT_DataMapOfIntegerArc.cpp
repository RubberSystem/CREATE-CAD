// File generated by CPPExt (CPP file)
//

#include "MAT_DataMapOfIntegerArc.h"
#include "../Converter.h"
#include "MAT_Arc.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MAT_DataMapNodeOfDataMapOfIntegerArc.h"
#include "MAT_DataMapIteratorOfDataMapOfIntegerArc.h"


using namespace OCNaroWrappers;

OCMAT_DataMapOfIntegerArc::OCMAT_DataMapOfIntegerArc(MAT_DataMapOfIntegerArc* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMAT_DataMapOfIntegerArc::OCMAT_DataMapOfIntegerArc(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MAT_DataMapOfIntegerArc(NbBuckets);
}

OCMAT_DataMapOfIntegerArc^ OCMAT_DataMapOfIntegerArc::Assign(OCNaroWrappers::OCMAT_DataMapOfIntegerArc^ Other)
{
  MAT_DataMapOfIntegerArc* tmp = new MAT_DataMapOfIntegerArc(0);
  *tmp = ((MAT_DataMapOfIntegerArc*)nativeHandle)->Assign(*((MAT_DataMapOfIntegerArc*)Other->Handle));
  return gcnew OCMAT_DataMapOfIntegerArc(tmp);
}

 void OCMAT_DataMapOfIntegerArc::ReSize(Standard_Integer NbBuckets)
{
  ((MAT_DataMapOfIntegerArc*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMAT_DataMapOfIntegerArc::Bind(Standard_Integer K, OCNaroWrappers::OCMAT_Arc^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MAT_DataMapOfIntegerArc*)nativeHandle)->Bind(K, *((Handle_MAT_Arc*)I->Handle)));
}

 System::Boolean OCMAT_DataMapOfIntegerArc::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT_DataMapOfIntegerArc*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMAT_DataMapOfIntegerArc::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT_DataMapOfIntegerArc*)nativeHandle)->UnBind(K));
}

OCMAT_Arc^ OCMAT_DataMapOfIntegerArc::Find(Standard_Integer K)
{
  Handle(MAT_Arc) tmp = ((MAT_DataMapOfIntegerArc*)nativeHandle)->Find(K);
  return gcnew OCMAT_Arc(&tmp);
}

OCMAT_Arc^ OCMAT_DataMapOfIntegerArc::ChangeFind(Standard_Integer K)
{
  Handle(MAT_Arc) tmp = ((MAT_DataMapOfIntegerArc*)nativeHandle)->ChangeFind(K);
  return gcnew OCMAT_Arc(&tmp);
}

 Standard_Address OCMAT_DataMapOfIntegerArc::Find1(Standard_Integer K)
{
  return ((MAT_DataMapOfIntegerArc*)nativeHandle)->Find1(K);
}

 Standard_Address OCMAT_DataMapOfIntegerArc::ChangeFind1(Standard_Integer K)
{
  return ((MAT_DataMapOfIntegerArc*)nativeHandle)->ChangeFind1(K);
}


