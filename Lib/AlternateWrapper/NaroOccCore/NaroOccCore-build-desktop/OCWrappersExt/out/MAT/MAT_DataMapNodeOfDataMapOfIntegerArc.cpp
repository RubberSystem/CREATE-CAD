// File generated by CPPExt (CPP file)
//

#include "MAT_DataMapNodeOfDataMapOfIntegerArc.h"
#include "../Converter.h"
#include "MAT_Arc.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MAT_DataMapOfIntegerArc.h"
#include "MAT_DataMapIteratorOfDataMapOfIntegerArc.h"


using namespace OCNaroWrappers;

OCMAT_DataMapNodeOfDataMapOfIntegerArc::OCMAT_DataMapNodeOfDataMapOfIntegerArc(Handle(MAT_DataMapNodeOfDataMapOfIntegerArc)* nativeHandle) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MAT_DataMapNodeOfDataMapOfIntegerArc(*nativeHandle);
}

OCMAT_DataMapNodeOfDataMapOfIntegerArc::OCMAT_DataMapNodeOfDataMapOfIntegerArc(Standard_Integer K, OCNaroWrappers::OCMAT_Arc^ I, TCollection_MapNodePtr n) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MAT_DataMapNodeOfDataMapOfIntegerArc(new MAT_DataMapNodeOfDataMapOfIntegerArc(K, *((Handle_MAT_Arc*)I->Handle), n));
}

 Standard_Integer OCMAT_DataMapNodeOfDataMapOfIntegerArc::Key()
{
  return (*((Handle_MAT_DataMapNodeOfDataMapOfIntegerArc*)nativeHandle))->Key();
}

OCMAT_Arc^ OCMAT_DataMapNodeOfDataMapOfIntegerArc::Value()
{
  Handle(MAT_Arc) tmp = (*((Handle_MAT_DataMapNodeOfDataMapOfIntegerArc*)nativeHandle))->Value();
  return gcnew OCMAT_Arc(&tmp);
}


