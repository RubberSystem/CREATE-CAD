// File generated by CPPExt (CPP file)
//

#include "MAT_DataMapOfIntegerNode.h"
#include "../Converter.h"
#include "MAT_Node.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MAT_DataMapNodeOfDataMapOfIntegerNode.h"
#include "MAT_DataMapIteratorOfDataMapOfIntegerNode.h"


using namespace OCNaroWrappers;

OCMAT_DataMapOfIntegerNode::OCMAT_DataMapOfIntegerNode(MAT_DataMapOfIntegerNode* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMAT_DataMapOfIntegerNode::OCMAT_DataMapOfIntegerNode(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MAT_DataMapOfIntegerNode(NbBuckets);
}

OCMAT_DataMapOfIntegerNode^ OCMAT_DataMapOfIntegerNode::Assign(OCNaroWrappers::OCMAT_DataMapOfIntegerNode^ Other)
{
  MAT_DataMapOfIntegerNode* tmp = new MAT_DataMapOfIntegerNode(0);
  *tmp = ((MAT_DataMapOfIntegerNode*)nativeHandle)->Assign(*((MAT_DataMapOfIntegerNode*)Other->Handle));
  return gcnew OCMAT_DataMapOfIntegerNode(tmp);
}

 void OCMAT_DataMapOfIntegerNode::ReSize(Standard_Integer NbBuckets)
{
  ((MAT_DataMapOfIntegerNode*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMAT_DataMapOfIntegerNode::Bind(Standard_Integer K, OCNaroWrappers::OCMAT_Node^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MAT_DataMapOfIntegerNode*)nativeHandle)->Bind(K, *((Handle_MAT_Node*)I->Handle)));
}

 System::Boolean OCMAT_DataMapOfIntegerNode::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT_DataMapOfIntegerNode*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMAT_DataMapOfIntegerNode::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT_DataMapOfIntegerNode*)nativeHandle)->UnBind(K));
}

OCMAT_Node^ OCMAT_DataMapOfIntegerNode::Find(Standard_Integer K)
{
  Handle(MAT_Node) tmp = ((MAT_DataMapOfIntegerNode*)nativeHandle)->Find(K);
  return gcnew OCMAT_Node(&tmp);
}

OCMAT_Node^ OCMAT_DataMapOfIntegerNode::ChangeFind(Standard_Integer K)
{
  Handle(MAT_Node) tmp = ((MAT_DataMapOfIntegerNode*)nativeHandle)->ChangeFind(K);
  return gcnew OCMAT_Node(&tmp);
}

 Standard_Address OCMAT_DataMapOfIntegerNode::Find1(Standard_Integer K)
{
  return ((MAT_DataMapOfIntegerNode*)nativeHandle)->Find1(K);
}

 Standard_Address OCMAT_DataMapOfIntegerNode::ChangeFind1(Standard_Integer K)
{
  return ((MAT_DataMapOfIntegerNode*)nativeHandle)->ChangeFind1(K);
}


