// File generated by CPPExt (CPP file)
//

#include "MAT_DataMapNodeOfDataMapOfIntegerBisector.h"
#include "../Converter.h"
#include "MAT_Bisector.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MAT_DataMapOfIntegerBisector.h"
#include "MAT_DataMapIteratorOfDataMapOfIntegerBisector.h"


using namespace OCNaroWrappers;

OCMAT_DataMapNodeOfDataMapOfIntegerBisector::OCMAT_DataMapNodeOfDataMapOfIntegerBisector(Handle(MAT_DataMapNodeOfDataMapOfIntegerBisector)* nativeHandle) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MAT_DataMapNodeOfDataMapOfIntegerBisector(*nativeHandle);
}

OCMAT_DataMapNodeOfDataMapOfIntegerBisector::OCMAT_DataMapNodeOfDataMapOfIntegerBisector(Standard_Integer K, OCNaroWrappers::OCMAT_Bisector^ I, TCollection_MapNodePtr n) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MAT_DataMapNodeOfDataMapOfIntegerBisector(new MAT_DataMapNodeOfDataMapOfIntegerBisector(K, *((Handle_MAT_Bisector*)I->Handle), n));
}

 Standard_Integer OCMAT_DataMapNodeOfDataMapOfIntegerBisector::Key()
{
  return (*((Handle_MAT_DataMapNodeOfDataMapOfIntegerBisector*)nativeHandle))->Key();
}

OCMAT_Bisector^ OCMAT_DataMapNodeOfDataMapOfIntegerBisector::Value()
{
  Handle(MAT_Bisector) tmp = (*((Handle_MAT_DataMapNodeOfDataMapOfIntegerBisector*)nativeHandle))->Value();
  return gcnew OCMAT_Bisector(&tmp);
}


