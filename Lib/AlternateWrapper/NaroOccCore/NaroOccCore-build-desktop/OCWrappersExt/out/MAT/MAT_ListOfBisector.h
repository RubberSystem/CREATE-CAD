// File generated by CPPExt (Transient)
//
#ifndef _MAT_ListOfBisector_OCWrappers_HeaderFile
#define _MAT_ListOfBisector_OCWrappers_HeaderFile

// include the wrapped class
#include <MAT_ListOfBisector.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCMAT_TListNodeOfListOfBisector;
ref class OCMAT_Bisector;



public ref class OCMAT_ListOfBisector : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCMAT_ListOfBisector(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCMAT_ListOfBisector(Handle(MAT_ListOfBisector)* nativeHandle);

// Methods PUBLIC


OCMAT_ListOfBisector();


 /*instead*/  void First() ;


 /*instead*/  void Last() ;


 /*instead*/  void Init(OCNaroWrappers::OCMAT_Bisector^ aniten) ;


 /*instead*/  void Next() ;


 /*instead*/  void Previous() ;


 /*instead*/  System::Boolean More() ;


 /*instead*/  OCMAT_Bisector^ Current() ;


 /*instead*/  void Current(OCNaroWrappers::OCMAT_Bisector^ anitem) ;


 /*instead*/  OCMAT_Bisector^ FirstItem() ;


 /*instead*/  OCMAT_Bisector^ LastItem() ;


 /*instead*/  OCMAT_Bisector^ PreviousItem() ;


 /*instead*/  OCMAT_Bisector^ NextItem() ;


 /*instead*/  Standard_Integer Number() ;


 /*instead*/  Standard_Integer Index() ;


 /*instead*/  OCMAT_Bisector^ Brackets(Standard_Integer anindex) ;


 /*instead*/  void Unlink() ;


 /*instead*/  void LinkBefore(OCNaroWrappers::OCMAT_Bisector^ anitem) ;


 /*instead*/  void LinkAfter(OCNaroWrappers::OCMAT_Bisector^ anitem) ;


 /*instead*/  void FrontAdd(OCNaroWrappers::OCMAT_Bisector^ anitem) ;


 /*instead*/  void BackAdd(OCNaroWrappers::OCMAT_Bisector^ anitem) ;


 /*instead*/  void Permute() ;


 /*instead*/  void Loop() ;


 /*instead*/  System::Boolean IsEmpty() ;


 /*instead*/  void Dump(Standard_Integer ashift, Standard_Integer alevel) ;

~OCMAT_ListOfBisector()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
