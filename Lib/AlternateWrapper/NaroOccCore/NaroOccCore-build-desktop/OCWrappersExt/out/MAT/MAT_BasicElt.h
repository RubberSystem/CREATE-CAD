// File generated by CPPExt (Transient)
//
#ifndef _MAT_BasicElt_OCWrappers_HeaderFile
#define _MAT_BasicElt_OCWrappers_HeaderFile

// include the wrapped class
#include <MAT_BasicElt.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCMAT_Arc;


//! A    BasicELt  is  associated   to  each  elemtary <br>
//!          constituant of  the figure. <br>
public ref class OCMAT_BasicElt : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCMAT_BasicElt(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCMAT_BasicElt(Handle(MAT_BasicElt)* nativeHandle);

// Methods PUBLIC

//! Constructor, <anInteger> is the <index> of <me>. <br>
OCMAT_BasicElt(Standard_Integer anInteger);

//! Return <startArcLeft> or <startArcRight> corresponding <br>
//!            to <aSide>. <br>
 /*instead*/  OCMAT_Arc^ StartArc() ;

//! Return <endArcLeft> or <endArcRight> corresponding <br>
//!            to <aSide>. <br>
 /*instead*/  OCMAT_Arc^ EndArc() ;

//! Return the <index> of <me> in Graph.TheBasicElts. <br>
 /*instead*/  Standard_Integer Index() ;

//! Return the <GeomIndex> of <me>. <br>
 /*instead*/  Standard_Integer GeomIndex() ;


 /*instead*/  void SetStartArc(OCNaroWrappers::OCMAT_Arc^ anArc) ;


 /*instead*/  void SetEndArc(OCNaroWrappers::OCMAT_Arc^ anArc) ;


 /*instead*/  void SetIndex(Standard_Integer anInteger) ;


 /*instead*/  void SetGeomIndex(Standard_Integer anInteger) ;

~OCMAT_BasicElt()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
