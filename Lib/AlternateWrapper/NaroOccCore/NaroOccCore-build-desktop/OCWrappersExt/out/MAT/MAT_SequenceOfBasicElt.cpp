// File generated by CPPExt (CPP file)
//

#include "MAT_SequenceOfBasicElt.h"
#include "../Converter.h"
#include "MAT_BasicElt.h"
#include "MAT_SequenceNodeOfSequenceOfBasicElt.h"


using namespace OCNaroWrappers;

OCMAT_SequenceOfBasicElt::OCMAT_SequenceOfBasicElt(MAT_SequenceOfBasicElt* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMAT_SequenceOfBasicElt::OCMAT_SequenceOfBasicElt() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new MAT_SequenceOfBasicElt();
}

OCMAT_SequenceOfBasicElt^ OCMAT_SequenceOfBasicElt::Assign(OCNaroWrappers::OCMAT_SequenceOfBasicElt^ Other)
{
  MAT_SequenceOfBasicElt* tmp = new MAT_SequenceOfBasicElt();
  *tmp = ((MAT_SequenceOfBasicElt*)nativeHandle)->Assign(*((MAT_SequenceOfBasicElt*)Other->Handle));
  return gcnew OCMAT_SequenceOfBasicElt(tmp);
}

 void OCMAT_SequenceOfBasicElt::Append(OCNaroWrappers::OCMAT_BasicElt^ T)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->Append(*((Handle_MAT_BasicElt*)T->Handle));
}

 void OCMAT_SequenceOfBasicElt::Append(OCNaroWrappers::OCMAT_SequenceOfBasicElt^ S)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->Append(*((MAT_SequenceOfBasicElt*)S->Handle));
}

 void OCMAT_SequenceOfBasicElt::Prepend(OCNaroWrappers::OCMAT_BasicElt^ T)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->Prepend(*((Handle_MAT_BasicElt*)T->Handle));
}

 void OCMAT_SequenceOfBasicElt::Prepend(OCNaroWrappers::OCMAT_SequenceOfBasicElt^ S)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->Prepend(*((MAT_SequenceOfBasicElt*)S->Handle));
}

 void OCMAT_SequenceOfBasicElt::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMAT_BasicElt^ T)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->InsertBefore(Index, *((Handle_MAT_BasicElt*)T->Handle));
}

 void OCMAT_SequenceOfBasicElt::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMAT_SequenceOfBasicElt^ S)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->InsertBefore(Index, *((MAT_SequenceOfBasicElt*)S->Handle));
}

 void OCMAT_SequenceOfBasicElt::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMAT_BasicElt^ T)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->InsertAfter(Index, *((Handle_MAT_BasicElt*)T->Handle));
}

 void OCMAT_SequenceOfBasicElt::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMAT_SequenceOfBasicElt^ S)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->InsertAfter(Index, *((MAT_SequenceOfBasicElt*)S->Handle));
}

OCMAT_BasicElt^ OCMAT_SequenceOfBasicElt::First()
{
  Handle(MAT_BasicElt) tmp = ((MAT_SequenceOfBasicElt*)nativeHandle)->First();
  return gcnew OCMAT_BasicElt(&tmp);
}

OCMAT_BasicElt^ OCMAT_SequenceOfBasicElt::Last()
{
  Handle(MAT_BasicElt) tmp = ((MAT_SequenceOfBasicElt*)nativeHandle)->Last();
  return gcnew OCMAT_BasicElt(&tmp);
}

 void OCMAT_SequenceOfBasicElt::Split(Standard_Integer Index, OCNaroWrappers::OCMAT_SequenceOfBasicElt^ Sub)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->Split(Index, *((MAT_SequenceOfBasicElt*)Sub->Handle));
}

OCMAT_BasicElt^ OCMAT_SequenceOfBasicElt::Value(Standard_Integer Index)
{
  Handle(MAT_BasicElt) tmp = ((MAT_SequenceOfBasicElt*)nativeHandle)->Value(Index);
  return gcnew OCMAT_BasicElt(&tmp);
}

 void OCMAT_SequenceOfBasicElt::SetValue(Standard_Integer Index, OCNaroWrappers::OCMAT_BasicElt^ I)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->SetValue(Index, *((Handle_MAT_BasicElt*)I->Handle));
}

OCMAT_BasicElt^ OCMAT_SequenceOfBasicElt::ChangeValue(Standard_Integer Index)
{
  Handle(MAT_BasicElt) tmp = ((MAT_SequenceOfBasicElt*)nativeHandle)->ChangeValue(Index);
  return gcnew OCMAT_BasicElt(&tmp);
}

 void OCMAT_SequenceOfBasicElt::Remove(Standard_Integer Index)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->Remove(Index);
}

 void OCMAT_SequenceOfBasicElt::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((MAT_SequenceOfBasicElt*)nativeHandle)->Remove(FromIndex, ToIndex);
}


