// File generated by CPPExt (CPP file)
//

#include "MAT_Edge.h"
#include "../Converter.h"
#include "MAT_Bisector.h"


using namespace OCNaroWrappers;

OCMAT_Edge::OCMAT_Edge(Handle(MAT_Edge)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MAT_Edge(*nativeHandle);
}

OCMAT_Edge::OCMAT_Edge() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MAT_Edge(new MAT_Edge());
}

 void OCMAT_Edge::EdgeNumber(Standard_Integer anumber)
{
  (*((Handle_MAT_Edge*)nativeHandle))->EdgeNumber(anumber);
}

 void OCMAT_Edge::FirstBisector(OCNaroWrappers::OCMAT_Bisector^ abisector)
{
  (*((Handle_MAT_Edge*)nativeHandle))->FirstBisector(*((Handle_MAT_Bisector*)abisector->Handle));
}

 void OCMAT_Edge::SecondBisector(OCNaroWrappers::OCMAT_Bisector^ abisector)
{
  (*((Handle_MAT_Edge*)nativeHandle))->SecondBisector(*((Handle_MAT_Bisector*)abisector->Handle));
}

 void OCMAT_Edge::Distance(Standard_Real adistance)
{
  (*((Handle_MAT_Edge*)nativeHandle))->Distance(adistance);
}

 void OCMAT_Edge::IntersectionPoint(Standard_Integer apoint)
{
  (*((Handle_MAT_Edge*)nativeHandle))->IntersectionPoint(apoint);
}

 Standard_Integer OCMAT_Edge::EdgeNumber()
{
  return (*((Handle_MAT_Edge*)nativeHandle))->EdgeNumber();
}

OCMAT_Bisector^ OCMAT_Edge::FirstBisector()
{
  Handle(MAT_Bisector) tmp = (*((Handle_MAT_Edge*)nativeHandle))->FirstBisector();
  return gcnew OCMAT_Bisector(&tmp);
}

OCMAT_Bisector^ OCMAT_Edge::SecondBisector()
{
  Handle(MAT_Bisector) tmp = (*((Handle_MAT_Edge*)nativeHandle))->SecondBisector();
  return gcnew OCMAT_Bisector(&tmp);
}

 Standard_Real OCMAT_Edge::Distance()
{
  return (*((Handle_MAT_Edge*)nativeHandle))->Distance();
}

 Standard_Integer OCMAT_Edge::IntersectionPoint()
{
  return (*((Handle_MAT_Edge*)nativeHandle))->IntersectionPoint();
}

 void OCMAT_Edge::Dump(Standard_Integer ashift, Standard_Integer alevel)
{
  (*((Handle_MAT_Edge*)nativeHandle))->Dump(ashift, alevel);
}


