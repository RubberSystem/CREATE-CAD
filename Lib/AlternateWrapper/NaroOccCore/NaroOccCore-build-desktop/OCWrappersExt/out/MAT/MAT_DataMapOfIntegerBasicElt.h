// File generated by CPPExt (MPV)
//
#ifndef _MAT_DataMapOfIntegerBasicElt_OCWrappers_HeaderFile
#define _MAT_DataMapOfIntegerBasicElt_OCWrappers_HeaderFile

// include native header
#include <MAT_DataMapOfIntegerBasicElt.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCMAT_BasicElt;
ref class OCTColStd_MapIntegerHasher;
ref class OCMAT_DataMapNodeOfDataMapOfIntegerBasicElt;
ref class OCMAT_DataMapIteratorOfDataMapOfIntegerBasicElt;



public ref class OCMAT_DataMapOfIntegerBasicElt  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCMAT_DataMapOfIntegerBasicElt(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCMAT_DataMapOfIntegerBasicElt(MAT_DataMapOfIntegerBasicElt* nativeHandle);

// Methods PUBLIC


OCMAT_DataMapOfIntegerBasicElt(Standard_Integer NbBuckets);


 /*instead*/  OCMAT_DataMapOfIntegerBasicElt^ Assign(OCNaroWrappers::OCMAT_DataMapOfIntegerBasicElt^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(Standard_Integer K, OCNaroWrappers::OCMAT_BasicElt^ I) ;


 /*instead*/  System::Boolean IsBound(Standard_Integer K) ;


 /*instead*/  System::Boolean UnBind(Standard_Integer K) ;


 /*instead*/  OCMAT_BasicElt^ Find(Standard_Integer K) ;


 /*instead*/  OCMAT_BasicElt^ ChangeFind(Standard_Integer K) ;


 /*instead*/  Standard_Address Find1(Standard_Integer K) ;


 /*instead*/  Standard_Address ChangeFind1(Standard_Integer K) ;

~OCMAT_DataMapOfIntegerBasicElt()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
