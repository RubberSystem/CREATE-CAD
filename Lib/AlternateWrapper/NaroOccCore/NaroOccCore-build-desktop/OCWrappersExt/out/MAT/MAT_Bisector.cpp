// File generated by CPPExt (CPP file)
//

#include "MAT_Bisector.h"
#include "../Converter.h"
#include "MAT_Edge.h"
#include "MAT_ListOfBisector.h"


using namespace OCNaroWrappers;

OCMAT_Bisector::OCMAT_Bisector(Handle(MAT_Bisector)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MAT_Bisector(*nativeHandle);
}

OCMAT_Bisector::OCMAT_Bisector() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MAT_Bisector(new MAT_Bisector());
}

 void OCMAT_Bisector::AddBisector(OCNaroWrappers::OCMAT_Bisector^ abisector)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->AddBisector(*((Handle_MAT_Bisector*)abisector->Handle));
}

OCMAT_ListOfBisector^ OCMAT_Bisector::List()
{
  Handle(MAT_ListOfBisector) tmp = (*((Handle_MAT_Bisector*)nativeHandle))->List();
  return gcnew OCMAT_ListOfBisector(&tmp);
}

OCMAT_Bisector^ OCMAT_Bisector::FirstBisector()
{
  Handle(MAT_Bisector) tmp = (*((Handle_MAT_Bisector*)nativeHandle))->FirstBisector();
  return gcnew OCMAT_Bisector(&tmp);
}

OCMAT_Bisector^ OCMAT_Bisector::LastBisector()
{
  Handle(MAT_Bisector) tmp = (*((Handle_MAT_Bisector*)nativeHandle))->LastBisector();
  return gcnew OCMAT_Bisector(&tmp);
}

 void OCMAT_Bisector::BisectorNumber(Standard_Integer anumber)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->BisectorNumber(anumber);
}

 void OCMAT_Bisector::IndexNumber(Standard_Integer anumber)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->IndexNumber(anumber);
}

 void OCMAT_Bisector::FirstEdge(OCNaroWrappers::OCMAT_Edge^ anedge)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->FirstEdge(*((Handle_MAT_Edge*)anedge->Handle));
}

 void OCMAT_Bisector::SecondEdge(OCNaroWrappers::OCMAT_Edge^ anedge)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->SecondEdge(*((Handle_MAT_Edge*)anedge->Handle));
}

 void OCMAT_Bisector::IssuePoint(Standard_Integer apoint)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->IssuePoint(apoint);
}

 void OCMAT_Bisector::EndPoint(Standard_Integer apoint)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->EndPoint(apoint);
}

 void OCMAT_Bisector::DistIssuePoint(Standard_Real areal)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->DistIssuePoint(areal);
}

 void OCMAT_Bisector::FirstVector(Standard_Integer avector)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->FirstVector(avector);
}

 void OCMAT_Bisector::SecondVector(Standard_Integer avector)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->SecondVector(avector);
}

 void OCMAT_Bisector::Sense(Standard_Real asense)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->Sense(asense);
}

 void OCMAT_Bisector::FirstParameter(Standard_Real aparameter)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->FirstParameter(aparameter);
}

 void OCMAT_Bisector::SecondParameter(Standard_Real aparameter)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->SecondParameter(aparameter);
}

 Standard_Integer OCMAT_Bisector::BisectorNumber()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->BisectorNumber();
}

 Standard_Integer OCMAT_Bisector::IndexNumber()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->IndexNumber();
}

OCMAT_Edge^ OCMAT_Bisector::FirstEdge()
{
  Handle(MAT_Edge) tmp = (*((Handle_MAT_Bisector*)nativeHandle))->FirstEdge();
  return gcnew OCMAT_Edge(&tmp);
}

OCMAT_Edge^ OCMAT_Bisector::SecondEdge()
{
  Handle(MAT_Edge) tmp = (*((Handle_MAT_Bisector*)nativeHandle))->SecondEdge();
  return gcnew OCMAT_Edge(&tmp);
}

 Standard_Integer OCMAT_Bisector::IssuePoint()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->IssuePoint();
}

 Standard_Integer OCMAT_Bisector::EndPoint()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->EndPoint();
}

 Standard_Real OCMAT_Bisector::DistIssuePoint()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->DistIssuePoint();
}

 Standard_Integer OCMAT_Bisector::FirstVector()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->FirstVector();
}

 Standard_Integer OCMAT_Bisector::SecondVector()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->SecondVector();
}

 Standard_Real OCMAT_Bisector::Sense()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->Sense();
}

 Standard_Real OCMAT_Bisector::FirstParameter()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->FirstParameter();
}

 Standard_Real OCMAT_Bisector::SecondParameter()
{
  return (*((Handle_MAT_Bisector*)nativeHandle))->SecondParameter();
}

 void OCMAT_Bisector::Dump(Standard_Integer ashift, Standard_Integer alevel)
{
  (*((Handle_MAT_Bisector*)nativeHandle))->Dump(ashift, alevel);
}


