// File generated by CPPExt (CPP file)
//

#include "MAT_Graph.h"
#include "../Converter.h"
#include "MAT_ListOfBisector.h"
#include "MAT_Arc.h"
#include "MAT_BasicElt.h"
#include "MAT_Node.h"
#include "MAT_DataMapOfIntegerBasicElt.h"


using namespace OCNaroWrappers;

OCMAT_Graph::OCMAT_Graph(Handle(MAT_Graph)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MAT_Graph(*nativeHandle);
}

OCMAT_Graph::OCMAT_Graph() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MAT_Graph(new MAT_Graph());
}

 void OCMAT_Graph::Perform(System::Boolean SemiInfinite, OCNaroWrappers::OCMAT_ListOfBisector^ TheRoots, Standard_Integer NbBasicElts, Standard_Integer NbArcs)
{
  (*((Handle_MAT_Graph*)nativeHandle))->Perform(OCConverter::BooleanToStandardBoolean(SemiInfinite), *((Handle_MAT_ListOfBisector*)TheRoots->Handle), NbBasicElts, NbArcs);
}

OCMAT_Arc^ OCMAT_Graph::Arc(Standard_Integer Index)
{
  Handle(MAT_Arc) tmp = (*((Handle_MAT_Graph*)nativeHandle))->Arc(Index);
  return gcnew OCMAT_Arc(&tmp);
}

OCMAT_BasicElt^ OCMAT_Graph::BasicElt(Standard_Integer Index)
{
  Handle(MAT_BasicElt) tmp = (*((Handle_MAT_Graph*)nativeHandle))->BasicElt(Index);
  return gcnew OCMAT_BasicElt(&tmp);
}

OCMAT_Node^ OCMAT_Graph::Node(Standard_Integer Index)
{
  Handle(MAT_Node) tmp = (*((Handle_MAT_Graph*)nativeHandle))->Node(Index);
  return gcnew OCMAT_Node(&tmp);
}

 Standard_Integer OCMAT_Graph::NumberOfArcs()
{
  return (*((Handle_MAT_Graph*)nativeHandle))->NumberOfArcs();
}

 Standard_Integer OCMAT_Graph::NumberOfNodes()
{
  return (*((Handle_MAT_Graph*)nativeHandle))->NumberOfNodes();
}

 Standard_Integer OCMAT_Graph::NumberOfBasicElts()
{
  return (*((Handle_MAT_Graph*)nativeHandle))->NumberOfBasicElts();
}

 Standard_Integer OCMAT_Graph::NumberOfInfiniteNodes()
{
  return (*((Handle_MAT_Graph*)nativeHandle))->NumberOfInfiniteNodes();
}

 void OCMAT_Graph::FusionOfBasicElts(Standard_Integer IndexElt1, Standard_Integer IndexElt2, System::Boolean& MergeArc1, Standard_Integer& GeomIndexArc1, Standard_Integer& GeomIndexArc2, System::Boolean& MergeArc2, Standard_Integer& GeomIndexArc3, Standard_Integer& GeomIndexArc4)
{
  (*((Handle_MAT_Graph*)nativeHandle))->FusionOfBasicElts(IndexElt1, IndexElt2, (Standard_Boolean&)(MergeArc1), GeomIndexArc1, GeomIndexArc2, (Standard_Boolean&)(MergeArc2), GeomIndexArc3, GeomIndexArc4);
}

 void OCMAT_Graph::CompactArcs()
{
  (*((Handle_MAT_Graph*)nativeHandle))->CompactArcs();
}

 void OCMAT_Graph::CompactNodes()
{
  (*((Handle_MAT_Graph*)nativeHandle))->CompactNodes();
}

 void OCMAT_Graph::ChangeBasicElts(OCNaroWrappers::OCMAT_DataMapOfIntegerBasicElt^ NewMap)
{
  (*((Handle_MAT_Graph*)nativeHandle))->ChangeBasicElts(*((MAT_DataMapOfIntegerBasicElt*)NewMap->Handle));
}

OCMAT_BasicElt^ OCMAT_Graph::ChangeBasicElt(Standard_Integer Index)
{
  Handle(MAT_BasicElt) tmp = (*((Handle_MAT_Graph*)nativeHandle))->ChangeBasicElt(Index);
  return gcnew OCMAT_BasicElt(&tmp);
}


