// File generated by CPPExt (CPP file)
//

#include "MAT_Arc.h"
#include "../Converter.h"
#include "MAT_BasicElt.h"
#include "MAT_Node.h"


using namespace OCNaroWrappers;

OCMAT_Arc::OCMAT_Arc(Handle(MAT_Arc)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MAT_Arc(*nativeHandle);
}

OCMAT_Arc::OCMAT_Arc(Standard_Integer ArcIndex, Standard_Integer GeomIndex, OCNaroWrappers::OCMAT_BasicElt^ FirstElement, OCNaroWrappers::OCMAT_BasicElt^ SecondElement) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MAT_Arc(new MAT_Arc(ArcIndex, GeomIndex, *((Handle_MAT_BasicElt*)FirstElement->Handle), *((Handle_MAT_BasicElt*)SecondElement->Handle)));
}

 Standard_Integer OCMAT_Arc::Index()
{
  return (*((Handle_MAT_Arc*)nativeHandle))->Index();
}

 Standard_Integer OCMAT_Arc::GeomIndex()
{
  return (*((Handle_MAT_Arc*)nativeHandle))->GeomIndex();
}

OCMAT_BasicElt^ OCMAT_Arc::FirstElement()
{
  Handle(MAT_BasicElt) tmp = (*((Handle_MAT_Arc*)nativeHandle))->FirstElement();
  return gcnew OCMAT_BasicElt(&tmp);
}

OCMAT_BasicElt^ OCMAT_Arc::SecondElement()
{
  Handle(MAT_BasicElt) tmp = (*((Handle_MAT_Arc*)nativeHandle))->SecondElement();
  return gcnew OCMAT_BasicElt(&tmp);
}

OCMAT_Node^ OCMAT_Arc::FirstNode()
{
  Handle(MAT_Node) tmp = (*((Handle_MAT_Arc*)nativeHandle))->FirstNode();
  return gcnew OCMAT_Node(&tmp);
}

OCMAT_Node^ OCMAT_Arc::SecondNode()
{
  Handle(MAT_Node) tmp = (*((Handle_MAT_Arc*)nativeHandle))->SecondNode();
  return gcnew OCMAT_Node(&tmp);
}

OCMAT_Node^ OCMAT_Arc::TheOtherNode(OCNaroWrappers::OCMAT_Node^ aNode)
{
  Handle(MAT_Node) tmp = (*((Handle_MAT_Arc*)nativeHandle))->TheOtherNode(*((Handle_MAT_Node*)aNode->Handle));
  return gcnew OCMAT_Node(&tmp);
}

 System::Boolean OCMAT_Arc::HasNeighbour(OCNaroWrappers::OCMAT_Node^ aNode, OCMAT_Side aSide)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MAT_Arc*)nativeHandle))->HasNeighbour(*((Handle_MAT_Node*)aNode->Handle), (MAT_Side)aSide));
}

OCMAT_Arc^ OCMAT_Arc::Neighbour(OCNaroWrappers::OCMAT_Node^ aNode, OCMAT_Side aSide)
{
  Handle(MAT_Arc) tmp = (*((Handle_MAT_Arc*)nativeHandle))->Neighbour(*((Handle_MAT_Node*)aNode->Handle), (MAT_Side)aSide);
  return gcnew OCMAT_Arc(&tmp);
}

 void OCMAT_Arc::SetIndex(Standard_Integer anInteger)
{
  (*((Handle_MAT_Arc*)nativeHandle))->SetIndex(anInteger);
}

 void OCMAT_Arc::SetGeomIndex(Standard_Integer anInteger)
{
  (*((Handle_MAT_Arc*)nativeHandle))->SetGeomIndex(anInteger);
}

 void OCMAT_Arc::SetFirstElement(OCNaroWrappers::OCMAT_BasicElt^ aBasicElt)
{
  (*((Handle_MAT_Arc*)nativeHandle))->SetFirstElement(*((Handle_MAT_BasicElt*)aBasicElt->Handle));
}

 void OCMAT_Arc::SetSecondElement(OCNaroWrappers::OCMAT_BasicElt^ aBasicElt)
{
  (*((Handle_MAT_Arc*)nativeHandle))->SetSecondElement(*((Handle_MAT_BasicElt*)aBasicElt->Handle));
}

 void OCMAT_Arc::SetFirstNode(OCNaroWrappers::OCMAT_Node^ aNode)
{
  (*((Handle_MAT_Arc*)nativeHandle))->SetFirstNode(*((Handle_MAT_Node*)aNode->Handle));
}

 void OCMAT_Arc::SetSecondNode(OCNaroWrappers::OCMAT_Node^ aNode)
{
  (*((Handle_MAT_Arc*)nativeHandle))->SetSecondNode(*((Handle_MAT_Node*)aNode->Handle));
}

 void OCMAT_Arc::SetFirstArc(OCMAT_Side aSide, OCNaroWrappers::OCMAT_Arc^ anArc)
{
  (*((Handle_MAT_Arc*)nativeHandle))->SetFirstArc((MAT_Side)aSide, *((Handle_MAT_Arc*)anArc->Handle));
}

 void OCMAT_Arc::SetSecondArc(OCMAT_Side aSide, OCNaroWrappers::OCMAT_Arc^ anArc)
{
  (*((Handle_MAT_Arc*)nativeHandle))->SetSecondArc((MAT_Side)aSide, *((Handle_MAT_Arc*)anArc->Handle));
}

 void OCMAT_Arc::SetNeighbour(OCMAT_Side aSide, OCNaroWrappers::OCMAT_Node^ aNode, OCNaroWrappers::OCMAT_Arc^ anArc)
{
  (*((Handle_MAT_Arc*)nativeHandle))->SetNeighbour((MAT_Side)aSide, *((Handle_MAT_Node*)aNode->Handle), *((Handle_MAT_Arc*)anArc->Handle));
}


