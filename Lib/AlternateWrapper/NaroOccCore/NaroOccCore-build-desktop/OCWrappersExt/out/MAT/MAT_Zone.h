// File generated by CPPExt (Transient)
//
#ifndef _MAT_Zone_OCWrappers_HeaderFile
#define _MAT_Zone_OCWrappers_HeaderFile

// include the wrapped class
#include <MAT_Zone.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "MAT_SequenceOfArc.h"
#include "MAT_Side.h"


namespace OCNaroWrappers
{

ref class OCMAT_BasicElt;
ref class OCMAT_Arc;
ref class OCMAT_Node;



//!          Definition of Zone of Proximity of a BasicElt : <br>
//!          ---------------------------------------------- <br>
//!          A Zone of proximity is the set of the points which are <br>
//!          more near from the BasicElt than any other. <br>
//! <br>
public ref class OCMAT_Zone : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCMAT_Zone(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCMAT_Zone(Handle(MAT_Zone)* nativeHandle);

// Methods PUBLIC


OCMAT_Zone();

//! Compute the frontier of the Zone of proximity. <br>
OCMAT_Zone(OCNaroWrappers::OCMAT_BasicElt^ aBasicElt);

//! Compute the frontier of the Zone of proximity. <br>
 /*instead*/  void Perform(OCNaroWrappers::OCMAT_BasicElt^ aBasicElt) ;

//! Return the number Of Arcs On the frontier of <me>. <br>
 /*instead*/  Standard_Integer NumberOfArcs() ;

//! Return the  Arc number <Index>  on the frontier. <br>
//!  of  <me>. <br>
 /*instead*/  OCMAT_Arc^ ArcOnFrontier(Standard_Integer Index) ;

//! Return TRUE if <me> is not empty . <br>
 /*instead*/  System::Boolean NoEmptyZone() ;

//! Return TRUE if <me> is Limited. <br>
 /*instead*/  System::Boolean Limited() ;

~OCMAT_Zone()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
