// File generated by CPPExt (CPP file)
//

#include "MAT_Zone.h"
#include "../Converter.h"
#include "MAT_BasicElt.h"
#include "MAT_Arc.h"
#include "MAT_Node.h"


using namespace OCNaroWrappers;

OCMAT_Zone::OCMAT_Zone(Handle(MAT_Zone)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MAT_Zone(*nativeHandle);
}

OCMAT_Zone::OCMAT_Zone() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MAT_Zone(new MAT_Zone());
}

OCMAT_Zone::OCMAT_Zone(OCNaroWrappers::OCMAT_BasicElt^ aBasicElt) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MAT_Zone(new MAT_Zone(*((Handle_MAT_BasicElt*)aBasicElt->Handle)));
}

 void OCMAT_Zone::Perform(OCNaroWrappers::OCMAT_BasicElt^ aBasicElt)
{
  (*((Handle_MAT_Zone*)nativeHandle))->Perform(*((Handle_MAT_BasicElt*)aBasicElt->Handle));
}

 Standard_Integer OCMAT_Zone::NumberOfArcs()
{
  return (*((Handle_MAT_Zone*)nativeHandle))->NumberOfArcs();
}

OCMAT_Arc^ OCMAT_Zone::ArcOnFrontier(Standard_Integer Index)
{
  Handle(MAT_Arc) tmp = (*((Handle_MAT_Zone*)nativeHandle))->ArcOnFrontier(Index);
  return gcnew OCMAT_Arc(&tmp);
}

 System::Boolean OCMAT_Zone::NoEmptyZone()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MAT_Zone*)nativeHandle))->NoEmptyZone());
}

 System::Boolean OCMAT_Zone::Limited()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MAT_Zone*)nativeHandle))->Limited());
}


