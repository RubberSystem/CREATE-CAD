// File generated by CPPExt (Transient)
//
#ifndef _Storage_HArrayOfCallBack_OCWrappers_HeaderFile
#define _Storage_HArrayOfCallBack_OCWrappers_HeaderFile

// include the wrapped class
#include <Storage_HArrayOfCallBack.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Storage_ArrayOfCallBack.h"


namespace OCNaroWrappers
{

ref class OCStorage_CallBack;
ref class OCStorage_ArrayOfCallBack;



public ref class OCStorage_HArrayOfCallBack : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCStorage_HArrayOfCallBack(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCStorage_HArrayOfCallBack(Handle(Storage_HArrayOfCallBack)* nativeHandle);

// Methods PUBLIC


OCStorage_HArrayOfCallBack(Standard_Integer Low, Standard_Integer Up);


OCStorage_HArrayOfCallBack(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCStorage_CallBack^ V);


 /*instead*/  void Init(OCNaroWrappers::OCStorage_CallBack^ V) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCStorage_CallBack^ Value) ;


 /*instead*/  OCStorage_CallBack^ Value(Standard_Integer Index) ;


 /*instead*/  OCStorage_CallBack^ ChangeValue(Standard_Integer Index) ;


 /*instead*/  OCStorage_ArrayOfCallBack^ Array1() ;


 /*instead*/  OCStorage_ArrayOfCallBack^ ChangeArray1() ;

~OCStorage_HArrayOfCallBack()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
