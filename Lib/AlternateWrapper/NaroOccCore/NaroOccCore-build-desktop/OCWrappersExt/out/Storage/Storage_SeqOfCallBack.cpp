// File generated by CPPExt (CPP file)
//

#include "Storage_SeqOfCallBack.h"
#include "../Converter.h"
#include "Storage_CallBack.h"
#include "Storage_SequenceNodeOfSeqOfCallBack.h"


using namespace OCNaroWrappers;

OCStorage_SeqOfCallBack::OCStorage_SeqOfCallBack(Storage_SeqOfCallBack* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCStorage_SeqOfCallBack::OCStorage_SeqOfCallBack() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Storage_SeqOfCallBack();
}

OCStorage_SeqOfCallBack^ OCStorage_SeqOfCallBack::Assign(OCNaroWrappers::OCStorage_SeqOfCallBack^ Other)
{
  Storage_SeqOfCallBack* tmp = new Storage_SeqOfCallBack();
  *tmp = ((Storage_SeqOfCallBack*)nativeHandle)->Assign(*((Storage_SeqOfCallBack*)Other->Handle));
  return gcnew OCStorage_SeqOfCallBack(tmp);
}

 void OCStorage_SeqOfCallBack::Append(OCNaroWrappers::OCStorage_CallBack^ T)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->Append(*((Handle_Storage_CallBack*)T->Handle));
}

 void OCStorage_SeqOfCallBack::Append(OCNaroWrappers::OCStorage_SeqOfCallBack^ S)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->Append(*((Storage_SeqOfCallBack*)S->Handle));
}

 void OCStorage_SeqOfCallBack::Prepend(OCNaroWrappers::OCStorage_CallBack^ T)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->Prepend(*((Handle_Storage_CallBack*)T->Handle));
}

 void OCStorage_SeqOfCallBack::Prepend(OCNaroWrappers::OCStorage_SeqOfCallBack^ S)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->Prepend(*((Storage_SeqOfCallBack*)S->Handle));
}

 void OCStorage_SeqOfCallBack::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCStorage_CallBack^ T)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->InsertBefore(Index, *((Handle_Storage_CallBack*)T->Handle));
}

 void OCStorage_SeqOfCallBack::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCStorage_SeqOfCallBack^ S)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->InsertBefore(Index, *((Storage_SeqOfCallBack*)S->Handle));
}

 void OCStorage_SeqOfCallBack::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCStorage_CallBack^ T)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->InsertAfter(Index, *((Handle_Storage_CallBack*)T->Handle));
}

 void OCStorage_SeqOfCallBack::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCStorage_SeqOfCallBack^ S)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->InsertAfter(Index, *((Storage_SeqOfCallBack*)S->Handle));
}

OCStorage_CallBack^ OCStorage_SeqOfCallBack::First()
{
  Handle(Storage_CallBack) tmp = ((Storage_SeqOfCallBack*)nativeHandle)->First();
  return gcnew OCStorage_CallBack(&tmp);
}

OCStorage_CallBack^ OCStorage_SeqOfCallBack::Last()
{
  Handle(Storage_CallBack) tmp = ((Storage_SeqOfCallBack*)nativeHandle)->Last();
  return gcnew OCStorage_CallBack(&tmp);
}

 void OCStorage_SeqOfCallBack::Split(Standard_Integer Index, OCNaroWrappers::OCStorage_SeqOfCallBack^ Sub)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->Split(Index, *((Storage_SeqOfCallBack*)Sub->Handle));
}

OCStorage_CallBack^ OCStorage_SeqOfCallBack::Value(Standard_Integer Index)
{
  Handle(Storage_CallBack) tmp = ((Storage_SeqOfCallBack*)nativeHandle)->Value(Index);
  return gcnew OCStorage_CallBack(&tmp);
}

 void OCStorage_SeqOfCallBack::SetValue(Standard_Integer Index, OCNaroWrappers::OCStorage_CallBack^ I)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->SetValue(Index, *((Handle_Storage_CallBack*)I->Handle));
}

OCStorage_CallBack^ OCStorage_SeqOfCallBack::ChangeValue(Standard_Integer Index)
{
  Handle(Storage_CallBack) tmp = ((Storage_SeqOfCallBack*)nativeHandle)->ChangeValue(Index);
  return gcnew OCStorage_CallBack(&tmp);
}

 void OCStorage_SeqOfCallBack::Remove(Standard_Integer Index)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->Remove(Index);
}

 void OCStorage_SeqOfCallBack::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Storage_SeqOfCallBack*)nativeHandle)->Remove(FromIndex, ToIndex);
}


