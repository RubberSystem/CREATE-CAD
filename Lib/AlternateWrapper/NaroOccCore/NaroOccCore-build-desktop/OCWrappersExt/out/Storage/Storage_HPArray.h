// File generated by CPPExt (Transient)
//
#ifndef _Storage_HPArray_OCWrappers_HeaderFile
#define _Storage_HPArray_OCWrappers_HeaderFile

// include the wrapped class
#include <Storage_HPArray.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Storage_PArray.h"


namespace OCNaroWrappers
{

ref class OCStandard_Persistent;
ref class OCStorage_PArray;



public ref class OCStorage_HPArray : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCStorage_HPArray(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCStorage_HPArray(Handle(Storage_HPArray)* nativeHandle);

// Methods PUBLIC


OCStorage_HPArray(Standard_Integer Low, Standard_Integer Up);


OCStorage_HPArray(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCStandard_Persistent^ V);


 /*instead*/  void Init(OCNaroWrappers::OCStandard_Persistent^ V) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCStandard_Persistent^ Value) ;


 /*instead*/  OCStandard_Persistent^ Value(Standard_Integer Index) ;


 /*instead*/  OCStandard_Persistent^ ChangeValue(Standard_Integer Index) ;


 /*instead*/  OCStorage_PArray^ Array1() ;


 /*instead*/  OCStorage_PArray^ ChangeArray1() ;

~OCStorage_HPArray()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
