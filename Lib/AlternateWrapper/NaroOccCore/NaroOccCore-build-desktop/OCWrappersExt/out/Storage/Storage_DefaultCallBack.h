// File generated by CPPExt (Transient)
//
#ifndef _Storage_DefaultCallBack_OCWrappers_HeaderFile
#define _Storage_DefaultCallBack_OCWrappers_HeaderFile

// include the wrapped class
#include <Storage_DefaultCallBack.hxx>
#include "../Converter.h"

#include "Storage_CallBack.h"



namespace OCNaroWrappers
{

ref class OCStandard_Persistent;
ref class OCStorage_Schema;
ref class OCStorage_BaseDriver;



public ref class OCStorage_DefaultCallBack : OCStorage_CallBack {

protected:
  // dummy constructor;
  OCStorage_DefaultCallBack(OCDummy^) : OCStorage_CallBack((OCDummy^)nullptr) {};

public:

// constructor from native
OCStorage_DefaultCallBack(Handle(Storage_DefaultCallBack)* nativeHandle);

// Methods PUBLIC


OCStorage_DefaultCallBack();


 /*instead*/  OCStandard_Persistent^ New() ;


 /*instead*/  void Add(OCNaroWrappers::OCStandard_Persistent^ aPers, OCNaroWrappers::OCStorage_Schema^ aSchema) ;


 /*instead*/  void Write(OCNaroWrappers::OCStandard_Persistent^ aPers, OCNaroWrappers::OCStorage_BaseDriver^ aDriver, OCNaroWrappers::OCStorage_Schema^ aSchema) ;


 /*instead*/  void Read(OCNaroWrappers::OCStandard_Persistent^ aPers, OCNaroWrappers::OCStorage_BaseDriver^ aDriver, OCNaroWrappers::OCStorage_Schema^ aSchema) ;

~OCStorage_DefaultCallBack()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
