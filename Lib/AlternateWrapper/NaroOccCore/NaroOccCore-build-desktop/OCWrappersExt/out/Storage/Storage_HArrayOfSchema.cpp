// File generated by CPPExt (CPP file)
//

#include "Storage_HArrayOfSchema.h"
#include "../Converter.h"
#include "Storage_Schema.h"
#include "Storage_ArrayOfSchema.h"


using namespace OCNaroWrappers;

OCStorage_HArrayOfSchema::OCStorage_HArrayOfSchema(Handle(Storage_HArrayOfSchema)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Storage_HArrayOfSchema(*nativeHandle);
}

OCStorage_HArrayOfSchema::OCStorage_HArrayOfSchema(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Storage_HArrayOfSchema(new Storage_HArrayOfSchema(Low, Up));
}

OCStorage_HArrayOfSchema::OCStorage_HArrayOfSchema(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCStorage_Schema^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Storage_HArrayOfSchema(new Storage_HArrayOfSchema(Low, Up, *((Handle_Storage_Schema*)V->Handle)));
}

 void OCStorage_HArrayOfSchema::Init(OCNaroWrappers::OCStorage_Schema^ V)
{
  (*((Handle_Storage_HArrayOfSchema*)nativeHandle))->Init(*((Handle_Storage_Schema*)V->Handle));
}

 Standard_Integer OCStorage_HArrayOfSchema::Length()
{
  return (*((Handle_Storage_HArrayOfSchema*)nativeHandle))->Length();
}

 Standard_Integer OCStorage_HArrayOfSchema::Lower()
{
  return (*((Handle_Storage_HArrayOfSchema*)nativeHandle))->Lower();
}

 Standard_Integer OCStorage_HArrayOfSchema::Upper()
{
  return (*((Handle_Storage_HArrayOfSchema*)nativeHandle))->Upper();
}

 void OCStorage_HArrayOfSchema::SetValue(Standard_Integer Index, OCNaroWrappers::OCStorage_Schema^ Value)
{
  (*((Handle_Storage_HArrayOfSchema*)nativeHandle))->SetValue(Index, *((Handle_Storage_Schema*)Value->Handle));
}

OCStorage_Schema^ OCStorage_HArrayOfSchema::Value(Standard_Integer Index)
{
  Handle(Storage_Schema) tmp = (*((Handle_Storage_HArrayOfSchema*)nativeHandle))->Value(Index);
  return gcnew OCStorage_Schema(&tmp);
}

OCStorage_Schema^ OCStorage_HArrayOfSchema::ChangeValue(Standard_Integer Index)
{
  Handle(Storage_Schema) tmp = (*((Handle_Storage_HArrayOfSchema*)nativeHandle))->ChangeValue(Index);
  return gcnew OCStorage_Schema(&tmp);
}

OCStorage_ArrayOfSchema^ OCStorage_HArrayOfSchema::Array1()
{
  Storage_ArrayOfSchema* tmp = new Storage_ArrayOfSchema(0, 0);
  *tmp = (*((Handle_Storage_HArrayOfSchema*)nativeHandle))->Array1();
  return gcnew OCStorage_ArrayOfSchema(tmp);
}

OCStorage_ArrayOfSchema^ OCStorage_HArrayOfSchema::ChangeArray1()
{
  Storage_ArrayOfSchema* tmp = new Storage_ArrayOfSchema(0, 0);
  *tmp = (*((Handle_Storage_HArrayOfSchema*)nativeHandle))->ChangeArray1();
  return gcnew OCStorage_ArrayOfSchema(tmp);
}


