// File generated by CPPExt (Transient)
//
#ifndef _Storage_RootData_OCWrappers_HeaderFile
#define _Storage_RootData_OCWrappers_HeaderFile

// include the wrapped class
#include <Storage_RootData.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Storage_MapOfPers.h"
#include "Storage_Error.h"
#include "../TCollection/TCollection_AsciiString.h"


namespace OCNaroWrappers
{

ref class OCStorage_Schema;
ref class OCStorage_Root;
ref class OCStorage_HSeqOfRoot;
ref class OCTCollection_AsciiString;
ref class OCStandard_Persistent;



public ref class OCStorage_RootData : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCStorage_RootData(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCStorage_RootData(Handle(Storage_RootData)* nativeHandle);

// Methods PUBLIC


OCStorage_RootData();

//! returns the number of roots. <br>
 /*instead*/  Standard_Integer NumberOfRoots() ;

//! add a root to <me>. If a root with same name is present, it <br>
//!          will be replaced by <aRoot>. <br>
 /*instead*/  void AddRoot(OCNaroWrappers::OCStorage_Root^ aRoot) ;


 /*instead*/  OCStorage_HSeqOfRoot^ Roots() ;

//! find a root with name <aName>. <br>
 /*instead*/  OCStorage_Root^ Find(OCNaroWrappers::OCTCollection_AsciiString^ aName) ;

//! returns Standard_True if <me> contains a root named <aName> <br>
 /*instead*/  System::Boolean IsRoot(OCNaroWrappers::OCTCollection_AsciiString^ aName) ;

//! remove the root named <aName>. <br>
 /*instead*/  void RemoveRoot(OCNaroWrappers::OCTCollection_AsciiString^ aName) ;


 /*instead*/  OCStorage_Error ErrorStatus() ;


 /*instead*/  OCTCollection_AsciiString^ ErrorStatusExtension() ;


 /*instead*/  void ClearErrorStatus() ;

~OCStorage_RootData()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
