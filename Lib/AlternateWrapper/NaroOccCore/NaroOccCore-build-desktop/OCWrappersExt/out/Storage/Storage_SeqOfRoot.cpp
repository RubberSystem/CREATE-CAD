// File generated by CPPExt (CPP file)
//

#include "Storage_SeqOfRoot.h"
#include "../Converter.h"
#include "Storage_Root.h"
#include "Storage_SequenceNodeOfSeqOfRoot.h"


using namespace OCNaroWrappers;

OCStorage_SeqOfRoot::OCStorage_SeqOfRoot(Storage_SeqOfRoot* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCStorage_SeqOfRoot::OCStorage_SeqOfRoot() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Storage_SeqOfRoot();
}

OCStorage_SeqOfRoot^ OCStorage_SeqOfRoot::Assign(OCNaroWrappers::OCStorage_SeqOfRoot^ Other)
{
  Storage_SeqOfRoot* tmp = new Storage_SeqOfRoot();
  *tmp = ((Storage_SeqOfRoot*)nativeHandle)->Assign(*((Storage_SeqOfRoot*)Other->Handle));
  return gcnew OCStorage_SeqOfRoot(tmp);
}

 void OCStorage_SeqOfRoot::Append(OCNaroWrappers::OCStorage_Root^ T)
{
  ((Storage_SeqOfRoot*)nativeHandle)->Append(*((Handle_Storage_Root*)T->Handle));
}

 void OCStorage_SeqOfRoot::Append(OCNaroWrappers::OCStorage_SeqOfRoot^ S)
{
  ((Storage_SeqOfRoot*)nativeHandle)->Append(*((Storage_SeqOfRoot*)S->Handle));
}

 void OCStorage_SeqOfRoot::Prepend(OCNaroWrappers::OCStorage_Root^ T)
{
  ((Storage_SeqOfRoot*)nativeHandle)->Prepend(*((Handle_Storage_Root*)T->Handle));
}

 void OCStorage_SeqOfRoot::Prepend(OCNaroWrappers::OCStorage_SeqOfRoot^ S)
{
  ((Storage_SeqOfRoot*)nativeHandle)->Prepend(*((Storage_SeqOfRoot*)S->Handle));
}

 void OCStorage_SeqOfRoot::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCStorage_Root^ T)
{
  ((Storage_SeqOfRoot*)nativeHandle)->InsertBefore(Index, *((Handle_Storage_Root*)T->Handle));
}

 void OCStorage_SeqOfRoot::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCStorage_SeqOfRoot^ S)
{
  ((Storage_SeqOfRoot*)nativeHandle)->InsertBefore(Index, *((Storage_SeqOfRoot*)S->Handle));
}

 void OCStorage_SeqOfRoot::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCStorage_Root^ T)
{
  ((Storage_SeqOfRoot*)nativeHandle)->InsertAfter(Index, *((Handle_Storage_Root*)T->Handle));
}

 void OCStorage_SeqOfRoot::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCStorage_SeqOfRoot^ S)
{
  ((Storage_SeqOfRoot*)nativeHandle)->InsertAfter(Index, *((Storage_SeqOfRoot*)S->Handle));
}

OCStorage_Root^ OCStorage_SeqOfRoot::First()
{
  Handle(Storage_Root) tmp = ((Storage_SeqOfRoot*)nativeHandle)->First();
  return gcnew OCStorage_Root(&tmp);
}

OCStorage_Root^ OCStorage_SeqOfRoot::Last()
{
  Handle(Storage_Root) tmp = ((Storage_SeqOfRoot*)nativeHandle)->Last();
  return gcnew OCStorage_Root(&tmp);
}

 void OCStorage_SeqOfRoot::Split(Standard_Integer Index, OCNaroWrappers::OCStorage_SeqOfRoot^ Sub)
{
  ((Storage_SeqOfRoot*)nativeHandle)->Split(Index, *((Storage_SeqOfRoot*)Sub->Handle));
}

OCStorage_Root^ OCStorage_SeqOfRoot::Value(Standard_Integer Index)
{
  Handle(Storage_Root) tmp = ((Storage_SeqOfRoot*)nativeHandle)->Value(Index);
  return gcnew OCStorage_Root(&tmp);
}

 void OCStorage_SeqOfRoot::SetValue(Standard_Integer Index, OCNaroWrappers::OCStorage_Root^ I)
{
  ((Storage_SeqOfRoot*)nativeHandle)->SetValue(Index, *((Handle_Storage_Root*)I->Handle));
}

OCStorage_Root^ OCStorage_SeqOfRoot::ChangeValue(Standard_Integer Index)
{
  Handle(Storage_Root) tmp = ((Storage_SeqOfRoot*)nativeHandle)->ChangeValue(Index);
  return gcnew OCStorage_Root(&tmp);
}

 void OCStorage_SeqOfRoot::Remove(Standard_Integer Index)
{
  ((Storage_SeqOfRoot*)nativeHandle)->Remove(Index);
}

 void OCStorage_SeqOfRoot::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Storage_SeqOfRoot*)nativeHandle)->Remove(FromIndex, ToIndex);
}


