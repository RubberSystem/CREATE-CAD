// File generated by CPPExt (CPP file)
//

#include "Storage_TypeData.h"
#include "../Converter.h"
#include "Storage_Schema.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../TColStd/TColStd_HSequenceOfAsciiString.h"


using namespace OCNaroWrappers;

OCStorage_TypeData::OCStorage_TypeData(Handle(Storage_TypeData)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Storage_TypeData(*nativeHandle);
}

OCStorage_TypeData::OCStorage_TypeData() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Storage_TypeData(new Storage_TypeData());
}

 Standard_Integer OCStorage_TypeData::NumberOfTypes()
{
  return (*((Handle_Storage_TypeData*)nativeHandle))->NumberOfTypes();
}

 System::Boolean OCStorage_TypeData::IsType(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Storage_TypeData*)nativeHandle))->IsType(*((TCollection_AsciiString*)aName->Handle)));
}

OCTColStd_HSequenceOfAsciiString^ OCStorage_TypeData::Types()
{
  Handle(TColStd_HSequenceOfAsciiString) tmp = (*((Handle_Storage_TypeData*)nativeHandle))->Types();
  return gcnew OCTColStd_HSequenceOfAsciiString(&tmp);
}

 OCStorage_Error OCStorage_TypeData::ErrorStatus()
{
  return (OCStorage_Error)((*((Handle_Storage_TypeData*)nativeHandle))->ErrorStatus());
}

OCTCollection_AsciiString^ OCStorage_TypeData::ErrorStatusExtension()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_Storage_TypeData*)nativeHandle))->ErrorStatusExtension();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCStorage_TypeData::ClearErrorStatus()
{
  (*((Handle_Storage_TypeData*)nativeHandle))->ClearErrorStatus();
}

 void OCStorage_TypeData::Clear()
{
  (*((Handle_Storage_TypeData*)nativeHandle))->Clear();
}


