// File generated by CPPExt (MPV)
//
#ifndef _Storage_ArrayOfCallBack_OCWrappers_HeaderFile
#define _Storage_ArrayOfCallBack_OCWrappers_HeaderFile

// include native header
#include <Storage_ArrayOfCallBack.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCStorage_CallBack;



public ref class OCStorage_ArrayOfCallBack  {

protected:
  Storage_ArrayOfCallBack* nativeHandle;
  OCStorage_ArrayOfCallBack(OCDummy^) {};

public:
  property Storage_ArrayOfCallBack* Handle
  {
    Storage_ArrayOfCallBack* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCStorage_ArrayOfCallBack(Storage_ArrayOfCallBack* nativeHandle);

// Methods PUBLIC


OCStorage_ArrayOfCallBack(Standard_Integer Low, Standard_Integer Up);


OCStorage_ArrayOfCallBack(OCNaroWrappers::OCStorage_CallBack^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCStorage_CallBack^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCStorage_ArrayOfCallBack^ Assign(OCNaroWrappers::OCStorage_ArrayOfCallBack^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCStorage_CallBack^ Value) ;


 /*instead*/  OCStorage_CallBack^ Value(Standard_Integer Index) ;


 /*instead*/  OCStorage_CallBack^ ChangeValue(Standard_Integer Index) ;

~OCStorage_ArrayOfCallBack()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
