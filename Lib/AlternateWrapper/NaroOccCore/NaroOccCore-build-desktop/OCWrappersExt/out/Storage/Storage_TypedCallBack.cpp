// File generated by CPPExt (CPP file)
//

#include "Storage_TypedCallBack.h"
#include "../Converter.h"
#include "Storage_CallBack.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCStorage_TypedCallBack::OCStorage_TypedCallBack(Handle(Storage_TypedCallBack)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Storage_TypedCallBack(*nativeHandle);
}

OCStorage_TypedCallBack::OCStorage_TypedCallBack() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Storage_TypedCallBack(new Storage_TypedCallBack());
}

OCStorage_TypedCallBack::OCStorage_TypedCallBack(OCNaroWrappers::OCTCollection_AsciiString^ aTypeName, OCNaroWrappers::OCStorage_CallBack^ aCallBack) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Storage_TypedCallBack(new Storage_TypedCallBack(*((TCollection_AsciiString*)aTypeName->Handle), *((Handle_Storage_CallBack*)aCallBack->Handle)));
}

 void OCStorage_TypedCallBack::SetType(OCNaroWrappers::OCTCollection_AsciiString^ aType)
{
  (*((Handle_Storage_TypedCallBack*)nativeHandle))->SetType(*((TCollection_AsciiString*)aType->Handle));
}

OCTCollection_AsciiString^ OCStorage_TypedCallBack::Type()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_Storage_TypedCallBack*)nativeHandle))->Type();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCStorage_TypedCallBack::SetCallBack(OCNaroWrappers::OCStorage_CallBack^ aCallBack)
{
  (*((Handle_Storage_TypedCallBack*)nativeHandle))->SetCallBack(*((Handle_Storage_CallBack*)aCallBack->Handle));
}

OCStorage_CallBack^ OCStorage_TypedCallBack::CallBack()
{
  Handle(Storage_CallBack) tmp = (*((Handle_Storage_TypedCallBack*)nativeHandle))->CallBack();
  return gcnew OCStorage_CallBack(&tmp);
}

 void OCStorage_TypedCallBack::SetIndex(Standard_Integer anIndex)
{
  (*((Handle_Storage_TypedCallBack*)nativeHandle))->SetIndex(anIndex);
}

 Standard_Integer OCStorage_TypedCallBack::Index()
{
  return (*((Handle_Storage_TypedCallBack*)nativeHandle))->Index();
}


