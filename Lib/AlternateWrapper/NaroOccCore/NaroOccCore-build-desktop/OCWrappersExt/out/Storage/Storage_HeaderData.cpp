// File generated by CPPExt (CPP file)
//

#include "Storage_HeaderData.h"
#include "../Converter.h"
#include "Storage_Schema.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "../TColStd/TColStd_SequenceOfAsciiString.h"
#include "../TColStd/TColStd_SequenceOfExtendedString.h"


using namespace OCNaroWrappers;

OCStorage_HeaderData::OCStorage_HeaderData(Handle(Storage_HeaderData)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Storage_HeaderData(*nativeHandle);
}

OCStorage_HeaderData::OCStorage_HeaderData() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Storage_HeaderData(new Storage_HeaderData());
}

OCTCollection_AsciiString^ OCStorage_HeaderData::CreationDate()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->CreationDate();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCStorage_HeaderData::StorageVersion()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->StorageVersion();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCStorage_HeaderData::SchemaVersion()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->SchemaVersion();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCStorage_HeaderData::SchemaName()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->SchemaName();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCStorage_HeaderData::SetApplicationVersion(OCNaroWrappers::OCTCollection_AsciiString^ aVersion)
{
  (*((Handle_Storage_HeaderData*)nativeHandle))->SetApplicationVersion(*((TCollection_AsciiString*)aVersion->Handle));
}

OCTCollection_AsciiString^ OCStorage_HeaderData::ApplicationVersion()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->ApplicationVersion();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCStorage_HeaderData::SetApplicationName(OCNaroWrappers::OCTCollection_ExtendedString^ aName)
{
  (*((Handle_Storage_HeaderData*)nativeHandle))->SetApplicationName(*((TCollection_ExtendedString*)aName->Handle));
}

OCTCollection_ExtendedString^ OCStorage_HeaderData::ApplicationName()
{
  TCollection_ExtendedString* tmp = new TCollection_ExtendedString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->ApplicationName();
  return gcnew OCTCollection_ExtendedString(tmp);
}

 void OCStorage_HeaderData::SetDataType(OCNaroWrappers::OCTCollection_ExtendedString^ aType)
{
  (*((Handle_Storage_HeaderData*)nativeHandle))->SetDataType(*((TCollection_ExtendedString*)aType->Handle));
}

OCTCollection_ExtendedString^ OCStorage_HeaderData::DataType()
{
  TCollection_ExtendedString* tmp = new TCollection_ExtendedString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->DataType();
  return gcnew OCTCollection_ExtendedString(tmp);
}

 void OCStorage_HeaderData::AddToUserInfo(OCNaroWrappers::OCTCollection_AsciiString^ theUserInfo)
{
  (*((Handle_Storage_HeaderData*)nativeHandle))->AddToUserInfo(*((TCollection_AsciiString*)theUserInfo->Handle));
}

OCTColStd_SequenceOfAsciiString^ OCStorage_HeaderData::UserInfo()
{
  TColStd_SequenceOfAsciiString* tmp = new TColStd_SequenceOfAsciiString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->UserInfo();
  return gcnew OCTColStd_SequenceOfAsciiString(tmp);
}

 void OCStorage_HeaderData::AddToComments(OCNaroWrappers::OCTCollection_ExtendedString^ aComment)
{
  (*((Handle_Storage_HeaderData*)nativeHandle))->AddToComments(*((TCollection_ExtendedString*)aComment->Handle));
}

OCTColStd_SequenceOfExtendedString^ OCStorage_HeaderData::Comments()
{
  TColStd_SequenceOfExtendedString* tmp = new TColStd_SequenceOfExtendedString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->Comments();
  return gcnew OCTColStd_SequenceOfExtendedString(tmp);
}

 Standard_Integer OCStorage_HeaderData::NumberOfObjects()
{
  return (*((Handle_Storage_HeaderData*)nativeHandle))->NumberOfObjects();
}

 OCStorage_Error OCStorage_HeaderData::ErrorStatus()
{
  return (OCStorage_Error)((*((Handle_Storage_HeaderData*)nativeHandle))->ErrorStatus());
}

OCTCollection_AsciiString^ OCStorage_HeaderData::ErrorStatusExtension()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_Storage_HeaderData*)nativeHandle))->ErrorStatusExtension();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCStorage_HeaderData::ClearErrorStatus()
{
  (*((Handle_Storage_HeaderData*)nativeHandle))->ClearErrorStatus();
}


