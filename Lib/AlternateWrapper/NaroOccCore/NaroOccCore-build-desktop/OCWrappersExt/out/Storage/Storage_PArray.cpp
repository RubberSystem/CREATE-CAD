// File generated by CPPExt (CPP file)
//

#include "Storage_PArray.h"
#include "../Converter.h"
#include "../Standard/Standard_Persistent.h"


using namespace OCNaroWrappers;

OCStorage_PArray::OCStorage_PArray(Storage_PArray* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCStorage_PArray::OCStorage_PArray(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Storage_PArray(Low, Up);
}

OCStorage_PArray::OCStorage_PArray(OCNaroWrappers::OCStandard_Persistent^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Storage_PArray(*((Handle_Standard_Persistent*)Item->Handle), Low, Up);
}

 void OCStorage_PArray::Init(OCNaroWrappers::OCStandard_Persistent^ V)
{
  ((Storage_PArray*)nativeHandle)->Init(*((Handle_Standard_Persistent*)V->Handle));
}

 System::Boolean OCStorage_PArray::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((Storage_PArray*)nativeHandle)->IsAllocated());
}

OCStorage_PArray^ OCStorage_PArray::Assign(OCNaroWrappers::OCStorage_PArray^ Other)
{
  Storage_PArray* tmp = new Storage_PArray(0, 0);
  *tmp = ((Storage_PArray*)nativeHandle)->Assign(*((Storage_PArray*)Other->Handle));
  return gcnew OCStorage_PArray(tmp);
}

 Standard_Integer OCStorage_PArray::Length()
{
  return ((Storage_PArray*)nativeHandle)->Length();
}

 Standard_Integer OCStorage_PArray::Lower()
{
  return ((Storage_PArray*)nativeHandle)->Lower();
}

 Standard_Integer OCStorage_PArray::Upper()
{
  return ((Storage_PArray*)nativeHandle)->Upper();
}

 void OCStorage_PArray::SetValue(Standard_Integer Index, OCNaroWrappers::OCStandard_Persistent^ Value)
{
  ((Storage_PArray*)nativeHandle)->SetValue(Index, *((Handle_Standard_Persistent*)Value->Handle));
}

OCStandard_Persistent^ OCStorage_PArray::Value(Standard_Integer Index)
{
  Handle(Standard_Persistent) tmp = ((Storage_PArray*)nativeHandle)->Value(Index);
  return gcnew OCStandard_Persistent(&tmp);
}

OCStandard_Persistent^ OCStorage_PArray::ChangeValue(Standard_Integer Index)
{
  Handle(Standard_Persistent) tmp = ((Storage_PArray*)nativeHandle)->ChangeValue(Index);
  return gcnew OCStandard_Persistent(&tmp);
}


