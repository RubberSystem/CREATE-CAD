// File generated by CPPExt (Transient)
//
#ifndef _Storage_HSeqOfCallBack_OCWrappers_HeaderFile
#define _Storage_HSeqOfCallBack_OCWrappers_HeaderFile

// include the wrapped class
#include <Storage_HSeqOfCallBack.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Storage_SeqOfCallBack.h"


namespace OCNaroWrappers
{

ref class OCStorage_CallBack;
ref class OCStorage_SeqOfCallBack;



public ref class OCStorage_HSeqOfCallBack : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCStorage_HSeqOfCallBack(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCStorage_HSeqOfCallBack(Handle(Storage_HSeqOfCallBack)* nativeHandle);

// Methods PUBLIC


OCStorage_HSeqOfCallBack();


 /*instead*/  System::Boolean IsEmpty() ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  void Clear() ;


 /*instead*/  void Append(OCNaroWrappers::OCStorage_CallBack^ anItem) ;


 /*instead*/  void Append(OCNaroWrappers::OCStorage_HSeqOfCallBack^ aSequence) ;


 /*instead*/  void Prepend(OCNaroWrappers::OCStorage_CallBack^ anItem) ;


 /*instead*/  void Prepend(OCNaroWrappers::OCStorage_HSeqOfCallBack^ aSequence) ;


 /*instead*/  void Reverse() ;


 /*instead*/  void InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCStorage_CallBack^ anItem) ;


 /*instead*/  void InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCStorage_HSeqOfCallBack^ aSequence) ;


 /*instead*/  void InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCStorage_CallBack^ anItem) ;


 /*instead*/  void InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCStorage_HSeqOfCallBack^ aSequence) ;


 /*instead*/  void Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex) ;


 /*instead*/  OCStorage_HSeqOfCallBack^ Split(Standard_Integer anIndex) ;


 /*instead*/  void SetValue(Standard_Integer anIndex, OCNaroWrappers::OCStorage_CallBack^ anItem) ;


 /*instead*/  OCStorage_CallBack^ Value(Standard_Integer anIndex) ;


 /*instead*/  OCStorage_CallBack^ ChangeValue(Standard_Integer anIndex) ;


 /*instead*/  void Remove(Standard_Integer anIndex) ;


 /*instead*/  void Remove(Standard_Integer fromIndex, Standard_Integer toIndex) ;


 /*instead*/  OCStorage_SeqOfCallBack^ Sequence() ;


 /*instead*/  OCStorage_SeqOfCallBack^ ChangeSequence() ;


 /*instead*/  OCStorage_HSeqOfCallBack^ ShallowCopy() ;

~OCStorage_HSeqOfCallBack()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
