// File generated by CPPExt (MPV)
//
#ifndef _Storage_PArray_OCWrappers_HeaderFile
#define _Storage_PArray_OCWrappers_HeaderFile

// include native header
#include <Storage_PArray.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCStandard_Persistent;



public ref class OCStorage_PArray  {

protected:
  Storage_PArray* nativeHandle;
  OCStorage_PArray(OCDummy^) {};

public:
  property Storage_PArray* Handle
  {
    Storage_PArray* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCStorage_PArray(Storage_PArray* nativeHandle);

// Methods PUBLIC


OCStorage_PArray(Standard_Integer Low, Standard_Integer Up);


OCStorage_PArray(OCNaroWrappers::OCStandard_Persistent^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCStandard_Persistent^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCStorage_PArray^ Assign(OCNaroWrappers::OCStorage_PArray^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCStandard_Persistent^ Value) ;


 /*instead*/  OCStandard_Persistent^ Value(Standard_Integer Index) ;


 /*instead*/  OCStandard_Persistent^ ChangeValue(Standard_Integer Index) ;

~OCStorage_PArray()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
