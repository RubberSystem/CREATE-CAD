// File generated by CPPExt (MPV)
//
#ifndef _Graphic2d_Vertex_OCWrappers_HeaderFile
#define _Graphic2d_Vertex_OCWrappers_HeaderFile

// include native header
#include <Graphic2d_Vertex.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{



//! This class allows the creation and update of a <br>
//!	    2D point. <br>
public ref class OCGraphic2d_Vertex  {

protected:
  Graphic2d_Vertex* nativeHandle;
  OCGraphic2d_Vertex(OCDummy^) {};

public:
  property Graphic2d_Vertex* Handle
  {
    Graphic2d_Vertex* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGraphic2d_Vertex(Graphic2d_Vertex* nativeHandle);

// Methods PUBLIC

//! Creates a point with 0.0, 0.0 coordinates. <br>
OCGraphic2d_Vertex();

//! Creates a point with <AX>, <AY> coordinates. <br>
OCGraphic2d_Vertex(Standard_Real AX, Standard_Real AY);

//! Creates a point with <AX>, <AY> coordinates. <br>
OCGraphic2d_Vertex(Standard_ShortReal AX, Standard_ShortReal AY);

//! Modifies the coordinates of the point <me>. <br>
 /*instead*/  void SetCoord(Quantity_Length Xnew, Quantity_Length Ynew) ;

//! Modifies the X coordinate of the point <me>. <br>
 /*instead*/  void SetXCoord(Quantity_Length Xnew) ;

//! Modifies the Y coordinate of the point <me>. <br>
 /*instead*/  void SetYCoord(Quantity_Length Ynew) ;

//! Returns the coordinates of the point <me>. <br>
 /*instead*/  void Coord(Quantity_Length& AX, Quantity_Length& AY) ;

//! Returns the X coordinates of the point <me>. <br>
 /*instead*/  Quantity_Length X() ;

//! Returns the Y coordinate of the point <me>. <br>
 /*instead*/  Quantity_Length Y() ;

//! Test if <me> and <other> are the the same vertex. <br>
 /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCGraphic2d_Vertex^ other) ;

//! Returns the distance between <AV1> and <AV2>. <br>
static /*instead*/  Quantity_Length Distance(OCNaroWrappers::OCGraphic2d_Vertex^ AV1, OCNaroWrappers::OCGraphic2d_Vertex^ AV2) ;

~OCGraphic2d_Vertex()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
