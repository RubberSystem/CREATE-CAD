// File generated by CPPExt (CPP file)
//

#include "Graphic2d_Vertex.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCGraphic2d_Vertex::OCGraphic2d_Vertex(Graphic2d_Vertex* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGraphic2d_Vertex::OCGraphic2d_Vertex() 
{
  nativeHandle = new Graphic2d_Vertex();
}

OCGraphic2d_Vertex::OCGraphic2d_Vertex(Standard_Real AX, Standard_Real AY) 
{
  nativeHandle = new Graphic2d_Vertex(AX, AY);
}

OCGraphic2d_Vertex::OCGraphic2d_Vertex(Standard_ShortReal AX, Standard_ShortReal AY) 
{
  nativeHandle = new Graphic2d_Vertex(AX, AY);
}

 void OCGraphic2d_Vertex::SetCoord(Quantity_Length Xnew, Quantity_Length Ynew)
{
  ((Graphic2d_Vertex*)nativeHandle)->SetCoord(Xnew, Ynew);
}

 void OCGraphic2d_Vertex::SetXCoord(Quantity_Length Xnew)
{
  ((Graphic2d_Vertex*)nativeHandle)->SetXCoord(Xnew);
}

 void OCGraphic2d_Vertex::SetYCoord(Quantity_Length Ynew)
{
  ((Graphic2d_Vertex*)nativeHandle)->SetYCoord(Ynew);
}

 void OCGraphic2d_Vertex::Coord(Quantity_Length& AX, Quantity_Length& AY)
{
  ((Graphic2d_Vertex*)nativeHandle)->Coord(AX, AY);
}

 Quantity_Length OCGraphic2d_Vertex::X()
{
  return ((Graphic2d_Vertex*)nativeHandle)->X();
}

 Quantity_Length OCGraphic2d_Vertex::Y()
{
  return ((Graphic2d_Vertex*)nativeHandle)->Y();
}

 System::Boolean OCGraphic2d_Vertex::IsEqual(OCNaroWrappers::OCGraphic2d_Vertex^ other)
{
  return OCConverter::StandardBooleanToBoolean(((Graphic2d_Vertex*)nativeHandle)->IsEqual(*((Graphic2d_Vertex*)other->Handle)));
}

 Quantity_Length OCGraphic2d_Vertex::Distance(OCNaroWrappers::OCGraphic2d_Vertex^ AV1, OCNaroWrappers::OCGraphic2d_Vertex^ AV2)
{
  return Graphic2d_Vertex::Distance(*((Graphic2d_Vertex*)AV1->Handle), *((Graphic2d_Vertex*)AV2->Handle));
}


