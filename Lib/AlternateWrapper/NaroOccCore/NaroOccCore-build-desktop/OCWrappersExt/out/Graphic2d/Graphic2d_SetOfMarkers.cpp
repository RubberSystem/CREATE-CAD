// File generated by CPPExt (CPP file)
//

#include "Graphic2d_SetOfMarkers.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HSequenceOfInteger.h"
#include "Graphic2d_GraphicObject.h"
#include "Graphic2d_Drawer.h"
#include "../TShort/TShort_HArray1OfShortReal.h"
#include "../TColStd/TColStd_MapOfInteger.h"


using namespace OCNaroWrappers;

OCGraphic2d_SetOfMarkers::OCGraphic2d_SetOfMarkers(Handle(Graphic2d_SetOfMarkers)* nativeHandle) : OCGraphic2d_Line((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Graphic2d_SetOfMarkers(*nativeHandle);
}

OCGraphic2d_SetOfMarkers::OCGraphic2d_SetOfMarkers(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject) : OCGraphic2d_Line((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Graphic2d_SetOfMarkers(new Graphic2d_SetOfMarkers(*((Handle_Graphic2d_GraphicObject*)aGraphicObject->Handle)));
}

 void OCGraphic2d_SetOfMarkers::Add(Quantity_Length X, Quantity_Length Y)
{
  (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->Add(X, Y);
}

 void OCGraphic2d_SetOfMarkers::Add(Standard_Integer anIndex, Quantity_Length X, Quantity_Length Y, Quantity_Length aWidth, Quantity_Length anHeight, Quantity_PlaneAngle anAngle)
{
  (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->Add(anIndex, X, Y, aWidth, anHeight, anAngle);
}

 Standard_Integer OCGraphic2d_SetOfMarkers::Length()
{
  return (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->Length();
}

 void OCGraphic2d_SetOfMarkers::Values(Standard_Integer aRank, Standard_Integer& anIndex, Quantity_Length& X, Quantity_Length& Y, Quantity_Length& aW, Quantity_Length& aH, Quantity_PlaneAngle& anAngle)
{
  (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->Values(aRank, anIndex, X, Y, aW, aH, anAngle);
}

 System::Boolean OCGraphic2d_SetOfMarkers::SetElementsSelected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->SetElementsSelected());
}

 System::Boolean OCGraphic2d_SetOfMarkers::HasSelectedElements()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->HasSelectedElements());
}

 void OCGraphic2d_SetOfMarkers::ClearSelectedElements()
{
  (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->ClearSelectedElements();
}

OCTColStd_MapOfInteger^ OCGraphic2d_SetOfMarkers::GetSelectedElements()
{
  TColStd_MapOfInteger* tmp = new TColStd_MapOfInteger(0);
  *tmp = (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->GetSelectedElements();
  return gcnew OCTColStd_MapOfInteger(tmp);
}

 void OCGraphic2d_SetOfMarkers::AddOrRemoveSelected(Standard_Integer index)
{
  (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->AddOrRemoveSelected(index);
}

 void OCGraphic2d_SetOfMarkers::Save(Aspect_FStream& aFStream)
{
  (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->Save(aFStream);
}

 void OCGraphic2d_SetOfMarkers::SetHighlightedLimit(Standard_Integer number)
{
  (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->SetHighlightedLimit(number);
}

 void OCGraphic2d_SetOfMarkers::SetScaledWidth(Standard_ShortReal width)
{
  (*((Handle_Graphic2d_SetOfMarkers*)nativeHandle))->SetScaledWidth(width);
}


