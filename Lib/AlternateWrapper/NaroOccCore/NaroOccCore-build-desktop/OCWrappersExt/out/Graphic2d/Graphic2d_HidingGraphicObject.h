// File generated by CPPExt (Transient)
//
#ifndef _Graphic2d_HidingGraphicObject_OCWrappers_HeaderFile
#define _Graphic2d_HidingGraphicObject_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic2d_HidingGraphicObject.hxx>
#include "../Converter.h"

#include "Graphic2d_GraphicObject.h"

#include "Graphic2d_TypeOfFrame.h"


namespace OCNaroWrappers
{

ref class OCGraphic2d_HArray1OfVertex;
ref class OCGraphic2d_View;
ref class OCGraphic2d_Array1OfVertex;
ref class OCGraphic2d_Drawer;
ref class OCGraphic2d_Primitive;
ref class OCgp_GTrsf2d;


//! Creates a 2D hiding graphic object in a view. <br>
//!	    A graphic object is a primitives manager <br>
//!	    which hide the others graphic objects <br>
public ref class OCGraphic2d_HidingGraphicObject : OCGraphic2d_GraphicObject {

protected:
  // dummy constructor;
  OCGraphic2d_HidingGraphicObject(OCDummy^) : OCGraphic2d_GraphicObject((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic2d_HidingGraphicObject(Handle(Graphic2d_HidingGraphicObject)* nativeHandle);

// Methods PUBLIC

//! Creates an hiding polygon object in the view <aView> <br>
//!	    This graphic object manages a sequence of primitives. <br>
//!  <aFrame> describes the hiding polygon geometry <br>
//!  The frame is created with the default attributes : <br>
//!  * the hiding color index : 0 (the same as the view) <br>
//!  * the frame color index : 1 <br>
//!  * the frame line type index : 0 <br>
//!  * the frame line thickness index : 0 <br>
//!  * the graphic object is : <br>
//!	    - empty. <br>
//!	    - plottable. <br>
//!	    - drawable. <br>
//!	    - pickable. <br>
//!	    - not displayed. <br>
//!	    - not highlighted. <br>
//!	    - has a relative drawing priority of 0 <br>
OCGraphic2d_HidingGraphicObject(OCNaroWrappers::OCGraphic2d_View^ aView, OCNaroWrappers::OCGraphic2d_Array1OfVertex^ aFrame);

//! Creates an hiding predefined object in the view <aView>. <br>
//!	    the predefined TypeOfFrame must be one of : <br>
//!	    TOF_RECTANGULAR,TOF_CIRCULAR. <br>
//!	    the frame position and geometry is computed <br>
//!	    automaticaly according to the contents of the <br>
//!	    graphic object and the <aMargin1>,<aMargin2> parameter. <br>
//!	    A graphic object manages a sequence of primitives. <br>
//!  Warning: The type of frame can be UNKNOWN,in this case the frame is <br>
//!	   not drawn. <br>
OCGraphic2d_HidingGraphicObject(OCNaroWrappers::OCGraphic2d_View^ aView, OCGraphic2d_TypeOfFrame aType, Quantity_Length aMargin1, Quantity_Length aMargin2);

//! Updates the frame geometry. <br>
 /*instead*/  void SetFrame(OCNaroWrappers::OCGraphic2d_Array1OfVertex^ aFrame) ;

//! Updates & computes the frame geometry <br>
//!	    automaticaly according to the contents of the <br>
//!	    graphic object and the <aMargin> parameter. <br>
//!  Warning: The type of frame can be UNKNOWN,in this case the frame is <br>
//!	   not drawn. <br>
 /*instead*/  void SetFrame(OCGraphic2d_TypeOfFrame aFrameType, Quantity_Length aMargin1, Quantity_Length aMargin2) ;

//! Updates the hiding color index of the background polygon. <br>
 /*instead*/  void SetHidingColorIndex(Standard_Integer anIndex) ;

//! Updates the frame color index of the polygon. <br>
 /*instead*/  void SetFrameColorIndex(Standard_Integer anIndex) ;

//! Updates the frame line type index of the polygon. <br>
 /*instead*/  void SetFrameTypeIndex(Standard_Integer anIndex) ;

//! Updates the frame line thickness index of the polygon. <br>
 /*instead*/  void SetFrameWidthIndex(Standard_Integer anIndex) ;

//! Returns the max usable relative priority of the <br>
//!         "hiding" graphic object. <br>
virtual /*instead*/  Standard_Integer MaxPriority() override;

//! Returns the min max values of the frame of <me>. <br>
//!  Warning: If <me> is empty <br>
//!	    returns FALSE <br>
//!          and Minx = Miny = RealFirst () <br>
//!              Maxx = Maxy = RealLast () <br>
 /*instead*/  System::Boolean FrameMinMax(Quantity_Length& Minx, Quantity_Length& Maxx, Quantity_Length& Miny, Quantity_Length& Maxy) ;

//! Returns the min max values of <me> including <br>
//!	the frame and primitives inside. <br>
//!  Warning: If <me> is empty or not displayed <br>
//!	    returns FALSE <br>
//!          and     Minx = Miny = RealFirst () <br>
//!                  Maxx = Maxy = RealLast () <br>
virtual /*instead*/  System::Boolean MinMax(Quantity_Length& Minx, Quantity_Length& Maxx, Quantity_Length& Miny, Quantity_Length& Maxy) override;

//! Returns the frame geometry and type of <br>
//!   the hiding graphic object. <br>
//!  Warning: the frame can be NULL. <br>
 /*instead*/  OCGraphic2d_TypeOfFrame Frame(OCNaroWrappers::OCGraphic2d_Array1OfVertex^ aFrame) ;

//! Returns the hiding color index. <br>
 /*instead*/  Standard_Integer HidingColorIndex() ;

//! Returns the frame color index. <br>
 /*instead*/  Standard_Integer FrameColorIndex() ;

//! Returns the frame line type index. <br>
 /*instead*/  Standard_Integer FrameTypeIndex() ;

//! Returns the frame line thickness index. <br>
 /*instead*/  Standard_Integer FrameWidthIndex() ;

~OCGraphic2d_HidingGraphicObject()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
