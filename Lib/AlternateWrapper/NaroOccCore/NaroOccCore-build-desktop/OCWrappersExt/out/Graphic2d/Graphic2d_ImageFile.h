// File generated by CPPExt (Transient)
//
#ifndef _Graphic2d_ImageFile_OCWrappers_HeaderFile
#define _Graphic2d_ImageFile_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic2d_ImageFile.hxx>
#include "../Converter.h"

#include "Graphic2d_Primitive.h"

#include "../OSD/OSD_File.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../Aspect/Aspect_CardinalPoints.h"


namespace OCNaroWrappers
{

ref class OCGraphic2d_GraphicObject;
ref class OCOSD_File;
ref class OCGraphic2d_Drawer;


//! The primitive ImageFile <br>
public ref class OCGraphic2d_ImageFile : OCGraphic2d_Primitive {

protected:
  // dummy constructor;
  OCGraphic2d_ImageFile(OCDummy^) : OCGraphic2d_Primitive((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic2d_ImageFile(Handle(Graphic2d_ImageFile)* nativeHandle);

// Methods PUBLIC

//! Defines an image with its center location; <br>
//!	    <X>, <Y> defines the position in the space model. <br>
//!	    <adx>, <ady> defines an offset in the device space. <br>
//!	    <ascale> defines a scale factor applied to the <br>
//!	    original size of the image. <br>
//!	    The image will be placed at this offset <br>
//!	    according to the type of placement. <br>
OCGraphic2d_ImageFile(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, OCNaroWrappers::OCOSD_File^ aFile, Quantity_Length X, Quantity_Length Y, Quantity_Length adx, Quantity_Length ady, OCAspect_CardinalPoints aTypeOfPlacement, Quantity_Factor aScale);

//! Modifies the center location of the image <me>. <br>
 /*instead*/  void SetCenter(Quantity_Length X, Quantity_Length Y) ;

//! Modifies the offset of the image <me>. <br>
 /*instead*/  void SetOffset(Quantity_Length dx, Quantity_Length dy) ;

//! Modifies the type of placement of the image <me>. <br>
 /*instead*/  void SetPlacement(OCAspect_CardinalPoints aPlacement) ;

//! Modifies the center location of the image <me> <br>
//!          by translating it. <br>
 /*instead*/  void Translate(Quantity_Length DX, Quantity_Length DY) ;

//! Changes the scale factor of the image. <br>
 /*instead*/  void SetScale(Quantity_Factor aScale) ;

//! The image <me> follows the scale factor of the view <br>
//!	    if the flag is Standard_True. <br>
 /*instead*/  void SetZoomable(System::Boolean aFlag) ;

//! Clear the reference to this imagefile if something <br>
//!         inside have changed,Forced the reload of this at Draw() <br>
//!         time. <br>
 /*instead*/  void Clear() ;

//! Returns the original scale factor applied to <br>
//!	    the image <me>. <br>
 /*instead*/  Quantity_Factor Scale() ;

//! Returns Standard_True if the image <me> follows <br>
//!	    the scale factor of the view. <br>
 /*instead*/  System::Boolean IsZoomable() ;

//! returns the position in the space model <br>
 /*instead*/  void Position(Quantity_Length& X, Quantity_Length& Y) ;

//! returns the offset in the device space <br>
 /*instead*/  void Offset(Quantity_Length& aX, Quantity_Length& aY) ;

//! returns the type of placement <br>
 /*instead*/  OCAspect_CardinalPoints Placement() ;

//! returns the image file <br>
 /*instead*/  OCOSD_File^ ImageFile() ;

//! Returns Standard_True, the Image pixel size <br>
//!	    and the Image planes depth, if the image file : <br>
//!		- is not open <br>
//!		- exists <br>
//!		- have the extension .xwd <br>
//!	    NOTE that only XWD image file type are recognized. <br>
static /*instead*/  System::Boolean Values(OCNaroWrappers::OCOSD_File^ aFile, Standard_Integer& aWidth, Standard_Integer& aHeight, Standard_Integer& aDepth) ;

//! Swaps long ints <br>
static /*instead*/  void SwapLong(Standard_Address anAddress, Standard_Integer aNumOfBytes) ;


virtual /*instead*/  void Save(Aspect_FStream& aFStream) ;

~OCGraphic2d_ImageFile()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
