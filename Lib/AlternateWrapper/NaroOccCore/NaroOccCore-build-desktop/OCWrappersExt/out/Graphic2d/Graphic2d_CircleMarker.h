// File generated by CPPExt (Transient)
//
#ifndef _Graphic2d_CircleMarker_OCWrappers_HeaderFile
#define _Graphic2d_CircleMarker_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic2d_CircleMarker.hxx>
#include "../Converter.h"

#include "Graphic2d_VectorialMarker.h"



namespace OCNaroWrappers
{

ref class OCGraphic2d_GraphicObject;
ref class OCGraphic2d_Drawer;


//! The primitive CircleMarker <br>
//!	    Every marker takes a reference point as an argument in <br>
//!	    its constructor. CircleMarker and EllipsMarker take <br>
//!	    another point as the center and PolylineMarker takes the <br>
//!	    first point of its list as its origin. <br>
//!	    The coordinates of the centre or origin point are offsets <br>
//!	    with respect to the reference point. <br>
public ref class OCGraphic2d_CircleMarker : OCGraphic2d_VectorialMarker {

protected:
  // dummy constructor;
  OCGraphic2d_CircleMarker(OCDummy^) : OCGraphic2d_VectorialMarker((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic2d_CircleMarker(Handle(Graphic2d_CircleMarker)* nativeHandle);

// Methods PUBLIC

//! Creates a complete circle. <br>
//!	    The reference point is <aXPosition>, <aYPosition> <br>
//!          The center is <X>, <Y>. <br>
//!          The radius is <Radius>. <br>
//!  Warning: Raises CircleDefinitionError if the <br>
//!          radius is null. <br>
OCGraphic2d_CircleMarker(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, Quantity_Length aXPosition, Quantity_Length aYPosition, Quantity_Length X, Quantity_Length Y, Quantity_Length Radius);

//! Creates an arc. <br>
//!	    The reference point is <aXPosition>, <aYPosition> <br>
//!	    The center is <X>, <Y>. <br>
//!	    The radius is <Radius>. <br>
//!	    Angles are measured counterclockwise with 0 radian <br>
//!	    at 3 o'clock. <br>
//!  Warning: Raises CircleDefinitionError if the <br>
//!          radius is null. <br>
OCGraphic2d_CircleMarker(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, Quantity_Length aXPosition, Quantity_Length aYPosition, Quantity_Length X, Quantity_Length Y, Quantity_Length Radius, Quantity_PlaneAngle Alpha, Quantity_PlaneAngle Beta);

//! returns the coordinates of center of the circle marker <br>
 /*instead*/  void Center(Quantity_Length& X, Quantity_Length& Y) ;

//! returns the radius of this circle marker <br>
 /*instead*/  Quantity_Length Radius() ;

//! returns the first angle of the arc marker <br>
 /*instead*/  Quantity_PlaneAngle FirstAngle() ;

//! returns the second angle of the arc marker <br>
 /*instead*/  Quantity_PlaneAngle SecondAngle() ;


virtual /*instead*/  void Save(Aspect_FStream& aFStream) ;


static /*instead*/  void Retrieve(Aspect_IFStream& anIFStream, OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject) ;

~OCGraphic2d_CircleMarker()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
