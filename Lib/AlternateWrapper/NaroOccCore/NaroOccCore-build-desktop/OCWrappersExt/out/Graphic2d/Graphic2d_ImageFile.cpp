// File generated by CPPExt (CPP file)
//

#include "Graphic2d_ImageFile.h"
#include "../Converter.h"
#include "Graphic2d_GraphicObject.h"
#include "../OSD/OSD_File.h"
#include "Graphic2d_Drawer.h"


using namespace OCNaroWrappers;

OCGraphic2d_ImageFile::OCGraphic2d_ImageFile(Handle(Graphic2d_ImageFile)* nativeHandle) : OCGraphic2d_Primitive((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Graphic2d_ImageFile(*nativeHandle);
}

OCGraphic2d_ImageFile::OCGraphic2d_ImageFile(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, OCNaroWrappers::OCOSD_File^ aFile, Quantity_Length X, Quantity_Length Y, Quantity_Length adx, Quantity_Length ady, OCAspect_CardinalPoints aTypeOfPlacement, Quantity_Factor aScale) : OCGraphic2d_Primitive((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Graphic2d_ImageFile(new Graphic2d_ImageFile(*((Handle_Graphic2d_GraphicObject*)aGraphicObject->Handle), *((OSD_File*)aFile->Handle), X, Y, adx, ady, (Aspect_CardinalPoints)aTypeOfPlacement, aScale));
}

 void OCGraphic2d_ImageFile::SetCenter(Quantity_Length X, Quantity_Length Y)
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->SetCenter(X, Y);
}

 void OCGraphic2d_ImageFile::SetOffset(Quantity_Length dx, Quantity_Length dy)
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->SetOffset(dx, dy);
}

 void OCGraphic2d_ImageFile::SetPlacement(OCAspect_CardinalPoints aPlacement)
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->SetPlacement((Aspect_CardinalPoints)aPlacement);
}

 void OCGraphic2d_ImageFile::Translate(Quantity_Length DX, Quantity_Length DY)
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->Translate(DX, DY);
}

 void OCGraphic2d_ImageFile::SetScale(Quantity_Factor aScale)
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->SetScale(aScale);
}

 void OCGraphic2d_ImageFile::SetZoomable(System::Boolean aFlag)
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->SetZoomable(OCConverter::BooleanToStandardBoolean(aFlag));
}

 void OCGraphic2d_ImageFile::Clear()
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->Clear();
}

 Quantity_Factor OCGraphic2d_ImageFile::Scale()
{
  return (*((Handle_Graphic2d_ImageFile*)nativeHandle))->Scale();
}

 System::Boolean OCGraphic2d_ImageFile::IsZoomable()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_ImageFile*)nativeHandle))->IsZoomable());
}

 void OCGraphic2d_ImageFile::Position(Quantity_Length& X, Quantity_Length& Y)
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->Position(X, Y);
}

 void OCGraphic2d_ImageFile::Offset(Quantity_Length& aX, Quantity_Length& aY)
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->Offset(aX, aY);
}

 OCAspect_CardinalPoints OCGraphic2d_ImageFile::Placement()
{
  return (OCAspect_CardinalPoints)((*((Handle_Graphic2d_ImageFile*)nativeHandle))->Placement());
}

OCOSD_File^ OCGraphic2d_ImageFile::ImageFile()
{
  OSD_File* tmp = new OSD_File();
  *tmp = (*((Handle_Graphic2d_ImageFile*)nativeHandle))->ImageFile();
  return gcnew OCOSD_File(tmp);
}

 System::Boolean OCGraphic2d_ImageFile::Values(OCNaroWrappers::OCOSD_File^ aFile, Standard_Integer& aWidth, Standard_Integer& aHeight, Standard_Integer& aDepth)
{
  return OCConverter::StandardBooleanToBoolean(Graphic2d_ImageFile::Values(*((OSD_File*)aFile->Handle), aWidth, aHeight, aDepth));
}

 void OCGraphic2d_ImageFile::SwapLong(Standard_Address anAddress, Standard_Integer aNumOfBytes)
{
  Graphic2d_ImageFile::SwapLong(anAddress, aNumOfBytes);
}

 void OCGraphic2d_ImageFile::Save(Aspect_FStream& aFStream)
{
  (*((Handle_Graphic2d_ImageFile*)nativeHandle))->Save(aFStream);
}


