// File generated by CPPExt (Transient)
//
#ifndef _Graphic2d_Line_OCWrappers_HeaderFile
#define _Graphic2d_Line_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic2d_Line.hxx>
#include "../Converter.h"

#include "Graphic2d_Primitive.h"

#include "Graphic2d_TypeOfPolygonFilling.h"


namespace OCNaroWrappers
{

ref class OCGraphic2d_GraphicObject;
ref class OCGraphic2d_Drawer;
ref class OCTShort_Array1OfShortReal;


//! Groups all the primitives which behaves like <br>
//!	    geometrical lines. <br>
//!	    for example: Polyline, Circle ... <br>
public ref class OCGraphic2d_Line : OCGraphic2d_Primitive {

protected:
  // dummy constructor;
  OCGraphic2d_Line(OCDummy^) : OCGraphic2d_Primitive((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic2d_Line(Handle(Graphic2d_Line)* nativeHandle);

// Methods PUBLIC

//! Defines a line with the following default values : <br>
//!		- Color Index = 1 (the first user defined color) <br>
//!		- Width Index = 0 (default 1 pixel width) <br>
//!		- Type Index = 0  (default solid line) <br>
//!		- Draw Edge = Standard_True <br>
//!		- Type Of Polygon Filling = Graphic2d_TOPF_EMPTY <br>
//!		- Pattern Index = 0 (default solid polygon filling) <br>
//!		- Interior Color Index = 1 (the first user defined color) <br>
OCGraphic2d_Line(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject);

//! Defines the index, in the width map, of the line width. <br>
//!  Warning: Note that the index 0 can be undefined as a WidthMapEntry, <br>
//!	    in this case the default line width of 1 pixel is taken. <br>
 /*instead*/  void SetWidthIndex(Standard_Integer anIndex) ;

//! Defines the index, in the type map, of the line type. <br>
//!  Warning: Note that the index 0 can be undefined as a TypeMapEntry, <br>
//!  	    in this case the default line type SOLID is taken. <br>
 /*instead*/  void SetTypeIndex(Standard_Integer anIndex) ;

//! Defines the index, in the color map, of the interior <br>
//!	    color. <br>
//!  Warning: The type of polygon filling must be : <br>
//!		Graphic2d_TOPF_FILLED <br>
 /*instead*/  void SetInteriorColorIndex(Standard_Integer anIndex) ;

//! Defines if the edges are drawn or not. <br>
//!  Warning: The type of polygon filling must be : <br>
//!		Graphic2d_TOPF_FILLED or <br>
//!		Graphic2d_TOPF_PATTERNED <br>
 /*instead*/  void SetDrawEdge(System::Boolean aDraw) ;

//! Defines the pattern for closed lines. <br>
//!  Warning: The type of polygon filling must be : <br>
//!		Graphic2d_TOPF_PATTERNED <br>
 /*instead*/  void SetInteriorPattern(Standard_Integer anIndex) ;

//! Defines the pattern for closed lines. <br>
//!	TypeOfPolygonFilling is : <br>
//!		- Graphic2d_TOPF_EMPTY <br>
//!		- Graphic2d_TOPF_FILLED <br>
//!		- Graphic2d_TOPF_PATTERNED <br>
 /*instead*/  void SetTypeOfPolygonFilling(OCGraphic2d_TypeOfPolygonFilling aType) ;

//! Returns the interior color used. <br>
 /*instead*/  Standard_Integer InteriorColorIndex() ;

//! Returns the interior pattern used. <br>
 /*instead*/  Standard_Integer InteriorPattern() ;

//! Returns the type of polygon filling used. <br>
 /*instead*/  OCGraphic2d_TypeOfPolygonFilling TypeOfPolygonFilling() ;

//! Returns the line type index used. <br>
 /*instead*/  Standard_Integer TypeIndex() ;

//! Returns the line width index used. <br>
 /*instead*/  Standard_Integer WidthIndex() ;


 /*instead*/  void Save(Aspect_FStream& aFStream) ;


 /*instead*/  void Retrieve(Aspect_IFStream& anIFStream) ;

~OCGraphic2d_Line()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
