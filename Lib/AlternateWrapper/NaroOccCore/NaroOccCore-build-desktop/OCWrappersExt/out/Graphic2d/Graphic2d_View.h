// File generated by CPPExt (Transient)
//
#ifndef _Graphic2d_View_OCWrappers_HeaderFile
#define _Graphic2d_View_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic2d_View.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Graphic2d_SequenceOfGraphicObject.h"
#include "../TColStd/TColStd_SequenceOfInteger.h"
#include "Graphic2d_SequenceOfBuffer.h"
#include "../Aspect/Aspect_TypeOfDeflection.h"
#include "Graphic2d_PickMode.h"


namespace OCNaroWrappers
{

ref class OCGraphic2d_DisplayList;
ref class OCGraphic2d_TransientManager;
ref class OCGraphic2d_GraphicObject;
ref class OCGraphic2d_Buffer;
ref class OCGraphic2d_Primitive;
ref class OCAspect_Driver;
ref class OCGraphic2d_ViewMapping;
ref class OCGraphic2d_Drawer;


//! A View is a graphic object manager. <br>
public ref class OCGraphic2d_View : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCGraphic2d_View(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic2d_View(Handle(Graphic2d_View)* nativeHandle);

// Methods PUBLIC

//! Creates a view. <br>
//!	    A view is a set of graphic objects. <br>
//!	    The view manages this set. <br>
OCGraphic2d_View();

//! Removes all the graphic objects from the view <me>. <br>
 /*instead*/  void Remove() ;

//! Forbids the drawing of all graphic objects in <me>. <br>
 /*instead*/  void Erase() ;

//! Fully updates the driver <aDriver> in function of <br>
//!	    modifications of the graphic objects displayed <br>
//!	    in the view <me>. <br>
//!	    <aViewMapping> defines the "map from". <br>
//!	    <aXPosition>, <aYPosition>, <aScale> define the "map to". <br>
//!	    The entire window which supporting the view will be <br>
//!	    cleared before if <ClearBefore> flag is TRUE. <br>
 /*instead*/  void Update(OCNaroWrappers::OCAspect_Driver^ aDriver, OCNaroWrappers::OCGraphic2d_ViewMapping^ aViewMapping, Standard_Real aXPosition, Standard_Real aYPosition, Standard_Real aScale, System::Boolean ClearBefore) ;

//! Partially updates the driver <aDriver> in function of <br>
//!	    modifications of the graphic objects displayed <br>
//!	    in the view <me> with the defined mapping parameters <br>
//!	    and reset the update pointer if <Reset> is TRUE. <br>
//!  Warning: Only the new primitives created since the last Update <br>
//!	    are drawn. All others primitives are in the fixed <br>
//!	    background. <br>
 /*instead*/  void TinyUpdate(OCNaroWrappers::OCAspect_Driver^ aDriver, OCNaroWrappers::OCGraphic2d_ViewMapping^ aViewMapping, Standard_Real aXPosition, Standard_Real aYPosition, Standard_Real aScale, System::Boolean Reset) ;

//! Partially updates the driver <aDriver> with <br>
//!          the graphic object <aGraphicObject> in the <br>
//!	    the view <me> with the defined mapping parameters. <br>
 /*instead*/  void Update(OCNaroWrappers::OCAspect_Driver^ aDriver, OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, OCNaroWrappers::OCGraphic2d_ViewMapping^ aViewMapping, Standard_Real aXPosition, Standard_Real aYPosition, Standard_Real aScale) ;

//! Partially updates the driver <aDriver> with <br>
//!          the primitive <aPrimitive> in the <br>
//!	    the view <me> with the defined mapping parameters. <br>
 /*instead*/  void Update(OCNaroWrappers::OCAspect_Driver^ aDriver, OCNaroWrappers::OCGraphic2d_Primitive^ aPrimitive, OCNaroWrappers::OCGraphic2d_ViewMapping^ aViewMapping, Standard_Real aXPosition, Standard_Real aYPosition, Standard_Real aScale) ;

//! Returns the list of graphic objects displayed in <me>. <br>
 /*instead*/  OCGraphic2d_DisplayList^ DisplayList() ;

//! Returns Standard_True if the graphic object <br>
//!	    <aGraphicObject> is displayed in <me>, <br>
//!	    Standard_False if not. <br>
 /*instead*/  System::Boolean IsIn(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject) ;

//! Returns the coordinates of the boundary box of all <br>
//!	    graphic objects referenced in the list <aList>. <br>
//!  Warning: All markers are ignored. <br>
//!  Warning: If <aList> is empty or contains markers and nothing else <br>
//!	    returns Minx = Miny = RealLast () and <br>
//!	    returns Maxx = Maxy = RealFirst () <br>
 /*instead*/  void MinMax(OCNaroWrappers::OCGraphic2d_DisplayList^ aList, Quantity_Length& Minx, Quantity_Length& Maxx, Quantity_Length& Miny, Quantity_Length& Maxy) ;

//! Returns the coordinates of the boundary box of all <br>
//!	    graphic objects displayed in the view <me>. <br>
//!  Warning: All markers are ignored. <br>
//!  Warning: If <me> is empty or contains markers and nothing else <br>
//!	    returns Minx = Miny = RealLast () and <br>
//!	    returns Maxx = Maxy = RealFirst () <br>
 /*instead*/  void MinMax(Quantity_Length& Minx, Quantity_Length& Maxx, Quantity_Length& Miny, Quantity_Length& Maxy) ;

//! Returns the coordinates of the boundary box of all <br>
//!	    markers referenced in the graphic objects referenced <br>
//!	    in the list <aList>. <br>
//!  Warning: If <aList> is empty or without markers <br>
//!	    returns Minx = Miny = RealLast () and <br>
//!	    returns Maxx = Maxy = RealFirst () <br>
 /*instead*/  void MarkerMinMax(OCNaroWrappers::OCGraphic2d_DisplayList^ aList, Quantity_Length& Minx, Quantity_Length& Maxx, Quantity_Length& Miny, Quantity_Length& Maxy) ;

//! Returns the coordinates of the boundary box of all <br>
//!	    markers referenced in the graphic objects displayed <br>
//!	    in the view <me>. <br>
//!  Warning: If <me> is empty or without markers <br>
//!	    returns Minx = Miny = RealLast () and <br>
//!	    returns Maxx = Maxy = RealFirst () <br>
 /*instead*/  void MarkerMinMax(Quantity_Length& Minx, Quantity_Length& Maxx, Quantity_Length& Miny, Quantity_Length& Maxy) ;

//! Returns the list of graphic objects picked. <br>
 /*instead*/  OCGraphic2d_DisplayList^ Pick(OCNaroWrappers::OCGraphic2d_ViewMapping^ aViewMapping, Standard_Real X, Standard_Real Y, Standard_Real aPrecision, Standard_Real aXPosition, Standard_Real aYPosition, Standard_Real aScale) ;

//! Returns the list of graphic objects picked. <br>
 /*instead*/  OCGraphic2d_DisplayList^ PickByCircle(OCNaroWrappers::OCGraphic2d_ViewMapping^ aViewMapping, Standard_Real X, Standard_Real Y, Standard_Real Radius, Standard_Real aXPosition, Standard_Real aYPosition, Standard_Real aScale) ;

//! Returns Standard_True if the primitive <me> is: <br>
//!          included in rectangle (<aPickMode = PM_INCLUDE>), <br>
//!          excluded from rectangle (<aPickMode = PM_EXLUDE>), <br>
//!          intersected by rectangle (<aPickMode = PM_INTERSECT>), <br>
//!          defined by Xmin, Ymin, Xmax, Ymax. <br>
//!	        Standard_False if not. <br>
 /*instead*/  OCGraphic2d_DisplayList^ Pick(OCNaroWrappers::OCGraphic2d_ViewMapping^ aViewMapping, Standard_Real Xmin, Standard_Real Ymin, Standard_Real Xmax, Standard_Real Ymax, Standard_Real aXPosition, Standard_Real aYPosition, Standard_Real aScale, OCGraphic2d_PickMode aPickMode) ;

//! Returns the override color index. <br>
 /*instead*/  Standard_Integer DefaultOverrideColor() ;

//! Returns Standard_True if the override color index <br>
//!	    is defined, Standard_False if not. <br>
 /*instead*/  System::Boolean IsDefinedColor() ;

//! Sets the override color index. <br>
 /*instead*/  void SetDefaultOverrideColor(Standard_Integer anIndex) ;

//! by default: TOD_RELATIVE; <br>
//!	    However, except for the shapes, the drawing will be <br>
//!	    made using the absolute deflection. <br>
 /*instead*/  void SetTypeOfDeflection(OCAspect_TypeOfDeflection aTypeOfDeflection) ;

//! Returns the deflection type. <br>
 /*instead*/  OCAspect_TypeOfDeflection TypeOfDeflection() ;

//! Sets the absolute deflection value. <br>
 /*instead*/  void SetDeflection(Quantity_Length aDeflection) ;

//! Returns the absolute deflection value. <br>
 /*instead*/  Standard_Real Deflection() ;

//! Sets the relative deflection coefficient. <br>
//!	    default value = 0.00033 <br>
 /*instead*/  void SetDeflectionCoefficient(Standard_Real aCoefficient) ;

//! Returns the relative deflection coefficient. <br>
 /*instead*/  Standard_Real DeflectionCoefficient() ;

//! Sets the MIN viewable text height precision in Device space, <br>
//!	    the texts whose the size is < to this precision <br>
//!	    is drawn at screen with an outlined or filled rectangle. <br>
//!          The default text precision value is 0.0015 <br>
 /*instead*/  void SetTextPrecision(Standard_Real aPrecision) ;

//! Returns the text precision. <br>
 /*instead*/  Standard_Real TextPrecision() ;

//! ???? <br>
 /*instead*/  void Convert(OCNaroWrappers::OCGraphic2d_ViewMapping^ aViewMapping, Standard_Real aDrawPositionX, Standard_Real aDrawPositionY, Standard_Real aXPosition, Standard_Real aYPosition, Standard_Real aScale, Standard_Real& aX, Standard_Real& aY) ;

//! ???? <br>
 /*instead*/  Standard_Real Convert(OCNaroWrappers::OCGraphic2d_ViewMapping^ aViewMapping, Standard_Real aScalar, Standard_Real aScale) ;

//! Returns the attached drawer of this view. <br>
 /*instead*/  OCGraphic2d_Drawer^ Drawer() ;

~OCGraphic2d_View()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
