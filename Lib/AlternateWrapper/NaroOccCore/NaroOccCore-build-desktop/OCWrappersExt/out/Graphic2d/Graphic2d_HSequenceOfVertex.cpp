// File generated by CPPExt (CPP file)
//

#include "Graphic2d_HSequenceOfVertex.h"
#include "../Converter.h"
#include "Graphic2d_Vertex.h"
#include "Graphic2d_SequenceOfVertex.h"


using namespace OCNaroWrappers;

OCGraphic2d_HSequenceOfVertex::OCGraphic2d_HSequenceOfVertex(Handle(Graphic2d_HSequenceOfVertex)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Graphic2d_HSequenceOfVertex(*nativeHandle);
}

OCGraphic2d_HSequenceOfVertex::OCGraphic2d_HSequenceOfVertex() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Graphic2d_HSequenceOfVertex(new Graphic2d_HSequenceOfVertex());
}

 System::Boolean OCGraphic2d_HSequenceOfVertex::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCGraphic2d_HSequenceOfVertex::Length()
{
  return (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Length();
}

 void OCGraphic2d_HSequenceOfVertex::Clear()
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Clear();
}

 void OCGraphic2d_HSequenceOfVertex::Append(OCNaroWrappers::OCGraphic2d_Vertex^ anItem)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Append(*((Graphic2d_Vertex*)anItem->Handle));
}

 void OCGraphic2d_HSequenceOfVertex::Append(OCNaroWrappers::OCGraphic2d_HSequenceOfVertex^ aSequence)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Append(*((Handle_Graphic2d_HSequenceOfVertex*)aSequence->Handle));
}

 void OCGraphic2d_HSequenceOfVertex::Prepend(OCNaroWrappers::OCGraphic2d_Vertex^ anItem)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Prepend(*((Graphic2d_Vertex*)anItem->Handle));
}

 void OCGraphic2d_HSequenceOfVertex::Prepend(OCNaroWrappers::OCGraphic2d_HSequenceOfVertex^ aSequence)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Prepend(*((Handle_Graphic2d_HSequenceOfVertex*)aSequence->Handle));
}

 void OCGraphic2d_HSequenceOfVertex::Reverse()
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Reverse();
}

 void OCGraphic2d_HSequenceOfVertex::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCGraphic2d_Vertex^ anItem)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->InsertBefore(anIndex, *((Graphic2d_Vertex*)anItem->Handle));
}

 void OCGraphic2d_HSequenceOfVertex::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCGraphic2d_HSequenceOfVertex^ aSequence)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->InsertBefore(anIndex, *((Handle_Graphic2d_HSequenceOfVertex*)aSequence->Handle));
}

 void OCGraphic2d_HSequenceOfVertex::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCGraphic2d_Vertex^ anItem)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->InsertAfter(anIndex, *((Graphic2d_Vertex*)anItem->Handle));
}

 void OCGraphic2d_HSequenceOfVertex::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCGraphic2d_HSequenceOfVertex^ aSequence)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->InsertAfter(anIndex, *((Handle_Graphic2d_HSequenceOfVertex*)aSequence->Handle));
}

 void OCGraphic2d_HSequenceOfVertex::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCGraphic2d_HSequenceOfVertex^ OCGraphic2d_HSequenceOfVertex::Split(Standard_Integer anIndex)
{
  Handle(Graphic2d_HSequenceOfVertex) tmp = (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Split(anIndex);
  return gcnew OCGraphic2d_HSequenceOfVertex(&tmp);
}

 void OCGraphic2d_HSequenceOfVertex::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCGraphic2d_Vertex^ anItem)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->SetValue(anIndex, *((Graphic2d_Vertex*)anItem->Handle));
}

OCGraphic2d_Vertex^ OCGraphic2d_HSequenceOfVertex::Value(Standard_Integer anIndex)
{
  Graphic2d_Vertex* tmp = new Graphic2d_Vertex();
  *tmp = (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Value(anIndex);
  return gcnew OCGraphic2d_Vertex(tmp);
}

OCGraphic2d_Vertex^ OCGraphic2d_HSequenceOfVertex::ChangeValue(Standard_Integer anIndex)
{
  Graphic2d_Vertex* tmp = new Graphic2d_Vertex();
  *tmp = (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCGraphic2d_Vertex(tmp);
}

 void OCGraphic2d_HSequenceOfVertex::Remove(Standard_Integer anIndex)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Remove(anIndex);
}

 void OCGraphic2d_HSequenceOfVertex::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCGraphic2d_SequenceOfVertex^ OCGraphic2d_HSequenceOfVertex::Sequence()
{
  Graphic2d_SequenceOfVertex* tmp = new Graphic2d_SequenceOfVertex();
  *tmp = (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->Sequence();
  return gcnew OCGraphic2d_SequenceOfVertex(tmp);
}

OCGraphic2d_SequenceOfVertex^ OCGraphic2d_HSequenceOfVertex::ChangeSequence()
{
  Graphic2d_SequenceOfVertex* tmp = new Graphic2d_SequenceOfVertex();
  *tmp = (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->ChangeSequence();
  return gcnew OCGraphic2d_SequenceOfVertex(tmp);
}

OCGraphic2d_HSequenceOfVertex^ OCGraphic2d_HSequenceOfVertex::ShallowCopy()
{
  Handle(Graphic2d_HSequenceOfVertex) tmp = (*((Handle_Graphic2d_HSequenceOfVertex*)nativeHandle))->ShallowCopy();
  return gcnew OCGraphic2d_HSequenceOfVertex(&tmp);
}


