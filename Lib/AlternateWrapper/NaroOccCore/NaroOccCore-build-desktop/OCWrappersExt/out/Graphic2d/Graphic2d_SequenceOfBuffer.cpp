// File generated by CPPExt (CPP file)
//

#include "Graphic2d_SequenceOfBuffer.h"
#include "../Converter.h"
#include "Graphic2d_Buffer.h"
#include "Graphic2d_SequenceNodeOfSequenceOfBuffer.h"


using namespace OCNaroWrappers;

OCGraphic2d_SequenceOfBuffer::OCGraphic2d_SequenceOfBuffer(Graphic2d_SequenceOfBuffer* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCGraphic2d_SequenceOfBuffer::OCGraphic2d_SequenceOfBuffer() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Graphic2d_SequenceOfBuffer();
}

OCGraphic2d_SequenceOfBuffer^ OCGraphic2d_SequenceOfBuffer::Assign(OCNaroWrappers::OCGraphic2d_SequenceOfBuffer^ Other)
{
  Graphic2d_SequenceOfBuffer* tmp = new Graphic2d_SequenceOfBuffer();
  *tmp = ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Assign(*((Graphic2d_SequenceOfBuffer*)Other->Handle));
  return gcnew OCGraphic2d_SequenceOfBuffer(tmp);
}

 void OCGraphic2d_SequenceOfBuffer::Append(OCNaroWrappers::OCGraphic2d_Buffer^ T)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Append(*((Handle_Graphic2d_Buffer*)T->Handle));
}

 void OCGraphic2d_SequenceOfBuffer::Append(OCNaroWrappers::OCGraphic2d_SequenceOfBuffer^ S)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Append(*((Graphic2d_SequenceOfBuffer*)S->Handle));
}

 void OCGraphic2d_SequenceOfBuffer::Prepend(OCNaroWrappers::OCGraphic2d_Buffer^ T)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Prepend(*((Handle_Graphic2d_Buffer*)T->Handle));
}

 void OCGraphic2d_SequenceOfBuffer::Prepend(OCNaroWrappers::OCGraphic2d_SequenceOfBuffer^ S)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Prepend(*((Graphic2d_SequenceOfBuffer*)S->Handle));
}

 void OCGraphic2d_SequenceOfBuffer::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCGraphic2d_Buffer^ T)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->InsertBefore(Index, *((Handle_Graphic2d_Buffer*)T->Handle));
}

 void OCGraphic2d_SequenceOfBuffer::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCGraphic2d_SequenceOfBuffer^ S)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->InsertBefore(Index, *((Graphic2d_SequenceOfBuffer*)S->Handle));
}

 void OCGraphic2d_SequenceOfBuffer::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCGraphic2d_Buffer^ T)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->InsertAfter(Index, *((Handle_Graphic2d_Buffer*)T->Handle));
}

 void OCGraphic2d_SequenceOfBuffer::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCGraphic2d_SequenceOfBuffer^ S)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->InsertAfter(Index, *((Graphic2d_SequenceOfBuffer*)S->Handle));
}

OCGraphic2d_Buffer^ OCGraphic2d_SequenceOfBuffer::First()
{
  Handle(Graphic2d_Buffer) tmp = ((Graphic2d_SequenceOfBuffer*)nativeHandle)->First();
  return gcnew OCGraphic2d_Buffer(&tmp);
}

OCGraphic2d_Buffer^ OCGraphic2d_SequenceOfBuffer::Last()
{
  Handle(Graphic2d_Buffer) tmp = ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Last();
  return gcnew OCGraphic2d_Buffer(&tmp);
}

 void OCGraphic2d_SequenceOfBuffer::Split(Standard_Integer Index, OCNaroWrappers::OCGraphic2d_SequenceOfBuffer^ Sub)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Split(Index, *((Graphic2d_SequenceOfBuffer*)Sub->Handle));
}

OCGraphic2d_Buffer^ OCGraphic2d_SequenceOfBuffer::Value(Standard_Integer Index)
{
  Handle(Graphic2d_Buffer) tmp = ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Value(Index);
  return gcnew OCGraphic2d_Buffer(&tmp);
}

 void OCGraphic2d_SequenceOfBuffer::SetValue(Standard_Integer Index, OCNaroWrappers::OCGraphic2d_Buffer^ I)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->SetValue(Index, *((Handle_Graphic2d_Buffer*)I->Handle));
}

OCGraphic2d_Buffer^ OCGraphic2d_SequenceOfBuffer::ChangeValue(Standard_Integer Index)
{
  Handle(Graphic2d_Buffer) tmp = ((Graphic2d_SequenceOfBuffer*)nativeHandle)->ChangeValue(Index);
  return gcnew OCGraphic2d_Buffer(&tmp);
}

 void OCGraphic2d_SequenceOfBuffer::Remove(Standard_Integer Index)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Remove(Index);
}

 void OCGraphic2d_SequenceOfBuffer::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Graphic2d_SequenceOfBuffer*)nativeHandle)->Remove(FromIndex, ToIndex);
}


