// File generated by CPPExt (CPP file)
//

#include "Graphic2d_Text.h"
#include "../Converter.h"
#include "Graphic2d_GraphicObject.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "Graphic2d_Drawer.h"


using namespace OCNaroWrappers;

OCGraphic2d_Text::OCGraphic2d_Text(Handle(Graphic2d_Text)* nativeHandle) : OCGraphic2d_Primitive((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Graphic2d_Text(*nativeHandle);
}

OCGraphic2d_Text::OCGraphic2d_Text(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, OCNaroWrappers::OCTCollection_ExtendedString^ aText, Standard_Real X, Standard_Real Y, Quantity_PlaneAngle anAngle, OCAspect_TypeOfText aType, Quantity_Factor aScale) : OCGraphic2d_Primitive((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Graphic2d_Text(new Graphic2d_Text(*((Handle_Graphic2d_GraphicObject*)aGraphicObject->Handle), *((TCollection_ExtendedString*)aText->Handle), X, Y, anAngle, (Aspect_TypeOfText)aType, aScale));
}

 void OCGraphic2d_Text::SetFontIndex(Standard_Integer anIndex)
{
  (*((Handle_Graphic2d_Text*)nativeHandle))->SetFontIndex(anIndex);
}

 void OCGraphic2d_Text::SetSlant(Quantity_PlaneAngle aSlant)
{
  (*((Handle_Graphic2d_Text*)nativeHandle))->SetSlant(aSlant);
}

 void OCGraphic2d_Text::SetZoomable(System::Boolean aFlag)
{
  (*((Handle_Graphic2d_Text*)nativeHandle))->SetZoomable(OCConverter::BooleanToStandardBoolean(aFlag));
}

 void OCGraphic2d_Text::SetOffset(Standard_Real aDx, Standard_Real aDy)
{
  (*((Handle_Graphic2d_Text*)nativeHandle))->SetOffset(aDx, aDy);
}

 void OCGraphic2d_Text::SetUnderline(System::Boolean isUnderlined)
{
  (*((Handle_Graphic2d_Text*)nativeHandle))->SetUnderline(OCConverter::BooleanToStandardBoolean(isUnderlined));
}

 void OCGraphic2d_Text::SetAlignment(OCGraphic2d_TypeOfAlignment anAlignment)
{
  (*((Handle_Graphic2d_Text*)nativeHandle))->SetAlignment((Graphic2d_TypeOfAlignment)anAlignment);
}

 System::Boolean OCGraphic2d_Text::Fit(Quantity_Length aWidth, Quantity_Length aHeight, System::Boolean Adjust, System::Boolean Expand)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_Text*)nativeHandle))->Fit(aWidth, aHeight, OCConverter::BooleanToStandardBoolean(Adjust), OCConverter::BooleanToStandardBoolean(Expand)));
}

 System::Boolean OCGraphic2d_Text::Trunc(Quantity_Length aWidth)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_Text*)nativeHandle))->Trunc(aWidth));
}

 System::Boolean OCGraphic2d_Text::IsZoomable()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_Text*)nativeHandle))->IsZoomable());
}

 System::Boolean OCGraphic2d_Text::IsUnderlined()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_Text*)nativeHandle))->IsUnderlined());
}

 System::Boolean OCGraphic2d_Text::TextSize(Quantity_Length& aWidth, Quantity_Length& aHeight)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_Text*)nativeHandle))->TextSize(aWidth, aHeight));
}

 System::Boolean OCGraphic2d_Text::TextSize(Quantity_Length& aWidth, Quantity_Length& aHeight, Quantity_Length& anXoffset, Quantity_Length& anYoffset)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic2d_Text*)nativeHandle))->TextSize(aWidth, aHeight, anXoffset, anYoffset));
}

 void OCGraphic2d_Text::Position(Quantity_Length& X, Quantity_Length& Y)
{
  (*((Handle_Graphic2d_Text*)nativeHandle))->Position(X, Y);
}

 void OCGraphic2d_Text::Offset(Standard_Real& X, Standard_Real& Y)
{
  (*((Handle_Graphic2d_Text*)nativeHandle))->Offset(X, Y);
}

 Quantity_PlaneAngle OCGraphic2d_Text::Slant()
{
  return (*((Handle_Graphic2d_Text*)nativeHandle))->Slant();
}

 Quantity_PlaneAngle OCGraphic2d_Text::Angle()
{
  return (*((Handle_Graphic2d_Text*)nativeHandle))->Angle();
}

 Standard_Integer OCGraphic2d_Text::FontIndex()
{
  return (*((Handle_Graphic2d_Text*)nativeHandle))->FontIndex();
}

 Quantity_Factor OCGraphic2d_Text::Scale()
{
  return (*((Handle_Graphic2d_Text*)nativeHandle))->Scale();
}

 OCGraphic2d_TypeOfAlignment OCGraphic2d_Text::Alignment()
{
  return (OCGraphic2d_TypeOfAlignment)((*((Handle_Graphic2d_Text*)nativeHandle))->Alignment());
}

OCTCollection_ExtendedString^ OCGraphic2d_Text::GetText()
{
  TCollection_ExtendedString* tmp = new TCollection_ExtendedString();
  *tmp = (*((Handle_Graphic2d_Text*)nativeHandle))->GetText();
  return gcnew OCTCollection_ExtendedString(tmp);
}

 OCAspect_TypeOfText OCGraphic2d_Text::GetType()
{
  return (OCAspect_TypeOfText)((*((Handle_Graphic2d_Text*)nativeHandle))->GetType());
}

 void OCGraphic2d_Text::Save(Aspect_FStream& aFStream)
{
  (*((Handle_Graphic2d_Text*)nativeHandle))->Save(aFStream);
}


