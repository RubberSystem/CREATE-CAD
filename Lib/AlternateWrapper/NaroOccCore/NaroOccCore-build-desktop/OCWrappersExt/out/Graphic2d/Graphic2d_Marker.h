// File generated by CPPExt (Transient)
//
#ifndef _Graphic2d_Marker_OCWrappers_HeaderFile
#define _Graphic2d_Marker_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic2d_Marker.hxx>
#include "../Converter.h"

#include "Graphic2d_Line.h"



namespace OCNaroWrappers
{

ref class OCGraphic2d_GraphicObject;
ref class OCGraphic2d_Drawer;


//! The primitive Marker <br>
public ref class OCGraphic2d_Marker : OCGraphic2d_Line {

protected:
  // dummy constructor;
  OCGraphic2d_Marker(OCDummy^) : OCGraphic2d_Line((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic2d_Marker(Handle(Graphic2d_Marker)* nativeHandle);

// Methods PUBLIC

//! Creates a pixel point marker at position <X>,<Y> <br>
OCGraphic2d_Marker(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, Quantity_Length X, Quantity_Length Y);

//! Creates the predefined marker index <anIndex> <br>
//!	    at position <X>,<Y> and size <aWidth>,<aHeight>. <br>
//!	    Angle is measured counterclockwise with 0 radian <br>
//!	    at 3 o'clock. <br>
OCGraphic2d_Marker(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, Standard_Integer anIndex, Quantity_Length X, Quantity_Length Y, Quantity_Length aWidth, Quantity_Length anHeight, Quantity_PlaneAngle anAngle);

//! returns the coordinates of the position of the marker <br>
 /*instead*/  void Position(Quantity_Length& X, Quantity_Length& Y) ;

//! returns the width and height of the marker <br>
 /*instead*/  void Size(Quantity_Length& aW, Quantity_Length& aH) ;

//! returns the index of marker in the map of markers <br>
 /*instead*/  Standard_Integer Index() ;

//! returns the angle of the marker <br>
 /*instead*/  Quantity_PlaneAngle Angle() ;


virtual /*instead*/  void Save(Aspect_FStream& aFStream) ;

~OCGraphic2d_Marker()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
