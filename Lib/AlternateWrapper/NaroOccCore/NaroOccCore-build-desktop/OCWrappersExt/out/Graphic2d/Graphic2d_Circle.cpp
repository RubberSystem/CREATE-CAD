// File generated by CPPExt (CPP file)
//

#include "Graphic2d_Circle.h"
#include "../Converter.h"
#include "Graphic2d_GraphicObject.h"
#include "Graphic2d_Drawer.h"


using namespace OCNaroWrappers;

OCGraphic2d_Circle::OCGraphic2d_Circle(Handle(Graphic2d_Circle)* nativeHandle) : OCGraphic2d_Line((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Graphic2d_Circle(*nativeHandle);
}

OCGraphic2d_Circle::OCGraphic2d_Circle(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, Quantity_Length X, Quantity_Length Y, Quantity_Length Radius) : OCGraphic2d_Line((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Graphic2d_Circle(new Graphic2d_Circle(*((Handle_Graphic2d_GraphicObject*)aGraphicObject->Handle), X, Y, Radius));
}

OCGraphic2d_Circle::OCGraphic2d_Circle(OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject, Quantity_Length X, Quantity_Length Y, Quantity_Length Radius, Quantity_PlaneAngle Alpha, Quantity_PlaneAngle Beta) : OCGraphic2d_Line((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Graphic2d_Circle(new Graphic2d_Circle(*((Handle_Graphic2d_GraphicObject*)aGraphicObject->Handle), X, Y, Radius, Alpha, Beta));
}

 void OCGraphic2d_Circle::Center(Quantity_Length& X, Quantity_Length& Y)
{
  (*((Handle_Graphic2d_Circle*)nativeHandle))->Center(X, Y);
}

 Quantity_Length OCGraphic2d_Circle::Radius()
{
  return (*((Handle_Graphic2d_Circle*)nativeHandle))->Radius();
}

 Quantity_PlaneAngle OCGraphic2d_Circle::FirstAngle()
{
  return (*((Handle_Graphic2d_Circle*)nativeHandle))->FirstAngle();
}

 Quantity_PlaneAngle OCGraphic2d_Circle::SecondAngle()
{
  return (*((Handle_Graphic2d_Circle*)nativeHandle))->SecondAngle();
}

 void OCGraphic2d_Circle::SetCenter(Quantity_Length X, Quantity_Length Y)
{
  (*((Handle_Graphic2d_Circle*)nativeHandle))->SetCenter(X, Y);
}

 void OCGraphic2d_Circle::SetRadius(Quantity_Length theR)
{
  (*((Handle_Graphic2d_Circle*)nativeHandle))->SetRadius(theR);
}

 void OCGraphic2d_Circle::SetAngles(Quantity_PlaneAngle Alpha, Quantity_PlaneAngle Beta)
{
  (*((Handle_Graphic2d_Circle*)nativeHandle))->SetAngles(Alpha, Beta);
}

 void OCGraphic2d_Circle::Save(Aspect_FStream& aFStream)
{
  (*((Handle_Graphic2d_Circle*)nativeHandle))->Save(aFStream);
}

 void OCGraphic2d_Circle::Retrieve(Aspect_IFStream& anIFStream, OCNaroWrappers::OCGraphic2d_GraphicObject^ aGraphicObject)
{
  Graphic2d_Circle::Retrieve(anIFStream, *((Handle_Graphic2d_GraphicObject*)aGraphicObject->Handle));
}


