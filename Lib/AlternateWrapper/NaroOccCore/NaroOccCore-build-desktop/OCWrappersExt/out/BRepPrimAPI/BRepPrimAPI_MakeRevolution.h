// File generated by CPPExt (MPV)
//
#ifndef _BRepPrimAPI_MakeRevolution_OCWrappers_HeaderFile
#define _BRepPrimAPI_MakeRevolution_OCWrappers_HeaderFile

// include native header
#include <BRepPrimAPI_MakeRevolution.hxx>
#include "../Converter.h"

#include "BRepPrimAPI_MakeOneAxis.h"

#include "../BRepPrim/BRepPrim_Revolution.h"
#include "BRepPrimAPI_MakeOneAxis.h"


namespace OCNaroWrappers
{

ref class OCGeom_Curve;
ref class OCgp_Ax2;
ref class OCBRepPrim_Revolution;


//! Describes functions to build revolved shapes. <br>
//! A MakeRevolution object provides a framework for: <br>
//! -   defining the construction of a revolved shape, <br>
//! -   implementing the construction algorithm, and <br>
//! -   consulting the result. <br>
public ref class OCBRepPrimAPI_MakeRevolution  : public OCBRepPrimAPI_MakeOneAxis {

protected:
  // dummy constructor;
  OCBRepPrimAPI_MakeRevolution(OCDummy^) : OCBRepPrimAPI_MakeOneAxis((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepPrimAPI_MakeRevolution(BRepPrimAPI_MakeRevolution* nativeHandle);

// Methods PUBLIC

//! Make a revolution body by rotating a curve around Z. <br>
OCBRepPrimAPI_MakeRevolution(OCNaroWrappers::OCGeom_Curve^ Meridian);

//! Make a revolution body by rotating a curve around Z. <br>
OCBRepPrimAPI_MakeRevolution(OCNaroWrappers::OCGeom_Curve^ Meridian, Standard_Real angle);

//! Make a revolution body by rotating a curve around Z. <br>
OCBRepPrimAPI_MakeRevolution(OCNaroWrappers::OCGeom_Curve^ Meridian, Standard_Real VMin, Standard_Real VMax);

//! Make a revolution body by rotating a curve around Z. <br>
OCBRepPrimAPI_MakeRevolution(OCNaroWrappers::OCGeom_Curve^ Meridian, Standard_Real VMin, Standard_Real VMax, Standard_Real angle);

//! Make a revolution body by rotating a curve around Z. <br>
OCBRepPrimAPI_MakeRevolution(OCNaroWrappers::OCgp_Ax2^ Axes, OCNaroWrappers::OCGeom_Curve^ Meridian);

//! Make a revolution body by rotating a curve around Z. <br>
OCBRepPrimAPI_MakeRevolution(OCNaroWrappers::OCgp_Ax2^ Axes, OCNaroWrappers::OCGeom_Curve^ Meridian, Standard_Real angle);

//! Make a revolution body by rotating a curve around Z. <br>
OCBRepPrimAPI_MakeRevolution(OCNaroWrappers::OCgp_Ax2^ Axes, OCNaroWrappers::OCGeom_Curve^ Meridian, Standard_Real VMin, Standard_Real VMax);

//! Make a revolution body by rotating a curve around Z. <br>//! For all algorithms the resulting shape is composed of <br>
//! -   a lateral revolved face, <br>
//! -   two planar faces in planes parallel to the plane z = <br>
//!   0, and passing by the extremities of the revolved <br>
//!   portion of Meridian, if these points are not on the Z <br>
//!   axis (in case of a complete revolved shape, these faces are circles), <br>
//! -   and in the case of a portion of a revolved shape, two <br>
//!   planar faces to close the shape (in the planes u = 0 and u = angle). <br>
OCBRepPrimAPI_MakeRevolution(OCNaroWrappers::OCgp_Ax2^ Axes, OCNaroWrappers::OCGeom_Curve^ Meridian, Standard_Real VMin, Standard_Real VMax, Standard_Real angle);

//! Returns the algorithm. <br>
 /*instead*/  Standard_Address OneAxis() ;

//! Returns the algorithm. <br>
//! <br>
 /*instead*/  OCBRepPrim_Revolution^ Revolution() ;

~OCBRepPrimAPI_MakeRevolution()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
