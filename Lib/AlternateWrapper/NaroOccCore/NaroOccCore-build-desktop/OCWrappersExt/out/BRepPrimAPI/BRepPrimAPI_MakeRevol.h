// File generated by CPPExt (MPV)
//
#ifndef _BRepPrimAPI_MakeRevol_OCWrappers_HeaderFile
#define _BRepPrimAPI_MakeRevol_OCWrappers_HeaderFile

// include native header
#include <BRepPrimAPI_MakeRevol.hxx>
#include "../Converter.h"

#include "BRepPrimAPI_MakeSweep.h"

#include "../BRepSweep/BRepSweep_Revol.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "BRepPrimAPI_MakeSweep.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCgp_Ax1;
ref class OCBRepSweep_Revol;
ref class OCTopTools_ListOfShape;


//! Class to make revolved sweep topologies. <br>
//! <br>
//!          a revolved sweep is defined by : <br>
//! <br>
//!          * A basis topology which is swept. <br>
//! <br>
//!            The   basis topology  must   not  contain solids <br>
//!            (neither composite solids.). <br>
//! <br>
//!            The basis topology  may be copied  or  shared in <br>
//!            the result. <br>
//! <br>
//!          * A rotation axis and angle : <br>
//! <br>
//!            - The axis is an Ax1 from gp. <br>
//! <br>
//!            - The angle is in [0, 2*Pi]. <br>
//! <br>
//!            - The angle default value is 2*Pi. <br>
//! <br>
//! <br>
//!          The result is a topology with a higher dimension : <br>
//! <br>
//!            - Vertex -> Edge. <br>
//!            - Edge   -> Face. <br>
//!            - Wire   -> Shell. <br>
//!            - Face   -> Solid. <br>
//!            - Shell  -> CompSolid. <br>
//! <br>
//!            Sweeping a Compound sweeps  the elements  of the <br>
//!            compound  and creates    a  compound with    the <br>
//!            results. <br>
//! <br>
public ref class OCBRepPrimAPI_MakeRevol  : public OCBRepPrimAPI_MakeSweep {

protected:
  // dummy constructor;
  OCBRepPrimAPI_MakeRevol(OCDummy^) : OCBRepPrimAPI_MakeSweep((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepPrimAPI_MakeRevol(BRepPrimAPI_MakeRevol* nativeHandle);

// Methods PUBLIC

//! Builds the Revol of base S, axis  A and angle  D. If C <br>
//!          is true, S is copied. <br>
OCBRepPrimAPI_MakeRevol(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCgp_Ax1^ A, Standard_Real D, System::Boolean Copy);

//! Builds the Revol of base S, axis  A and angle 2*Pi. If <br>
//!          C is true, S is copied. <br>
OCBRepPrimAPI_MakeRevol(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCgp_Ax1^ A, System::Boolean Copy);

//! Returns the internal sweeping algorithm. <br>
//! <br>
 /*instead*/  OCBRepSweep_Revol^ Revol() ;

//! Builds the resulting shape (redefined from MakeShape). <br>
virtual /*instead*/  void Build() override;

//! Returns the first shape of the revol  (coinciding with <br>
//!          the generating shape). <br>
 /*instead*/  OCTopoDS_Shape^ FirstShape() ;

//! Returns the TopoDS Shape of the end of the revol. <br>
 /*instead*/  OCTopoDS_Shape^ LastShape() ;


virtual /*instead*/  OCTopTools_ListOfShape^ Generated(OCNaroWrappers::OCTopoDS_Shape^ S) override;

//! Returns the TopoDS Shape of the beginning of the revolution, <br>
//!          generated with theShape  (subShape of the generating shape). <br>
 /*instead*/  OCTopoDS_Shape^ FirstShape(OCNaroWrappers::OCTopoDS_Shape^ theShape) ;

//! Returns the TopoDS Shape of the end of the revolution, <br>
//!          generated with  theShape (subShape of the  generating shape). <br>
 /*instead*/  OCTopoDS_Shape^ LastShape(OCNaroWrappers::OCTopoDS_Shape^ theShape) ;

//! Check if there are degenerated edges in the result. <br>
 /*instead*/  System::Boolean HasDegenerated() ;


 /*instead*/  OCTopTools_ListOfShape^ Degenerated() ;

~OCBRepPrimAPI_MakeRevol()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
