// File generated by CPPExt (MPV)
//
#ifndef _BRepPrimAPI_MakeCylinder_OCWrappers_HeaderFile
#define _BRepPrimAPI_MakeCylinder_OCWrappers_HeaderFile

// include native header
#include <BRepPrimAPI_MakeCylinder.hxx>
#include "../Converter.h"

#include "BRepPrimAPI_MakeOneAxis.h"

#include "../BRepPrim/BRepPrim_Cylinder.h"
#include "BRepPrimAPI_MakeOneAxis.h"


namespace OCNaroWrappers
{

ref class OCgp_Ax2;
ref class OCBRepPrim_Cylinder;


//! Describes functions to build cylinders or portions of  cylinders. <br>
//! A MakeCylinder object provides a framework for: <br>
//! -   defining the construction of a cylinder, <br>
//! -   implementing the construction algorithm, and <br>
//! -   consulting the result. <br>
public ref class OCBRepPrimAPI_MakeCylinder  : public OCBRepPrimAPI_MakeOneAxis {

protected:
  // dummy constructor;
  OCBRepPrimAPI_MakeCylinder(OCDummy^) : OCBRepPrimAPI_MakeOneAxis((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepPrimAPI_MakeCylinder(BRepPrimAPI_MakeCylinder* nativeHandle);

// Methods PUBLIC

//! Make a cylinder of radius R and length H. <br>
OCBRepPrimAPI_MakeCylinder(Standard_Real R, Standard_Real H);

//! Make a cylinder   of  radius R  and  length H with <br>
//!          angle  H. <br>
OCBRepPrimAPI_MakeCylinder(Standard_Real R, Standard_Real H, Standard_Real Angle);

//! Make a cylinder of radius R and length H. <br>
OCBRepPrimAPI_MakeCylinder(OCNaroWrappers::OCgp_Ax2^ Axes, Standard_Real R, Standard_Real H);

//! Make a cylinder   of  radius R  and  length H with <br>
//!          angle  H. <br>//! Constructs <br>
//! -   a cylinder of radius R and height H, or <br>
//! -   a portion of cylinder of radius R and height H, and of <br>
//!   the angle Angle defining the missing portion of the cylinder. <br>
//! The cylinder is constructed about the "Z Axis" of either: <br>
//! -   the global coordinate system, or <br>
//! -   the local coordinate system Axes. <br>
//! It is limited in this coordinate system as follows: <br>
//! -   in the v parametric direction (the Z axis), by the two <br>
//!   parameter values 0 and H, <br>
//! -   and in the u parametric direction (the rotation angle <br>
//!   around the Z Axis), in the case of a portion of a <br>
//!   cylinder, by the two parameter values 0 and Angle. <br>
//!   Angle is given in radians. <br>
//! The resulting shape is composed of: <br>
//! -   a lateral cylindrical face, <br>
//! -   two planar faces in the planes z = 0 and z = H <br>
//!   (in the case of a complete cylinder, these faces are circles), and <br>
//! -   in case of a portion of a cylinder, two additional <br>
//!   planar faces to close the shape.(two rectangles in the <br>
//!   planes u = 0 and u = Angle). <br>
//! Exceptions Standard_DomainError if: <br>
//! -   R is less than or equal to Precision::Confusion(), or <br>
//! -   H is less than or equal to Precision::Confusion(). <br>
OCBRepPrimAPI_MakeCylinder(OCNaroWrappers::OCgp_Ax2^ Axes, Standard_Real R, Standard_Real H, Standard_Real Angle);

//! Returns the algorithm. <br>
 /*instead*/  Standard_Address OneAxis() ;

//! Returns the algorithm. <br>
//! <br>
 /*instead*/  OCBRepPrim_Cylinder^ Cylinder() ;

~OCBRepPrimAPI_MakeCylinder()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
