// File generated by CPPExt (MPV)
//
#ifndef _CDF_Store_OCWrappers_HeaderFile
#define _CDF_Store_OCWrappers_HeaderFile

// include native header
#include <CDF_Store.hxx>
#include "../Converter.h"


#include "../TCollection/TCollection_ExtendedString.h"
#include "../PCDM/PCDM_StoreStatus.h"
#include "CDF_TryStoreStatus.h"
#include "CDF_StoreSetNameStatus.h"
#include "CDF_SubComponentStatus.h"


namespace OCNaroWrappers
{

ref class OCCDF_StoreList;
ref class OCCDM_Document;
ref class OCTCollection_ExtendedString;



public ref class OCCDF_Store  {

protected:
  CDF_Store* nativeHandle;
  OCCDF_Store(OCDummy^) {};

public:
  property CDF_Store* Handle
  {
    CDF_Store* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCCDF_Store(CDF_Store* nativeHandle);

// Methods PUBLIC

//! creates a store list  from the document of the current selection. <br>
//! <br>
OCCDF_Store(OCNaroWrappers::OCCDM_Document^ aDocument);

//! Checks will make the following control. Check must be used before <br>
//!          using Create method. Check will not be done twice by Create. <br>
//! <br>
//!          1) controls whether there is one document in the current selection. <br>
//!          2) controls whether there is a storage driver for the document. <br>
//!          3) controls whether the applicationdatatype associated with the driver <br>
//!             exists as metadata in the metadata manager (Design Manager for example). <br>
//!          4) controls whether there is a storage driver for each subcomponents <br>
//!             of the document if there are.  If the control fails for a subcomponent, <br>
//!             the control stops and name and type of this subcomponent can be get <br>
//!             with LastName method <br>
//!          5) controls whether the applicationdatatype associated with the driver of <br>
//!             each subcomponent exists as metadata in the metadata manager <br>
//!             (Design Manager for example). If the control fails for a subcomponent, <br>
//!             the control stops and name and type of this subcomponent can be get <br>
//!             with LastName method <br>
//! <br>
 /*instead*/  OCCDF_TryStoreStatus Check() ;

//! in the case of a subcomponent for which no storage driver exists, <br>
//!          returns the name of the subcomponent if there is one. <br>
 /*instead*/  System::String^ LastName() ;

//! returns the folder in which the current document will be stored. <br>
 /*instead*/  System::String^ Folder() ;

//! returns the name under which the current document will be stored <br>
 /*instead*/  System::String^ Name() ;

//! returns true if the current document is already stored <br>
 /*instead*/  System::Boolean IsStored() ;


 /*instead*/  System::Boolean IsModified() ;


 /*instead*/  System::Boolean CurrentIsConsistent() ;


 /*instead*/  System::Boolean IsConsistent() ;


 /*instead*/  System::Boolean HasAPreviousVersion() ;


 /*instead*/  System::String^ PreviousVersion() ;

//! returns true if the currentdocument is the main one, ie the document <br>
//!          of the current selection. <br>
 /*instead*/  System::Boolean IsMainDocument() ;

//! defines the   folder in which  the document  should be <br>
//!          stored.  returns  Standard_True if  the Folder exists, <br>
//!          Standard_False otherwise. <br>
 /*instead*/  System::Boolean SetFolder(OCNaroWrappers::OCTCollection_ExtendedString^ aFolder) ;

//! defines the name under which the document should be stored. <br>
 /*instead*/  OCCDF_StoreSetNameStatus SetName(System::String^ aName) ;


 /*instead*/  void SetComment(System::String^ aComment) ;


 /*instead*/  System::String^ Comment() ;

//! defines the name under which the document should be stored. <br>
//!          uses for example after modification of the folder. <br>
 /*instead*/  OCCDF_StoreSetNameStatus RecheckName() ;


 /*instead*/  System::Boolean SetPreviousVersion(System::String^ aPreviousVersion) ;


 /*instead*/  void Realize() ;

//! returns the complete path of the created meta-data. <br>
 /*instead*/  System::String^ Path() ;

//! returns the path of  the previous store is the object <br>
//!          is already stored, otherwise an empty string; <br>
 /*instead*/  System::String^ MetaDataPath() ;

//! returns the description of the format of the main object. <br>
 /*instead*/  System::String^ Description() ;

//! Allows to Start a new Iteration from beginning <br>
 /*instead*/  void InitComponent() ;

//! Returns True if there are more entries to return <br>
 /*instead*/  System::Boolean MoreComponent() ;

//! Go to the next entry <br>
//!           (if there is not, Value will raise an exception) <br>
 /*instead*/  void NextComponent() ;


 /*instead*/  void SetCurrent() ;

//! Returns item value of current entry <br>
 /*instead*/  System::String^ Component() ;


 /*instead*/  System::Boolean HasSubComponents() ;


 /*instead*/  OCCDF_SubComponentStatus SubComponentStatus(System::String^ aPresentation) ;


 /*instead*/  void SetCurrent(System::String^ aPresentation) ;

//!  the two following methods can <br>
//!           be used just after Realize  or Import --  method to know if <br>
//!           thes methods worked correctly, and if not why. <br>
 /*instead*/  void SetMain() ;


 /*instead*/  OCPCDM_StoreStatus StoreStatus() ;


 /*instead*/  System::String^ AssociatedStatusText() ;

//! defines the name under which the document should be stored. <br>
 /*instead*/  OCCDF_StoreSetNameStatus SetName(OCNaroWrappers::OCTCollection_ExtendedString^ aName) ;

//! defines the   folder in which  the document  should be <br>
//!          stored.  returns  Standard_True if  the Folder exists, <br>
//!          Standard_False otherwise. <br>
 /*instead*/  System::Boolean SetFolder(System::String^ aFolder) ;

~OCCDF_Store()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
