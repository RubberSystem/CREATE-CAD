// File generated by CPPExt (Transient)
//
#ifndef _CDF_Session_OCWrappers_HeaderFile
#define _CDF_Session_OCWrappers_HeaderFile

// include the wrapped class
#include <CDF_Session.hxx>
#include "../Converter.h"

#include "../Standard/Standard_Transient.h"



namespace OCNaroWrappers
{

ref class OCCDF_Directory;
ref class OCCDF_Application;
ref class OCCDF_MetaDataDriver;



public ref class OCCDF_Session : OCStandard_Transient {

protected:
  // dummy constructor;
  OCCDF_Session(OCDummy^) : OCStandard_Transient((OCDummy^)nullptr) {};

public:

// constructor from native
OCCDF_Session(Handle(CDF_Session)* nativeHandle);

// Methods PUBLIC


OCCDF_Session();

//! returns true if a session has been created. <br>
static /*instead*/  System::Boolean Exists() ;

//! returns the only one instance of Session <br>
//!          that has been created. <br>
static /*instead*/  OCCDF_Session^ CurrentSession() ;

//! returns the directory of the session; <br>
 /*instead*/  OCCDF_Directory^ Directory() ;


 /*instead*/  System::Boolean HasCurrentApplication() ;


 /*instead*/  OCCDF_Application^ CurrentApplication() ;


 /*instead*/  void SetCurrentApplication(OCNaroWrappers::OCCDF_Application^ anApplication) ;


 /*instead*/  void UnsetCurrentApplication() ;


 /*instead*/  OCCDF_MetaDataDriver^ MetaDataDriver() ;


 /*instead*/  void LoadDriver() ;

~OCCDF_Session()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
