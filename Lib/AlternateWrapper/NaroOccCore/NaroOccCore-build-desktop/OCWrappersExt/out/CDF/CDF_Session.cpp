// File generated by CPPExt (CPP file)
//

#include "CDF_Session.h"
#include "../Converter.h"
#include "CDF_Directory.h"
#include "CDF_Application.h"
#include "CDF_MetaDataDriver.h"


using namespace OCNaroWrappers;

OCCDF_Session::OCCDF_Session(Handle(CDF_Session)* nativeHandle) : OCStandard_Transient((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_CDF_Session(*nativeHandle);
}

OCCDF_Session::OCCDF_Session() : OCStandard_Transient((OCDummy^)nullptr)

{
  nativeHandle = new Handle_CDF_Session(new CDF_Session());
}

 System::Boolean OCCDF_Session::Exists()
{
  return OCConverter::StandardBooleanToBoolean(CDF_Session::Exists());
}

OCCDF_Session^ OCCDF_Session::CurrentSession()
{
  Handle(CDF_Session) tmp = CDF_Session::CurrentSession();
  return gcnew OCCDF_Session(&tmp);
}

OCCDF_Directory^ OCCDF_Session::Directory()
{
  Handle(CDF_Directory) tmp = (*((Handle_CDF_Session*)nativeHandle))->Directory();
  return gcnew OCCDF_Directory(&tmp);
}

 System::Boolean OCCDF_Session::HasCurrentApplication()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_CDF_Session*)nativeHandle))->HasCurrentApplication());
}

OCCDF_Application^ OCCDF_Session::CurrentApplication()
{
  Handle(CDF_Application) tmp = (*((Handle_CDF_Session*)nativeHandle))->CurrentApplication();
  return gcnew OCCDF_Application(&tmp);
}

 void OCCDF_Session::SetCurrentApplication(OCNaroWrappers::OCCDF_Application^ anApplication)
{
  (*((Handle_CDF_Session*)nativeHandle))->SetCurrentApplication(*((Handle_CDF_Application*)anApplication->Handle));
}

 void OCCDF_Session::UnsetCurrentApplication()
{
  (*((Handle_CDF_Session*)nativeHandle))->UnsetCurrentApplication();
}

OCCDF_MetaDataDriver^ OCCDF_Session::MetaDataDriver()
{
  Handle(CDF_MetaDataDriver) tmp = (*((Handle_CDF_Session*)nativeHandle))->MetaDataDriver();
  return gcnew OCCDF_MetaDataDriver(&tmp);
}

 void OCCDF_Session::LoadDriver()
{
  (*((Handle_CDF_Session*)nativeHandle))->LoadDriver();
}


