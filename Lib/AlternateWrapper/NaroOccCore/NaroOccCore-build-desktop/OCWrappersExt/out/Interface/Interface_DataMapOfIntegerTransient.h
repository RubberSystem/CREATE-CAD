// File generated by CPPExt (MPV)
//
#ifndef _Interface_DataMapOfIntegerTransient_OCWrappers_HeaderFile
#define _Interface_DataMapOfIntegerTransient_OCWrappers_HeaderFile

// include native header
#include <Interface_DataMapOfIntegerTransient.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCStandard_Transient;
ref class OCTColStd_MapIntegerHasher;
ref class OCInterface_DataMapNodeOfDataMapOfIntegerTransient;
ref class OCInterface_DataMapIteratorOfDataMapOfIntegerTransient;



public ref class OCInterface_DataMapOfIntegerTransient  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCInterface_DataMapOfIntegerTransient(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCInterface_DataMapOfIntegerTransient(Interface_DataMapOfIntegerTransient* nativeHandle);

// Methods PUBLIC


OCInterface_DataMapOfIntegerTransient(Standard_Integer NbBuckets);


 /*instead*/  OCInterface_DataMapOfIntegerTransient^ Assign(OCNaroWrappers::OCInterface_DataMapOfIntegerTransient^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(Standard_Integer K, OCNaroWrappers::OCStandard_Transient^ I) ;


 /*instead*/  System::Boolean IsBound(Standard_Integer K) ;


 /*instead*/  System::Boolean UnBind(Standard_Integer K) ;


 /*instead*/  OCStandard_Transient^ Find(Standard_Integer K) ;


 /*instead*/  OCStandard_Transient^ ChangeFind(Standard_Integer K) ;

~OCInterface_DataMapOfIntegerTransient()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
