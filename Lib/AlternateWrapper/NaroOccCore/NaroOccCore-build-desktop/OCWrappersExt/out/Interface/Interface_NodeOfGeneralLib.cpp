// File generated by CPPExt (CPP file)
//

#include "Interface_NodeOfGeneralLib.h"
#include "../Converter.h"
#include "Interface_GlobalNodeOfGeneralLib.h"
#include "../Standard/Standard_Transient.h"
#include "Interface_GeneralModule.h"
#include "Interface_Protocol.h"
#include "Interface_GeneralLib.h"


using namespace OCNaroWrappers;

OCInterface_NodeOfGeneralLib::OCInterface_NodeOfGeneralLib(Handle(Interface_NodeOfGeneralLib)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Interface_NodeOfGeneralLib(*nativeHandle);
}

OCInterface_NodeOfGeneralLib::OCInterface_NodeOfGeneralLib() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Interface_NodeOfGeneralLib(new Interface_NodeOfGeneralLib());
}

 void OCInterface_NodeOfGeneralLib::AddNode(OCNaroWrappers::OCInterface_GlobalNodeOfGeneralLib^ anode)
{
  (*((Handle_Interface_NodeOfGeneralLib*)nativeHandle))->AddNode(*((Handle_Interface_GlobalNodeOfGeneralLib*)anode->Handle));
}

OCInterface_GeneralModule^ OCInterface_NodeOfGeneralLib::Module()
{
  Handle(Interface_GeneralModule) tmp = (*((Handle_Interface_NodeOfGeneralLib*)nativeHandle))->Module();
  return gcnew OCInterface_GeneralModule(&tmp);
}

OCInterface_Protocol^ OCInterface_NodeOfGeneralLib::Protocol()
{
  Handle(Interface_Protocol) tmp = (*((Handle_Interface_NodeOfGeneralLib*)nativeHandle))->Protocol();
  return gcnew OCInterface_Protocol(&tmp);
}

OCInterface_NodeOfGeneralLib^ OCInterface_NodeOfGeneralLib::Next()
{
  Handle(Interface_NodeOfGeneralLib) tmp = (*((Handle_Interface_NodeOfGeneralLib*)nativeHandle))->Next();
  return gcnew OCInterface_NodeOfGeneralLib(&tmp);
}


