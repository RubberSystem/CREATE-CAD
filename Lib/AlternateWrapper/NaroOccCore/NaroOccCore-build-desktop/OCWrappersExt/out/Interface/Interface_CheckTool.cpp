// File generated by CPPExt (CPP file)
//

#include "Interface_CheckTool.h"
#include "../Converter.h"
#include "Interface_GTool.h"
#include "Interface_InterfaceModel.h"
#include "Interface_Protocol.h"
#include "Interface_Graph.h"
#include "Interface_HGraph.h"
#include "../Standard/Standard_Transient.h"
#include "Interface_ShareTool.h"
#include "Interface_Check.h"
#include "../Message/Message_Messenger.h"
#include "Interface_CheckIterator.h"
#include "Interface_EntityIterator.h"


using namespace OCNaroWrappers;

OCInterface_CheckTool::OCInterface_CheckTool(Interface_CheckTool* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCInterface_CheckTool::OCInterface_CheckTool(OCNaroWrappers::OCInterface_InterfaceModel^ model, OCNaroWrappers::OCInterface_Protocol^ protocol) 
{
  nativeHandle = new Interface_CheckTool(*((Handle_Interface_InterfaceModel*)model->Handle), *((Handle_Interface_Protocol*)protocol->Handle));
}

OCInterface_CheckTool::OCInterface_CheckTool(OCNaroWrappers::OCInterface_InterfaceModel^ model) 
{
  nativeHandle = new Interface_CheckTool(*((Handle_Interface_InterfaceModel*)model->Handle));
}

OCInterface_CheckTool::OCInterface_CheckTool(OCNaroWrappers::OCInterface_Graph^ graph) 
{
  nativeHandle = new Interface_CheckTool(*((Interface_Graph*)graph->Handle));
}

OCInterface_CheckTool::OCInterface_CheckTool(OCNaroWrappers::OCInterface_HGraph^ hgraph) 
{
  nativeHandle = new Interface_CheckTool(*((Handle_Interface_HGraph*)hgraph->Handle));
}

 void OCInterface_CheckTool::FillCheck(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_ShareTool^ sh, OCNaroWrappers::OCInterface_Check^ ach)
{
  ((Interface_CheckTool*)nativeHandle)->FillCheck(*((Handle_Standard_Transient*)ent->Handle), *((Interface_ShareTool*)sh->Handle), *((Handle_Interface_Check*)ach->Handle));
}

 void OCInterface_CheckTool::Print(OCNaroWrappers::OCInterface_Check^ ach, OCNaroWrappers::OCMessage_Messenger^ S)
{
  ((Interface_CheckTool*)nativeHandle)->Print(*((Handle_Interface_Check*)ach->Handle), *((Handle_Message_Messenger*)S->Handle));
}

 void OCInterface_CheckTool::Print(OCNaroWrappers::OCInterface_CheckIterator^ list, OCNaroWrappers::OCMessage_Messenger^ S)
{
  ((Interface_CheckTool*)nativeHandle)->Print(*((Interface_CheckIterator*)list->Handle), *((Handle_Message_Messenger*)S->Handle));
}

OCInterface_Check^ OCInterface_CheckTool::Check(Standard_Integer num)
{
  Handle(Interface_Check) tmp = ((Interface_CheckTool*)nativeHandle)->Check(num);
  return gcnew OCInterface_Check(&tmp);
}

 void OCInterface_CheckTool::CheckSuccess(System::Boolean reset)
{
  ((Interface_CheckTool*)nativeHandle)->CheckSuccess(OCConverter::BooleanToStandardBoolean(reset));
}

OCInterface_CheckIterator^ OCInterface_CheckTool::CompleteCheckList()
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = ((Interface_CheckTool*)nativeHandle)->CompleteCheckList();
  return gcnew OCInterface_CheckIterator(tmp);
}

OCInterface_CheckIterator^ OCInterface_CheckTool::CheckList()
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = ((Interface_CheckTool*)nativeHandle)->CheckList();
  return gcnew OCInterface_CheckIterator(tmp);
}

OCInterface_CheckIterator^ OCInterface_CheckTool::AnalyseCheckList()
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = ((Interface_CheckTool*)nativeHandle)->AnalyseCheckList();
  return gcnew OCInterface_CheckIterator(tmp);
}

OCInterface_CheckIterator^ OCInterface_CheckTool::VerifyCheckList()
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = ((Interface_CheckTool*)nativeHandle)->VerifyCheckList();
  return gcnew OCInterface_CheckIterator(tmp);
}

OCInterface_CheckIterator^ OCInterface_CheckTool::WarningCheckList()
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = ((Interface_CheckTool*)nativeHandle)->WarningCheckList();
  return gcnew OCInterface_CheckIterator(tmp);
}

OCInterface_EntityIterator^ OCInterface_CheckTool::UnknownEntities()
{
  Interface_EntityIterator* tmp = new Interface_EntityIterator();
  *tmp = ((Interface_CheckTool*)nativeHandle)->UnknownEntities();
  return gcnew OCInterface_EntityIterator(tmp);
}


