// File generated by CPPExt (MPV)
//
#ifndef _Interface_FileParameter_OCWrappers_HeaderFile
#define _Interface_FileParameter_OCWrappers_HeaderFile

// include native header
#include <Interface_FileParameter.hxx>
#include "../Converter.h"


#include "Interface_ParamType.h"


namespace OCNaroWrappers
{

ref class OCTCollection_AsciiString;


//! Auxiliary class to store a litteral parameter in a file <br>
//!           intermediate directory or in an UndefinedContent : a reference <br>
//!           type Parameter detains an Integer which is used to address a <br>
//!           record in the directory. <br>
//!           FileParameter is intended to be stored in a ParamSet : hence <br>
//!           memory management is performed by ParamSet, which calls Clear <br>
//!           to work, while the Destructor (see Destroy) does nothing. <br>
//!           Also a FileParameter can be read for consultation only, not to <br>
//!           be read from a Structure to be included into another one. <br>
public ref class OCInterface_FileParameter  {

protected:
  Interface_FileParameter* nativeHandle;
  OCInterface_FileParameter(OCDummy^) {};

public:
  property Interface_FileParameter* Handle
  {
    Interface_FileParameter* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCInterface_FileParameter(Interface_FileParameter* nativeHandle);

// Methods PUBLIC


OCInterface_FileParameter();

//! Fills fields (with Entity Number set to zero) <br>
 /*instead*/  void Init(OCNaroWrappers::OCTCollection_AsciiString^ val, OCInterface_ParamType typ) ;

//! Same as above, but builds the Value from a CString <br>
 /*instead*/  void Init(System::String^ val, OCInterface_ParamType typ) ;

//! Same as above, but as a CString (for immediate exploitation) <br>
//! was C++ : return const <br>
 /*instead*/  System::String^ CValue() ;

//! Returns the type of the parameter <br>
 /*instead*/  OCInterface_ParamType ParamType() ;

//! Allows to set a reference to an Entity in a numbered list <br>
 /*instead*/  void SetEntityNumber(Standard_Integer num) ;

//! Returns value set by SetEntityNumber <br>
 /*instead*/  Standard_Integer EntityNumber() ;

//! Clears stored data : frees memory taken for the String Value <br>
 /*instead*/  void Clear() ;

~OCInterface_FileParameter()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
