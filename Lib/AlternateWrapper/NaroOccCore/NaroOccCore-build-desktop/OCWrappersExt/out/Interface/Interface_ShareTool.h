// File generated by CPPExt (MPV)
//
#ifndef _Interface_ShareTool_OCWrappers_HeaderFile
#define _Interface_ShareTool_OCWrappers_HeaderFile

// include native header
#include <Interface_ShareTool.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCInterface_HGraph;
ref class OCInterface_InterfaceModel;
ref class OCInterface_GeneralLib;
ref class OCInterface_GTool;
ref class OCInterface_Protocol;
ref class OCInterface_Graph;
ref class OCInterface_EntityIterator;
ref class OCStandard_Transient;
ref class OCStandard_Type;
ref class OCMessage_Messenger;


//! Builds the Graph of Dependancies, from the General Service <br>
//!           "Shared" -> builds for each Entity of a Model, the Shared and <br>
//!           Sharing Lists, and gives access to them. <br>
//!           Allows to complete with Implied References (which are not <br>
//!           regarded as Shared Entities, but are nevertheless Referenced), <br>
//!           this can be usefull for Reference Checking <br>
public ref class OCInterface_ShareTool  {

protected:
  Interface_ShareTool* nativeHandle;
  OCInterface_ShareTool(OCDummy^) {};

public:
  property Interface_ShareTool* Handle
  {
    Interface_ShareTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCInterface_ShareTool(Interface_ShareTool* nativeHandle);

// Methods PUBLIC

//! Creates a ShareTool from a Model and builds all required data, <br>
//!           by calling the General Service Library and Modules <br>
//!           (GeneralLib given as an argument) <br>
OCInterface_ShareTool(OCNaroWrappers::OCInterface_InterfaceModel^ amodel, OCNaroWrappers::OCInterface_GeneralLib^ lib);

//! Same a above, but GeneralLib is detained by a GTool <br>
OCInterface_ShareTool(OCNaroWrappers::OCInterface_InterfaceModel^ amodel, OCNaroWrappers::OCInterface_GTool^ gtool);

//! Same a above, but GeneralLib is defined through a Protocol <br>
//!           Protocol is used to build the working library <br>
OCInterface_ShareTool(OCNaroWrappers::OCInterface_InterfaceModel^ amodel, OCNaroWrappers::OCInterface_Protocol^ protocol);

//! Same as above, but works with the GTool of the Model <br>
OCInterface_ShareTool(OCNaroWrappers::OCInterface_InterfaceModel^ amodel);

//! Creates a ShareTool from an already defined Graph <br>
//!           Remark that the data of the Graph are copied <br>
OCInterface_ShareTool(OCNaroWrappers::OCInterface_Graph^ agraph);

//! Completes the Graph by Adding Implied References. Hence, they <br>
//!           are considered as Sharing References in all the other queries <br>
OCInterface_ShareTool(OCNaroWrappers::OCInterface_HGraph^ ahgraph);

//! Returns the Model used for Creation (directly or for Graph) <br>
 /*instead*/  OCInterface_InterfaceModel^ Model() ;

//! Returns the data used by the ShareTool to work <br>
//!           Can then be used directly (read only) <br>
 /*instead*/  OCInterface_Graph^ Graph() ;

//! Returns the Entities which are not Shared (their Sharing List <br>
//!           is empty) in the Model <br>
 /*instead*/  OCInterface_EntityIterator^ RootEntities() ;

//! Returns True if <ent> is Shared by other Entities in the Model <br>
 /*instead*/  System::Boolean IsShared(OCNaroWrappers::OCStandard_Transient^ ent) ;

//! Returns the List of Entities Shared by a given Entity <ent> <br>
 /*instead*/  OCInterface_EntityIterator^ Shareds(OCNaroWrappers::OCStandard_Transient^ ent) ;

//! Returns the List of Entities Sharing a given Entity <ent> <br>
 /*instead*/  OCInterface_EntityIterator^ Sharings(OCNaroWrappers::OCStandard_Transient^ ent) ;

//! Returns the count of Sharing Entities of an Entity, which <br>
//!           are Kind of a given Type <br>
 /*instead*/  Standard_Integer NbTypedSharings(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCStandard_Type^ atype) ;

//! Returns the Sharing Entity of an Entity, which is Kind of a <br>
//!           given Type. Allows to access a Sharing Entity of a given type <br>
//!           when there is one and only one (current case) <br>
 /*instead*/  OCStandard_Transient^ TypedSharing(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCStandard_Type^ atype) ;

//! Returns the complete list of entities shared by <ent> at any <br>
//!           level, including <ent> itself <br>
//!           If <ent> is the Model, considers the concatenation of <br>
//!           AllShared for each root <br>
//!           If <rootlast> is True (D), the list starts with lower level <br>
//!           entities and ends by the root. Else, the root is first and <br>
//!           the lower level entities are at end <br>
 /*instead*/  OCInterface_EntityIterator^ All(OCNaroWrappers::OCStandard_Transient^ ent, System::Boolean rootlast) ;

//! Utility method which Prints the content of an iterator <br>
//!           (by their Numbers) <br>
 /*instead*/  void Print(OCNaroWrappers::OCInterface_EntityIterator^ iter, OCNaroWrappers::OCMessage_Messenger^ S) ;

~OCInterface_ShareTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
