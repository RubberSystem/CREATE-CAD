// File generated by CPPExt (CPP file)
//

#include "Interface_GeneralModule.h"
#include "../Converter.h"
#include "Interface_InterfaceModel.h"
#include "../Standard/Standard_Transient.h"
#include "Interface_EntityIterator.h"
#include "Interface_ShareTool.h"
#include "Interface_Check.h"
#include "Interface_CopyTool.h"
#include "../TCollection/TCollection_HAsciiString.h"


using namespace OCNaroWrappers;

OCInterface_GeneralModule::OCInterface_GeneralModule(Handle(Interface_GeneralModule)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Interface_GeneralModule(*nativeHandle);
}

 void OCInterface_GeneralModule::FillShared(OCNaroWrappers::OCInterface_InterfaceModel^ model, Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_EntityIterator^ iter)
{
  (*((Handle_Interface_GeneralModule*)nativeHandle))->FillShared(*((Handle_Interface_InterfaceModel*)model->Handle), CN, *((Handle_Standard_Transient*)ent->Handle), *((Interface_EntityIterator*)iter->Handle));
}

 void OCInterface_GeneralModule::Share(OCNaroWrappers::OCInterface_EntityIterator^ iter, OCNaroWrappers::OCStandard_Transient^ shared)
{
  (*((Handle_Interface_GeneralModule*)nativeHandle))->Share(*((Interface_EntityIterator*)iter->Handle), *((Handle_Standard_Transient*)shared->Handle));
}

 void OCInterface_GeneralModule::ListImplied(OCNaroWrappers::OCInterface_InterfaceModel^ model, Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_EntityIterator^ iter)
{
  (*((Handle_Interface_GeneralModule*)nativeHandle))->ListImplied(*((Handle_Interface_InterfaceModel*)model->Handle), CN, *((Handle_Standard_Transient*)ent->Handle), *((Interface_EntityIterator*)iter->Handle));
}

 void OCInterface_GeneralModule::ListImpliedCase(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_EntityIterator^ iter)
{
  (*((Handle_Interface_GeneralModule*)nativeHandle))->ListImpliedCase(CN, *((Handle_Standard_Transient*)ent->Handle), *((Interface_EntityIterator*)iter->Handle));
}

 System::Boolean OCInterface_GeneralModule::CanCopy(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Interface_GeneralModule*)nativeHandle))->CanCopy(CN, *((Handle_Standard_Transient*)ent->Handle)));
}

 System::Boolean OCInterface_GeneralModule::Dispatch(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ entfrom, OCNaroWrappers::OCStandard_Transient^ entto, OCNaroWrappers::OCInterface_CopyTool^ TC)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Interface_GeneralModule*)nativeHandle))->Dispatch(CN, *((Handle_Standard_Transient*)entfrom->Handle), *((Handle_Standard_Transient*)entto->Handle), *((Interface_CopyTool*)TC->Handle)));
}

 System::Boolean OCInterface_GeneralModule::NewCopiedCase(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ entfrom, OCNaroWrappers::OCStandard_Transient^ entto, OCNaroWrappers::OCInterface_CopyTool^ TC)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Interface_GeneralModule*)nativeHandle))->NewCopiedCase(CN, *((Handle_Standard_Transient*)entfrom->Handle), *((Handle_Standard_Transient*)entto->Handle), *((Interface_CopyTool*)TC->Handle)));
}

 void OCInterface_GeneralModule::RenewImpliedCase(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ entfrom, OCNaroWrappers::OCStandard_Transient^ entto, OCNaroWrappers::OCInterface_CopyTool^ TC)
{
  (*((Handle_Interface_GeneralModule*)nativeHandle))->RenewImpliedCase(CN, *((Handle_Standard_Transient*)entfrom->Handle), *((Handle_Standard_Transient*)entto->Handle), *((Interface_CopyTool*)TC->Handle));
}

 void OCInterface_GeneralModule::WhenDeleteCase(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent, System::Boolean dispatched)
{
  (*((Handle_Interface_GeneralModule*)nativeHandle))->WhenDeleteCase(CN, *((Handle_Standard_Transient*)ent->Handle), OCConverter::BooleanToStandardBoolean(dispatched));
}

 Standard_Integer OCInterface_GeneralModule::CategoryNumber(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_ShareTool^ shares)
{
  return (*((Handle_Interface_GeneralModule*)nativeHandle))->CategoryNumber(CN, *((Handle_Standard_Transient*)ent->Handle), *((Interface_ShareTool*)shares->Handle));
}

OCTCollection_HAsciiString^ OCInterface_GeneralModule::Name(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_ShareTool^ shares)
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_Interface_GeneralModule*)nativeHandle))->Name(CN, *((Handle_Standard_Transient*)ent->Handle), *((Interface_ShareTool*)shares->Handle));
  return gcnew OCTCollection_HAsciiString(&tmp);
}


