// File generated by CPPExt (CPP file)
//

#include "Interface_EntityIterator.h"
#include "../Converter.h"
#include "Interface_IntVal.h"
#include "../TColStd/TColStd_HSequenceOfTransient.h"
#include "../Standard/Standard_Transient.h"
#include "../Standard/Standard_Type.h"


using namespace OCNaroWrappers;

OCInterface_EntityIterator::OCInterface_EntityIterator(Interface_EntityIterator* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCInterface_EntityIterator::OCInterface_EntityIterator() 
{
  nativeHandle = new Interface_EntityIterator();
}

OCInterface_EntityIterator::OCInterface_EntityIterator(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list) 
{
  nativeHandle = new Interface_EntityIterator(*((Handle_TColStd_HSequenceOfTransient*)list->Handle));
}

 void OCInterface_EntityIterator::AddList(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list)
{
  ((Interface_EntityIterator*)nativeHandle)->AddList(*((Handle_TColStd_HSequenceOfTransient*)list->Handle));
}

 void OCInterface_EntityIterator::AddItem(OCNaroWrappers::OCStandard_Transient^ anentity)
{
  ((Interface_EntityIterator*)nativeHandle)->AddItem(*((Handle_Standard_Transient*)anentity->Handle));
}

 void OCInterface_EntityIterator::GetOneItem(OCNaroWrappers::OCStandard_Transient^ anentity)
{
  ((Interface_EntityIterator*)nativeHandle)->GetOneItem(*((Handle_Standard_Transient*)anentity->Handle));
}

 void OCInterface_EntityIterator::SelectType(OCNaroWrappers::OCStandard_Type^ atype, System::Boolean keep)
{
  ((Interface_EntityIterator*)nativeHandle)->SelectType(*((Handle_Standard_Type*)atype->Handle), OCConverter::BooleanToStandardBoolean(keep));
}

 Standard_Integer OCInterface_EntityIterator::NbEntities()
{
  return ((Interface_EntityIterator*)nativeHandle)->NbEntities();
}

 Standard_Integer OCInterface_EntityIterator::NbTyped(OCNaroWrappers::OCStandard_Type^ type)
{
  return ((Interface_EntityIterator*)nativeHandle)->NbTyped(*((Handle_Standard_Type*)type->Handle));
}

OCInterface_EntityIterator^ OCInterface_EntityIterator::Typed(OCNaroWrappers::OCStandard_Type^ type)
{
  Interface_EntityIterator* tmp = new Interface_EntityIterator();
  *tmp = ((Interface_EntityIterator*)nativeHandle)->Typed(*((Handle_Standard_Type*)type->Handle));
  return gcnew OCInterface_EntityIterator(tmp);
}

 void OCInterface_EntityIterator::Start()
{
  ((Interface_EntityIterator*)nativeHandle)->Start();
}

 System::Boolean OCInterface_EntityIterator::More()
{
  return OCConverter::StandardBooleanToBoolean(((Interface_EntityIterator*)nativeHandle)->More());
}

 void OCInterface_EntityIterator::Next()
{
  ((Interface_EntityIterator*)nativeHandle)->Next();
}

OCStandard_Transient^ OCInterface_EntityIterator::Value()
{
  Handle(Standard_Transient) tmp = ((Interface_EntityIterator*)nativeHandle)->Value();
  return gcnew OCStandard_Transient(&tmp);
}

OCTColStd_HSequenceOfTransient^ OCInterface_EntityIterator::Content()
{
  Handle(TColStd_HSequenceOfTransient) tmp = ((Interface_EntityIterator*)nativeHandle)->Content();
  return gcnew OCTColStd_HSequenceOfTransient(&tmp);
}

 void OCInterface_EntityIterator::Destroy()
{
  ((Interface_EntityIterator*)nativeHandle)->Destroy();
}


