// File generated by CPPExt (CPP file)
//

#include "Interface_FileReaderData.h"
#include "../Converter.h"
#include "Interface_ParamSet.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "Interface_FileParameter.h"
#include "Interface_ParamList.h"
#include "../Standard/Standard_Transient.h"


using namespace OCNaroWrappers;

OCInterface_FileReaderData::OCInterface_FileReaderData(Handle(Interface_FileReaderData)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Interface_FileReaderData(*nativeHandle);
}

OCInterface_FileReaderData::OCInterface_FileReaderData(Standard_Integer nbr, Standard_Integer npar) : OCMMgt_TShared((OCDummy^)nullptr)

{}

 Standard_Integer OCInterface_FileReaderData::NbRecords()
{
  return (*((Handle_Interface_FileReaderData*)nativeHandle))->NbRecords();
}

 Standard_Integer OCInterface_FileReaderData::NbEntities()
{
  return (*((Handle_Interface_FileReaderData*)nativeHandle))->NbEntities();
}

 void OCInterface_FileReaderData::InitParams(Standard_Integer num)
{
  (*((Handle_Interface_FileReaderData*)nativeHandle))->InitParams(num);
}

 void OCInterface_FileReaderData::AddParam(Standard_Integer num, System::String^ aval, OCInterface_ParamType atype, Standard_Integer nument)
{
  (*((Handle_Interface_FileReaderData*)nativeHandle))->AddParam(num, OCConverter::StringToStandardCString(aval), (Interface_ParamType)atype, nument);
}

 void OCInterface_FileReaderData::AddParam(Standard_Integer num, OCNaroWrappers::OCTCollection_AsciiString^ aval, OCInterface_ParamType atype, Standard_Integer nument)
{
  (*((Handle_Interface_FileReaderData*)nativeHandle))->AddParam(num, *((TCollection_AsciiString*)aval->Handle), (Interface_ParamType)atype, nument);
}

 void OCInterface_FileReaderData::AddParam(Standard_Integer num, OCNaroWrappers::OCInterface_FileParameter^ FP)
{
  (*((Handle_Interface_FileReaderData*)nativeHandle))->AddParam(num, *((Interface_FileParameter*)FP->Handle));
}

 void OCInterface_FileReaderData::SetParam(Standard_Integer num, Standard_Integer nump, OCNaroWrappers::OCInterface_FileParameter^ FP)
{
  (*((Handle_Interface_FileReaderData*)nativeHandle))->SetParam(num, nump, *((Interface_FileParameter*)FP->Handle));
}

 Standard_Integer OCInterface_FileReaderData::NbParams(Standard_Integer num)
{
  return (*((Handle_Interface_FileReaderData*)nativeHandle))->NbParams(num);
}

OCInterface_ParamList^ OCInterface_FileReaderData::Params(Standard_Integer num)
{
  Handle(Interface_ParamList) tmp = (*((Handle_Interface_FileReaderData*)nativeHandle))->Params(num);
  return gcnew OCInterface_ParamList(&tmp);
}

OCInterface_FileParameter^ OCInterface_FileReaderData::Param(Standard_Integer num, Standard_Integer nump)
{
  Interface_FileParameter* tmp = new Interface_FileParameter();
  *tmp = (*((Handle_Interface_FileReaderData*)nativeHandle))->Param(num, nump);
  return gcnew OCInterface_FileParameter(tmp);
}

OCInterface_FileParameter^ OCInterface_FileReaderData::ChangeParam(Standard_Integer num, Standard_Integer nump)
{
  Interface_FileParameter* tmp = new Interface_FileParameter();
  *tmp = (*((Handle_Interface_FileReaderData*)nativeHandle))->ChangeParam(num, nump);
  return gcnew OCInterface_FileParameter(tmp);
}

 OCInterface_ParamType OCInterface_FileReaderData::ParamType(Standard_Integer num, Standard_Integer nump)
{
  return (OCInterface_ParamType)((*((Handle_Interface_FileReaderData*)nativeHandle))->ParamType(num, nump));
}

 System::String^ OCInterface_FileReaderData::ParamCValue(Standard_Integer num, Standard_Integer nump)
{
  return OCConverter::StandardCStringToString((*((Handle_Interface_FileReaderData*)nativeHandle))->ParamCValue(num, nump));
}

 System::Boolean OCInterface_FileReaderData::IsParamDefined(Standard_Integer num, Standard_Integer nump)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Interface_FileReaderData*)nativeHandle))->IsParamDefined(num, nump));
}

 Standard_Integer OCInterface_FileReaderData::ParamNumber(Standard_Integer num, Standard_Integer nump)
{
  return (*((Handle_Interface_FileReaderData*)nativeHandle))->ParamNumber(num, nump);
}

OCStandard_Transient^ OCInterface_FileReaderData::ParamEntity(Standard_Integer num, Standard_Integer nump)
{
  Handle(Standard_Transient) tmp = (*((Handle_Interface_FileReaderData*)nativeHandle))->ParamEntity(num, nump);
  return gcnew OCStandard_Transient(&tmp);
}

 Standard_Integer OCInterface_FileReaderData::ParamFirstRank(Standard_Integer num)
{
  return (*((Handle_Interface_FileReaderData*)nativeHandle))->ParamFirstRank(num);
}

OCStandard_Transient^ OCInterface_FileReaderData::BoundEntity(Standard_Integer num)
{
  Handle(Standard_Transient) tmp = (*((Handle_Interface_FileReaderData*)nativeHandle))->BoundEntity(num);
  return gcnew OCStandard_Transient(&tmp);
}

 void OCInterface_FileReaderData::BindEntity(Standard_Integer num, OCNaroWrappers::OCStandard_Transient^ ent)
{
  (*((Handle_Interface_FileReaderData*)nativeHandle))->BindEntity(num, *((Handle_Standard_Transient*)ent->Handle));
}

 void OCInterface_FileReaderData::SetErrorLoad(System::Boolean val)
{
  (*((Handle_Interface_FileReaderData*)nativeHandle))->SetErrorLoad(OCConverter::BooleanToStandardBoolean(val));
}

 System::Boolean OCInterface_FileReaderData::IsErrorLoad()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Interface_FileReaderData*)nativeHandle))->IsErrorLoad());
}

 System::Boolean OCInterface_FileReaderData::ResetErrorLoad()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Interface_FileReaderData*)nativeHandle))->ResetErrorLoad());
}

 Standard_Real OCInterface_FileReaderData::Fastof(System::String^ str)
{
  return Interface_FileReaderData::Fastof(OCConverter::StringToStandardCString(str));
}


