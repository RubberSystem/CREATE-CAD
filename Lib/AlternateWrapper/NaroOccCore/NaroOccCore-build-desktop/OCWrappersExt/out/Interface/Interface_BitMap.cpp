// File generated by CPPExt (CPP file)
//

#include "Interface_BitMap.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HArray1OfInteger.h"
#include "../TColStd/TColStd_HSequenceOfAsciiString.h"


using namespace OCNaroWrappers;

OCInterface_BitMap::OCInterface_BitMap(Interface_BitMap* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCInterface_BitMap::OCInterface_BitMap() 
{
  nativeHandle = new Interface_BitMap();
}

OCInterface_BitMap::OCInterface_BitMap(Standard_Integer nbitems, Standard_Integer resflags) 
{
  nativeHandle = new Interface_BitMap(nbitems, resflags);
}

 void OCInterface_BitMap::Initialize(Standard_Integer nbitems, Standard_Integer resflags)
{
  ((Interface_BitMap*)nativeHandle)->Initialize(nbitems, resflags);
}

OCInterface_BitMap::OCInterface_BitMap(OCNaroWrappers::OCInterface_BitMap^ other, System::Boolean copied) 
{
  nativeHandle = new Interface_BitMap(*((Interface_BitMap*)other->Handle), OCConverter::BooleanToStandardBoolean(copied));
}

 void OCInterface_BitMap::Initialize(OCNaroWrappers::OCInterface_BitMap^ other, System::Boolean copied)
{
  ((Interface_BitMap*)nativeHandle)->Initialize(*((Interface_BitMap*)other->Handle), OCConverter::BooleanToStandardBoolean(copied));
}

 void OCInterface_BitMap::Internals(Standard_Integer& nbitems, Standard_Integer& nbwords, Standard_Integer& nbflags, OCNaroWrappers::OCTColStd_HArray1OfInteger^ flags, OCNaroWrappers::OCTColStd_HSequenceOfAsciiString^ names)
{
  ((Interface_BitMap*)nativeHandle)->Internals(nbitems, nbwords, nbflags, *((Handle_TColStd_HArray1OfInteger*)flags->Handle), *((Handle_TColStd_HSequenceOfAsciiString*)names->Handle));
}

 void OCInterface_BitMap::Reservate(Standard_Integer moreflags)
{
  ((Interface_BitMap*)nativeHandle)->Reservate(moreflags);
}

 void OCInterface_BitMap::SetLength(Standard_Integer nbitems)
{
  ((Interface_BitMap*)nativeHandle)->SetLength(nbitems);
}

 Standard_Integer OCInterface_BitMap::AddFlag(System::String^ name)
{
  return ((Interface_BitMap*)nativeHandle)->AddFlag(OCConverter::StringToStandardCString(name));
}

 Standard_Integer OCInterface_BitMap::AddSomeFlags(Standard_Integer more)
{
  return ((Interface_BitMap*)nativeHandle)->AddSomeFlags(more);
}

 System::Boolean OCInterface_BitMap::RemoveFlag(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_BitMap*)nativeHandle)->RemoveFlag(num));
}

 System::Boolean OCInterface_BitMap::SetFlagName(Standard_Integer num, System::String^ name)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_BitMap*)nativeHandle)->SetFlagName(num, OCConverter::StringToStandardCString(name)));
}

 Standard_Integer OCInterface_BitMap::NbFlags()
{
  return ((Interface_BitMap*)nativeHandle)->NbFlags();
}

 Standard_Integer OCInterface_BitMap::Length()
{
  return ((Interface_BitMap*)nativeHandle)->Length();
}

 System::String^ OCInterface_BitMap::FlagName(Standard_Integer num)
{
  return OCConverter::StandardCStringToString(((Interface_BitMap*)nativeHandle)->FlagName(num));
}

 Standard_Integer OCInterface_BitMap::FlagNumber(System::String^ name)
{
  return ((Interface_BitMap*)nativeHandle)->FlagNumber(OCConverter::StringToStandardCString(name));
}

 System::Boolean OCInterface_BitMap::Value(Standard_Integer item, Standard_Integer flag)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_BitMap*)nativeHandle)->Value(item, flag));
}

 void OCInterface_BitMap::SetValue(Standard_Integer item, System::Boolean val, Standard_Integer flag)
{
  ((Interface_BitMap*)nativeHandle)->SetValue(item, OCConverter::BooleanToStandardBoolean(val), flag);
}

 void OCInterface_BitMap::SetTrue(Standard_Integer item, Standard_Integer flag)
{
  ((Interface_BitMap*)nativeHandle)->SetTrue(item, flag);
}

 void OCInterface_BitMap::SetFalse(Standard_Integer item, Standard_Integer flag)
{
  ((Interface_BitMap*)nativeHandle)->SetFalse(item, flag);
}

 System::Boolean OCInterface_BitMap::CTrue(Standard_Integer item, Standard_Integer flag)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_BitMap*)nativeHandle)->CTrue(item, flag));
}

 System::Boolean OCInterface_BitMap::CFalse(Standard_Integer item, Standard_Integer flag)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_BitMap*)nativeHandle)->CFalse(item, flag));
}

 void OCInterface_BitMap::Init(System::Boolean val, Standard_Integer flag)
{
  ((Interface_BitMap*)nativeHandle)->Init(OCConverter::BooleanToStandardBoolean(val), flag);
}

 void OCInterface_BitMap::Clear()
{
  ((Interface_BitMap*)nativeHandle)->Clear();
}


