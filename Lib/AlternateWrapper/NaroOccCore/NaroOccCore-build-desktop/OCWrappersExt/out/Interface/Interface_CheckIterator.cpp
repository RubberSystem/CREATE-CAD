// File generated by CPPExt (CPP file)
//

#include "Interface_CheckIterator.h"
#include "../Converter.h"
#include "Interface_HSequenceOfCheck.h"
#include "../TColStd/TColStd_HSequenceOfInteger.h"
#include "Interface_InterfaceModel.h"
#include "Interface_IntVal.h"
#include "Interface_Check.h"
#include "../Standard/Standard_Transient.h"
#include "../TColStd/TColStd_HSequenceOfTransient.h"
#include "../Message/Message_Messenger.h"


using namespace OCNaroWrappers;

OCInterface_CheckIterator::OCInterface_CheckIterator(Interface_CheckIterator* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCInterface_CheckIterator::OCInterface_CheckIterator() 
{
  nativeHandle = new Interface_CheckIterator();
}

OCInterface_CheckIterator::OCInterface_CheckIterator(System::String^ name) 
{
  nativeHandle = new Interface_CheckIterator(OCConverter::StringToStandardCString(name));
}

 void OCInterface_CheckIterator::SetName(System::String^ name)
{
  ((Interface_CheckIterator*)nativeHandle)->SetName(OCConverter::StringToStandardCString(name));
}

 System::String^ OCInterface_CheckIterator::Name()
{
  return OCConverter::StandardCStringToString(((Interface_CheckIterator*)nativeHandle)->Name());
}

 void OCInterface_CheckIterator::SetModel(OCNaroWrappers::OCInterface_InterfaceModel^ model)
{
  ((Interface_CheckIterator*)nativeHandle)->SetModel(*((Handle_Interface_InterfaceModel*)model->Handle));
}

OCInterface_InterfaceModel^ OCInterface_CheckIterator::Model()
{
  Handle(Interface_InterfaceModel) tmp = ((Interface_CheckIterator*)nativeHandle)->Model();
  return gcnew OCInterface_InterfaceModel(&tmp);
}

 void OCInterface_CheckIterator::Clear()
{
  ((Interface_CheckIterator*)nativeHandle)->Clear();
}

 void OCInterface_CheckIterator::Merge(OCNaroWrappers::OCInterface_CheckIterator^ other)
{
  ((Interface_CheckIterator*)nativeHandle)->Merge(*((Interface_CheckIterator*)other->Handle));
}

 void OCInterface_CheckIterator::Add(OCNaroWrappers::OCInterface_Check^ ach, Standard_Integer num)
{
  ((Interface_CheckIterator*)nativeHandle)->Add(*((Handle_Interface_Check*)ach->Handle), num);
}

OCInterface_Check^ OCInterface_CheckIterator::Check(Standard_Integer num)
{
  Handle(Interface_Check) tmp = ((Interface_CheckIterator*)nativeHandle)->Check(num);
  return gcnew OCInterface_Check(&tmp);
}

OCInterface_Check^ OCInterface_CheckIterator::Check(OCNaroWrappers::OCStandard_Transient^ ent)
{
  Handle(Interface_Check) tmp = ((Interface_CheckIterator*)nativeHandle)->Check(*((Handle_Standard_Transient*)ent->Handle));
  return gcnew OCInterface_Check(&tmp);
}

OCInterface_Check^ OCInterface_CheckIterator::CCheck(Standard_Integer num)
{
  Handle(Interface_Check) tmp = ((Interface_CheckIterator*)nativeHandle)->CCheck(num);
  return gcnew OCInterface_Check(&tmp);
}

OCInterface_Check^ OCInterface_CheckIterator::CCheck(OCNaroWrappers::OCStandard_Transient^ ent)
{
  Handle(Interface_Check) tmp = ((Interface_CheckIterator*)nativeHandle)->CCheck(*((Handle_Standard_Transient*)ent->Handle));
  return gcnew OCInterface_Check(&tmp);
}

 System::Boolean OCInterface_CheckIterator::IsEmpty(System::Boolean failsonly)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_CheckIterator*)nativeHandle)->IsEmpty(OCConverter::BooleanToStandardBoolean(failsonly)));
}

 OCInterface_CheckStatus OCInterface_CheckIterator::Status()
{
  return (OCInterface_CheckStatus)(((Interface_CheckIterator*)nativeHandle)->Status());
}

 System::Boolean OCInterface_CheckIterator::Complies(OCInterface_CheckStatus status)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_CheckIterator*)nativeHandle)->Complies((Interface_CheckStatus)status));
}

OCInterface_CheckIterator^ OCInterface_CheckIterator::Extract(OCInterface_CheckStatus status)
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = ((Interface_CheckIterator*)nativeHandle)->Extract((Interface_CheckStatus)status);
  return gcnew OCInterface_CheckIterator(tmp);
}

OCInterface_CheckIterator^ OCInterface_CheckIterator::Extract(System::String^ mess, Standard_Integer incl, OCInterface_CheckStatus status)
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = ((Interface_CheckIterator*)nativeHandle)->Extract(OCConverter::StringToStandardCString(mess), incl, (Interface_CheckStatus)status);
  return gcnew OCInterface_CheckIterator(tmp);
}

 System::Boolean OCInterface_CheckIterator::Remove(System::String^ mess, Standard_Integer incl, OCInterface_CheckStatus status)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_CheckIterator*)nativeHandle)->Remove(OCConverter::StringToStandardCString(mess), incl, (Interface_CheckStatus)status));
}

OCTColStd_HSequenceOfTransient^ OCInterface_CheckIterator::Checkeds(System::Boolean failsonly, System::Boolean global)
{
  Handle(TColStd_HSequenceOfTransient) tmp = ((Interface_CheckIterator*)nativeHandle)->Checkeds(OCConverter::BooleanToStandardBoolean(failsonly), OCConverter::BooleanToStandardBoolean(global));
  return gcnew OCTColStd_HSequenceOfTransient(&tmp);
}

 void OCInterface_CheckIterator::Start()
{
  ((Interface_CheckIterator*)nativeHandle)->Start();
}

 System::Boolean OCInterface_CheckIterator::More()
{
  return OCConverter::StandardBooleanToBoolean(((Interface_CheckIterator*)nativeHandle)->More());
}

 void OCInterface_CheckIterator::Next()
{
  ((Interface_CheckIterator*)nativeHandle)->Next();
}

OCInterface_Check^ OCInterface_CheckIterator::Value()
{
  Handle(Interface_Check) tmp = ((Interface_CheckIterator*)nativeHandle)->Value();
  return gcnew OCInterface_Check(&tmp);
}

 Standard_Integer OCInterface_CheckIterator::Number()
{
  return ((Interface_CheckIterator*)nativeHandle)->Number();
}

 void OCInterface_CheckIterator::Print(OCNaroWrappers::OCMessage_Messenger^ S, System::Boolean failsonly, Standard_Integer final)
{
  ((Interface_CheckIterator*)nativeHandle)->Print(*((Handle_Message_Messenger*)S->Handle), OCConverter::BooleanToStandardBoolean(failsonly), final);
}

 void OCInterface_CheckIterator::Print(OCNaroWrappers::OCMessage_Messenger^ S, OCNaroWrappers::OCInterface_InterfaceModel^ model, System::Boolean failsonly, Standard_Integer final)
{
  ((Interface_CheckIterator*)nativeHandle)->Print(*((Handle_Message_Messenger*)S->Handle), *((Handle_Interface_InterfaceModel*)model->Handle), OCConverter::BooleanToStandardBoolean(failsonly), final);
}


