// File generated by CPPExt (CPP file)
//

#include "Interface_DataMapOfIntegerTransient.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "Interface_DataMapNodeOfDataMapOfIntegerTransient.h"
#include "Interface_DataMapIteratorOfDataMapOfIntegerTransient.h"


using namespace OCNaroWrappers;

OCInterface_DataMapOfIntegerTransient::OCInterface_DataMapOfIntegerTransient(Interface_DataMapOfIntegerTransient* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCInterface_DataMapOfIntegerTransient::OCInterface_DataMapOfIntegerTransient(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new Interface_DataMapOfIntegerTransient(NbBuckets);
}

OCInterface_DataMapOfIntegerTransient^ OCInterface_DataMapOfIntegerTransient::Assign(OCNaroWrappers::OCInterface_DataMapOfIntegerTransient^ Other)
{
  Interface_DataMapOfIntegerTransient* tmp = new Interface_DataMapOfIntegerTransient(0);
  *tmp = ((Interface_DataMapOfIntegerTransient*)nativeHandle)->Assign(*((Interface_DataMapOfIntegerTransient*)Other->Handle));
  return gcnew OCInterface_DataMapOfIntegerTransient(tmp);
}

 void OCInterface_DataMapOfIntegerTransient::ReSize(Standard_Integer NbBuckets)
{
  ((Interface_DataMapOfIntegerTransient*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCInterface_DataMapOfIntegerTransient::Bind(Standard_Integer K, OCNaroWrappers::OCStandard_Transient^ I)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_DataMapOfIntegerTransient*)nativeHandle)->Bind(K, *((Handle_Standard_Transient*)I->Handle)));
}

 System::Boolean OCInterface_DataMapOfIntegerTransient::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_DataMapOfIntegerTransient*)nativeHandle)->IsBound(K));
}

 System::Boolean OCInterface_DataMapOfIntegerTransient::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((Interface_DataMapOfIntegerTransient*)nativeHandle)->UnBind(K));
}

OCStandard_Transient^ OCInterface_DataMapOfIntegerTransient::Find(Standard_Integer K)
{
  Handle(Standard_Transient) tmp = ((Interface_DataMapOfIntegerTransient*)nativeHandle)->Find(K);
  return gcnew OCStandard_Transient(&tmp);
}

OCStandard_Transient^ OCInterface_DataMapOfIntegerTransient::ChangeFind(Standard_Integer K)
{
  Handle(Standard_Transient) tmp = ((Interface_DataMapOfIntegerTransient*)nativeHandle)->ChangeFind(K);
  return gcnew OCStandard_Transient(&tmp);
}


