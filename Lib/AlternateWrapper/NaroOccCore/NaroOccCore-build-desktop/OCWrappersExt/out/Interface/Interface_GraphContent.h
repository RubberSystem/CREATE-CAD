// File generated by CPPExt (MPV)
//
#ifndef _Interface_GraphContent_OCWrappers_HeaderFile
#define _Interface_GraphContent_OCWrappers_HeaderFile

// include native header
#include <Interface_GraphContent.hxx>
#include "../Converter.h"

#include "Interface_EntityIterator.h"

#include "Interface_EntityIterator.h"


namespace OCNaroWrappers
{

ref class OCInterface_Graph;
ref class OCStandard_Transient;
ref class OCInterface_EntityIterator;


//! Defines general form for classes of graph algorithms on <br>
//!           Interfaces, this form is that of EntityIterator <br>
//!           Each sub-class fills it according to its own algorithm <br>
//!           This also allows to combine any graph result to others, <br>
//!           all being given under one unique form <br>
public ref class OCInterface_GraphContent  : public OCInterface_EntityIterator {

protected:
  // dummy constructor;
  OCInterface_GraphContent(OCDummy^) : OCInterface_EntityIterator((OCDummy^)nullptr) {};

public:

// constructor from native
OCInterface_GraphContent(Interface_GraphContent* nativeHandle);

// Methods PUBLIC

//! Creates an empty GraphContent, ready to be filled <br>
OCInterface_GraphContent();

//! Creates with all entities designated by a Graph <br>
OCInterface_GraphContent(OCNaroWrappers::OCInterface_Graph^ agraph);

//! Creates with entities having specific Status value in a Graph <br>
OCInterface_GraphContent(OCNaroWrappers::OCInterface_Graph^ agraph, Standard_Integer stat);

//! Creates an Iterator with Shared entities of an entity <br>
//!           (equivalente to EntityIterator but with a Graph) <br>
OCInterface_GraphContent(OCNaroWrappers::OCInterface_Graph^ agraph, OCNaroWrappers::OCStandard_Transient^ ent);

//! Gets all Entities designated by a Graph (once created), adds <br>
//!           them to those already recorded <br>
 /*instead*/  void GetFromGraph(OCNaroWrappers::OCInterface_Graph^ agraph) ;

//! Gets entities from a graph which have a specific Status value <br>
//!           (one created), adds them to those already recorded <br>
 /*instead*/  void GetFromGraph(OCNaroWrappers::OCInterface_Graph^ agraph, Standard_Integer stat) ;

//! Returns Result under the exact form of an EntityIterator : <br>
//!           Can be used when EntityIterator itself is required (as a <br>
//!           returned value for instance), whitout way for a sub-class <br>
 /*instead*/  OCInterface_EntityIterator^ Result() ;

//! Does the Evaluation before starting the iteration itself <br>
//!           (in out) <br>
 /*instead*/  void Begin() ;

//! Evaluates list of Entities to be iterated. Called by Start <br>
//!           Default is set to doing nothing : intended to be redefined <br>
//!           by each sub-class <br>
virtual /*instead*/  void Evaluate() ;

~OCInterface_GraphContent()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
