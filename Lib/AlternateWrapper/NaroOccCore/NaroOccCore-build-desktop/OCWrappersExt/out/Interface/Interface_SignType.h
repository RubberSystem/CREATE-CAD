// File generated by CPPExt (Transient)
//
#ifndef _Interface_SignType_OCWrappers_HeaderFile
#define _Interface_SignType_OCWrappers_HeaderFile

// include the wrapped class
#include <Interface_SignType.hxx>
#include "../Converter.h"

#include "../MoniTool/MoniTool_SignText.h"



namespace OCNaroWrappers
{

ref class OCTCollection_AsciiString;
ref class OCStandard_Transient;
ref class OCInterface_InterfaceModel;


//! Provides the basic service to get a type name, according <br>
//!           to a norm <br>
//!           It can be used for other classes (general signatures ...) <br>
public ref class OCInterface_SignType : OCMoniTool_SignText {

protected:
  // dummy constructor;
  OCInterface_SignType(OCDummy^) : OCMoniTool_SignText((OCDummy^)nullptr) {};

public:

// constructor from native
OCInterface_SignType(Handle(Interface_SignType)* nativeHandle);

// Methods PUBLIC

//! Returns an identification of the Signature (a word), given at <br>
//!           initialization time <br>//! Specialised to consider context as an InterfaceModel <br>
 /*instead*/  OCTCollection_AsciiString^ Text(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCStandard_Transient^ context) ;

//! From a CDL Type Name, returns the Class part (package dropped) <br>
//!           WARNING : buffered, to be immediately copied or printed <br>
static /*instead*/  System::String^ ClassName(System::String^ typnam) ;

~OCInterface_SignType()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
