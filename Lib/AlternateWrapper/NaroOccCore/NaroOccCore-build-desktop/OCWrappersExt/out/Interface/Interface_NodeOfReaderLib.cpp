// File generated by CPPExt (CPP file)
//

#include "Interface_NodeOfReaderLib.h"
#include "../Converter.h"
#include "Interface_GlobalNodeOfReaderLib.h"
#include "../Standard/Standard_Transient.h"
#include "Interface_ReaderModule.h"
#include "Interface_Protocol.h"
#include "Interface_ReaderLib.h"


using namespace OCNaroWrappers;

OCInterface_NodeOfReaderLib::OCInterface_NodeOfReaderLib(Handle(Interface_NodeOfReaderLib)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Interface_NodeOfReaderLib(*nativeHandle);
}

OCInterface_NodeOfReaderLib::OCInterface_NodeOfReaderLib() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Interface_NodeOfReaderLib(new Interface_NodeOfReaderLib());
}

 void OCInterface_NodeOfReaderLib::AddNode(OCNaroWrappers::OCInterface_GlobalNodeOfReaderLib^ anode)
{
  (*((Handle_Interface_NodeOfReaderLib*)nativeHandle))->AddNode(*((Handle_Interface_GlobalNodeOfReaderLib*)anode->Handle));
}

OCInterface_ReaderModule^ OCInterface_NodeOfReaderLib::Module()
{
  Handle(Interface_ReaderModule) tmp = (*((Handle_Interface_NodeOfReaderLib*)nativeHandle))->Module();
  return gcnew OCInterface_ReaderModule(&tmp);
}

OCInterface_Protocol^ OCInterface_NodeOfReaderLib::Protocol()
{
  Handle(Interface_Protocol) tmp = (*((Handle_Interface_NodeOfReaderLib*)nativeHandle))->Protocol();
  return gcnew OCInterface_Protocol(&tmp);
}

OCInterface_NodeOfReaderLib^ OCInterface_NodeOfReaderLib::Next()
{
  Handle(Interface_NodeOfReaderLib) tmp = (*((Handle_Interface_NodeOfReaderLib*)nativeHandle))->Next();
  return gcnew OCInterface_NodeOfReaderLib(&tmp);
}


