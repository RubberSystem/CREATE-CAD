// File generated by CPPExt (CPP file)
//

#include "Interface_GlobalNodeOfReaderLib.h"
#include "../Converter.h"
#include "Interface_ReaderModule.h"
#include "Interface_Protocol.h"
#include "../Standard/Standard_Transient.h"
#include "Interface_ReaderLib.h"
#include "Interface_NodeOfReaderLib.h"


using namespace OCNaroWrappers;

OCInterface_GlobalNodeOfReaderLib::OCInterface_GlobalNodeOfReaderLib(Handle(Interface_GlobalNodeOfReaderLib)* nativeHandle) : OCStandard_Transient((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Interface_GlobalNodeOfReaderLib(*nativeHandle);
}

OCInterface_GlobalNodeOfReaderLib::OCInterface_GlobalNodeOfReaderLib() : OCStandard_Transient((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Interface_GlobalNodeOfReaderLib(new Interface_GlobalNodeOfReaderLib());
}

 void OCInterface_GlobalNodeOfReaderLib::Add(OCNaroWrappers::OCInterface_ReaderModule^ amodule, OCNaroWrappers::OCInterface_Protocol^ aprotocol)
{
  (*((Handle_Interface_GlobalNodeOfReaderLib*)nativeHandle))->Add(*((Handle_Interface_ReaderModule*)amodule->Handle), *((Handle_Interface_Protocol*)aprotocol->Handle));
}

OCInterface_ReaderModule^ OCInterface_GlobalNodeOfReaderLib::Module()
{
  Handle(Interface_ReaderModule) tmp = (*((Handle_Interface_GlobalNodeOfReaderLib*)nativeHandle))->Module();
  return gcnew OCInterface_ReaderModule(&tmp);
}

OCInterface_Protocol^ OCInterface_GlobalNodeOfReaderLib::Protocol()
{
  Handle(Interface_Protocol) tmp = (*((Handle_Interface_GlobalNodeOfReaderLib*)nativeHandle))->Protocol();
  return gcnew OCInterface_Protocol(&tmp);
}

OCInterface_GlobalNodeOfReaderLib^ OCInterface_GlobalNodeOfReaderLib::Next()
{
  Handle(Interface_GlobalNodeOfReaderLib) tmp = (*((Handle_Interface_GlobalNodeOfReaderLib*)nativeHandle))->Next();
  return gcnew OCInterface_GlobalNodeOfReaderLib(&tmp);
}


