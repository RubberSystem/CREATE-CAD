// File generated by CPPExt (CPP file)
//

#include "Interface_STAT.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "../TColStd/TColStd_HSequenceOfAsciiString.h"
#include "../TColStd/TColStd_HSequenceOfReal.h"
#include "../TColStd/TColStd_HSequenceOfInteger.h"


using namespace OCNaroWrappers;

OCInterface_STAT::OCInterface_STAT(Interface_STAT* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCInterface_STAT::OCInterface_STAT(System::String^ title) 
{
  nativeHandle = new Interface_STAT(OCConverter::StringToStandardCString(title));
}

OCInterface_STAT::OCInterface_STAT(OCNaroWrappers::OCInterface_STAT^ other) 
{
  nativeHandle = new Interface_STAT(*((Interface_STAT*)other->Handle));
}

 void OCInterface_STAT::Internals(OCNaroWrappers::OCTCollection_HAsciiString^ tit, Standard_Real& total, OCNaroWrappers::OCTColStd_HSequenceOfAsciiString^ phn, OCNaroWrappers::OCTColStd_HSequenceOfReal^ phw, OCNaroWrappers::OCTColStd_HSequenceOfInteger^ phdeb, OCNaroWrappers::OCTColStd_HSequenceOfInteger^ phfin, OCNaroWrappers::OCTColStd_HSequenceOfReal^ stw)
{
  ((Interface_STAT*)nativeHandle)->Internals(*((Handle_TCollection_HAsciiString*)tit->Handle), total, *((Handle_TColStd_HSequenceOfAsciiString*)phn->Handle), *((Handle_TColStd_HSequenceOfReal*)phw->Handle), *((Handle_TColStd_HSequenceOfInteger*)phdeb->Handle), *((Handle_TColStd_HSequenceOfInteger*)phfin->Handle), *((Handle_TColStd_HSequenceOfReal*)stw->Handle));
}

 void OCInterface_STAT::AddPhase(Standard_Real weight, System::String^ name)
{
  ((Interface_STAT*)nativeHandle)->AddPhase(weight, OCConverter::StringToStandardCString(name));
}

 void OCInterface_STAT::AddStep(Standard_Real weight)
{
  ((Interface_STAT*)nativeHandle)->AddStep(weight);
}

 void OCInterface_STAT::Description(Standard_Integer& nbphases, Standard_Real& total, System::String^& title)
{
  ((Interface_STAT*)nativeHandle)->Description(nbphases, total, OCConverter::StringToStandardCString(title));
}

 void OCInterface_STAT::Phase(Standard_Integer num, Standard_Integer& n0step, Standard_Integer& nbstep, Standard_Real& weight, System::String^& name)
{
  ((Interface_STAT*)nativeHandle)->Phase(num, n0step, nbstep, weight, OCConverter::StringToStandardCString(name));
}

 Standard_Real OCInterface_STAT::Step(Standard_Integer num)
{
  return ((Interface_STAT*)nativeHandle)->Step(num);
}

 void OCInterface_STAT::Start(Standard_Integer items, Standard_Integer cycles)
{
  ((Interface_STAT*)nativeHandle)->Start(items, cycles);
}

 void OCInterface_STAT::StartCount(Standard_Integer items, System::String^ title)
{
  Interface_STAT::StartCount(items, OCConverter::StringToStandardCString(title));
}

 void OCInterface_STAT::NextPhase(Standard_Integer items, Standard_Integer cycles)
{
  Interface_STAT::NextPhase(items, cycles);
}

 void OCInterface_STAT::SetPhase(Standard_Integer items, Standard_Integer cycles)
{
  Interface_STAT::SetPhase(items, cycles);
}

 void OCInterface_STAT::NextCycle(Standard_Integer items)
{
  Interface_STAT::NextCycle(items);
}

 void OCInterface_STAT::NextStep()
{
  Interface_STAT::NextStep();
}

 void OCInterface_STAT::NextItem(Standard_Integer nbitems)
{
  Interface_STAT::NextItem(nbitems);
}

 void OCInterface_STAT::End()
{
  Interface_STAT::End();
}

 System::String^ OCInterface_STAT::Where(System::Boolean phase)
{
  return OCConverter::StandardCStringToString(Interface_STAT::Where(OCConverter::BooleanToStandardBoolean(phase)));
}

 Standard_Integer OCInterface_STAT::Percent(System::Boolean phase)
{
  return Interface_STAT::Percent(OCConverter::BooleanToStandardBoolean(phase));
}


