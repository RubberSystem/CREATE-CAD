// File generated by CPPExt (CPP file)
//

#include "Interface_SequenceOfCheck.h"
#include "../Converter.h"
#include "Interface_Check.h"
#include "Interface_SequenceNodeOfSequenceOfCheck.h"


using namespace OCNaroWrappers;

OCInterface_SequenceOfCheck::OCInterface_SequenceOfCheck(Interface_SequenceOfCheck* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCInterface_SequenceOfCheck::OCInterface_SequenceOfCheck() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Interface_SequenceOfCheck();
}

OCInterface_SequenceOfCheck^ OCInterface_SequenceOfCheck::Assign(OCNaroWrappers::OCInterface_SequenceOfCheck^ Other)
{
  Interface_SequenceOfCheck* tmp = new Interface_SequenceOfCheck();
  *tmp = ((Interface_SequenceOfCheck*)nativeHandle)->Assign(*((Interface_SequenceOfCheck*)Other->Handle));
  return gcnew OCInterface_SequenceOfCheck(tmp);
}

 void OCInterface_SequenceOfCheck::Append(OCNaroWrappers::OCInterface_Check^ T)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->Append(*((Handle_Interface_Check*)T->Handle));
}

 void OCInterface_SequenceOfCheck::Append(OCNaroWrappers::OCInterface_SequenceOfCheck^ S)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->Append(*((Interface_SequenceOfCheck*)S->Handle));
}

 void OCInterface_SequenceOfCheck::Prepend(OCNaroWrappers::OCInterface_Check^ T)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->Prepend(*((Handle_Interface_Check*)T->Handle));
}

 void OCInterface_SequenceOfCheck::Prepend(OCNaroWrappers::OCInterface_SequenceOfCheck^ S)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->Prepend(*((Interface_SequenceOfCheck*)S->Handle));
}

 void OCInterface_SequenceOfCheck::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCInterface_Check^ T)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->InsertBefore(Index, *((Handle_Interface_Check*)T->Handle));
}

 void OCInterface_SequenceOfCheck::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCInterface_SequenceOfCheck^ S)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->InsertBefore(Index, *((Interface_SequenceOfCheck*)S->Handle));
}

 void OCInterface_SequenceOfCheck::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCInterface_Check^ T)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->InsertAfter(Index, *((Handle_Interface_Check*)T->Handle));
}

 void OCInterface_SequenceOfCheck::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCInterface_SequenceOfCheck^ S)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->InsertAfter(Index, *((Interface_SequenceOfCheck*)S->Handle));
}

OCInterface_Check^ OCInterface_SequenceOfCheck::First()
{
  Handle(Interface_Check) tmp = ((Interface_SequenceOfCheck*)nativeHandle)->First();
  return gcnew OCInterface_Check(&tmp);
}

OCInterface_Check^ OCInterface_SequenceOfCheck::Last()
{
  Handle(Interface_Check) tmp = ((Interface_SequenceOfCheck*)nativeHandle)->Last();
  return gcnew OCInterface_Check(&tmp);
}

 void OCInterface_SequenceOfCheck::Split(Standard_Integer Index, OCNaroWrappers::OCInterface_SequenceOfCheck^ Sub)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->Split(Index, *((Interface_SequenceOfCheck*)Sub->Handle));
}

OCInterface_Check^ OCInterface_SequenceOfCheck::Value(Standard_Integer Index)
{
  Handle(Interface_Check) tmp = ((Interface_SequenceOfCheck*)nativeHandle)->Value(Index);
  return gcnew OCInterface_Check(&tmp);
}

 void OCInterface_SequenceOfCheck::SetValue(Standard_Integer Index, OCNaroWrappers::OCInterface_Check^ I)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->SetValue(Index, *((Handle_Interface_Check*)I->Handle));
}

OCInterface_Check^ OCInterface_SequenceOfCheck::ChangeValue(Standard_Integer Index)
{
  Handle(Interface_Check) tmp = ((Interface_SequenceOfCheck*)nativeHandle)->ChangeValue(Index);
  return gcnew OCInterface_Check(&tmp);
}

 void OCInterface_SequenceOfCheck::Remove(Standard_Integer Index)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->Remove(Index);
}

 void OCInterface_SequenceOfCheck::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Interface_SequenceOfCheck*)nativeHandle)->Remove(FromIndex, ToIndex);
}


