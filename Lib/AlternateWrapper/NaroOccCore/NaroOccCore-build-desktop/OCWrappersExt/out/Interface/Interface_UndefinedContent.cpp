// File generated by CPPExt (CPP file)
//

#include "Interface_UndefinedContent.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HArray1OfInteger.h"
#include "Interface_HArray1OfHAsciiString.h"
#include "../Standard/Standard_Transient.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "Interface_EntityList.h"
#include "Interface_CopyTool.h"


using namespace OCNaroWrappers;

OCInterface_UndefinedContent::OCInterface_UndefinedContent(Handle(Interface_UndefinedContent)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Interface_UndefinedContent(*nativeHandle);
}

OCInterface_UndefinedContent::OCInterface_UndefinedContent() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Interface_UndefinedContent(new Interface_UndefinedContent());
}

 Standard_Integer OCInterface_UndefinedContent::NbParams()
{
  return (*((Handle_Interface_UndefinedContent*)nativeHandle))->NbParams();
}

 Standard_Integer OCInterface_UndefinedContent::NbLiterals()
{
  return (*((Handle_Interface_UndefinedContent*)nativeHandle))->NbLiterals();
}

 System::Boolean OCInterface_UndefinedContent::ParamData(Standard_Integer num, OCInterface_ParamType& ptype, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCTCollection_HAsciiString^ val)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Interface_UndefinedContent*)nativeHandle))->ParamData(num, (Interface_ParamType&)ptype, *((Handle_Standard_Transient*)ent->Handle), *((Handle_TCollection_HAsciiString*)val->Handle)));
}

 OCInterface_ParamType OCInterface_UndefinedContent::ParamType(Standard_Integer num)
{
  return (OCInterface_ParamType)((*((Handle_Interface_UndefinedContent*)nativeHandle))->ParamType(num));
}

 System::Boolean OCInterface_UndefinedContent::IsParamEntity(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Interface_UndefinedContent*)nativeHandle))->IsParamEntity(num));
}

OCStandard_Transient^ OCInterface_UndefinedContent::ParamEntity(Standard_Integer num)
{
  Handle(Standard_Transient) tmp = (*((Handle_Interface_UndefinedContent*)nativeHandle))->ParamEntity(num);
  return gcnew OCStandard_Transient(&tmp);
}

OCTCollection_HAsciiString^ OCInterface_UndefinedContent::ParamValue(Standard_Integer num)
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_Interface_UndefinedContent*)nativeHandle))->ParamValue(num);
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCInterface_UndefinedContent::Reservate(Standard_Integer nb, Standard_Integer nblit)
{
  (*((Handle_Interface_UndefinedContent*)nativeHandle))->Reservate(nb, nblit);
}

 void OCInterface_UndefinedContent::AddLiteral(OCInterface_ParamType ptype, OCNaroWrappers::OCTCollection_HAsciiString^ val)
{
  (*((Handle_Interface_UndefinedContent*)nativeHandle))->AddLiteral((Interface_ParamType)ptype, *((Handle_TCollection_HAsciiString*)val->Handle));
}

 void OCInterface_UndefinedContent::AddEntity(OCInterface_ParamType ptype, OCNaroWrappers::OCStandard_Transient^ ent)
{
  (*((Handle_Interface_UndefinedContent*)nativeHandle))->AddEntity((Interface_ParamType)ptype, *((Handle_Standard_Transient*)ent->Handle));
}

 void OCInterface_UndefinedContent::RemoveParam(Standard_Integer num)
{
  (*((Handle_Interface_UndefinedContent*)nativeHandle))->RemoveParam(num);
}

 void OCInterface_UndefinedContent::SetLiteral(Standard_Integer num, OCInterface_ParamType ptype, OCNaroWrappers::OCTCollection_HAsciiString^ val)
{
  (*((Handle_Interface_UndefinedContent*)nativeHandle))->SetLiteral(num, (Interface_ParamType)ptype, *((Handle_TCollection_HAsciiString*)val->Handle));
}

 void OCInterface_UndefinedContent::SetEntity(Standard_Integer num, OCInterface_ParamType ptype, OCNaroWrappers::OCStandard_Transient^ ent)
{
  (*((Handle_Interface_UndefinedContent*)nativeHandle))->SetEntity(num, (Interface_ParamType)ptype, *((Handle_Standard_Transient*)ent->Handle));
}

 void OCInterface_UndefinedContent::SetEntity(Standard_Integer num, OCNaroWrappers::OCStandard_Transient^ ent)
{
  (*((Handle_Interface_UndefinedContent*)nativeHandle))->SetEntity(num, *((Handle_Standard_Transient*)ent->Handle));
}

OCInterface_EntityList^ OCInterface_UndefinedContent::EntityList()
{
  Interface_EntityList* tmp = new Interface_EntityList();
  *tmp = (*((Handle_Interface_UndefinedContent*)nativeHandle))->EntityList();
  return gcnew OCInterface_EntityList(tmp);
}

 void OCInterface_UndefinedContent::GetFromAnother(OCNaroWrappers::OCInterface_UndefinedContent^ other, OCNaroWrappers::OCInterface_CopyTool^ TC)
{
  (*((Handle_Interface_UndefinedContent*)nativeHandle))->GetFromAnother(*((Handle_Interface_UndefinedContent*)other->Handle), *((Interface_CopyTool*)TC->Handle));
}


