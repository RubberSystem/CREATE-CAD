// File generated by CPPExt (MPV)
//
#ifndef _PTColStd_PersistentTransientMap_OCWrappers_HeaderFile
#define _PTColStd_PersistentTransientMap_OCWrappers_HeaderFile

// include native header
#include <PTColStd_PersistentTransientMap.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCStandard_Persistent;
ref class OCStandard_Transient;
ref class OCPTColStd_MapPersistentHasher;
ref class OCPTColStd_DataMapNodeOfPersistentTransientMap;
ref class OCPTColStd_DataMapIteratorOfPersistentTransientMap;



public ref class OCPTColStd_PersistentTransientMap  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCPTColStd_PersistentTransientMap(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCPTColStd_PersistentTransientMap(PTColStd_PersistentTransientMap* nativeHandle);

// Methods PUBLIC


OCPTColStd_PersistentTransientMap(Standard_Integer NbBuckets);


 /*instead*/  OCPTColStd_PersistentTransientMap^ Assign(OCNaroWrappers::OCPTColStd_PersistentTransientMap^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(OCNaroWrappers::OCStandard_Persistent^ K, OCNaroWrappers::OCStandard_Transient^ I) ;


 /*instead*/  System::Boolean IsBound(OCNaroWrappers::OCStandard_Persistent^ K) ;


 /*instead*/  System::Boolean UnBind(OCNaroWrappers::OCStandard_Persistent^ K) ;


 /*instead*/  OCStandard_Transient^ Find(OCNaroWrappers::OCStandard_Persistent^ K) ;


 /*instead*/  OCStandard_Transient^ ChangeFind(OCNaroWrappers::OCStandard_Persistent^ K) ;


 /*instead*/  Standard_Address Find1(OCNaroWrappers::OCStandard_Persistent^ K) ;


 /*instead*/  Standard_Address ChangeFind1(OCNaroWrappers::OCStandard_Persistent^ K) ;

~OCPTColStd_PersistentTransientMap()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
