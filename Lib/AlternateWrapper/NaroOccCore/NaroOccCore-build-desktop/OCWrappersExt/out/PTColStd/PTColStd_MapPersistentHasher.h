// File generated by CPPExt (MPV)
//
#ifndef _PTColStd_MapPersistentHasher_OCWrappers_HeaderFile
#define _PTColStd_MapPersistentHasher_OCWrappers_HeaderFile

// include native header
#include <PTColStd_MapPersistentHasher.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCStandard_Persistent;



public ref class OCPTColStd_MapPersistentHasher  {

protected:
  PTColStd_MapPersistentHasher* nativeHandle;
  OCPTColStd_MapPersistentHasher(OCDummy^) {};

public:
  property PTColStd_MapPersistentHasher* Handle
  {
    PTColStd_MapPersistentHasher* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCPTColStd_MapPersistentHasher(PTColStd_MapPersistentHasher* nativeHandle);

// Methods PUBLIC


static /*instead*/  Standard_Integer HashCode(OCNaroWrappers::OCStandard_Persistent^ K, Standard_Integer Upper) ;


static /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCStandard_Persistent^ K1, OCNaroWrappers::OCStandard_Persistent^ K2) ;

~OCPTColStd_MapPersistentHasher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
