// File generated by CPPExt (CPP file)
//

#include "PTColStd_PersistentTransientMap.h"
#include "../Converter.h"
#include "../Standard/Standard_Persistent.h"
#include "../Standard/Standard_Transient.h"
#include "PTColStd_MapPersistentHasher.h"
#include "PTColStd_DataMapNodeOfPersistentTransientMap.h"
#include "PTColStd_DataMapIteratorOfPersistentTransientMap.h"


using namespace OCNaroWrappers;

OCPTColStd_PersistentTransientMap::OCPTColStd_PersistentTransientMap(PTColStd_PersistentTransientMap* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCPTColStd_PersistentTransientMap::OCPTColStd_PersistentTransientMap(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new PTColStd_PersistentTransientMap(NbBuckets);
}

OCPTColStd_PersistentTransientMap^ OCPTColStd_PersistentTransientMap::Assign(OCNaroWrappers::OCPTColStd_PersistentTransientMap^ Other)
{
  PTColStd_PersistentTransientMap* tmp = new PTColStd_PersistentTransientMap(0);
  *tmp = ((PTColStd_PersistentTransientMap*)nativeHandle)->Assign(*((PTColStd_PersistentTransientMap*)Other->Handle));
  return gcnew OCPTColStd_PersistentTransientMap(tmp);
}

 void OCPTColStd_PersistentTransientMap::ReSize(Standard_Integer NbBuckets)
{
  ((PTColStd_PersistentTransientMap*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCPTColStd_PersistentTransientMap::Bind(OCNaroWrappers::OCStandard_Persistent^ K, OCNaroWrappers::OCStandard_Transient^ I)
{
  return OCConverter::StandardBooleanToBoolean(((PTColStd_PersistentTransientMap*)nativeHandle)->Bind(*((Handle_Standard_Persistent*)K->Handle), *((Handle_Standard_Transient*)I->Handle)));
}

 System::Boolean OCPTColStd_PersistentTransientMap::IsBound(OCNaroWrappers::OCStandard_Persistent^ K)
{
  return OCConverter::StandardBooleanToBoolean(((PTColStd_PersistentTransientMap*)nativeHandle)->IsBound(*((Handle_Standard_Persistent*)K->Handle)));
}

 System::Boolean OCPTColStd_PersistentTransientMap::UnBind(OCNaroWrappers::OCStandard_Persistent^ K)
{
  return OCConverter::StandardBooleanToBoolean(((PTColStd_PersistentTransientMap*)nativeHandle)->UnBind(*((Handle_Standard_Persistent*)K->Handle)));
}

OCStandard_Transient^ OCPTColStd_PersistentTransientMap::Find(OCNaroWrappers::OCStandard_Persistent^ K)
{
  Handle(Standard_Transient) tmp = ((PTColStd_PersistentTransientMap*)nativeHandle)->Find(*((Handle_Standard_Persistent*)K->Handle));
  return gcnew OCStandard_Transient(&tmp);
}

OCStandard_Transient^ OCPTColStd_PersistentTransientMap::ChangeFind(OCNaroWrappers::OCStandard_Persistent^ K)
{
  Handle(Standard_Transient) tmp = ((PTColStd_PersistentTransientMap*)nativeHandle)->ChangeFind(*((Handle_Standard_Persistent*)K->Handle));
  return gcnew OCStandard_Transient(&tmp);
}

 Standard_Address OCPTColStd_PersistentTransientMap::Find1(OCNaroWrappers::OCStandard_Persistent^ K)
{
  return ((PTColStd_PersistentTransientMap*)nativeHandle)->Find1(*((Handle_Standard_Persistent*)K->Handle));
}

 Standard_Address OCPTColStd_PersistentTransientMap::ChangeFind1(OCNaroWrappers::OCStandard_Persistent^ K)
{
  return ((PTColStd_PersistentTransientMap*)nativeHandle)->ChangeFind1(*((Handle_Standard_Persistent*)K->Handle));
}


