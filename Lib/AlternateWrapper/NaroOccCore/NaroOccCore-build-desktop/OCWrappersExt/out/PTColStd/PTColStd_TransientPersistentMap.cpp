// File generated by CPPExt (CPP file)
//

#include "PTColStd_TransientPersistentMap.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "../Standard/Standard_Persistent.h"
#include "../TColStd/TColStd_MapTransientHasher.h"
#include "PTColStd_DataMapNodeOfTransientPersistentMap.h"
#include "PTColStd_DataMapIteratorOfTransientPersistentMap.h"


using namespace OCNaroWrappers;

OCPTColStd_TransientPersistentMap::OCPTColStd_TransientPersistentMap(PTColStd_TransientPersistentMap* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCPTColStd_TransientPersistentMap::OCPTColStd_TransientPersistentMap(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new PTColStd_TransientPersistentMap(NbBuckets);
}

OCPTColStd_TransientPersistentMap^ OCPTColStd_TransientPersistentMap::Assign(OCNaroWrappers::OCPTColStd_TransientPersistentMap^ Other)
{
  PTColStd_TransientPersistentMap* tmp = new PTColStd_TransientPersistentMap(0);
  *tmp = ((PTColStd_TransientPersistentMap*)nativeHandle)->Assign(*((PTColStd_TransientPersistentMap*)Other->Handle));
  return gcnew OCPTColStd_TransientPersistentMap(tmp);
}

 void OCPTColStd_TransientPersistentMap::ReSize(Standard_Integer NbBuckets)
{
  ((PTColStd_TransientPersistentMap*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCPTColStd_TransientPersistentMap::Bind(OCNaroWrappers::OCStandard_Transient^ K, OCNaroWrappers::OCStandard_Persistent^ I)
{
  return OCConverter::StandardBooleanToBoolean(((PTColStd_TransientPersistentMap*)nativeHandle)->Bind(*((Handle_Standard_Transient*)K->Handle), *((Handle_Standard_Persistent*)I->Handle)));
}

 System::Boolean OCPTColStd_TransientPersistentMap::IsBound(OCNaroWrappers::OCStandard_Transient^ K)
{
  return OCConverter::StandardBooleanToBoolean(((PTColStd_TransientPersistentMap*)nativeHandle)->IsBound(*((Handle_Standard_Transient*)K->Handle)));
}

 System::Boolean OCPTColStd_TransientPersistentMap::UnBind(OCNaroWrappers::OCStandard_Transient^ K)
{
  return OCConverter::StandardBooleanToBoolean(((PTColStd_TransientPersistentMap*)nativeHandle)->UnBind(*((Handle_Standard_Transient*)K->Handle)));
}

OCStandard_Persistent^ OCPTColStd_TransientPersistentMap::Find(OCNaroWrappers::OCStandard_Transient^ K)
{
  Handle(Standard_Persistent) tmp = ((PTColStd_TransientPersistentMap*)nativeHandle)->Find(*((Handle_Standard_Transient*)K->Handle));
  return gcnew OCStandard_Persistent(&tmp);
}

OCStandard_Persistent^ OCPTColStd_TransientPersistentMap::ChangeFind(OCNaroWrappers::OCStandard_Transient^ K)
{
  Handle(Standard_Persistent) tmp = ((PTColStd_TransientPersistentMap*)nativeHandle)->ChangeFind(*((Handle_Standard_Transient*)K->Handle));
  return gcnew OCStandard_Persistent(&tmp);
}

 Standard_Address OCPTColStd_TransientPersistentMap::Find1(OCNaroWrappers::OCStandard_Transient^ K)
{
  return ((PTColStd_TransientPersistentMap*)nativeHandle)->Find1(*((Handle_Standard_Transient*)K->Handle));
}

 Standard_Address OCPTColStd_TransientPersistentMap::ChangeFind1(OCNaroWrappers::OCStandard_Transient^ K)
{
  return ((PTColStd_TransientPersistentMap*)nativeHandle)->ChangeFind1(*((Handle_Standard_Transient*)K->Handle));
}


