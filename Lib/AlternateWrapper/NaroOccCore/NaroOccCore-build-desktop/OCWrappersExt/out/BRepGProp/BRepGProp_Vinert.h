// File generated by CPPExt (MPV)
//
#ifndef _BRepGProp_Vinert_OCWrappers_HeaderFile
#define _BRepGProp_Vinert_OCWrappers_HeaderFile

// include native header
#include <BRepGProp_Vinert.hxx>
#include "../Converter.h"

#include "../GProp/GProp_GProps.h"

#include "../GProp/GProp_GProps.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Edge;
ref class OCBRepGProp_Face;
ref class OCBRepGProp_Domain;
ref class OCgp_Pnt;
ref class OCgp_Pln;



public ref class OCBRepGProp_Vinert  : public OCGProp_GProps {

protected:
  // dummy constructor;
  OCBRepGProp_Vinert(OCDummy^) : OCGProp_GProps((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepGProp_Vinert(BRepGProp_Vinert* nativeHandle);

// Methods PUBLIC


OCBRepGProp_Vinert();


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pnt^ VLocation);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pnt^ VLocation, Standard_Real Eps);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pnt^ O, OCNaroWrappers::OCgp_Pnt^ VLocation);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pnt^ O, OCNaroWrappers::OCgp_Pnt^ VLocation, Standard_Real Eps);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Pnt^ VLocation);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Pnt^ VLocation, Standard_Real Eps);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pnt^ VLocation);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pnt^ VLocation, Standard_Real Eps);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pnt^ O, OCNaroWrappers::OCgp_Pnt^ VLocation);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pnt^ O, OCNaroWrappers::OCgp_Pnt^ VLocation, Standard_Real Eps);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Pnt^ VLocation);


OCBRepGProp_Vinert(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Pnt^ VLocation, Standard_Real Eps);


 /*instead*/  void SetLocation(OCNaroWrappers::OCgp_Pnt^ VLocation) ;


 /*instead*/  void Perform(OCNaroWrappers::OCBRepGProp_Face^ S) ;


 /*instead*/  Standard_Real Perform(OCNaroWrappers::OCBRepGProp_Face^ S, Standard_Real Eps) ;


 /*instead*/  void Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pnt^ O) ;


 /*instead*/  Standard_Real Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pnt^ O, Standard_Real Eps) ;


 /*instead*/  void Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pln^ Pl) ;


 /*instead*/  Standard_Real Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCgp_Pln^ Pl, Standard_Real Eps) ;


 /*instead*/  void Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D) ;


 /*instead*/  Standard_Real Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, Standard_Real Eps) ;


 /*instead*/  void Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pnt^ O) ;


 /*instead*/  Standard_Real Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pnt^ O, Standard_Real Eps) ;


 /*instead*/  void Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pln^ Pl) ;


 /*instead*/  Standard_Real Perform(OCNaroWrappers::OCBRepGProp_Face^ S, OCNaroWrappers::OCBRepGProp_Domain^ D, OCNaroWrappers::OCgp_Pln^ Pl, Standard_Real Eps) ;


 /*instead*/  Standard_Real GetEpsilon() ;

~OCBRepGProp_Vinert()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
