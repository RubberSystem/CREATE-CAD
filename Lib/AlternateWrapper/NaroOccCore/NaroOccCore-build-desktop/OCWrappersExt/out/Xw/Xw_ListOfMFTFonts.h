// File generated by CPPExt (MPV)
//
#ifndef _Xw_ListOfMFTFonts_OCWrappers_HeaderFile
#define _Xw_ListOfMFTFonts_OCWrappers_HeaderFile

// include native header
#include <Xw_ListOfMFTFonts.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCMFT_FontManager;



public ref class OCXw_ListOfMFTFonts  {

protected:
  Xw_ListOfMFTFonts* nativeHandle;
  OCXw_ListOfMFTFonts(OCDummy^) {};

public:
  property Xw_ListOfMFTFonts* Handle
  {
    Xw_ListOfMFTFonts* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCXw_ListOfMFTFonts(Xw_ListOfMFTFonts* nativeHandle);

// Methods PUBLIC


OCXw_ListOfMFTFonts(Standard_Integer Low, Standard_Integer Up);


OCXw_ListOfMFTFonts(OCNaroWrappers::OCMFT_FontManager^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCMFT_FontManager^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCXw_ListOfMFTFonts^ Assign(OCNaroWrappers::OCXw_ListOfMFTFonts^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCMFT_FontManager^ Value) ;


 /*instead*/  OCMFT_FontManager^ Value(Standard_Integer Index) ;


 /*instead*/  OCMFT_FontManager^ ChangeValue(Standard_Integer Index) ;

~OCXw_ListOfMFTFonts()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
