// File generated by CPPExt (CPP file)
//

#include "Xw_ListOfMFTSizes.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCXw_ListOfMFTSizes::OCXw_ListOfMFTSizes(Xw_ListOfMFTSizes* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCXw_ListOfMFTSizes::OCXw_ListOfMFTSizes(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Xw_ListOfMFTSizes(Low, Up);
}

OCXw_ListOfMFTSizes::OCXw_ListOfMFTSizes(Standard_ShortReal Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Xw_ListOfMFTSizes(Item, Low, Up);
}

 void OCXw_ListOfMFTSizes::Init(Standard_ShortReal V)
{
  ((Xw_ListOfMFTSizes*)nativeHandle)->Init(V);
}

 System::Boolean OCXw_ListOfMFTSizes::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((Xw_ListOfMFTSizes*)nativeHandle)->IsAllocated());
}

OCXw_ListOfMFTSizes^ OCXw_ListOfMFTSizes::Assign(OCNaroWrappers::OCXw_ListOfMFTSizes^ Other)
{
  Xw_ListOfMFTSizes* tmp = new Xw_ListOfMFTSizes(0, 0);
  *tmp = ((Xw_ListOfMFTSizes*)nativeHandle)->Assign(*((Xw_ListOfMFTSizes*)Other->Handle));
  return gcnew OCXw_ListOfMFTSizes(tmp);
}

 Standard_Integer OCXw_ListOfMFTSizes::Length()
{
  return ((Xw_ListOfMFTSizes*)nativeHandle)->Length();
}

 Standard_Integer OCXw_ListOfMFTSizes::Lower()
{
  return ((Xw_ListOfMFTSizes*)nativeHandle)->Lower();
}

 Standard_Integer OCXw_ListOfMFTSizes::Upper()
{
  return ((Xw_ListOfMFTSizes*)nativeHandle)->Upper();
}

 void OCXw_ListOfMFTSizes::SetValue(Standard_Integer Index, Standard_ShortReal Value)
{
  ((Xw_ListOfMFTSizes*)nativeHandle)->SetValue(Index, Value);
}

 Standard_ShortReal OCXw_ListOfMFTSizes::Value(Standard_Integer Index)
{
  return ((Xw_ListOfMFTSizes*)nativeHandle)->Value(Index);
}

 Standard_ShortReal OCXw_ListOfMFTSizes::ChangeValue(Standard_Integer Index)
{
  return ((Xw_ListOfMFTSizes*)nativeHandle)->ChangeValue(Index);
}


