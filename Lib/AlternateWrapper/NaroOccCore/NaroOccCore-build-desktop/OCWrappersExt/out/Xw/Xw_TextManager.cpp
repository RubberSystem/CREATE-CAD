// File generated by CPPExt (CPP file)
//

#include "Xw_TextManager.h"
#include "../Converter.h"
#include "Xw_Driver.h"


using namespace OCNaroWrappers;

OCXw_TextManager::OCXw_TextManager(Handle(Xw_TextManager)* nativeHandle) : OCMFT_TextManager((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Xw_TextManager(*nativeHandle);
}

OCXw_TextManager::OCXw_TextManager(Standard_Address aDrawable, Standard_Address aWidthMap) : OCMFT_TextManager((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Xw_TextManager(new Xw_TextManager(aDrawable, aWidthMap));
}

 void OCXw_TextManager::BeginString(Quantity_Length X, Quantity_Length Y, Quantity_PlaneAngle anOrientation, Quantity_Length aWidth, Quantity_Length aHeight, Quantity_PlaneAngle aSlant, Standard_Integer aPaintType)
{
  (*((Handle_Xw_TextManager*)nativeHandle))->BeginString(X, Y, anOrientation, aWidth, aHeight, aSlant, aPaintType);
}

 System::Boolean OCXw_TextManager::BeginChar(Standard_Integer aCharCode, Quantity_Length X, Quantity_Length Y)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Xw_TextManager*)nativeHandle))->BeginChar(aCharCode, X, Y));
}

 System::Boolean OCXw_TextManager::SetCharBoundingBox(Quantity_Length X1, Quantity_Length Y1, Quantity_Length X2, Quantity_Length Y2, Quantity_Length X3, Quantity_Length Y3, Quantity_Length X4, Quantity_Length Y4)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Xw_TextManager*)nativeHandle))->SetCharBoundingBox(X1, Y1, X2, Y2, X3, Y3, X4, Y4));
}

 System::Boolean OCXw_TextManager::SetCharEncoding(System::String^ anEncoding)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Xw_TextManager*)nativeHandle))->SetCharEncoding(OCConverter::StringToStandardCString(anEncoding)));
}

 System::Boolean OCXw_TextManager::Moveto(Quantity_Length X, Quantity_Length Y)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Xw_TextManager*)nativeHandle))->Moveto(X, Y));
}

 System::Boolean OCXw_TextManager::Lineto(Quantity_Length X, Quantity_Length Y)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Xw_TextManager*)nativeHandle))->Lineto(X, Y));
}

 System::Boolean OCXw_TextManager::Curveto(Quantity_Length X1, Quantity_Length Y1, Quantity_Length X2, Quantity_Length Y2, Quantity_Length X3, Quantity_Length Y3, Quantity_Length X4, Quantity_Length Y4)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Xw_TextManager*)nativeHandle))->Curveto(X1, Y1, X2, Y2, X3, Y3, X4, Y4));
}

 void OCXw_TextManager::ClosePath()
{
  (*((Handle_Xw_TextManager*)nativeHandle))->ClosePath();
}

 System::Boolean OCXw_TextManager::EndChar(Quantity_Length X, Quantity_Length Y)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Xw_TextManager*)nativeHandle))->EndChar(X, Y));
}

 void OCXw_TextManager::EndString()
{
  (*((Handle_Xw_TextManager*)nativeHandle))->EndString();
}


