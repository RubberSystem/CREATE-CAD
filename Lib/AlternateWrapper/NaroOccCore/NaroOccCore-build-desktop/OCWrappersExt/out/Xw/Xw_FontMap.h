// File generated by CPPExt (Transient)
//
#ifndef _Xw_FontMap_OCWrappers_HeaderFile
#define _Xw_FontMap_OCWrappers_HeaderFile

// include the wrapped class
#include <Xw_FontMap.hxx>
#include "../Converter.h"

#include "../Standard/Standard_Transient.h"



namespace OCNaroWrappers
{

ref class OCXw_GraphicDevice;
ref class OCAspect_FontMapEntry;
ref class OCAspect_FontMap;


//! This class defines a FontMap object. <br>
public ref class OCXw_FontMap : OCStandard_Transient {

protected:
  // dummy constructor;
  OCXw_FontMap(OCDummy^) : OCStandard_Transient((OCDummy^)nullptr) {};

public:

// constructor from native
OCXw_FontMap(Handle(Xw_FontMap)* nativeHandle);

// Methods PUBLIC

//! Creates a FontMap with an unallocated FontMapEntry. <br>
OCXw_FontMap(System::String^ Connexion);

//! Modifies an entry already defined or adds <Entry> <br>
//!	    in the font map <me> if it don't exist. <br>//!  Warning if FontMap size is exceeded. <br>
//!	   or FontMap is not defined properly <br>
//!	   or FontMapEntry Index is out of range according <br>
//!	   to the supported hardware <br>
virtual /*instead*/  void SetEntry(OCNaroWrappers::OCAspect_FontMapEntry^ Entry) ;

//! Modifies all entries of <me> from the new Fontmap. <br>//!  Warning if FontMap size is exceeded. <br>
//!         or FontMap is not defined properly <br>
//!         or One of new FontMapEntry Index is out of range according <br>
//!         to the supported hardware <br>
virtual /*instead*/  void SetEntries(OCNaroWrappers::OCAspect_FontMap^ Fontmap) ;

//! Returns the number of Free Fonts in the Fontmap <br>
//!	    depending of the HardWare <br>
 /*instead*/  Standard_Integer FreeFonts() ;

~OCXw_FontMap()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
