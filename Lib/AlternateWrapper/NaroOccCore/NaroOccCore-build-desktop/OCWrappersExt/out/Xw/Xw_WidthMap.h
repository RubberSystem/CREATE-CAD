// File generated by CPPExt (Transient)
//
#ifndef _Xw_WidthMap_OCWrappers_HeaderFile
#define _Xw_WidthMap_OCWrappers_HeaderFile

// include the wrapped class
#include <Xw_WidthMap.hxx>
#include "../Converter.h"

#include "../Standard/Standard_Transient.h"



namespace OCNaroWrappers
{

ref class OCXw_GraphicDevice;
ref class OCAspect_WidthMapEntry;
ref class OCAspect_WidthMap;


//! This class defines a WidthMap object. <br>
public ref class OCXw_WidthMap : OCStandard_Transient {

protected:
  // dummy constructor;
  OCXw_WidthMap(OCDummy^) : OCStandard_Transient((OCDummy^)nullptr) {};

public:

// constructor from native
OCXw_WidthMap(Handle(Xw_WidthMap)* nativeHandle);

// Methods PUBLIC

//! Creates a WidthMap with unallocated WidthMapEntry. <br>
//!  Warning: Raises if WidthMap creation failed according <br>
//!	    to the supported hardware <br>
OCXw_WidthMap(System::String^ Connexion);

//! Modifies an entry already defined  or Add the Entry <br>
//!	    in the type map <me> if it don't exist. <br>
//!  Warning: Raises if WidthMap size is exceeded, <br>
//!	   or WidthMap is not defined properly, <br>
//!	   or WidthMapEntry Index is out of range according <br>
//!	   to the supported hardware <br>
virtual /*instead*/  void SetEntry(OCNaroWrappers::OCAspect_WidthMapEntry^ Entry) ;

//! Modifies all entries from the New Widthmap <br>
//!  Warning: Raises if WidthMap size is exceeded, <br>
//!         or WidthMap is not defined properly, <br>
//!         or One of new WidthMapEntry Index is out of range according <br>
//!         to the supported hardware <br>
virtual /*instead*/  void SetEntries(OCNaroWrappers::OCAspect_WidthMap^ Widthmap) ;

//! Returns the Number of Free Widths in the Widthmap <br>
//!	    depending of the HardWare <br>
//!  Warning: Raises if WidthMap is not defined properly <br>
 /*instead*/  Standard_Integer FreeWidths() ;

~OCXw_WidthMap()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
