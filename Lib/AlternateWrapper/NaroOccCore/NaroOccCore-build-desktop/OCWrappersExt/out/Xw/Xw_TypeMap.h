// File generated by CPPExt (Transient)
//
#ifndef _Xw_TypeMap_OCWrappers_HeaderFile
#define _Xw_TypeMap_OCWrappers_HeaderFile

// include the wrapped class
#include <Xw_TypeMap.hxx>
#include "../Converter.h"

#include "../Standard/Standard_Transient.h"



namespace OCNaroWrappers
{

ref class OCXw_GraphicDevice;
ref class OCAspect_TypeMapEntry;
ref class OCAspect_TypeMap;


//! This class defines a TypeMap object. <br>
public ref class OCXw_TypeMap : OCStandard_Transient {

protected:
  // dummy constructor;
  OCXw_TypeMap(OCDummy^) : OCStandard_Transient((OCDummy^)nullptr) {};

public:

// constructor from native
OCXw_TypeMap(Handle(Xw_TypeMap)* nativeHandle);

// Methods PUBLIC

//! Creates a TypeMap with unallocated TypeMapEntry. <br>
//!  Warning: Raises if TypeMap creation failed according <br>
//!	    to the supported hardware <br>
OCXw_TypeMap(System::String^ Connexion);

//! Modifies an entry already defined or Add the Entry <br>
//!	    in the type map <me> if it don't exist. <br>
//!  Warning: Raises if TypeMap size is exceeded, <br>
//!	    or TypeMap is not defined properly, <br>
//!	    or TypeMapEntry Index is out of range according <br>
//!	    to the supported hardware <br>
virtual /*instead*/  void SetEntry(OCNaroWrappers::OCAspect_TypeMapEntry^ Entry) ;

//! Modifies all entries from a new Typemap <br>
//!  Warning: Raises if TypeMap size is exceeded, <br>
//!	    or TypeMap is not defined properly, <br>
//!	    or One of new TypeMapEntry Index is out of range according <br>
//!	    to the supported hardware <br>
virtual /*instead*/  void SetEntries(OCNaroWrappers::OCAspect_TypeMap^ Typemap) ;

//! Returns the Number of Free Types in the Typemap <br>
//!	    depending of the HardWare <br>
//!  Warning: Raises if TypeMap is not defined properly <br>
 /*instead*/  Standard_Integer FreeTypes() ;

~OCXw_TypeMap()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
