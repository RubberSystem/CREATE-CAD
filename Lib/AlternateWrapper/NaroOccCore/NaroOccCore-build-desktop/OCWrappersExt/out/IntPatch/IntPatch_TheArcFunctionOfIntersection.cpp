// File generated by CPPExt (CPP file)
//

#include "IntPatch_TheArcFunctionOfIntersection.h"
#include "../Converter.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "IntPatch_HCurve2dTool.h"
#include "IntPatch_HSurfaceTool.h"
#include "IntPatch_HInterTool.h"
#include "../IntSurf/IntSurf_Quadric.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCIntPatch_TheArcFunctionOfIntersection::OCIntPatch_TheArcFunctionOfIntersection(IntPatch_TheArcFunctionOfIntersection* nativeHandle) : OCmath_FunctionWithDerivative((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIntPatch_TheArcFunctionOfIntersection::OCIntPatch_TheArcFunctionOfIntersection() : OCmath_FunctionWithDerivative((OCDummy^)nullptr)

{
  nativeHandle = new IntPatch_TheArcFunctionOfIntersection();
}

 void OCIntPatch_TheArcFunctionOfIntersection::SetQuadric(OCNaroWrappers::OCIntSurf_Quadric^ Q)
{
  ((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->SetQuadric(*((IntSurf_Quadric*)Q->Handle));
}

 void OCIntPatch_TheArcFunctionOfIntersection::Set(OCNaroWrappers::OCAdaptor2d_HCurve2d^ A)
{
  ((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->Set(*((Handle_Adaptor2d_HCurve2d*)A->Handle));
}

 void OCIntPatch_TheArcFunctionOfIntersection::Set(OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  ((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->Set(*((Handle_Adaptor3d_HSurface*)S->Handle));
}

 System::Boolean OCIntPatch_TheArcFunctionOfIntersection::Value(Standard_Real X, Standard_Real& F)
{
  return OCConverter::StandardBooleanToBoolean(((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->Value(X, F));
}

 System::Boolean OCIntPatch_TheArcFunctionOfIntersection::Derivative(Standard_Real X, Standard_Real& D)
{
  return OCConverter::StandardBooleanToBoolean(((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->Derivative(X, D));
}

 System::Boolean OCIntPatch_TheArcFunctionOfIntersection::Values(Standard_Real X, Standard_Real& F, Standard_Real& D)
{
  return OCConverter::StandardBooleanToBoolean(((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->Values(X, F, D));
}

 Standard_Integer OCIntPatch_TheArcFunctionOfIntersection::NbSamples()
{
  return ((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->NbSamples();
}

 Standard_Integer OCIntPatch_TheArcFunctionOfIntersection::GetStateNumber()
{
  return ((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->GetStateNumber();
}

OCgp_Pnt^ OCIntPatch_TheArcFunctionOfIntersection::Valpoint(Standard_Integer Index)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->Valpoint(Index);
  return gcnew OCgp_Pnt(tmp);
}

OCIntSurf_Quadric^ OCIntPatch_TheArcFunctionOfIntersection::Quadric()
{
  IntSurf_Quadric* tmp = new IntSurf_Quadric();
  *tmp = ((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->Quadric();
  return gcnew OCIntSurf_Quadric(tmp);
}

OCAdaptor2d_HCurve2d^ OCIntPatch_TheArcFunctionOfIntersection::Arc()
{
  Handle(Adaptor2d_HCurve2d) tmp = ((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->Arc();
  return gcnew OCAdaptor2d_HCurve2d(&tmp);
}

OCAdaptor3d_HSurface^ OCIntPatch_TheArcFunctionOfIntersection::Surface()
{
  Handle(Adaptor3d_HSurface) tmp = ((IntPatch_TheArcFunctionOfIntersection*)nativeHandle)->Surface();
  return gcnew OCAdaptor3d_HSurface(&tmp);
}


