// File generated by CPPExt (CPP file)
//

#include "IntPatch_Intersection.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "../Adaptor3d/Adaptor3d_TopolTool.h"
#include "../IntSurf/IntSurf_ListOfPntOn2S.h"
#include "IntPatch_Point.h"
#include "IntPatch_Line.h"
#include "IntPatch_SequenceOfLine.h"


using namespace OCNaroWrappers;

OCIntPatch_Intersection::OCIntPatch_Intersection(IntPatch_Intersection* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCIntPatch_Intersection::OCIntPatch_Intersection() 
{
  nativeHandle = new IntPatch_Intersection();
}

OCIntPatch_Intersection::OCIntPatch_Intersection(OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_TopolTool^ D1, OCNaroWrappers::OCAdaptor3d_HSurface^ S2, OCNaroWrappers::OCAdaptor3d_TopolTool^ D2, Standard_Real TolArc, Standard_Real TolTang) 
{
  nativeHandle = new IntPatch_Intersection(*((Handle_Adaptor3d_HSurface*)S1->Handle), *((Handle_Adaptor3d_TopolTool*)D1->Handle), *((Handle_Adaptor3d_HSurface*)S2->Handle), *((Handle_Adaptor3d_TopolTool*)D2->Handle), TolArc, TolTang);
}

OCIntPatch_Intersection::OCIntPatch_Intersection(OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_TopolTool^ D1, Standard_Real TolArc, Standard_Real TolTang) 
{
  nativeHandle = new IntPatch_Intersection(*((Handle_Adaptor3d_HSurface*)S1->Handle), *((Handle_Adaptor3d_TopolTool*)D1->Handle), TolArc, TolTang);
}

 void OCIntPatch_Intersection::SetTolerances(Standard_Real TolArc, Standard_Real TolTang, Standard_Real UVMaxStep, Standard_Real Fleche)
{
  ((IntPatch_Intersection*)nativeHandle)->SetTolerances(TolArc, TolTang, UVMaxStep, Fleche);
}

 void OCIntPatch_Intersection::Perform(OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_TopolTool^ D1, OCNaroWrappers::OCAdaptor3d_HSurface^ S2, OCNaroWrappers::OCAdaptor3d_TopolTool^ D2, Standard_Real TolArc, Standard_Real TolTang)
{
  ((IntPatch_Intersection*)nativeHandle)->Perform(*((Handle_Adaptor3d_HSurface*)S1->Handle), *((Handle_Adaptor3d_TopolTool*)D1->Handle), *((Handle_Adaptor3d_HSurface*)S2->Handle), *((Handle_Adaptor3d_TopolTool*)D2->Handle), TolArc, TolTang);
}

 void OCIntPatch_Intersection::Perform(OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_TopolTool^ D1, OCNaroWrappers::OCAdaptor3d_HSurface^ S2, OCNaroWrappers::OCAdaptor3d_TopolTool^ D2, Standard_Real TolArc, Standard_Real TolTang, OCNaroWrappers::OCIntSurf_ListOfPntOn2S^ LOfPnts, System::Boolean RestrictLine)
{
  ((IntPatch_Intersection*)nativeHandle)->Perform(*((Handle_Adaptor3d_HSurface*)S1->Handle), *((Handle_Adaptor3d_TopolTool*)D1->Handle), *((Handle_Adaptor3d_HSurface*)S2->Handle), *((Handle_Adaptor3d_TopolTool*)D2->Handle), TolArc, TolTang, *((IntSurf_ListOfPntOn2S*)LOfPnts->Handle), OCConverter::BooleanToStandardBoolean(RestrictLine));
}

 void OCIntPatch_Intersection::Perform(OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_TopolTool^ D1, OCNaroWrappers::OCAdaptor3d_HSurface^ S2, OCNaroWrappers::OCAdaptor3d_TopolTool^ D2, Standard_Real U1, Standard_Real V1, Standard_Real U2, Standard_Real V2, Standard_Real TolArc, Standard_Real TolTang)
{
  ((IntPatch_Intersection*)nativeHandle)->Perform(*((Handle_Adaptor3d_HSurface*)S1->Handle), *((Handle_Adaptor3d_TopolTool*)D1->Handle), *((Handle_Adaptor3d_HSurface*)S2->Handle), *((Handle_Adaptor3d_TopolTool*)D2->Handle), U1, V1, U2, V2, TolArc, TolTang);
}

 void OCIntPatch_Intersection::Perform(OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_TopolTool^ D1, Standard_Real TolArc, Standard_Real TolTang)
{
  ((IntPatch_Intersection*)nativeHandle)->Perform(*((Handle_Adaptor3d_HSurface*)S1->Handle), *((Handle_Adaptor3d_TopolTool*)D1->Handle), TolArc, TolTang);
}

 System::Boolean OCIntPatch_Intersection::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((IntPatch_Intersection*)nativeHandle)->IsDone());
}

 System::Boolean OCIntPatch_Intersection::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((IntPatch_Intersection*)nativeHandle)->IsEmpty());
}

 System::Boolean OCIntPatch_Intersection::TangentFaces()
{
  return OCConverter::StandardBooleanToBoolean(((IntPatch_Intersection*)nativeHandle)->TangentFaces());
}

 System::Boolean OCIntPatch_Intersection::OppositeFaces()
{
  return OCConverter::StandardBooleanToBoolean(((IntPatch_Intersection*)nativeHandle)->OppositeFaces());
}

 Standard_Integer OCIntPatch_Intersection::NbPnts()
{
  return ((IntPatch_Intersection*)nativeHandle)->NbPnts();
}

OCIntPatch_Point^ OCIntPatch_Intersection::Point(Standard_Integer Index)
{
  IntPatch_Point* tmp = new IntPatch_Point();
  *tmp = ((IntPatch_Intersection*)nativeHandle)->Point(Index);
  return gcnew OCIntPatch_Point(tmp);
}

 Standard_Integer OCIntPatch_Intersection::NbLines()
{
  return ((IntPatch_Intersection*)nativeHandle)->NbLines();
}

OCIntPatch_Line^ OCIntPatch_Intersection::Line(Standard_Integer Index)
{
  Handle(IntPatch_Line) tmp = ((IntPatch_Intersection*)nativeHandle)->Line(Index);
  return gcnew OCIntPatch_Line(&tmp);
}

OCIntPatch_SequenceOfLine^ OCIntPatch_Intersection::SequenceOfLine()
{
  IntPatch_SequenceOfLine* tmp = new IntPatch_SequenceOfLine();
  *tmp = ((IntPatch_Intersection*)nativeHandle)->SequenceOfLine();
  return gcnew OCIntPatch_SequenceOfLine(tmp);
}

 void OCIntPatch_Intersection::Dump(Standard_Integer Mode, OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_TopolTool^ D1, OCNaroWrappers::OCAdaptor3d_HSurface^ S2, OCNaroWrappers::OCAdaptor3d_TopolTool^ D2)
{
  ((IntPatch_Intersection*)nativeHandle)->Dump(Mode, *((Handle_Adaptor3d_HSurface*)S1->Handle), *((Handle_Adaptor3d_TopolTool*)D1->Handle), *((Handle_Adaptor3d_HSurface*)S2->Handle), *((Handle_Adaptor3d_TopolTool*)D2->Handle));
}


