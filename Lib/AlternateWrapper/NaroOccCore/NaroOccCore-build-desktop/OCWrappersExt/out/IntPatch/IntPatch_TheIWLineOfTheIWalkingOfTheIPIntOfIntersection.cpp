// File generated by CPPExt (CPP file)
//

#include "IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection.h"
#include "../Converter.h"
#include "../IntSurf/IntSurf_LineOn2S.h"
#include "../IntSurf/IntSurf_PathPoint.h"
#include "../IntSurf/IntSurf_PntOn2S.h"
#include "../gp/gp_Vec.h"


using namespace OCNaroWrappers;

OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection(Handle(IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection(*nativeHandle);
}

OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection(new IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection());
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::Reverse()
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->Reverse();
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::Cut(Standard_Integer Index)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->Cut(Index);
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::AddPoint(OCNaroWrappers::OCIntSurf_PntOn2S^ P)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->AddPoint(*((IntSurf_PntOn2S*)P->Handle));
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::AddStatusFirst(System::Boolean Closed, System::Boolean HasFirst)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->AddStatusFirst(OCConverter::BooleanToStandardBoolean(Closed), OCConverter::BooleanToStandardBoolean(HasFirst));
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::AddStatusFirst(System::Boolean Closed, System::Boolean HasLast, Standard_Integer Index, OCNaroWrappers::OCIntSurf_PathPoint^ P)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->AddStatusFirst(OCConverter::BooleanToStandardBoolean(Closed), OCConverter::BooleanToStandardBoolean(HasLast), Index, *((IntSurf_PathPoint*)P->Handle));
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::AddStatusFirstLast(System::Boolean Closed, System::Boolean HasFirst, System::Boolean HasLast)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->AddStatusFirstLast(OCConverter::BooleanToStandardBoolean(Closed), OCConverter::BooleanToStandardBoolean(HasFirst), OCConverter::BooleanToStandardBoolean(HasLast));
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::AddStatusLast(System::Boolean HasLast)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->AddStatusLast(OCConverter::BooleanToStandardBoolean(HasLast));
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::AddStatusLast(System::Boolean HasLast, Standard_Integer Index, OCNaroWrappers::OCIntSurf_PathPoint^ P)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->AddStatusLast(OCConverter::BooleanToStandardBoolean(HasLast), Index, *((IntSurf_PathPoint*)P->Handle));
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::AddIndexPassing(Standard_Integer Index)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->AddIndexPassing(Index);
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::SetTangentVector(OCNaroWrappers::OCgp_Vec^ V, Standard_Integer Index)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->SetTangentVector(*((gp_Vec*)V->Handle), Index);
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::SetTangencyAtBegining(System::Boolean IsTangent)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->SetTangencyAtBegining(OCConverter::BooleanToStandardBoolean(IsTangent));
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::SetTangencyAtEnd(System::Boolean IsTangent)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->SetTangencyAtEnd(OCConverter::BooleanToStandardBoolean(IsTangent));
}

 Standard_Integer OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::NbPoints()
{
  return (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->NbPoints();
}

OCIntSurf_PntOn2S^ OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::Value(Standard_Integer Index)
{
  IntSurf_PntOn2S* tmp = new IntSurf_PntOn2S();
  *tmp = (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->Value(Index);
  return gcnew OCIntSurf_PntOn2S(tmp);
}

OCIntSurf_LineOn2S^ OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::Line()
{
  Handle(IntSurf_LineOn2S) tmp = (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->Line();
  return gcnew OCIntSurf_LineOn2S(&tmp);
}

 System::Boolean OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::IsClosed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->IsClosed());
}

 System::Boolean OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::HasFirstPoint()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->HasFirstPoint());
}

 System::Boolean OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::HasLastPoint()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->HasLastPoint());
}

OCIntSurf_PathPoint^ OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::FirstPoint()
{
  IntSurf_PathPoint* tmp = new IntSurf_PathPoint();
  *tmp = (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->FirstPoint();
  return gcnew OCIntSurf_PathPoint(tmp);
}

 Standard_Integer OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::FirstPointIndex()
{
  return (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->FirstPointIndex();
}

OCIntSurf_PathPoint^ OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::LastPoint()
{
  IntSurf_PathPoint* tmp = new IntSurf_PathPoint();
  *tmp = (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->LastPoint();
  return gcnew OCIntSurf_PathPoint(tmp);
}

 Standard_Integer OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::LastPointIndex()
{
  return (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->LastPointIndex();
}

 Standard_Integer OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::NbPassingPoint()
{
  return (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->NbPassingPoint();
}

 void OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::PassingPoint(Standard_Integer Index, Standard_Integer& IndexLine, Standard_Integer& IndexPnts)
{
  (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->PassingPoint(Index, IndexLine, IndexPnts);
}

OCgp_Vec^ OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::TangentVector(Standard_Integer& Index)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = (*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->TangentVector(Index);
  return gcnew OCgp_Vec(tmp);
}

 System::Boolean OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::IsTangentAtBegining()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->IsTangentAtBegining());
}

 System::Boolean OCIntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection::IsTangentAtEnd()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IntPatch_TheIWLineOfTheIWalkingOfTheIPIntOfIntersection*)nativeHandle))->IsTangentAtEnd());
}


