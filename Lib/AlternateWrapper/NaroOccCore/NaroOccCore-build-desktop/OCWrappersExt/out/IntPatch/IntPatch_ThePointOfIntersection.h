// File generated by CPPExt (MPV)
//
#ifndef _IntPatch_ThePointOfIntersection_OCWrappers_HeaderFile
#define _IntPatch_ThePointOfIntersection_OCWrappers_HeaderFile

// include native header
#include <IntPatch_ThePointOfIntersection.hxx>
#include "../Converter.h"


#include "../IntSurf/IntSurf_PntOn2S.h"
#include "../IntSurf/IntSurf_Transition.h"


namespace OCNaroWrappers
{

ref class OCAdaptor3d_HVertex;
ref class OCAdaptor2d_HCurve2d;
ref class OCgp_Pnt;
ref class OCIntSurf_Transition;
ref class OCIntSurf_PntOn2S;



public ref class OCIntPatch_ThePointOfIntersection  {

protected:
  IntPatch_ThePointOfIntersection* nativeHandle;
  OCIntPatch_ThePointOfIntersection(OCDummy^) {};

public:
  property IntPatch_ThePointOfIntersection* Handle
  {
    IntPatch_ThePointOfIntersection* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntPatch_ThePointOfIntersection(IntPatch_ThePointOfIntersection* nativeHandle);

// Methods PUBLIC


OCIntPatch_ThePointOfIntersection();


 /*instead*/  void SetValue(OCNaroWrappers::OCgp_Pnt^ Pt, Standard_Real Tol, System::Boolean Tangent) ;


 /*instead*/  void SetValue(OCNaroWrappers::OCgp_Pnt^ Pt) ;


 /*instead*/  void SetTolerance(Standard_Real Tol) ;


 /*instead*/  void SetParameters(Standard_Real U1, Standard_Real V1, Standard_Real U2, Standard_Real V2) ;


 /*instead*/  void SetParameter(Standard_Real Para) ;


 /*instead*/  void SetVertex(System::Boolean OnFirst, OCNaroWrappers::OCAdaptor3d_HVertex^ V) ;


 /*instead*/  void SetArc(System::Boolean OnFirst, OCNaroWrappers::OCAdaptor2d_HCurve2d^ A, Standard_Real Param, OCNaroWrappers::OCIntSurf_Transition^ TLine, OCNaroWrappers::OCIntSurf_Transition^ TArc) ;


 /*instead*/  void SetMultiple(System::Boolean IsMult) ;


 /*instead*/  OCgp_Pnt^ Value() ;


 /*instead*/  Standard_Real ParameterOnLine() ;


 /*instead*/  Standard_Real Tolerance() ;


 /*instead*/  System::Boolean IsTangencyPoint() ;


 /*instead*/  void ParametersOnS1(Standard_Real& U1, Standard_Real& V1) ;


 /*instead*/  void ParametersOnS2(Standard_Real& U2, Standard_Real& V2) ;


 /*instead*/  System::Boolean IsMultiple() ;


 /*instead*/  System::Boolean IsOnDomS1() ;


 /*instead*/  System::Boolean IsVertexOnS1() ;


 /*instead*/  OCAdaptor3d_HVertex^ VertexOnS1() ;


 /*instead*/  OCAdaptor2d_HCurve2d^ ArcOnS1() ;


 /*instead*/  OCIntSurf_Transition^ TransitionLineArc1() ;


 /*instead*/  OCIntSurf_Transition^ TransitionOnS1() ;


 /*instead*/  Standard_Real ParameterOnArc1() ;


 /*instead*/  System::Boolean IsOnDomS2() ;


 /*instead*/  System::Boolean IsVertexOnS2() ;


 /*instead*/  OCAdaptor3d_HVertex^ VertexOnS2() ;


 /*instead*/  OCAdaptor2d_HCurve2d^ ArcOnS2() ;


 /*instead*/  OCIntSurf_Transition^ TransitionLineArc2() ;


 /*instead*/  OCIntSurf_Transition^ TransitionOnS2() ;


 /*instead*/  Standard_Real ParameterOnArc2() ;


 /*instead*/  OCIntSurf_PntOn2S^ PntOn2S() ;


 /*instead*/  void Parameters(Standard_Real& U1, Standard_Real& V1, Standard_Real& U2, Standard_Real& V2) ;


 /*instead*/  void ReverseTransition() ;


 /*instead*/  void Dump() ;

~OCIntPatch_ThePointOfIntersection()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
