// File generated by CPPExt (MPV)
//
#ifndef _IntPatch_Polygo_OCWrappers_HeaderFile
#define _IntPatch_Polygo_OCWrappers_HeaderFile

// include native header
#include <IntPatch_Polygo.hxx>
#include "../Converter.h"

#include "../Intf/Intf_Polygon2d.h"

#include "../Intf/Intf_Polygon2d.h"


namespace OCNaroWrappers
{

ref class OCgp_Pnt2d;



public ref class OCIntPatch_Polygo  : public OCIntf_Polygon2d {

protected:
  // dummy constructor;
  OCIntPatch_Polygo(OCDummy^) : OCIntf_Polygon2d((OCDummy^)nullptr) {};

public:

// constructor from native
OCIntPatch_Polygo(IntPatch_Polygo* nativeHandle);

// Methods PUBLIC


OCIntPatch_Polygo(Standard_Real theError);


 /*instead*/  Standard_Real Error() ;

//! Returns the tolerance of the polygon. <br>
virtual /*instead*/  Standard_Real DeflectionOverEstimation() ;

//! Returns the number of Segments in the polyline. <br>
virtual /*instead*/  Standard_Integer NbSegments() ;

//! Returns the points of the segment <Index> in the Polygon. <br>
virtual /*instead*/  void Segment(Standard_Integer theIndex, OCNaroWrappers::OCgp_Pnt2d^ theBegin, OCNaroWrappers::OCgp_Pnt2d^ theEnd) ;


 /*instead*/  void Dump() ;

~OCIntPatch_Polygo()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
