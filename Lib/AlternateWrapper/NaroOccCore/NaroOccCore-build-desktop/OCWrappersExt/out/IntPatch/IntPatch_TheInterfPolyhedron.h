// File generated by CPPExt (MPV)
//
#ifndef _IntPatch_TheInterfPolyhedron_OCWrappers_HeaderFile
#define _IntPatch_TheInterfPolyhedron_OCWrappers_HeaderFile

// include native header
#include <IntPatch_TheInterfPolyhedron.hxx>
#include "../Converter.h"

#include "../Intf/Intf_Interference.h"

#include "../gp/gp_XYZ.h"
#include "../Intf/Intf_Interference.h"


namespace OCNaroWrappers
{

ref class OCIntPatch_Polyhedron;
ref class OCIntPatch_PolyhedronTool;
ref class OCIntf_TangentZone;



public ref class OCIntPatch_TheInterfPolyhedron  : public OCIntf_Interference {

protected:
  // dummy constructor;
  OCIntPatch_TheInterfPolyhedron(OCDummy^) : OCIntf_Interference((OCDummy^)nullptr) {};

public:

// constructor from native
OCIntPatch_TheInterfPolyhedron(IntPatch_TheInterfPolyhedron* nativeHandle);

// Methods PUBLIC


OCIntPatch_TheInterfPolyhedron();


OCIntPatch_TheInterfPolyhedron(OCNaroWrappers::OCIntPatch_Polyhedron^ Obje1, OCNaroWrappers::OCIntPatch_Polyhedron^ Obje2);


OCIntPatch_TheInterfPolyhedron(OCNaroWrappers::OCIntPatch_Polyhedron^ Obje);


 /*instead*/  void Perform(OCNaroWrappers::OCIntPatch_Polyhedron^ Obje1, OCNaroWrappers::OCIntPatch_Polyhedron^ Obje2) ;


 /*instead*/  void Perform(OCNaroWrappers::OCIntPatch_Polyhedron^ Obje) ;

~OCIntPatch_TheInterfPolyhedron()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
