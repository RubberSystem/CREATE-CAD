// File generated by CPPExt (MPV)
//
#ifndef _IntPatch_PolyArc_OCWrappers_HeaderFile
#define _IntPatch_PolyArc_OCWrappers_HeaderFile

// include native header
#include <IntPatch_PolyArc.hxx>
#include "../Converter.h"

#include "IntPatch_Polygo.h"

#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "IntPatch_Polygo.h"


namespace OCNaroWrappers
{

ref class OCAdaptor2d_HCurve2d;
ref class OCBnd_Box2d;
ref class OCgp_Pnt2d;



public ref class OCIntPatch_PolyArc  : public OCIntPatch_Polygo {

protected:
  // dummy constructor;
  OCIntPatch_PolyArc(OCDummy^) : OCIntPatch_Polygo((OCDummy^)nullptr) {};

public:

// constructor from native
OCIntPatch_PolyArc(IntPatch_PolyArc* nativeHandle);

// Methods PUBLIC

//! Creates the polygon of the arc A on the surface S. <br>
//!          The arc is limited by the parameters Pfirst and Plast. <br>
//!          None of these parameters can be infinite. <br>
OCIntPatch_PolyArc(OCNaroWrappers::OCAdaptor2d_HCurve2d^ A, Standard_Integer NbSample, Standard_Real Pfirst, Standard_Real Plast, OCNaroWrappers::OCBnd_Box2d^ BoxOtherPolygon);


virtual /*instead*/  System::Boolean Closed() override;


 /*instead*/  Standard_Integer NbPoints() ;


 /*instead*/  OCgp_Pnt2d^ Point(Standard_Integer Index) ;


 /*instead*/  Standard_Real Parameter(Standard_Integer Index) ;


 /*instead*/  void SetOffset(Standard_Real OffsetX, Standard_Real OffsetY) ;

~OCIntPatch_PolyArc()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
