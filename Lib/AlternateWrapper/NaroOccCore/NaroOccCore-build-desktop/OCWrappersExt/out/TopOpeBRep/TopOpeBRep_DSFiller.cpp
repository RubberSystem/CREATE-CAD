// File generated by CPPExt (CPP file)
//

#include "TopOpeBRep_DSFiller.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_HDataStructure.h"
#include "../TopoDS/TopoDS_Face.h"
#include "TopOpeBRep_ShapeIntersector.h"
#include "TopOpeBRep_ShapeIntersector2d.h"
#include "TopOpeBRep_FacesFiller.h"
#include "TopOpeBRep_EdgesFiller.h"
#include "TopOpeBRep_FaceEdgeFiller.h"


using namespace OCNaroWrappers;

OCTopOpeBRep_DSFiller::OCTopOpeBRep_DSFiller(TopOpeBRep_DSFiller* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRep_DSFiller::OCTopOpeBRep_DSFiller() 
{
  nativeHandle = new TopOpeBRep_DSFiller();
}

 void OCTopOpeBRep_DSFiller::Destroy()
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->Destroy();
}

 TopOpeBRepTool_PShapeClassifier OCTopOpeBRep_DSFiller::PShapeClassifier()
{
  return ((TopOpeBRep_DSFiller*)nativeHandle)->PShapeClassifier();
}

 void OCTopOpeBRep_DSFiller::Insert(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS, System::Boolean orientFORWARD)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->Insert(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle), *((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle), OCConverter::BooleanToStandardBoolean(orientFORWARD));
}

 void OCTopOpeBRep_DSFiller::InsertIntersection(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS, System::Boolean orientFORWARD)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->InsertIntersection(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle), *((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle), OCConverter::BooleanToStandardBoolean(orientFORWARD));
}

 void OCTopOpeBRep_DSFiller::Complete(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->Complete(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRep_DSFiller::Insert2d(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->Insert2d(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle), *((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRep_DSFiller::InsertIntersection2d(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->InsertIntersection2d(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle), *((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 System::Boolean OCTopOpeBRep_DSFiller::IsMadeOf1d(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_DSFiller*)nativeHandle)->IsMadeOf1d(*((TopoDS_Shape*)S->Handle)));
}

 System::Boolean OCTopOpeBRep_DSFiller::IsContext1d(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_DSFiller*)nativeHandle)->IsContext1d(*((TopoDS_Shape*)S->Handle)));
}

 void OCTopOpeBRep_DSFiller::Insert1d(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCNaroWrappers::OCTopoDS_Face^ F1, OCNaroWrappers::OCTopoDS_Face^ F2, OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS, System::Boolean orientFORWARD)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->Insert1d(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle), *((TopoDS_Face*)F1->Handle), *((TopoDS_Face*)F2->Handle), *((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle), OCConverter::BooleanToStandardBoolean(orientFORWARD));
}

OCTopOpeBRep_ShapeIntersector^ OCTopOpeBRep_DSFiller::ChangeShapeIntersector()
{
  TopOpeBRep_ShapeIntersector* tmp = new TopOpeBRep_ShapeIntersector();
  *tmp = ((TopOpeBRep_DSFiller*)nativeHandle)->ChangeShapeIntersector();
  return gcnew OCTopOpeBRep_ShapeIntersector(tmp);
}

OCTopOpeBRep_ShapeIntersector2d^ OCTopOpeBRep_DSFiller::ChangeShapeIntersector2d()
{
  TopOpeBRep_ShapeIntersector2d* tmp = new TopOpeBRep_ShapeIntersector2d();
  *tmp = ((TopOpeBRep_DSFiller*)nativeHandle)->ChangeShapeIntersector2d();
  return gcnew OCTopOpeBRep_ShapeIntersector2d(tmp);
}

OCTopOpeBRep_FacesFiller^ OCTopOpeBRep_DSFiller::ChangeFacesFiller()
{
  TopOpeBRep_FacesFiller* tmp = new TopOpeBRep_FacesFiller();
  *tmp = ((TopOpeBRep_DSFiller*)nativeHandle)->ChangeFacesFiller();
  return gcnew OCTopOpeBRep_FacesFiller(tmp);
}

OCTopOpeBRep_EdgesFiller^ OCTopOpeBRep_DSFiller::ChangeEdgesFiller()
{
  TopOpeBRep_EdgesFiller* tmp = new TopOpeBRep_EdgesFiller();
  *tmp = ((TopOpeBRep_DSFiller*)nativeHandle)->ChangeEdgesFiller();
  return gcnew OCTopOpeBRep_EdgesFiller(tmp);
}

OCTopOpeBRep_FaceEdgeFiller^ OCTopOpeBRep_DSFiller::ChangeFaceEdgeFiller()
{
  TopOpeBRep_FaceEdgeFiller* tmp = new TopOpeBRep_FaceEdgeFiller();
  *tmp = ((TopOpeBRep_DSFiller*)nativeHandle)->ChangeFaceEdgeFiller();
  return gcnew OCTopOpeBRep_FaceEdgeFiller(tmp);
}

 void OCTopOpeBRep_DSFiller::GapFiller(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->GapFiller(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRep_DSFiller::CompleteDS(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->CompleteDS(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRep_DSFiller::Filter(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->Filter(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRep_DSFiller::Reducer(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->Reducer(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRep_DSFiller::RemoveUnsharedGeometry(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->RemoveUnsharedGeometry(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRep_DSFiller::Checker(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->Checker(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRep_DSFiller::CompleteDS2d(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_DSFiller*)nativeHandle)->CompleteDS2d(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}


