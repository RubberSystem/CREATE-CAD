// File generated by CPPExt (Transient)
//
#ifndef _TopOpeBRep_Hctxff2d_OCWrappers_HeaderFile
#define _TopOpeBRep_Hctxff2d_OCWrappers_HeaderFile

// include the wrapped class
#include <TopOpeBRep_Hctxff2d.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../TopoDS/TopoDS_Face.h"
#include "../GeomAbs/GeomAbs_SurfaceType.h"


namespace OCNaroWrappers
{

ref class OCBRepAdaptor_HSurface;
ref class OCTopoDS_Face;



public ref class OCTopOpeBRep_Hctxff2d : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCTopOpeBRep_Hctxff2d(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCTopOpeBRep_Hctxff2d(Handle(TopOpeBRep_Hctxff2d)* nativeHandle);

// Methods PUBLIC


OCTopOpeBRep_Hctxff2d();


 /*instead*/  void SetFaces(OCNaroWrappers::OCTopoDS_Face^ F1, OCNaroWrappers::OCTopoDS_Face^ F2) ;


 /*instead*/  void SetHSurfaces(OCNaroWrappers::OCBRepAdaptor_HSurface^ S1, OCNaroWrappers::OCBRepAdaptor_HSurface^ S2) ;


 /*instead*/  void SetTolerances(Standard_Real Tol1, Standard_Real Tol2) ;


 /*instead*/  void GetTolerances(Standard_Real& Tol1, Standard_Real& Tol2) ;


 /*instead*/  Standard_Real GetMaxTolerance() ;


 /*instead*/  OCTopoDS_Face^ Face(Standard_Integer I) ;


 /*instead*/  OCBRepAdaptor_HSurface^ HSurface(Standard_Integer I) ;


 /*instead*/  System::Boolean SurfacesSameOriented() ;


 /*instead*/  System::Boolean FacesSameOriented() ;


 /*instead*/  System::Boolean FaceSameOrientedWithRef(Standard_Integer I) ;

~OCTopOpeBRep_Hctxff2d()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
