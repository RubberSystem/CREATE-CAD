// File generated by CPPExt (MPV)
//
#ifndef _TopOpeBRep_VPointInterIterator_OCWrappers_HeaderFile
#define _TopOpeBRep_VPointInterIterator_OCWrappers_HeaderFile

// include native header
#include <TopOpeBRep_VPointInterIterator.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTopOpeBRep_LineInter;
ref class OCTopOpeBRep_VPointInter;



public ref class OCTopOpeBRep_VPointInterIterator  {

protected:
  TopOpeBRep_VPointInterIterator* nativeHandle;
  OCTopOpeBRep_VPointInterIterator(OCDummy^) {};

public:
  property TopOpeBRep_VPointInterIterator* Handle
  {
    TopOpeBRep_VPointInterIterator* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopOpeBRep_VPointInterIterator(TopOpeBRep_VPointInterIterator* nativeHandle);

// Methods PUBLIC


OCTopOpeBRep_VPointInterIterator();


OCTopOpeBRep_VPointInterIterator(OCNaroWrappers::OCTopOpeBRep_LineInter^ LI);


 /*instead*/  void Init(OCNaroWrappers::OCTopOpeBRep_LineInter^ LI, System::Boolean checkkeep) ;


 /*instead*/  void Init() ;


 /*instead*/  System::Boolean More() ;


 /*instead*/  void Next() ;


 /*instead*/  OCTopOpeBRep_VPointInter^ CurrentVP() ;


 /*instead*/  Standard_Integer CurrentVPIndex() ;


 /*instead*/  OCTopOpeBRep_VPointInter^ ChangeCurrentVP() ;


 /*instead*/  TopOpeBRep_PLineInter PLineInterDummy() ;

~OCTopOpeBRep_VPointInterIterator()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
