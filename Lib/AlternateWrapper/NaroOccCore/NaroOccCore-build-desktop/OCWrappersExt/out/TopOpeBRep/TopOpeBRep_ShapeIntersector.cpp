// File generated by CPPExt (CPP file)
//

#include "TopOpeBRep_ShapeIntersector.h"
#include "../Converter.h"
#include "../TopOpeBRepTool/TopOpeBRepTool_HBoxTool.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopoDS/TopoDS_Face.h"
#include "TopOpeBRep_FacesIntersector.h"
#include "TopOpeBRep_EdgesIntersector.h"
#include "TopOpeBRep_FaceEdgeIntersector.h"
#include "../TopTools/TopTools_ListOfShape.h"


using namespace OCNaroWrappers;

OCTopOpeBRep_ShapeIntersector::OCTopOpeBRep_ShapeIntersector(TopOpeBRep_ShapeIntersector* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRep_ShapeIntersector::OCTopOpeBRep_ShapeIntersector() 
{
  nativeHandle = new TopOpeBRep_ShapeIntersector();
}

 void OCTopOpeBRep_ShapeIntersector::InitIntersection(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  ((TopOpeBRep_ShapeIntersector*)nativeHandle)->InitIntersection(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle));
}

 void OCTopOpeBRep_ShapeIntersector::InitIntersection(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCNaroWrappers::OCTopoDS_Face^ F1, OCNaroWrappers::OCTopoDS_Face^ F2)
{
  ((TopOpeBRep_ShapeIntersector*)nativeHandle)->InitIntersection(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle), *((TopoDS_Face*)F1->Handle), *((TopoDS_Face*)F2->Handle));
}

OCTopoDS_Shape^ OCTopOpeBRep_ShapeIntersector::Shape(Standard_Integer Index)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRep_ShapeIntersector*)nativeHandle)->Shape(Index);
  return gcnew OCTopoDS_Shape(tmp);
}

 System::Boolean OCTopOpeBRep_ShapeIntersector::MoreIntersection()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_ShapeIntersector*)nativeHandle)->MoreIntersection());
}

 void OCTopOpeBRep_ShapeIntersector::NextIntersection()
{
  ((TopOpeBRep_ShapeIntersector*)nativeHandle)->NextIntersection();
}

OCTopOpeBRep_FacesIntersector^ OCTopOpeBRep_ShapeIntersector::ChangeFacesIntersector()
{
  TopOpeBRep_FacesIntersector* tmp = new TopOpeBRep_FacesIntersector();
  *tmp = ((TopOpeBRep_ShapeIntersector*)nativeHandle)->ChangeFacesIntersector();
  return gcnew OCTopOpeBRep_FacesIntersector(tmp);
}

OCTopOpeBRep_EdgesIntersector^ OCTopOpeBRep_ShapeIntersector::ChangeEdgesIntersector()
{
  TopOpeBRep_EdgesIntersector* tmp = new TopOpeBRep_EdgesIntersector();
  *tmp = ((TopOpeBRep_ShapeIntersector*)nativeHandle)->ChangeEdgesIntersector();
  return gcnew OCTopOpeBRep_EdgesIntersector(tmp);
}

OCTopOpeBRep_FaceEdgeIntersector^ OCTopOpeBRep_ShapeIntersector::ChangeFaceEdgeIntersector()
{
  TopOpeBRep_FaceEdgeIntersector* tmp = new TopOpeBRep_FaceEdgeIntersector();
  *tmp = ((TopOpeBRep_ShapeIntersector*)nativeHandle)->ChangeFaceEdgeIntersector();
  return gcnew OCTopOpeBRep_FaceEdgeIntersector(tmp);
}

OCTopoDS_Shape^ OCTopOpeBRep_ShapeIntersector::CurrentGeomShape(Standard_Integer Index)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRep_ShapeIntersector*)nativeHandle)->CurrentGeomShape(Index);
  return gcnew OCTopoDS_Shape(tmp);
}

 void OCTopOpeBRep_ShapeIntersector::GetTolerances(Standard_Real& tol1, Standard_Real& tol2)
{
  ((TopOpeBRep_ShapeIntersector*)nativeHandle)->GetTolerances(tol1, tol2);
}

 void OCTopOpeBRep_ShapeIntersector::DumpCurrent(Standard_Integer K)
{
  ((TopOpeBRep_ShapeIntersector*)nativeHandle)->DumpCurrent(K);
}

 Standard_Integer OCTopOpeBRep_ShapeIntersector::Index(Standard_Integer K)
{
  return ((TopOpeBRep_ShapeIntersector*)nativeHandle)->Index(K);
}

 void OCTopOpeBRep_ShapeIntersector::RejectedFaces(OCNaroWrappers::OCTopoDS_Shape^ anObj, OCNaroWrappers::OCTopoDS_Shape^ aReference, OCNaroWrappers::OCTopTools_ListOfShape^ aListOfShape)
{
  ((TopOpeBRep_ShapeIntersector*)nativeHandle)->RejectedFaces(*((TopoDS_Shape*)anObj->Handle), *((TopoDS_Shape*)aReference->Handle), *((TopTools_ListOfShape*)aListOfShape->Handle));
}


