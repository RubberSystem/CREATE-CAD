// File generated by CPPExt (CPP file)
//

#include "TopOpeBRep_FacesFiller.h"
#include "../Converter.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_HDataStructure.h"
#include "TopOpeBRep_FFDumper.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TopOpeBRep_FacesIntersector.h"
#include "TopOpeBRep_PointClassifier.h"
#include "TopOpeBRep_LineInter.h"
#include "TopOpeBRep_VPointInter.h"
#include "TopOpeBRep_VPointInterClassifier.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "TopOpeBRep_VPointInterIterator.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_Transition.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_Interference.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_ListIteratorOfListOfInterference.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_Point.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../gp/gp_Pnt.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_DataStructure.h"


using namespace OCNaroWrappers;

OCTopOpeBRep_FacesFiller::OCTopOpeBRep_FacesFiller(TopOpeBRep_FacesFiller* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRep_FacesFiller::OCTopOpeBRep_FacesFiller() 
{
  nativeHandle = new TopOpeBRep_FacesFiller();
}

 void OCTopOpeBRep_FacesFiller::Insert(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopoDS_Shape^ F2, OCNaroWrappers::OCTopOpeBRep_FacesIntersector^ FACINT, OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->Insert(*((TopoDS_Shape*)F1->Handle), *((TopoDS_Shape*)F2->Handle), *((TopOpeBRep_FacesIntersector*)FACINT->Handle), *((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRep_FacesFiller::ProcessSectionEdges()
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessSectionEdges();
}

OCTopOpeBRep_PointClassifier^ OCTopOpeBRep_FacesFiller::ChangePointClassifier()
{
  TopOpeBRep_PointClassifier* tmp = new TopOpeBRep_PointClassifier();
  *tmp = ((TopOpeBRep_FacesFiller*)nativeHandle)->ChangePointClassifier();
  return gcnew OCTopOpeBRep_PointClassifier(tmp);
}

 TopOpeBRepTool_PShapeClassifier OCTopOpeBRep_FacesFiller::PShapeClassifier()
{
  return ((TopOpeBRep_FacesFiller*)nativeHandle)->PShapeClassifier();
}

 void OCTopOpeBRep_FacesFiller::SetPShapeClassifier(TopOpeBRepTool_PShapeClassifier PSC)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->SetPShapeClassifier(PSC);
}

 void OCTopOpeBRep_FacesFiller::LoadLine(OCNaroWrappers::OCTopOpeBRep_LineInter^ L)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->LoadLine(*((TopOpeBRep_LineInter*)L->Handle));
}

 System::Boolean OCTopOpeBRep_FacesFiller::CheckLine(OCNaroWrappers::OCTopOpeBRep_LineInter^ L)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_FacesFiller*)nativeHandle)->CheckLine(*((TopOpeBRep_LineInter*)L->Handle)));
}

 void OCTopOpeBRep_FacesFiller::VP_Position(OCNaroWrappers::OCTopOpeBRep_FacesIntersector^ FACINT)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->VP_Position(*((TopOpeBRep_FacesIntersector*)FACINT->Handle));
}

 void OCTopOpeBRep_FacesFiller::VP_Position(OCNaroWrappers::OCTopOpeBRep_LineInter^ L)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->VP_Position(*((TopOpeBRep_LineInter*)L->Handle));
}

 void OCTopOpeBRep_FacesFiller::VP_PositionOnL(OCNaroWrappers::OCTopOpeBRep_LineInter^ L)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->VP_PositionOnL(*((TopOpeBRep_LineInter*)L->Handle));
}

 void OCTopOpeBRep_FacesFiller::VP_PositionOnR(OCNaroWrappers::OCTopOpeBRep_LineInter^ L)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->VP_PositionOnR(*((TopOpeBRep_LineInter*)L->Handle));
}

 void OCTopOpeBRep_FacesFiller::VP_Position(OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP, OCNaroWrappers::OCTopOpeBRep_VPointInterClassifier^ VPC)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->VP_Position(*((TopOpeBRep_VPointInter*)VP->Handle), *((TopOpeBRep_VPointInterClassifier*)VPC->Handle));
}

 void OCTopOpeBRep_FacesFiller::ProcessLine()
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessLine();
}

 void OCTopOpeBRep_FacesFiller::ResetDSC()
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ResetDSC();
}

 void OCTopOpeBRep_FacesFiller::ProcessRLine()
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessRLine();
}

 void OCTopOpeBRep_FacesFiller::FillLineVPonR()
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->FillLineVPonR();
}

 void OCTopOpeBRep_FacesFiller::FillLine()
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->FillLine();
}

 void OCTopOpeBRep_FacesFiller::AddShapesLine()
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->AddShapesLine();
}

 void OCTopOpeBRep_FacesFiller::GetESL(OCNaroWrappers::OCTopTools_ListOfShape^ LES)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->GetESL(*((TopTools_ListOfShape*)LES->Handle));
}

 void OCTopOpeBRep_FacesFiller::ProcessVPR(OCNaroWrappers::OCTopOpeBRep_FacesFiller^ FF, OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessVPR(*((TopOpeBRep_FacesFiller*)FF->Handle), *((TopOpeBRep_VPointInter*)VP->Handle));
}

 void OCTopOpeBRep_FacesFiller::ProcessVPIonR(OCNaroWrappers::OCTopOpeBRep_VPointInterIterator^ VPI, OCNaroWrappers::OCTopOpeBRepDS_Transition^ trans1, OCNaroWrappers::OCTopoDS_Shape^ F1, Standard_Integer ShapeIndex)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessVPIonR(*((TopOpeBRep_VPointInterIterator*)VPI->Handle), *((TopOpeBRepDS_Transition*)trans1->Handle), *((TopoDS_Shape*)F1->Handle), ShapeIndex);
}

 void OCTopOpeBRep_FacesFiller::ProcessVPonR(OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP, OCNaroWrappers::OCTopOpeBRepDS_Transition^ trans1, OCNaroWrappers::OCTopoDS_Shape^ F1, Standard_Integer ShapeIndex)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessVPonR(*((TopOpeBRep_VPointInter*)VP->Handle), *((TopOpeBRepDS_Transition*)trans1->Handle), *((TopoDS_Shape*)F1->Handle), ShapeIndex);
}

 void OCTopOpeBRep_FacesFiller::ProcessVPonclosingR(OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP, OCNaroWrappers::OCTopoDS_Shape^ F1, Standard_Integer ShapeIndex, OCNaroWrappers::OCTopOpeBRepDS_Transition^ transEdge, OCTopOpeBRepDS_Kind PVKind, Standard_Integer PVIndex, System::Boolean EPIfound, OCNaroWrappers::OCTopOpeBRepDS_Interference^ IEPI)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessVPonclosingR(*((TopOpeBRep_VPointInter*)VP->Handle), *((TopoDS_Shape*)F1->Handle), ShapeIndex, *((TopOpeBRepDS_Transition*)transEdge->Handle), (TopOpeBRepDS_Kind)PVKind, PVIndex, OCConverter::BooleanToStandardBoolean(EPIfound), *((Handle_TopOpeBRepDS_Interference*)IEPI->Handle));
}

 System::Boolean OCTopOpeBRep_FacesFiller::ProcessVPondgE(OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP, Standard_Integer ShapeIndex, OCTopOpeBRepDS_Kind& PVKind, Standard_Integer& PVIndex, System::Boolean& EPIfound, OCNaroWrappers::OCTopOpeBRepDS_Interference^ IEPI, System::Boolean& CPIfound, OCNaroWrappers::OCTopOpeBRepDS_Interference^ ICPI)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessVPondgE(*((TopOpeBRep_VPointInter*)VP->Handle), ShapeIndex, (TopOpeBRepDS_Kind&)PVKind, PVIndex, (Standard_Boolean&)(EPIfound), *((Handle_TopOpeBRepDS_Interference*)IEPI->Handle), (Standard_Boolean&)(CPIfound), *((Handle_TopOpeBRepDS_Interference*)ICPI->Handle)));
}

 void OCTopOpeBRep_FacesFiller::ProcessVPInotonR(OCNaroWrappers::OCTopOpeBRep_VPointInterIterator^ VPI)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessVPInotonR(*((TopOpeBRep_VPointInterIterator*)VPI->Handle));
}

 void OCTopOpeBRep_FacesFiller::ProcessVPnotonR(OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->ProcessVPnotonR(*((TopOpeBRep_VPointInter*)VP->Handle));
}

 System::Boolean OCTopOpeBRep_FacesFiller::GetGeometry(OCNaroWrappers::OCTopOpeBRepDS_ListIteratorOfListOfInterference^ IT, OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP, Standard_Integer& G, OCTopOpeBRepDS_Kind& K)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_FacesFiller*)nativeHandle)->GetGeometry(*((TopOpeBRepDS_ListIteratorOfListOfInterference*)IT->Handle), *((TopOpeBRep_VPointInter*)VP->Handle), G, (TopOpeBRepDS_Kind&)K));
}

 Standard_Integer OCTopOpeBRep_FacesFiller::MakeGeometry(OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP, Standard_Integer ShapeIndex, OCTopOpeBRepDS_Kind& K)
{
  return ((TopOpeBRep_FacesFiller*)nativeHandle)->MakeGeometry(*((TopOpeBRep_VPointInter*)VP->Handle), ShapeIndex, (TopOpeBRepDS_Kind&)K);
}

 void OCTopOpeBRep_FacesFiller::StoreCurveInterference(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->StoreCurveInterference(*((Handle_TopOpeBRepDS_Interference*)I->Handle));
}

 System::Boolean OCTopOpeBRep_FacesFiller::GetFFGeometry(OCNaroWrappers::OCTopOpeBRepDS_Point^ DSP, OCTopOpeBRepDS_Kind& K, Standard_Integer& G)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_FacesFiller*)nativeHandle)->GetFFGeometry(*((TopOpeBRepDS_Point*)DSP->Handle), (TopOpeBRepDS_Kind&)K, G));
}

 System::Boolean OCTopOpeBRep_FacesFiller::GetFFGeometry(OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP, OCTopOpeBRepDS_Kind& K, Standard_Integer& G)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_FacesFiller*)nativeHandle)->GetFFGeometry(*((TopOpeBRep_VPointInter*)VP->Handle), (TopOpeBRepDS_Kind&)K, G));
}

OCTopOpeBRep_FacesIntersector^ OCTopOpeBRep_FacesFiller::ChangeFacesIntersector()
{
  TopOpeBRep_FacesIntersector* tmp = new TopOpeBRep_FacesIntersector();
  *tmp = ((TopOpeBRep_FacesFiller*)nativeHandle)->ChangeFacesIntersector();
  return gcnew OCTopOpeBRep_FacesIntersector(tmp);
}

OCTopOpeBRepDS_HDataStructure^ OCTopOpeBRep_FacesFiller::HDataStructure()
{
  Handle(TopOpeBRepDS_HDataStructure) tmp = ((TopOpeBRep_FacesFiller*)nativeHandle)->HDataStructure();
  return gcnew OCTopOpeBRepDS_HDataStructure(&tmp);
}

OCTopOpeBRepDS_DataStructure^ OCTopOpeBRep_FacesFiller::ChangeDataStructure()
{
  TopOpeBRepDS_DataStructure* tmp = new TopOpeBRepDS_DataStructure();
  *tmp = ((TopOpeBRep_FacesFiller*)nativeHandle)->ChangeDataStructure();
  return gcnew OCTopOpeBRepDS_DataStructure(tmp);
}

OCTopoDS_Face^ OCTopOpeBRep_FacesFiller::Face(Standard_Integer I)
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = ((TopOpeBRep_FacesFiller*)nativeHandle)->Face(I);
  return gcnew OCTopoDS_Face(tmp);
}

OCTopOpeBRepDS_Transition^ OCTopOpeBRep_FacesFiller::FaceFaceTransition(OCNaroWrappers::OCTopOpeBRep_LineInter^ L, Standard_Integer I)
{
  TopOpeBRepDS_Transition* tmp = new TopOpeBRepDS_Transition();
  *tmp = ((TopOpeBRep_FacesFiller*)nativeHandle)->FaceFaceTransition(*((TopOpeBRep_LineInter*)L->Handle), I);
  return gcnew OCTopOpeBRepDS_Transition(tmp);
}

OCTopOpeBRepDS_Transition^ OCTopOpeBRep_FacesFiller::FaceFaceTransition(Standard_Integer I)
{
  TopOpeBRepDS_Transition* tmp = new TopOpeBRepDS_Transition();
  *tmp = ((TopOpeBRep_FacesFiller*)nativeHandle)->FaceFaceTransition(I);
  return gcnew OCTopOpeBRepDS_Transition(tmp);
}

 TopOpeBRep_PFacesIntersector OCTopOpeBRep_FacesFiller::PFacesIntersectorDummy()
{
  return ((TopOpeBRep_FacesFiller*)nativeHandle)->PFacesIntersectorDummy();
}

 TopOpeBRepDS_PDataStructure OCTopOpeBRep_FacesFiller::PDataStructureDummy()
{
  return ((TopOpeBRep_FacesFiller*)nativeHandle)->PDataStructureDummy();
}

 TopOpeBRep_PLineInter OCTopOpeBRep_FacesFiller::PLineInterDummy()
{
  return ((TopOpeBRep_FacesFiller*)nativeHandle)->PLineInterDummy();
}

 void OCTopOpeBRep_FacesFiller::SetTraceIndex(Standard_Integer exF1, Standard_Integer exF2)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->SetTraceIndex(exF1, exF2);
}

 void OCTopOpeBRep_FacesFiller::GetTraceIndex(Standard_Integer& exF1, Standard_Integer& exF2)
{
  ((TopOpeBRep_FacesFiller*)nativeHandle)->GetTraceIndex(exF1, exF2);
}

 void OCTopOpeBRep_FacesFiller::Lminmax(OCNaroWrappers::OCTopOpeBRep_LineInter^ L, Standard_Real& pmin, Standard_Real& pmax)
{
  TopOpeBRep_FacesFiller::Lminmax(*((TopOpeBRep_LineInter*)L->Handle), pmin, pmax);
}

 System::Boolean OCTopOpeBRep_FacesFiller::LSameDomainERL(OCNaroWrappers::OCTopOpeBRep_LineInter^ L, OCNaroWrappers::OCTopTools_ListOfShape^ ERL)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRep_FacesFiller::LSameDomainERL(*((TopOpeBRep_LineInter*)L->Handle), *((TopTools_ListOfShape*)ERL->Handle)));
}

 System::Boolean OCTopOpeBRep_FacesFiller::IsVPtransLok(OCNaroWrappers::OCTopOpeBRep_LineInter^ L, Standard_Integer iVP, Standard_Integer SI12, OCNaroWrappers::OCTopOpeBRepDS_Transition^ T)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRep_FacesFiller::IsVPtransLok(*((TopOpeBRep_LineInter*)L->Handle), iVP, SI12, *((TopOpeBRepDS_Transition*)T->Handle)));
}

 System::Boolean OCTopOpeBRep_FacesFiller::TransvpOK(OCNaroWrappers::OCTopOpeBRep_LineInter^ L, Standard_Integer iVP, Standard_Integer SI, System::Boolean isINOUT)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRep_FacesFiller::TransvpOK(*((TopOpeBRep_LineInter*)L->Handle), iVP, SI, OCConverter::BooleanToStandardBoolean(isINOUT)));
}

 Standard_Real OCTopOpeBRep_FacesFiller::VPParamOnER(OCNaroWrappers::OCTopOpeBRep_VPointInter^ vp, OCNaroWrappers::OCTopOpeBRep_LineInter^ Lrest)
{
  return TopOpeBRep_FacesFiller::VPParamOnER(*((TopOpeBRep_VPointInter*)vp->Handle), *((TopOpeBRep_LineInter*)Lrest->Handle));
}

 System::Boolean OCTopOpeBRep_FacesFiller::EqualpPonR(OCNaroWrappers::OCTopOpeBRep_LineInter^ Lrest, OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP1, OCNaroWrappers::OCTopOpeBRep_VPointInter^ VP2)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRep_FacesFiller::EqualpPonR(*((TopOpeBRep_LineInter*)Lrest->Handle), *((TopOpeBRep_VPointInter*)VP1->Handle), *((TopOpeBRep_VPointInter*)VP2->Handle)));
}

 System::Boolean OCTopOpeBRep_FacesFiller::EqualpP(OCNaroWrappers::OCTopOpeBRep_LineInter^ L, Standard_Integer iVP1, Standard_Integer iVP2)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRep_FacesFiller::EqualpP(*((TopOpeBRep_LineInter*)L->Handle), iVP1, iVP2));
}


