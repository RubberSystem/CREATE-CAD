// File generated by CPPExt (CPP file)
//

#include "TopOpeBRep_LineInter.h"
#include "../Converter.h"
#include "../IntPatch/IntPatch_Line.h"
#include "../IntPatch/IntPatch_ALine.h"
#include "../IntPatch/IntPatch_RLine.h"
#include "../IntPatch/IntPatch_WLine.h"
#include "../IntPatch/IntPatch_GLine.h"
#include "TopOpeBRep_HArray1OfVPointInter.h"
#include "../BRepAdaptor/BRepAdaptor_Surface.h"
#include "../TopoDS/TopoDS_Face.h"
#include "TopOpeBRep_VPointInter.h"
#include "TopOpeBRep_WPointInter.h"
#include "../Geom/Geom_Curve.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_Transition.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "TopOpeBRep_Bipoint.h"


using namespace OCNaroWrappers;

OCTopOpeBRep_LineInter::OCTopOpeBRep_LineInter(TopOpeBRep_LineInter* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRep_LineInter::OCTopOpeBRep_LineInter() 
{
  nativeHandle = new TopOpeBRep_LineInter();
}

 void OCTopOpeBRep_LineInter::SetLine(OCNaroWrappers::OCIntPatch_Line^ L, OCNaroWrappers::OCBRepAdaptor_Surface^ S1, OCNaroWrappers::OCBRepAdaptor_Surface^ S2)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->SetLine(*((Handle_IntPatch_Line*)L->Handle), *((BRepAdaptor_Surface*)S1->Handle), *((BRepAdaptor_Surface*)S2->Handle));
}

 void OCTopOpeBRep_LineInter::SetFaces(OCNaroWrappers::OCTopoDS_Face^ F1, OCNaroWrappers::OCTopoDS_Face^ F2)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->SetFaces(*((TopoDS_Face*)F1->Handle), *((TopoDS_Face*)F2->Handle));
}

 OCTopOpeBRep_TypeLineCurve OCTopOpeBRep_LineInter::TypeLineCurve()
{
  return (OCTopOpeBRep_TypeLineCurve)(((TopOpeBRep_LineInter*)nativeHandle)->TypeLineCurve());
}

 Standard_Integer OCTopOpeBRep_LineInter::NbVPoint()
{
  return ((TopOpeBRep_LineInter*)nativeHandle)->NbVPoint();
}

OCTopOpeBRep_VPointInter^ OCTopOpeBRep_LineInter::VPoint(Standard_Integer I)
{
  TopOpeBRep_VPointInter* tmp = new TopOpeBRep_VPointInter();
  *tmp = ((TopOpeBRep_LineInter*)nativeHandle)->VPoint(I);
  return gcnew OCTopOpeBRep_VPointInter(tmp);
}

OCTopOpeBRep_VPointInter^ OCTopOpeBRep_LineInter::ChangeVPoint(Standard_Integer I)
{
  TopOpeBRep_VPointInter* tmp = new TopOpeBRep_VPointInter();
  *tmp = ((TopOpeBRep_LineInter*)nativeHandle)->ChangeVPoint(I);
  return gcnew OCTopOpeBRep_VPointInter(tmp);
}

 void OCTopOpeBRep_LineInter::SetINL()
{
  ((TopOpeBRep_LineInter*)nativeHandle)->SetINL();
}

 System::Boolean OCTopOpeBRep_LineInter::INL()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_LineInter*)nativeHandle)->INL());
}

 void OCTopOpeBRep_LineInter::SetIsVClosed()
{
  ((TopOpeBRep_LineInter*)nativeHandle)->SetIsVClosed();
}

 System::Boolean OCTopOpeBRep_LineInter::IsVClosed()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_LineInter*)nativeHandle)->IsVClosed());
}

 void OCTopOpeBRep_LineInter::SetOK(System::Boolean B)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->SetOK(OCConverter::BooleanToStandardBoolean(B));
}

 System::Boolean OCTopOpeBRep_LineInter::OK()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_LineInter*)nativeHandle)->OK());
}

 void OCTopOpeBRep_LineInter::SetHasVPonR()
{
  ((TopOpeBRep_LineInter*)nativeHandle)->SetHasVPonR();
}

 System::Boolean OCTopOpeBRep_LineInter::HasVPonR()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_LineInter*)nativeHandle)->HasVPonR());
}

 void OCTopOpeBRep_LineInter::SetVPBounds()
{
  ((TopOpeBRep_LineInter*)nativeHandle)->SetVPBounds();
}

 void OCTopOpeBRep_LineInter::VPBounds(Standard_Integer& f, Standard_Integer& l, Standard_Integer& n)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->VPBounds(f, l, n);
}

 System::Boolean OCTopOpeBRep_LineInter::IsPeriodic()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_LineInter*)nativeHandle)->IsPeriodic());
}

 Standard_Real OCTopOpeBRep_LineInter::Period()
{
  return ((TopOpeBRep_LineInter*)nativeHandle)->Period();
}

 void OCTopOpeBRep_LineInter::Bounds(Standard_Real& f, Standard_Real& l)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->Bounds(f, l);
}

 System::Boolean OCTopOpeBRep_LineInter::HasVInternal()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_LineInter*)nativeHandle)->HasVInternal());
}

 Standard_Integer OCTopOpeBRep_LineInter::NbWPoint()
{
  return ((TopOpeBRep_LineInter*)nativeHandle)->NbWPoint();
}

OCTopOpeBRep_WPointInter^ OCTopOpeBRep_LineInter::WPoint(Standard_Integer I)
{
  TopOpeBRep_WPointInter* tmp = new TopOpeBRep_WPointInter();
  *tmp = ((TopOpeBRep_LineInter*)nativeHandle)->WPoint(I);
  return gcnew OCTopOpeBRep_WPointInter(tmp);
}

 OCIntSurf_TypeTrans OCTopOpeBRep_LineInter::TransitionOnS1()
{
  return (OCIntSurf_TypeTrans)(((TopOpeBRep_LineInter*)nativeHandle)->TransitionOnS1());
}

 OCIntSurf_TypeTrans OCTopOpeBRep_LineInter::TransitionOnS2()
{
  return (OCIntSurf_TypeTrans)(((TopOpeBRep_LineInter*)nativeHandle)->TransitionOnS2());
}

 OCIntSurf_Situation OCTopOpeBRep_LineInter::SituationS1()
{
  return (OCIntSurf_Situation)(((TopOpeBRep_LineInter*)nativeHandle)->SituationS1());
}

 OCIntSurf_Situation OCTopOpeBRep_LineInter::SituationS2()
{
  return (OCIntSurf_Situation)(((TopOpeBRep_LineInter*)nativeHandle)->SituationS2());
}

OCGeom_Curve^ OCTopOpeBRep_LineInter::Curve()
{
  Handle(Geom_Curve) tmp = ((TopOpeBRep_LineInter*)nativeHandle)->Curve();
  return gcnew OCGeom_Curve(&tmp);
}

OCGeom_Curve^ OCTopOpeBRep_LineInter::Curve(Standard_Real parmin, Standard_Real parmax)
{
  Handle(Geom_Curve) tmp = ((TopOpeBRep_LineInter*)nativeHandle)->Curve(parmin, parmax);
  return gcnew OCGeom_Curve(&tmp);
}

OCTopoDS_Shape^ OCTopOpeBRep_LineInter::Arc()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRep_LineInter*)nativeHandle)->Arc();
  return gcnew OCTopoDS_Shape(tmp);
}

 System::Boolean OCTopOpeBRep_LineInter::ArcIsEdge(Standard_Integer I)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_LineInter*)nativeHandle)->ArcIsEdge(I));
}

OCIntPatch_WLine^ OCTopOpeBRep_LineInter::LineW()
{
  Handle(IntPatch_WLine) tmp = ((TopOpeBRep_LineInter*)nativeHandle)->LineW();
  return gcnew OCIntPatch_WLine(&tmp);
}

OCIntPatch_GLine^ OCTopOpeBRep_LineInter::LineG()
{
  Handle(IntPatch_GLine) tmp = ((TopOpeBRep_LineInter*)nativeHandle)->LineG();
  return gcnew OCIntPatch_GLine(&tmp);
}

OCIntPatch_RLine^ OCTopOpeBRep_LineInter::LineR()
{
  Handle(IntPatch_RLine) tmp = ((TopOpeBRep_LineInter*)nativeHandle)->LineR();
  return gcnew OCIntPatch_RLine(&tmp);
}

 System::Boolean OCTopOpeBRep_LineInter::HasFirstPoint()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_LineInter*)nativeHandle)->HasFirstPoint());
}

 System::Boolean OCTopOpeBRep_LineInter::HasLastPoint()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_LineInter*)nativeHandle)->HasLastPoint());
}

 void OCTopOpeBRep_LineInter::ComputeFaceFaceTransition()
{
  ((TopOpeBRep_LineInter*)nativeHandle)->ComputeFaceFaceTransition();
}

OCTopOpeBRepDS_Transition^ OCTopOpeBRep_LineInter::FaceFaceTransition(Standard_Integer I)
{
  TopOpeBRepDS_Transition* tmp = new TopOpeBRepDS_Transition();
  *tmp = ((TopOpeBRep_LineInter*)nativeHandle)->FaceFaceTransition(I);
  return gcnew OCTopOpeBRepDS_Transition(tmp);
}

 void OCTopOpeBRep_LineInter::Index(Standard_Integer I)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->Index(I);
}

 Standard_Integer OCTopOpeBRep_LineInter::Index()
{
  return ((TopOpeBRep_LineInter*)nativeHandle)->Index();
}

 void OCTopOpeBRep_LineInter::DumpType()
{
  ((TopOpeBRep_LineInter*)nativeHandle)->DumpType();
}

 void OCTopOpeBRep_LineInter::DumpVPoint(Standard_Integer I, OCNaroWrappers::OCTCollection_AsciiString^ s1, OCNaroWrappers::OCTCollection_AsciiString^ s2)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->DumpVPoint(I, *((TCollection_AsciiString*)s1->Handle), *((TCollection_AsciiString*)s2->Handle));
}

 void OCTopOpeBRep_LineInter::DumpBipoint(OCNaroWrappers::OCTopOpeBRep_Bipoint^ B, OCNaroWrappers::OCTCollection_AsciiString^ s1, OCNaroWrappers::OCTCollection_AsciiString^ s2)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->DumpBipoint(*((TopOpeBRep_Bipoint*)B->Handle), *((TCollection_AsciiString*)s1->Handle), *((TCollection_AsciiString*)s2->Handle));
}

 void OCTopOpeBRep_LineInter::SetTraceIndex(Standard_Integer exF1, Standard_Integer exF2)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->SetTraceIndex(exF1, exF2);
}

 void OCTopOpeBRep_LineInter::GetTraceIndex(Standard_Integer& exF1, Standard_Integer& exF2)
{
  ((TopOpeBRep_LineInter*)nativeHandle)->GetTraceIndex(exF1, exF2);
}

 Standard_OStream& OCTopOpeBRep_LineInter::DumpLineTransitions(Standard_OStream& OS)
{
  return ((TopOpeBRep_LineInter*)nativeHandle)->DumpLineTransitions(OS);
}


