// File generated by CPPExt (MPV)
//
#ifndef _TopOpeBRep_LineInter_OCWrappers_HeaderFile
#define _TopOpeBRep_LineInter_OCWrappers_HeaderFile

// include native header
#include <TopOpeBRep_LineInter.hxx>
#include "../Converter.h"


#include "TopOpeBRep_TypeLineCurve.h"
#include "TopOpeBRep_WPointInter.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_Transition.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../IntSurf/IntSurf_TypeTrans.h"
#include "../IntSurf/IntSurf_Situation.h"


namespace OCNaroWrappers
{

ref class OCIntPatch_Line;
ref class OCIntPatch_ALine;
ref class OCIntPatch_RLine;
ref class OCIntPatch_WLine;
ref class OCIntPatch_GLine;
ref class OCTopOpeBRep_HArray1OfVPointInter;
ref class OCBRepAdaptor_Surface;
ref class OCTopoDS_Face;
ref class OCTopOpeBRep_VPointInter;
ref class OCTopOpeBRep_WPointInter;
ref class OCGeom_Curve;
ref class OCTopoDS_Shape;
ref class OCTopOpeBRepDS_Transition;
ref class OCTCollection_AsciiString;
ref class OCTopOpeBRep_Bipoint;



public ref class OCTopOpeBRep_LineInter  {

protected:
  TopOpeBRep_LineInter* nativeHandle;
  OCTopOpeBRep_LineInter(OCDummy^) {};

public:
  property TopOpeBRep_LineInter* Handle
  {
    TopOpeBRep_LineInter* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopOpeBRep_LineInter(TopOpeBRep_LineInter* nativeHandle);

// Methods PUBLIC


OCTopOpeBRep_LineInter();


 /*instead*/  void SetLine(OCNaroWrappers::OCIntPatch_Line^ L, OCNaroWrappers::OCBRepAdaptor_Surface^ S1, OCNaroWrappers::OCBRepAdaptor_Surface^ S2) ;


 /*instead*/  void SetFaces(OCNaroWrappers::OCTopoDS_Face^ F1, OCNaroWrappers::OCTopoDS_Face^ F2) ;


 /*instead*/  OCTopOpeBRep_TypeLineCurve TypeLineCurve() ;


 /*instead*/  Standard_Integer NbVPoint() ;


 /*instead*/  OCTopOpeBRep_VPointInter^ VPoint(Standard_Integer I) ;


 /*instead*/  OCTopOpeBRep_VPointInter^ ChangeVPoint(Standard_Integer I) ;


 /*instead*/  void SetINL() ;


 /*instead*/  System::Boolean INL() ;


 /*instead*/  void SetIsVClosed() ;


 /*instead*/  System::Boolean IsVClosed() ;


 /*instead*/  void SetOK(System::Boolean B) ;


 /*instead*/  System::Boolean OK() ;


 /*instead*/  void SetHasVPonR() ;


 /*instead*/  System::Boolean HasVPonR() ;


 /*instead*/  void SetVPBounds() ;


 /*instead*/  void VPBounds(Standard_Integer& f, Standard_Integer& l, Standard_Integer& n) ;


 /*instead*/  System::Boolean IsPeriodic() ;


 /*instead*/  Standard_Real Period() ;


 /*instead*/  void Bounds(Standard_Real& f, Standard_Real& l) ;


 /*instead*/  System::Boolean HasVInternal() ;


 /*instead*/  Standard_Integer NbWPoint() ;


 /*instead*/  OCTopOpeBRep_WPointInter^ WPoint(Standard_Integer I) ;


 /*instead*/  OCIntSurf_TypeTrans TransitionOnS1() ;


 /*instead*/  OCIntSurf_TypeTrans TransitionOnS2() ;


 /*instead*/  OCIntSurf_Situation SituationS1() ;


 /*instead*/  OCIntSurf_Situation SituationS2() ;


 /*instead*/  OCGeom_Curve^ Curve() ;


 /*instead*/  OCGeom_Curve^ Curve(Standard_Real parmin, Standard_Real parmax) ;

//! returns the edge of a RESTRICTION line (or a null edge). <br>
 /*instead*/  OCTopoDS_Shape^ Arc() ;

//! returns true if Arc() edge (of a RESTRICTION line) is <br>
//!          an edge of the original face <Index> (1 or 2). <br>
 /*instead*/  System::Boolean ArcIsEdge(Standard_Integer I) ;


 /*instead*/  OCIntPatch_WLine^ LineW() ;


 /*instead*/  OCIntPatch_GLine^ LineG() ;


 /*instead*/  OCIntPatch_RLine^ LineR() ;


 /*instead*/  System::Boolean HasFirstPoint() ;


 /*instead*/  System::Boolean HasLastPoint() ;


 /*instead*/  void ComputeFaceFaceTransition() ;


 /*instead*/  OCTopOpeBRepDS_Transition^ FaceFaceTransition(Standard_Integer I) ;


 /*instead*/  void Index(Standard_Integer I) ;


 /*instead*/  Standard_Integer Index() ;


 /*instead*/  void DumpType() ;


 /*instead*/  void DumpVPoint(Standard_Integer I, OCNaroWrappers::OCTCollection_AsciiString^ s1, OCNaroWrappers::OCTCollection_AsciiString^ s2) ;


 /*instead*/  void DumpBipoint(OCNaroWrappers::OCTopOpeBRep_Bipoint^ B, OCNaroWrappers::OCTCollection_AsciiString^ s1, OCNaroWrappers::OCTCollection_AsciiString^ s2) ;


 /*instead*/  void SetTraceIndex(Standard_Integer exF1, Standard_Integer exF2) ;


 /*instead*/  void GetTraceIndex(Standard_Integer& exF1, Standard_Integer& exF2) ;


 /*instead*/  Standard_OStream& DumpLineTransitions(Standard_OStream& OS) ;

~OCTopOpeBRep_LineInter()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
