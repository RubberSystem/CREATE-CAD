// File generated by CPPExt (CPP file)
//

#include "TopOpeBRep_ShapeIntersector2d.h"
#include "../Converter.h"
#include "../TopOpeBRepTool/TopOpeBRepTool_HBoxTool.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TopOpeBRep_EdgesIntersector.h"


using namespace OCNaroWrappers;

OCTopOpeBRep_ShapeIntersector2d::OCTopOpeBRep_ShapeIntersector2d(TopOpeBRep_ShapeIntersector2d* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRep_ShapeIntersector2d::OCTopOpeBRep_ShapeIntersector2d() 
{
  nativeHandle = new TopOpeBRep_ShapeIntersector2d();
}

 void OCTopOpeBRep_ShapeIntersector2d::InitIntersection(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  ((TopOpeBRep_ShapeIntersector2d*)nativeHandle)->InitIntersection(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle));
}

OCTopoDS_Shape^ OCTopOpeBRep_ShapeIntersector2d::Shape(Standard_Integer Index)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRep_ShapeIntersector2d*)nativeHandle)->Shape(Index);
  return gcnew OCTopoDS_Shape(tmp);
}

 System::Boolean OCTopOpeBRep_ShapeIntersector2d::MoreIntersection()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRep_ShapeIntersector2d*)nativeHandle)->MoreIntersection());
}

 void OCTopOpeBRep_ShapeIntersector2d::NextIntersection()
{
  ((TopOpeBRep_ShapeIntersector2d*)nativeHandle)->NextIntersection();
}

OCTopOpeBRep_EdgesIntersector^ OCTopOpeBRep_ShapeIntersector2d::ChangeEdgesIntersector()
{
  TopOpeBRep_EdgesIntersector* tmp = new TopOpeBRep_EdgesIntersector();
  *tmp = ((TopOpeBRep_ShapeIntersector2d*)nativeHandle)->ChangeEdgesIntersector();
  return gcnew OCTopOpeBRep_EdgesIntersector(tmp);
}

OCTopoDS_Shape^ OCTopOpeBRep_ShapeIntersector2d::CurrentGeomShape(Standard_Integer Index)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRep_ShapeIntersector2d*)nativeHandle)->CurrentGeomShape(Index);
  return gcnew OCTopoDS_Shape(tmp);
}

 void OCTopOpeBRep_ShapeIntersector2d::DumpCurrent(Standard_Integer K)
{
  ((TopOpeBRep_ShapeIntersector2d*)nativeHandle)->DumpCurrent(K);
}

 Standard_Integer OCTopOpeBRep_ShapeIntersector2d::Index(Standard_Integer K)
{
  return ((TopOpeBRep_ShapeIntersector2d*)nativeHandle)->Index(K);
}


