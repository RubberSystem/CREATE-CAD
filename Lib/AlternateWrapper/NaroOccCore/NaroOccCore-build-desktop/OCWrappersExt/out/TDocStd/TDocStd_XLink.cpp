// File generated by CPPExt (CPP file)
//

#include "TDocStd_XLink.h"
#include "../Converter.h"
#include "TDocStd_XLinkRoot.h"
#include "TDocStd_XLinkIterator.h"
#include "../TDF/TDF_Label.h"
#include "../TDF/TDF_Reference.h"
#include "../Standard/Standard_GUID.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../TDF/TDF_AttributeDelta.h"
#include "../TDF/TDF_Attribute.h"
#include "../TDF/TDF_RelocationTable.h"


using namespace OCNaroWrappers;

OCTDocStd_XLink::OCTDocStd_XLink(Handle(TDocStd_XLink)* nativeHandle) : OCTDF_Attribute((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TDocStd_XLink(*nativeHandle);
}

OCTDocStd_XLink^ OCTDocStd_XLink::Set(OCNaroWrappers::OCTDF_Label^ atLabel)
{
  Handle(TDocStd_XLink) tmp = TDocStd_XLink::Set(*((TDF_Label*)atLabel->Handle));
  return gcnew OCTDocStd_XLink(&tmp);
}

OCTDocStd_XLink::OCTDocStd_XLink() : OCTDF_Attribute((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TDocStd_XLink(new TDocStd_XLink());
}

OCTDF_Reference^ OCTDocStd_XLink::Update()
{
  Handle(TDF_Reference) tmp = (*((Handle_TDocStd_XLink*)nativeHandle))->Update();
  return gcnew OCTDF_Reference(&tmp);
}

OCStandard_GUID^ OCTDocStd_XLink::ID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = (*((Handle_TDocStd_XLink*)nativeHandle))->ID();
  return gcnew OCStandard_GUID(tmp);
}

OCStandard_GUID^ OCTDocStd_XLink::GetID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = TDocStd_XLink::GetID();
  return gcnew OCStandard_GUID(tmp);
}

 void OCTDocStd_XLink::DocumentEntry(OCNaroWrappers::OCTCollection_AsciiString^ aDocEntry)
{
  (*((Handle_TDocStd_XLink*)nativeHandle))->DocumentEntry(*((TCollection_AsciiString*)aDocEntry->Handle));
}

OCTCollection_AsciiString^ OCTDocStd_XLink::DocumentEntry()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_TDocStd_XLink*)nativeHandle))->DocumentEntry();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCTDocStd_XLink::LabelEntry(OCNaroWrappers::OCTDF_Label^ aLabel)
{
  (*((Handle_TDocStd_XLink*)nativeHandle))->LabelEntry(*((TDF_Label*)aLabel->Handle));
}

 void OCTDocStd_XLink::LabelEntry(OCNaroWrappers::OCTCollection_AsciiString^ aLabEntry)
{
  (*((Handle_TDocStd_XLink*)nativeHandle))->LabelEntry(*((TCollection_AsciiString*)aLabEntry->Handle));
}

OCTCollection_AsciiString^ OCTDocStd_XLink::LabelEntry()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_TDocStd_XLink*)nativeHandle))->LabelEntry();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCTDocStd_XLink::AfterAddition()
{
  (*((Handle_TDocStd_XLink*)nativeHandle))->AfterAddition();
}

 void OCTDocStd_XLink::BeforeRemoval()
{
  (*((Handle_TDocStd_XLink*)nativeHandle))->BeforeRemoval();
}

 System::Boolean OCTDocStd_XLink::BeforeUndo(OCNaroWrappers::OCTDF_AttributeDelta^ anAttDelta, System::Boolean forceIt)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TDocStd_XLink*)nativeHandle))->BeforeUndo(*((Handle_TDF_AttributeDelta*)anAttDelta->Handle), OCConverter::BooleanToStandardBoolean(forceIt)));
}

 System::Boolean OCTDocStd_XLink::AfterUndo(OCNaroWrappers::OCTDF_AttributeDelta^ anAttDelta, System::Boolean forceIt)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TDocStd_XLink*)nativeHandle))->AfterUndo(*((Handle_TDF_AttributeDelta*)anAttDelta->Handle), OCConverter::BooleanToStandardBoolean(forceIt)));
}

OCTDF_Attribute^ OCTDocStd_XLink::BackupCopy()
{
  Handle(TDF_Attribute) tmp = (*((Handle_TDocStd_XLink*)nativeHandle))->BackupCopy();
  return gcnew OCTDF_Attribute(&tmp);
}

 void OCTDocStd_XLink::Restore(OCNaroWrappers::OCTDF_Attribute^ anAttribute)
{
  (*((Handle_TDocStd_XLink*)nativeHandle))->Restore(*((Handle_TDF_Attribute*)anAttribute->Handle));
}

OCTDF_Attribute^ OCTDocStd_XLink::NewEmpty()
{
  Handle(TDF_Attribute) tmp = (*((Handle_TDocStd_XLink*)nativeHandle))->NewEmpty();
  return gcnew OCTDF_Attribute(&tmp);
}

 void OCTDocStd_XLink::Paste(OCNaroWrappers::OCTDF_Attribute^ intoAttribute, OCNaroWrappers::OCTDF_RelocationTable^ aRelocationTable)
{
  (*((Handle_TDocStd_XLink*)nativeHandle))->Paste(*((Handle_TDF_Attribute*)intoAttribute->Handle), *((Handle_TDF_RelocationTable*)aRelocationTable->Handle));
}

 Standard_OStream& OCTDocStd_XLink::Dump(Standard_OStream& anOS)
{
  return (*((Handle_TDocStd_XLink*)nativeHandle))->Dump(anOS);
}


