// File generated by CPPExt (MPV)
//
#ifndef _TDocStd_LabelIDMapDataMap_OCWrappers_HeaderFile
#define _TDocStd_LabelIDMapDataMap_OCWrappers_HeaderFile

// include native header
#include <TDocStd_LabelIDMapDataMap.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTDF_Label;
ref class OCTDF_IDMap;
ref class OCTDF_LabelMapHasher;
ref class OCTDocStd_DataMapNodeOfLabelIDMapDataMap;
ref class OCTDocStd_DataMapIteratorOfLabelIDMapDataMap;



public ref class OCTDocStd_LabelIDMapDataMap  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCTDocStd_LabelIDMapDataMap(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCTDocStd_LabelIDMapDataMap(TDocStd_LabelIDMapDataMap* nativeHandle);

// Methods PUBLIC


OCTDocStd_LabelIDMapDataMap(Standard_Integer NbBuckets);


 /*instead*/  OCTDocStd_LabelIDMapDataMap^ Assign(OCNaroWrappers::OCTDocStd_LabelIDMapDataMap^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(OCNaroWrappers::OCTDF_Label^ K, OCNaroWrappers::OCTDF_IDMap^ I) ;


 /*instead*/  System::Boolean IsBound(OCNaroWrappers::OCTDF_Label^ K) ;


 /*instead*/  System::Boolean UnBind(OCNaroWrappers::OCTDF_Label^ K) ;


 /*instead*/  OCTDF_IDMap^ Find(OCNaroWrappers::OCTDF_Label^ K) ;


 /*instead*/  OCTDF_IDMap^ ChangeFind(OCNaroWrappers::OCTDF_Label^ K) ;


 /*instead*/  Standard_Address Find1(OCNaroWrappers::OCTDF_Label^ K) ;


 /*instead*/  Standard_Address ChangeFind1(OCNaroWrappers::OCTDF_Label^ K) ;

~OCTDocStd_LabelIDMapDataMap()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
