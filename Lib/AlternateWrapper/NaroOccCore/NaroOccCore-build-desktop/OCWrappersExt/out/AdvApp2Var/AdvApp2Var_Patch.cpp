// File generated by CPPExt (CPP file)
//

#include "AdvApp2Var_Patch.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HArray1OfReal.h"
#include "../TColStd/TColStd_HArray2OfReal.h"
#include "AdvApp2Var_Context.h"
#include "AdvApp2Var_Framework.h"
#include "AdvApp2Var_Criterion.h"
#include "../TColgp/TColgp_HArray2OfPnt.h"


using namespace OCNaroWrappers;

OCAdvApp2Var_Patch::OCAdvApp2Var_Patch(AdvApp2Var_Patch* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCAdvApp2Var_Patch::OCAdvApp2Var_Patch() 
{
  nativeHandle = new AdvApp2Var_Patch();
}

OCAdvApp2Var_Patch::OCAdvApp2Var_Patch(Standard_Real U0, Standard_Real U1, Standard_Real V0, Standard_Real V1, Standard_Integer iu, Standard_Integer iv) 
{
  nativeHandle = new AdvApp2Var_Patch(U0, U1, V0, V1, iu, iv);
}

 System::Boolean OCAdvApp2Var_Patch::IsDiscretised()
{
  return OCConverter::StandardBooleanToBoolean(((AdvApp2Var_Patch*)nativeHandle)->IsDiscretised());
}

 void OCAdvApp2Var_Patch::Discretise(OCNaroWrappers::OCAdvApp2Var_Context^ Conditions, OCNaroWrappers::OCAdvApp2Var_Framework^ Constraints, AdvApp2Var_EvaluatorFunc2Var func)
{
  ((AdvApp2Var_Patch*)nativeHandle)->Discretise(*((AdvApp2Var_Context*)Conditions->Handle), *((AdvApp2Var_Framework*)Constraints->Handle), func);
}

 System::Boolean OCAdvApp2Var_Patch::IsApproximated()
{
  return OCConverter::StandardBooleanToBoolean(((AdvApp2Var_Patch*)nativeHandle)->IsApproximated());
}

 System::Boolean OCAdvApp2Var_Patch::HasResult()
{
  return OCConverter::StandardBooleanToBoolean(((AdvApp2Var_Patch*)nativeHandle)->HasResult());
}

 void OCAdvApp2Var_Patch::MakeApprox(OCNaroWrappers::OCAdvApp2Var_Context^ Conditions, OCNaroWrappers::OCAdvApp2Var_Framework^ Constraints, Standard_Integer NumDec)
{
  ((AdvApp2Var_Patch*)nativeHandle)->MakeApprox(*((AdvApp2Var_Context*)Conditions->Handle), *((AdvApp2Var_Framework*)Constraints->Handle), NumDec);
}

 void OCAdvApp2Var_Patch::AddConstraints(OCNaroWrappers::OCAdvApp2Var_Context^ Conditions, OCNaroWrappers::OCAdvApp2Var_Framework^ Constraints)
{
  ((AdvApp2Var_Patch*)nativeHandle)->AddConstraints(*((AdvApp2Var_Context*)Conditions->Handle), *((AdvApp2Var_Framework*)Constraints->Handle));
}

 void OCAdvApp2Var_Patch::AddErrors(OCNaroWrappers::OCAdvApp2Var_Framework^ Constraints)
{
  ((AdvApp2Var_Patch*)nativeHandle)->AddErrors(*((AdvApp2Var_Framework*)Constraints->Handle));
}

 void OCAdvApp2Var_Patch::ChangeDomain(Standard_Real a, Standard_Real b, Standard_Real c, Standard_Real d)
{
  ((AdvApp2Var_Patch*)nativeHandle)->ChangeDomain(a, b, c, d);
}

 void OCAdvApp2Var_Patch::ResetApprox()
{
  ((AdvApp2Var_Patch*)nativeHandle)->ResetApprox();
}

 void OCAdvApp2Var_Patch::OverwriteApprox()
{
  ((AdvApp2Var_Patch*)nativeHandle)->OverwriteApprox();
}

 Standard_Real OCAdvApp2Var_Patch::U0()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->U0();
}

 Standard_Real OCAdvApp2Var_Patch::U1()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->U1();
}

 Standard_Real OCAdvApp2Var_Patch::V0()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->V0();
}

 Standard_Real OCAdvApp2Var_Patch::V1()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->V1();
}

 Standard_Integer OCAdvApp2Var_Patch::UOrder()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->UOrder();
}

 Standard_Integer OCAdvApp2Var_Patch::VOrder()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->VOrder();
}

 Standard_Integer OCAdvApp2Var_Patch::CutSense()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->CutSense();
}

 Standard_Integer OCAdvApp2Var_Patch::CutSense(OCNaroWrappers::OCAdvApp2Var_Criterion^ Crit, Standard_Integer NumDec)
{
  return ((AdvApp2Var_Patch*)nativeHandle)->CutSense(*((AdvApp2Var_Criterion*)Crit->Handle), NumDec);
}

 Standard_Integer OCAdvApp2Var_Patch::NbCoeffInU()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->NbCoeffInU();
}

 Standard_Integer OCAdvApp2Var_Patch::NbCoeffInV()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->NbCoeffInV();
}

 void OCAdvApp2Var_Patch::ChangeNbCoeff(Standard_Integer NbCoeffU, Standard_Integer NbCoeffV)
{
  ((AdvApp2Var_Patch*)nativeHandle)->ChangeNbCoeff(NbCoeffU, NbCoeffV);
}

OCTColgp_HArray2OfPnt^ OCAdvApp2Var_Patch::Poles(Standard_Integer SSPIndex, OCNaroWrappers::OCAdvApp2Var_Context^ Conditions)
{
  Handle(TColgp_HArray2OfPnt) tmp = ((AdvApp2Var_Patch*)nativeHandle)->Poles(SSPIndex, *((AdvApp2Var_Context*)Conditions->Handle));
  return gcnew OCTColgp_HArray2OfPnt(&tmp);
}

OCTColStd_HArray1OfReal^ OCAdvApp2Var_Patch::Coefficients(Standard_Integer SSPIndex, OCNaroWrappers::OCAdvApp2Var_Context^ Conditions)
{
  Handle(TColStd_HArray1OfReal) tmp = ((AdvApp2Var_Patch*)nativeHandle)->Coefficients(SSPIndex, *((AdvApp2Var_Context*)Conditions->Handle));
  return gcnew OCTColStd_HArray1OfReal(&tmp);
}

OCTColStd_HArray1OfReal^ OCAdvApp2Var_Patch::MaxErrors()
{
  Handle(TColStd_HArray1OfReal) tmp = ((AdvApp2Var_Patch*)nativeHandle)->MaxErrors();
  return gcnew OCTColStd_HArray1OfReal(&tmp);
}

OCTColStd_HArray1OfReal^ OCAdvApp2Var_Patch::AverageErrors()
{
  Handle(TColStd_HArray1OfReal) tmp = ((AdvApp2Var_Patch*)nativeHandle)->AverageErrors();
  return gcnew OCTColStd_HArray1OfReal(&tmp);
}

OCTColStd_HArray2OfReal^ OCAdvApp2Var_Patch::IsoErrors()
{
  Handle(TColStd_HArray2OfReal) tmp = ((AdvApp2Var_Patch*)nativeHandle)->IsoErrors();
  return gcnew OCTColStd_HArray2OfReal(&tmp);
}

 Standard_Real OCAdvApp2Var_Patch::CritValue()
{
  return ((AdvApp2Var_Patch*)nativeHandle)->CritValue();
}

 void OCAdvApp2Var_Patch::SetCritValue(Standard_Real dist)
{
  ((AdvApp2Var_Patch*)nativeHandle)->SetCritValue(dist);
}


