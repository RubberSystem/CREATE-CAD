// File generated by CPPExt (MPV)
//
#ifndef _AdvApp2Var_ApproxAFunc2Var_OCWrappers_HeaderFile
#define _AdvApp2Var_ApproxAFunc2Var_OCWrappers_HeaderFile

// include native header
#include <AdvApp2Var_ApproxAFunc2Var.hxx>
#include "../Converter.h"


#include "../GeomAbs/GeomAbs_IsoType.h"
#include "../GeomAbs/GeomAbs_Shape.h"
#include "AdvApp2Var_Context.h"
#include "AdvApp2Var_Network.h"
#include "AdvApp2Var_Framework.h"


namespace OCNaroWrappers
{

ref class OCTColStd_HArray1OfReal;
ref class OCTColStd_HArray2OfReal;
ref class OCTColGeom_HArray1OfSurface;
ref class OCAdvApprox_Cutting;
ref class OCAdvApp2Var_Criterion;
ref class OCGeom_BSplineSurface;


//! Perform   the  approximation of  <Func>     F(U,V) <br>
//! Arguments are : <br>
//! Num1DSS, Num2DSS, Num3DSS :The numbers of 1,2,3 dimensional subspaces <br>
//! OneDTol, TwoDTol, ThreeDTol: The tolerance of approximation in each <br>
//!                              subspaces <br>
//! OneDTolFr, TwoDTolFr, ThreeDTolFr: The tolerance of approximation on <br>
//!           the boundarys in each subspaces <br>
//! [FirstInU, LastInU]: The Bounds in U of the Approximation <br>
//! [FirstInV, LastInV]: The Bounds in V of the Approximation <br>
//! FavorIso : Give preference to extract u-iso or v-iso on F(U,V) <br>
//!            This can be usefull to optimize the <Func> methode <br>
//! ContInU, ContInV : Continuity waiting in u and v <br>
//! PrecisCode : Precision on approximation's error mesurement <br>
//!              1 : Fast computation and average precision <br>
//!              2 : Average computation and good precision <br>
//!              3 : Slow computation and very good precision <br>
//! MaxDegInU : Maximum u-degree waiting in U <br>
//! MaxDegInV : Maximum u-degree waiting in V <br>
//!  Warning: <br>
//!     MaxDegInU (resp. MaxDegInV) must be >= 2*iu (resp. iv) + 1, <br>
//!     where iu (resp. iv) = 0 if ContInU (resp. ContInV)  = GeomAbs_C0, <br>
//!                         = 1 if                          = GeomAbs_C1, <br>
//!                         = 2 if                          = GeomAbs_C2. <br>
//! MaxPatch  : Maximun number of Patch waiting <br>
//!             number of Patch is number of u span * number of v span <br>
//! Func      : The external method to evaluate F(U,V) <br>
//! Crit      : To (re)defined condition of convergence <br>
//! UChoice, VChoice : To define the way in U (or V) Knot insertion <br>
//!  Warning: <br>
//!     for the moment, the result is a 3D Surface <br>
//!     so Num1DSS and Num2DSS must be equals to 0 <br>
//!     and Num3DSS must be equal to 1. <br>
//!  Warning: <br>
//!     the Function of type EvaluatorFunc2Var from Approx <br>
//!     must be a subclass of AdvApp2Var_EvaluatorFunc2Var <br>
//! <br>
//!	  the result should be formatted in the following way : <br>
//! <--Num1DSS--> <--2 * Num2DSS--> <--3 * Num3DSS--> <br>
//! R[0,0] ....   R[Num1DSS,0].....  R[Dimension-1,0] for the 1st parameter <br>
//! R[0,i] ....   R[Num1DSS,i].....  R[Dimension-1,i] for the ith parameter <br>
//! R[0,N-1] .... R[Num1DSS,N-1].... R[Dimension-1,N-1] for the Nth parameter <br>
public ref class OCAdvApp2Var_ApproxAFunc2Var  {

protected:
  AdvApp2Var_ApproxAFunc2Var* nativeHandle;
  OCAdvApp2Var_ApproxAFunc2Var(OCDummy^) {};

public:
  property AdvApp2Var_ApproxAFunc2Var* Handle
  {
    AdvApp2Var_ApproxAFunc2Var* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCAdvApp2Var_ApproxAFunc2Var(AdvApp2Var_ApproxAFunc2Var* nativeHandle);

// Methods PUBLIC


OCAdvApp2Var_ApproxAFunc2Var(Standard_Integer Num1DSS, Standard_Integer Num2DSS, Standard_Integer Num3DSS, OCNaroWrappers::OCTColStd_HArray1OfReal^ OneDTol, OCNaroWrappers::OCTColStd_HArray1OfReal^ TwoDTol, OCNaroWrappers::OCTColStd_HArray1OfReal^ ThreeDTol, OCNaroWrappers::OCTColStd_HArray2OfReal^ OneDTolFr, OCNaroWrappers::OCTColStd_HArray2OfReal^ TwoDTolFr, OCNaroWrappers::OCTColStd_HArray2OfReal^ ThreeDTolFr, Standard_Real FirstInU, Standard_Real LastInU, Standard_Real FirstInV, Standard_Real LastInV, OCGeomAbs_IsoType FavorIso, OCGeomAbs_Shape ContInU, OCGeomAbs_Shape ContInV, Standard_Integer PrecisCode, Standard_Integer MaxDegInU, Standard_Integer MaxDegInV, Standard_Integer MaxPatch, AdvApp2Var_EvaluatorFunc2Var Func, OCNaroWrappers::OCAdvApprox_Cutting^ UChoice, OCNaroWrappers::OCAdvApprox_Cutting^ VChoice);


OCAdvApp2Var_ApproxAFunc2Var(Standard_Integer Num1DSS, Standard_Integer Num2DSS, Standard_Integer Num3DSS, OCNaroWrappers::OCTColStd_HArray1OfReal^ OneDTol, OCNaroWrappers::OCTColStd_HArray1OfReal^ TwoDTol, OCNaroWrappers::OCTColStd_HArray1OfReal^ ThreeDTol, OCNaroWrappers::OCTColStd_HArray2OfReal^ OneDTolFr, OCNaroWrappers::OCTColStd_HArray2OfReal^ TwoDTolFr, OCNaroWrappers::OCTColStd_HArray2OfReal^ ThreeDTolFr, Standard_Real FirstInU, Standard_Real LastInU, Standard_Real FirstInV, Standard_Real LastInV, OCGeomAbs_IsoType FavorIso, OCGeomAbs_Shape ContInU, OCGeomAbs_Shape ContInV, Standard_Integer PrecisCode, Standard_Integer MaxDegInU, Standard_Integer MaxDegInV, Standard_Integer MaxPatch, AdvApp2Var_EvaluatorFunc2Var Func, OCNaroWrappers::OCAdvApp2Var_Criterion^ Crit, OCNaroWrappers::OCAdvApprox_Cutting^ UChoice, OCNaroWrappers::OCAdvApprox_Cutting^ VChoice);

//!  True if the approximation succeeded within the imposed <br>
//!  tolerances and the wished continuities <br>
//! <br>
 /*instead*/  System::Boolean IsDone() ;

//!  True if the approximation did come out with a result that <br>
//!  is not NECESSARELY within the required tolerance or a result <br>
//!  that is not recognized with the wished continuities <br>
//! <br>
 /*instead*/  System::Boolean HasResult() ;

//! returns the BSplineSurface of range Index <br>
 /*instead*/  OCGeom_BSplineSurface^ Surface(Standard_Integer Index) ;


 /*instead*/  Standard_Integer UDegree() ;


 /*instead*/  Standard_Integer VDegree() ;


 /*instead*/  Standard_Integer NumSubSpaces(Standard_Integer Dimension) ;

//!  returns the errors max <br>
 /*instead*/  OCTColStd_HArray1OfReal^ MaxError(Standard_Integer Dimension) ;

//! returns the average errors <br>
 /*instead*/  OCTColStd_HArray1OfReal^ AverageError(Standard_Integer Dimension) ;

//! returns the errors max on UFrontiers <br>
//!  Warning: <br>
//!     Dimension must be equal to 3. <br>
 /*instead*/  OCTColStd_HArray1OfReal^ UFrontError(Standard_Integer Dimension) ;

//! returns the errors max on VFrontiers <br>
//!  Warning: <br>
//!     Dimension must be equal to 3. <br>
 /*instead*/  OCTColStd_HArray1OfReal^ VFrontError(Standard_Integer Dimension) ;

//! returns the error max of the BSplineSurface of range Index <br>
 /*instead*/  Standard_Real MaxError(Standard_Integer Dimension, Standard_Integer Index) ;

//! returns the average error of the BSplineSurface of range Index <br>
 /*instead*/  Standard_Real AverageError(Standard_Integer Dimension, Standard_Integer Index) ;

//! returns the error max of the BSplineSurface of range Index on a UFrontier <br>
 /*instead*/  Standard_Real UFrontError(Standard_Integer Dimension, Standard_Integer Index) ;

//! returns the error max of the BSplineSurface of range Index on a VFrontier <br>
 /*instead*/  Standard_Real VFrontError(Standard_Integer Dimension, Standard_Integer Index) ;


 /*instead*/  Standard_Real CritError(Standard_Integer Dimension, Standard_Integer Index) ;

//! Prints on the stream o informations on the current state <br>
//!          of the object. <br>
//! <br>
 /*instead*/  void Dump(Standard_OStream& o) ;

~OCAdvApp2Var_ApproxAFunc2Var()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
