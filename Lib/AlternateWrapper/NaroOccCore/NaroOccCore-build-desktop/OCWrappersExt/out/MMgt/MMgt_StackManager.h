// File generated by CPPExt (MPV)
//
#ifndef _MMgt_StackManager_OCWrappers_HeaderFile
#define _MMgt_StackManager_OCWrappers_HeaderFile

// include native header
#include <MMgt_StackManager.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{




//!   The class <StackManager> provides primitive facilities for managing <br>
//!   stack-based storage. <br>
//! <br>
public ref class OCMMgt_StackManager  {

protected:
  MMgt_StackManager* nativeHandle;
  OCMMgt_StackManager(OCDummy^) {};

public:
  property MMgt_StackManager* Handle
  {
    MMgt_StackManager* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCMMgt_StackManager(MMgt_StackManager* nativeHandle);

// Methods PUBLIC


//!   Constructs a StackManager with an empty free stack. <br>
OCMMgt_StackManager();


//!   Returns the address of a storage of the given size located on <br>
//!   the top of the free stack. <br>
 /*instead*/  Standard_Address Allocate(Standard_Integer size) ;


//!   Deallocates the storage of the given size from the free stack <br>
//!   and nullify the address. <br>
 /*instead*/  void Free(Standard_Address& aStack, Standard_Integer aSize) ;


//!   There is no way to have a "ShallowCopy" of a "StackManager" <br>
 /*instead*/  OCMMgt_StackManager^ ShallowCopy() ;


//!   Prints the contents of <me> on the stream <s>. <br>
 /*instead*/  void ShallowDump(Standard_OStream& S) ;

~OCMMgt_StackManager()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
