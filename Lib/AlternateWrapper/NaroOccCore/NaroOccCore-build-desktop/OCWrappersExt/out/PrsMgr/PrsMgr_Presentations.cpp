// File generated by CPPExt (CPP file)
//

#include "PrsMgr_Presentations.h"
#include "../Converter.h"
#include "PrsMgr_ModedPresentation.h"
#include "PrsMgr_SequenceNodeOfPresentations.h"


using namespace OCNaroWrappers;

OCPrsMgr_Presentations::OCPrsMgr_Presentations(PrsMgr_Presentations* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCPrsMgr_Presentations::OCPrsMgr_Presentations() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new PrsMgr_Presentations();
}

OCPrsMgr_Presentations^ OCPrsMgr_Presentations::Assign(OCNaroWrappers::OCPrsMgr_Presentations^ Other)
{
  PrsMgr_Presentations* tmp = new PrsMgr_Presentations();
  *tmp = ((PrsMgr_Presentations*)nativeHandle)->Assign(*((PrsMgr_Presentations*)Other->Handle));
  return gcnew OCPrsMgr_Presentations(tmp);
}

 void OCPrsMgr_Presentations::Append(OCNaroWrappers::OCPrsMgr_ModedPresentation^ T)
{
  ((PrsMgr_Presentations*)nativeHandle)->Append(*((PrsMgr_ModedPresentation*)T->Handle));
}

 void OCPrsMgr_Presentations::Append(OCNaroWrappers::OCPrsMgr_Presentations^ S)
{
  ((PrsMgr_Presentations*)nativeHandle)->Append(*((PrsMgr_Presentations*)S->Handle));
}

 void OCPrsMgr_Presentations::Prepend(OCNaroWrappers::OCPrsMgr_ModedPresentation^ T)
{
  ((PrsMgr_Presentations*)nativeHandle)->Prepend(*((PrsMgr_ModedPresentation*)T->Handle));
}

 void OCPrsMgr_Presentations::Prepend(OCNaroWrappers::OCPrsMgr_Presentations^ S)
{
  ((PrsMgr_Presentations*)nativeHandle)->Prepend(*((PrsMgr_Presentations*)S->Handle));
}

 void OCPrsMgr_Presentations::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPrsMgr_ModedPresentation^ T)
{
  ((PrsMgr_Presentations*)nativeHandle)->InsertBefore(Index, *((PrsMgr_ModedPresentation*)T->Handle));
}

 void OCPrsMgr_Presentations::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPrsMgr_Presentations^ S)
{
  ((PrsMgr_Presentations*)nativeHandle)->InsertBefore(Index, *((PrsMgr_Presentations*)S->Handle));
}

 void OCPrsMgr_Presentations::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPrsMgr_ModedPresentation^ T)
{
  ((PrsMgr_Presentations*)nativeHandle)->InsertAfter(Index, *((PrsMgr_ModedPresentation*)T->Handle));
}

 void OCPrsMgr_Presentations::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPrsMgr_Presentations^ S)
{
  ((PrsMgr_Presentations*)nativeHandle)->InsertAfter(Index, *((PrsMgr_Presentations*)S->Handle));
}

OCPrsMgr_ModedPresentation^ OCPrsMgr_Presentations::First()
{
  PrsMgr_ModedPresentation* tmp = new PrsMgr_ModedPresentation();
  *tmp = ((PrsMgr_Presentations*)nativeHandle)->First();
  return gcnew OCPrsMgr_ModedPresentation(tmp);
}

OCPrsMgr_ModedPresentation^ OCPrsMgr_Presentations::Last()
{
  PrsMgr_ModedPresentation* tmp = new PrsMgr_ModedPresentation();
  *tmp = ((PrsMgr_Presentations*)nativeHandle)->Last();
  return gcnew OCPrsMgr_ModedPresentation(tmp);
}

 void OCPrsMgr_Presentations::Split(Standard_Integer Index, OCNaroWrappers::OCPrsMgr_Presentations^ Sub)
{
  ((PrsMgr_Presentations*)nativeHandle)->Split(Index, *((PrsMgr_Presentations*)Sub->Handle));
}

OCPrsMgr_ModedPresentation^ OCPrsMgr_Presentations::Value(Standard_Integer Index)
{
  PrsMgr_ModedPresentation* tmp = new PrsMgr_ModedPresentation();
  *tmp = ((PrsMgr_Presentations*)nativeHandle)->Value(Index);
  return gcnew OCPrsMgr_ModedPresentation(tmp);
}

 void OCPrsMgr_Presentations::SetValue(Standard_Integer Index, OCNaroWrappers::OCPrsMgr_ModedPresentation^ I)
{
  ((PrsMgr_Presentations*)nativeHandle)->SetValue(Index, *((PrsMgr_ModedPresentation*)I->Handle));
}

OCPrsMgr_ModedPresentation^ OCPrsMgr_Presentations::ChangeValue(Standard_Integer Index)
{
  PrsMgr_ModedPresentation* tmp = new PrsMgr_ModedPresentation();
  *tmp = ((PrsMgr_Presentations*)nativeHandle)->ChangeValue(Index);
  return gcnew OCPrsMgr_ModedPresentation(tmp);
}

 void OCPrsMgr_Presentations::Remove(Standard_Integer Index)
{
  ((PrsMgr_Presentations*)nativeHandle)->Remove(Index);
}

 void OCPrsMgr_Presentations::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((PrsMgr_Presentations*)nativeHandle)->Remove(FromIndex, ToIndex);
}


