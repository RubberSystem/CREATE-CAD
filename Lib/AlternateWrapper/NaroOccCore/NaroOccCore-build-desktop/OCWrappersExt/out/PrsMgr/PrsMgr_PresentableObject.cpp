// File generated by CPPExt (CPP file)
//

#include "PrsMgr_PresentableObject.h"
#include "../Converter.h"
#include "PrsMgr_PresentationManager.h"
#include "../Graphic3d/Graphic3d_Structure.h"
#include "../Graphic3d/Graphic3d_DataStructureManager.h"
#include "../Geom/Geom_Transformation.h"
#include "PrsMgr_PresentationManager2d.h"
#include "../Graphic2d/Graphic2d_GraphicObject.h"
#include "PrsMgr_PresentationManager3d.h"
#include "../Prs3d/Prs3d_Presentation.h"
#include "../Prs3d/Prs3d_Projector.h"
#include "PrsMgr_Presentation.h"
#include "PrsMgr_Presentations.h"
#include "../gp/gp_Pnt.h"
#include "../TColStd/TColStd_ListOfInteger.h"
#include "../TopLoc/TopLoc_Location.h"


using namespace OCNaroWrappers;

OCPrsMgr_PresentableObject::OCPrsMgr_PresentableObject(Handle(PrsMgr_PresentableObject)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_PrsMgr_PresentableObject(*nativeHandle);
}

OCPrsMgr_PresentableObject::OCPrsMgr_PresentableObject(OCPrsMgr_TypeOfPresentation3d aTypeOfPresentation3d) : OCMMgt_TShared((OCDummy^)nullptr)

{}

 OCPrsMgr_TypeOfPresentation3d OCPrsMgr_PresentableObject::TypeOfPresentation3d()
{
  return (OCPrsMgr_TypeOfPresentation3d)((*((Handle_PrsMgr_PresentableObject*)nativeHandle))->TypeOfPresentation3d());
}

 void OCPrsMgr_PresentableObject::SetTransformPersistence(Graphic3d_TransModeFlags aFlag, OCNaroWrappers::OCgp_Pnt^ APoint)
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->SetTransformPersistence(aFlag, *((gp_Pnt*)APoint->Handle));
}

 void OCPrsMgr_PresentableObject::SetTransformPersistence(Graphic3d_TransModeFlags aFlag)
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->SetTransformPersistence(aFlag);
}

 Graphic3d_TransModeFlags OCPrsMgr_PresentableObject::GetTransformPersistenceMode()
{
  return (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->GetTransformPersistenceMode();
}

OCgp_Pnt^ OCPrsMgr_PresentableObject::GetTransformPersistencePoint()
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->GetTransformPersistencePoint();
  return gcnew OCgp_Pnt(tmp);
}

 void OCPrsMgr_PresentableObject::SetTypeOfPresentation(OCPrsMgr_TypeOfPresentation3d aType)
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->SetTypeOfPresentation((PrsMgr_TypeOfPresentation3d)aType);
}

 void OCPrsMgr_PresentableObject::SetToUpdate(Standard_Integer aMode)
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->SetToUpdate(aMode);
}

 void OCPrsMgr_PresentableObject::SetToUpdate()
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->SetToUpdate();
}

 void OCPrsMgr_PresentableObject::ToBeUpdated(OCNaroWrappers::OCTColStd_ListOfInteger^ ListOfMode)
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->ToBeUpdated(*((TColStd_ListOfInteger*)ListOfMode->Handle));
}

 void OCPrsMgr_PresentableObject::SetLocation(OCNaroWrappers::OCTopLoc_Location^ aLoc)
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->SetLocation(*((TopLoc_Location*)aLoc->Handle));
}

 System::Boolean OCPrsMgr_PresentableObject::HasLocation()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_PrsMgr_PresentableObject*)nativeHandle))->HasLocation());
}

OCTopLoc_Location^ OCPrsMgr_PresentableObject::Location()
{
  TopLoc_Location* tmp = new TopLoc_Location();
  *tmp = (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->Location();
  return gcnew OCTopLoc_Location(tmp);
}

 void OCPrsMgr_PresentableObject::ResetLocation()
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->ResetLocation();
}

 void OCPrsMgr_PresentableObject::UpdateLocation()
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->UpdateLocation();
}

 void OCPrsMgr_PresentableObject::UpdateLocation(OCNaroWrappers::OCPrs3d_Presentation^ P)
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->UpdateLocation(*((Handle_Prs3d_Presentation*)P->Handle));
}

 void OCPrsMgr_PresentableObject::SetZLayer(OCNaroWrappers::OCPrsMgr_PresentationManager^ thePrsMgr, Standard_Integer theLayerId)
{
  (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->SetZLayer(*((Handle_PrsMgr_PresentationManager*)thePrsMgr->Handle), theLayerId);
}

 Standard_Integer OCPrsMgr_PresentableObject::GetZLayer(OCNaroWrappers::OCPrsMgr_PresentationManager^ thePrsMgr)
{
  return (*((Handle_PrsMgr_PresentableObject*)nativeHandle))->GetZLayer(*((Handle_PrsMgr_PresentationManager*)thePrsMgr->Handle));
}


