// File generated by CPPExt (CPP file)
//

#include "BRepOffsetAPI_FindContigousEdges.h"
#include "../Converter.h"
#include "../BRepBuilderAPI/BRepBuilderAPI_Sewing.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopTools/TopTools_ListOfShape.h"


using namespace OCNaroWrappers;

OCBRepOffsetAPI_FindContigousEdges::OCBRepOffsetAPI_FindContigousEdges(BRepOffsetAPI_FindContigousEdges* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepOffsetAPI_FindContigousEdges::OCBRepOffsetAPI_FindContigousEdges(Standard_Real tolerance, System::Boolean option) 
{
  nativeHandle = new BRepOffsetAPI_FindContigousEdges(tolerance, OCConverter::BooleanToStandardBoolean(option));
}

 void OCBRepOffsetAPI_FindContigousEdges::Init(Standard_Real tolerance, System::Boolean option)
{
  ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->Init(tolerance, OCConverter::BooleanToStandardBoolean(option));
}

 void OCBRepOffsetAPI_FindContigousEdges::Add(OCNaroWrappers::OCTopoDS_Shape^ shape)
{
  ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->Add(*((TopoDS_Shape*)shape->Handle));
}

 void OCBRepOffsetAPI_FindContigousEdges::Perform()
{
  ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->Perform();
}

 Standard_Integer OCBRepOffsetAPI_FindContigousEdges::NbEdges()
{
  return ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->NbEdges();
}

 Standard_Integer OCBRepOffsetAPI_FindContigousEdges::NbContigousEdges()
{
  return ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->NbContigousEdges();
}

OCTopoDS_Edge^ OCBRepOffsetAPI_FindContigousEdges::ContigousEdge(Standard_Integer index)
{
  TopoDS_Edge* tmp = new TopoDS_Edge();
  *tmp = ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->ContigousEdge(index);
  return gcnew OCTopoDS_Edge(tmp);
}

OCTopTools_ListOfShape^ OCBRepOffsetAPI_FindContigousEdges::ContigousEdgeCouple(Standard_Integer index)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->ContigousEdgeCouple(index);
  return gcnew OCTopTools_ListOfShape(tmp);
}

OCTopoDS_Edge^ OCBRepOffsetAPI_FindContigousEdges::SectionToBoundary(OCNaroWrappers::OCTopoDS_Edge^ section)
{
  TopoDS_Edge* tmp = new TopoDS_Edge();
  *tmp = ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->SectionToBoundary(*((TopoDS_Edge*)section->Handle));
  return gcnew OCTopoDS_Edge(tmp);
}

 Standard_Integer OCBRepOffsetAPI_FindContigousEdges::NbDegeneratedShapes()
{
  return ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->NbDegeneratedShapes();
}

OCTopoDS_Shape^ OCBRepOffsetAPI_FindContigousEdges::DegeneratedShape(Standard_Integer index)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->DegeneratedShape(index);
  return gcnew OCTopoDS_Shape(tmp);
}

 System::Boolean OCBRepOffsetAPI_FindContigousEdges::IsDegenerated(OCNaroWrappers::OCTopoDS_Shape^ shape)
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->IsDegenerated(*((TopoDS_Shape*)shape->Handle)));
}

 System::Boolean OCBRepOffsetAPI_FindContigousEdges::IsModified(OCNaroWrappers::OCTopoDS_Shape^ shape)
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->IsModified(*((TopoDS_Shape*)shape->Handle)));
}

OCTopoDS_Shape^ OCBRepOffsetAPI_FindContigousEdges::Modified(OCNaroWrappers::OCTopoDS_Shape^ shape)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->Modified(*((TopoDS_Shape*)shape->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

 void OCBRepOffsetAPI_FindContigousEdges::Dump()
{
  ((BRepOffsetAPI_FindContigousEdges*)nativeHandle)->Dump();
}


