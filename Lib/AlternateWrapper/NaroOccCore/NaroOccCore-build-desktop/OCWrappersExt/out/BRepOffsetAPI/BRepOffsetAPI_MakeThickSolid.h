// File generated by CPPExt (MPV)
//
#ifndef _BRepOffsetAPI_MakeThickSolid_OCWrappers_HeaderFile
#define _BRepOffsetAPI_MakeThickSolid_OCWrappers_HeaderFile

// include native header
#include <BRepOffsetAPI_MakeThickSolid.hxx>
#include "../Converter.h"

#include "BRepOffsetAPI_MakeOffsetShape.h"

#include "BRepOffsetAPI_MakeOffsetShape.h"
#include "../BRepOffset/BRepOffset_Mode.h"
#include "../GeomAbs/GeomAbs_JoinType.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopTools_ListOfShape;


//! Describes functions to build hollowed solids. <br>
//! A hollowed solid is built from an initial solid and a set of <br>
//! faces on this solid, which are to be removed. The <br>
//! remaining faces of the solid become the walls of the <br>
//! hollowed solid, their thickness defined at the time of construction. <br>
//!        the solid is built from an initial <br>
//!          solid  <S> and a  set of  faces {Fi} from  <S>, <br>
//!          builds a   solid  composed  by two shells closed  by <br>
//!          the {Fi}. First shell <SS>   is composed by all <br>
//!          the faces of <S> expected {Fi}.  Second shell is <br>
//!          the offset shell of <SS>. <br>
//! A MakeThickSolid object provides a framework for: <br>
//! - defining the cross-section of a hollowed solid, <br>
//! - implementing the construction algorithm, and <br>
//! - consulting the result. <br>
public ref class OCBRepOffsetAPI_MakeThickSolid  : public OCBRepOffsetAPI_MakeOffsetShape {

protected:
  // dummy constructor;
  OCBRepOffsetAPI_MakeThickSolid(OCDummy^) : OCBRepOffsetAPI_MakeOffsetShape((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepOffsetAPI_MakeThickSolid(BRepOffsetAPI_MakeThickSolid* nativeHandle);

// Methods PUBLIC


OCBRepOffsetAPI_MakeThickSolid();

//!  Constructs a hollowed solid from <br>
//! the solid S by removing the set of faces ClosingFaces from S, where: <br>
//!       Offset defines the thickness of the walls. Its sign indicates <br>
//!   which side of the surface of the solid the hollowed shape is built on; <br>
//!  - Tol defines the tolerance criterion for coincidence in generated shapes; <br>
//!  - Mode defines the construction type of parallels applied to free <br>
//!   edges of shape S. Currently, only one construction type is <br>
//!   implemented, namely the one where the free edges do not generate <br>
//!   parallels; this corresponds to the default value BRepOffset_Skin; <br>
//!   Intersection specifies how the algorithm must work in order to <br>
//!   limit the parallels to two adjacent shapes: <br>
//! - if Intersection is false (default value), the intersection <br>
//!   is calculated with the parallels to the two adjacent shapes, <br>
//!  -     if Intersection is true, the intersection is calculated by <br>
//!   taking account of all parallels generated; this computation <br>
//!   method is more general as it avoids self-intersections <br>
//!   generated in the offset shape from features of small dimensions <br>
//!   on shape S, however this method has not been completely <br>
//!   implemented and therefore is not recommended for use; <br>
//!  -     SelfInter tells the algorithm whether a computation to <br>
//!   eliminate self-intersections needs to be applied to the <br>
//!   resulting shape. However, as this functionality is not yet <br>
//!   implemented, you should use the default value (false); <br>
//!  - Join defines how to fill the holes that may appear between <br>
//!   parallels to the two adjacent faces. It may take values <br>
//!   GeomAbs_Arc or GeomAbs_Intersection: <br>
//! - if Join is equal to GeomAbs_Arc, then pipes are generated <br>
//!           between two free edges of two adjacent parallels, <br>
//!           and spheres are generated on "images" of vertices; <br>
//!           it is the default value, <br>
//! - if Join is equal to GeomAbs_Intersection, <br>
//!   then the parallels to the two adjacent faces are <br>
//!   enlarged and intersected, so that there are no free <br>
//!   edges on parallels to faces. <br>
//!   Warnings <br>
//! Since the algorithm of MakeThickSolid is based on <br>
//! MakeOffsetShape algorithm, the warnings are the same as for <br>
//! MakeOffsetShape. <br>
OCBRepOffsetAPI_MakeThickSolid(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ ClosingFaces, Standard_Real Offset, Standard_Real Tol, OCBRepOffset_Mode Mode, System::Boolean Intersection, System::Boolean SelfInter, OCGeomAbs_JoinType Join);

//! Builds the resulting shape (redefined from MakeOffsetShape). <br>
virtual /*instead*/  void Build() override;

//! Returns the list  of shapes modified from the shape <br>
//!          <S>. <br>
virtual /*instead*/  OCTopTools_ListOfShape^ Modified(OCNaroWrappers::OCTopoDS_Shape^ S) override;

~OCBRepOffsetAPI_MakeThickSolid()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
