// File generated by CPPExt (CPP file)
//

#include "BRepOffsetAPI_MakePipeShell.h"
#include "../Converter.h"
#include "../BRepFill/BRepFill_PipeShell.h"
#include "../TopoDS/TopoDS_Wire.h"
#include "../gp/gp_Ax2.h"
#include "../gp/gp_Dir.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "../Law/Law_Function.h"
#include "../TopTools/TopTools_ListOfShape.h"


using namespace OCNaroWrappers;

OCBRepOffsetAPI_MakePipeShell::OCBRepOffsetAPI_MakePipeShell(BRepOffsetAPI_MakePipeShell* nativeHandle) : OCBRepPrimAPI_MakeSweep((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepOffsetAPI_MakePipeShell::OCBRepOffsetAPI_MakePipeShell(OCNaroWrappers::OCTopoDS_Wire^ Spine) : OCBRepPrimAPI_MakeSweep((OCDummy^)nullptr)

{
  nativeHandle = new BRepOffsetAPI_MakePipeShell(*((TopoDS_Wire*)Spine->Handle));
}

 void OCBRepOffsetAPI_MakePipeShell::SetMode(System::Boolean IsFrenet)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->SetMode(OCConverter::BooleanToStandardBoolean(IsFrenet));
}

 void OCBRepOffsetAPI_MakePipeShell::SetMode(OCNaroWrappers::OCgp_Ax2^ Axe)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->SetMode(*((gp_Ax2*)Axe->Handle));
}

 void OCBRepOffsetAPI_MakePipeShell::SetMode(OCNaroWrappers::OCgp_Dir^ BiNormal)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->SetMode(*((gp_Dir*)BiNormal->Handle));
}

 System::Boolean OCBRepOffsetAPI_MakePipeShell::SetMode(OCNaroWrappers::OCTopoDS_Shape^ SpineSupport)
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffsetAPI_MakePipeShell*)nativeHandle)->SetMode(*((TopoDS_Shape*)SpineSupport->Handle)));
}

 void OCBRepOffsetAPI_MakePipeShell::SetMode(OCNaroWrappers::OCTopoDS_Wire^ AuxiliarySpine, System::Boolean CurvilinearEquivalence, System::Boolean KeepContact)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->SetMode(*((TopoDS_Wire*)AuxiliarySpine->Handle), OCConverter::BooleanToStandardBoolean(CurvilinearEquivalence), OCConverter::BooleanToStandardBoolean(KeepContact));
}

 void OCBRepOffsetAPI_MakePipeShell::Add(OCNaroWrappers::OCTopoDS_Shape^ Profile, System::Boolean WithContact, System::Boolean WithCorrection)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->Add(*((TopoDS_Shape*)Profile->Handle), OCConverter::BooleanToStandardBoolean(WithContact), OCConverter::BooleanToStandardBoolean(WithCorrection));
}

 void OCBRepOffsetAPI_MakePipeShell::Add(OCNaroWrappers::OCTopoDS_Shape^ Profile, OCNaroWrappers::OCTopoDS_Vertex^ Location, System::Boolean WithContact, System::Boolean WithCorrection)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->Add(*((TopoDS_Shape*)Profile->Handle), *((TopoDS_Vertex*)Location->Handle), OCConverter::BooleanToStandardBoolean(WithContact), OCConverter::BooleanToStandardBoolean(WithCorrection));
}

 void OCBRepOffsetAPI_MakePipeShell::SetLaw(OCNaroWrappers::OCTopoDS_Shape^ Profile, OCNaroWrappers::OCLaw_Function^ L, System::Boolean WithContact, System::Boolean WithCorrection)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->SetLaw(*((TopoDS_Shape*)Profile->Handle), *((Handle_Law_Function*)L->Handle), OCConverter::BooleanToStandardBoolean(WithContact), OCConverter::BooleanToStandardBoolean(WithCorrection));
}

 void OCBRepOffsetAPI_MakePipeShell::SetLaw(OCNaroWrappers::OCTopoDS_Shape^ Profile, OCNaroWrappers::OCLaw_Function^ L, OCNaroWrappers::OCTopoDS_Vertex^ Location, System::Boolean WithContact, System::Boolean WithCorrection)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->SetLaw(*((TopoDS_Shape*)Profile->Handle), *((Handle_Law_Function*)L->Handle), *((TopoDS_Vertex*)Location->Handle), OCConverter::BooleanToStandardBoolean(WithContact), OCConverter::BooleanToStandardBoolean(WithCorrection));
}

 void OCBRepOffsetAPI_MakePipeShell::Delete(OCNaroWrappers::OCTopoDS_Shape^ Profile)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->Delete(*((TopoDS_Shape*)Profile->Handle));
}

 System::Boolean OCBRepOffsetAPI_MakePipeShell::IsReady()
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffsetAPI_MakePipeShell*)nativeHandle)->IsReady());
}

 OCBRepBuilderAPI_PipeError OCBRepOffsetAPI_MakePipeShell::GetStatus()
{
  return (OCBRepBuilderAPI_PipeError)(((BRepOffsetAPI_MakePipeShell*)nativeHandle)->GetStatus());
}

 void OCBRepOffsetAPI_MakePipeShell::SetTolerance(Standard_Real Tol3d, Standard_Real BoundTol, Standard_Real TolAngular)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->SetTolerance(Tol3d, BoundTol, TolAngular);
}

 void OCBRepOffsetAPI_MakePipeShell::SetTransitionMode(OCBRepBuilderAPI_TransitionMode Mode)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->SetTransitionMode((BRepBuilderAPI_TransitionMode)Mode);
}

 void OCBRepOffsetAPI_MakePipeShell::Simulate(Standard_Integer NumberOfSection, OCNaroWrappers::OCTopTools_ListOfShape^ Result)
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->Simulate(NumberOfSection, *((TopTools_ListOfShape*)Result->Handle));
}

 void OCBRepOffsetAPI_MakePipeShell::Build()
{
  ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->Build();
}

 System::Boolean OCBRepOffsetAPI_MakePipeShell::MakeSolid()
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffsetAPI_MakePipeShell*)nativeHandle)->MakeSolid());
}

OCTopoDS_Shape^ OCBRepOffsetAPI_MakePipeShell::FirstShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->FirstShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCBRepOffsetAPI_MakePipeShell::LastShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->LastShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopTools_ListOfShape^ OCBRepOffsetAPI_MakePipeShell::Generated(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((BRepOffsetAPI_MakePipeShell*)nativeHandle)->Generated(*((TopoDS_Shape*)S->Handle));
  return gcnew OCTopTools_ListOfShape(tmp);
}


