// File generated by CPPExt (CPP file)
//

#include "BRepOffsetAPI_SequenceOfSequenceOfReal.h"
#include "../Converter.h"
#include "../TColStd/TColStd_SequenceOfReal.h"
#include "BRepOffsetAPI_SequenceNodeOfSequenceOfSequenceOfReal.h"


using namespace OCNaroWrappers;

OCBRepOffsetAPI_SequenceOfSequenceOfReal::OCBRepOffsetAPI_SequenceOfSequenceOfReal(BRepOffsetAPI_SequenceOfSequenceOfReal* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepOffsetAPI_SequenceOfSequenceOfReal::OCBRepOffsetAPI_SequenceOfSequenceOfReal() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new BRepOffsetAPI_SequenceOfSequenceOfReal();
}

OCBRepOffsetAPI_SequenceOfSequenceOfReal^ OCBRepOffsetAPI_SequenceOfSequenceOfReal::Assign(OCNaroWrappers::OCBRepOffsetAPI_SequenceOfSequenceOfReal^ Other)
{
  BRepOffsetAPI_SequenceOfSequenceOfReal* tmp = new BRepOffsetAPI_SequenceOfSequenceOfReal();
  *tmp = ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Assign(*((BRepOffsetAPI_SequenceOfSequenceOfReal*)Other->Handle));
  return gcnew OCBRepOffsetAPI_SequenceOfSequenceOfReal(tmp);
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::Append(OCNaroWrappers::OCTColStd_SequenceOfReal^ T)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Append(*((TColStd_SequenceOfReal*)T->Handle));
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::Append(OCNaroWrappers::OCBRepOffsetAPI_SequenceOfSequenceOfReal^ S)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Append(*((BRepOffsetAPI_SequenceOfSequenceOfReal*)S->Handle));
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::Prepend(OCNaroWrappers::OCTColStd_SequenceOfReal^ T)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Prepend(*((TColStd_SequenceOfReal*)T->Handle));
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::Prepend(OCNaroWrappers::OCBRepOffsetAPI_SequenceOfSequenceOfReal^ S)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Prepend(*((BRepOffsetAPI_SequenceOfSequenceOfReal*)S->Handle));
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfReal^ T)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->InsertBefore(Index, *((TColStd_SequenceOfReal*)T->Handle));
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCBRepOffsetAPI_SequenceOfSequenceOfReal^ S)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->InsertBefore(Index, *((BRepOffsetAPI_SequenceOfSequenceOfReal*)S->Handle));
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfReal^ T)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->InsertAfter(Index, *((TColStd_SequenceOfReal*)T->Handle));
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCBRepOffsetAPI_SequenceOfSequenceOfReal^ S)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->InsertAfter(Index, *((BRepOffsetAPI_SequenceOfSequenceOfReal*)S->Handle));
}

OCTColStd_SequenceOfReal^ OCBRepOffsetAPI_SequenceOfSequenceOfReal::First()
{
  TColStd_SequenceOfReal* tmp = new TColStd_SequenceOfReal();
  *tmp = ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->First();
  return gcnew OCTColStd_SequenceOfReal(tmp);
}

OCTColStd_SequenceOfReal^ OCBRepOffsetAPI_SequenceOfSequenceOfReal::Last()
{
  TColStd_SequenceOfReal* tmp = new TColStd_SequenceOfReal();
  *tmp = ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Last();
  return gcnew OCTColStd_SequenceOfReal(tmp);
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::Split(Standard_Integer Index, OCNaroWrappers::OCBRepOffsetAPI_SequenceOfSequenceOfReal^ Sub)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Split(Index, *((BRepOffsetAPI_SequenceOfSequenceOfReal*)Sub->Handle));
}

OCTColStd_SequenceOfReal^ OCBRepOffsetAPI_SequenceOfSequenceOfReal::Value(Standard_Integer Index)
{
  TColStd_SequenceOfReal* tmp = new TColStd_SequenceOfReal();
  *tmp = ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Value(Index);
  return gcnew OCTColStd_SequenceOfReal(tmp);
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::SetValue(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfReal^ I)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->SetValue(Index, *((TColStd_SequenceOfReal*)I->Handle));
}

OCTColStd_SequenceOfReal^ OCBRepOffsetAPI_SequenceOfSequenceOfReal::ChangeValue(Standard_Integer Index)
{
  TColStd_SequenceOfReal* tmp = new TColStd_SequenceOfReal();
  *tmp = ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->ChangeValue(Index);
  return gcnew OCTColStd_SequenceOfReal(tmp);
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::Remove(Standard_Integer Index)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Remove(Index);
}

 void OCBRepOffsetAPI_SequenceOfSequenceOfReal::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((BRepOffsetAPI_SequenceOfSequenceOfReal*)nativeHandle)->Remove(FromIndex, ToIndex);
}


