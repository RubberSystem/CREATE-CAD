// File generated by CPPExt (CPP file)
//

#include "TopBas_ListIteratorOfListOfTestInterference.h"
#include "../Converter.h"
#include "TopBas_ListOfTestInterference.h"
#include "TopBas_TestInterference.h"
#include "TopBas_ListNodeOfListOfTestInterference.h"


using namespace OCNaroWrappers;

OCTopBas_ListIteratorOfListOfTestInterference::OCTopBas_ListIteratorOfListOfTestInterference(TopBas_ListIteratorOfListOfTestInterference* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopBas_ListIteratorOfListOfTestInterference::OCTopBas_ListIteratorOfListOfTestInterference() 
{
  nativeHandle = new TopBas_ListIteratorOfListOfTestInterference();
}

OCTopBas_ListIteratorOfListOfTestInterference::OCTopBas_ListIteratorOfListOfTestInterference(OCNaroWrappers::OCTopBas_ListOfTestInterference^ L) 
{
  nativeHandle = new TopBas_ListIteratorOfListOfTestInterference(*((TopBas_ListOfTestInterference*)L->Handle));
}

 void OCTopBas_ListIteratorOfListOfTestInterference::Initialize(OCNaroWrappers::OCTopBas_ListOfTestInterference^ L)
{
  ((TopBas_ListIteratorOfListOfTestInterference*)nativeHandle)->Initialize(*((TopBas_ListOfTestInterference*)L->Handle));
}

 System::Boolean OCTopBas_ListIteratorOfListOfTestInterference::More()
{
  return OCConverter::StandardBooleanToBoolean(((TopBas_ListIteratorOfListOfTestInterference*)nativeHandle)->More());
}

 void OCTopBas_ListIteratorOfListOfTestInterference::Next()
{
  ((TopBas_ListIteratorOfListOfTestInterference*)nativeHandle)->Next();
}

OCTopBas_TestInterference^ OCTopBas_ListIteratorOfListOfTestInterference::Value()
{
  TopBas_TestInterference* tmp = new TopBas_TestInterference();
  *tmp = ((TopBas_ListIteratorOfListOfTestInterference*)nativeHandle)->Value();
  return gcnew OCTopBas_TestInterference(tmp);
}


