// File generated by CPPExt (CPP file)
//

#include "TopoDS_TShape.h"
#include "../Converter.h"
#include "TopoDS_Iterator.h"
#include "TopoDS_Builder.h"
#include "TopoDS_ListOfShape.h"


using namespace OCNaroWrappers;

OCTopoDS_TShape::OCTopoDS_TShape(Handle(TopoDS_TShape)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TopoDS_TShape(*nativeHandle);
}

OCTopoDS_TShape::OCTopoDS_TShape() : OCMMgt_TShared((OCDummy^)nullptr)

{}

 System::Boolean OCTopoDS_TShape::Free()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopoDS_TShape*)nativeHandle))->Free());
}

 void OCTopoDS_TShape::Free(System::Boolean F)
{
  (*((Handle_TopoDS_TShape*)nativeHandle))->Free(OCConverter::BooleanToStandardBoolean(F));
}

 System::Boolean OCTopoDS_TShape::Modified()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopoDS_TShape*)nativeHandle))->Modified());
}

 void OCTopoDS_TShape::Modified(System::Boolean M)
{
  (*((Handle_TopoDS_TShape*)nativeHandle))->Modified(OCConverter::BooleanToStandardBoolean(M));
}

 System::Boolean OCTopoDS_TShape::Checked()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopoDS_TShape*)nativeHandle))->Checked());
}

 void OCTopoDS_TShape::Checked(System::Boolean C)
{
  (*((Handle_TopoDS_TShape*)nativeHandle))->Checked(OCConverter::BooleanToStandardBoolean(C));
}

 System::Boolean OCTopoDS_TShape::Orientable()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopoDS_TShape*)nativeHandle))->Orientable());
}

 void OCTopoDS_TShape::Orientable(System::Boolean C)
{
  (*((Handle_TopoDS_TShape*)nativeHandle))->Orientable(OCConverter::BooleanToStandardBoolean(C));
}

 System::Boolean OCTopoDS_TShape::Closed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopoDS_TShape*)nativeHandle))->Closed());
}

 void OCTopoDS_TShape::Closed(System::Boolean C)
{
  (*((Handle_TopoDS_TShape*)nativeHandle))->Closed(OCConverter::BooleanToStandardBoolean(C));
}

 System::Boolean OCTopoDS_TShape::Infinite()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopoDS_TShape*)nativeHandle))->Infinite());
}

 void OCTopoDS_TShape::Infinite(System::Boolean C)
{
  (*((Handle_TopoDS_TShape*)nativeHandle))->Infinite(OCConverter::BooleanToStandardBoolean(C));
}

 System::Boolean OCTopoDS_TShape::Convex()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopoDS_TShape*)nativeHandle))->Convex());
}

 void OCTopoDS_TShape::Convex(System::Boolean C)
{
  (*((Handle_TopoDS_TShape*)nativeHandle))->Convex(OCConverter::BooleanToStandardBoolean(C));
}


