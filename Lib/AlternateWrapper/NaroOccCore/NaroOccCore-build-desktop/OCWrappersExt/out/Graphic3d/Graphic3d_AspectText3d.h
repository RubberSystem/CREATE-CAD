// File generated by CPPExt (Transient)
//
#ifndef _Graphic3d_AspectText3d_OCWrappers_HeaderFile
#define _Graphic3d_AspectText3d_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic3d_AspectText3d.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../TCollection/TCollection_AsciiString.h"
#include "../Quantity/Quantity_Color.h"
#include "../Aspect/Aspect_TypeOfStyleText.h"
#include "../Aspect/Aspect_TypeOfDisplayText.h"
#include "../Font/Font_FontAspect.h"


namespace OCNaroWrappers
{

ref class OCQuantity_Color;


//! Creates and updates a group of attributes for <br>
//!      text primitives. This group contains the colour, <br>
//!      font, expansion factor (height/width ratio), and <br>
//!      inter-character space. <br>
public ref class OCGraphic3d_AspectText3d : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCGraphic3d_AspectText3d(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic3d_AspectText3d(Handle(Graphic3d_AspectText3d)* nativeHandle);

// Methods PUBLIC

//! Creates a context table for text primitives <br>
//!      defined with the following default values: <br>
OCGraphic3d_AspectText3d();

//! Creates a context table for text primitives <br>
//!      defined with the specified values. <br>
//!          AFont may be to take means from User(example "Courier New") <br>
//!      or Font described in OpenGl_FontName(example Graphic3d_NOF_ASCII_MONO) <br>
//!      or use default font("Courier") <br>
OCGraphic3d_AspectText3d(OCNaroWrappers::OCQuantity_Color^ AColor, System::String^ AFont, Standard_Real AExpansionFactor, Standard_Real ASpace, OCAspect_TypeOfStyleText AStyle, OCAspect_TypeOfDisplayText ADisplayType);

//! Modifies the colour of <me>. <br>
 /*instead*/  void SetColor(OCNaroWrappers::OCQuantity_Color^ AColor) ;

//! Modifies the expansion factor (height/width ratio) <br>
//!  If the factor is less than 1, the characters will <br>
//!  be higher than they are wide. <br>
 /*instead*/  void SetExpansionFactor(Standard_Real AFactor) ;

//! Modifies the font of <me>. <br>
 /*instead*/  void SetFont(System::String^ AFont) ;

//! Modifies the space between the characters. <br>
 /*instead*/  void SetSpace(Standard_Real ASpace) ;

//! Modifies the style of the text. <br>
//!      TOST_NORMAL     Default text. The text is displayed like any other graphic object. <br>
//!              This text can be hidden by another object that is nearest from the <br>
//!              point of view. <br>
//!      TOST_ANNOTATION The text is always visible. The texte is displayed <br>
//!              over the other object according to the priority. <br>
 /*instead*/  void SetStyle(OCAspect_TypeOfStyleText AStyle) ;

//! Define the display type of the text. <br>
 /*instead*/  void SetDisplayType(OCAspect_TypeOfDisplayText ADisplayType) ;

//! Modifies the colour of the subtitle for the TODT_SUBTITLE TextDisplayType <br>
//!         and the colour of backgroubd for the TODT_DEKALE TextDisplayType. <br>
 /*instead*/  void SetColorSubTitle(OCNaroWrappers::OCQuantity_Color^ AColor) ;

//! Turns usage of text zoomable on/off <br>
 /*instead*/  void SetTextZoomable(System::Boolean AFlag) ;

//! Returns TRUE when the Text Zoomable is on. <br>
 /*instead*/  System::Boolean GetTextZoomable() ;

//! Turns usage of text rotated <br>
 /*instead*/  void SetTextAngle(Standard_Real AAngle) ;

//! Returns Angle of degree <br>
 /*instead*/  Standard_Real GetTextAngle() ;

//! Turns usage of Aspect text <br>
 /*instead*/  void SetTextFontAspect(OCFont_FontAspect AFontAspect) ;

//! Returns text FontAspect <br>
 /*instead*/  OCFont_FontAspect GetTextFontAspect() ;

//! Returns the current values of the group <me>. <br>
 /*instead*/  void Values(OCNaroWrappers::OCQuantity_Color^ AColor, System::String^& AFont, Standard_Real& AnExpansionFactor, Standard_Real& ASpace) ;

//! Returns the current values of the group <me>. <br>
 /*instead*/  void Values(OCNaroWrappers::OCQuantity_Color^ AColor, System::String^& AFont, Standard_Real& AnExpansionFactor, Standard_Real& ASpace, OCAspect_TypeOfStyleText& AStyle, OCAspect_TypeOfDisplayText& ADisplayType, OCNaroWrappers::OCQuantity_Color^ AColorSubTitle) ;

//! Returns the current values of the group <me>. <br>
 /*instead*/  void Values(OCNaroWrappers::OCQuantity_Color^ AColor, System::String^& AFont, Standard_Real& AnExpansionFactor, Standard_Real& ASpace, OCAspect_TypeOfStyleText& AStyle, OCAspect_TypeOfDisplayText& ADisplayType, OCNaroWrappers::OCQuantity_Color^ AColorSubTitle, System::Boolean& ATextZoomable, Standard_Real& ATextAngle) ;

//! Returns the current values of the group <me>. <br>
 /*instead*/  void Values(OCNaroWrappers::OCQuantity_Color^ AColor, System::String^& AFont, Standard_Real& AnExpansionFactor, Standard_Real& ASpace, OCAspect_TypeOfStyleText& AStyle, OCAspect_TypeOfDisplayText& ADisplayType, OCNaroWrappers::OCQuantity_Color^ AColorSubTitle, System::Boolean& ATextZoomable, Standard_Real& ATextAngle, OCFont_FontAspect& ATextFontAspect) ;

~OCGraphic3d_AspectText3d()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
