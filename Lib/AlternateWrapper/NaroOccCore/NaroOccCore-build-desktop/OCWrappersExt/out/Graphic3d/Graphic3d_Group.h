// File generated by CPPExt (Transient)
//
#ifndef _Graphic3d_Group_OCWrappers_HeaderFile
#define _Graphic3d_Group_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic3d_Group.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Graphic3d_ListOfPArray.h"
#include "Graphic3d_ListIteratorOfListOfPArray.h"
#include "Graphic3d_Structure.h"
#include "Graphic3d_TypeOfPolygon.h"
#include "Graphic3d_TextPath.h"
#include "Graphic3d_HorizontalTextAlignment.h"
#include "Graphic3d_VerticalTextAlignment.h"
#include "Graphic3d_GroupAspect.h"


namespace OCNaroWrappers
{

ref class OCGraphic3d_GraphicDriver;
ref class OCTColStd_HArray1OfByte;
ref class OCGraphic3d_Structure;
ref class OCGraphic3d_AspectLine3d;
ref class OCGraphic3d_AspectFillArea3d;
ref class OCGraphic3d_AspectText3d;
ref class OCGraphic3d_AspectMarker3d;
ref class OCGraphic3d_Vertex;
ref class OCGraphic3d_Array1OfVertex;
ref class OCTColStd_Array1OfInteger;
ref class OCGraphic3d_Array1OfVertexC;
ref class OCTCollection_ExtendedString;
ref class OCGraphic3d_ArrayOfPrimitives;


//! This class allows the definition of groups <br>
//!     of primitives inside of graphic objects (presentations). <br>
//!     A group contains the primitives and attributes <br>
//!     for which the range is limited to this group. <br>
//!     The primitives of a group can be globally suppressed. <br>
public ref class OCGraphic3d_Group : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCGraphic3d_Group(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic3d_Group(Handle(Graphic3d_Group)* nativeHandle);

// Methods PUBLIC

//! Creates a group in the structure <AStructure>. <br>
OCGraphic3d_Group(OCNaroWrappers::OCGraphic3d_Structure^ AStructure);

//! Supress all primitives and attributes of <me>. <br>
//!          To clear group without update in Graphic3d_StructureManager <br>
//!          pass Standard_False as <theUpdateStructureMgr>. This <br>
//!          used on context and viewer destruction, when the pointer <br>
//!          to structure manager in Graphic3d_Structure could be <br>
//!          already released (pointers are used here to avoid handle <br>
//!          cross-reference); <br>
 /*instead*/  void Clear(System::Boolean theUpdateStructureMgr) ;

//! Supress the group <me> in the structure. <br>
//!  Warning: No more graphic operations in <me> after this call. <br>//! Modifies the current modelling transform persistence (pan, zoom or rotate) <br>//! Get the current modelling transform persistence (pan, zoom or rotate) <br>
 /*instead*/  void Remove() ;

//! Removes the context for all the line primitives <br>
//!      of the group. <br>
 /*instead*/  void SetGroupPrimitivesAspect() ;

//! Modifies the context for all the line primitives <br>
//!      of the group. <br>
 /*instead*/  void SetGroupPrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectLine3d^ CTX) ;

//! Modifies the context for all the face primitives <br>
//!      of the group. <br>
 /*instead*/  void SetGroupPrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectFillArea3d^ CTX) ;

//! Modifies the context for all the text primitives <br>
//!      of the group. <br>
 /*instead*/  void SetGroupPrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectText3d^ CTX) ;

//! Modifies the context for all the marker primitives <br>
//!      of the group. <br>
 /*instead*/  void SetGroupPrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectMarker3d^ CTX) ;

//! Modifies the current context of the group to give <br>
//!      another aspect for all the line primitives created <br>
//!      after this call in the group. <br>
 /*instead*/  void SetPrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectLine3d^ CTX) ;

//! Modifies the current context of the group to give <br>
//!      another aspect for all the face primitives created <br>
//!      after this call in the group. <br>
 /*instead*/  void SetPrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectFillArea3d^ CTX) ;

//! Modifies the current context of the group to give <br>
//!      another aspect for all the text primitives created <br>
//!      after this call in the group. <br>
 /*instead*/  void SetPrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectText3d^ CTX) ;

//! Modifies the current context of the group to give <br>
//!      another aspect for all the marker primitives created <br>
//!      after this call in the group. <br>
 /*instead*/  void SetPrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectMarker3d^ CTX) ;

//! Sets the coordinates of the boundary box of the <br>
//!      group <me>. <br>
 /*instead*/  void SetMinMaxValues(Standard_Real XMin, Standard_Real YMin, Standard_Real ZMin, Standard_Real XMax, Standard_Real YMax, Standard_Real ZMax) ;

//! Creates a marker in position <APoint> which will be drawn <br>
//!      with the current attribute (AspectMarker). <br>
 /*instead*/  void Marker(OCNaroWrappers::OCGraphic3d_Vertex^ APoint, System::Boolean EvalMinMax) ;

//! Creates a group of markers defined by a table of <br>
//!     vertices. <br>
 /*instead*/  void MarkerSet(OCNaroWrappers::OCGraphic3d_Array1OfVertex^ ListVertex, System::Boolean EvalMinMax) ;

//! Links up points to create a face drawn <br>
//!      using the current fill attributes (AspectFillArea3d)) <br>
//!      The first and last points are not duplicates. <br>
 /*instead*/  void Polygon(OCNaroWrappers::OCGraphic3d_Array1OfVertex^ ListVertex, OCGraphic3d_TypeOfPolygon AType, System::Boolean EvalMinMax) ;

//! Links up points to create a set of face drawn <br>
//!      using the current fill attributes (AspectFillArea3d)) <br>
//!      The first and last points are not duplicates. <br>
 /*instead*/  void PolygonSet(OCNaroWrappers::OCTColStd_Array1OfInteger^ Bounds, OCNaroWrappers::OCGraphic3d_Array1OfVertex^ ListVertex, OCGraphic3d_TypeOfPolygon AType, System::Boolean EvalMinMax) ;

//! Links up points to create a line drawn <br>
//!      using the current line attributes (AspectLine) <br>
 /*instead*/  void Polyline(OCNaroWrappers::OCGraphic3d_Vertex^ APT1, OCNaroWrappers::OCGraphic3d_Vertex^ APT2, System::Boolean EvalMinMax) ;

//! Links up points to create a line drawn <br>
//!      using the current line attributes (AspectLine) <br>
 /*instead*/  void Polyline(OCNaroWrappers::OCGraphic3d_Array1OfVertex^ ListVertex, System::Boolean EvalMinMax) ;

//! Links up points to create a line drawn <br>
//!      using the current line attributes (AspectLine) <br>
//!      except for the colour which is defined <br>
//!      for each vertex. <br>
 /*instead*/  void Polyline(OCNaroWrappers::OCGraphic3d_Array1OfVertexC^ ListVertex, System::Boolean EvalMinMax) ;

//! Creates the string <AText> at position <APoint>. <br>
//!      The 3D point of attachment is projected. The text is <br>
//!      written in the plane of projection. <br>
//!      The attributes are given with respect to the plane of <br>
//!      projection. <br>
//!      AHeight : Height of text. <br>
//!            (Relative to the Normalized Projection <br>
//!              Coordinates (NPC) Space). <br>
//!      AAngle  : Orientation of the text <br>
//!            (with respect to the horizontal). <br>
 /*instead*/  void Text(System::String^ AText, OCNaroWrappers::OCGraphic3d_Vertex^ APoint, Standard_Real AHeight, Quantity_PlaneAngle AAngle, OCGraphic3d_TextPath ATp, OCGraphic3d_HorizontalTextAlignment AHta, OCGraphic3d_VerticalTextAlignment AVta, System::Boolean EvalMinMax) ;

//! Creates the string <AText> at position <APoint>. <br>
//!      The 3D point of attachment is projected. The text is <br>
//!      written in the plane of projection. <br>
//!      The attributes are given with respect to the plane of <br>
//!      projection. <br>
//!      AHeight : Height of text. <br>
//!            (Relative to the Normalized Projection <br>
//!              Coordinates (NPC) Space). <br>
//!      The other attributes have the following default values: <br>
//!      AAngle  : PI / 2. <br>
//!      ATp     : TP_RIGHT <br>
//!      AHta    : HTA_LEFT <br>
//!      AVta    : VTA_BOTTOM <br>
 /*instead*/  void Text(System::String^ AText, OCNaroWrappers::OCGraphic3d_Vertex^ APoint, Standard_Real AHeight, System::Boolean EvalMinMax) ;

//! Creates the string <AText> at position <APoint>. <br>
//!      The 3D point of attachment is projected. The text is <br>
//!      written in the plane of projection. <br>
//!      The attributes are given with respect to the plane of <br>
//!      projection. <br>
//!      AHeight : Height of text. <br>
//!            (Relative to the Normalized Projection <br>
//!              Coordinates (NPC) Space). <br>
//!      AAngle  : Orientation of the text <br>
//!            (with respect to the horizontal). <br>
 /*instead*/  void Text(OCNaroWrappers::OCTCollection_ExtendedString^ AText, OCNaroWrappers::OCGraphic3d_Vertex^ APoint, Standard_Real AHeight, Quantity_PlaneAngle AAngle, OCGraphic3d_TextPath ATp, OCGraphic3d_HorizontalTextAlignment AHta, OCGraphic3d_VerticalTextAlignment AVta, System::Boolean EvalMinMax) ;

//! Creates the string <AText> at position <APoint>. <br>
//!      The 3D point of attachment is projected. The text is <br>
//!      written in the plane of projection. <br>
//!      The attributes are given with respect to the plane of <br>
//!      projection. <br>
//!      AHeight : Height of text. <br>
//!            (Relative to the Normalized Projection <br>
//!              Coordinates (NPC) Space). <br>
//!      The other attributes have the following default values: <br>
//!      AAngle  : PI / 2. <br>
//!      ATp     : TP_RIGHT <br>
//!      AHta    : HTA_LEFT <br>
//!      AVta    : VTA_BOTTOM <br>
 /*instead*/  void Text(OCNaroWrappers::OCTCollection_ExtendedString^ AText, OCNaroWrappers::OCGraphic3d_Vertex^ APoint, Standard_Real AHeight, System::Boolean EvalMinMax) ;

//! Adds an array of primitives for display <br>
 /*instead*/  void AddPrimitiveArray(OCNaroWrappers::OCGraphic3d_ArrayOfPrimitives^ elem, System::Boolean EvalMinMax) ;

//! Remove the array of primitives of rank <aRank> <br>
 /*instead*/  void RemovePrimitiveArray(Standard_Integer aRank) ;

//! Remove all array of primitives <br>
 /*instead*/  void RemovePrimitiveArrays() ;

//! Creates an UserDraw primitive <br>
//!  Category: Methods to create UserDraw <br>
//!  Warning: Raises GroupDefinitionError if ... <br>
 /*instead*/  void UserDraw(Standard_Address AnObject, System::Boolean EvalMinMax, System::Boolean ContainsFacet) ;

//! Returns the number of primitive array added in this group <br>
 /*instead*/  Standard_Integer ArrayNumber() ;

//! Initialize the array list iterator. <br>
 /*instead*/  void InitDefinedArray() ;

//! Increments the array list iterator. <br>
 /*instead*/  void NextDefinedArray() ;

//! Returns TRUE if more array exists in the list. <br>
 /*instead*/  System::Boolean MoreDefinedArray() ;

//! Returns the current array of primitives according <br>
//! to the array list iterator value. <br>
 /*instead*/  OCGraphic3d_ArrayOfPrimitives^ DefinedArray() ;

//! Returns TRUE if aspect is set for the group. <br>
 /*instead*/  System::Boolean IsGroupPrimitivesAspectSet(OCGraphic3d_GroupAspect theAspect) ;

//! Returns the context of all the primitives of the group. <br>
 /*instead*/  void GroupPrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectLine3d^ CTXL, OCNaroWrappers::OCGraphic3d_AspectText3d^ CTXT, OCNaroWrappers::OCGraphic3d_AspectMarker3d^ CTXM, OCNaroWrappers::OCGraphic3d_AspectFillArea3d^ CTXF) ;

//! Returns the last inserted context in the group <me> <br>
//!	    foreach kind of primitives. <br>
 /*instead*/  void PrimitivesAspect(OCNaroWrappers::OCGraphic3d_AspectLine3d^ CTXL, OCNaroWrappers::OCGraphic3d_AspectText3d^ CTXT, OCNaroWrappers::OCGraphic3d_AspectMarker3d^ CTXM, OCNaroWrappers::OCGraphic3d_AspectFillArea3d^ CTXF) ;

//! Returns Standard_True if the group <me> contains <br>
//!      Polygons, Triangles or Quadrangles. <br>
 /*instead*/  System::Boolean ContainsFacet() ;

//! Returns Standard_True if the group <me> is deleted. <br>
//!      <me> is deleted after the call Remove (me) or the <br>
//!      associated structure is deleted. <br>
 /*instead*/  System::Boolean IsDeleted() ;

//! Returns Standard_True if the group <me> is empty. <br>
 /*instead*/  System::Boolean IsEmpty() ;

//! Returns the coordinates of the boundary box of the <br>
//!      group <me>. <br>
 /*instead*/  void MinMaxValues(Standard_Real& XMin, Standard_Real& YMin, Standard_Real& ZMin, Standard_Real& XMax, Standard_Real& YMax, Standard_Real& ZMax) ;

//! Returns the structure containing the group <me>. <br>
 /*instead*/  OCGraphic3d_Structure^ Structure() ;


 /*instead*/  void BeginPrimitives() ;


 /*instead*/  void EndPrimitives() ;

~OCGraphic3d_Group()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
