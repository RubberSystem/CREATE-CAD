// File generated by CPPExt (CPP file)
//

#include "Graphic3d_Array1OfVertexNT.h"
#include "../Converter.h"
#include "Graphic3d_VertexNT.h"


using namespace OCNaroWrappers;

OCGraphic3d_Array1OfVertexNT::OCGraphic3d_Array1OfVertexNT(Graphic3d_Array1OfVertexNT* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGraphic3d_Array1OfVertexNT::OCGraphic3d_Array1OfVertexNT(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Graphic3d_Array1OfVertexNT(Low, Up);
}

OCGraphic3d_Array1OfVertexNT::OCGraphic3d_Array1OfVertexNT(OCNaroWrappers::OCGraphic3d_VertexNT^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Graphic3d_Array1OfVertexNT(*((Graphic3d_VertexNT*)Item->Handle), Low, Up);
}

 void OCGraphic3d_Array1OfVertexNT::Init(OCNaroWrappers::OCGraphic3d_VertexNT^ V)
{
  ((Graphic3d_Array1OfVertexNT*)nativeHandle)->Init(*((Graphic3d_VertexNT*)V->Handle));
}

 System::Boolean OCGraphic3d_Array1OfVertexNT::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((Graphic3d_Array1OfVertexNT*)nativeHandle)->IsAllocated());
}

OCGraphic3d_Array1OfVertexNT^ OCGraphic3d_Array1OfVertexNT::Assign(OCNaroWrappers::OCGraphic3d_Array1OfVertexNT^ Other)
{
  Graphic3d_Array1OfVertexNT* tmp = new Graphic3d_Array1OfVertexNT(0, 0);
  *tmp = ((Graphic3d_Array1OfVertexNT*)nativeHandle)->Assign(*((Graphic3d_Array1OfVertexNT*)Other->Handle));
  return gcnew OCGraphic3d_Array1OfVertexNT(tmp);
}

 Standard_Integer OCGraphic3d_Array1OfVertexNT::Length()
{
  return ((Graphic3d_Array1OfVertexNT*)nativeHandle)->Length();
}

 Standard_Integer OCGraphic3d_Array1OfVertexNT::Lower()
{
  return ((Graphic3d_Array1OfVertexNT*)nativeHandle)->Lower();
}

 Standard_Integer OCGraphic3d_Array1OfVertexNT::Upper()
{
  return ((Graphic3d_Array1OfVertexNT*)nativeHandle)->Upper();
}

 void OCGraphic3d_Array1OfVertexNT::SetValue(Standard_Integer Index, OCNaroWrappers::OCGraphic3d_VertexNT^ Value)
{
  ((Graphic3d_Array1OfVertexNT*)nativeHandle)->SetValue(Index, *((Graphic3d_VertexNT*)Value->Handle));
}

OCGraphic3d_VertexNT^ OCGraphic3d_Array1OfVertexNT::Value(Standard_Integer Index)
{
  Graphic3d_VertexNT* tmp = new Graphic3d_VertexNT();
  *tmp = ((Graphic3d_Array1OfVertexNT*)nativeHandle)->Value(Index);
  return gcnew OCGraphic3d_VertexNT(tmp);
}

OCGraphic3d_VertexNT^ OCGraphic3d_Array1OfVertexNT::ChangeValue(Standard_Integer Index)
{
  Graphic3d_VertexNT* tmp = new Graphic3d_VertexNT();
  *tmp = ((Graphic3d_Array1OfVertexNT*)nativeHandle)->ChangeValue(Index);
  return gcnew OCGraphic3d_VertexNT(tmp);
}


