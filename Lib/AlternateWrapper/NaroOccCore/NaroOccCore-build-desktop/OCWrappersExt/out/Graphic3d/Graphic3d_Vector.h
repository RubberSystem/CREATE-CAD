// File generated by CPPExt (MPV)
//
#ifndef _Graphic3d_Vector_OCWrappers_HeaderFile
#define _Graphic3d_Vector_OCWrappers_HeaderFile

// include native header
#include <Graphic3d_Vector.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCGraphic3d_Vertex;


//! This class allows the creation and update <br>
//!	    of a 3D vector. <br>
public ref class OCGraphic3d_Vector  {

protected:
  Graphic3d_Vector* nativeHandle;
  OCGraphic3d_Vector(OCDummy^) {};

public:
  property Graphic3d_Vector* Handle
  {
    Graphic3d_Vector* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGraphic3d_Vector(Graphic3d_Vector* nativeHandle);

// Methods PUBLIC

//! Creates a vector with 1.0, 0.0, 0.0 coordinates. <br>
OCGraphic3d_Vector();

//! Creates a vector with <AX>, <AY>, <AZ> coordinates. <br>
OCGraphic3d_Vector(Standard_Real AX, Standard_Real AY, Standard_Real AZ);

//! Creates a vector from 2 points <APoint1> and <APoint2>. <br>
OCGraphic3d_Vector(OCNaroWrappers::OCGraphic3d_Vertex^ APoint1, OCNaroWrappers::OCGraphic3d_Vertex^ APoint2);

//! Normalises <me>. <br>
//!  Category: Methods to modify the class definition <br>
//!  Warning: Raises VectorError if <me> is null. <br>
 /*instead*/  void Normalize() ;

//! Modifies the coordinates of the vector <me>. <br>
 /*instead*/  void SetCoord(Standard_Real Xnew, Standard_Real Ynew, Standard_Real Znew) ;

//! Modifies the X coordinate of the vector <me>. <br>
 /*instead*/  void SetXCoord(Standard_Real Xnew) ;

//! Modifies the Y coordinate of the vector <me>. <br>
 /*instead*/  void SetYCoord(Standard_Real Ynew) ;

//! Modifies the Z coordinate of the vector <me>. <br>
 /*instead*/  void SetZCoord(Standard_Real Znew) ;

//! Returns the coordinates of the vector <me>. <br>
 /*instead*/  void Coord(Standard_Real& AX, Standard_Real& AY, Standard_Real& AZ) ;

//! Returns Standard_True if <me> has length 1. <br>
 /*instead*/  System::Boolean IsNormalized() ;

//! Returns Standard_True if <me> has length zero. <br>
 /*instead*/  System::Boolean LengthZero() ;

//! Returns the X coordinates of the vector <me>. <br>
 /*instead*/  Standard_Real X() ;

//! Returns the Y coordinate of the vector <me>. <br>
 /*instead*/  Standard_Real Y() ;

//! Returns the Z coordinate of the vector <me>. <br>
 /*instead*/  Standard_Real Z() ;

//! Returns Standard_True if the vector <AV1> and <br>
//!	    <AV2> are parallel. <br>
static /*instead*/  System::Boolean IsParallel(OCNaroWrappers::OCGraphic3d_Vector^ AV1, OCNaroWrappers::OCGraphic3d_Vector^ AV2) ;

//! Returns the norm of the vector <AX>, <AY>, <AZ>. <br>
static /*instead*/  Standard_Real NormeOf(Standard_Real AX, Standard_Real AY, Standard_Real AZ) ;

//! Returns the norm of the vector <AVector>. <br>
static /*instead*/  Standard_Real NormeOf(OCNaroWrappers::OCGraphic3d_Vector^ AVector) ;

~OCGraphic3d_Vector()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
