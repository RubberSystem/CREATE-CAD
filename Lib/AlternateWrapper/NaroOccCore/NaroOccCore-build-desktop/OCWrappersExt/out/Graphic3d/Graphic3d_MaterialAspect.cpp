// File generated by CPPExt (CPP file)
//

#include "Graphic3d_MaterialAspect.h"
#include "../Converter.h"
#include "../Quantity/Quantity_Color.h"


using namespace OCNaroWrappers;

OCGraphic3d_MaterialAspect::OCGraphic3d_MaterialAspect(Graphic3d_MaterialAspect* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGraphic3d_MaterialAspect::OCGraphic3d_MaterialAspect() 
{
  nativeHandle = new Graphic3d_MaterialAspect();
}

OCGraphic3d_MaterialAspect::OCGraphic3d_MaterialAspect(OCGraphic3d_NameOfMaterial AName) 
{
  nativeHandle = new Graphic3d_MaterialAspect((Graphic3d_NameOfMaterial)AName);
}

 void OCGraphic3d_MaterialAspect::IncreaseShine(Standard_Real ADelta)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->IncreaseShine(ADelta);
}

 void OCGraphic3d_MaterialAspect::SetAmbient(Standard_Real AValue)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetAmbient(AValue);
}

 void OCGraphic3d_MaterialAspect::SetDiffuse(Standard_Real AValue)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetDiffuse(AValue);
}

 void OCGraphic3d_MaterialAspect::SetEmissive(Standard_Real AValue)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetEmissive(AValue);
}

 void OCGraphic3d_MaterialAspect::SetShininess(Standard_Real AValue)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetShininess(AValue);
}

 void OCGraphic3d_MaterialAspect::SetSpecular(Standard_Real AValue)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetSpecular(AValue);
}

 void OCGraphic3d_MaterialAspect::SetTransparency(Standard_Real AValue)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetTransparency(AValue);
}

 void OCGraphic3d_MaterialAspect::SetColor(OCNaroWrappers::OCQuantity_Color^ AColor)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetColor(*((Quantity_Color*)AColor->Handle));
}

 void OCGraphic3d_MaterialAspect::SetAmbientColor(OCNaroWrappers::OCQuantity_Color^ AColor)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetAmbientColor(*((Quantity_Color*)AColor->Handle));
}

 void OCGraphic3d_MaterialAspect::SetDiffuseColor(OCNaroWrappers::OCQuantity_Color^ AColor)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetDiffuseColor(*((Quantity_Color*)AColor->Handle));
}

 void OCGraphic3d_MaterialAspect::SetSpecularColor(OCNaroWrappers::OCQuantity_Color^ AColor)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetSpecularColor(*((Quantity_Color*)AColor->Handle));
}

 void OCGraphic3d_MaterialAspect::SetEmissiveColor(OCNaroWrappers::OCQuantity_Color^ AColor)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetEmissiveColor(*((Quantity_Color*)AColor->Handle));
}

 void OCGraphic3d_MaterialAspect::SetReflectionModeOn(OCGraphic3d_TypeOfReflection AType)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetReflectionModeOn((Graphic3d_TypeOfReflection)AType);
}

 void OCGraphic3d_MaterialAspect::SetReflectionModeOff(OCGraphic3d_TypeOfReflection AType)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetReflectionModeOff((Graphic3d_TypeOfReflection)AType);
}

 void OCGraphic3d_MaterialAspect::SetMaterialType(OCGraphic3d_TypeOfMaterial AType)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetMaterialType((Graphic3d_TypeOfMaterial)AType);
}

 void OCGraphic3d_MaterialAspect::SetMaterialName(System::String^ AName)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetMaterialName(OCConverter::StringToStandardCString(AName));
}

 void OCGraphic3d_MaterialAspect::SetEnvReflexion(Standard_ShortReal AValue)
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->SetEnvReflexion(AValue);
}

 void OCGraphic3d_MaterialAspect::Reset()
{
  ((Graphic3d_MaterialAspect*)nativeHandle)->Reset();
}

OCQuantity_Color^ OCGraphic3d_MaterialAspect::Color()
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = ((Graphic3d_MaterialAspect*)nativeHandle)->Color();
  return gcnew OCQuantity_Color(tmp);
}

OCQuantity_Color^ OCGraphic3d_MaterialAspect::AmbientColor()
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = ((Graphic3d_MaterialAspect*)nativeHandle)->AmbientColor();
  return gcnew OCQuantity_Color(tmp);
}

OCQuantity_Color^ OCGraphic3d_MaterialAspect::DiffuseColor()
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = ((Graphic3d_MaterialAspect*)nativeHandle)->DiffuseColor();
  return gcnew OCQuantity_Color(tmp);
}

OCQuantity_Color^ OCGraphic3d_MaterialAspect::SpecularColor()
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = ((Graphic3d_MaterialAspect*)nativeHandle)->SpecularColor();
  return gcnew OCQuantity_Color(tmp);
}

OCQuantity_Color^ OCGraphic3d_MaterialAspect::EmissiveColor()
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = ((Graphic3d_MaterialAspect*)nativeHandle)->EmissiveColor();
  return gcnew OCQuantity_Color(tmp);
}

 Standard_Real OCGraphic3d_MaterialAspect::Ambient()
{
  return ((Graphic3d_MaterialAspect*)nativeHandle)->Ambient();
}

 Standard_Real OCGraphic3d_MaterialAspect::Diffuse()
{
  return ((Graphic3d_MaterialAspect*)nativeHandle)->Diffuse();
}

 Standard_Real OCGraphic3d_MaterialAspect::Specular()
{
  return ((Graphic3d_MaterialAspect*)nativeHandle)->Specular();
}

 Standard_Real OCGraphic3d_MaterialAspect::Transparency()
{
  return ((Graphic3d_MaterialAspect*)nativeHandle)->Transparency();
}

 Standard_Real OCGraphic3d_MaterialAspect::Emissive()
{
  return ((Graphic3d_MaterialAspect*)nativeHandle)->Emissive();
}

 Standard_Real OCGraphic3d_MaterialAspect::Shininess()
{
  return ((Graphic3d_MaterialAspect*)nativeHandle)->Shininess();
}

 System::Boolean OCGraphic3d_MaterialAspect::ReflectionMode(OCGraphic3d_TypeOfReflection AType)
{
  return OCConverter::StandardBooleanToBoolean(((Graphic3d_MaterialAspect*)nativeHandle)->ReflectionMode((Graphic3d_TypeOfReflection)AType));
}

 System::Boolean OCGraphic3d_MaterialAspect::MaterialType(OCGraphic3d_TypeOfMaterial AType)
{
  return OCConverter::StandardBooleanToBoolean(((Graphic3d_MaterialAspect*)nativeHandle)->MaterialType((Graphic3d_TypeOfMaterial)AType));
}

 Standard_ShortReal OCGraphic3d_MaterialAspect::EnvReflexion()
{
  return ((Graphic3d_MaterialAspect*)nativeHandle)->EnvReflexion();
}

 OCGraphic3d_NameOfMaterial OCGraphic3d_MaterialAspect::Name()
{
  return (OCGraphic3d_NameOfMaterial)(((Graphic3d_MaterialAspect*)nativeHandle)->Name());
}

 System::Boolean OCGraphic3d_MaterialAspect::IsDifferent(OCNaroWrappers::OCGraphic3d_MaterialAspect^ Other)
{
  return OCConverter::StandardBooleanToBoolean(((Graphic3d_MaterialAspect*)nativeHandle)->IsDifferent(*((Graphic3d_MaterialAspect*)Other->Handle)));
}

 System::Boolean OCGraphic3d_MaterialAspect::IsEqual(OCNaroWrappers::OCGraphic3d_MaterialAspect^ Other)
{
  return OCConverter::StandardBooleanToBoolean(((Graphic3d_MaterialAspect*)nativeHandle)->IsEqual(*((Graphic3d_MaterialAspect*)Other->Handle)));
}

 Standard_Integer OCGraphic3d_MaterialAspect::NumberOfMaterials()
{
  return Graphic3d_MaterialAspect::NumberOfMaterials();
}

 System::String^ OCGraphic3d_MaterialAspect::MaterialName(Standard_Integer aRank)
{
  return OCConverter::StandardCStringToString(Graphic3d_MaterialAspect::MaterialName(aRank));
}

 System::String^ OCGraphic3d_MaterialAspect::MaterialName()
{
  return OCConverter::StandardCStringToString(((Graphic3d_MaterialAspect*)nativeHandle)->MaterialName());
}

 OCGraphic3d_TypeOfMaterial OCGraphic3d_MaterialAspect::MaterialType(Standard_Integer aRank)
{
  return (OCGraphic3d_TypeOfMaterial)(Graphic3d_MaterialAspect::MaterialType(aRank));
}


