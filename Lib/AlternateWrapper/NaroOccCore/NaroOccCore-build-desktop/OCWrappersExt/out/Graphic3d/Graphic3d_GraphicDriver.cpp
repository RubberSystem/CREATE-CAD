// File generated by CPPExt (CPP file)
//

#include "Graphic3d_GraphicDriver.h"
#include "../Converter.h"
#include "../TColStd/TColStd_Array2OfReal.h"
#include "../TColStd/TColStd_HArray1OfByte.h"
#include "../Quantity/Quantity_Color.h"
#include "Graphic3d_Vertex.h"
#include "Graphic3d_Array1OfVertex.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../AlienImage/AlienImage_AlienImage.h"
#include "../TColStd/TColStd_HArray1OfReal.h"


using namespace OCNaroWrappers;

OCGraphic3d_GraphicDriver::OCGraphic3d_GraphicDriver(Handle(Graphic3d_GraphicDriver)* nativeHandle) : OCAspect_GraphicDriver((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Graphic3d_GraphicDriver(*nativeHandle);
}

OCGraphic3d_GraphicDriver::OCGraphic3d_GraphicDriver(System::String^ AShrName) : OCAspect_GraphicDriver((OCDummy^)nullptr)

{}

 Standard_Integer OCGraphic3d_GraphicDriver::Light(Graphic3d_CLight ACLight, System::Boolean Update)
{
  return Graphic3d_GraphicDriver::Light(ACLight, OCConverter::BooleanToStandardBoolean(Update));
}

 Standard_Integer OCGraphic3d_GraphicDriver::Plane(Graphic3d_CPlane ACPlane, System::Boolean Update)
{
  return Graphic3d_GraphicDriver::Plane(ACPlane, OCConverter::BooleanToStandardBoolean(Update));
}

 void OCGraphic3d_GraphicDriver::PrintBoolean(System::String^ AComment, System::Boolean AValue)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintBoolean(OCConverter::StringToStandardCString(AComment), OCConverter::BooleanToStandardBoolean(AValue));
}

 void OCGraphic3d_GraphicDriver::PrintCGroup(Graphic3d_CGroup ACGroup, Standard_Integer AField)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintCGroup(ACGroup, AField);
}

 void OCGraphic3d_GraphicDriver::PrintCLight(Graphic3d_CLight ACLight, Standard_Integer AField)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintCLight(ACLight, AField);
}

 void OCGraphic3d_GraphicDriver::PrintCPick(Graphic3d_CPick ACPick, Standard_Integer AField)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintCPick(ACPick, AField);
}

 void OCGraphic3d_GraphicDriver::PrintCPlane(Graphic3d_CPlane ACPlane, Standard_Integer AField)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintCPlane(ACPlane, AField);
}

 void OCGraphic3d_GraphicDriver::PrintCStructure(Graphic3d_CStructure ACStructure, Standard_Integer AField)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintCStructure(ACStructure, AField);
}

 void OCGraphic3d_GraphicDriver::PrintCView(Graphic3d_CView ACView, Standard_Integer AField)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintCView(ACView, AField);
}

 void OCGraphic3d_GraphicDriver::PrintFunction(System::String^ AFunc)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintFunction(OCConverter::StringToStandardCString(AFunc));
}

 void OCGraphic3d_GraphicDriver::PrintInteger(System::String^ AComment, Standard_Integer AValue)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintInteger(OCConverter::StringToStandardCString(AComment), AValue);
}

 void OCGraphic3d_GraphicDriver::PrintIResult(System::String^ AFunc, Standard_Integer AResult)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintIResult(OCConverter::StringToStandardCString(AFunc), AResult);
}

 void OCGraphic3d_GraphicDriver::PrintShortReal(System::String^ AComment, Standard_ShortReal AValue)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintShortReal(OCConverter::StringToStandardCString(AComment), AValue);
}

 void OCGraphic3d_GraphicDriver::PrintMatrix(System::String^ AComment, OCNaroWrappers::OCTColStd_Array2OfReal^ AMatrix)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintMatrix(OCConverter::StringToStandardCString(AComment), *((TColStd_Array2OfReal*)AMatrix->Handle));
}

 void OCGraphic3d_GraphicDriver::PrintString(System::String^ AComment, System::String^ AString)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->PrintString(OCConverter::StringToStandardCString(AComment), OCConverter::StringToStandardCString(AString));
}

 void OCGraphic3d_GraphicDriver::SetTrace(Standard_Integer ALevel)
{
  (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->SetTrace(ALevel);
}

 Standard_Integer OCGraphic3d_GraphicDriver::Trace()
{
  return (*((Handle_Graphic3d_GraphicDriver*)nativeHandle))->Trace();
}


