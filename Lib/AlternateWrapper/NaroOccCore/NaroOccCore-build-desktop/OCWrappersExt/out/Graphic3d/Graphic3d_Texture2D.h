// File generated by CPPExt (Transient)
//
#ifndef _Graphic3d_Texture2D_OCWrappers_HeaderFile
#define _Graphic3d_Texture2D_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic3d_Texture2D.hxx>
#include "../Converter.h"

#include "Graphic3d_TextureMap.h"

#include "Graphic3d_NameOfTexture2D.h"
#include "Graphic3d_TypeOfTexture.h"


namespace OCNaroWrappers
{

ref class OCGraphic3d_StructureManager;


//! This abstract class for managing 2D textures <br>
public ref class OCGraphic3d_Texture2D : OCGraphic3d_TextureMap {

protected:
  // dummy constructor;
  OCGraphic3d_Texture2D(OCDummy^) : OCGraphic3d_TextureMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic3d_Texture2D(Handle(Graphic3d_Texture2D)* nativeHandle);

// Methods PUBLIC


OCGraphic3d_Texture2D(OCNaroWrappers::OCGraphic3d_StructureManager^ SM, System::String^ aFileName, OCGraphic3d_TypeOfTexture aType);


OCGraphic3d_Texture2D(OCNaroWrappers::OCGraphic3d_StructureManager^ SM, OCGraphic3d_NameOfTexture2D aName, OCGraphic3d_TypeOfTexture aType);


//! Returns the name of the predefined textures or NOT_2D_UNKNOWN <br>
//! when the name is given as a filename. <br>
 /*instead*/  OCGraphic3d_NameOfTexture2D Name() ;


//! Returns the number of predefined textures. <br>
static /*instead*/  Standard_Integer NumberOfTextures() ;


//! Returns the name of the predefined texture of rank <aRank> <br>
static /*instead*/  System::String^ TextureName(Standard_Integer aRank) ;

~OCGraphic3d_Texture2D()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
