// File generated by CPPExt (Transient)
//
#ifndef _Graphic3d_TextureMap_OCWrappers_HeaderFile
#define _Graphic3d_TextureMap_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic3d_TextureMap.hxx>
#include "../Converter.h"

#include "Graphic3d_TextureRoot.h"

#include "Graphic3d_TypeOfTexture.h"


namespace OCNaroWrappers
{

ref class OCGraphic3d_StructureManager;


//!  This is an abstract class for managing texture applyable on polygons. <br>
public ref class OCGraphic3d_TextureMap : OCGraphic3d_TextureRoot {

protected:
  // dummy constructor;
  OCGraphic3d_TextureMap(OCDummy^) : OCGraphic3d_TextureRoot((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic3d_TextureMap(Handle(Graphic3d_TextureMap)* nativeHandle);

// Methods PUBLIC


OCGraphic3d_TextureMap(OCNaroWrappers::OCGraphic3d_StructureManager^ SM, System::String^ Path, System::String^ FileName, OCGraphic3d_TypeOfTexture Type);


//! enable texture smoothing <br>
 /*instead*/  void EnableSmooth() ;


//! Returns TRUE if the texture is smoothed. <br>
 /*instead*/  System::Boolean IsSmoothed() ;


//! disable texture smoothing <br>
 /*instead*/  void DisableSmooth() ;


//! enable texture modulate mode. <br>
//! the image is modulate with the shading of the surface. <br>
 /*instead*/  void EnableModulate() ;


//! disable texture modulate mode. <br>
//! the image is directly decal on the surface. <br>
 /*instead*/  void DisableModulate() ;


//! Returns TRUE if the texture is modulate. <br>
 /*instead*/  System::Boolean IsModulate() ;


//! use this methods if you want to enable <br>
//! texture repetition on your objects. <br>
 /*instead*/  void EnableRepeat() ;


//! use this methods if you want to disable <br>
//! texture repetition on your objects. <br>
 /*instead*/  void DisableRepeat() ;


//! Returns TRUE if the texture repeat is enable. <br>
 /*instead*/  System::Boolean IsRepeat() ;

~OCGraphic3d_TextureMap()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
