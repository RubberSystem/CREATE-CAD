// File generated by CPPExt (CPP file)
//

#include "Graphic3d_VertexNT.h"
#include "../Converter.h"
#include "Graphic3d_Vertex.h"
#include "Graphic3d_Vector.h"


using namespace OCNaroWrappers;

OCGraphic3d_VertexNT::OCGraphic3d_VertexNT(Graphic3d_VertexNT* nativeHandle) : OCGraphic3d_VertexN((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCGraphic3d_VertexNT::OCGraphic3d_VertexNT() : OCGraphic3d_VertexN((OCDummy^)nullptr)

{
  nativeHandle = new Graphic3d_VertexNT();
}

OCGraphic3d_VertexNT::OCGraphic3d_VertexNT(Standard_Real AX, Standard_Real AY, Standard_Real AZ, Standard_Real ANX, Standard_Real ANY, Standard_Real ANZ, Standard_Real ATX, Standard_Real ATY, System::Boolean FlagNormalise) : OCGraphic3d_VertexN((OCDummy^)nullptr)

{
  nativeHandle = new Graphic3d_VertexNT(AX, AY, AZ, ANX, ANY, ANZ, ATX, ATY, OCConverter::BooleanToStandardBoolean(FlagNormalise));
}

OCGraphic3d_VertexNT::OCGraphic3d_VertexNT(OCNaroWrappers::OCGraphic3d_Vertex^ APoint, OCNaroWrappers::OCGraphic3d_Vector^ AVector, Standard_Real ATX, Standard_Real ATY, System::Boolean FlagNormalise) : OCGraphic3d_VertexN((OCDummy^)nullptr)

{
  nativeHandle = new Graphic3d_VertexNT(*((Graphic3d_Vertex*)APoint->Handle), *((Graphic3d_Vector*)AVector->Handle), ATX, ATY, OCConverter::BooleanToStandardBoolean(FlagNormalise));
}

 void OCGraphic3d_VertexNT::SetTextureCoordinate(Standard_Real ATX, Standard_Real ATY)
{
  ((Graphic3d_VertexNT*)nativeHandle)->SetTextureCoordinate(ATX, ATY);
}

 void OCGraphic3d_VertexNT::TextureCoordinate(Standard_Real& ATX, Standard_Real& ATY)
{
  ((Graphic3d_VertexNT*)nativeHandle)->TextureCoordinate(ATX, ATY);
}


