// File generated by CPPExt (Transient)
//
#ifndef _Graphic3d_ArrayOfTriangles_OCWrappers_HeaderFile
#define _Graphic3d_ArrayOfTriangles_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic3d_ArrayOfTriangles.hxx>
#include "../Converter.h"

#include "Graphic3d_ArrayOfPrimitives.h"



namespace OCNaroWrappers
{




public ref class OCGraphic3d_ArrayOfTriangles : OCGraphic3d_ArrayOfPrimitives {

protected:
  // dummy constructor;
  OCGraphic3d_ArrayOfTriangles(OCDummy^) : OCGraphic3d_ArrayOfPrimitives((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic3d_ArrayOfTriangles(Handle(Graphic3d_ArrayOfTriangles)* nativeHandle);

// Methods PUBLIC

//! Creates an array of triangles, <br>
//! a triangle can be filled as: <br>
//! 1) creating a set of triangles defined with his vertexs. <br>
//!    i.e: <br>
//!    myArray = Graphic3d_ArrayOfTriangles(6) <br>
//!    myArray->AddVertex(x1,y1,z1) <br>
//!      .... <br>
//!    myArray->AddVertex(x6,y6,z6) <br>
//! 3) creating a set of indexed triangles defined with his vertex <br>
//!    ans edges. <br>
//!    i.e: <br>
//!    myArray = Graphic3d_ArrayOfTriangles(4,6) <br>
//!    myArray->AddVertex(x1,y1,z1) <br>
//!      .... <br>
//!    myArray->AddVertex(x4,y4,z4) <br>
//!    myArray->AddEdge(1) <br>
//!    myArray->AddEdge(2) <br>
//!    myArray->AddEdge(3) <br>
//!    myArray->AddEdge(2) <br>
//!    myArray->AddEdge(3) <br>
//!    myArray->AddEdge(4) <br>
OCGraphic3d_ArrayOfTriangles(Standard_Integer maxVertexs, Standard_Integer maxEdges, System::Boolean hasVNormals, System::Boolean hasVColors, System::Boolean hasTexels, System::Boolean hasEdgeInfos);

~OCGraphic3d_ArrayOfTriangles()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
