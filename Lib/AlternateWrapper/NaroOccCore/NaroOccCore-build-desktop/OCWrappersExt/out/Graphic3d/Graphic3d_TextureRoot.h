// File generated by CPPExt (Transient)
//
#ifndef _Graphic3d_TextureRoot_OCWrappers_HeaderFile
#define _Graphic3d_TextureRoot_OCWrappers_HeaderFile

// include the wrapped class
#include <Graphic3d_TextureRoot.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../OSD/OSD_Path.h"
#include "Graphic3d_TypeOfTexture.h"


namespace OCNaroWrappers
{

ref class OCGraphic3d_GraphicDriver;
ref class OCAlienImage_AlienImage;
ref class OCTColStd_HArray1OfReal;
ref class OCGraphic3d_StructureManager;
ref class OCOSD_Path;


//! This is the texture root class enable the dialog with the GraphicDriver <br>
//! allows the loading of texture too supported formats: <br>
//! X, SunRaster, Aida, Euclid, SGI rgb <br>
public ref class OCGraphic3d_TextureRoot : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCGraphic3d_TextureRoot(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCGraphic3d_TextureRoot(Handle(Graphic3d_TextureRoot)* nativeHandle);

// Methods PUBLIC

//! Creates a texture from a file <br>
//!  Warning: Note that if <FileName> is NULL the texture must be realized <br>
//! using LoadTexture(image) method. <br>
OCGraphic3d_TextureRoot(OCNaroWrappers::OCGraphic3d_StructureManager^ SM, System::String^ Path, System::String^ FileName, OCGraphic3d_TypeOfTexture Type);

//! Checks if a texture class is valide or not <br>
//! returns true if the construction of the class is correct <br>
 /*instead*/  System::Boolean IsDone() ;


//! Returns the full path of the defined texture. <br>
 /*instead*/  OCOSD_Path^ Path() ;


//! Returns the texture type. <br>
 /*instead*/  OCGraphic3d_TypeOfTexture Type() ;


//! Updates the current texture from a requested alien image. <br>
 /*instead*/  void LoadTexture(OCNaroWrappers::OCAlienImage_AlienImage^ anImage) ;


//! returns the Texture ID which references the <br>
//! texture to use for drawing. Used by the <br>
//! graphic driver. <br>
 /*instead*/  Standard_Integer TextureId() ;


//! Returns the created image texture. <br>
 /*instead*/  OCAlienImage_AlienImage^ Image() ;


 /*instead*/  OCTColStd_HArray1OfReal^ GetTexUpperBounds() ;

~OCGraphic3d_TextureRoot()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
