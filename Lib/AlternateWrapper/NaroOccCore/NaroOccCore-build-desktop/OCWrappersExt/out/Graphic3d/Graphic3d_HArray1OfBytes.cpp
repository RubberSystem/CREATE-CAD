// File generated by CPPExt (CPP file)
//

#include "Graphic3d_HArray1OfBytes.h"
#include "../Converter.h"
#include "Graphic3d_Array1OfBytes.h"


using namespace OCNaroWrappers;

OCGraphic3d_HArray1OfBytes::OCGraphic3d_HArray1OfBytes(Handle(Graphic3d_HArray1OfBytes)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Graphic3d_HArray1OfBytes(*nativeHandle);
}

OCGraphic3d_HArray1OfBytes::OCGraphic3d_HArray1OfBytes(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Graphic3d_HArray1OfBytes(new Graphic3d_HArray1OfBytes(Low, Up));
}

OCGraphic3d_HArray1OfBytes::OCGraphic3d_HArray1OfBytes(Standard_Integer Low, Standard_Integer Up, Standard_Byte V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Graphic3d_HArray1OfBytes(new Graphic3d_HArray1OfBytes(Low, Up, V));
}

 void OCGraphic3d_HArray1OfBytes::Init(Standard_Byte V)
{
  (*((Handle_Graphic3d_HArray1OfBytes*)nativeHandle))->Init(V);
}

 Standard_Integer OCGraphic3d_HArray1OfBytes::Length()
{
  return (*((Handle_Graphic3d_HArray1OfBytes*)nativeHandle))->Length();
}

 Standard_Integer OCGraphic3d_HArray1OfBytes::Lower()
{
  return (*((Handle_Graphic3d_HArray1OfBytes*)nativeHandle))->Lower();
}

 Standard_Integer OCGraphic3d_HArray1OfBytes::Upper()
{
  return (*((Handle_Graphic3d_HArray1OfBytes*)nativeHandle))->Upper();
}

 void OCGraphic3d_HArray1OfBytes::SetValue(Standard_Integer Index, Standard_Byte Value)
{
  (*((Handle_Graphic3d_HArray1OfBytes*)nativeHandle))->SetValue(Index, Value);
}

 Standard_Byte OCGraphic3d_HArray1OfBytes::Value(Standard_Integer Index)
{
  return (*((Handle_Graphic3d_HArray1OfBytes*)nativeHandle))->Value(Index);
}

 Standard_Byte OCGraphic3d_HArray1OfBytes::ChangeValue(Standard_Integer Index)
{
  return (*((Handle_Graphic3d_HArray1OfBytes*)nativeHandle))->ChangeValue(Index);
}

OCGraphic3d_Array1OfBytes^ OCGraphic3d_HArray1OfBytes::Array1()
{
  Graphic3d_Array1OfBytes* tmp = new Graphic3d_Array1OfBytes(0, 0);
  *tmp = (*((Handle_Graphic3d_HArray1OfBytes*)nativeHandle))->Array1();
  return gcnew OCGraphic3d_Array1OfBytes(tmp);
}

OCGraphic3d_Array1OfBytes^ OCGraphic3d_HArray1OfBytes::ChangeArray1()
{
  Graphic3d_Array1OfBytes* tmp = new Graphic3d_Array1OfBytes(0, 0);
  *tmp = (*((Handle_Graphic3d_HArray1OfBytes*)nativeHandle))->ChangeArray1();
  return gcnew OCGraphic3d_Array1OfBytes(tmp);
}


