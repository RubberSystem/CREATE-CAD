// File generated by CPPExt (CPP file)
//

#include "Graphic3d_ArrayOfPrimitives.h"
#include "../Converter.h"
#include "Graphic3d_Group.h"
#include "../gp/gp_Pnt.h"
#include "../Quantity/Quantity_Color.h"
#include "../gp/gp_Dir.h"
#include "../gp/gp_Pnt2d.h"


using namespace OCNaroWrappers;

OCGraphic3d_ArrayOfPrimitives::OCGraphic3d_ArrayOfPrimitives(Handle(Graphic3d_ArrayOfPrimitives)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Graphic3d_ArrayOfPrimitives(*nativeHandle);
}

OCGraphic3d_ArrayOfPrimitives::OCGraphic3d_ArrayOfPrimitives(OCGraphic3d_TypeOfPrimitiveArray aType, Standard_Integer maxVertexs, Standard_Integer maxBounds, Standard_Integer maxEdges, System::Boolean hasVNormals, System::Boolean hasVColors, System::Boolean hasBColors, System::Boolean hasTexels, System::Boolean hasEdgeInfos) : OCMMgt_TShared((OCDummy^)nullptr)

{}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(OCNaroWrappers::OCgp_Pnt^ aVertice)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(*((gp_Pnt*)aVertice->Handle));
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(Standard_Real X, Standard_Real Y, Standard_Real Z)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(X, Y, Z);
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(OCNaroWrappers::OCgp_Pnt^ aVertice, OCNaroWrappers::OCQuantity_Color^ aColor)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(*((gp_Pnt*)aVertice->Handle), *((Quantity_Color*)aColor->Handle));
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(OCNaroWrappers::OCgp_Pnt^ aVertice, Standard_Integer aColor)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(*((gp_Pnt*)aVertice->Handle), aColor);
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(OCNaroWrappers::OCgp_Pnt^ aVertice, OCNaroWrappers::OCgp_Dir^ aNormal)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(*((gp_Pnt*)aVertice->Handle), *((gp_Dir*)aNormal->Handle));
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(Standard_Real X, Standard_Real Y, Standard_Real Z, Standard_Real NX, Standard_Real NY, Standard_Real NZ)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(X, Y, Z, NX, NY, NZ);
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(OCNaroWrappers::OCgp_Pnt^ aVertice, OCNaroWrappers::OCgp_Dir^ aNormal, OCNaroWrappers::OCQuantity_Color^ aColor)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(*((gp_Pnt*)aVertice->Handle), *((gp_Dir*)aNormal->Handle), *((Quantity_Color*)aColor->Handle));
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(OCNaroWrappers::OCgp_Pnt^ aVertice, OCNaroWrappers::OCgp_Dir^ aNormal, Standard_Integer aColor)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(*((gp_Pnt*)aVertice->Handle), *((gp_Dir*)aNormal->Handle), aColor);
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(OCNaroWrappers::OCgp_Pnt^ aVertice, OCNaroWrappers::OCgp_Pnt2d^ aTexel)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(*((gp_Pnt*)aVertice->Handle), *((gp_Pnt2d*)aTexel->Handle));
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(Standard_Real X, Standard_Real Y, Standard_Real Z, Standard_Real TX, Standard_Real TY)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(X, Y, Z, TX, TY);
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(OCNaroWrappers::OCgp_Pnt^ aVertice, OCNaroWrappers::OCgp_Dir^ aNormal, OCNaroWrappers::OCgp_Pnt2d^ aTexel)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(*((gp_Pnt*)aVertice->Handle), *((gp_Dir*)aNormal->Handle), *((gp_Pnt2d*)aTexel->Handle));
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddVertex(Standard_Real X, Standard_Real Y, Standard_Real Z, Standard_Real NX, Standard_Real NY, Standard_Real NZ, Standard_Real TX, Standard_Real TY)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddVertex(X, Y, Z, NX, NY, NZ, TX, TY);
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddBound(Standard_Integer edgeNumber)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddBound(edgeNumber);
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddBound(Standard_Integer edgeNumber, OCNaroWrappers::OCQuantity_Color^ aBColor)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddBound(edgeNumber, *((Quantity_Color*)aBColor->Handle));
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddBound(Standard_Integer edgeNumber, Standard_Real R, Standard_Real G, Standard_Real B)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddBound(edgeNumber, R, G, B);
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::AddEdge(Standard_Integer vertexIndex, System::Boolean isVisible)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->AddEdge(vertexIndex, OCConverter::BooleanToStandardBoolean(isVisible));
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::Orientate(OCNaroWrappers::OCgp_Dir^ aNormal)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->Orientate(*((gp_Dir*)aNormal->Handle)));
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::Orientate(Standard_Integer aBoundIndex, OCNaroWrappers::OCgp_Dir^ aNormal)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->Orientate(aBoundIndex, *((gp_Dir*)aNormal->Handle)));
}

 void OCGraphic3d_ArrayOfPrimitives::SetVertice(Standard_Integer anIndex, OCNaroWrappers::OCgp_Pnt^ aVertice)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetVertice(anIndex, *((gp_Pnt*)aVertice->Handle));
}

 void OCGraphic3d_ArrayOfPrimitives::SetVertice(Standard_Integer anIndex, Standard_Real X, Standard_Real Y, Standard_Real Z)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetVertice(anIndex, X, Y, Z);
}

 void OCGraphic3d_ArrayOfPrimitives::SetVertexColor(Standard_Integer anIndex, OCNaroWrappers::OCQuantity_Color^ aColor)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetVertexColor(anIndex, *((Quantity_Color*)aColor->Handle));
}

 void OCGraphic3d_ArrayOfPrimitives::SetVertexColor(Standard_Integer anIndex, Standard_Real R, Standard_Real G, Standard_Real B)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetVertexColor(anIndex, R, G, B);
}

 void OCGraphic3d_ArrayOfPrimitives::SetVertexColor(Standard_Integer anIndex, Standard_Integer aColor)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetVertexColor(anIndex, aColor);
}

 void OCGraphic3d_ArrayOfPrimitives::SetVertexNormal(Standard_Integer anIndex, OCNaroWrappers::OCgp_Dir^ aNormal)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetVertexNormal(anIndex, *((gp_Dir*)aNormal->Handle));
}

 void OCGraphic3d_ArrayOfPrimitives::SetVertexNormal(Standard_Integer anIndex, Standard_Real NX, Standard_Real NY, Standard_Real NZ)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetVertexNormal(anIndex, NX, NY, NZ);
}

 void OCGraphic3d_ArrayOfPrimitives::SetVertexTexel(Standard_Integer anIndex, OCNaroWrappers::OCgp_Pnt2d^ aTexel)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetVertexTexel(anIndex, *((gp_Pnt2d*)aTexel->Handle));
}

 void OCGraphic3d_ArrayOfPrimitives::SetVertexTexel(Standard_Integer anIndex, Standard_Real TX, Standard_Real TY)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetVertexTexel(anIndex, TX, TY);
}

 void OCGraphic3d_ArrayOfPrimitives::SetBoundColor(Standard_Integer anIndex, OCNaroWrappers::OCQuantity_Color^ aColor)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetBoundColor(anIndex, *((Quantity_Color*)aColor->Handle));
}

 void OCGraphic3d_ArrayOfPrimitives::SetBoundColor(Standard_Integer anIndex, Standard_Real R, Standard_Real G, Standard_Real B)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->SetBoundColor(anIndex, R, G, B);
}

 Graphic3d_PrimitiveArray OCGraphic3d_ArrayOfPrimitives::Array()
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->Array();
}

 OCGraphic3d_TypeOfPrimitiveArray OCGraphic3d_ArrayOfPrimitives::Type()
{
  return (OCGraphic3d_TypeOfPrimitiveArray)((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->Type());
}

 System::String^ OCGraphic3d_ArrayOfPrimitives::StringType()
{
  return OCConverter::StandardCStringToString((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->StringType());
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::HasVertexNormals()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->HasVertexNormals());
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::HasVertexColors()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->HasVertexColors());
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::HasVertexTexels()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->HasVertexTexels());
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::VertexNumber()
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->VertexNumber();
}

OCgp_Pnt^ OCGraphic3d_ArrayOfPrimitives::Vertice(Standard_Integer aRank)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->Vertice(aRank);
  return gcnew OCgp_Pnt(tmp);
}

 void OCGraphic3d_ArrayOfPrimitives::Vertice(Standard_Integer aRank, Standard_Real& X, Standard_Real& Y, Standard_Real& Z)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->Vertice(aRank, X, Y, Z);
}

OCQuantity_Color^ OCGraphic3d_ArrayOfPrimitives::VertexColor(Standard_Integer aRank)
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->VertexColor(aRank);
  return gcnew OCQuantity_Color(tmp);
}

 void OCGraphic3d_ArrayOfPrimitives::VertexColor(Standard_Integer aRank, Standard_Real& R, Standard_Real& G, Standard_Real& B)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->VertexColor(aRank, R, G, B);
}

 void OCGraphic3d_ArrayOfPrimitives::VertexColor(Standard_Integer aRank, Standard_Integer& aColor)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->VertexColor(aRank, aColor);
}

OCgp_Dir^ OCGraphic3d_ArrayOfPrimitives::VertexNormal(Standard_Integer aRank)
{
  gp_Dir* tmp = new gp_Dir();
  *tmp = (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->VertexNormal(aRank);
  return gcnew OCgp_Dir(tmp);
}

 void OCGraphic3d_ArrayOfPrimitives::VertexNormal(Standard_Integer aRank, Standard_Real& NX, Standard_Real& NY, Standard_Real& NZ)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->VertexNormal(aRank, NX, NY, NZ);
}

OCgp_Pnt2d^ OCGraphic3d_ArrayOfPrimitives::VertexTexel(Standard_Integer aRank)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->VertexTexel(aRank);
  return gcnew OCgp_Pnt2d(tmp);
}

 void OCGraphic3d_ArrayOfPrimitives::VertexTexel(Standard_Integer aRank, Standard_Real& TX, Standard_Real& TY)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->VertexTexel(aRank, TX, TY);
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::HasEdgeInfos()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->HasEdgeInfos());
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::EdgeNumber()
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->EdgeNumber();
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::Edge(Standard_Integer aRank)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->Edge(aRank);
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::EdgeIsVisible(Standard_Integer aRank)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->EdgeIsVisible(aRank));
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::HasBoundColors()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->HasBoundColors());
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::BoundNumber()
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->BoundNumber();
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::Bound(Standard_Integer aRank)
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->Bound(aRank);
}

OCQuantity_Color^ OCGraphic3d_ArrayOfPrimitives::BoundColor(Standard_Integer aRank)
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->BoundColor(aRank);
  return gcnew OCQuantity_Color(tmp);
}

 void OCGraphic3d_ArrayOfPrimitives::BoundColor(Standard_Integer aRank, Standard_Real& R, Standard_Real& G, Standard_Real& B)
{
  (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->BoundColor(aRank, R, G, B);
}

 Standard_Integer OCGraphic3d_ArrayOfPrimitives::ItemNumber()
{
  return (*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->ItemNumber();
}

 void OCGraphic3d_ArrayOfPrimitives::Enable()
{
  Graphic3d_ArrayOfPrimitives::Enable();
}

 void OCGraphic3d_ArrayOfPrimitives::Disable()
{
  Graphic3d_ArrayOfPrimitives::Disable();
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::IsEnable()
{
  return OCConverter::StandardBooleanToBoolean(Graphic3d_ArrayOfPrimitives::IsEnable());
}

 System::Boolean OCGraphic3d_ArrayOfPrimitives::IsValid()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Graphic3d_ArrayOfPrimitives*)nativeHandle))->IsValid());
}


