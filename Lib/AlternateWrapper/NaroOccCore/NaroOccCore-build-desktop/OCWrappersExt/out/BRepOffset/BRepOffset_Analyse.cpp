// File generated by CPPExt (CPP file)
//

#include "BRepOffset_Analyse.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "BRepOffset_ListOfInterval.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopoDS/TopoDS_Compound.h"
#include "../TopTools/TopTools_MapOfShape.h"


using namespace OCNaroWrappers;

OCBRepOffset_Analyse::OCBRepOffset_Analyse(BRepOffset_Analyse* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepOffset_Analyse::OCBRepOffset_Analyse() 
{
  nativeHandle = new BRepOffset_Analyse();
}

OCBRepOffset_Analyse::OCBRepOffset_Analyse(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Real Angle) 
{
  nativeHandle = new BRepOffset_Analyse(*((TopoDS_Shape*)S->Handle), Angle);
}

 void OCBRepOffset_Analyse::Perform(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Real Angle)
{
  ((BRepOffset_Analyse*)nativeHandle)->Perform(*((TopoDS_Shape*)S->Handle), Angle);
}

 System::Boolean OCBRepOffset_Analyse::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffset_Analyse*)nativeHandle)->IsDone());
}

 void OCBRepOffset_Analyse::Clear()
{
  ((BRepOffset_Analyse*)nativeHandle)->Clear();
}

OCBRepOffset_ListOfInterval^ OCBRepOffset_Analyse::Type(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  BRepOffset_ListOfInterval* tmp = new BRepOffset_ListOfInterval();
  *tmp = ((BRepOffset_Analyse*)nativeHandle)->Type(*((TopoDS_Edge*)E->Handle));
  return gcnew OCBRepOffset_ListOfInterval(tmp);
}

 void OCBRepOffset_Analyse::Edges(OCNaroWrappers::OCTopoDS_Vertex^ V, OCBRepOffset_Type T, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((BRepOffset_Analyse*)nativeHandle)->Edges(*((TopoDS_Vertex*)V->Handle), (BRepOffset_Type)T, *((TopTools_ListOfShape*)L->Handle));
}

 void OCBRepOffset_Analyse::Edges(OCNaroWrappers::OCTopoDS_Face^ F, OCBRepOffset_Type T, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((BRepOffset_Analyse*)nativeHandle)->Edges(*((TopoDS_Face*)F->Handle), (BRepOffset_Type)T, *((TopTools_ListOfShape*)L->Handle));
}

 void OCBRepOffset_Analyse::TangentEdges(OCNaroWrappers::OCTopoDS_Edge^ Edge, OCNaroWrappers::OCTopoDS_Vertex^ Vertex, OCNaroWrappers::OCTopTools_ListOfShape^ Edges)
{
  ((BRepOffset_Analyse*)nativeHandle)->TangentEdges(*((TopoDS_Edge*)Edge->Handle), *((TopoDS_Vertex*)Vertex->Handle), *((TopTools_ListOfShape*)Edges->Handle));
}

 System::Boolean OCBRepOffset_Analyse::HasAncestor(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffset_Analyse*)nativeHandle)->HasAncestor(*((TopoDS_Shape*)S->Handle)));
}

OCTopTools_ListOfShape^ OCBRepOffset_Analyse::Ancestors(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((BRepOffset_Analyse*)nativeHandle)->Ancestors(*((TopoDS_Shape*)S->Handle));
  return gcnew OCTopTools_ListOfShape(tmp);
}

 void OCBRepOffset_Analyse::Explode(OCNaroWrappers::OCTopTools_ListOfShape^ L, OCBRepOffset_Type Type)
{
  ((BRepOffset_Analyse*)nativeHandle)->Explode(*((TopTools_ListOfShape*)L->Handle), (BRepOffset_Type)Type);
}

 void OCBRepOffset_Analyse::Explode(OCNaroWrappers::OCTopTools_ListOfShape^ L, OCBRepOffset_Type Type1, OCBRepOffset_Type Type2)
{
  ((BRepOffset_Analyse*)nativeHandle)->Explode(*((TopTools_ListOfShape*)L->Handle), (BRepOffset_Type)Type1, (BRepOffset_Type)Type2);
}

 void OCBRepOffset_Analyse::AddFaces(OCNaroWrappers::OCTopoDS_Face^ Face, OCNaroWrappers::OCTopoDS_Compound^ Co, OCNaroWrappers::OCTopTools_MapOfShape^ Map, OCBRepOffset_Type Type)
{
  ((BRepOffset_Analyse*)nativeHandle)->AddFaces(*((TopoDS_Face*)Face->Handle), *((TopoDS_Compound*)Co->Handle), *((TopTools_MapOfShape*)Map->Handle), (BRepOffset_Type)Type);
}

 void OCBRepOffset_Analyse::AddFaces(OCNaroWrappers::OCTopoDS_Face^ Face, OCNaroWrappers::OCTopoDS_Compound^ Co, OCNaroWrappers::OCTopTools_MapOfShape^ Map, OCBRepOffset_Type Type1, OCBRepOffset_Type Type2)
{
  ((BRepOffset_Analyse*)nativeHandle)->AddFaces(*((TopoDS_Face*)Face->Handle), *((TopoDS_Compound*)Co->Handle), *((TopTools_MapOfShape*)Map->Handle), (BRepOffset_Type)Type1, (BRepOffset_Type)Type2);
}


