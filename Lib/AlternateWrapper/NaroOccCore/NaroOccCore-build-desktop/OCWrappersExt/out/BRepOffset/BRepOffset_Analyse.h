// File generated by CPPExt (MPV)
//
#ifndef _BRepOffset_Analyse_OCWrappers_HeaderFile
#define _BRepOffset_Analyse_OCWrappers_HeaderFile

// include native header
#include <BRepOffset_Analyse.hxx>
#include "../Converter.h"


#include "../TopoDS/TopoDS_Shape.h"
#include "BRepOffset_DataMapOfShapeListOfInterval.h"
#include "../TopTools/TopTools_IndexedDataMapOfShapeListOfShape.h"
#include "BRepOffset_Type.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCBRepOffset_ListOfInterval;
ref class OCTopoDS_Edge;
ref class OCTopoDS_Vertex;
ref class OCTopTools_ListOfShape;
ref class OCTopoDS_Face;
ref class OCTopoDS_Compound;
ref class OCTopTools_MapOfShape;


//! Analyse of a shape consit to <br>
//!          Find the part of edges convex concave tangent. <br>
public ref class OCBRepOffset_Analyse  {

protected:
  BRepOffset_Analyse* nativeHandle;
  OCBRepOffset_Analyse(OCDummy^) {};

public:
  property BRepOffset_Analyse* Handle
  {
    BRepOffset_Analyse* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepOffset_Analyse(BRepOffset_Analyse* nativeHandle);

// Methods PUBLIC


OCBRepOffset_Analyse();


OCBRepOffset_Analyse(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Real Angle);


 /*instead*/  void Perform(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Real Angle) ;


 /*instead*/  System::Boolean IsDone() ;


 /*instead*/  void Clear() ;


 /*instead*/  OCBRepOffset_ListOfInterval^ Type(OCNaroWrappers::OCTopoDS_Edge^ E) ;

//! Stores in <L> all the edges of Type <T> <br>
//!          on the vertex <V>. <br>
 /*instead*/  void Edges(OCNaroWrappers::OCTopoDS_Vertex^ V, OCBRepOffset_Type T, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;

//! Stores in <L> all the edges of Type <T> <br>
//!          on the face <F>. <br>
 /*instead*/  void Edges(OCNaroWrappers::OCTopoDS_Face^ F, OCBRepOffset_Type T, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;

//! set in <Edges> all  the Edges of <Shape> which are <br>
//!          tangent to <Edge> at the vertex <Vertex>. <br>
 /*instead*/  void TangentEdges(OCNaroWrappers::OCTopoDS_Edge^ Edge, OCNaroWrappers::OCTopoDS_Vertex^ Vertex, OCNaroWrappers::OCTopTools_ListOfShape^ Edges) ;


 /*instead*/  System::Boolean HasAncestor(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  OCTopTools_ListOfShape^ Ancestors(OCNaroWrappers::OCTopoDS_Shape^ S) ;

//! Explode in compounds of faces where <br>
//!          all the connex edges are of type <Side> <br>
 /*instead*/  void Explode(OCNaroWrappers::OCTopTools_ListOfShape^ L, OCBRepOffset_Type Type) ;

//! Explode in compounds of faces where <br>
//!          all the connex edges are of type <Side1> or <Side2> <br>
 /*instead*/  void Explode(OCNaroWrappers::OCTopTools_ListOfShape^ L, OCBRepOffset_Type Type1, OCBRepOffset_Type Type2) ;

//! Add in <CO> the faces of the shell containing <Face> <br>
//!          where all the connex edges are of type <Side>. <br>
 /*instead*/  void AddFaces(OCNaroWrappers::OCTopoDS_Face^ Face, OCNaroWrappers::OCTopoDS_Compound^ Co, OCNaroWrappers::OCTopTools_MapOfShape^ Map, OCBRepOffset_Type Type) ;

//! Add in <CO> the faces of the shell containing <Face> <br>
//!          where all the connex edges are of type <Side1> or <Side2>. <br>
 /*instead*/  void AddFaces(OCNaroWrappers::OCTopoDS_Face^ Face, OCNaroWrappers::OCTopoDS_Compound^ Co, OCNaroWrappers::OCTopTools_MapOfShape^ Map, OCBRepOffset_Type Type1, OCBRepOffset_Type Type2) ;

~OCBRepOffset_Analyse()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
