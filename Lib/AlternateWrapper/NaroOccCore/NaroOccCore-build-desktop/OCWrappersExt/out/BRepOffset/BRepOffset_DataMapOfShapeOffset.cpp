// File generated by CPPExt (CPP file)
//

#include "BRepOffset_DataMapOfShapeOffset.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "BRepOffset_Offset.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "BRepOffset_DataMapNodeOfDataMapOfShapeOffset.h"
#include "BRepOffset_DataMapIteratorOfDataMapOfShapeOffset.h"


using namespace OCNaroWrappers;

OCBRepOffset_DataMapOfShapeOffset::OCBRepOffset_DataMapOfShapeOffset(BRepOffset_DataMapOfShapeOffset* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepOffset_DataMapOfShapeOffset::OCBRepOffset_DataMapOfShapeOffset(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BRepOffset_DataMapOfShapeOffset(NbBuckets);
}

OCBRepOffset_DataMapOfShapeOffset^ OCBRepOffset_DataMapOfShapeOffset::Assign(OCNaroWrappers::OCBRepOffset_DataMapOfShapeOffset^ Other)
{
  BRepOffset_DataMapOfShapeOffset* tmp = new BRepOffset_DataMapOfShapeOffset(0);
  *tmp = ((BRepOffset_DataMapOfShapeOffset*)nativeHandle)->Assign(*((BRepOffset_DataMapOfShapeOffset*)Other->Handle));
  return gcnew OCBRepOffset_DataMapOfShapeOffset(tmp);
}

 void OCBRepOffset_DataMapOfShapeOffset::ReSize(Standard_Integer NbBuckets)
{
  ((BRepOffset_DataMapOfShapeOffset*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCBRepOffset_DataMapOfShapeOffset::Bind(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCBRepOffset_Offset^ I)
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffset_DataMapOfShapeOffset*)nativeHandle)->Bind(*((TopoDS_Shape*)K->Handle), *((BRepOffset_Offset*)I->Handle)));
}

 System::Boolean OCBRepOffset_DataMapOfShapeOffset::IsBound(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffset_DataMapOfShapeOffset*)nativeHandle)->IsBound(*((TopoDS_Shape*)K->Handle)));
}

 System::Boolean OCBRepOffset_DataMapOfShapeOffset::UnBind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepOffset_DataMapOfShapeOffset*)nativeHandle)->UnBind(*((TopoDS_Shape*)K->Handle)));
}

OCBRepOffset_Offset^ OCBRepOffset_DataMapOfShapeOffset::Find(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BRepOffset_Offset* tmp = new BRepOffset_Offset();
  *tmp = ((BRepOffset_DataMapOfShapeOffset*)nativeHandle)->Find(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBRepOffset_Offset(tmp);
}

OCBRepOffset_Offset^ OCBRepOffset_DataMapOfShapeOffset::ChangeFind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BRepOffset_Offset* tmp = new BRepOffset_Offset();
  *tmp = ((BRepOffset_DataMapOfShapeOffset*)nativeHandle)->ChangeFind(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBRepOffset_Offset(tmp);
}

 Standard_Address OCBRepOffset_DataMapOfShapeOffset::Find1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepOffset_DataMapOfShapeOffset*)nativeHandle)->Find1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCBRepOffset_DataMapOfShapeOffset::ChangeFind1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepOffset_DataMapOfShapeOffset*)nativeHandle)->ChangeFind1(*((TopoDS_Shape*)K->Handle));
}


