// File generated by CPPExt (MPV)
//
#ifndef _BRepOffset_Offset_OCWrappers_HeaderFile
#define _BRepOffset_Offset_OCWrappers_HeaderFile

// include native header
#include <BRepOffset_Offset.hxx>
#include "../Converter.h"


#include "../TopoDS/TopoDS_Shape.h"
#include "BRepOffset_Status.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopTools/TopTools_DataMapOfShapeShape.h"
#include "../GeomAbs/GeomAbs_JoinType.h"
#include "../GeomAbs/GeomAbs_Shape.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Face;
ref class OCTopTools_DataMapOfShapeShape;
ref class OCTopoDS_Edge;
ref class OCTopoDS_Vertex;
ref class OCTopTools_ListOfShape;
ref class OCTopoDS_Shape;


//! class for the creation of Offseting. <br>
public ref class OCBRepOffset_Offset  {

protected:
  BRepOffset_Offset* nativeHandle;
  OCBRepOffset_Offset(OCDummy^) {};

public:
  property BRepOffset_Offset* Handle
  {
    BRepOffset_Offset* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepOffset_Offset(BRepOffset_Offset* nativeHandle);

// Methods PUBLIC


OCBRepOffset_Offset();


OCBRepOffset_Offset(OCNaroWrappers::OCTopoDS_Face^ Face, Standard_Real Offset, System::Boolean OffsetOutside, OCGeomAbs_JoinType JoinType);

//! This method will be  called when you want to share <br>
//!          the  edges  soon generated  from  an other  face. <br>
//!          e.g. when two faces are  tangents the common  edge <br>
//!          will generate only one edge ( no pipe). <br>
//! <br>
//!          The Map  will be fill  as  follow: <br>
//! <br>
//!          Created(E) = E' <br>
//!          with: E  = an edge of <Face> <br>
//!                E' = the image of E in the offseting  of <br>
//!                     another  face  sharing E  with a <br>
//!                     continuity at least G1 <br>
//! <br>
OCBRepOffset_Offset(OCNaroWrappers::OCTopoDS_Face^ Face, Standard_Real Offset, OCNaroWrappers::OCTopTools_DataMapOfShapeShape^ Created, System::Boolean OffsetOutside, OCGeomAbs_JoinType JoinType);


OCBRepOffset_Offset(OCNaroWrappers::OCTopoDS_Edge^ Path, OCNaroWrappers::OCTopoDS_Edge^ Edge1, OCNaroWrappers::OCTopoDS_Edge^ Edge2, Standard_Real Offset, System::Boolean Polynomial, Standard_Real Tol, OCGeomAbs_Shape Conti);


OCBRepOffset_Offset(OCNaroWrappers::OCTopoDS_Edge^ Path, OCNaroWrappers::OCTopoDS_Edge^ Edge1, OCNaroWrappers::OCTopoDS_Edge^ Edge2, Standard_Real Offset, OCNaroWrappers::OCTopoDS_Edge^ FirstEdge, OCNaroWrappers::OCTopoDS_Edge^ LastEdge, System::Boolean Polynomial, Standard_Real Tol, OCGeomAbs_Shape Conti);

//! Tol and Conti are only used if Polynomial is True <br>
//!          (Used to perfrom the approximation) <br>
OCBRepOffset_Offset(OCNaroWrappers::OCTopoDS_Vertex^ Vertex, OCNaroWrappers::OCTopTools_ListOfShape^ LEdge, Standard_Real Offset, System::Boolean Polynomial, Standard_Real Tol, OCGeomAbs_Shape Conti);


 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Face^ Face, Standard_Real Offset, System::Boolean OffsetOutside, OCGeomAbs_JoinType JoinType) ;


 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Face^ Face, Standard_Real Offset, OCNaroWrappers::OCTopTools_DataMapOfShapeShape^ Created, System::Boolean OffsetOutside, OCGeomAbs_JoinType JoinType) ;


 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Edge^ Path, OCNaroWrappers::OCTopoDS_Edge^ Edge1, OCNaroWrappers::OCTopoDS_Edge^ Edge2, Standard_Real Offset, System::Boolean Polynomial, Standard_Real Tol, OCGeomAbs_Shape Conti) ;


 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Edge^ Path, OCNaroWrappers::OCTopoDS_Edge^ Edge1, OCNaroWrappers::OCTopoDS_Edge^ Edge2, Standard_Real Offset, OCNaroWrappers::OCTopoDS_Edge^ FirstEdge, OCNaroWrappers::OCTopoDS_Edge^ LastEdge, System::Boolean Polynomial, Standard_Real Tol, OCGeomAbs_Shape Conti) ;

//! Tol and Conti are only used if Polynomial is True <br>
//!          (Used to perfrom the approximation) <br>
 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Vertex^ Vertex, OCNaroWrappers::OCTopTools_ListOfShape^ LEdge, Standard_Real Offset, System::Boolean Polynomial, Standard_Real Tol, OCGeomAbs_Shape Conti) ;

//! Only used in Rolling Ball. Pipe on Free Boundary <br>
 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Edge^ Edge, Standard_Real Offset) ;


 /*instead*/  OCTopoDS_Shape^ InitialShape() ;


 /*instead*/  OCTopoDS_Face^ Face() ;


 /*instead*/  OCTopoDS_Shape^ Generated(OCNaroWrappers::OCTopoDS_Shape^ Shape) ;


 /*instead*/  OCBRepOffset_Status Status() ;

~OCBRepOffset_Offset()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
