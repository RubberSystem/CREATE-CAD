// File generated by CPPExt (Transient)
//
#ifndef _Geom2d_Vector_OCWrappers_HeaderFile
#define _Geom2d_Vector_OCWrappers_HeaderFile

// include the wrapped class
#include <Geom2d_Vector.hxx>
#include "../Converter.h"

#include "Geom2d_Geometry.h"

#include "../gp/gp_Vec2d.h"


namespace OCNaroWrappers
{

ref class OCgp_Vec2d;


//!  The abstract class Vector describes the common <br>
//! behavior of vectors in 2D space. <br>
//! The Geom2d package provides two concrete <br>
//! classes of vectors: Geom2d_Direction (unit vector) <br>
//! and Geom2d_VectorWithMagnitude. <br>
public ref class OCGeom2d_Vector : OCGeom2d_Geometry {

protected:
  // dummy constructor;
  OCGeom2d_Vector(OCDummy^) : OCGeom2d_Geometry((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom2d_Vector(Handle(Geom2d_Vector)* nativeHandle);

// Methods PUBLIC

//! Reverses the vector <me>. <br>
 /*instead*/  void Reverse() ;

//! Returns a copy of <me> reversed. <br>
 /*instead*/  OCGeom2d_Vector^ Reversed() ;

//! Computes the angular value, in radians, between this <br>
//! vector and vector Other. The result is a value <br>
//! between -Pi and Pi. The orientation is from this <br>
//! vector to vector Other. <br>
//!    Raises VectorWithNullMagnitude if one of the two vectors is a vector with <br>
//!  null magnitude because the angular value is indefinite. <br>
 /*instead*/  Standard_Real Angle(OCNaroWrappers::OCGeom2d_Vector^ Other) ;

//! Returns the coordinates of <me>. <br>
 /*instead*/  void Coord(Standard_Real& X, Standard_Real& Y) ;

//! Returns the X coordinate of <me>. <br>
 /*instead*/  Standard_Real X() ;

//! Returns the Y coordinate of <me>. <br>
 /*instead*/  Standard_Real Y() ;

//! Returns the scalar product of 2 Vectors. <br>
 /*instead*/  Standard_Real Dot(OCNaroWrappers::OCGeom2d_Vector^ Other) ;

//! Returns a non persistent copy of <me>. <br>
 /*instead*/  OCgp_Vec2d^ Vec2d() ;

~OCGeom2d_Vector()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
