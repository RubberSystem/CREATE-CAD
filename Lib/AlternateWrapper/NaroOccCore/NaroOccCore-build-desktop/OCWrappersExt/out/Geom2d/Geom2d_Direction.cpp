// File generated by CPPExt (CPP file)
//

#include "Geom2d_Direction.h"
#include "../Converter.h"
#include "../gp/gp_Dir2d.h"
#include "Geom2d_Vector.h"
#include "../gp/gp_Trsf2d.h"
#include "Geom2d_Geometry.h"


using namespace OCNaroWrappers;

OCGeom2d_Direction::OCGeom2d_Direction(Handle(Geom2d_Direction)* nativeHandle) : OCGeom2d_Vector((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Geom2d_Direction(*nativeHandle);
}

OCGeom2d_Direction::OCGeom2d_Direction(Standard_Real X, Standard_Real Y) : OCGeom2d_Vector((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom2d_Direction(new Geom2d_Direction(X, Y));
}

OCGeom2d_Direction::OCGeom2d_Direction(OCNaroWrappers::OCgp_Dir2d^ V) : OCGeom2d_Vector((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom2d_Direction(new Geom2d_Direction(*((gp_Dir2d*)V->Handle)));
}

 void OCGeom2d_Direction::SetCoord(Standard_Real X, Standard_Real Y)
{
  (*((Handle_Geom2d_Direction*)nativeHandle))->SetCoord(X, Y);
}

 void OCGeom2d_Direction::SetDir2d(OCNaroWrappers::OCgp_Dir2d^ V)
{
  (*((Handle_Geom2d_Direction*)nativeHandle))->SetDir2d(*((gp_Dir2d*)V->Handle));
}

 void OCGeom2d_Direction::SetX(Standard_Real X)
{
  (*((Handle_Geom2d_Direction*)nativeHandle))->SetX(X);
}

 void OCGeom2d_Direction::SetY(Standard_Real Y)
{
  (*((Handle_Geom2d_Direction*)nativeHandle))->SetY(Y);
}

OCgp_Dir2d^ OCGeom2d_Direction::Dir2d()
{
  gp_Dir2d* tmp = new gp_Dir2d();
  *tmp = (*((Handle_Geom2d_Direction*)nativeHandle))->Dir2d();
  return gcnew OCgp_Dir2d(tmp);
}

 Standard_Real OCGeom2d_Direction::Magnitude()
{
  return (*((Handle_Geom2d_Direction*)nativeHandle))->Magnitude();
}

 Standard_Real OCGeom2d_Direction::SquareMagnitude()
{
  return (*((Handle_Geom2d_Direction*)nativeHandle))->SquareMagnitude();
}

 Standard_Real OCGeom2d_Direction::Crossed(OCNaroWrappers::OCGeom2d_Vector^ Other)
{
  return (*((Handle_Geom2d_Direction*)nativeHandle))->Crossed(*((Handle_Geom2d_Vector*)Other->Handle));
}

 void OCGeom2d_Direction::Transform(OCNaroWrappers::OCgp_Trsf2d^ T)
{
  (*((Handle_Geom2d_Direction*)nativeHandle))->Transform(*((gp_Trsf2d*)T->Handle));
}

OCGeom2d_Geometry^ OCGeom2d_Direction::Copy()
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Geom2d_Direction*)nativeHandle))->Copy();
  return gcnew OCGeom2d_Geometry(&tmp);
}


