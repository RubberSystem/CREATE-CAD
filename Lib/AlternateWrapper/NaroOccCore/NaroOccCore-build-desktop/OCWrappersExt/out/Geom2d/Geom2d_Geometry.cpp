// File generated by CPPExt (CPP file)
//

#include "Geom2d_Geometry.h"
#include "../Converter.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Ax2d.h"
#include "../gp/gp_Vec2d.h"
#include "../gp/gp_Trsf2d.h"


using namespace OCNaroWrappers;

OCGeom2d_Geometry::OCGeom2d_Geometry(Handle(Geom2d_Geometry)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Geom2d_Geometry(*nativeHandle);
}

 void OCGeom2d_Geometry::Mirror(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  (*((Handle_Geom2d_Geometry*)nativeHandle))->Mirror(*((gp_Pnt2d*)P->Handle));
}

 void OCGeom2d_Geometry::Mirror(OCNaroWrappers::OCgp_Ax2d^ A)
{
  (*((Handle_Geom2d_Geometry*)nativeHandle))->Mirror(*((gp_Ax2d*)A->Handle));
}

 void OCGeom2d_Geometry::Rotate(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real Ang)
{
  (*((Handle_Geom2d_Geometry*)nativeHandle))->Rotate(*((gp_Pnt2d*)P->Handle), Ang);
}

 void OCGeom2d_Geometry::Scale(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real S)
{
  (*((Handle_Geom2d_Geometry*)nativeHandle))->Scale(*((gp_Pnt2d*)P->Handle), S);
}

 void OCGeom2d_Geometry::Translate(OCNaroWrappers::OCgp_Vec2d^ V)
{
  (*((Handle_Geom2d_Geometry*)nativeHandle))->Translate(*((gp_Vec2d*)V->Handle));
}

 void OCGeom2d_Geometry::Translate(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2)
{
  (*((Handle_Geom2d_Geometry*)nativeHandle))->Translate(*((gp_Pnt2d*)P1->Handle), *((gp_Pnt2d*)P2->Handle));
}

OCGeom2d_Geometry^ OCGeom2d_Geometry::Mirrored(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Geom2d_Geometry*)nativeHandle))->Mirrored(*((gp_Pnt2d*)P->Handle));
  return gcnew OCGeom2d_Geometry(&tmp);
}

OCGeom2d_Geometry^ OCGeom2d_Geometry::Mirrored(OCNaroWrappers::OCgp_Ax2d^ A)
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Geom2d_Geometry*)nativeHandle))->Mirrored(*((gp_Ax2d*)A->Handle));
  return gcnew OCGeom2d_Geometry(&tmp);
}

OCGeom2d_Geometry^ OCGeom2d_Geometry::Rotated(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real Ang)
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Geom2d_Geometry*)nativeHandle))->Rotated(*((gp_Pnt2d*)P->Handle), Ang);
  return gcnew OCGeom2d_Geometry(&tmp);
}

OCGeom2d_Geometry^ OCGeom2d_Geometry::Scaled(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real S)
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Geom2d_Geometry*)nativeHandle))->Scaled(*((gp_Pnt2d*)P->Handle), S);
  return gcnew OCGeom2d_Geometry(&tmp);
}

OCGeom2d_Geometry^ OCGeom2d_Geometry::Transformed(OCNaroWrappers::OCgp_Trsf2d^ T)
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Geom2d_Geometry*)nativeHandle))->Transformed(*((gp_Trsf2d*)T->Handle));
  return gcnew OCGeom2d_Geometry(&tmp);
}

OCGeom2d_Geometry^ OCGeom2d_Geometry::Translated(OCNaroWrappers::OCgp_Vec2d^ V)
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Geom2d_Geometry*)nativeHandle))->Translated(*((gp_Vec2d*)V->Handle));
  return gcnew OCGeom2d_Geometry(&tmp);
}

OCGeom2d_Geometry^ OCGeom2d_Geometry::Translated(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2)
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Geom2d_Geometry*)nativeHandle))->Translated(*((gp_Pnt2d*)P1->Handle), *((gp_Pnt2d*)P2->Handle));
  return gcnew OCGeom2d_Geometry(&tmp);
}


