// File generated by CPPExt (CPP file)
//

#include "Geom2d_Line.h"
#include "../Converter.h"
#include "../gp/gp_Ax2d.h"
#include "../gp/gp_Lin2d.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Dir2d.h"
#include "../gp/gp_Vec2d.h"
#include "../gp/gp_Trsf2d.h"
#include "Geom2d_Geometry.h"


using namespace OCNaroWrappers;

OCGeom2d_Line::OCGeom2d_Line(Handle(Geom2d_Line)* nativeHandle) : OCGeom2d_Curve((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Geom2d_Line(*nativeHandle);
}

OCGeom2d_Line::OCGeom2d_Line(OCNaroWrappers::OCgp_Ax2d^ A) : OCGeom2d_Curve((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom2d_Line(new Geom2d_Line(*((gp_Ax2d*)A->Handle)));
}

OCGeom2d_Line::OCGeom2d_Line(OCNaroWrappers::OCgp_Lin2d^ L) : OCGeom2d_Curve((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom2d_Line(new Geom2d_Line(*((gp_Lin2d*)L->Handle)));
}

OCGeom2d_Line::OCGeom2d_Line(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Dir2d^ V) : OCGeom2d_Curve((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom2d_Line(new Geom2d_Line(*((gp_Pnt2d*)P->Handle), *((gp_Dir2d*)V->Handle)));
}

 void OCGeom2d_Line::SetLin2d(OCNaroWrappers::OCgp_Lin2d^ L)
{
  (*((Handle_Geom2d_Line*)nativeHandle))->SetLin2d(*((gp_Lin2d*)L->Handle));
}

 void OCGeom2d_Line::SetDirection(OCNaroWrappers::OCgp_Dir2d^ V)
{
  (*((Handle_Geom2d_Line*)nativeHandle))->SetDirection(*((gp_Dir2d*)V->Handle));
}

OCgp_Dir2d^ OCGeom2d_Line::Direction()
{
  gp_Dir2d* tmp = new gp_Dir2d();
  *tmp = (*((Handle_Geom2d_Line*)nativeHandle))->Direction();
  return gcnew OCgp_Dir2d(tmp);
}

 void OCGeom2d_Line::SetLocation(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  (*((Handle_Geom2d_Line*)nativeHandle))->SetLocation(*((gp_Pnt2d*)P->Handle));
}

OCgp_Pnt2d^ OCGeom2d_Line::Location()
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = (*((Handle_Geom2d_Line*)nativeHandle))->Location();
  return gcnew OCgp_Pnt2d(tmp);
}

 void OCGeom2d_Line::SetPosition(OCNaroWrappers::OCgp_Ax2d^ A)
{
  (*((Handle_Geom2d_Line*)nativeHandle))->SetPosition(*((gp_Ax2d*)A->Handle));
}

OCgp_Ax2d^ OCGeom2d_Line::Position()
{
  gp_Ax2d* tmp = new gp_Ax2d();
  *tmp = (*((Handle_Geom2d_Line*)nativeHandle))->Position();
  return gcnew OCgp_Ax2d(tmp);
}

OCgp_Lin2d^ OCGeom2d_Line::Lin2d()
{
  gp_Lin2d* tmp = new gp_Lin2d();
  *tmp = (*((Handle_Geom2d_Line*)nativeHandle))->Lin2d();
  return gcnew OCgp_Lin2d(tmp);
}

 void OCGeom2d_Line::Reverse()
{
  (*((Handle_Geom2d_Line*)nativeHandle))->Reverse();
}

 Standard_Real OCGeom2d_Line::ReversedParameter(Standard_Real U)
{
  return (*((Handle_Geom2d_Line*)nativeHandle))->ReversedParameter(U);
}

 Standard_Real OCGeom2d_Line::FirstParameter()
{
  return (*((Handle_Geom2d_Line*)nativeHandle))->FirstParameter();
}

 Standard_Real OCGeom2d_Line::LastParameter()
{
  return (*((Handle_Geom2d_Line*)nativeHandle))->LastParameter();
}

 System::Boolean OCGeom2d_Line::IsClosed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Geom2d_Line*)nativeHandle))->IsClosed());
}

 System::Boolean OCGeom2d_Line::IsPeriodic()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Geom2d_Line*)nativeHandle))->IsPeriodic());
}

 OCGeomAbs_Shape OCGeom2d_Line::Continuity()
{
  return (OCGeomAbs_Shape)((*((Handle_Geom2d_Line*)nativeHandle))->Continuity());
}

 Standard_Real OCGeom2d_Line::Distance(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  return (*((Handle_Geom2d_Line*)nativeHandle))->Distance(*((gp_Pnt2d*)P->Handle));
}

 System::Boolean OCGeom2d_Line::IsCN(Standard_Integer N)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Geom2d_Line*)nativeHandle))->IsCN(N));
}

 void OCGeom2d_Line::D0(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P)
{
  (*((Handle_Geom2d_Line*)nativeHandle))->D0(U, *((gp_Pnt2d*)P->Handle));
}

 void OCGeom2d_Line::D1(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1)
{
  (*((Handle_Geom2d_Line*)nativeHandle))->D1(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle));
}

 void OCGeom2d_Line::D2(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2)
{
  (*((Handle_Geom2d_Line*)nativeHandle))->D2(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle));
}

 void OCGeom2d_Line::D3(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ V1, OCNaroWrappers::OCgp_Vec2d^ V2, OCNaroWrappers::OCgp_Vec2d^ V3)
{
  (*((Handle_Geom2d_Line*)nativeHandle))->D3(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)V1->Handle), *((gp_Vec2d*)V2->Handle), *((gp_Vec2d*)V3->Handle));
}

OCgp_Vec2d^ OCGeom2d_Line::DN(Standard_Real U, Standard_Integer N)
{
  gp_Vec2d* tmp = new gp_Vec2d();
  *tmp = (*((Handle_Geom2d_Line*)nativeHandle))->DN(U, N);
  return gcnew OCgp_Vec2d(tmp);
}

 void OCGeom2d_Line::Transform(OCNaroWrappers::OCgp_Trsf2d^ T)
{
  (*((Handle_Geom2d_Line*)nativeHandle))->Transform(*((gp_Trsf2d*)T->Handle));
}

 Standard_Real OCGeom2d_Line::TransformedParameter(Standard_Real U, OCNaroWrappers::OCgp_Trsf2d^ T)
{
  return (*((Handle_Geom2d_Line*)nativeHandle))->TransformedParameter(U, *((gp_Trsf2d*)T->Handle));
}

 Standard_Real OCGeom2d_Line::ParametricTransformation(OCNaroWrappers::OCgp_Trsf2d^ T)
{
  return (*((Handle_Geom2d_Line*)nativeHandle))->ParametricTransformation(*((gp_Trsf2d*)T->Handle));
}

OCGeom2d_Geometry^ OCGeom2d_Line::Copy()
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_Geom2d_Line*)nativeHandle))->Copy();
  return gcnew OCGeom2d_Geometry(&tmp);
}


