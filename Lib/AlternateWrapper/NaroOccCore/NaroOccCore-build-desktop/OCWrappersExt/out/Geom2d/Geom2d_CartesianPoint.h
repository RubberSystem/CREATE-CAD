// File generated by CPPExt (Transient)
//
#ifndef _Geom2d_CartesianPoint_OCWrappers_HeaderFile
#define _Geom2d_CartesianPoint_OCWrappers_HeaderFile

// include the wrapped class
#include <Geom2d_CartesianPoint.hxx>
#include "../Converter.h"

#include "Geom2d_Point.h"

#include "../gp/gp_Pnt2d.h"


namespace OCNaroWrappers
{

ref class OCgp_Pnt2d;
ref class OCgp_Trsf2d;
ref class OCGeom2d_Geometry;


//! Describes a point in 2D space. A <br>
//! Geom2d_CartesianPoint is defined by a gp_Pnt2d <br>
//! point, with its two Cartesian coordinates X and Y. <br>
public ref class OCGeom2d_CartesianPoint : OCGeom2d_Point {

protected:
  // dummy constructor;
  OCGeom2d_CartesianPoint(OCDummy^) : OCGeom2d_Point((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom2d_CartesianPoint(Handle(Geom2d_CartesianPoint)* nativeHandle);

// Methods PUBLIC

//! Returns a persistent copy of P. <br>
OCGeom2d_CartesianPoint(OCNaroWrappers::OCgp_Pnt2d^ P);


OCGeom2d_CartesianPoint(Standard_Real X, Standard_Real Y);

//! Set <me> to X, Y coordinates. <br>
 /*instead*/  void SetCoord(Standard_Real X, Standard_Real Y) ;

//! Set <me> to P.X(), P.Y() coordinates. <br>
 /*instead*/  void SetPnt2d(OCNaroWrappers::OCgp_Pnt2d^ P) ;

//! Changes the X coordinate of me. <br>
 /*instead*/  void SetX(Standard_Real X) ;

//! Changes the Y coordinate of me. <br>
 /*instead*/  void SetY(Standard_Real Y) ;

//! Returns the coordinates of <me>. <br>
 /*instead*/  void Coord(Standard_Real& X, Standard_Real& Y) ;


//!  Returns a non persistent cartesian point with <br>
//!  the same coordinates as <me>. <br>
//! -C++: return const& <br>
 /*instead*/  OCgp_Pnt2d^ Pnt2d() ;

//! Returns the X coordinate of <me>. <br>
 /*instead*/  Standard_Real X() ;

//! Returns the Y coordinate of <me>. <br>
 /*instead*/  Standard_Real Y() ;


 /*instead*/  void Transform(OCNaroWrappers::OCgp_Trsf2d^ T) ;


 /*instead*/  OCGeom2d_Geometry^ Copy() ;

~OCGeom2d_CartesianPoint()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
