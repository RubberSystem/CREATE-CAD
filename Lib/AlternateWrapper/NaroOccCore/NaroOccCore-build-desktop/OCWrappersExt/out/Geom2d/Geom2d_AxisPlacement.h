// File generated by CPPExt (Transient)
//
#ifndef _Geom2d_AxisPlacement_OCWrappers_HeaderFile
#define _Geom2d_AxisPlacement_OCWrappers_HeaderFile

// include the wrapped class
#include <Geom2d_AxisPlacement.hxx>
#include "../Converter.h"

#include "Geom2d_Geometry.h"

#include "../gp/gp_Ax2d.h"


namespace OCNaroWrappers
{

ref class OCgp_Ax2d;
ref class OCgp_Pnt2d;
ref class OCgp_Dir2d;
ref class OCgp_Trsf2d;
ref class OCGeom2d_Geometry;


//! Describes an axis in 2D space. <br>
//! An axis is defined by: <br>
//! - its origin, also termed the "Location point" of the axis, <br>
//! - its unit vector, termed the "Direction" of the axis. <br>
//! Note: Geom2d_AxisPlacement axes provide the <br>
//! same kind of "geometric" services as gp_Ax2d axes <br>
//! but have more complex data structures. The <br>
//! geometric objects provided by the Geom2d package <br>
//! use gp_Ax2d objects to include axes in their data <br>
//! structures, or to define an axis of symmetry or axis of rotation. <br>
//! Geom2d_AxisPlacement axes are used in a context <br>
//! where they can be shared by several objects <br>
//! contained inside a common data structure. <br>
public ref class OCGeom2d_AxisPlacement : OCGeom2d_Geometry {

protected:
  // dummy constructor;
  OCGeom2d_AxisPlacement(OCDummy^) : OCGeom2d_Geometry((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom2d_AxisPlacement(Handle(Geom2d_AxisPlacement)* nativeHandle);

// Methods PUBLIC

//! Constructs an axis by conversion of the gp_Ax2d axis A. <br>
OCGeom2d_AxisPlacement(OCNaroWrappers::OCgp_Ax2d^ A);

//! Constructs an axis from a given origin P and unit vector V. <br>
OCGeom2d_AxisPlacement(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Dir2d^ V);


 /*instead*/  void Reverse() ;

//! Reverses the unit vector of this axis. <br>
//! Note: <br>
//! - Reverse assigns the result to this axis, while <br>
//! - Reversed creates a new one. <br>
 /*instead*/  OCGeom2d_AxisPlacement^ Reversed() ;

//! Changes the complete definition of the axis placement. <br>
 /*instead*/  void SetAxis(OCNaroWrappers::OCgp_Ax2d^ A) ;


//!  Changes the "Direction" of the axis placement. <br>
 /*instead*/  void SetDirection(OCNaroWrappers::OCgp_Dir2d^ V) ;


//!  Changes the "Location" point (origin) of the axis placement. <br>
 /*instead*/  void SetLocation(OCNaroWrappers::OCgp_Pnt2d^ P) ;


//!  Computes the angle between the "Direction" of <br>
//!  two axis placement in radians. <br>
//! The result is comprised between -Pi and Pi. <br>
 /*instead*/  Standard_Real Angle(OCNaroWrappers::OCGeom2d_AxisPlacement^ Other) ;

//! Converts this axis into a gp_Ax2d axis. <br>
 /*instead*/  OCgp_Ax2d^ Ax2d() ;

//! Returns the "Direction" of <me>. <br>
//! -C++: return const& <br>
 /*instead*/  OCgp_Dir2d^ Direction() ;


//!  Returns the "Location" point (origin) of the axis placement. <br>
//! -C++: return const& <br>
 /*instead*/  OCgp_Pnt2d^ Location() ;

//! Applies the transformation T to this axis. <br>
 /*instead*/  void Transform(OCNaroWrappers::OCgp_Trsf2d^ T) ;

//! Creates a new object which is a copy of this axis. <br>
 /*instead*/  OCGeom2d_Geometry^ Copy() ;

~OCGeom2d_AxisPlacement()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
