// File generated by CPPExt (Transient)
//
#ifndef _PMMgt_PManaged_OCWrappers_HeaderFile
#define _PMMgt_PManaged_OCWrappers_HeaderFile

// include the wrapped class
#include <PMMgt_PManaged.hxx>
#include "../Converter.h"

#include "../Standard/Standard_Persistent.h"



namespace OCNaroWrappers
{




//!   The class <PManaged> is a persistent abstract class that <br>
//!   provides a strategy for managing  the necessary storage <br>
//!   for an instance of <PManaged>. The storage is taken from <br>
//!   Persistent cache. <br>
public ref class OCPMMgt_PManaged : OCStandard_Persistent {

protected:
  // dummy constructor;
  OCPMMgt_PManaged(OCDummy^) : OCStandard_Persistent((OCDummy^)nullptr) {};

public:

// constructor from native
OCPMMgt_PManaged(Handle(PMMgt_PManaged)* nativeHandle);

// Methods PUBLIC


//!   Returns an instance. The storage of the given "size" is <br>
//!   allocated by <StorageManager>. <br>
//!   Returns the storage of the given size to the <StorageManager>. <br>
//!   The application using "Delete" must guarantee that the <br>
//!   instance is not shared. <br>
//!   The virtual Destructor for the class "PManaged". This <br>
//!   declaration is necessary for the C++ compiler to <br>
//!   generate a call to "operator delete" with the real size <br>
//!   of the object. <br>
OCPMMgt_PManaged();

~OCPMMgt_PManaged()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
