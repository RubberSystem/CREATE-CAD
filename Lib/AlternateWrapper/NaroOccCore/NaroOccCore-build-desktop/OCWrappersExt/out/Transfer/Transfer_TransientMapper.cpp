// File generated by CPPExt (CPP file)
//

#include "Transfer_TransientMapper.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "../TColStd/TColStd_MapTransientHasher.h"
#include "Transfer_DataInfo.h"
#include "Transfer_Finder.h"
#include "../Standard/Standard_Type.h"


using namespace OCNaroWrappers;

OCTransfer_TransientMapper::OCTransfer_TransientMapper(Handle(Transfer_TransientMapper)* nativeHandle) : OCTransfer_Finder((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Transfer_TransientMapper(*nativeHandle);
}

OCTransfer_TransientMapper::OCTransfer_TransientMapper(OCNaroWrappers::OCStandard_Transient^ akey) : OCTransfer_Finder((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Transfer_TransientMapper(new Transfer_TransientMapper(*((Handle_Standard_Transient*)akey->Handle)));
}

OCStandard_Transient^ OCTransfer_TransientMapper::Value()
{
  Handle(Standard_Transient) tmp = (*((Handle_Transfer_TransientMapper*)nativeHandle))->Value();
  return gcnew OCStandard_Transient(&tmp);
}

 System::Boolean OCTransfer_TransientMapper::Equates(OCNaroWrappers::OCTransfer_Finder^ other)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_TransientMapper*)nativeHandle))->Equates(*((Handle_Transfer_Finder*)other->Handle)));
}

OCStandard_Type^ OCTransfer_TransientMapper::ValueType()
{
  Handle(Standard_Type) tmp = (*((Handle_Transfer_TransientMapper*)nativeHandle))->ValueType();
  return gcnew OCStandard_Type(&tmp);
}

 System::String^ OCTransfer_TransientMapper::ValueTypeName()
{
  return OCConverter::StandardCStringToString((*((Handle_Transfer_TransientMapper*)nativeHandle))->ValueTypeName());
}


