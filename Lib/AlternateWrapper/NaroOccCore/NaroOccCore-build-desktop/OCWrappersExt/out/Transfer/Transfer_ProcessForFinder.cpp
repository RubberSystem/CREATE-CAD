// File generated by CPPExt (CPP file)
//

#include "Transfer_ProcessForFinder.h"
#include "../Converter.h"
#include "../Message/Message_Messenger.h"
#include "Transfer_Finder.h"
#include "Transfer_Binder.h"
#include "Transfer_ActorOfProcessForFinder.h"
#include "../Message/Message_ProgressIndicator.h"
#include "Transfer_FindHasher.h"
#include "Transfer_HSequenceOfFinder.h"
#include "Transfer_TransferMapOfProcessForFinder.h"
#include "Transfer_IndexedDataMapNodeOfTransferMapOfProcessForFinder.h"
#include "Transfer_IteratorOfProcessForFinder.h"
#include "../Message/Message_Msg.h"
#include "../Interface/Interface_Check.h"
#include "../Standard/Standard_Transient.h"
#include "../Standard/Standard_Type.h"
#include "../Interface/Interface_CheckIterator.h"


using namespace OCNaroWrappers;

OCTransfer_ProcessForFinder::OCTransfer_ProcessForFinder(Handle(Transfer_ProcessForFinder)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Transfer_ProcessForFinder(*nativeHandle);
}

OCTransfer_ProcessForFinder::OCTransfer_ProcessForFinder(Standard_Integer nb) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Transfer_ProcessForFinder(new Transfer_ProcessForFinder(nb));
}

OCTransfer_ProcessForFinder::OCTransfer_ProcessForFinder(OCNaroWrappers::OCMessage_Messenger^ printer, Standard_Integer nb) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Transfer_ProcessForFinder(new Transfer_ProcessForFinder(*((Handle_Message_Messenger*)printer->Handle), nb));
}

 void OCTransfer_ProcessForFinder::Clear()
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Clear();
}

 void OCTransfer_ProcessForFinder::Clean()
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Clean();
}

 void OCTransfer_ProcessForFinder::Resize(Standard_Integer nb)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Resize(nb);
}

 void OCTransfer_ProcessForFinder::SetActor(OCNaroWrappers::OCTransfer_ActorOfProcessForFinder^ actor)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SetActor(*((Handle_Transfer_ActorOfProcessForFinder*)actor->Handle));
}

OCTransfer_ActorOfProcessForFinder^ OCTransfer_ProcessForFinder::Actor()
{
  Handle(Transfer_ActorOfProcessForFinder) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Actor();
  return gcnew OCTransfer_ActorOfProcessForFinder(&tmp);
}

OCTransfer_Binder^ OCTransfer_ProcessForFinder::Find(OCNaroWrappers::OCTransfer_Finder^ start)
{
  Handle(Transfer_Binder) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Find(*((Handle_Transfer_Finder*)start->Handle));
  return gcnew OCTransfer_Binder(&tmp);
}

 System::Boolean OCTransfer_ProcessForFinder::IsBound(OCNaroWrappers::OCTransfer_Finder^ start)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->IsBound(*((Handle_Transfer_Finder*)start->Handle)));
}

 System::Boolean OCTransfer_ProcessForFinder::IsAlreadyUsed(OCNaroWrappers::OCTransfer_Finder^ start)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->IsAlreadyUsed(*((Handle_Transfer_Finder*)start->Handle)));
}

 void OCTransfer_ProcessForFinder::Bind(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCTransfer_Binder^ binder)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Bind(*((Handle_Transfer_Finder*)start->Handle), *((Handle_Transfer_Binder*)binder->Handle));
}

 void OCTransfer_ProcessForFinder::Rebind(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCTransfer_Binder^ binder)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Rebind(*((Handle_Transfer_Finder*)start->Handle), *((Handle_Transfer_Binder*)binder->Handle));
}

 System::Boolean OCTransfer_ProcessForFinder::Unbind(OCNaroWrappers::OCTransfer_Finder^ start)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Unbind(*((Handle_Transfer_Finder*)start->Handle)));
}

OCTransfer_Binder^ OCTransfer_ProcessForFinder::FindElseBind(OCNaroWrappers::OCTransfer_Finder^ start)
{
  Handle(Transfer_Binder) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->FindElseBind(*((Handle_Transfer_Finder*)start->Handle));
  return gcnew OCTransfer_Binder(&tmp);
}

 void OCTransfer_ProcessForFinder::SetMessenger(OCNaroWrappers::OCMessage_Messenger^ messenger)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SetMessenger(*((Handle_Message_Messenger*)messenger->Handle));
}

OCMessage_Messenger^ OCTransfer_ProcessForFinder::Messenger()
{
  Handle(Message_Messenger) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Messenger();
  return gcnew OCMessage_Messenger(&tmp);
}

 void OCTransfer_ProcessForFinder::SetTraceLevel(Standard_Integer tracelev)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SetTraceLevel(tracelev);
}

 Standard_Integer OCTransfer_ProcessForFinder::TraceLevel()
{
  return (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->TraceLevel();
}

 void OCTransfer_ProcessForFinder::SendFail(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCMessage_Msg^ amsg)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SendFail(*((Handle_Transfer_Finder*)start->Handle), *((Message_Msg*)amsg->Handle));
}

 void OCTransfer_ProcessForFinder::SendWarning(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCMessage_Msg^ amsg)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SendWarning(*((Handle_Transfer_Finder*)start->Handle), *((Message_Msg*)amsg->Handle));
}

 void OCTransfer_ProcessForFinder::SendMsg(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCMessage_Msg^ amsg)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SendMsg(*((Handle_Transfer_Finder*)start->Handle), *((Message_Msg*)amsg->Handle));
}

 void OCTransfer_ProcessForFinder::AddFail(OCNaroWrappers::OCTransfer_Finder^ start, System::String^ mess, System::String^ orig)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->AddFail(*((Handle_Transfer_Finder*)start->Handle), OCConverter::StringToStandardCString(mess), OCConverter::StringToStandardCString(orig));
}

 void OCTransfer_ProcessForFinder::AddError(OCNaroWrappers::OCTransfer_Finder^ start, System::String^ mess, System::String^ orig)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->AddError(*((Handle_Transfer_Finder*)start->Handle), OCConverter::StringToStandardCString(mess), OCConverter::StringToStandardCString(orig));
}

 void OCTransfer_ProcessForFinder::AddFail(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCMessage_Msg^ amsg)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->AddFail(*((Handle_Transfer_Finder*)start->Handle), *((Message_Msg*)amsg->Handle));
}

 void OCTransfer_ProcessForFinder::AddWarning(OCNaroWrappers::OCTransfer_Finder^ start, System::String^ mess, System::String^ orig)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->AddWarning(*((Handle_Transfer_Finder*)start->Handle), OCConverter::StringToStandardCString(mess), OCConverter::StringToStandardCString(orig));
}

 void OCTransfer_ProcessForFinder::AddWarning(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCMessage_Msg^ amsg)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->AddWarning(*((Handle_Transfer_Finder*)start->Handle), *((Message_Msg*)amsg->Handle));
}

 void OCTransfer_ProcessForFinder::Mend(OCNaroWrappers::OCTransfer_Finder^ start, System::String^ pref)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Mend(*((Handle_Transfer_Finder*)start->Handle), OCConverter::StringToStandardCString(pref));
}

OCInterface_Check^ OCTransfer_ProcessForFinder::Check(OCNaroWrappers::OCTransfer_Finder^ start)
{
  Handle(Interface_Check) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Check(*((Handle_Transfer_Finder*)start->Handle));
  return gcnew OCInterface_Check(&tmp);
}

 void OCTransfer_ProcessForFinder::BindTransient(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCStandard_Transient^ res)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->BindTransient(*((Handle_Transfer_Finder*)start->Handle), *((Handle_Standard_Transient*)res->Handle));
}

OCStandard_Transient^ OCTransfer_ProcessForFinder::FindTransient(OCNaroWrappers::OCTransfer_Finder^ start)
{
  Handle(Standard_Transient) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->FindTransient(*((Handle_Transfer_Finder*)start->Handle));
  return gcnew OCStandard_Transient(&tmp);
}

 void OCTransfer_ProcessForFinder::BindMultiple(OCNaroWrappers::OCTransfer_Finder^ start)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->BindMultiple(*((Handle_Transfer_Finder*)start->Handle));
}

 void OCTransfer_ProcessForFinder::AddMultiple(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCStandard_Transient^ res)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->AddMultiple(*((Handle_Transfer_Finder*)start->Handle), *((Handle_Standard_Transient*)res->Handle));
}

 System::Boolean OCTransfer_ProcessForFinder::FindTypedTransient(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCStandard_Type^ atype, OCNaroWrappers::OCStandard_Transient^ val)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->FindTypedTransient(*((Handle_Transfer_Finder*)start->Handle), *((Handle_Standard_Type*)atype->Handle), *((Handle_Standard_Transient*)val->Handle)));
}

 System::Boolean OCTransfer_ProcessForFinder::GetTypedTransient(OCNaroWrappers::OCTransfer_Binder^ binder, OCNaroWrappers::OCStandard_Type^ atype, OCNaroWrappers::OCStandard_Transient^ val)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->GetTypedTransient(*((Handle_Transfer_Binder*)binder->Handle), *((Handle_Standard_Type*)atype->Handle), *((Handle_Standard_Transient*)val->Handle)));
}

 Standard_Integer OCTransfer_ProcessForFinder::NbMapped()
{
  return (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->NbMapped();
}

OCTransfer_Finder^ OCTransfer_ProcessForFinder::Mapped(Standard_Integer num)
{
  Handle(Transfer_Finder) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Mapped(num);
  return gcnew OCTransfer_Finder(&tmp);
}

 Standard_Integer OCTransfer_ProcessForFinder::MapIndex(OCNaroWrappers::OCTransfer_Finder^ start)
{
  return (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->MapIndex(*((Handle_Transfer_Finder*)start->Handle));
}

OCTransfer_Binder^ OCTransfer_ProcessForFinder::MapItem(Standard_Integer num)
{
  Handle(Transfer_Binder) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->MapItem(num);
  return gcnew OCTransfer_Binder(&tmp);
}

 void OCTransfer_ProcessForFinder::SetRoot(OCNaroWrappers::OCTransfer_Finder^ start)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SetRoot(*((Handle_Transfer_Finder*)start->Handle));
}

 void OCTransfer_ProcessForFinder::SetRootManagement(System::Boolean stat)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SetRootManagement(OCConverter::BooleanToStandardBoolean(stat));
}

 Standard_Integer OCTransfer_ProcessForFinder::NbRoots()
{
  return (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->NbRoots();
}

OCTransfer_Finder^ OCTransfer_ProcessForFinder::Root(Standard_Integer num)
{
  Handle(Transfer_Finder) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Root(num);
  return gcnew OCTransfer_Finder(&tmp);
}

OCTransfer_Binder^ OCTransfer_ProcessForFinder::RootItem(Standard_Integer num)
{
  Handle(Transfer_Binder) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->RootItem(num);
  return gcnew OCTransfer_Binder(&tmp);
}

 Standard_Integer OCTransfer_ProcessForFinder::RootIndex(OCNaroWrappers::OCTransfer_Finder^ start)
{
  return (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->RootIndex(*((Handle_Transfer_Finder*)start->Handle));
}

 Standard_Integer OCTransfer_ProcessForFinder::NestingLevel()
{
  return (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->NestingLevel();
}

 void OCTransfer_ProcessForFinder::ResetNestingLevel()
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->ResetNestingLevel();
}

 System::Boolean OCTransfer_ProcessForFinder::Recognize(OCNaroWrappers::OCTransfer_Finder^ start)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Recognize(*((Handle_Transfer_Finder*)start->Handle)));
}

OCTransfer_Binder^ OCTransfer_ProcessForFinder::Transferring(OCNaroWrappers::OCTransfer_Finder^ start)
{
  Handle(Transfer_Binder) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Transferring(*((Handle_Transfer_Finder*)start->Handle));
  return gcnew OCTransfer_Binder(&tmp);
}

 System::Boolean OCTransfer_ProcessForFinder::Transfer(OCNaroWrappers::OCTransfer_Finder^ start)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->Transfer(*((Handle_Transfer_Finder*)start->Handle)));
}

 void OCTransfer_ProcessForFinder::SetErrorHandle(System::Boolean err)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SetErrorHandle(OCConverter::BooleanToStandardBoolean(err));
}

 System::Boolean OCTransfer_ProcessForFinder::ErrorHandle()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->ErrorHandle());
}

 void OCTransfer_ProcessForFinder::StartTrace(OCNaroWrappers::OCTransfer_Binder^ binder, OCNaroWrappers::OCTransfer_Finder^ start, Standard_Integer level, Standard_Integer mode)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->StartTrace(*((Handle_Transfer_Binder*)binder->Handle), *((Handle_Transfer_Finder*)start->Handle), level, mode);
}

 void OCTransfer_ProcessForFinder::PrintTrace(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCMessage_Messenger^ S)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->PrintTrace(*((Handle_Transfer_Finder*)start->Handle), *((Handle_Message_Messenger*)S->Handle));
}

 System::Boolean OCTransfer_ProcessForFinder::IsLooping(Standard_Integer alevel)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->IsLooping(alevel));
}

OCTransfer_IteratorOfProcessForFinder^ OCTransfer_ProcessForFinder::RootResult(System::Boolean withstart)
{
  Transfer_IteratorOfProcessForFinder* tmp = new Transfer_IteratorOfProcessForFinder(0);
  *tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->RootResult(OCConverter::BooleanToStandardBoolean(withstart));
  return gcnew OCTransfer_IteratorOfProcessForFinder(tmp);
}

OCTransfer_IteratorOfProcessForFinder^ OCTransfer_ProcessForFinder::CompleteResult(System::Boolean withstart)
{
  Transfer_IteratorOfProcessForFinder* tmp = new Transfer_IteratorOfProcessForFinder(0);
  *tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->CompleteResult(OCConverter::BooleanToStandardBoolean(withstart));
  return gcnew OCTransfer_IteratorOfProcessForFinder(tmp);
}

OCTransfer_IteratorOfProcessForFinder^ OCTransfer_ProcessForFinder::AbnormalResult()
{
  Transfer_IteratorOfProcessForFinder* tmp = new Transfer_IteratorOfProcessForFinder(0);
  *tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->AbnormalResult();
  return gcnew OCTransfer_IteratorOfProcessForFinder(tmp);
}

OCInterface_CheckIterator^ OCTransfer_ProcessForFinder::CheckList(System::Boolean erronly)
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->CheckList(OCConverter::BooleanToStandardBoolean(erronly));
  return gcnew OCInterface_CheckIterator(tmp);
}

OCTransfer_IteratorOfProcessForFinder^ OCTransfer_ProcessForFinder::ResultOne(OCNaroWrappers::OCTransfer_Finder^ start, Standard_Integer level, System::Boolean withstart)
{
  Transfer_IteratorOfProcessForFinder* tmp = new Transfer_IteratorOfProcessForFinder(0);
  *tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->ResultOne(*((Handle_Transfer_Finder*)start->Handle), level, OCConverter::BooleanToStandardBoolean(withstart));
  return gcnew OCTransfer_IteratorOfProcessForFinder(tmp);
}

OCInterface_CheckIterator^ OCTransfer_ProcessForFinder::CheckListOne(OCNaroWrappers::OCTransfer_Finder^ start, Standard_Integer level, System::Boolean erronly)
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->CheckListOne(*((Handle_Transfer_Finder*)start->Handle), level, OCConverter::BooleanToStandardBoolean(erronly));
  return gcnew OCInterface_CheckIterator(tmp);
}

 System::Boolean OCTransfer_ProcessForFinder::IsCheckListEmpty(OCNaroWrappers::OCTransfer_Finder^ start, Standard_Integer level, System::Boolean erronly)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_ProcessForFinder*)nativeHandle))->IsCheckListEmpty(*((Handle_Transfer_Finder*)start->Handle), level, OCConverter::BooleanToStandardBoolean(erronly)));
}

 void OCTransfer_ProcessForFinder::RemoveResult(OCNaroWrappers::OCTransfer_Finder^ start, Standard_Integer level, System::Boolean compute)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->RemoveResult(*((Handle_Transfer_Finder*)start->Handle), level, OCConverter::BooleanToStandardBoolean(compute));
}

 Standard_Integer OCTransfer_ProcessForFinder::CheckNum(OCNaroWrappers::OCTransfer_Finder^ start)
{
  return (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->CheckNum(*((Handle_Transfer_Finder*)start->Handle));
}

 void OCTransfer_ProcessForFinder::SetProgress(OCNaroWrappers::OCMessage_ProgressIndicator^ theProgress)
{
  (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->SetProgress(*((Handle_Message_ProgressIndicator*)theProgress->Handle));
}

OCMessage_ProgressIndicator^ OCTransfer_ProcessForFinder::GetProgress()
{
  Handle(Message_ProgressIndicator) tmp = (*((Handle_Transfer_ProcessForFinder*)nativeHandle))->GetProgress();
  return gcnew OCMessage_ProgressIndicator(&tmp);
}


