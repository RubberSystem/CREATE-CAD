// File generated by CPPExt (Transient)
//
#ifndef _Transfer_ActorOfTransientProcess_OCWrappers_HeaderFile
#define _Transfer_ActorOfTransientProcess_OCWrappers_HeaderFile

// include the wrapped class
#include <Transfer_ActorOfTransientProcess.hxx>
#include "../Converter.h"

#include "Transfer_ActorOfProcessForTransient.h"



namespace OCNaroWrappers
{

ref class OCTransfer_Binder;
ref class OCStandard_Transient;
ref class OCTransfer_ProcessForTransient;
ref class OCTransfer_TransientProcess;


//! The original class was renamed. Compatibility only <br>
public ref class OCTransfer_ActorOfTransientProcess : OCTransfer_ActorOfProcessForTransient {

protected:
  // dummy constructor;
  OCTransfer_ActorOfTransientProcess(OCDummy^) : OCTransfer_ActorOfProcessForTransient((OCDummy^)nullptr) {};

public:

// constructor from native
OCTransfer_ActorOfTransientProcess(Handle(Transfer_ActorOfTransientProcess)* nativeHandle);

// Methods PUBLIC


OCTransfer_ActorOfTransientProcess();


virtual /*instead*/  OCTransfer_Binder^ Transferring(OCNaroWrappers::OCStandard_Transient^ start, OCNaroWrappers::OCTransfer_ProcessForTransient^ TP) override;


virtual /*instead*/  OCTransfer_Binder^ Transfer(OCNaroWrappers::OCStandard_Transient^ start, OCNaroWrappers::OCTransfer_TransientProcess^ TP) ;


virtual /*instead*/  OCStandard_Transient^ TransferTransient(OCNaroWrappers::OCStandard_Transient^ start, OCNaroWrappers::OCTransfer_TransientProcess^ TP) ;

~OCTransfer_ActorOfTransientProcess()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
