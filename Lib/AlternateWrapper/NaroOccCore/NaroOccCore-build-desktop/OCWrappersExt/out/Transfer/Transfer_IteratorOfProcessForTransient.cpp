// File generated by CPPExt (CPP file)
//

#include "Transfer_IteratorOfProcessForTransient.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HSequenceOfTransient.h"
#include "../Standard/Standard_Transient.h"
#include "../TColStd/TColStd_MapTransientHasher.h"
#include "Transfer_ProcessForTransient.h"
#include "Transfer_TransferMapOfProcessForTransient.h"
#include "Transfer_IndexedDataMapNodeOfTransferMapOfProcessForTransient.h"
#include "Transfer_ActorOfProcessForTransient.h"
#include "Transfer_Binder.h"


using namespace OCNaroWrappers;

OCTransfer_IteratorOfProcessForTransient::OCTransfer_IteratorOfProcessForTransient(Transfer_IteratorOfProcessForTransient* nativeHandle) : OCTransfer_TransferIterator((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTransfer_IteratorOfProcessForTransient::OCTransfer_IteratorOfProcessForTransient(System::Boolean withstarts) : OCTransfer_TransferIterator((OCDummy^)nullptr)

{
  nativeHandle = new Transfer_IteratorOfProcessForTransient(OCConverter::BooleanToStandardBoolean(withstarts));
}

 void OCTransfer_IteratorOfProcessForTransient::Add(OCNaroWrappers::OCTransfer_Binder^ binder)
{
  ((Transfer_IteratorOfProcessForTransient*)nativeHandle)->Add(*((Handle_Transfer_Binder*)binder->Handle));
}

 void OCTransfer_IteratorOfProcessForTransient::Add(OCNaroWrappers::OCTransfer_Binder^ binder, OCNaroWrappers::OCStandard_Transient^ start)
{
  ((Transfer_IteratorOfProcessForTransient*)nativeHandle)->Add(*((Handle_Transfer_Binder*)binder->Handle), *((Handle_Standard_Transient*)start->Handle));
}

 void OCTransfer_IteratorOfProcessForTransient::Filter(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list, System::Boolean keep)
{
  ((Transfer_IteratorOfProcessForTransient*)nativeHandle)->Filter(*((Handle_TColStd_HSequenceOfTransient*)list->Handle), OCConverter::BooleanToStandardBoolean(keep));
}

 System::Boolean OCTransfer_IteratorOfProcessForTransient::HasStarting()
{
  return OCConverter::StandardBooleanToBoolean(((Transfer_IteratorOfProcessForTransient*)nativeHandle)->HasStarting());
}

OCStandard_Transient^ OCTransfer_IteratorOfProcessForTransient::Starting()
{
  Handle(Standard_Transient) tmp = ((Transfer_IteratorOfProcessForTransient*)nativeHandle)->Starting();
  return gcnew OCStandard_Transient(&tmp);
}


