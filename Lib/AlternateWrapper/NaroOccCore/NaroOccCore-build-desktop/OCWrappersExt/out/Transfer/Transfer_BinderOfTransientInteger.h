// File generated by CPPExt (Transient)
//
#ifndef _Transfer_BinderOfTransientInteger_OCWrappers_HeaderFile
#define _Transfer_BinderOfTransientInteger_OCWrappers_HeaderFile

// include the wrapped class
#include <Transfer_BinderOfTransientInteger.hxx>
#include "../Converter.h"

#include "Transfer_SimpleBinderOfTransient.h"



namespace OCNaroWrappers
{



//! This type of Binder allows to attach as result, besides a <br>
//!           Transient Object, an Integer Value, which can be an Index <br>
//!           in the Object if it defines a List, for instance <br>
//! <br>
//!           This Binder is otherwise a kind of SimpleBinderOfTransient, <br>
//!           i.e. its basic result (for iterators, etc) is the Transient <br>
public ref class OCTransfer_BinderOfTransientInteger : OCTransfer_SimpleBinderOfTransient {

protected:
  // dummy constructor;
  OCTransfer_BinderOfTransientInteger(OCDummy^) : OCTransfer_SimpleBinderOfTransient((OCDummy^)nullptr) {};

public:

// constructor from native
OCTransfer_BinderOfTransientInteger(Handle(Transfer_BinderOfTransientInteger)* nativeHandle);

// Methods PUBLIC

//! Creates an empty BinderOfTransientInteger; Default value for <br>
//!           the integer part is zero <br>
OCTransfer_BinderOfTransientInteger();

//! Sets a value for the integer part <br>
 /*instead*/  void SetInteger(Standard_Integer value) ;

//! Returns the value set for the integer part <br>
 /*instead*/  Standard_Integer Integer() ;

~OCTransfer_BinderOfTransientInteger()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
