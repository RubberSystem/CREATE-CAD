// File generated by CPPExt (MPV)
//
#ifndef _Transfer_FindHasher_OCWrappers_HeaderFile
#define _Transfer_FindHasher_OCWrappers_HeaderFile

// include native header
#include <Transfer_FindHasher.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTransfer_Finder;


//! FindHasher defines HashCode for Finder, which is : ask a <br>
//!           Finder its HashCode !  Because this is the Finder itself which <br>
//!           brings the HashCode for its Key <br>
//! <br>
//!           This class complies to the template given in TCollection by <br>
//!           MapHasher itself <br>
public ref class OCTransfer_FindHasher  {

protected:
  Transfer_FindHasher* nativeHandle;
  OCTransfer_FindHasher(OCDummy^) {};

public:
  property Transfer_FindHasher* Handle
  {
    Transfer_FindHasher* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTransfer_FindHasher(Transfer_FindHasher* nativeHandle);

// Methods PUBLIC

//! Returns a HashCode in the range <0,Upper> for a Finder : <br>
//!           asks the Finder its HashCode then transforms it to be in the <br>
//!           required range <br>
static /*instead*/  Standard_Integer HashCode(OCNaroWrappers::OCTransfer_Finder^ K, Standard_Integer Upper) ;

//! Returns True if two keys are the same. <br>
//!           The test does not work on the Finders themselves but by <br>
//!           calling their methods Equates <br>
static /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCTransfer_Finder^ K1, OCNaroWrappers::OCTransfer_Finder^ K2) ;

~OCTransfer_FindHasher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
