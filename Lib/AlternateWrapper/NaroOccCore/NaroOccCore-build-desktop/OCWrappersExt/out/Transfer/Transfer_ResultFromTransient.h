// File generated by CPPExt (Transient)
//
#ifndef _Transfer_ResultFromTransient_OCWrappers_HeaderFile
#define _Transfer_ResultFromTransient_OCWrappers_HeaderFile

// include the wrapped class
#include <Transfer_ResultFromTransient.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../Interface/Interface_CheckStatus.h"


namespace OCNaroWrappers
{

ref class OCStandard_Transient;
ref class OCTransfer_Binder;
ref class OCTColStd_HSequenceOfTransient;
ref class OCInterface_Check;
ref class OCTColStd_IndexedMapOfTransient;
ref class OCTransfer_TransientProcess;


//! This class, in conjunction with ResultFromModel, allows to <br>
//!           record the result of a transfer initially stored in a <br>
//!           TransientProcess. <br>
//! <br>
//!           A ResultFromTransient records a couple (Transient,Binder for <br>
//!           the result and checks) plus a list of "sub-results", which <br>
//!           have been recorded in the TrabsientProcess, under scope <br>
//!           attached to the starting transient. <br>
public ref class OCTransfer_ResultFromTransient : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCTransfer_ResultFromTransient(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCTransfer_ResultFromTransient(Handle(Transfer_ResultFromTransient)* nativeHandle);

// Methods PUBLIC

//! Creates a ResultFromTransient, empty <br>
OCTransfer_ResultFromTransient();

//! Sets starting entity <br>
 /*instead*/  void SetStart(OCNaroWrappers::OCStandard_Transient^ start) ;

//! Sets Binder (for result plus individual check) <br>
 /*instead*/  void SetBinder(OCNaroWrappers::OCTransfer_Binder^ binder) ;

//! Returns the starting entity <br>
 /*instead*/  OCStandard_Transient^ Start() ;

//! Returns the binder <br>
 /*instead*/  OCTransfer_Binder^ Binder() ;

//! Returns True if a result is recorded <br>
 /*instead*/  System::Boolean HasResult() ;

//! Returns the check (or an empty one if no binder) <br>
 /*instead*/  OCInterface_Check^ Check() ;

//! Returns the check status <br>
 /*instead*/  OCInterface_CheckStatus CheckStatus() ;

//! Clears the list of (immediate) sub-results <br>
 /*instead*/  void ClearSubs() ;

//! Adds a sub-result <br>
 /*instead*/  void AddSubResult(OCNaroWrappers::OCTransfer_ResultFromTransient^ sub) ;

//! Returns the count of recorded sub-results <br>
 /*instead*/  Standard_Integer NbSubResults() ;

//! Returns a sub-result, given its rank <br>
 /*instead*/  OCTransfer_ResultFromTransient^ SubResult(Standard_Integer num) ;

//! Returns the ResultFromTransient attached to a given starting <br>
//!           entity (the key). Returns a null handle if not found <br>
 /*instead*/  OCTransfer_ResultFromTransient^ ResultFromKey(OCNaroWrappers::OCStandard_Transient^ key) ;

//! This method is used by ResultFromModel to collate the list of <br>
//!           ResultFromTransient, avoiding duplications with a map <br>
//!           Remark : <me> is already in the map and has not to be bound <br>
 /*instead*/  void FillMap(OCNaroWrappers::OCTColStd_IndexedMapOfTransient^ map) ;

//! Fills from a TransientProcess, with the starting entity which <br>
//!           must have been set before. It works with scopes, calls Fill <br>
//!           on each of its sub-results <br>
 /*instead*/  void Fill(OCNaroWrappers::OCTransfer_TransientProcess^ TP) ;

//! Clears some data attached to binders used by TransientProcess, <br>
//!           which become useless once the transfer has been done : <br>
//!           the list of sub-scoped binders, which is now recorded as <br>
//!           sub-results <br>
 /*instead*/  void Strip() ;

//! Fills back a TransientProcess with definition of a <br>
//!           ResultFromTransient, respectfully to its structuration in <br>
//!           scopes <br>
 /*instead*/  void FillBack(OCNaroWrappers::OCTransfer_TransientProcess^ TP) ;

~OCTransfer_ResultFromTransient()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
