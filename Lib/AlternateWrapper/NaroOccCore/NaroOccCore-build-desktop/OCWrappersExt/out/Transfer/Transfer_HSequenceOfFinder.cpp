// File generated by CPPExt (CPP file)
//

#include "Transfer_HSequenceOfFinder.h"
#include "../Converter.h"
#include "Transfer_Finder.h"
#include "Transfer_SequenceOfFinder.h"


using namespace OCNaroWrappers;

OCTransfer_HSequenceOfFinder::OCTransfer_HSequenceOfFinder(Handle(Transfer_HSequenceOfFinder)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Transfer_HSequenceOfFinder(*nativeHandle);
}

OCTransfer_HSequenceOfFinder::OCTransfer_HSequenceOfFinder() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Transfer_HSequenceOfFinder(new Transfer_HSequenceOfFinder());
}

 System::Boolean OCTransfer_HSequenceOfFinder::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCTransfer_HSequenceOfFinder::Length()
{
  return (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Length();
}

 void OCTransfer_HSequenceOfFinder::Clear()
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Clear();
}

 void OCTransfer_HSequenceOfFinder::Append(OCNaroWrappers::OCTransfer_Finder^ anItem)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Append(*((Handle_Transfer_Finder*)anItem->Handle));
}

 void OCTransfer_HSequenceOfFinder::Append(OCNaroWrappers::OCTransfer_HSequenceOfFinder^ aSequence)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Append(*((Handle_Transfer_HSequenceOfFinder*)aSequence->Handle));
}

 void OCTransfer_HSequenceOfFinder::Prepend(OCNaroWrappers::OCTransfer_Finder^ anItem)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Prepend(*((Handle_Transfer_Finder*)anItem->Handle));
}

 void OCTransfer_HSequenceOfFinder::Prepend(OCNaroWrappers::OCTransfer_HSequenceOfFinder^ aSequence)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Prepend(*((Handle_Transfer_HSequenceOfFinder*)aSequence->Handle));
}

 void OCTransfer_HSequenceOfFinder::Reverse()
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Reverse();
}

 void OCTransfer_HSequenceOfFinder::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCTransfer_Finder^ anItem)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->InsertBefore(anIndex, *((Handle_Transfer_Finder*)anItem->Handle));
}

 void OCTransfer_HSequenceOfFinder::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCTransfer_HSequenceOfFinder^ aSequence)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->InsertBefore(anIndex, *((Handle_Transfer_HSequenceOfFinder*)aSequence->Handle));
}

 void OCTransfer_HSequenceOfFinder::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCTransfer_Finder^ anItem)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->InsertAfter(anIndex, *((Handle_Transfer_Finder*)anItem->Handle));
}

 void OCTransfer_HSequenceOfFinder::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCTransfer_HSequenceOfFinder^ aSequence)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->InsertAfter(anIndex, *((Handle_Transfer_HSequenceOfFinder*)aSequence->Handle));
}

 void OCTransfer_HSequenceOfFinder::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCTransfer_HSequenceOfFinder^ OCTransfer_HSequenceOfFinder::Split(Standard_Integer anIndex)
{
  Handle(Transfer_HSequenceOfFinder) tmp = (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Split(anIndex);
  return gcnew OCTransfer_HSequenceOfFinder(&tmp);
}

 void OCTransfer_HSequenceOfFinder::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCTransfer_Finder^ anItem)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->SetValue(anIndex, *((Handle_Transfer_Finder*)anItem->Handle));
}

OCTransfer_Finder^ OCTransfer_HSequenceOfFinder::Value(Standard_Integer anIndex)
{
  Handle(Transfer_Finder) tmp = (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Value(anIndex);
  return gcnew OCTransfer_Finder(&tmp);
}

OCTransfer_Finder^ OCTransfer_HSequenceOfFinder::ChangeValue(Standard_Integer anIndex)
{
  Handle(Transfer_Finder) tmp = (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCTransfer_Finder(&tmp);
}

 void OCTransfer_HSequenceOfFinder::Remove(Standard_Integer anIndex)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Remove(anIndex);
}

 void OCTransfer_HSequenceOfFinder::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCTransfer_SequenceOfFinder^ OCTransfer_HSequenceOfFinder::Sequence()
{
  Transfer_SequenceOfFinder* tmp = new Transfer_SequenceOfFinder();
  *tmp = (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->Sequence();
  return gcnew OCTransfer_SequenceOfFinder(tmp);
}

OCTransfer_SequenceOfFinder^ OCTransfer_HSequenceOfFinder::ChangeSequence()
{
  Transfer_SequenceOfFinder* tmp = new Transfer_SequenceOfFinder();
  *tmp = (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->ChangeSequence();
  return gcnew OCTransfer_SequenceOfFinder(tmp);
}

OCTransfer_HSequenceOfFinder^ OCTransfer_HSequenceOfFinder::ShallowCopy()
{
  Handle(Transfer_HSequenceOfFinder) tmp = (*((Handle_Transfer_HSequenceOfFinder*)nativeHandle))->ShallowCopy();
  return gcnew OCTransfer_HSequenceOfFinder(&tmp);
}


