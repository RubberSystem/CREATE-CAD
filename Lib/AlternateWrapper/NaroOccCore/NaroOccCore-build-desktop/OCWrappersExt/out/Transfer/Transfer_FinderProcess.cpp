// File generated by CPPExt (CPP file)
//

#include "Transfer_FinderProcess.h"
#include "../Converter.h"
#include "../Interface/Interface_InterfaceModel.h"
#include "Transfer_TransientMapper.h"
#include "../Standard/Standard_Transient.h"
#include "Transfer_Finder.h"
#include "../Message/Message_Messenger.h"


using namespace OCNaroWrappers;

OCTransfer_FinderProcess::OCTransfer_FinderProcess(Handle(Transfer_FinderProcess)* nativeHandle) : OCTransfer_ProcessForFinder((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Transfer_FinderProcess(*nativeHandle);
}

OCTransfer_FinderProcess::OCTransfer_FinderProcess(Standard_Integer nb) : OCTransfer_ProcessForFinder((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Transfer_FinderProcess(new Transfer_FinderProcess(nb));
}

 void OCTransfer_FinderProcess::SetModel(OCNaroWrappers::OCInterface_InterfaceModel^ model)
{
  (*((Handle_Transfer_FinderProcess*)nativeHandle))->SetModel(*((Handle_Interface_InterfaceModel*)model->Handle));
}

OCInterface_InterfaceModel^ OCTransfer_FinderProcess::Model()
{
  Handle(Interface_InterfaceModel) tmp = (*((Handle_Transfer_FinderProcess*)nativeHandle))->Model();
  return gcnew OCInterface_InterfaceModel(&tmp);
}

 Standard_Integer OCTransfer_FinderProcess::NextMappedWithAttribute(System::String^ name, Standard_Integer num0)
{
  return (*((Handle_Transfer_FinderProcess*)nativeHandle))->NextMappedWithAttribute(OCConverter::StringToStandardCString(name), num0);
}

OCTransfer_TransientMapper^ OCTransfer_FinderProcess::TransientMapper(OCNaroWrappers::OCStandard_Transient^ obj)
{
  Handle(Transfer_TransientMapper) tmp = (*((Handle_Transfer_FinderProcess*)nativeHandle))->TransientMapper(*((Handle_Standard_Transient*)obj->Handle));
  return gcnew OCTransfer_TransientMapper(&tmp);
}

 void OCTransfer_FinderProcess::PrintTrace(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCMessage_Messenger^ S)
{
  (*((Handle_Transfer_FinderProcess*)nativeHandle))->PrintTrace(*((Handle_Transfer_Finder*)start->Handle), *((Handle_Message_Messenger*)S->Handle));
}

 void OCTransfer_FinderProcess::PrintStats(Standard_Integer mode, OCNaroWrappers::OCMessage_Messenger^ S)
{
  (*((Handle_Transfer_FinderProcess*)nativeHandle))->PrintStats(mode, *((Handle_Message_Messenger*)S->Handle));
}


