// File generated by CPPExt (Transient)
//
#ifndef _Transfer_SimpleBinderOfTransient_OCWrappers_HeaderFile
#define _Transfer_SimpleBinderOfTransient_OCWrappers_HeaderFile

// include the wrapped class
#include <Transfer_SimpleBinderOfTransient.hxx>
#include "../Converter.h"

#include "Transfer_Binder.h"



namespace OCNaroWrappers
{

ref class OCStandard_Transient;
ref class OCStandard_Type;
ref class OCTransfer_Binder;


//! An adapted instantiation of SimpleBinder for Transient Result, <br>
//!           i.e. ResultType can be computed from the Result itself, <br>
//!           instead of being static <br>
public ref class OCTransfer_SimpleBinderOfTransient : OCTransfer_Binder {

protected:
  // dummy constructor;
  OCTransfer_SimpleBinderOfTransient(OCDummy^) : OCTransfer_Binder((OCDummy^)nullptr) {};

public:

// constructor from native
OCTransfer_SimpleBinderOfTransient(Handle(Transfer_SimpleBinderOfTransient)* nativeHandle);

// Methods PUBLIC

//! Creates an empty SimpleBinderOfTransient <br>//! Returns True if a starting object is bound with SEVERAL <br>
//!           results : Here, returns allways False <br>
//!           See Binder itself <br>
OCTransfer_SimpleBinderOfTransient();

//! Returns the Effective (Dynamic) Type of the Result <br>
//!           (Standard_Transient if no Result is defined) <br>
 /*instead*/  OCStandard_Type^ ResultType() ;

//! Returns the Effective Name of (Dynamic) Type of the Result <br>
//!           (void) if no result is defined <br>
 /*instead*/  System::String^ ResultTypeName() ;

//! Defines the Result <br>
 /*instead*/  void SetResult(OCNaroWrappers::OCStandard_Transient^ res) ;

//! Returns the defined Result, if there is one <br>
 /*instead*/  OCStandard_Transient^ Result() ;

//! Returns a transient result according to its type (IsKind) <br>
//!           i.e. the result itself if IsKind(atype), else searches in <br>
//!           NextResult, until first found, then returns True <br>
//!           If not found, returns False (res is NOT touched) <br>
//! <br>
//!           This syntactic form avoids to do DownCast : if a result is <br>
//!           found with the good type, it is loaded in <res> and can be <br>
//!           immediately used, well initialised <br>
static /*instead*/  System::Boolean GetTypedResult(OCNaroWrappers::OCTransfer_Binder^ bnd, OCNaroWrappers::OCStandard_Type^ atype, OCNaroWrappers::OCStandard_Transient^ res) ;

~OCTransfer_SimpleBinderOfTransient()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
