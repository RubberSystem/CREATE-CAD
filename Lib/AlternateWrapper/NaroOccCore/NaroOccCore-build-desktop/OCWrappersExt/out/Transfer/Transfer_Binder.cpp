// File generated by CPPExt (CPP file)
//

#include "Transfer_Binder.h"
#include "../Converter.h"
#include "../Interface/Interface_Check.h"
#include "../Standard/Standard_Type.h"


using namespace OCNaroWrappers;

OCTransfer_Binder::OCTransfer_Binder(Handle(Transfer_Binder)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Transfer_Binder(*nativeHandle);
}

OCTransfer_Binder::OCTransfer_Binder() : OCMMgt_TShared((OCDummy^)nullptr)

{}

 void OCTransfer_Binder::Merge(OCNaroWrappers::OCTransfer_Binder^ other)
{
  (*((Handle_Transfer_Binder*)nativeHandle))->Merge(*((Handle_Transfer_Binder*)other->Handle));
}

 System::Boolean OCTransfer_Binder::IsMultiple()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_Binder*)nativeHandle))->IsMultiple());
}

 void OCTransfer_Binder::AddResult(OCNaroWrappers::OCTransfer_Binder^ next)
{
  (*((Handle_Transfer_Binder*)nativeHandle))->AddResult(*((Handle_Transfer_Binder*)next->Handle));
}

OCTransfer_Binder^ OCTransfer_Binder::NextResult()
{
  Handle(Transfer_Binder) tmp = (*((Handle_Transfer_Binder*)nativeHandle))->NextResult();
  return gcnew OCTransfer_Binder(&tmp);
}

 System::Boolean OCTransfer_Binder::HasResult()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Transfer_Binder*)nativeHandle))->HasResult());
}

 void OCTransfer_Binder::SetAlreadyUsed()
{
  (*((Handle_Transfer_Binder*)nativeHandle))->SetAlreadyUsed();
}

 OCTransfer_StatusResult OCTransfer_Binder::Status()
{
  return (OCTransfer_StatusResult)((*((Handle_Transfer_Binder*)nativeHandle))->Status());
}

 OCTransfer_StatusExec OCTransfer_Binder::StatusExec()
{
  return (OCTransfer_StatusExec)((*((Handle_Transfer_Binder*)nativeHandle))->StatusExec());
}

 void OCTransfer_Binder::SetStatusExec(OCTransfer_StatusExec stat)
{
  (*((Handle_Transfer_Binder*)nativeHandle))->SetStatusExec((Transfer_StatusExec)stat);
}

 void OCTransfer_Binder::AddFail(System::String^ mess, System::String^ orig)
{
  (*((Handle_Transfer_Binder*)nativeHandle))->AddFail(OCConverter::StringToStandardCString(mess), OCConverter::StringToStandardCString(orig));
}

 void OCTransfer_Binder::AddWarning(System::String^ mess, System::String^ orig)
{
  (*((Handle_Transfer_Binder*)nativeHandle))->AddWarning(OCConverter::StringToStandardCString(mess), OCConverter::StringToStandardCString(orig));
}

OCInterface_Check^ OCTransfer_Binder::Check()
{
  Handle(Interface_Check) tmp = (*((Handle_Transfer_Binder*)nativeHandle))->Check();
  return gcnew OCInterface_Check(&tmp);
}

OCInterface_Check^ OCTransfer_Binder::CCheck()
{
  Handle(Interface_Check) tmp = (*((Handle_Transfer_Binder*)nativeHandle))->CCheck();
  return gcnew OCInterface_Check(&tmp);
}


