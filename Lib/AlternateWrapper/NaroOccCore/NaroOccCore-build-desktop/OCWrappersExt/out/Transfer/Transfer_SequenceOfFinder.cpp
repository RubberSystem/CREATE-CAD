// File generated by CPPExt (CPP file)
//

#include "Transfer_SequenceOfFinder.h"
#include "../Converter.h"
#include "Transfer_Finder.h"
#include "Transfer_SequenceNodeOfSequenceOfFinder.h"


using namespace OCNaroWrappers;

OCTransfer_SequenceOfFinder::OCTransfer_SequenceOfFinder(Transfer_SequenceOfFinder* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTransfer_SequenceOfFinder::OCTransfer_SequenceOfFinder() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Transfer_SequenceOfFinder();
}

OCTransfer_SequenceOfFinder^ OCTransfer_SequenceOfFinder::Assign(OCNaroWrappers::OCTransfer_SequenceOfFinder^ Other)
{
  Transfer_SequenceOfFinder* tmp = new Transfer_SequenceOfFinder();
  *tmp = ((Transfer_SequenceOfFinder*)nativeHandle)->Assign(*((Transfer_SequenceOfFinder*)Other->Handle));
  return gcnew OCTransfer_SequenceOfFinder(tmp);
}

 void OCTransfer_SequenceOfFinder::Append(OCNaroWrappers::OCTransfer_Finder^ T)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->Append(*((Handle_Transfer_Finder*)T->Handle));
}

 void OCTransfer_SequenceOfFinder::Append(OCNaroWrappers::OCTransfer_SequenceOfFinder^ S)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->Append(*((Transfer_SequenceOfFinder*)S->Handle));
}

 void OCTransfer_SequenceOfFinder::Prepend(OCNaroWrappers::OCTransfer_Finder^ T)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->Prepend(*((Handle_Transfer_Finder*)T->Handle));
}

 void OCTransfer_SequenceOfFinder::Prepend(OCNaroWrappers::OCTransfer_SequenceOfFinder^ S)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->Prepend(*((Transfer_SequenceOfFinder*)S->Handle));
}

 void OCTransfer_SequenceOfFinder::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTransfer_Finder^ T)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->InsertBefore(Index, *((Handle_Transfer_Finder*)T->Handle));
}

 void OCTransfer_SequenceOfFinder::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTransfer_SequenceOfFinder^ S)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->InsertBefore(Index, *((Transfer_SequenceOfFinder*)S->Handle));
}

 void OCTransfer_SequenceOfFinder::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTransfer_Finder^ T)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->InsertAfter(Index, *((Handle_Transfer_Finder*)T->Handle));
}

 void OCTransfer_SequenceOfFinder::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTransfer_SequenceOfFinder^ S)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->InsertAfter(Index, *((Transfer_SequenceOfFinder*)S->Handle));
}

OCTransfer_Finder^ OCTransfer_SequenceOfFinder::First()
{
  Handle(Transfer_Finder) tmp = ((Transfer_SequenceOfFinder*)nativeHandle)->First();
  return gcnew OCTransfer_Finder(&tmp);
}

OCTransfer_Finder^ OCTransfer_SequenceOfFinder::Last()
{
  Handle(Transfer_Finder) tmp = ((Transfer_SequenceOfFinder*)nativeHandle)->Last();
  return gcnew OCTransfer_Finder(&tmp);
}

 void OCTransfer_SequenceOfFinder::Split(Standard_Integer Index, OCNaroWrappers::OCTransfer_SequenceOfFinder^ Sub)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->Split(Index, *((Transfer_SequenceOfFinder*)Sub->Handle));
}

OCTransfer_Finder^ OCTransfer_SequenceOfFinder::Value(Standard_Integer Index)
{
  Handle(Transfer_Finder) tmp = ((Transfer_SequenceOfFinder*)nativeHandle)->Value(Index);
  return gcnew OCTransfer_Finder(&tmp);
}

 void OCTransfer_SequenceOfFinder::SetValue(Standard_Integer Index, OCNaroWrappers::OCTransfer_Finder^ I)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->SetValue(Index, *((Handle_Transfer_Finder*)I->Handle));
}

OCTransfer_Finder^ OCTransfer_SequenceOfFinder::ChangeValue(Standard_Integer Index)
{
  Handle(Transfer_Finder) tmp = ((Transfer_SequenceOfFinder*)nativeHandle)->ChangeValue(Index);
  return gcnew OCTransfer_Finder(&tmp);
}

 void OCTransfer_SequenceOfFinder::Remove(Standard_Integer Index)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->Remove(Index);
}

 void OCTransfer_SequenceOfFinder::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Transfer_SequenceOfFinder*)nativeHandle)->Remove(FromIndex, ToIndex);
}


