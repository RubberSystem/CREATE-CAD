// File generated by CPPExt (Transient)
//
#ifndef _Transfer_ActorOfFinderProcess_OCWrappers_HeaderFile
#define _Transfer_ActorOfFinderProcess_OCWrappers_HeaderFile

// include the wrapped class
#include <Transfer_ActorOfFinderProcess.hxx>
#include "../Converter.h"

#include "Transfer_ActorOfProcessForFinder.h"



namespace OCNaroWrappers
{

ref class OCTransfer_Binder;
ref class OCTransfer_Finder;
ref class OCTransfer_ProcessForFinder;
ref class OCTransfer_FinderProcess;
ref class OCStandard_Transient;


//! The original class was renamed. Compatibility only <br>
//! <br>
//!         ModeTrans : a simple way of transmitting a transfer mode from <br>
//!         a user. To be interpreted for each norm <br>
public ref class OCTransfer_ActorOfFinderProcess : OCTransfer_ActorOfProcessForFinder {

protected:
  // dummy constructor;
  OCTransfer_ActorOfFinderProcess(OCDummy^) : OCTransfer_ActorOfProcessForFinder((OCDummy^)nullptr) {};

public:

// constructor from native
OCTransfer_ActorOfFinderProcess(Handle(Transfer_ActorOfFinderProcess)* nativeHandle);

// Methods PUBLIC


OCTransfer_ActorOfFinderProcess();

//! Returns the Transfer Mode, modifiable <br>
 /*instead*/  Standard_Integer ModeTrans() ;


virtual /*instead*/  OCTransfer_Binder^ Transferring(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCTransfer_ProcessForFinder^ TP) override;


virtual /*instead*/  OCTransfer_Binder^ Transfer(OCNaroWrappers::OCTransfer_Finder^ start, OCNaroWrappers::OCTransfer_FinderProcess^ TP) ;


virtual /*instead*/  OCStandard_Transient^ TransferTransient(OCNaroWrappers::OCStandard_Transient^ start, OCNaroWrappers::OCTransfer_FinderProcess^ TP) ;

~OCTransfer_ActorOfFinderProcess()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
