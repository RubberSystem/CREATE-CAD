// File generated by CPPExt (CPP file)
//

#include "BRepClass_FacePassiveClassifier.h"
#include "../Converter.h"
#include "BRepClass_Edge.h"
#include "BRepClass_Intersector.h"
#include "../gp/gp_Lin2d.h"


using namespace OCNaroWrappers;

OCBRepClass_FacePassiveClassifier::OCBRepClass_FacePassiveClassifier(BRepClass_FacePassiveClassifier* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepClass_FacePassiveClassifier::OCBRepClass_FacePassiveClassifier() 
{
  nativeHandle = new BRepClass_FacePassiveClassifier();
}

 void OCBRepClass_FacePassiveClassifier::Reset(OCNaroWrappers::OCgp_Lin2d^ L, Standard_Real P, Standard_Real Tol)
{
  ((BRepClass_FacePassiveClassifier*)nativeHandle)->Reset(*((gp_Lin2d*)L->Handle), P, Tol);
}

 void OCBRepClass_FacePassiveClassifier::Compare(OCNaroWrappers::OCBRepClass_Edge^ E, OCTopAbs_Orientation Or)
{
  ((BRepClass_FacePassiveClassifier*)nativeHandle)->Compare(*((BRepClass_Edge*)E->Handle), (TopAbs_Orientation)Or);
}

 Standard_Real OCBRepClass_FacePassiveClassifier::Parameter()
{
  return ((BRepClass_FacePassiveClassifier*)nativeHandle)->Parameter();
}

OCBRepClass_Intersector^ OCBRepClass_FacePassiveClassifier::Intersector()
{
  BRepClass_Intersector* tmp = new BRepClass_Intersector();
  *tmp = ((BRepClass_FacePassiveClassifier*)nativeHandle)->Intersector();
  return gcnew OCBRepClass_Intersector(tmp);
}

 Standard_Integer OCBRepClass_FacePassiveClassifier::ClosestIntersection()
{
  return ((BRepClass_FacePassiveClassifier*)nativeHandle)->ClosestIntersection();
}

 OCTopAbs_State OCBRepClass_FacePassiveClassifier::State()
{
  return (OCTopAbs_State)(((BRepClass_FacePassiveClassifier*)nativeHandle)->State());
}

 System::Boolean OCBRepClass_FacePassiveClassifier::IsHeadOrEnd()
{
  return OCConverter::StandardBooleanToBoolean(((BRepClass_FacePassiveClassifier*)nativeHandle)->IsHeadOrEnd());
}


