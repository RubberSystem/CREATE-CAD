// File generated by CPPExt (MPV)
//
#ifndef _BRepClass_FacePassiveClassifier_OCWrappers_HeaderFile
#define _BRepClass_FacePassiveClassifier_OCWrappers_HeaderFile

// include native header
#include <BRepClass_FacePassiveClassifier.hxx>
#include "../Converter.h"


#include "../gp/gp_Lin2d.h"
#include "../TopTrans/TopTrans_CurveTransition.h"
#include "BRepClass_Intersector.h"
#include "../TopAbs/TopAbs_State.h"
#include "../TopAbs/TopAbs_Orientation.h"


namespace OCNaroWrappers
{

ref class OCBRepClass_Edge;
ref class OCBRepClass_Intersector;
ref class OCgp_Lin2d;



public ref class OCBRepClass_FacePassiveClassifier  {

protected:
  BRepClass_FacePassiveClassifier* nativeHandle;
  OCBRepClass_FacePassiveClassifier(OCDummy^) {};

public:
  property BRepClass_FacePassiveClassifier* Handle
  {
    BRepClass_FacePassiveClassifier* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepClass_FacePassiveClassifier(BRepClass_FacePassiveClassifier* nativeHandle);

// Methods PUBLIC


OCBRepClass_FacePassiveClassifier();


 /*instead*/  void Reset(OCNaroWrappers::OCgp_Lin2d^ L, Standard_Real P, Standard_Real Tol) ;


 /*instead*/  void Compare(OCNaroWrappers::OCBRepClass_Edge^ E, OCTopAbs_Orientation Or) ;


 /*instead*/  Standard_Real Parameter() ;


 /*instead*/  OCBRepClass_Intersector^ Intersector() ;


 /*instead*/  Standard_Integer ClosestIntersection() ;


 /*instead*/  OCTopAbs_State State() ;


 /*instead*/  System::Boolean IsHeadOrEnd() ;

~OCBRepClass_FacePassiveClassifier()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
