// File generated by CPPExt (Transient)
//
#ifndef _StdSelect_Shape_OCWrappers_HeaderFile
#define _StdSelect_Shape_OCWrappers_HeaderFile

// include the wrapped class
#include <StdSelect_Shape.hxx>
#include "../Converter.h"

#include "../PrsMgr/PrsMgr_PresentableObject.h"

#include "../TopoDS/TopoDS_Shape.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCPrsMgr_PresentationManager3d;
ref class OCPrs3d_Presentation;
ref class OCPrs3d_Projector;
ref class OCPrsMgr_PresentationManager2d;
ref class OCGraphic2d_GraphicObject;
ref class OCGeom_Transformation;


//! Presentable shape only for purpose of display for BRepOwner... <br>
public ref class OCStdSelect_Shape : OCPrsMgr_PresentableObject {

protected:
  // dummy constructor;
  OCStdSelect_Shape(OCDummy^) : OCPrsMgr_PresentableObject((OCDummy^)nullptr) {};

public:

// constructor from native
OCStdSelect_Shape(Handle(StdSelect_Shape)* nativeHandle);

// Methods PUBLIC


OCStdSelect_Shape(OCNaroWrappers::OCTopoDS_Shape^ Sh);


virtual /*instead*/  void Compute(OCNaroWrappers::OCPrsMgr_PresentationManager3d^ aPresentationManager, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, Standard_Integer aMode) override;

//! computes the presentation according to a point of view <br>
//!          given by <aProjector>. <br>
//!          To be Used when the associated degenerated Presentations <br>
//!          have been transformed by <aTrsf> which is not a Pure <br>
//!          Translation. The HLR Prs can't be deducted automatically <br>
//!          WARNING :<aTrsf> must be applied <br>
//!           to the object to display before computation  !!! <br>
virtual /*instead*/  void Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCGeom_Transformation^ aTrsf, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation) override;


 /*instead*/  OCTopoDS_Shape^ Shape() ;


 /*instead*/  void Shape(OCNaroWrappers::OCTopoDS_Shape^ sh) ;

~OCStdSelect_Shape()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
