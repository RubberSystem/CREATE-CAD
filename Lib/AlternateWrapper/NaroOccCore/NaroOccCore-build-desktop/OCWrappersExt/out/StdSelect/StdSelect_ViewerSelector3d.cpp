// File generated by CPPExt (CPP file)
//

#include "StdSelect_ViewerSelector3d.h"
#include "../Converter.h"
#include "../Select3D/Select3D_Projector.h"
#include "../Graphic3d/Graphic3d_Group.h"
#include "../Graphic3d/Graphic3d_Structure.h"
#include "../SelectMgr/SelectMgr_Selection.h"
#include "../V3d/V3d_View.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"


using namespace OCNaroWrappers;

OCStdSelect_ViewerSelector3d::OCStdSelect_ViewerSelector3d(Handle(StdSelect_ViewerSelector3d)* nativeHandle) : OCSelectMgr_ViewerSelector((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StdSelect_ViewerSelector3d(*nativeHandle);
}

OCStdSelect_ViewerSelector3d::OCStdSelect_ViewerSelector3d() : OCSelectMgr_ViewerSelector((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StdSelect_ViewerSelector3d(new StdSelect_ViewerSelector3d());
}

OCStdSelect_ViewerSelector3d::OCStdSelect_ViewerSelector3d(OCNaroWrappers::OCSelect3D_Projector^ aProj) : OCSelectMgr_ViewerSelector((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StdSelect_ViewerSelector3d(new StdSelect_ViewerSelector3d(*((Handle_Select3D_Projector*)aProj->Handle)));
}

 void OCStdSelect_ViewerSelector3d::Convert(OCNaroWrappers::OCSelectMgr_Selection^ aSelection)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->Convert(*((Handle_SelectMgr_Selection*)aSelection->Handle));
}

 void OCStdSelect_ViewerSelector3d::Set(OCNaroWrappers::OCSelect3D_Projector^ aProj)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->Set(*((Handle_Select3D_Projector*)aProj->Handle));
}

 void OCStdSelect_ViewerSelector3d::SetSensitivityMode(OCStdSelect_SensitivityMode aMode)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->SetSensitivityMode((StdSelect_SensitivityMode)aMode);
}

 OCStdSelect_SensitivityMode OCStdSelect_ViewerSelector3d::SensitivityMode()
{
  return (OCStdSelect_SensitivityMode)((*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->SensitivityMode());
}

 void OCStdSelect_ViewerSelector3d::SetPixelTolerance(Standard_Integer aTolerance)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->SetPixelTolerance(aTolerance);
}

 Standard_Integer OCStdSelect_ViewerSelector3d::PixelTolerance()
{
  return (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->PixelTolerance();
}

 void OCStdSelect_ViewerSelector3d::Pick(Standard_Integer XPix, Standard_Integer YPix, OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->Pick(XPix, YPix, *((Handle_V3d_View*)aView->Handle));
}

 void OCStdSelect_ViewerSelector3d::Pick(Standard_Integer XPMin, Standard_Integer YPMin, Standard_Integer XPMax, Standard_Integer YPMax, OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->Pick(XPMin, YPMin, XPMax, YPMax, *((Handle_V3d_View*)aView->Handle));
}

 void OCStdSelect_ViewerSelector3d::Pick(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->Pick(*((TColgp_Array1OfPnt2d*)Polyline->Handle), *((Handle_V3d_View*)aView->Handle));
}

OCSelect3D_Projector^ OCStdSelect_ViewerSelector3d::Projector()
{
  Handle(Select3D_Projector) tmp = (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->Projector();
  return gcnew OCSelect3D_Projector(&tmp);
}

 void OCStdSelect_ViewerSelector3d::ReactivateProjector()
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->ReactivateProjector();
}

 void OCStdSelect_ViewerSelector3d::DisplayAreas(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->DisplayAreas(*((Handle_V3d_View*)aView->Handle));
}

 void OCStdSelect_ViewerSelector3d::ClearAreas(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->ClearAreas(*((Handle_V3d_View*)aView->Handle));
}

 void OCStdSelect_ViewerSelector3d::DisplaySensitive(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->DisplaySensitive(*((Handle_V3d_View*)aView->Handle));
}

 void OCStdSelect_ViewerSelector3d::ClearSensitive(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->ClearSensitive(*((Handle_V3d_View*)aView->Handle));
}

 void OCStdSelect_ViewerSelector3d::DisplaySensitive(OCNaroWrappers::OCSelectMgr_Selection^ aSel, OCNaroWrappers::OCV3d_View^ aView, System::Boolean ClearOthers)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->DisplaySensitive(*((Handle_SelectMgr_Selection*)aSel->Handle), *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(ClearOthers));
}

 void OCStdSelect_ViewerSelector3d::DisplayAreas(OCNaroWrappers::OCSelectMgr_Selection^ aSel, OCNaroWrappers::OCV3d_View^ aView, System::Boolean ClearOthers)
{
  (*((Handle_StdSelect_ViewerSelector3d*)nativeHandle))->DisplayAreas(*((Handle_SelectMgr_Selection*)aSel->Handle), *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(ClearOthers));
}


