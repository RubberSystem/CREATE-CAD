// File generated by CPPExt (Transient)
//
#ifndef _StdSelect_ViewerSelector3d_OCWrappers_HeaderFile
#define _StdSelect_ViewerSelector3d_OCWrappers_HeaderFile

// include the wrapped class
#include <StdSelect_ViewerSelector3d.hxx>
#include "../Converter.h"

#include "../SelectMgr/SelectMgr_ViewerSelector.h"

#include "StdSelect_SensitivityMode.h"


namespace OCNaroWrappers
{

ref class OCSelect3D_Projector;
ref class OCGraphic3d_Group;
ref class OCGraphic3d_Structure;
ref class OCSelectMgr_Selection;
ref class OCV3d_View;
ref class OCTColgp_Array1OfPnt2d;


//! Selector Usable by Viewers from V3d <br>
//! <br>
public ref class OCStdSelect_ViewerSelector3d : OCSelectMgr_ViewerSelector {

protected:
  // dummy constructor;
  OCStdSelect_ViewerSelector3d(OCDummy^) : OCSelectMgr_ViewerSelector((OCDummy^)nullptr) {};

public:

// constructor from native
OCStdSelect_ViewerSelector3d(Handle(StdSelect_ViewerSelector3d)* nativeHandle);

// Methods PUBLIC

//! Constructs an empty 3D selector object. <br>
OCStdSelect_ViewerSelector3d();

//! Constructs a 3D selector object defined by the projector aProj. <br>
OCStdSelect_ViewerSelector3d(OCNaroWrappers::OCSelect3D_Projector^ aProj);

//! Processes the projection of the sensitive  primitives <br>
//!          in the active view ; to be done before the selection action... <br>
virtual /*instead*/  void Convert(OCNaroWrappers::OCSelectMgr_Selection^ aSelection) override;

//! Sets the new projector aProj to replace the one used at construction time. <br>
 /*instead*/  void Set(OCNaroWrappers::OCSelect3D_Projector^ aProj) ;

//! Sets the selection sensitivity mode. SM_WINDOW mode <br>
//! uses the specified pixel tolerance to compute the sensitivity <br>
//! value, SM_VIEW mode allows to define the sensitivity manually. <br>
 /*instead*/  void SetSensitivityMode(OCStdSelect_SensitivityMode aMode) ;

//! Returns the selection sensitivity mode. <br>
 /*instead*/  OCStdSelect_SensitivityMode SensitivityMode() ;

//! Sets the pixel tolerance aTolerance. <br>
 /*instead*/  void SetPixelTolerance(Standard_Integer aTolerance) ;

//! Returns the pixel tolerance. <br>
 /*instead*/  Standard_Integer PixelTolerance() ;

//! Picks the sensitive entity at the pixel coordinates of <br>
//! the mouse Xpix and Ypix.   The selector looks for touched areas and owners. <br>
 /*instead*/  void Pick(Standard_Integer XPix, Standard_Integer YPix, OCNaroWrappers::OCV3d_View^ aView) ;

//! Picks the sensitive entity according to the minimum <br>
//! and maximum pixel values XPMin, YPMin, XPMax <br>
//! and YPMax   defining a 2D area for selection in the 3D view aView. <br>
 /*instead*/  void Pick(Standard_Integer XPMin, Standard_Integer YPMin, Standard_Integer XPMax, Standard_Integer YPMax, OCNaroWrappers::OCV3d_View^ aView) ;

//! pick action  - input pixel values for polyline selection for selection. <br>
 /*instead*/  void Pick(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCV3d_View^ aView) ;

//! Returns the current Projector. <br>
 /*instead*/  OCSelect3D_Projector^ Projector() ;

//! Puts back the address of the current projector in sensitive primitives... <br>
 /*instead*/  void ReactivateProjector() ;

//! Displays sensitive areas found in the view aView. <br>
 /*instead*/  void DisplayAreas(OCNaroWrappers::OCV3d_View^ aView) ;

//! Clears the view aView of sensitive areas found in it. <br>
 /*instead*/  void ClearAreas(OCNaroWrappers::OCV3d_View^ aView) ;

//! Displays the selection aSel found in the view aView. <br>
 /*instead*/  void DisplaySensitive(OCNaroWrappers::OCV3d_View^ aView) ;


 /*instead*/  void ClearSensitive(OCNaroWrappers::OCV3d_View^ aView) ;


 /*instead*/  void DisplaySensitive(OCNaroWrappers::OCSelectMgr_Selection^ aSel, OCNaroWrappers::OCV3d_View^ aView, System::Boolean ClearOthers) ;


 /*instead*/  void DisplayAreas(OCNaroWrappers::OCSelectMgr_Selection^ aSel, OCNaroWrappers::OCV3d_View^ aView, System::Boolean ClearOthers) ;

~OCStdSelect_ViewerSelector3d()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
