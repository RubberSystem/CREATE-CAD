// File generated by CPPExt (Package)
//

#ifndef _StdSelect_OCWrappers_HeaderFile
#define _StdSelect_OCWrappers_HeaderFile

// Include the wrapped header
#include <StdSelect.hxx>

#include "StdSelect_ViewerSelector3d.h"
#include "StdSelect_ViewerSelector2d.h"
#include "StdSelect_BRepSelectionTool.h"
#include "StdSelect_BRepOwner.h"
#include "StdSelect_BRepHilighter.h"
#include "StdSelect_SensitiveText2d.h"
#include "StdSelect_TextProjector2d.h"
#include "StdSelect_EdgeFilter.h"
#include "StdSelect_FaceFilter.h"
#include "StdSelect_ShapeTypeFilter.h"
#include "StdSelect_Prs.h"
#include "StdSelect_Shape.h"
#include "StdSelect_IndexedDataMapOfOwnerPrs.h"
#include "StdSelect_IndexedDataMapNodeOfIndexedDataMapOfOwnerPrs.h"


namespace OCNaroWrappers
{
//! The StdSelect package provides the following services <br>
//! -   the definition of selection modes for topological shapes <br>
//! -   the definition of several concrete filtertandard <br>
//!   Selection2d.ap classes <br>
//! -   2D and 3D viewer selectors. <br>
//!  Note that each new Interactive Object must have all <br>
//! its selection modes defined. <br>
//!        Standard Classes is useful to build <br>
//!          3D Selectable Objects, and to process <br>
//!          3D Selections: <br>
//! <br>
//!          - Implementation of View Selector for dynamic selection <br>
//!            in Views from V3d. <br>
//! <br>
//!          - Implementation of Tool class to decompose 3D BRep Objects <br>
//!            into sensitive Primitives for every desired mode of selection <br>
//!            (selection of vertex,edges,wires,faces,...) <br>
//! <br>
//!          -  Implementation of dedicated Sensitives Entities: <br>
//!             Text for 2D Views (linked to Specific 2D projectors.) <br>
public ref class OCStdSelect abstract sealed
{

public:
// Methods

//! Returns the 3D projector for the view aView. <br>
static /*instead*/  OCSelect3D_Projector^ GetProjector(OCNaroWrappers::OCV3d_View^ aView) ;

//! puts The same drawer in every BRepOwner Of SensitivePrimitive <br>
//!          Used Only for hilight Of BRepOwner... <br>
static /*instead*/  void SetDrawerForBRepOwner(OCNaroWrappers::OCSelectMgr_Selection^ aSelection, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer) ;


};

}; // OCNaroWrappers

#endif
