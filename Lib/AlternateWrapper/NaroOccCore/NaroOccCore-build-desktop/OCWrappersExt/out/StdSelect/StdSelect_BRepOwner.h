// File generated by CPPExt (Transient)
//
#ifndef _StdSelect_BRepOwner_OCWrappers_HeaderFile
#define _StdSelect_BRepOwner_OCWrappers_HeaderFile

// include the wrapped class
#include <StdSelect_BRepOwner.hxx>
#include "../Converter.h"

#include "../SelectMgr/SelectMgr_EntityOwner.h"

#include "../TopoDS/TopoDS_Shape.h"
#include "../Quantity/Quantity_NameOfColor.h"


namespace OCNaroWrappers
{

ref class OCStdSelect_Shape;
ref class OCTopoDS_Shape;
ref class OCSelectMgr_SelectableObject;
ref class OCPrsMgr_PresentationManager;
ref class OCPrsMgr_PresentationManager3d;
ref class OCTopLoc_Location;


//! Defines Specific Owners for Sensitive Primitives <br>
//!          (Sensitive Segments,Circles...). <br>
//!          Used in Dynamic Selection Mechanism. <br>
//!          A BRepOwner has an Owner (the shape it represents) <br>
//!          and Users (One or More Transient entities). <br>
public ref class OCStdSelect_BRepOwner : OCSelectMgr_EntityOwner {

protected:
  // dummy constructor;
  OCStdSelect_BRepOwner(OCDummy^) : OCSelectMgr_EntityOwner((OCDummy^)nullptr) {};

public:

// constructor from native
OCStdSelect_BRepOwner(Handle(StdSelect_BRepOwner)* nativeHandle);

// Methods PUBLIC

//! Constructs an owner specification framework defined <br>
//! by the priority aPriority. <br>
OCStdSelect_BRepOwner(Standard_Integer aPriority);

//! Constructs an owner specification framework defined <br>
//! by the shape aShape and the priority aPriority. <br>
//! aShape and aPriority are stored in this framework. If <br>
//! more than one owner are detected during dynamic <br>
//! selection, the one with the highest priority is the one stored. <br>
OCStdSelect_BRepOwner(OCNaroWrappers::OCTopoDS_Shape^ aShape, Standard_Integer aPriority, System::Boolean ComesFromDecomposition);

//! Constructs an owner specification framework defined <br>
//! by the shape aShape, the selectable object theOrigin <br>
//! and the priority aPriority. <br>
//! aShape, theOrigin and aPriority are stored in this <br>
//! framework. If more than one owner are detected <br>
//! during dynamic selection, the one with the highest <br>
//! priority is the one stored. <br>
OCStdSelect_BRepOwner(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCSelectMgr_SelectableObject^ theOrigin, Standard_Integer aPriority, System::Boolean FromDecomposition);

//! returns False if no shape was set <br>
//! <br>
 /*instead*/  System::Boolean HasShape() ;

//! <FromDecomposition> indicates whether <aShape> <br>
//!          comes from decomposition of a bigger shape. <br>
 /*instead*/  void Set(OCNaroWrappers::OCTopoDS_Shape^ aShape, System::Boolean FromDecomposition) ;


 /*instead*/  System::Boolean ComesFromDecomposition() ;


 /*instead*/  OCTopoDS_Shape^ Shape() ;


//! Returns true if this framework has a highlight mode defined for it. <br>
 /*instead*/  System::Boolean HasHilightMode() ;

//! Sets the highlight mode for this framework. <br>
//! This defines the type of display used to highlight the <br>
//! owner of the shape when it is detected by the selector. <br>
//! The default type of display is wireframe, defined by the index 0. <br>
 /*instead*/  void SetHilightMode(Standard_Integer aMode) ;

//! Resets the higlight mode for this framework. <br>
//! This defines the type of display used to highlight the <br>
//! owner of the shape when it is detected by the selector. <br>
//! The default type of display is wireframe, defined by the index 0. <br>
 /*instead*/  void ResetHilightMode() ;

//! Returns the highlight mode for this framework. <br>
//! This defines the type of display used to highlight the <br>
//! owner of the shape when it is detected by the selector. <br>
//! The default type of display is wireframe, defined by the index 0. <br>
 /*instead*/  Standard_Integer HilightMode() ;

//! Returns true if an object with the selection mode <br>
//! aMode is highlighted in the presentation manager aPM. <br>
virtual /*instead*/  System::Boolean IsHilighted(OCNaroWrappers::OCPrsMgr_PresentationManager^ aPM, Standard_Integer aMode) override;


virtual /*instead*/  void Hilight() override;

//! Returns the selection mode aMode defining the type <br>
//! of shape highlighted in the presentation manager aPM. <br>
virtual /*instead*/  void Hilight(OCNaroWrappers::OCPrsMgr_PresentationManager^ aPM, Standard_Integer aMode) override;


virtual /*instead*/  void HilightWithColor(OCNaroWrappers::OCPrsMgr_PresentationManager3d^ aPM, OCQuantity_NameOfColor aCol, Standard_Integer aMode) override;

//! Removes highlighting from the type of shape <br>
//! identified the selection mode aMode in the presentation manager aPM. <br>
virtual /*instead*/  void Unhilight(OCNaroWrappers::OCPrsMgr_PresentationManager^ aPM, Standard_Integer aMode) override;

//! Clears the presentation manager object aPM of all <br>
//! shapes with the selection mode aMode. <br>
virtual /*instead*/  void Clear(OCNaroWrappers::OCPrsMgr_PresentationManager^ aPM, Standard_Integer aMode) override;


virtual /*instead*/  void SetLocation(OCNaroWrappers::OCTopLoc_Location^ aLoc) override;


virtual /*instead*/  void ResetLocation() override;

//! Set Z layer ID and update all presentations. <br>
virtual /*instead*/  void SetZLayer(OCNaroWrappers::OCPrsMgr_PresentationManager^ thePrsMgr, Standard_Integer theLayerId) override;

~OCStdSelect_BRepOwner()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
