// File generated by CPPExt (MPV)
//
#ifndef _StdSelect_BRepSelectionTool_OCWrappers_HeaderFile
#define _StdSelect_BRepSelectionTool_OCWrappers_HeaderFile

// include native header
#include <StdSelect_BRepSelectionTool.hxx>
#include "../Converter.h"


#include "../TopAbs/TopAbs_ShapeEnum.h"


namespace OCNaroWrappers
{

ref class OCSelectMgr_Selection;
ref class OCTopoDS_Shape;
ref class OCSelectMgr_SelectableObject;
ref class OCStdSelect_BRepOwner;
ref class OCSelect3D_SensitiveEntity;
ref class OCTopoDS_Face;
ref class OCSelect3D_ListOfSensitive;


//! Tool to create specific selections (sets of primitives) <br>
//!          for Shapes from Topology. <br>
//!          These Selections may be used  in dynamic selection <br>
//!          Mechanism <br>
//!          Given a Shape and a mode of selection <br>
//!          (selection of vertices, <br>
//!          edges,faces ...) , This Tool Computes corresponding sensitive primitives, <br>
//!          puts them in an entity called Selection (see package SelectMgr) and returns it. <br>
//! <br>
//! <br>
//!          A Priority for the decomposed pickable objects can be given ; <br>
//!         by default There is A Preset Hierachy: <br>
//!             Vertex             priority : 5 <br>
//!             Edge               priority : 4 <br>
//!             Wire               priority : 3 <br>
//!             Face               priority : 2 <br>
//!             Shell,solid,shape  priority : 1 <br>
//!         the default priority in the following methods has no sense - it's only taken in account <br>
//!         when the user gives a value between 0 and 10. <br>
//!          IMPORTANT : This decomposition creates BRepEntityOwner instances (from StdSelect). <br>
//!                      which are stored in the Sensitive Entities coming from The Decomposition. <br>
//! <br>
//!                      the result of picking in a ViewerSelector return EntityOwner from SelectMgr; <br>
//!                      to know what kind of object was picked : <br>
//! <br>
//!   ENTITY_OWNER -> Selectable() gives the selectableobject which <br>
//!                          was decomposed into pickable elements. <br>
//!  Handle(StdSelect_BRepOwner)::DownCast(ENTITY_OWNER) -> Shape() <br>
//!                            gives the real picked shape (edge,vertex,shape...) <br>
//! <br>
public ref class OCStdSelect_BRepSelectionTool  {

protected:
  StdSelect_BRepSelectionTool* nativeHandle;
  OCStdSelect_BRepSelectionTool(OCDummy^) {};

public:
  property StdSelect_BRepSelectionTool* Handle
  {
    StdSelect_BRepSelectionTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCStdSelect_BRepSelectionTool(StdSelect_BRepSelectionTool* nativeHandle);

// Methods PUBLIC

//! Decomposition of <aShape> into sensitive entities following <br>
//!         a mode of decomposition <aType>. These entities are stored in <aSelection>. <br>
//!         BrepOwners are created to store the identity of the picked shapes <br>
//!         during the selection process. <br>
//!         In those BRepOwners is also stored the original shape. <br>
//!         But One can't get the selectable object which was decomposed to give <br>
//!         the sensitive entities. <br>
//!        maximal parameter is used for infinite objects, to limit the sensitive Domain.... <br>
//!         If AutoTriangulation = True, a Triangulation will be <br>
//!         computed for faces which have no existing one. <br>
//!         if AutoTriangulation = False the old algorithm will be <br>
//!         called to compute sensitive entities on faces. <br>
static /*instead*/  void Load(OCNaroWrappers::OCSelectMgr_Selection^ aSelection, OCNaroWrappers::OCTopoDS_Shape^ aShape, OCTopAbs_ShapeEnum aType, Standard_Real theDeflection, Standard_Real theDeviationAngle, System::Boolean AutoTriangulation, Standard_Integer aPriority, Standard_Integer NbPOnEdge, Standard_Real MaximalParameter) ;

//!  Same  functionnalities  ; the  only <br>
//!        difference is that  the selectable object from which the <br>
//!        selection comes is stored in each Sensitive EntityOwner; <br>//!decomposition of <aShape> into sensitive entities following <br>
//!         a mode of decomposition <aType>. These entities are stored in <aSelection> <br>
//!         The Major difference is that the known users are first inserted in the <br>
//!         BRepOwners. the original shape is the last user... <br>
//!         (see EntityOwner from SelectBasics and BrepOwner)... <br>
static /*instead*/  void Load(OCNaroWrappers::OCSelectMgr_Selection^ aSelection, OCNaroWrappers::OCSelectMgr_SelectableObject^ Origin, OCNaroWrappers::OCTopoDS_Shape^ aShape, OCTopAbs_ShapeEnum aType, Standard_Real theDeflection, Standard_Real theDeviationAngle, System::Boolean AutoTriangulation, Standard_Integer aPriority, Standard_Integer NbPOnEdge, Standard_Real MaximalParameter) ;

//! Returns the standard priority of the shape aShap having the type aType. <br>
//! This priority is passed to a StdSelect_BRepOwner object. <br>
//! You can use the function Load to modify the <br>
//! selection priority of an owner to make one entity <br>
//! more selectable than another one. <br>
static /*instead*/  Standard_Integer GetStandardPriority(OCNaroWrappers::OCTopoDS_Shape^ aShap, OCTopAbs_ShapeEnum aType) ;

//! Computes the sensitive primitives corresponding to <br>
//! the subshape aShape with the owner anOwner. <br>
//! Stores them in the SelectMgr_Selection object, and returns this object. <br>
//! The number NbPOnEdge is used to define edges and wires. <br>
//! In the case of infinite objects, the value <br>
//! MaximalParameter serves to limit computation time <br>
//! by limiting the sensitive area. The default value is 500. <br>
//! If AutoTriangulation is true, triangulation will be <br>
//! computed for the faces which have none. If it is false, <br>
//! sensitive entities on these faces will be calculated. <br>
static /*instead*/  void ComputeSensitive(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCStdSelect_BRepOwner^ anOwner, OCNaroWrappers::OCSelectMgr_Selection^ aSelection, Standard_Real theDeflection, Standard_Real theDeviationAngle, Standard_Integer NbPOnEdge, Standard_Real MaximalParameter, System::Boolean AutoTriangulation) ;

//!   appends   to <OutList>   the  3D <br>
//!          sensitive entities  created  for  selection of <aFace> <br>
//!         if<InteriorFlag> =  False  the face  will  be sensitive only on its boundary <br>
static /*instead*/  System::Boolean GetSensitiveForFace(OCNaroWrappers::OCTopoDS_Face^ aFace, OCNaroWrappers::OCStdSelect_BRepOwner^ anOwner, OCNaroWrappers::OCSelect3D_ListOfSensitive^ OutList, System::Boolean AutoTriangulation, Standard_Integer NbPOnEdge, Standard_Real MaxiParam, System::Boolean InteriorFlag) ;

~OCStdSelect_BRepSelectionTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
