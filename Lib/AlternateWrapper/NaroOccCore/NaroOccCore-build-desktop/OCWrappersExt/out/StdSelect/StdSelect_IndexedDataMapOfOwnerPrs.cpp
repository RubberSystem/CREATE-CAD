// File generated by CPPExt (CPP file)
//

#include "StdSelect_IndexedDataMapOfOwnerPrs.h"
#include "../Converter.h"
#include "../SelectBasics/SelectBasics_EntityOwner.h"
#include "StdSelect_Prs.h"
#include "../TColStd/TColStd_MapTransientHasher.h"
#include "StdSelect_IndexedDataMapNodeOfIndexedDataMapOfOwnerPrs.h"


using namespace OCNaroWrappers;

OCStdSelect_IndexedDataMapOfOwnerPrs::OCStdSelect_IndexedDataMapOfOwnerPrs(StdSelect_IndexedDataMapOfOwnerPrs* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCStdSelect_IndexedDataMapOfOwnerPrs::OCStdSelect_IndexedDataMapOfOwnerPrs(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new StdSelect_IndexedDataMapOfOwnerPrs(NbBuckets);
}

OCStdSelect_IndexedDataMapOfOwnerPrs^ OCStdSelect_IndexedDataMapOfOwnerPrs::Assign(OCNaroWrappers::OCStdSelect_IndexedDataMapOfOwnerPrs^ Other)
{
  StdSelect_IndexedDataMapOfOwnerPrs* tmp = new StdSelect_IndexedDataMapOfOwnerPrs(0);
  *tmp = ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->Assign(*((StdSelect_IndexedDataMapOfOwnerPrs*)Other->Handle));
  return gcnew OCStdSelect_IndexedDataMapOfOwnerPrs(tmp);
}

 void OCStdSelect_IndexedDataMapOfOwnerPrs::ReSize(Standard_Integer NbBuckets)
{
  ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCStdSelect_IndexedDataMapOfOwnerPrs::Add(OCNaroWrappers::OCSelectBasics_EntityOwner^ K, OCNaroWrappers::OCStdSelect_Prs^ I)
{
  return ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->Add(*((Handle_SelectBasics_EntityOwner*)K->Handle), *((Handle_StdSelect_Prs*)I->Handle));
}

 void OCStdSelect_IndexedDataMapOfOwnerPrs::Substitute(Standard_Integer I, OCNaroWrappers::OCSelectBasics_EntityOwner^ K, OCNaroWrappers::OCStdSelect_Prs^ T)
{
  ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->Substitute(I, *((Handle_SelectBasics_EntityOwner*)K->Handle), *((Handle_StdSelect_Prs*)T->Handle));
}

 void OCStdSelect_IndexedDataMapOfOwnerPrs::RemoveLast()
{
  ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->RemoveLast();
}

 System::Boolean OCStdSelect_IndexedDataMapOfOwnerPrs::Contains(OCNaroWrappers::OCSelectBasics_EntityOwner^ K)
{
  return OCConverter::StandardBooleanToBoolean(((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->Contains(*((Handle_SelectBasics_EntityOwner*)K->Handle)));
}

OCSelectBasics_EntityOwner^ OCStdSelect_IndexedDataMapOfOwnerPrs::FindKey(Standard_Integer I)
{
  Handle(SelectBasics_EntityOwner) tmp = ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->FindKey(I);
  return gcnew OCSelectBasics_EntityOwner(&tmp);
}

OCStdSelect_Prs^ OCStdSelect_IndexedDataMapOfOwnerPrs::FindFromIndex(Standard_Integer I)
{
  Handle(StdSelect_Prs) tmp = ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->FindFromIndex(I);
  return gcnew OCStdSelect_Prs(&tmp);
}

OCStdSelect_Prs^ OCStdSelect_IndexedDataMapOfOwnerPrs::ChangeFromIndex(Standard_Integer I)
{
  Handle(StdSelect_Prs) tmp = ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->ChangeFromIndex(I);
  return gcnew OCStdSelect_Prs(&tmp);
}

 Standard_Integer OCStdSelect_IndexedDataMapOfOwnerPrs::FindIndex(OCNaroWrappers::OCSelectBasics_EntityOwner^ K)
{
  return ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->FindIndex(*((Handle_SelectBasics_EntityOwner*)K->Handle));
}

OCStdSelect_Prs^ OCStdSelect_IndexedDataMapOfOwnerPrs::FindFromKey(OCNaroWrappers::OCSelectBasics_EntityOwner^ K)
{
  Handle(StdSelect_Prs) tmp = ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->FindFromKey(*((Handle_SelectBasics_EntityOwner*)K->Handle));
  return gcnew OCStdSelect_Prs(&tmp);
}

OCStdSelect_Prs^ OCStdSelect_IndexedDataMapOfOwnerPrs::ChangeFromKey(OCNaroWrappers::OCSelectBasics_EntityOwner^ K)
{
  Handle(StdSelect_Prs) tmp = ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->ChangeFromKey(*((Handle_SelectBasics_EntityOwner*)K->Handle));
  return gcnew OCStdSelect_Prs(&tmp);
}

 Standard_Address OCStdSelect_IndexedDataMapOfOwnerPrs::FindFromKey1(OCNaroWrappers::OCSelectBasics_EntityOwner^ K)
{
  return ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->FindFromKey1(*((Handle_SelectBasics_EntityOwner*)K->Handle));
}

 Standard_Address OCStdSelect_IndexedDataMapOfOwnerPrs::ChangeFromKey1(OCNaroWrappers::OCSelectBasics_EntityOwner^ K)
{
  return ((StdSelect_IndexedDataMapOfOwnerPrs*)nativeHandle)->ChangeFromKey1(*((Handle_SelectBasics_EntityOwner*)K->Handle));
}


