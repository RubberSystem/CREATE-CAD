// File generated by CPPExt (MPV)
//
#ifndef _StdSelect_BRepHilighter_OCWrappers_HeaderFile
#define _StdSelect_BRepHilighter_OCWrappers_HeaderFile

// include native header
#include <StdSelect_BRepHilighter.hxx>
#include "../Converter.h"


#include "../Quantity/Quantity_NameOfColor.h"
#include "StdSelect_TypeOfResult.h"
#include "../TColStd/TColStd_MapOfInteger.h"
#include "StdSelect_IndexedDataMapOfOwnerPrs.h"


namespace OCNaroWrappers
{

ref class OCStdSelect_ViewerSelector3d;
ref class OCV3d_Viewer;
ref class OCPrs3d_Drawer;
ref class OCVisual3d_TransientManager;
ref class OCV3d_View;


//! Tool to manage hilight of BRepOwners  during the selection process <br>
//!          -> Built with a ViewSelector3d. <br>
//!          -> Can hilight all the detected elements at the mouse position or <br>
//!                 just the closest one. <br>
//!          How Use It: <br>
//!          TheSelector -> SelectPix (Xmouse,YMouse); <br>
//!          TheBRepHilighter->Process (); <br>
//! <br>
//!          When good choice <br>
//! <br>
//!          toto = TheSelector->LastPicked(); <br>
public ref class OCStdSelect_BRepHilighter  {

protected:
  StdSelect_BRepHilighter* nativeHandle;
  OCStdSelect_BRepHilighter(OCDummy^) {};

public:
  property StdSelect_BRepHilighter* Handle
  {
    StdSelect_BRepHilighter* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCStdSelect_BRepHilighter(StdSelect_BRepHilighter* nativeHandle);

// Methods PUBLIC


OCStdSelect_BRepHilighter();


OCStdSelect_BRepHilighter(OCNaroWrappers::OCStdSelect_ViewerSelector3d^ aSelector, OCNaroWrappers::OCV3d_Viewer^ aViewer, OCQuantity_NameOfColor acolor, OCStdSelect_TypeOfResult aType);


 /*instead*/  void Set(OCNaroWrappers::OCStdSelect_ViewerSelector3d^ aSelector) ;


 /*instead*/  void Set(OCNaroWrappers::OCV3d_Viewer^ aViewer) ;


 /*instead*/  void Set(OCQuantity_NameOfColor acolor) ;


 /*instead*/  void Set(OCStdSelect_TypeOfResult atype) ;

//! updates the viewer with the selection. <br>
 /*instead*/  void Process() ;

//! updates only the view with the selection. <br>
//!          The updating will be made using immediate drawing which is far quicker. <br>
 /*instead*/  void Process(OCNaroWrappers::OCV3d_View^ aView, System::Boolean DoubleBuffer) ;

//! Clears the hilight structures <br>
//!          which were created during the selection action; <br>
//!          must me called after each selection loop; <br>
//! <br>
 /*instead*/  void Clear() ;


 /*instead*/  OCPrs3d_Drawer^ Drawer() ;

~OCStdSelect_BRepHilighter()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
