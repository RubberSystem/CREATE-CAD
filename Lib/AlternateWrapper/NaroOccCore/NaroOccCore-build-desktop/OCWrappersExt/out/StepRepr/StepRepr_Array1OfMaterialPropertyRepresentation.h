// File generated by CPPExt (MPV)
//
#ifndef _StepRepr_Array1OfMaterialPropertyRepresentation_OCWrappers_HeaderFile
#define _StepRepr_Array1OfMaterialPropertyRepresentation_OCWrappers_HeaderFile

// include native header
#include <StepRepr_Array1OfMaterialPropertyRepresentation.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCStepRepr_MaterialPropertyRepresentation;



public ref class OCStepRepr_Array1OfMaterialPropertyRepresentation  {

protected:
  StepRepr_Array1OfMaterialPropertyRepresentation* nativeHandle;
  OCStepRepr_Array1OfMaterialPropertyRepresentation(OCDummy^) {};

public:
  property StepRepr_Array1OfMaterialPropertyRepresentation* Handle
  {
    StepRepr_Array1OfMaterialPropertyRepresentation* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCStepRepr_Array1OfMaterialPropertyRepresentation(StepRepr_Array1OfMaterialPropertyRepresentation* nativeHandle);

// Methods PUBLIC


OCStepRepr_Array1OfMaterialPropertyRepresentation(Standard_Integer Low, Standard_Integer Up);


OCStepRepr_Array1OfMaterialPropertyRepresentation(OCNaroWrappers::OCStepRepr_MaterialPropertyRepresentation^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCStepRepr_MaterialPropertyRepresentation^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCStepRepr_Array1OfMaterialPropertyRepresentation^ Assign(OCNaroWrappers::OCStepRepr_Array1OfMaterialPropertyRepresentation^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCStepRepr_MaterialPropertyRepresentation^ Value) ;


 /*instead*/  OCStepRepr_MaterialPropertyRepresentation^ Value(Standard_Integer Index) ;


 /*instead*/  OCStepRepr_MaterialPropertyRepresentation^ ChangeValue(Standard_Integer Index) ;

~OCStepRepr_Array1OfMaterialPropertyRepresentation()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
