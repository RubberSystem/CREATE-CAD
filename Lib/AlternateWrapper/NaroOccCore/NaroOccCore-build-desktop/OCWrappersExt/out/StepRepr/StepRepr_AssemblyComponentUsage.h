// File generated by CPPExt (Transient)
//
#ifndef _StepRepr_AssemblyComponentUsage_OCWrappers_HeaderFile
#define _StepRepr_AssemblyComponentUsage_OCWrappers_HeaderFile

// include the wrapped class
#include <StepRepr_AssemblyComponentUsage.hxx>
#include "../Converter.h"

#include "StepRepr_ProductDefinitionUsage.h"



namespace OCNaroWrappers
{

ref class OCTCollection_HAsciiString;
ref class OCStepBasic_ProductDefinition;


//! Representation of STEP entity AssemblyComponentUsage <br>
public ref class OCStepRepr_AssemblyComponentUsage : OCStepRepr_ProductDefinitionUsage {

protected:
  // dummy constructor;
  OCStepRepr_AssemblyComponentUsage(OCDummy^) : OCStepRepr_ProductDefinitionUsage((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepRepr_AssemblyComponentUsage(Handle(StepRepr_AssemblyComponentUsage)* nativeHandle);

// Methods PUBLIC

//! Empty constructor <br>
OCStepRepr_AssemblyComponentUsage();

//! Initialize all fields (own and inherited) <br>
 /*instead*/  void Init(OCNaroWrappers::OCTCollection_HAsciiString^ aProductDefinitionRelationship_Id, OCNaroWrappers::OCTCollection_HAsciiString^ aProductDefinitionRelationship_Name, System::Boolean hasProductDefinitionRelationship_Description, OCNaroWrappers::OCTCollection_HAsciiString^ aProductDefinitionRelationship_Description, OCNaroWrappers::OCStepBasic_ProductDefinition^ aProductDefinitionRelationship_RelatingProductDefinition, OCNaroWrappers::OCStepBasic_ProductDefinition^ aProductDefinitionRelationship_RelatedProductDefinition, System::Boolean hasReferenceDesignator, OCNaroWrappers::OCTCollection_HAsciiString^ aReferenceDesignator) ;

//! Returns field ReferenceDesignator <br>
 /*instead*/  OCTCollection_HAsciiString^ ReferenceDesignator() ;

//! Set field ReferenceDesignator <br>
 /*instead*/  void SetReferenceDesignator(OCNaroWrappers::OCTCollection_HAsciiString^ ReferenceDesignator) ;

//! Returns True if optional field ReferenceDesignator is defined <br>
 /*instead*/  System::Boolean HasReferenceDesignator() ;

~OCStepRepr_AssemblyComponentUsage()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
