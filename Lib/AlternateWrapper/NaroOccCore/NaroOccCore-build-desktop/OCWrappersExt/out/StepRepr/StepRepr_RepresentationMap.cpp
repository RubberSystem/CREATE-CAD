// File generated by CPPExt (CPP file)
//

#include "StepRepr_RepresentationMap.h"
#include "../Converter.h"
#include "StepRepr_RepresentationItem.h"
#include "StepRepr_Representation.h"


using namespace OCNaroWrappers;

OCStepRepr_RepresentationMap::OCStepRepr_RepresentationMap(Handle(StepRepr_RepresentationMap)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepRepr_RepresentationMap(*nativeHandle);
}

OCStepRepr_RepresentationMap::OCStepRepr_RepresentationMap() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepRepr_RepresentationMap(new StepRepr_RepresentationMap());
}

 void OCStepRepr_RepresentationMap::Init(OCNaroWrappers::OCStepRepr_RepresentationItem^ aMappingOrigin, OCNaroWrappers::OCStepRepr_Representation^ aMappedRepresentation)
{
  (*((Handle_StepRepr_RepresentationMap*)nativeHandle))->Init(*((Handle_StepRepr_RepresentationItem*)aMappingOrigin->Handle), *((Handle_StepRepr_Representation*)aMappedRepresentation->Handle));
}

 void OCStepRepr_RepresentationMap::SetMappingOrigin(OCNaroWrappers::OCStepRepr_RepresentationItem^ aMappingOrigin)
{
  (*((Handle_StepRepr_RepresentationMap*)nativeHandle))->SetMappingOrigin(*((Handle_StepRepr_RepresentationItem*)aMappingOrigin->Handle));
}

OCStepRepr_RepresentationItem^ OCStepRepr_RepresentationMap::MappingOrigin()
{
  Handle(StepRepr_RepresentationItem) tmp = (*((Handle_StepRepr_RepresentationMap*)nativeHandle))->MappingOrigin();
  return gcnew OCStepRepr_RepresentationItem(&tmp);
}

 void OCStepRepr_RepresentationMap::SetMappedRepresentation(OCNaroWrappers::OCStepRepr_Representation^ aMappedRepresentation)
{
  (*((Handle_StepRepr_RepresentationMap*)nativeHandle))->SetMappedRepresentation(*((Handle_StepRepr_Representation*)aMappedRepresentation->Handle));
}

OCStepRepr_Representation^ OCStepRepr_RepresentationMap::MappedRepresentation()
{
  Handle(StepRepr_Representation) tmp = (*((Handle_StepRepr_RepresentationMap*)nativeHandle))->MappedRepresentation();
  return gcnew OCStepRepr_Representation(&tmp);
}


