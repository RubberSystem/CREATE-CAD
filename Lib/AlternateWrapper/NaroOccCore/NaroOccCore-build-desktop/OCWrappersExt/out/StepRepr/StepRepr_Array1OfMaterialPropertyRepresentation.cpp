// File generated by CPPExt (CPP file)
//

#include "StepRepr_Array1OfMaterialPropertyRepresentation.h"
#include "../Converter.h"
#include "StepRepr_MaterialPropertyRepresentation.h"


using namespace OCNaroWrappers;

OCStepRepr_Array1OfMaterialPropertyRepresentation::OCStepRepr_Array1OfMaterialPropertyRepresentation(StepRepr_Array1OfMaterialPropertyRepresentation* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCStepRepr_Array1OfMaterialPropertyRepresentation::OCStepRepr_Array1OfMaterialPropertyRepresentation(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new StepRepr_Array1OfMaterialPropertyRepresentation(Low, Up);
}

OCStepRepr_Array1OfMaterialPropertyRepresentation::OCStepRepr_Array1OfMaterialPropertyRepresentation(OCNaroWrappers::OCStepRepr_MaterialPropertyRepresentation^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new StepRepr_Array1OfMaterialPropertyRepresentation(*((Handle_StepRepr_MaterialPropertyRepresentation*)Item->Handle), Low, Up);
}

 void OCStepRepr_Array1OfMaterialPropertyRepresentation::Init(OCNaroWrappers::OCStepRepr_MaterialPropertyRepresentation^ V)
{
  ((StepRepr_Array1OfMaterialPropertyRepresentation*)nativeHandle)->Init(*((Handle_StepRepr_MaterialPropertyRepresentation*)V->Handle));
}

 System::Boolean OCStepRepr_Array1OfMaterialPropertyRepresentation::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((StepRepr_Array1OfMaterialPropertyRepresentation*)nativeHandle)->IsAllocated());
}

OCStepRepr_Array1OfMaterialPropertyRepresentation^ OCStepRepr_Array1OfMaterialPropertyRepresentation::Assign(OCNaroWrappers::OCStepRepr_Array1OfMaterialPropertyRepresentation^ Other)
{
  StepRepr_Array1OfMaterialPropertyRepresentation* tmp = new StepRepr_Array1OfMaterialPropertyRepresentation(0, 0);
  *tmp = ((StepRepr_Array1OfMaterialPropertyRepresentation*)nativeHandle)->Assign(*((StepRepr_Array1OfMaterialPropertyRepresentation*)Other->Handle));
  return gcnew OCStepRepr_Array1OfMaterialPropertyRepresentation(tmp);
}

 Standard_Integer OCStepRepr_Array1OfMaterialPropertyRepresentation::Length()
{
  return ((StepRepr_Array1OfMaterialPropertyRepresentation*)nativeHandle)->Length();
}

 Standard_Integer OCStepRepr_Array1OfMaterialPropertyRepresentation::Lower()
{
  return ((StepRepr_Array1OfMaterialPropertyRepresentation*)nativeHandle)->Lower();
}

 Standard_Integer OCStepRepr_Array1OfMaterialPropertyRepresentation::Upper()
{
  return ((StepRepr_Array1OfMaterialPropertyRepresentation*)nativeHandle)->Upper();
}

 void OCStepRepr_Array1OfMaterialPropertyRepresentation::SetValue(Standard_Integer Index, OCNaroWrappers::OCStepRepr_MaterialPropertyRepresentation^ Value)
{
  ((StepRepr_Array1OfMaterialPropertyRepresentation*)nativeHandle)->SetValue(Index, *((Handle_StepRepr_MaterialPropertyRepresentation*)Value->Handle));
}

OCStepRepr_MaterialPropertyRepresentation^ OCStepRepr_Array1OfMaterialPropertyRepresentation::Value(Standard_Integer Index)
{
  Handle(StepRepr_MaterialPropertyRepresentation) tmp = ((StepRepr_Array1OfMaterialPropertyRepresentation*)nativeHandle)->Value(Index);
  return gcnew OCStepRepr_MaterialPropertyRepresentation(&tmp);
}

OCStepRepr_MaterialPropertyRepresentation^ OCStepRepr_Array1OfMaterialPropertyRepresentation::ChangeValue(Standard_Integer Index)
{
  Handle(StepRepr_MaterialPropertyRepresentation) tmp = ((StepRepr_Array1OfMaterialPropertyRepresentation*)nativeHandle)->ChangeValue(Index);
  return gcnew OCStepRepr_MaterialPropertyRepresentation(&tmp);
}


