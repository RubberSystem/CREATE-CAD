// File generated by CPPExt (CPP file)
//

#include "StepRepr_HArray1OfPropertyDefinitionRepresentation.h"
#include "../Converter.h"
#include "StepRepr_PropertyDefinitionRepresentation.h"
#include "StepRepr_Array1OfPropertyDefinitionRepresentation.h"


using namespace OCNaroWrappers;

OCStepRepr_HArray1OfPropertyDefinitionRepresentation::OCStepRepr_HArray1OfPropertyDefinitionRepresentation(Handle(StepRepr_HArray1OfPropertyDefinitionRepresentation)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation(*nativeHandle);
}

OCStepRepr_HArray1OfPropertyDefinitionRepresentation::OCStepRepr_HArray1OfPropertyDefinitionRepresentation(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation(new StepRepr_HArray1OfPropertyDefinitionRepresentation(Low, Up));
}

OCStepRepr_HArray1OfPropertyDefinitionRepresentation::OCStepRepr_HArray1OfPropertyDefinitionRepresentation(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCStepRepr_PropertyDefinitionRepresentation^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation(new StepRepr_HArray1OfPropertyDefinitionRepresentation(Low, Up, *((Handle_StepRepr_PropertyDefinitionRepresentation*)V->Handle)));
}

 void OCStepRepr_HArray1OfPropertyDefinitionRepresentation::Init(OCNaroWrappers::OCStepRepr_PropertyDefinitionRepresentation^ V)
{
  (*((Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation*)nativeHandle))->Init(*((Handle_StepRepr_PropertyDefinitionRepresentation*)V->Handle));
}

 Standard_Integer OCStepRepr_HArray1OfPropertyDefinitionRepresentation::Length()
{
  return (*((Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation*)nativeHandle))->Length();
}

 Standard_Integer OCStepRepr_HArray1OfPropertyDefinitionRepresentation::Lower()
{
  return (*((Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation*)nativeHandle))->Lower();
}

 Standard_Integer OCStepRepr_HArray1OfPropertyDefinitionRepresentation::Upper()
{
  return (*((Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation*)nativeHandle))->Upper();
}

 void OCStepRepr_HArray1OfPropertyDefinitionRepresentation::SetValue(Standard_Integer Index, OCNaroWrappers::OCStepRepr_PropertyDefinitionRepresentation^ Value)
{
  (*((Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation*)nativeHandle))->SetValue(Index, *((Handle_StepRepr_PropertyDefinitionRepresentation*)Value->Handle));
}

OCStepRepr_PropertyDefinitionRepresentation^ OCStepRepr_HArray1OfPropertyDefinitionRepresentation::Value(Standard_Integer Index)
{
  Handle(StepRepr_PropertyDefinitionRepresentation) tmp = (*((Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation*)nativeHandle))->Value(Index);
  return gcnew OCStepRepr_PropertyDefinitionRepresentation(&tmp);
}

OCStepRepr_PropertyDefinitionRepresentation^ OCStepRepr_HArray1OfPropertyDefinitionRepresentation::ChangeValue(Standard_Integer Index)
{
  Handle(StepRepr_PropertyDefinitionRepresentation) tmp = (*((Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation*)nativeHandle))->ChangeValue(Index);
  return gcnew OCStepRepr_PropertyDefinitionRepresentation(&tmp);
}

OCStepRepr_Array1OfPropertyDefinitionRepresentation^ OCStepRepr_HArray1OfPropertyDefinitionRepresentation::Array1()
{
  StepRepr_Array1OfPropertyDefinitionRepresentation* tmp = new StepRepr_Array1OfPropertyDefinitionRepresentation(0, 0);
  *tmp = (*((Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation*)nativeHandle))->Array1();
  return gcnew OCStepRepr_Array1OfPropertyDefinitionRepresentation(tmp);
}

OCStepRepr_Array1OfPropertyDefinitionRepresentation^ OCStepRepr_HArray1OfPropertyDefinitionRepresentation::ChangeArray1()
{
  StepRepr_Array1OfPropertyDefinitionRepresentation* tmp = new StepRepr_Array1OfPropertyDefinitionRepresentation(0, 0);
  *tmp = (*((Handle_StepRepr_HArray1OfPropertyDefinitionRepresentation*)nativeHandle))->ChangeArray1();
  return gcnew OCStepRepr_Array1OfPropertyDefinitionRepresentation(tmp);
}


