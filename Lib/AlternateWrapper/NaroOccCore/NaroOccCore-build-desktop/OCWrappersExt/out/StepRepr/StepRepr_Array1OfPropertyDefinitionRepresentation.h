// File generated by CPPExt (MPV)
//
#ifndef _StepRepr_Array1OfPropertyDefinitionRepresentation_OCWrappers_HeaderFile
#define _StepRepr_Array1OfPropertyDefinitionRepresentation_OCWrappers_HeaderFile

// include native header
#include <StepRepr_Array1OfPropertyDefinitionRepresentation.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCStepRepr_PropertyDefinitionRepresentation;



public ref class OCStepRepr_Array1OfPropertyDefinitionRepresentation  {

protected:
  StepRepr_Array1OfPropertyDefinitionRepresentation* nativeHandle;
  OCStepRepr_Array1OfPropertyDefinitionRepresentation(OCDummy^) {};

public:
  property StepRepr_Array1OfPropertyDefinitionRepresentation* Handle
  {
    StepRepr_Array1OfPropertyDefinitionRepresentation* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCStepRepr_Array1OfPropertyDefinitionRepresentation(StepRepr_Array1OfPropertyDefinitionRepresentation* nativeHandle);

// Methods PUBLIC


OCStepRepr_Array1OfPropertyDefinitionRepresentation(Standard_Integer Low, Standard_Integer Up);


OCStepRepr_Array1OfPropertyDefinitionRepresentation(OCNaroWrappers::OCStepRepr_PropertyDefinitionRepresentation^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCStepRepr_PropertyDefinitionRepresentation^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCStepRepr_Array1OfPropertyDefinitionRepresentation^ Assign(OCNaroWrappers::OCStepRepr_Array1OfPropertyDefinitionRepresentation^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCStepRepr_PropertyDefinitionRepresentation^ Value) ;


 /*instead*/  OCStepRepr_PropertyDefinitionRepresentation^ Value(Standard_Integer Index) ;


 /*instead*/  OCStepRepr_PropertyDefinitionRepresentation^ ChangeValue(Standard_Integer Index) ;

~OCStepRepr_Array1OfPropertyDefinitionRepresentation()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
