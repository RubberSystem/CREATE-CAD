// File generated by CPPExt (CPP file)
//

#include "StepRepr_MaterialPropertyRepresentation.h"
#include "../Converter.h"
#include "StepRepr_DataEnvironment.h"
#include "StepRepr_RepresentedDefinition.h"
#include "StepRepr_Representation.h"


using namespace OCNaroWrappers;

OCStepRepr_MaterialPropertyRepresentation::OCStepRepr_MaterialPropertyRepresentation(Handle(StepRepr_MaterialPropertyRepresentation)* nativeHandle) : OCStepRepr_PropertyDefinitionRepresentation((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepRepr_MaterialPropertyRepresentation(*nativeHandle);
}

OCStepRepr_MaterialPropertyRepresentation::OCStepRepr_MaterialPropertyRepresentation() : OCStepRepr_PropertyDefinitionRepresentation((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepRepr_MaterialPropertyRepresentation(new StepRepr_MaterialPropertyRepresentation());
}

 void OCStepRepr_MaterialPropertyRepresentation::Init(OCNaroWrappers::OCStepRepr_RepresentedDefinition^ aPropertyDefinitionRepresentation_Definition, OCNaroWrappers::OCStepRepr_Representation^ aPropertyDefinitionRepresentation_UsedRepresentation, OCNaroWrappers::OCStepRepr_DataEnvironment^ aDependentEnvironment)
{
  (*((Handle_StepRepr_MaterialPropertyRepresentation*)nativeHandle))->Init(*((StepRepr_RepresentedDefinition*)aPropertyDefinitionRepresentation_Definition->Handle), *((Handle_StepRepr_Representation*)aPropertyDefinitionRepresentation_UsedRepresentation->Handle), *((Handle_StepRepr_DataEnvironment*)aDependentEnvironment->Handle));
}

OCStepRepr_DataEnvironment^ OCStepRepr_MaterialPropertyRepresentation::DependentEnvironment()
{
  Handle(StepRepr_DataEnvironment) tmp = (*((Handle_StepRepr_MaterialPropertyRepresentation*)nativeHandle))->DependentEnvironment();
  return gcnew OCStepRepr_DataEnvironment(&tmp);
}

 void OCStepRepr_MaterialPropertyRepresentation::SetDependentEnvironment(OCNaroWrappers::OCStepRepr_DataEnvironment^ DependentEnvironment)
{
  (*((Handle_StepRepr_MaterialPropertyRepresentation*)nativeHandle))->SetDependentEnvironment(*((Handle_StepRepr_DataEnvironment*)DependentEnvironment->Handle));
}


