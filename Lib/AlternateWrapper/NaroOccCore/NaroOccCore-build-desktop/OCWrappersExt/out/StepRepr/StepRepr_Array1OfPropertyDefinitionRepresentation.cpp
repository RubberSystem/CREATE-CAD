// File generated by CPPExt (CPP file)
//

#include "StepRepr_Array1OfPropertyDefinitionRepresentation.h"
#include "../Converter.h"
#include "StepRepr_PropertyDefinitionRepresentation.h"


using namespace OCNaroWrappers;

OCStepRepr_Array1OfPropertyDefinitionRepresentation::OCStepRepr_Array1OfPropertyDefinitionRepresentation(StepRepr_Array1OfPropertyDefinitionRepresentation* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCStepRepr_Array1OfPropertyDefinitionRepresentation::OCStepRepr_Array1OfPropertyDefinitionRepresentation(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new StepRepr_Array1OfPropertyDefinitionRepresentation(Low, Up);
}

OCStepRepr_Array1OfPropertyDefinitionRepresentation::OCStepRepr_Array1OfPropertyDefinitionRepresentation(OCNaroWrappers::OCStepRepr_PropertyDefinitionRepresentation^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new StepRepr_Array1OfPropertyDefinitionRepresentation(*((Handle_StepRepr_PropertyDefinitionRepresentation*)Item->Handle), Low, Up);
}

 void OCStepRepr_Array1OfPropertyDefinitionRepresentation::Init(OCNaroWrappers::OCStepRepr_PropertyDefinitionRepresentation^ V)
{
  ((StepRepr_Array1OfPropertyDefinitionRepresentation*)nativeHandle)->Init(*((Handle_StepRepr_PropertyDefinitionRepresentation*)V->Handle));
}

 System::Boolean OCStepRepr_Array1OfPropertyDefinitionRepresentation::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((StepRepr_Array1OfPropertyDefinitionRepresentation*)nativeHandle)->IsAllocated());
}

OCStepRepr_Array1OfPropertyDefinitionRepresentation^ OCStepRepr_Array1OfPropertyDefinitionRepresentation::Assign(OCNaroWrappers::OCStepRepr_Array1OfPropertyDefinitionRepresentation^ Other)
{
  StepRepr_Array1OfPropertyDefinitionRepresentation* tmp = new StepRepr_Array1OfPropertyDefinitionRepresentation(0, 0);
  *tmp = ((StepRepr_Array1OfPropertyDefinitionRepresentation*)nativeHandle)->Assign(*((StepRepr_Array1OfPropertyDefinitionRepresentation*)Other->Handle));
  return gcnew OCStepRepr_Array1OfPropertyDefinitionRepresentation(tmp);
}

 Standard_Integer OCStepRepr_Array1OfPropertyDefinitionRepresentation::Length()
{
  return ((StepRepr_Array1OfPropertyDefinitionRepresentation*)nativeHandle)->Length();
}

 Standard_Integer OCStepRepr_Array1OfPropertyDefinitionRepresentation::Lower()
{
  return ((StepRepr_Array1OfPropertyDefinitionRepresentation*)nativeHandle)->Lower();
}

 Standard_Integer OCStepRepr_Array1OfPropertyDefinitionRepresentation::Upper()
{
  return ((StepRepr_Array1OfPropertyDefinitionRepresentation*)nativeHandle)->Upper();
}

 void OCStepRepr_Array1OfPropertyDefinitionRepresentation::SetValue(Standard_Integer Index, OCNaroWrappers::OCStepRepr_PropertyDefinitionRepresentation^ Value)
{
  ((StepRepr_Array1OfPropertyDefinitionRepresentation*)nativeHandle)->SetValue(Index, *((Handle_StepRepr_PropertyDefinitionRepresentation*)Value->Handle));
}

OCStepRepr_PropertyDefinitionRepresentation^ OCStepRepr_Array1OfPropertyDefinitionRepresentation::Value(Standard_Integer Index)
{
  Handle(StepRepr_PropertyDefinitionRepresentation) tmp = ((StepRepr_Array1OfPropertyDefinitionRepresentation*)nativeHandle)->Value(Index);
  return gcnew OCStepRepr_PropertyDefinitionRepresentation(&tmp);
}

OCStepRepr_PropertyDefinitionRepresentation^ OCStepRepr_Array1OfPropertyDefinitionRepresentation::ChangeValue(Standard_Integer Index)
{
  Handle(StepRepr_PropertyDefinitionRepresentation) tmp = ((StepRepr_Array1OfPropertyDefinitionRepresentation*)nativeHandle)->ChangeValue(Index);
  return gcnew OCStepRepr_PropertyDefinitionRepresentation(&tmp);
}


