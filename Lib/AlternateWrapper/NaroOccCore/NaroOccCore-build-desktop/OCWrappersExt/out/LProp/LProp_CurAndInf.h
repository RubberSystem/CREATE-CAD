// File generated by CPPExt (MPV)
//
#ifndef _LProp_CurAndInf_OCWrappers_HeaderFile
#define _LProp_CurAndInf_OCWrappers_HeaderFile

// include native header
#include <LProp_CurAndInf.hxx>
#include "../Converter.h"


#include "../TColStd/TColStd_SequenceOfReal.h"
#include "LProp_SequenceOfCIType.h"
#include "LProp_CIType.h"


namespace OCNaroWrappers
{



//! Stores the parameters of a curve 2d or 3d corresponding <br>
//!          to the curvature's extremas and the Inflection's Points. <br>
public ref class OCLProp_CurAndInf  {

protected:
  LProp_CurAndInf* nativeHandle;
  OCLProp_CurAndInf(OCDummy^) {};

public:
  property LProp_CurAndInf* Handle
  {
    LProp_CurAndInf* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCLProp_CurAndInf(LProp_CurAndInf* nativeHandle);

// Methods PUBLIC


OCLProp_CurAndInf();


 /*instead*/  void AddInflection(Standard_Real Param) ;


 /*instead*/  void AddExtCur(Standard_Real Param, System::Boolean IsMin) ;


 /*instead*/  void Clear() ;


 /*instead*/  System::Boolean IsEmpty() ;

//! Returns the number of points. <br>
//!          The Points are stored to increasing parameter. <br>
 /*instead*/  Standard_Integer NbPoints() ;

//! Returns the parameter of the Nth point. <br>//! raises if N not in the range [1,NbPoints()] <br>
 /*instead*/  Standard_Real Parameter(Standard_Integer N) ;

//! Returns <br>
//!          - MinCur if the Nth parameter corresponds to <br>
//!          a minimum of the radius of curvature. <br>
//!          - MaxCur if the Nth parameter corresponds to <br>
//!          a maximum of the radius of curvature. <br>
//!          - Inflection if the parameter corresponds to <br>
//!          a point of inflection. <br>//! raises if N not in the range [1,NbPoints()] <br>
 /*instead*/  OCLProp_CIType Type(Standard_Integer N) ;

~OCLProp_CurAndInf()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
