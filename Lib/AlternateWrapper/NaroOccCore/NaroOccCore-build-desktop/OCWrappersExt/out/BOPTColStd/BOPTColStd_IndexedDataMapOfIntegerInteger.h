// File generated by CPPExt (MPV)
//
#ifndef _BOPTColStd_IndexedDataMapOfIntegerInteger_OCWrappers_HeaderFile
#define _BOPTColStd_IndexedDataMapOfIntegerInteger_OCWrappers_HeaderFile

// include native header
#include <BOPTColStd_IndexedDataMapOfIntegerInteger.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTColStd_MapIntegerHasher;
ref class OCBOPTColStd_IndexedDataMapNodeOfIndexedDataMapOfIntegerInteger;



public ref class OCBOPTColStd_IndexedDataMapOfIntegerInteger  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCBOPTColStd_IndexedDataMapOfIntegerInteger(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCBOPTColStd_IndexedDataMapOfIntegerInteger(BOPTColStd_IndexedDataMapOfIntegerInteger* nativeHandle);

// Methods PUBLIC


OCBOPTColStd_IndexedDataMapOfIntegerInteger(Standard_Integer NbBuckets);


 /*instead*/  OCBOPTColStd_IndexedDataMapOfIntegerInteger^ Assign(OCNaroWrappers::OCBOPTColStd_IndexedDataMapOfIntegerInteger^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  Standard_Integer Add(Standard_Integer K, Standard_Integer I) ;


 /*instead*/  void Substitute(Standard_Integer I, Standard_Integer K, Standard_Integer T) ;


 /*instead*/  void RemoveLast() ;


 /*instead*/  System::Boolean Contains(Standard_Integer K) ;


 /*instead*/  Standard_Integer FindKey(Standard_Integer I) ;


 /*instead*/  Standard_Integer FindFromIndex(Standard_Integer I) ;


 /*instead*/  Standard_Integer ChangeFromIndex(Standard_Integer I) ;


 /*instead*/  Standard_Integer FindIndex(Standard_Integer K) ;


 /*instead*/  Standard_Integer FindFromKey(Standard_Integer K) ;


 /*instead*/  Standard_Integer ChangeFromKey(Standard_Integer K) ;


 /*instead*/  Standard_Address FindFromKey1(Standard_Integer K) ;


 /*instead*/  Standard_Address ChangeFromKey1(Standard_Integer K) ;

~OCBOPTColStd_IndexedDataMapOfIntegerInteger()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
