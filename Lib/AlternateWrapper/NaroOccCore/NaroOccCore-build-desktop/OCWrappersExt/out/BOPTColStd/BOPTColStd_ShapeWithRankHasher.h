// File generated by CPPExt (MPV)
//
#ifndef _BOPTColStd_ShapeWithRankHasher_OCWrappers_HeaderFile
#define _BOPTColStd_ShapeWithRankHasher_OCWrappers_HeaderFile

// include native header
#include <BOPTColStd_ShapeWithRankHasher.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCBOPTColStd_ShapeWithRank;



//!  The auxiliary class provides hash code for mapping <br>
//!  ShapeWithRank objects <br>
public ref class OCBOPTColStd_ShapeWithRankHasher  {

protected:
  BOPTColStd_ShapeWithRankHasher* nativeHandle;
  OCBOPTColStd_ShapeWithRankHasher(OCDummy^) {};

public:
  property BOPTColStd_ShapeWithRankHasher* Handle
  {
    BOPTColStd_ShapeWithRankHasher* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBOPTColStd_ShapeWithRankHasher(BOPTColStd_ShapeWithRankHasher* nativeHandle);

// Methods PUBLIC

//! Returns a HasCode value  for  the  Key <K>  in the <br>
//!          range 0..Upper. <br>
//! <br>
static /*instead*/  Standard_Integer HashCode(OCNaroWrappers::OCBOPTColStd_ShapeWithRank^ SR, Standard_Integer Upper) ;

//! Returns True  when the two  keys are the same. Two <br>
//!          same  keys  must   have  the  same  hashcode,  the <br>
//!          contrary is not necessary. <br>
static /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCBOPTColStd_ShapeWithRank^ SR1, OCNaroWrappers::OCBOPTColStd_ShapeWithRank^ SR2) ;

~OCBOPTColStd_ShapeWithRankHasher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
