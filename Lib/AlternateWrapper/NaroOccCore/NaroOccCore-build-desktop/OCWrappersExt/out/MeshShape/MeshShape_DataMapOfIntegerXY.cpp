// File generated by CPPExt (CPP file)
//

#include "MeshShape_DataMapOfIntegerXY.h"
#include "../Converter.h"
#include "../gp/gp_XY.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MeshShape_DataMapNodeOfDataMapOfIntegerXY.h"
#include "MeshShape_DataMapIteratorOfDataMapOfIntegerXY.h"


using namespace OCNaroWrappers;

OCMeshShape_DataMapOfIntegerXY::OCMeshShape_DataMapOfIntegerXY(MeshShape_DataMapOfIntegerXY* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMeshShape_DataMapOfIntegerXY::OCMeshShape_DataMapOfIntegerXY(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MeshShape_DataMapOfIntegerXY(NbBuckets);
}

OCMeshShape_DataMapOfIntegerXY^ OCMeshShape_DataMapOfIntegerXY::Assign(OCNaroWrappers::OCMeshShape_DataMapOfIntegerXY^ Other)
{
  MeshShape_DataMapOfIntegerXY* tmp = new MeshShape_DataMapOfIntegerXY(0);
  *tmp = ((MeshShape_DataMapOfIntegerXY*)nativeHandle)->Assign(*((MeshShape_DataMapOfIntegerXY*)Other->Handle));
  return gcnew OCMeshShape_DataMapOfIntegerXY(tmp);
}

 void OCMeshShape_DataMapOfIntegerXY::ReSize(Standard_Integer NbBuckets)
{
  ((MeshShape_DataMapOfIntegerXY*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMeshShape_DataMapOfIntegerXY::Bind(Standard_Integer K, OCNaroWrappers::OCgp_XY^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MeshShape_DataMapOfIntegerXY*)nativeHandle)->Bind(K, *((gp_XY*)I->Handle)));
}

 System::Boolean OCMeshShape_DataMapOfIntegerXY::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshShape_DataMapOfIntegerXY*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMeshShape_DataMapOfIntegerXY::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshShape_DataMapOfIntegerXY*)nativeHandle)->UnBind(K));
}

OCgp_XY^ OCMeshShape_DataMapOfIntegerXY::Find(Standard_Integer K)
{
  gp_XY* tmp = new gp_XY();
  *tmp = ((MeshShape_DataMapOfIntegerXY*)nativeHandle)->Find(K);
  return gcnew OCgp_XY(tmp);
}

OCgp_XY^ OCMeshShape_DataMapOfIntegerXY::ChangeFind(Standard_Integer K)
{
  gp_XY* tmp = new gp_XY();
  *tmp = ((MeshShape_DataMapOfIntegerXY*)nativeHandle)->ChangeFind(K);
  return gcnew OCgp_XY(tmp);
}


