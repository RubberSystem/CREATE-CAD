// File generated by CPPExt (MPV)
//
#ifndef _ChFiKPart_ComputeData_OCWrappers_HeaderFile
#define _ChFiKPart_ComputeData_OCWrappers_HeaderFile

// include native header
#include <ChFiKPart_ComputeData.hxx>
#include "../Converter.h"


#include "../TopAbs/TopAbs_Orientation.h"


namespace OCNaroWrappers
{

ref class OCTopOpeBRepDS_DataStructure;
ref class OCChFiDS_SurfData;
ref class OCAdaptor3d_HSurface;
ref class OCChFiDS_Spine;
ref class OCgp_Pnt2d;


//! Methodes de classe   permettant de  remplir    une <br>
//!          SurfData dans  les cas  particuliers  de  conges <br>
//!          suivants: <br>
//!          - cylindre entre 2 surfaces planes, <br>
//!          - tore/sphere entre un plan et un cylindre othogonal, <br>
//!          - tore/sphere entre un plan et un cone othogonal, <br>
public ref class OCChFiKPart_ComputeData  {

protected:
  ChFiKPart_ComputeData* nativeHandle;
  OCChFiKPart_ComputeData(OCDummy^) {};

public:
  property ChFiKPart_ComputeData* Handle
  {
    ChFiKPart_ComputeData* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCChFiKPart_ComputeData(ChFiKPart_ComputeData* nativeHandle);

// Methods PUBLIC

//! Computes a simple fillet in several particular <br>
//!          cases. <br>
static /*instead*/  System::Boolean Compute(OCNaroWrappers::OCTopOpeBRepDS_DataStructure^ DStr, OCNaroWrappers::OCChFiDS_SurfData^ Data, OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_HSurface^ S2, OCTopAbs_Orientation Or1, OCTopAbs_Orientation Or2, OCNaroWrappers::OCChFiDS_Spine^ Sp, Standard_Integer Iedge) ;

//! Computes a toric or spheric corner fillet. <br>
static /*instead*/  System::Boolean ComputeCorner(OCNaroWrappers::OCTopOpeBRepDS_DataStructure^ DStr, OCNaroWrappers::OCChFiDS_SurfData^ Data, OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_HSurface^ S2, OCTopAbs_Orientation OrFace1, OCTopAbs_Orientation OrFace2, OCTopAbs_Orientation Or1, OCTopAbs_Orientation Or2, Standard_Real minRad, Standard_Real majRad, OCNaroWrappers::OCgp_Pnt2d^ P1S1, OCNaroWrappers::OCgp_Pnt2d^ P2S1, OCNaroWrappers::OCgp_Pnt2d^ P1S2, OCNaroWrappers::OCgp_Pnt2d^ P2S2) ;

//! Computes spheric corner fillet with non iso pcurve on S2. <br>
static /*instead*/  System::Boolean ComputeCorner(OCNaroWrappers::OCTopOpeBRepDS_DataStructure^ DStr, OCNaroWrappers::OCChFiDS_SurfData^ Data, OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_HSurface^ S2, OCTopAbs_Orientation OrFace1, OCTopAbs_Orientation OrFace2, OCTopAbs_Orientation Or1, OCTopAbs_Orientation Or2, Standard_Real Rad, OCNaroWrappers::OCgp_Pnt2d^ PS1, OCNaroWrappers::OCgp_Pnt2d^ P1S2, OCNaroWrappers::OCgp_Pnt2d^ P2S2) ;

//! Computes a toric corner rotule. <br>
static /*instead*/  System::Boolean ComputeCorner(OCNaroWrappers::OCTopOpeBRepDS_DataStructure^ DStr, OCNaroWrappers::OCChFiDS_SurfData^ Data, OCNaroWrappers::OCAdaptor3d_HSurface^ S, OCNaroWrappers::OCAdaptor3d_HSurface^ S1, OCNaroWrappers::OCAdaptor3d_HSurface^ S2, OCTopAbs_Orientation OfS, OCTopAbs_Orientation OS, OCTopAbs_Orientation OS1, OCTopAbs_Orientation OS2, Standard_Real Radius) ;

~OCChFiKPart_ComputeData()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
