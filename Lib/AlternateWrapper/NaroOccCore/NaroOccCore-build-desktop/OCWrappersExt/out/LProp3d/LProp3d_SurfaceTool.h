// File generated by CPPExt (MPV)
//
#ifndef _LProp3d_SurfaceTool_OCWrappers_HeaderFile
#define _LProp3d_SurfaceTool_OCWrappers_HeaderFile

// include native header
#include <LProp3d_SurfaceTool.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCAdaptor3d_HSurface;
ref class OCgp_Pnt;
ref class OCgp_Vec;



public ref class OCLProp3d_SurfaceTool  {

protected:
  LProp3d_SurfaceTool* nativeHandle;
  OCLProp3d_SurfaceTool(OCDummy^) {};

public:
  property LProp3d_SurfaceTool* Handle
  {
    LProp3d_SurfaceTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCLProp3d_SurfaceTool(LProp3d_SurfaceTool* nativeHandle);

// Methods PUBLIC

//! Computes the point <P> of parameter <U> and <V> on the <br>
//!          HSurface <S>. <br>
static /*instead*/  void Value(OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pnt^ P) ;

//! Computes the point <P> and first derivative <D1*> of <br>
//!          parameter <U> and <V> on the HSurface <S>. <br>
static /*instead*/  void D1(OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ D1U, OCNaroWrappers::OCgp_Vec^ D1V) ;

//! Computes the point <P>, the first derivative <D1*> and second <br>
//!          derivative <D2*> of parameter <U> and <V> on the HSurface <S>. <br>
static /*instead*/  void D2(OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ D1U, OCNaroWrappers::OCgp_Vec^ D1V, OCNaroWrappers::OCgp_Vec^ D2U, OCNaroWrappers::OCgp_Vec^ D2V, OCNaroWrappers::OCgp_Vec^ DUV) ;


static /*instead*/  OCgp_Vec^ DN(OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real U, Standard_Real V, Standard_Integer IU, Standard_Integer IV) ;

//! returns the order of continuity of the HSurface <S>. <br>
//!          returns 1 : first derivative only is computable <br>
//!          returns 2 : first and second derivative only are computable. <br>
static /*instead*/  Standard_Integer Continuity(OCNaroWrappers::OCAdaptor3d_HSurface^ S) ;

//! returns the bounds of the HSurface. <br>
static /*instead*/  void Bounds(OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real& U1, Standard_Real& V1, Standard_Real& U2, Standard_Real& V2) ;

~OCLProp3d_SurfaceTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
