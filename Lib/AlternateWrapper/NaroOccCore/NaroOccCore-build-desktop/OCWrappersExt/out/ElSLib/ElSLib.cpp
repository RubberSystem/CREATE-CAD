// File generated by CPPExt (CPP file)
//

#include "ElSLib.h"
#include "../Converter.h"


using namespace OCNaroWrappers;



OCgp_Pnt^ OCElSLib::Value(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pln^ Pl)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::Value(U, V, *((gp_Pln*)Pl->Handle));
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCElSLib::Value(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cone^ C)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::Value(U, V, *((gp_Cone*)C->Handle));
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCElSLib::Value(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cylinder^ C)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::Value(U, V, *((gp_Cylinder*)C->Handle));
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCElSLib::Value(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Sphere^ S)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::Value(U, V, *((gp_Sphere*)S->Handle));
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCElSLib::Value(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Torus^ T)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::Value(U, V, *((gp_Torus*)T->Handle));
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Vec^ OCElSLib::DN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pln^ Pl, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::DN(U, V, *((gp_Pln*)Pl->Handle), Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

OCgp_Vec^ OCElSLib::DN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cone^ C, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::DN(U, V, *((gp_Cone*)C->Handle), Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

OCgp_Vec^ OCElSLib::DN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cylinder^ C, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::DN(U, V, *((gp_Cylinder*)C->Handle), Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

OCgp_Vec^ OCElSLib::DN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Sphere^ S, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::DN(U, V, *((gp_Sphere*)S->Handle), Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

OCgp_Vec^ OCElSLib::DN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Torus^ T, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::DN(U, V, *((gp_Torus*)T->Handle), Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

 void OCElSLib::D0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::D0(U, V, *((gp_Pln*)Pl->Handle), *((gp_Pnt*)P->Handle));
}

 void OCElSLib::D0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cone^ C, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::D0(U, V, *((gp_Cone*)C->Handle), *((gp_Pnt*)P->Handle));
}

 void OCElSLib::D0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cylinder^ C, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::D0(U, V, *((gp_Cylinder*)C->Handle), *((gp_Pnt*)P->Handle));
}

 void OCElSLib::D0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Sphere^ S, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::D0(U, V, *((gp_Sphere*)S->Handle), *((gp_Pnt*)P->Handle));
}

 void OCElSLib::D0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Torus^ T, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::D0(U, V, *((gp_Torus*)T->Handle), *((gp_Pnt*)P->Handle));
}

 void OCElSLib::D1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::D1(U, V, *((gp_Pln*)Pl->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::D1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cone^ C, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::D1(U, V, *((gp_Cone*)C->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::D1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cylinder^ C, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::D1(U, V, *((gp_Cylinder*)C->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::D1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Sphere^ S, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::D1(U, V, *((gp_Sphere*)S->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::D1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Torus^ T, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::D1(U, V, *((gp_Torus*)T->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::D2(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cone^ C, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv)
{
  ElSLib::D2(U, V, *((gp_Cone*)C->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle));
}

 void OCElSLib::D2(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cylinder^ C, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv)
{
  ElSLib::D2(U, V, *((gp_Cylinder*)C->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle));
}

 void OCElSLib::D2(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Sphere^ S, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv)
{
  ElSLib::D2(U, V, *((gp_Sphere*)S->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle));
}

 void OCElSLib::D2(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Torus^ T, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv)
{
  ElSLib::D2(U, V, *((gp_Torus*)T->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle));
}

 void OCElSLib::D3(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cone^ C, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv, OCNaroWrappers::OCgp_Vec^ Vuuu, OCNaroWrappers::OCgp_Vec^ Vvvv, OCNaroWrappers::OCgp_Vec^ Vuuv, OCNaroWrappers::OCgp_Vec^ Vuvv)
{
  ElSLib::D3(U, V, *((gp_Cone*)C->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle), *((gp_Vec*)Vuuu->Handle), *((gp_Vec*)Vvvv->Handle), *((gp_Vec*)Vuuv->Handle), *((gp_Vec*)Vuvv->Handle));
}

 void OCElSLib::D3(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Cylinder^ C, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv, OCNaroWrappers::OCgp_Vec^ Vuuu, OCNaroWrappers::OCgp_Vec^ Vvvv, OCNaroWrappers::OCgp_Vec^ Vuuv, OCNaroWrappers::OCgp_Vec^ Vuvv)
{
  ElSLib::D3(U, V, *((gp_Cylinder*)C->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle), *((gp_Vec*)Vuuu->Handle), *((gp_Vec*)Vvvv->Handle), *((gp_Vec*)Vuuv->Handle), *((gp_Vec*)Vuvv->Handle));
}

 void OCElSLib::D3(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Sphere^ S, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv, OCNaroWrappers::OCgp_Vec^ Vuuu, OCNaroWrappers::OCgp_Vec^ Vvvv, OCNaroWrappers::OCgp_Vec^ Vuuv, OCNaroWrappers::OCgp_Vec^ Vuvv)
{
  ElSLib::D3(U, V, *((gp_Sphere*)S->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle), *((gp_Vec*)Vuuu->Handle), *((gp_Vec*)Vvvv->Handle), *((gp_Vec*)Vuuv->Handle), *((gp_Vec*)Vuvv->Handle));
}

 void OCElSLib::D3(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Torus^ T, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv, OCNaroWrappers::OCgp_Vec^ Vuuu, OCNaroWrappers::OCgp_Vec^ Vvvv, OCNaroWrappers::OCgp_Vec^ Vuuv, OCNaroWrappers::OCgp_Vec^ Vuvv)
{
  ElSLib::D3(U, V, *((gp_Torus*)T->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle), *((gp_Vec*)Vuuu->Handle), *((gp_Vec*)Vvvv->Handle), *((gp_Vec*)Vuuv->Handle), *((gp_Vec*)Vuvv->Handle));
}

OCgp_Pnt^ OCElSLib::PlaneValue(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::PlaneValue(U, V, *((gp_Ax3*)Pos->Handle));
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCElSLib::CylinderValue(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::CylinderValue(U, V, *((gp_Ax3*)Pos->Handle), Radius);
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCElSLib::ConeValue(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real SAngle)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::ConeValue(U, V, *((gp_Ax3*)Pos->Handle), Radius, SAngle);
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCElSLib::SphereValue(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::SphereValue(U, V, *((gp_Ax3*)Pos->Handle), Radius);
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCElSLib::TorusValue(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real MajorRadius, Standard_Real MinorRadius)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ElSLib::TorusValue(U, V, *((gp_Ax3*)Pos->Handle), MajorRadius, MinorRadius);
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Vec^ OCElSLib::PlaneDN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::PlaneDN(U, V, *((gp_Ax3*)Pos->Handle), Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

OCgp_Vec^ OCElSLib::CylinderDN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::CylinderDN(U, V, *((gp_Ax3*)Pos->Handle), Radius, Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

OCgp_Vec^ OCElSLib::ConeDN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real SAngle, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::ConeDN(U, V, *((gp_Ax3*)Pos->Handle), Radius, SAngle, Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

OCgp_Vec^ OCElSLib::SphereDN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::SphereDN(U, V, *((gp_Ax3*)Pos->Handle), Radius, Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

OCgp_Vec^ OCElSLib::TorusDN(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real MajorRadius, Standard_Real MinorRadius, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ElSLib::TorusDN(U, V, *((gp_Ax3*)Pos->Handle), MajorRadius, MinorRadius, Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

 void OCElSLib::PlaneD0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::PlaneD0(U, V, *((gp_Ax3*)Pos->Handle), *((gp_Pnt*)P->Handle));
}

 void OCElSLib::ConeD0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real SAngle, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::ConeD0(U, V, *((gp_Ax3*)Pos->Handle), Radius, SAngle, *((gp_Pnt*)P->Handle));
}

 void OCElSLib::CylinderD0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::CylinderD0(U, V, *((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle));
}

 void OCElSLib::SphereD0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::SphereD0(U, V, *((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle));
}

 void OCElSLib::TorusD0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real MajorRadius, Standard_Real MinorRadius, OCNaroWrappers::OCgp_Pnt^ P)
{
  ElSLib::TorusD0(U, V, *((gp_Ax3*)Pos->Handle), MajorRadius, MinorRadius, *((gp_Pnt*)P->Handle));
}

 void OCElSLib::PlaneD1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::PlaneD1(U, V, *((gp_Ax3*)Pos->Handle), *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::ConeD1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real SAngle, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::ConeD1(U, V, *((gp_Ax3*)Pos->Handle), Radius, SAngle, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::CylinderD1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::CylinderD1(U, V, *((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::SphereD1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::SphereD1(U, V, *((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::TorusD1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real MajorRadius, Standard_Real MinorRadius, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv)
{
  ElSLib::TorusD1(U, V, *((gp_Ax3*)Pos->Handle), MajorRadius, MinorRadius, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle));
}

 void OCElSLib::ConeD2(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real SAngle, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv)
{
  ElSLib::ConeD2(U, V, *((gp_Ax3*)Pos->Handle), Radius, SAngle, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle));
}

 void OCElSLib::CylinderD2(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv)
{
  ElSLib::CylinderD2(U, V, *((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle));
}

 void OCElSLib::SphereD2(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv)
{
  ElSLib::SphereD2(U, V, *((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle));
}

 void OCElSLib::TorusD2(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real MajorRadius, Standard_Real MinorRadius, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv)
{
  ElSLib::TorusD2(U, V, *((gp_Ax3*)Pos->Handle), MajorRadius, MinorRadius, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle));
}

 void OCElSLib::ConeD3(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real SAngle, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv, OCNaroWrappers::OCgp_Vec^ Vuuu, OCNaroWrappers::OCgp_Vec^ Vvvv, OCNaroWrappers::OCgp_Vec^ Vuuv, OCNaroWrappers::OCgp_Vec^ Vuvv)
{
  ElSLib::ConeD3(U, V, *((gp_Ax3*)Pos->Handle), Radius, SAngle, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle), *((gp_Vec*)Vuuu->Handle), *((gp_Vec*)Vvvv->Handle), *((gp_Vec*)Vuuv->Handle), *((gp_Vec*)Vuvv->Handle));
}

 void OCElSLib::CylinderD3(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv, OCNaroWrappers::OCgp_Vec^ Vuuu, OCNaroWrappers::OCgp_Vec^ Vvvv, OCNaroWrappers::OCgp_Vec^ Vuuv, OCNaroWrappers::OCgp_Vec^ Vuvv)
{
  ElSLib::CylinderD3(U, V, *((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle), *((gp_Vec*)Vuuu->Handle), *((gp_Vec*)Vvvv->Handle), *((gp_Vec*)Vuuv->Handle), *((gp_Vec*)Vuvv->Handle));
}

 void OCElSLib::SphereD3(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv, OCNaroWrappers::OCgp_Vec^ Vuuu, OCNaroWrappers::OCgp_Vec^ Vvvv, OCNaroWrappers::OCgp_Vec^ Vuuv, OCNaroWrappers::OCgp_Vec^ Vuvv)
{
  ElSLib::SphereD3(U, V, *((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle), *((gp_Vec*)Vuuu->Handle), *((gp_Vec*)Vvvv->Handle), *((gp_Vec*)Vuuv->Handle), *((gp_Vec*)Vuvv->Handle));
}

 void OCElSLib::TorusD3(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real MajorRadius, Standard_Real MinorRadius, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ Vu, OCNaroWrappers::OCgp_Vec^ Vv, OCNaroWrappers::OCgp_Vec^ Vuu, OCNaroWrappers::OCgp_Vec^ Vvv, OCNaroWrappers::OCgp_Vec^ Vuv, OCNaroWrappers::OCgp_Vec^ Vuuu, OCNaroWrappers::OCgp_Vec^ Vvvv, OCNaroWrappers::OCgp_Vec^ Vuuv, OCNaroWrappers::OCgp_Vec^ Vuvv)
{
  ElSLib::TorusD3(U, V, *((gp_Ax3*)Pos->Handle), MajorRadius, MinorRadius, *((gp_Pnt*)P->Handle), *((gp_Vec*)Vu->Handle), *((gp_Vec*)Vv->Handle), *((gp_Vec*)Vuu->Handle), *((gp_Vec*)Vvv->Handle), *((gp_Vec*)Vuv->Handle), *((gp_Vec*)Vuuu->Handle), *((gp_Vec*)Vvvv->Handle), *((gp_Vec*)Vuuv->Handle), *((gp_Vec*)Vuvv->Handle));
}

 void OCElSLib::Parameters(OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::Parameters(*((gp_Pln*)Pl->Handle), *((gp_Pnt*)P->Handle), U, V);
}

 void OCElSLib::Parameters(OCNaroWrappers::OCgp_Cylinder^ C, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::Parameters(*((gp_Cylinder*)C->Handle), *((gp_Pnt*)P->Handle), U, V);
}

 void OCElSLib::Parameters(OCNaroWrappers::OCgp_Cone^ C, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::Parameters(*((gp_Cone*)C->Handle), *((gp_Pnt*)P->Handle), U, V);
}

 void OCElSLib::Parameters(OCNaroWrappers::OCgp_Sphere^ S, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::Parameters(*((gp_Sphere*)S->Handle), *((gp_Pnt*)P->Handle), U, V);
}

 void OCElSLib::Parameters(OCNaroWrappers::OCgp_Torus^ T, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::Parameters(*((gp_Torus*)T->Handle), *((gp_Pnt*)P->Handle), U, V);
}

 void OCElSLib::PlaneParameters(OCNaroWrappers::OCgp_Ax3^ Pos, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::PlaneParameters(*((gp_Ax3*)Pos->Handle), *((gp_Pnt*)P->Handle), U, V);
}

 void OCElSLib::CylinderParameters(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::CylinderParameters(*((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle), U, V);
}

 void OCElSLib::ConeParameters(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real SAngle, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::ConeParameters(*((gp_Ax3*)Pos->Handle), Radius, SAngle, *((gp_Pnt*)P->Handle), U, V);
}

 void OCElSLib::SphereParameters(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::SphereParameters(*((gp_Ax3*)Pos->Handle), Radius, *((gp_Pnt*)P->Handle), U, V);
}

 void OCElSLib::TorusParameters(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real MajorRadius, Standard_Real MinorRadius, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& U, Standard_Real& V)
{
  ElSLib::TorusParameters(*((gp_Ax3*)Pos->Handle), MajorRadius, MinorRadius, *((gp_Pnt*)P->Handle), U, V);
}

OCgp_Lin^ OCElSLib::PlaneUIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real U)
{
  gp_Lin* tmp = new gp_Lin();
  *tmp = ElSLib::PlaneUIso(*((gp_Ax3*)Pos->Handle), U);
  return gcnew OCgp_Lin(tmp);
}

OCgp_Lin^ OCElSLib::CylinderUIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real U)
{
  gp_Lin* tmp = new gp_Lin();
  *tmp = ElSLib::CylinderUIso(*((gp_Ax3*)Pos->Handle), Radius, U);
  return gcnew OCgp_Lin(tmp);
}

OCgp_Lin^ OCElSLib::ConeUIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real SAngle, Standard_Real U)
{
  gp_Lin* tmp = new gp_Lin();
  *tmp = ElSLib::ConeUIso(*((gp_Ax3*)Pos->Handle), Radius, SAngle, U);
  return gcnew OCgp_Lin(tmp);
}

OCgp_Circ^ OCElSLib::SphereUIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real U)
{
  gp_Circ* tmp = new gp_Circ();
  *tmp = ElSLib::SphereUIso(*((gp_Ax3*)Pos->Handle), Radius, U);
  return gcnew OCgp_Circ(tmp);
}

OCgp_Circ^ OCElSLib::TorusUIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real MajorRadius, Standard_Real MinorRadius, Standard_Real U)
{
  gp_Circ* tmp = new gp_Circ();
  *tmp = ElSLib::TorusUIso(*((gp_Ax3*)Pos->Handle), MajorRadius, MinorRadius, U);
  return gcnew OCgp_Circ(tmp);
}

OCgp_Lin^ OCElSLib::PlaneVIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real V)
{
  gp_Lin* tmp = new gp_Lin();
  *tmp = ElSLib::PlaneVIso(*((gp_Ax3*)Pos->Handle), V);
  return gcnew OCgp_Lin(tmp);
}

OCgp_Circ^ OCElSLib::CylinderVIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real V)
{
  gp_Circ* tmp = new gp_Circ();
  *tmp = ElSLib::CylinderVIso(*((gp_Ax3*)Pos->Handle), Radius, V);
  return gcnew OCgp_Circ(tmp);
}

OCgp_Circ^ OCElSLib::ConeVIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real SAngle, Standard_Real V)
{
  gp_Circ* tmp = new gp_Circ();
  *tmp = ElSLib::ConeVIso(*((gp_Ax3*)Pos->Handle), Radius, SAngle, V);
  return gcnew OCgp_Circ(tmp);
}

OCgp_Circ^ OCElSLib::SphereVIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real Radius, Standard_Real V)
{
  gp_Circ* tmp = new gp_Circ();
  *tmp = ElSLib::SphereVIso(*((gp_Ax3*)Pos->Handle), Radius, V);
  return gcnew OCgp_Circ(tmp);
}

OCgp_Circ^ OCElSLib::TorusVIso(OCNaroWrappers::OCgp_Ax3^ Pos, Standard_Real MajorRadius, Standard_Real MinorRadius, Standard_Real V)
{
  gp_Circ* tmp = new gp_Circ();
  *tmp = ElSLib::TorusVIso(*((gp_Ax3*)Pos->Handle), MajorRadius, MinorRadius, V);
  return gcnew OCgp_Circ(tmp);
}


