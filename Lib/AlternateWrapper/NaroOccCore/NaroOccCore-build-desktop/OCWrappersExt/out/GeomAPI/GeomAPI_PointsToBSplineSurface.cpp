// File generated by CPPExt (CPP file)
//

#include "GeomAPI_PointsToBSplineSurface.h"
#include "../Converter.h"
#include "../Geom/Geom_BSplineSurface.h"
#include "../TColgp/TColgp_Array2OfPnt.h"
#include "../TColStd/TColStd_Array2OfReal.h"


using namespace OCNaroWrappers;

OCGeomAPI_PointsToBSplineSurface::OCGeomAPI_PointsToBSplineSurface(GeomAPI_PointsToBSplineSurface* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGeomAPI_PointsToBSplineSurface::OCGeomAPI_PointsToBSplineSurface() 
{
  nativeHandle = new GeomAPI_PointsToBSplineSurface();
}

OCGeomAPI_PointsToBSplineSurface::OCGeomAPI_PointsToBSplineSurface(OCNaroWrappers::OCTColgp_Array2OfPnt^ Points, Standard_Integer DegMin, Standard_Integer DegMax, OCGeomAbs_Shape Continuity, Standard_Real Tol3D) 
{
  nativeHandle = new GeomAPI_PointsToBSplineSurface(*((TColgp_Array2OfPnt*)Points->Handle), DegMin, DegMax, (GeomAbs_Shape)Continuity, Tol3D);
}

OCGeomAPI_PointsToBSplineSurface::OCGeomAPI_PointsToBSplineSurface(OCNaroWrappers::OCTColgp_Array2OfPnt^ Points, OCApprox_ParametrizationType ParType, Standard_Integer DegMin, Standard_Integer DegMax, OCGeomAbs_Shape Continuity, Standard_Real Tol3D) 
{
  nativeHandle = new GeomAPI_PointsToBSplineSurface(*((TColgp_Array2OfPnt*)Points->Handle), (Approx_ParametrizationType)ParType, DegMin, DegMax, (GeomAbs_Shape)Continuity, Tol3D);
}

OCGeomAPI_PointsToBSplineSurface::OCGeomAPI_PointsToBSplineSurface(OCNaroWrappers::OCTColgp_Array2OfPnt^ Points, Standard_Real Weight1, Standard_Real Weight2, Standard_Real Weight3, Standard_Integer DegMax, OCGeomAbs_Shape Continuity, Standard_Real Tol3D) 
{
  nativeHandle = new GeomAPI_PointsToBSplineSurface(*((TColgp_Array2OfPnt*)Points->Handle), Weight1, Weight2, Weight3, DegMax, (GeomAbs_Shape)Continuity, Tol3D);
}

OCGeomAPI_PointsToBSplineSurface::OCGeomAPI_PointsToBSplineSurface(OCNaroWrappers::OCTColStd_Array2OfReal^ ZPoints, Standard_Real X0, Standard_Real dX, Standard_Real Y0, Standard_Real dY, Standard_Integer DegMin, Standard_Integer DegMax, OCGeomAbs_Shape Continuity, Standard_Real Tol3D) 
{
  nativeHandle = new GeomAPI_PointsToBSplineSurface(*((TColStd_Array2OfReal*)ZPoints->Handle), X0, dX, Y0, dY, DegMin, DegMax, (GeomAbs_Shape)Continuity, Tol3D);
}

 void OCGeomAPI_PointsToBSplineSurface::Init(OCNaroWrappers::OCTColgp_Array2OfPnt^ Points, Standard_Integer DegMin, Standard_Integer DegMax, OCGeomAbs_Shape Continuity, Standard_Real Tol3D)
{
  ((GeomAPI_PointsToBSplineSurface*)nativeHandle)->Init(*((TColgp_Array2OfPnt*)Points->Handle), DegMin, DegMax, (GeomAbs_Shape)Continuity, Tol3D);
}

 void OCGeomAPI_PointsToBSplineSurface::Interpolate(OCNaroWrappers::OCTColgp_Array2OfPnt^ Points)
{
  ((GeomAPI_PointsToBSplineSurface*)nativeHandle)->Interpolate(*((TColgp_Array2OfPnt*)Points->Handle));
}

 void OCGeomAPI_PointsToBSplineSurface::Interpolate(OCNaroWrappers::OCTColgp_Array2OfPnt^ Points, OCApprox_ParametrizationType ParType)
{
  ((GeomAPI_PointsToBSplineSurface*)nativeHandle)->Interpolate(*((TColgp_Array2OfPnt*)Points->Handle), (Approx_ParametrizationType)ParType);
}

 void OCGeomAPI_PointsToBSplineSurface::Init(OCNaroWrappers::OCTColStd_Array2OfReal^ ZPoints, Standard_Real X0, Standard_Real dX, Standard_Real Y0, Standard_Real dY, Standard_Integer DegMin, Standard_Integer DegMax, OCGeomAbs_Shape Continuity, Standard_Real Tol3D)
{
  ((GeomAPI_PointsToBSplineSurface*)nativeHandle)->Init(*((TColStd_Array2OfReal*)ZPoints->Handle), X0, dX, Y0, dY, DegMin, DegMax, (GeomAbs_Shape)Continuity, Tol3D);
}

 void OCGeomAPI_PointsToBSplineSurface::Interpolate(OCNaroWrappers::OCTColStd_Array2OfReal^ ZPoints, Standard_Real X0, Standard_Real dX, Standard_Real Y0, Standard_Real dY)
{
  ((GeomAPI_PointsToBSplineSurface*)nativeHandle)->Interpolate(*((TColStd_Array2OfReal*)ZPoints->Handle), X0, dX, Y0, dY);
}

 void OCGeomAPI_PointsToBSplineSurface::Init(OCNaroWrappers::OCTColgp_Array2OfPnt^ Points, OCApprox_ParametrizationType ParType, Standard_Integer DegMin, Standard_Integer DegMax, OCGeomAbs_Shape Continuity, Standard_Real Tol3D)
{
  ((GeomAPI_PointsToBSplineSurface*)nativeHandle)->Init(*((TColgp_Array2OfPnt*)Points->Handle), (Approx_ParametrizationType)ParType, DegMin, DegMax, (GeomAbs_Shape)Continuity, Tol3D);
}

 void OCGeomAPI_PointsToBSplineSurface::Init(OCNaroWrappers::OCTColgp_Array2OfPnt^ Points, Standard_Real Weight1, Standard_Real Weight2, Standard_Real Weight3, Standard_Integer DegMax, OCGeomAbs_Shape Continuity, Standard_Real Tol3D)
{
  ((GeomAPI_PointsToBSplineSurface*)nativeHandle)->Init(*((TColgp_Array2OfPnt*)Points->Handle), Weight1, Weight2, Weight3, DegMax, (GeomAbs_Shape)Continuity, Tol3D);
}

OCGeom_BSplineSurface^ OCGeomAPI_PointsToBSplineSurface::Surface()
{
  Handle(Geom_BSplineSurface) tmp = ((GeomAPI_PointsToBSplineSurface*)nativeHandle)->Surface();
  return gcnew OCGeom_BSplineSurface(&tmp);
}

 System::Boolean OCGeomAPI_PointsToBSplineSurface::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((GeomAPI_PointsToBSplineSurface*)nativeHandle)->IsDone());
}


