// File generated by CPPExt (CPP file)
//

#include "GeomAPI_IntCS.h"
#include "../Converter.h"
#include "../Geom/Geom_Curve.h"
#include "../Geom/Geom_Surface.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCGeomAPI_IntCS::OCGeomAPI_IntCS(GeomAPI_IntCS* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGeomAPI_IntCS::OCGeomAPI_IntCS() 
{
  nativeHandle = new GeomAPI_IntCS();
}

OCGeomAPI_IntCS::OCGeomAPI_IntCS(OCNaroWrappers::OCGeom_Curve^ C, OCNaroWrappers::OCGeom_Surface^ S) 
{
  nativeHandle = new GeomAPI_IntCS(*((Handle_Geom_Curve*)C->Handle), *((Handle_Geom_Surface*)S->Handle));
}

 void OCGeomAPI_IntCS::Perform(OCNaroWrappers::OCGeom_Curve^ C, OCNaroWrappers::OCGeom_Surface^ S)
{
  ((GeomAPI_IntCS*)nativeHandle)->Perform(*((Handle_Geom_Curve*)C->Handle), *((Handle_Geom_Surface*)S->Handle));
}

 System::Boolean OCGeomAPI_IntCS::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((GeomAPI_IntCS*)nativeHandle)->IsDone());
}

 Standard_Integer OCGeomAPI_IntCS::NbPoints()
{
  return ((GeomAPI_IntCS*)nativeHandle)->NbPoints();
}

OCgp_Pnt^ OCGeomAPI_IntCS::Point(Standard_Integer Index)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((GeomAPI_IntCS*)nativeHandle)->Point(Index);
  return gcnew OCgp_Pnt(tmp);
}

 void OCGeomAPI_IntCS::Parameters(Standard_Integer Index, Quantity_Parameter& U, Quantity_Parameter& V, Quantity_Parameter& W)
{
  ((GeomAPI_IntCS*)nativeHandle)->Parameters(Index, U, V, W);
}

 Standard_Integer OCGeomAPI_IntCS::NbSegments()
{
  return ((GeomAPI_IntCS*)nativeHandle)->NbSegments();
}

OCGeom_Curve^ OCGeomAPI_IntCS::Segment(Standard_Integer Index)
{
  Handle(Geom_Curve) tmp = ((GeomAPI_IntCS*)nativeHandle)->Segment(Index);
  return gcnew OCGeom_Curve(&tmp);
}

 void OCGeomAPI_IntCS::Parameters(Standard_Integer Index, Quantity_Parameter& U1, Quantity_Parameter& V1, Quantity_Parameter& U2, Quantity_Parameter& V2)
{
  ((GeomAPI_IntCS*)nativeHandle)->Parameters(Index, U1, V1, U2, V2);
}


