// File generated by CPPExt (MPV)
//
#ifndef _FilletSurf_Builder_OCWrappers_HeaderFile
#define _FilletSurf_Builder_OCWrappers_HeaderFile

// include native header
#include <FilletSurf_Builder.hxx>
#include "../Converter.h"


#include "FilletSurf_InternalBuilder.h"
#include "FilletSurf_StatusDone.h"
#include "FilletSurf_ErrorTypeStatus.h"
#include "FilletSurf_StatusType.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopTools_ListOfShape;
ref class OCGeom_Surface;
ref class OCTopoDS_Face;
ref class OCGeom_Curve;
ref class OCGeom2d_Curve;
ref class OCGeom_TrimmedCurve;


//!  API giving the  following  geometric information about fillets <br>
//!            list of corresponding NUBS surfaces <br>
//!            for each surface: <br>
//!               the 2  support faces <br>
//!               on each face: the 3d curve and the corresponding 2d curve <br>
//!               the 2d curves on the fillet <br>
//!            status of start and end section of the fillet <br>
//!            first and last parameter on edge of the fillet. <br>
public ref class OCFilletSurf_Builder  {

protected:
  FilletSurf_Builder* nativeHandle;
  OCFilletSurf_Builder(OCDummy^) {};

public:
  property FilletSurf_Builder* Handle
  {
    FilletSurf_Builder* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCFilletSurf_Builder(FilletSurf_Builder* nativeHandle);

// Methods PUBLIC

//! initialize  of the informations necessary for  the <br>
//!          computation of  the fillet on the <br>
//!          Shape S from a list of edges E and a radius R. <br>
//! <br>
//!           Ta is the angular tolerance <br>
//!		 Tapp3d is the 3d approximation tolerance <br>
//!		 Tapp2d is the 2d approximation tolerance <br>
//! <br>
//! <br>
//! <br>
OCFilletSurf_Builder(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ E, Standard_Real R, Standard_Real Ta, Standard_Real Tapp3d, Standard_Real Tapp2d);

//!---Purpose computation  of the fillet (list of NUBS) <br>
 /*instead*/  void Perform() ;


 /*instead*/  void Simulate() ;

//! gives the status about the computation of the fillet <br>
//!          returns: <br>
//!          IsOK :no problem during the computation <br>
//!          IsNotOk: no result is produced <br>
//!          IsPartial: the result is partial <br>
 /*instead*/  OCFilletSurf_StatusDone IsDone() ;

//! gives    informations     about  error   status     if <br>
//!          IsDone=IsNotOk <br>
//!          returns <br>
//!          EdgeNotG1: the edges are not G1 <br>
//!          FacesNotG1 : two connected faces on a same support are <br>
//!          not  G1 <br>
//!          EdgeNotOnShape: the  edge   is  not on  shape <br>
//!          NotSharpEdge: the  edge is not sharp <br>
//!          PbFilletCompute: problem during the computation of the fillet <br>
 /*instead*/  OCFilletSurf_ErrorTypeStatus StatusError() ;

//! gives the number of NUBS surfaces  of the Fillet. <br>
 /*instead*/  Standard_Integer NbSurface() ;

//! gives the NUBS surface of index Index. <br>
 /*instead*/  OCGeom_Surface^ SurfaceFillet(Standard_Integer Index) ;

//! gives  the  3d  tolerance reached during approximation <br>
//!          of surface of index Index <br>
 /*instead*/  Standard_Real TolApp3d(Standard_Integer Index) ;

//!gives the first support  face relative to SurfaceFillet(Index); <br>
 /*instead*/  OCTopoDS_Face^ SupportFace1(Standard_Integer Index) ;

//!gives the second support  face relative to SurfaceFillet(Index); <br>
 /*instead*/  OCTopoDS_Face^ SupportFace2(Standard_Integer Index) ;

//!    gives  the 3d curve  of SurfaceFillet(Index)  on SupportFace1(Index) <br>
 /*instead*/  OCGeom_Curve^ CurveOnFace1(Standard_Integer Index) ;

//! gives the     3d  curve of  SurfaceFillet(Index) on SupportFace2(Index) <br>
 /*instead*/  OCGeom_Curve^ CurveOnFace2(Standard_Integer Index) ;

//!gives the  PCurve associated to CurvOnSup1(Index)  on the support face <br>
 /*instead*/  OCGeom2d_Curve^ PCurveOnFace1(Standard_Integer Index) ;

//! gives the PCurve associated to CurveOnFace1(Index) on the Fillet <br>
 /*instead*/  OCGeom2d_Curve^ PCurve1OnFillet(Standard_Integer Index) ;

//! gives the PCurve  associated to CurveOnSup2(Index) on  the  support face <br>
 /*instead*/  OCGeom2d_Curve^ PCurveOnFace2(Standard_Integer Index) ;

//! gives the PCurve  associated to CurveOnSup2(Index) on  the  fillet <br>
 /*instead*/  OCGeom2d_Curve^ PCurve2OnFillet(Standard_Integer Index) ;

//!gives the parameter of the fillet  on the first edge. <br>
 /*instead*/  Standard_Real FirstParameter() ;

//! gives the  parameter of the fillet  on the last edge <br>
 /*instead*/  Standard_Real LastParameter() ;


 /*instead*/  OCFilletSurf_StatusType StartSectionStatus() ;


 /*instead*/  OCFilletSurf_StatusType EndSectionStatus() ;


 /*instead*/  Standard_Integer NbSection(Standard_Integer IndexSurf) ;


 /*instead*/  void Section(Standard_Integer IndexSurf, Standard_Integer IndexSec, OCNaroWrappers::OCGeom_TrimmedCurve^ Circ) ;

~OCFilletSurf_Builder()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
