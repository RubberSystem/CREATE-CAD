// File generated by CPPExt (CPP file)
//

#include "GeomPlate_Surface.h"
#include "../Converter.h"
#include "../Geom/Geom_Surface.h"
#include "../Plate/Plate_Plate.h"
#include "../gp/gp_Trsf.h"
#include "../gp/gp_GTrsf2d.h"
#include "../Geom/Geom_Curve.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Vec.h"
#include "../Geom/Geom_Geometry.h"
#include "../TColgp/TColgp_SequenceOfXY.h"


using namespace OCNaroWrappers;

OCGeomPlate_Surface::OCGeomPlate_Surface(Handle(GeomPlate_Surface)* nativeHandle) : OCGeom_Surface((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_GeomPlate_Surface(*nativeHandle);
}

OCGeomPlate_Surface::OCGeomPlate_Surface(OCNaroWrappers::OCGeom_Surface^ Surfinit, OCNaroWrappers::OCPlate_Plate^ Surfinter) : OCGeom_Surface((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomPlate_Surface(new GeomPlate_Surface(*((Handle_Geom_Surface*)Surfinit->Handle), *((Plate_Plate*)Surfinter->Handle)));
}

 void OCGeomPlate_Surface::UReverse()
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->UReverse();
}

 Standard_Real OCGeomPlate_Surface::UReversedParameter(Standard_Real U)
{
  return (*((Handle_GeomPlate_Surface*)nativeHandle))->UReversedParameter(U);
}

 void OCGeomPlate_Surface::VReverse()
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->VReverse();
}

 Standard_Real OCGeomPlate_Surface::VReversedParameter(Standard_Real V)
{
  return (*((Handle_GeomPlate_Surface*)nativeHandle))->VReversedParameter(V);
}

 void OCGeomPlate_Surface::TransformParameters(Standard_Real& U, Standard_Real& V, OCNaroWrappers::OCgp_Trsf^ T)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->TransformParameters(U, V, *((gp_Trsf*)T->Handle));
}

OCgp_GTrsf2d^ OCGeomPlate_Surface::ParametricTransformation(OCNaroWrappers::OCgp_Trsf^ T)
{
  gp_GTrsf2d* tmp = new gp_GTrsf2d();
  *tmp = (*((Handle_GeomPlate_Surface*)nativeHandle))->ParametricTransformation(*((gp_Trsf*)T->Handle));
  return gcnew OCgp_GTrsf2d(tmp);
}

 void OCGeomPlate_Surface::Bounds(Standard_Real& U1, Standard_Real& U2, Standard_Real& V1, Standard_Real& V2)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->Bounds(U1, U2, V1, V2);
}

 System::Boolean OCGeomPlate_Surface::IsUClosed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomPlate_Surface*)nativeHandle))->IsUClosed());
}

 System::Boolean OCGeomPlate_Surface::IsVClosed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomPlate_Surface*)nativeHandle))->IsVClosed());
}

 System::Boolean OCGeomPlate_Surface::IsUPeriodic()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomPlate_Surface*)nativeHandle))->IsUPeriodic());
}

 Standard_Real OCGeomPlate_Surface::UPeriod()
{
  return (*((Handle_GeomPlate_Surface*)nativeHandle))->UPeriod();
}

 System::Boolean OCGeomPlate_Surface::IsVPeriodic()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomPlate_Surface*)nativeHandle))->IsVPeriodic());
}

 Standard_Real OCGeomPlate_Surface::VPeriod()
{
  return (*((Handle_GeomPlate_Surface*)nativeHandle))->VPeriod();
}

OCGeom_Curve^ OCGeomPlate_Surface::UIso(Standard_Real U)
{
  Handle(Geom_Curve) tmp = (*((Handle_GeomPlate_Surface*)nativeHandle))->UIso(U);
  return gcnew OCGeom_Curve(&tmp);
}

OCGeom_Curve^ OCGeomPlate_Surface::VIso(Standard_Real V)
{
  Handle(Geom_Curve) tmp = (*((Handle_GeomPlate_Surface*)nativeHandle))->VIso(V);
  return gcnew OCGeom_Curve(&tmp);
}

 OCGeomAbs_Shape OCGeomPlate_Surface::Continuity()
{
  return (OCGeomAbs_Shape)((*((Handle_GeomPlate_Surface*)nativeHandle))->Continuity());
}

 System::Boolean OCGeomPlate_Surface::IsCNu(Standard_Integer N)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomPlate_Surface*)nativeHandle))->IsCNu(N));
}

 System::Boolean OCGeomPlate_Surface::IsCNv(Standard_Integer N)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomPlate_Surface*)nativeHandle))->IsCNv(N));
}

 void OCGeomPlate_Surface::D0(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pnt^ P)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->D0(U, V, *((gp_Pnt*)P->Handle));
}

 void OCGeomPlate_Surface::D1(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ D1U, OCNaroWrappers::OCgp_Vec^ D1V)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->D1(U, V, *((gp_Pnt*)P->Handle), *((gp_Vec*)D1U->Handle), *((gp_Vec*)D1V->Handle));
}

 void OCGeomPlate_Surface::D2(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ D1U, OCNaroWrappers::OCgp_Vec^ D1V, OCNaroWrappers::OCgp_Vec^ D2U, OCNaroWrappers::OCgp_Vec^ D2V, OCNaroWrappers::OCgp_Vec^ D2UV)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->D2(U, V, *((gp_Pnt*)P->Handle), *((gp_Vec*)D1U->Handle), *((gp_Vec*)D1V->Handle), *((gp_Vec*)D2U->Handle), *((gp_Vec*)D2V->Handle), *((gp_Vec*)D2UV->Handle));
}

 void OCGeomPlate_Surface::D3(Standard_Real U, Standard_Real V, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ D1U, OCNaroWrappers::OCgp_Vec^ D1V, OCNaroWrappers::OCgp_Vec^ D2U, OCNaroWrappers::OCgp_Vec^ D2V, OCNaroWrappers::OCgp_Vec^ D2UV, OCNaroWrappers::OCgp_Vec^ D3U, OCNaroWrappers::OCgp_Vec^ D3V, OCNaroWrappers::OCgp_Vec^ D3UUV, OCNaroWrappers::OCgp_Vec^ D3UVV)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->D3(U, V, *((gp_Pnt*)P->Handle), *((gp_Vec*)D1U->Handle), *((gp_Vec*)D1V->Handle), *((gp_Vec*)D2U->Handle), *((gp_Vec*)D2V->Handle), *((gp_Vec*)D2UV->Handle), *((gp_Vec*)D3U->Handle), *((gp_Vec*)D3V->Handle), *((gp_Vec*)D3UUV->Handle), *((gp_Vec*)D3UVV->Handle));
}

OCgp_Vec^ OCGeomPlate_Surface::DN(Standard_Real U, Standard_Real V, Standard_Integer Nu, Standard_Integer Nv)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = (*((Handle_GeomPlate_Surface*)nativeHandle))->DN(U, V, Nu, Nv);
  return gcnew OCgp_Vec(tmp);
}

OCGeom_Geometry^ OCGeomPlate_Surface::Copy()
{
  Handle(Geom_Geometry) tmp = (*((Handle_GeomPlate_Surface*)nativeHandle))->Copy();
  return gcnew OCGeom_Geometry(&tmp);
}

 void OCGeomPlate_Surface::Transform(OCNaroWrappers::OCgp_Trsf^ T)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->Transform(*((gp_Trsf*)T->Handle));
}

OCGeom_Surface^ OCGeomPlate_Surface::CallSurfinit()
{
  Handle(Geom_Surface) tmp = (*((Handle_GeomPlate_Surface*)nativeHandle))->CallSurfinit();
  return gcnew OCGeom_Surface(&tmp);
}

 void OCGeomPlate_Surface::SetBounds(Standard_Real Umin, Standard_Real Umax, Standard_Real Vmin, Standard_Real Vmax)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->SetBounds(Umin, Umax, Vmin, Vmax);
}

 void OCGeomPlate_Surface::RealBounds(Standard_Real& U1, Standard_Real& U2, Standard_Real& V1, Standard_Real& V2)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->RealBounds(U1, U2, V1, V2);
}

 void OCGeomPlate_Surface::Constraints(OCNaroWrappers::OCTColgp_SequenceOfXY^ Seq)
{
  (*((Handle_GeomPlate_Surface*)nativeHandle))->Constraints(*((TColgp_SequenceOfXY*)Seq->Handle));
}


