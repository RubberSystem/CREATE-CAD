// File generated by CPPExt (CPP file)
//

#include "GeomPlate_CurveConstraint.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_HCurveOnSurface.h"
#include "../Adaptor3d/Adaptor3d_HCurve.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"
#include "../Law/Law_Function.h"
#include "../GeomLProp/GeomLProp_SLProps.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Vec.h"


using namespace OCNaroWrappers;

OCGeomPlate_CurveConstraint::OCGeomPlate_CurveConstraint(Handle(GeomPlate_CurveConstraint)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_GeomPlate_CurveConstraint(*nativeHandle);
}

OCGeomPlate_CurveConstraint::OCGeomPlate_CurveConstraint() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomPlate_CurveConstraint(new GeomPlate_CurveConstraint());
}

OCGeomPlate_CurveConstraint::OCGeomPlate_CurveConstraint(OCNaroWrappers::OCAdaptor3d_HCurveOnSurface^ Boundary, Standard_Integer Order, Standard_Integer NPt, Standard_Real TolDist, Standard_Real TolAng, Standard_Real TolCurv) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomPlate_CurveConstraint(new GeomPlate_CurveConstraint(*((Handle_Adaptor3d_HCurveOnSurface*)Boundary->Handle), Order, NPt, TolDist, TolAng, TolCurv));
}

OCGeomPlate_CurveConstraint::OCGeomPlate_CurveConstraint(OCNaroWrappers::OCAdaptor3d_HCurve^ Boundary, Standard_Integer Tang, Standard_Integer NPt, Standard_Real TolDist) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomPlate_CurveConstraint(new GeomPlate_CurveConstraint(*((Handle_Adaptor3d_HCurve*)Boundary->Handle), Tang, NPt, TolDist));
}

 void OCGeomPlate_CurveConstraint::SetOrder(Standard_Integer Order)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->SetOrder(Order);
}

 Standard_Integer OCGeomPlate_CurveConstraint::Order()
{
  return (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->Order();
}

 Standard_Integer OCGeomPlate_CurveConstraint::NbPoints()
{
  return (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->NbPoints();
}

 void OCGeomPlate_CurveConstraint::SetNbPoints(Standard_Integer NewNb)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->SetNbPoints(NewNb);
}

 void OCGeomPlate_CurveConstraint::SetG0Criterion(OCNaroWrappers::OCLaw_Function^ G0Crit)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->SetG0Criterion(*((Handle_Law_Function*)G0Crit->Handle));
}

 void OCGeomPlate_CurveConstraint::SetG1Criterion(OCNaroWrappers::OCLaw_Function^ G1Crit)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->SetG1Criterion(*((Handle_Law_Function*)G1Crit->Handle));
}

 void OCGeomPlate_CurveConstraint::SetG2Criterion(OCNaroWrappers::OCLaw_Function^ G2Crit)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->SetG2Criterion(*((Handle_Law_Function*)G2Crit->Handle));
}

 Standard_Real OCGeomPlate_CurveConstraint::G0Criterion(Standard_Real U)
{
  return (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->G0Criterion(U);
}

 Standard_Real OCGeomPlate_CurveConstraint::G1Criterion(Standard_Real U)
{
  return (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->G1Criterion(U);
}

 Standard_Real OCGeomPlate_CurveConstraint::G2Criterion(Standard_Real U)
{
  return (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->G2Criterion(U);
}

 Standard_Real OCGeomPlate_CurveConstraint::FirstParameter()
{
  return (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->FirstParameter();
}

 Standard_Real OCGeomPlate_CurveConstraint::LastParameter()
{
  return (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->LastParameter();
}

 Standard_Real OCGeomPlate_CurveConstraint::Length()
{
  return (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->Length();
}

OCGeomLProp_SLProps^ OCGeomPlate_CurveConstraint::LPropSurf(Standard_Real U)
{
  GeomLProp_SLProps* tmp = new GeomLProp_SLProps(123abc, 0, 0, 0, 0);
  *tmp = (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->LPropSurf(U);
  return gcnew OCGeomLProp_SLProps(tmp);
}

 void OCGeomPlate_CurveConstraint::D0(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->D0(U, *((gp_Pnt*)P->Handle));
}

 void OCGeomPlate_CurveConstraint::D1(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1, OCNaroWrappers::OCgp_Vec^ V2)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->D1(U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V1->Handle), *((gp_Vec*)V2->Handle));
}

 void OCGeomPlate_CurveConstraint::D2(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1, OCNaroWrappers::OCgp_Vec^ V2, OCNaroWrappers::OCgp_Vec^ V3, OCNaroWrappers::OCgp_Vec^ V4, OCNaroWrappers::OCgp_Vec^ V5)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->D2(U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V1->Handle), *((gp_Vec*)V2->Handle), *((gp_Vec*)V3->Handle), *((gp_Vec*)V4->Handle), *((gp_Vec*)V5->Handle));
}

OCAdaptor3d_HCurve^ OCGeomPlate_CurveConstraint::Curve3d()
{
  Handle(Adaptor3d_HCurve) tmp = (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->Curve3d();
  return gcnew OCAdaptor3d_HCurve(&tmp);
}

 void OCGeomPlate_CurveConstraint::SetCurve2dOnSurf(OCNaroWrappers::OCGeom2d_Curve^ Curve2d)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->SetCurve2dOnSurf(*((Handle_Geom2d_Curve*)Curve2d->Handle));
}

OCGeom2d_Curve^ OCGeomPlate_CurveConstraint::Curve2dOnSurf()
{
  Handle(Geom2d_Curve) tmp = (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->Curve2dOnSurf();
  return gcnew OCGeom2d_Curve(&tmp);
}

 void OCGeomPlate_CurveConstraint::SetProjectedCurve(OCNaroWrappers::OCAdaptor2d_HCurve2d^ Curve2d, Standard_Real TolU, Standard_Real TolV)
{
  (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->SetProjectedCurve(*((Handle_Adaptor2d_HCurve2d*)Curve2d->Handle), TolU, TolV);
}

OCAdaptor2d_HCurve2d^ OCGeomPlate_CurveConstraint::ProjectedCurve()
{
  Handle(Adaptor2d_HCurve2d) tmp = (*((Handle_GeomPlate_CurveConstraint*)nativeHandle))->ProjectedCurve();
  return gcnew OCAdaptor2d_HCurve2d(&tmp);
}


