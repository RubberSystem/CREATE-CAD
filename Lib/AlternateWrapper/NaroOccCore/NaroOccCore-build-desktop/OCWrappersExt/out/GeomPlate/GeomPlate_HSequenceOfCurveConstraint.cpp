// File generated by CPPExt (CPP file)
//

#include "GeomPlate_HSequenceOfCurveConstraint.h"
#include "../Converter.h"
#include "GeomPlate_CurveConstraint.h"
#include "GeomPlate_SequenceOfCurveConstraint.h"


using namespace OCNaroWrappers;

OCGeomPlate_HSequenceOfCurveConstraint::OCGeomPlate_HSequenceOfCurveConstraint(Handle(GeomPlate_HSequenceOfCurveConstraint)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_GeomPlate_HSequenceOfCurveConstraint(*nativeHandle);
}

OCGeomPlate_HSequenceOfCurveConstraint::OCGeomPlate_HSequenceOfCurveConstraint() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomPlate_HSequenceOfCurveConstraint(new GeomPlate_HSequenceOfCurveConstraint());
}

 System::Boolean OCGeomPlate_HSequenceOfCurveConstraint::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCGeomPlate_HSequenceOfCurveConstraint::Length()
{
  return (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Length();
}

 void OCGeomPlate_HSequenceOfCurveConstraint::Clear()
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Clear();
}

 void OCGeomPlate_HSequenceOfCurveConstraint::Append(OCNaroWrappers::OCGeomPlate_CurveConstraint^ anItem)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Append(*((Handle_GeomPlate_CurveConstraint*)anItem->Handle));
}

 void OCGeomPlate_HSequenceOfCurveConstraint::Append(OCNaroWrappers::OCGeomPlate_HSequenceOfCurveConstraint^ aSequence)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Append(*((Handle_GeomPlate_HSequenceOfCurveConstraint*)aSequence->Handle));
}

 void OCGeomPlate_HSequenceOfCurveConstraint::Prepend(OCNaroWrappers::OCGeomPlate_CurveConstraint^ anItem)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Prepend(*((Handle_GeomPlate_CurveConstraint*)anItem->Handle));
}

 void OCGeomPlate_HSequenceOfCurveConstraint::Prepend(OCNaroWrappers::OCGeomPlate_HSequenceOfCurveConstraint^ aSequence)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Prepend(*((Handle_GeomPlate_HSequenceOfCurveConstraint*)aSequence->Handle));
}

 void OCGeomPlate_HSequenceOfCurveConstraint::Reverse()
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Reverse();
}

 void OCGeomPlate_HSequenceOfCurveConstraint::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCGeomPlate_CurveConstraint^ anItem)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->InsertBefore(anIndex, *((Handle_GeomPlate_CurveConstraint*)anItem->Handle));
}

 void OCGeomPlate_HSequenceOfCurveConstraint::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCGeomPlate_HSequenceOfCurveConstraint^ aSequence)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->InsertBefore(anIndex, *((Handle_GeomPlate_HSequenceOfCurveConstraint*)aSequence->Handle));
}

 void OCGeomPlate_HSequenceOfCurveConstraint::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCGeomPlate_CurveConstraint^ anItem)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->InsertAfter(anIndex, *((Handle_GeomPlate_CurveConstraint*)anItem->Handle));
}

 void OCGeomPlate_HSequenceOfCurveConstraint::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCGeomPlate_HSequenceOfCurveConstraint^ aSequence)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->InsertAfter(anIndex, *((Handle_GeomPlate_HSequenceOfCurveConstraint*)aSequence->Handle));
}

 void OCGeomPlate_HSequenceOfCurveConstraint::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCGeomPlate_HSequenceOfCurveConstraint^ OCGeomPlate_HSequenceOfCurveConstraint::Split(Standard_Integer anIndex)
{
  Handle(GeomPlate_HSequenceOfCurveConstraint) tmp = (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Split(anIndex);
  return gcnew OCGeomPlate_HSequenceOfCurveConstraint(&tmp);
}

 void OCGeomPlate_HSequenceOfCurveConstraint::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCGeomPlate_CurveConstraint^ anItem)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->SetValue(anIndex, *((Handle_GeomPlate_CurveConstraint*)anItem->Handle));
}

OCGeomPlate_CurveConstraint^ OCGeomPlate_HSequenceOfCurveConstraint::Value(Standard_Integer anIndex)
{
  Handle(GeomPlate_CurveConstraint) tmp = (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Value(anIndex);
  return gcnew OCGeomPlate_CurveConstraint(&tmp);
}

OCGeomPlate_CurveConstraint^ OCGeomPlate_HSequenceOfCurveConstraint::ChangeValue(Standard_Integer anIndex)
{
  Handle(GeomPlate_CurveConstraint) tmp = (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCGeomPlate_CurveConstraint(&tmp);
}

 void OCGeomPlate_HSequenceOfCurveConstraint::Remove(Standard_Integer anIndex)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Remove(anIndex);
}

 void OCGeomPlate_HSequenceOfCurveConstraint::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCGeomPlate_SequenceOfCurveConstraint^ OCGeomPlate_HSequenceOfCurveConstraint::Sequence()
{
  GeomPlate_SequenceOfCurveConstraint* tmp = new GeomPlate_SequenceOfCurveConstraint();
  *tmp = (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->Sequence();
  return gcnew OCGeomPlate_SequenceOfCurveConstraint(tmp);
}

OCGeomPlate_SequenceOfCurveConstraint^ OCGeomPlate_HSequenceOfCurveConstraint::ChangeSequence()
{
  GeomPlate_SequenceOfCurveConstraint* tmp = new GeomPlate_SequenceOfCurveConstraint();
  *tmp = (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->ChangeSequence();
  return gcnew OCGeomPlate_SequenceOfCurveConstraint(tmp);
}

OCGeomPlate_HSequenceOfCurveConstraint^ OCGeomPlate_HSequenceOfCurveConstraint::ShallowCopy()
{
  Handle(GeomPlate_HSequenceOfCurveConstraint) tmp = (*((Handle_GeomPlate_HSequenceOfCurveConstraint*)nativeHandle))->ShallowCopy();
  return gcnew OCGeomPlate_HSequenceOfCurveConstraint(&tmp);
}


