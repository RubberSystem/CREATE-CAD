// File generated by CPPExt (CPP file)
//

#include "GeomPlate_Array1OfHCurveOnSurface.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_HCurveOnSurface.h"


using namespace OCNaroWrappers;

OCGeomPlate_Array1OfHCurveOnSurface::OCGeomPlate_Array1OfHCurveOnSurface(GeomPlate_Array1OfHCurveOnSurface* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGeomPlate_Array1OfHCurveOnSurface::OCGeomPlate_Array1OfHCurveOnSurface(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new GeomPlate_Array1OfHCurveOnSurface(Low, Up);
}

OCGeomPlate_Array1OfHCurveOnSurface::OCGeomPlate_Array1OfHCurveOnSurface(OCNaroWrappers::OCAdaptor3d_HCurveOnSurface^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new GeomPlate_Array1OfHCurveOnSurface(*((Handle_Adaptor3d_HCurveOnSurface*)Item->Handle), Low, Up);
}

 void OCGeomPlate_Array1OfHCurveOnSurface::Init(OCNaroWrappers::OCAdaptor3d_HCurveOnSurface^ V)
{
  ((GeomPlate_Array1OfHCurveOnSurface*)nativeHandle)->Init(*((Handle_Adaptor3d_HCurveOnSurface*)V->Handle));
}

 System::Boolean OCGeomPlate_Array1OfHCurveOnSurface::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((GeomPlate_Array1OfHCurveOnSurface*)nativeHandle)->IsAllocated());
}

OCGeomPlate_Array1OfHCurveOnSurface^ OCGeomPlate_Array1OfHCurveOnSurface::Assign(OCNaroWrappers::OCGeomPlate_Array1OfHCurveOnSurface^ Other)
{
  GeomPlate_Array1OfHCurveOnSurface* tmp = new GeomPlate_Array1OfHCurveOnSurface(0, 0);
  *tmp = ((GeomPlate_Array1OfHCurveOnSurface*)nativeHandle)->Assign(*((GeomPlate_Array1OfHCurveOnSurface*)Other->Handle));
  return gcnew OCGeomPlate_Array1OfHCurveOnSurface(tmp);
}

 Standard_Integer OCGeomPlate_Array1OfHCurveOnSurface::Length()
{
  return ((GeomPlate_Array1OfHCurveOnSurface*)nativeHandle)->Length();
}

 Standard_Integer OCGeomPlate_Array1OfHCurveOnSurface::Lower()
{
  return ((GeomPlate_Array1OfHCurveOnSurface*)nativeHandle)->Lower();
}

 Standard_Integer OCGeomPlate_Array1OfHCurveOnSurface::Upper()
{
  return ((GeomPlate_Array1OfHCurveOnSurface*)nativeHandle)->Upper();
}

 void OCGeomPlate_Array1OfHCurveOnSurface::SetValue(Standard_Integer Index, OCNaroWrappers::OCAdaptor3d_HCurveOnSurface^ Value)
{
  ((GeomPlate_Array1OfHCurveOnSurface*)nativeHandle)->SetValue(Index, *((Handle_Adaptor3d_HCurveOnSurface*)Value->Handle));
}

OCAdaptor3d_HCurveOnSurface^ OCGeomPlate_Array1OfHCurveOnSurface::Value(Standard_Integer Index)
{
  Handle(Adaptor3d_HCurveOnSurface) tmp = ((GeomPlate_Array1OfHCurveOnSurface*)nativeHandle)->Value(Index);
  return gcnew OCAdaptor3d_HCurveOnSurface(&tmp);
}

OCAdaptor3d_HCurveOnSurface^ OCGeomPlate_Array1OfHCurveOnSurface::ChangeValue(Standard_Integer Index)
{
  Handle(Adaptor3d_HCurveOnSurface) tmp = ((GeomPlate_Array1OfHCurveOnSurface*)nativeHandle)->ChangeValue(Index);
  return gcnew OCAdaptor3d_HCurveOnSurface(&tmp);
}


