// File generated by CPPExt (CPP file)
//

#include "GeomPlate_PlateG1Criterion.h"
#include "../Converter.h"
#include "../TColgp/TColgp_SequenceOfXY.h"
#include "../TColgp/TColgp_SequenceOfXYZ.h"
#include "../AdvApp2Var/AdvApp2Var_Patch.h"
#include "../AdvApp2Var/AdvApp2Var_Context.h"


using namespace OCNaroWrappers;

OCGeomPlate_PlateG1Criterion::OCGeomPlate_PlateG1Criterion(GeomPlate_PlateG1Criterion* nativeHandle) : OCAdvApp2Var_Criterion((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCGeomPlate_PlateG1Criterion::OCGeomPlate_PlateG1Criterion(OCNaroWrappers::OCTColgp_SequenceOfXY^ Data, OCNaroWrappers::OCTColgp_SequenceOfXYZ^ G1Data, Standard_Real Maximum, OCAdvApp2Var_CriterionType Type, OCAdvApp2Var_CriterionRepartition Repart) : OCAdvApp2Var_Criterion((OCDummy^)nullptr)

{
  nativeHandle = new GeomPlate_PlateG1Criterion(*((TColgp_SequenceOfXY*)Data->Handle), *((TColgp_SequenceOfXYZ*)G1Data->Handle), Maximum, (AdvApp2Var_CriterionType)Type, (AdvApp2Var_CriterionRepartition)Repart);
}

 void OCGeomPlate_PlateG1Criterion::Value(OCNaroWrappers::OCAdvApp2Var_Patch^ P, OCNaroWrappers::OCAdvApp2Var_Context^ C)
{
  ((GeomPlate_PlateG1Criterion*)nativeHandle)->Value(*((AdvApp2Var_Patch*)P->Handle), *((AdvApp2Var_Context*)C->Handle));
}

 System::Boolean OCGeomPlate_PlateG1Criterion::IsSatisfied(OCNaroWrappers::OCAdvApp2Var_Patch^ P)
{
  return OCConverter::StandardBooleanToBoolean(((GeomPlate_PlateG1Criterion*)nativeHandle)->IsSatisfied(*((AdvApp2Var_Patch*)P->Handle)));
}


