// File generated by CPPExt (MPV)
//
#ifndef _GeomPlate_BuildAveragePlane_OCWrappers_HeaderFile
#define _GeomPlate_BuildAveragePlane_OCWrappers_HeaderFile

// include native header
#include <GeomPlate_BuildAveragePlane.hxx>
#include "../Converter.h"


#include "../gp/gp_Vec.h"
#include "../gp/gp_Pnt.h"


namespace OCNaroWrappers
{

ref class OCTColgp_HArray1OfPnt;
ref class OCGeom_Plane;
ref class OCGeom_Line;
ref class OCTColgp_SequenceOfVec;
ref class OCgp_Vec;
ref class OCGeomPlate_SequenceOfAij;


//! This class computes an average inertial plane with an <br>
//!          array of points. <br>
public ref class OCGeomPlate_BuildAveragePlane  {

protected:
  GeomPlate_BuildAveragePlane* nativeHandle;
  OCGeomPlate_BuildAveragePlane(OCDummy^) {};

public:
  property GeomPlate_BuildAveragePlane* Handle
  {
    GeomPlate_BuildAveragePlane* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeomPlate_BuildAveragePlane(GeomPlate_BuildAveragePlane* nativeHandle);

// Methods PUBLIC

//! Tol is a  Tolerance to make the difference between <br>
//!           the result plane and the result line. <br>
//! if POption = 1 : automatical parametrisation <br>
//! if POption = 2 : parametrisation by eigen vectors <br>
//! if NOption = 1 : the average plane is the inertial plane. <br>
//! if NOption = 2 : the average plane is the plane of max. flux. <br>
OCGeomPlate_BuildAveragePlane(OCNaroWrappers::OCTColgp_HArray1OfPnt^ Pts, Standard_Integer NbBoundPoints, Standard_Real Tol, Standard_Integer POption, Standard_Integer NOption);

//! Creates the plane from the "best vector" <br>
OCGeomPlate_BuildAveragePlane(OCNaroWrappers::OCTColgp_SequenceOfVec^ Normals, OCNaroWrappers::OCTColgp_HArray1OfPnt^ Pts);


//! Return the average Plane. <br>
 /*instead*/  OCGeom_Plane^ Plane() ;


//! Return a Line when 2 eigenvalues are null. <br>
 /*instead*/  OCGeom_Line^ Line() ;

//! return OK if is a plane. <br>
 /*instead*/  System::Boolean IsPlane() ;

//! return OK if is a line. <br>
 /*instead*/  System::Boolean IsLine() ;

//! computes the   minimal box  to include  all normal <br>
//!          projection points of the initial array  on the plane. <br>
 /*instead*/  void MinMaxBox(Standard_Real& Umin, Standard_Real& Umax, Standard_Real& Vmin, Standard_Real& Vmax) ;


static /*instead*/  System::Boolean HalfSpace(OCNaroWrappers::OCTColgp_SequenceOfVec^ NewNormals, OCNaroWrappers::OCTColgp_SequenceOfVec^ Normals, OCNaroWrappers::OCGeomPlate_SequenceOfAij^ Bset, Standard_Real LinTol, Standard_Real AngTol) ;

~OCGeomPlate_BuildAveragePlane()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
