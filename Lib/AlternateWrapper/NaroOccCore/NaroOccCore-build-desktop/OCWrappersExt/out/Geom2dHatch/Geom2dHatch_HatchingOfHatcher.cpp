// File generated by CPPExt (CPP file)
//

#include "Geom2dHatch_HatchingOfHatcher.h"
#include "../Converter.h"
#include "../Geom2dAdaptor/Geom2dAdaptor_Curve.h"
#include "../HatchGen/HatchGen_PointOnHatching.h"
#include "../HatchGen/HatchGen_Domain.h"
#include "../gp/gp_Pnt2d.h"


using namespace OCNaroWrappers;

OCGeom2dHatch_HatchingOfHatcher::OCGeom2dHatch_HatchingOfHatcher(Geom2dHatch_HatchingOfHatcher* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGeom2dHatch_HatchingOfHatcher::OCGeom2dHatch_HatchingOfHatcher() 
{
  nativeHandle = new Geom2dHatch_HatchingOfHatcher();
}

OCGeom2dHatch_HatchingOfHatcher::OCGeom2dHatch_HatchingOfHatcher(OCNaroWrappers::OCGeom2dAdaptor_Curve^ Curve) 
{
  nativeHandle = new Geom2dHatch_HatchingOfHatcher(*((Geom2dAdaptor_Curve*)Curve->Handle));
}

OCGeom2dAdaptor_Curve^ OCGeom2dHatch_HatchingOfHatcher::Curve()
{
  Geom2dAdaptor_Curve* tmp = new Geom2dAdaptor_Curve();
  *tmp = ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->Curve();
  return gcnew OCGeom2dAdaptor_Curve(tmp);
}

OCGeom2dAdaptor_Curve^ OCGeom2dHatch_HatchingOfHatcher::ChangeCurve()
{
  Geom2dAdaptor_Curve* tmp = new Geom2dAdaptor_Curve();
  *tmp = ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->ChangeCurve();
  return gcnew OCGeom2dAdaptor_Curve(tmp);
}

 void OCGeom2dHatch_HatchingOfHatcher::TrimDone(System::Boolean Flag)
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->TrimDone(OCConverter::BooleanToStandardBoolean(Flag));
}

 System::Boolean OCGeom2dHatch_HatchingOfHatcher::TrimDone()
{
  return OCConverter::StandardBooleanToBoolean(((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->TrimDone());
}

 void OCGeom2dHatch_HatchingOfHatcher::TrimFailed(System::Boolean Flag)
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->TrimFailed(OCConverter::BooleanToStandardBoolean(Flag));
}

 System::Boolean OCGeom2dHatch_HatchingOfHatcher::TrimFailed()
{
  return OCConverter::StandardBooleanToBoolean(((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->TrimFailed());
}

 void OCGeom2dHatch_HatchingOfHatcher::IsDone(System::Boolean Flag)
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->IsDone(OCConverter::BooleanToStandardBoolean(Flag));
}

 System::Boolean OCGeom2dHatch_HatchingOfHatcher::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->IsDone());
}

 void OCGeom2dHatch_HatchingOfHatcher::Status(OCHatchGen_ErrorStatus Status)
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->Status((HatchGen_ErrorStatus)Status);
}

 OCHatchGen_ErrorStatus OCGeom2dHatch_HatchingOfHatcher::Status()
{
  return (OCHatchGen_ErrorStatus)(((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->Status());
}

 void OCGeom2dHatch_HatchingOfHatcher::AddPoint(OCNaroWrappers::OCHatchGen_PointOnHatching^ Point, Standard_Real Confusion)
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->AddPoint(*((HatchGen_PointOnHatching*)Point->Handle), Confusion);
}

 Standard_Integer OCGeom2dHatch_HatchingOfHatcher::NbPoints()
{
  return ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->NbPoints();
}

OCHatchGen_PointOnHatching^ OCGeom2dHatch_HatchingOfHatcher::Point(Standard_Integer Index)
{
  HatchGen_PointOnHatching* tmp = new HatchGen_PointOnHatching();
  *tmp = ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->Point(Index);
  return gcnew OCHatchGen_PointOnHatching(tmp);
}

OCHatchGen_PointOnHatching^ OCGeom2dHatch_HatchingOfHatcher::ChangePoint(Standard_Integer Index)
{
  HatchGen_PointOnHatching* tmp = new HatchGen_PointOnHatching();
  *tmp = ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->ChangePoint(Index);
  return gcnew OCHatchGen_PointOnHatching(tmp);
}

 void OCGeom2dHatch_HatchingOfHatcher::RemPoint(Standard_Integer Index)
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->RemPoint(Index);
}

 void OCGeom2dHatch_HatchingOfHatcher::ClrPoints()
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->ClrPoints();
}

 void OCGeom2dHatch_HatchingOfHatcher::AddDomain(OCNaroWrappers::OCHatchGen_Domain^ Domain)
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->AddDomain(*((HatchGen_Domain*)Domain->Handle));
}

 Standard_Integer OCGeom2dHatch_HatchingOfHatcher::NbDomains()
{
  return ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->NbDomains();
}

OCHatchGen_Domain^ OCGeom2dHatch_HatchingOfHatcher::Domain(Standard_Integer Index)
{
  HatchGen_Domain* tmp = new HatchGen_Domain();
  *tmp = ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->Domain(Index);
  return gcnew OCHatchGen_Domain(tmp);
}

 void OCGeom2dHatch_HatchingOfHatcher::RemDomain(Standard_Integer Index)
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->RemDomain(Index);
}

 void OCGeom2dHatch_HatchingOfHatcher::ClrDomains()
{
  ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->ClrDomains();
}

OCgp_Pnt2d^ OCGeom2dHatch_HatchingOfHatcher::ClassificationPoint()
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = ((Geom2dHatch_HatchingOfHatcher*)nativeHandle)->ClassificationPoint();
  return gcnew OCgp_Pnt2d(tmp);
}


