// File generated by CPPExt (CPP file)
//

#include "Geom2dHatch_MapOfElementsOfElementsOfHatcher.h"
#include "../Converter.h"
#include "Geom2dHatch_ElementOfHatcher.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "Geom2dHatch_DataMapNodeOfMapOfElementsOfElementsOfHatcher.h"
#include "Geom2dHatch_DataMapIteratorOfMapOfElementsOfElementsOfHatcher.h"


using namespace OCNaroWrappers;

OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::OCGeom2dHatch_MapOfElementsOfElementsOfHatcher(Geom2dHatch_MapOfElementsOfElementsOfHatcher* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::OCGeom2dHatch_MapOfElementsOfElementsOfHatcher(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new Geom2dHatch_MapOfElementsOfElementsOfHatcher(NbBuckets);
}

OCGeom2dHatch_MapOfElementsOfElementsOfHatcher^ OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::Assign(OCNaroWrappers::OCGeom2dHatch_MapOfElementsOfElementsOfHatcher^ Other)
{
  Geom2dHatch_MapOfElementsOfElementsOfHatcher* tmp = new Geom2dHatch_MapOfElementsOfElementsOfHatcher(0);
  *tmp = ((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)nativeHandle)->Assign(*((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)Other->Handle));
  return gcnew OCGeom2dHatch_MapOfElementsOfElementsOfHatcher(tmp);
}

 void OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::ReSize(Standard_Integer NbBuckets)
{
  ((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::Bind(Standard_Integer K, OCNaroWrappers::OCGeom2dHatch_ElementOfHatcher^ I)
{
  return OCConverter::StandardBooleanToBoolean(((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)nativeHandle)->Bind(K, *((Geom2dHatch_ElementOfHatcher*)I->Handle)));
}

 System::Boolean OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)nativeHandle)->IsBound(K));
}

 System::Boolean OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)nativeHandle)->UnBind(K));
}

OCGeom2dHatch_ElementOfHatcher^ OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::Find(Standard_Integer K)
{
  Geom2dHatch_ElementOfHatcher* tmp = new Geom2dHatch_ElementOfHatcher();
  *tmp = ((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)nativeHandle)->Find(K);
  return gcnew OCGeom2dHatch_ElementOfHatcher(tmp);
}

OCGeom2dHatch_ElementOfHatcher^ OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::ChangeFind(Standard_Integer K)
{
  Geom2dHatch_ElementOfHatcher* tmp = new Geom2dHatch_ElementOfHatcher();
  *tmp = ((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)nativeHandle)->ChangeFind(K);
  return gcnew OCGeom2dHatch_ElementOfHatcher(tmp);
}

 Standard_Address OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::Find1(Standard_Integer K)
{
  return ((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)nativeHandle)->Find1(K);
}

 Standard_Address OCGeom2dHatch_MapOfElementsOfElementsOfHatcher::ChangeFind1(Standard_Integer K)
{
  return ((Geom2dHatch_MapOfElementsOfElementsOfHatcher*)nativeHandle)->ChangeFind1(K);
}


