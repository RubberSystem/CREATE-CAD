// File generated by CPPExt (CPP file)
//

#include "Geom2dHatch_Intersector.h"
#include "../Converter.h"
#include "../Geom2dAdaptor/Geom2dAdaptor_Curve.h"
#include "../gp/gp_Lin2d.h"
#include "../gp/gp_Dir2d.h"


using namespace OCNaroWrappers;

OCGeom2dHatch_Intersector::OCGeom2dHatch_Intersector(Geom2dHatch_Intersector* nativeHandle) : OCGeom2dInt_GInter((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCGeom2dHatch_Intersector::OCGeom2dHatch_Intersector(Standard_Real Confusion, Standard_Real Tangency) : OCGeom2dInt_GInter((OCDummy^)nullptr)

{
  nativeHandle = new Geom2dHatch_Intersector(Confusion, Tangency);
}

 Standard_Real OCGeom2dHatch_Intersector::ConfusionTolerance()
{
  return ((Geom2dHatch_Intersector*)nativeHandle)->ConfusionTolerance();
}

 void OCGeom2dHatch_Intersector::SetConfusionTolerance(Standard_Real Confusion)
{
  ((Geom2dHatch_Intersector*)nativeHandle)->SetConfusionTolerance(Confusion);
}

 Standard_Real OCGeom2dHatch_Intersector::TangencyTolerance()
{
  return ((Geom2dHatch_Intersector*)nativeHandle)->TangencyTolerance();
}

 void OCGeom2dHatch_Intersector::SetTangencyTolerance(Standard_Real Tangency)
{
  ((Geom2dHatch_Intersector*)nativeHandle)->SetTangencyTolerance(Tangency);
}

 void OCGeom2dHatch_Intersector::Intersect(OCNaroWrappers::OCGeom2dAdaptor_Curve^ C1, OCNaroWrappers::OCGeom2dAdaptor_Curve^ C2)
{
  ((Geom2dHatch_Intersector*)nativeHandle)->Intersect(*((Geom2dAdaptor_Curve*)C1->Handle), *((Geom2dAdaptor_Curve*)C2->Handle));
}

OCGeom2dHatch_Intersector::OCGeom2dHatch_Intersector() : OCGeom2dInt_GInter((OCDummy^)nullptr)

{
  nativeHandle = new Geom2dHatch_Intersector();
}

 void OCGeom2dHatch_Intersector::Perform(OCNaroWrappers::OCgp_Lin2d^ L, Standard_Real P, Standard_Real Tol, OCNaroWrappers::OCGeom2dAdaptor_Curve^ E)
{
  ((Geom2dHatch_Intersector*)nativeHandle)->Perform(*((gp_Lin2d*)L->Handle), P, Tol, *((Geom2dAdaptor_Curve*)E->Handle));
}

 void OCGeom2dHatch_Intersector::LocalGeometry(OCNaroWrappers::OCGeom2dAdaptor_Curve^ E, Standard_Real U, OCNaroWrappers::OCgp_Dir2d^ T, OCNaroWrappers::OCgp_Dir2d^ N, Standard_Real& C)
{
  ((Geom2dHatch_Intersector*)nativeHandle)->LocalGeometry(*((Geom2dAdaptor_Curve*)E->Handle), U, *((gp_Dir2d*)T->Handle), *((gp_Dir2d*)N->Handle), C);
}


