// File generated by CPPExt (MPV)
//
#ifndef _Geom2dHatch_ElementsOfHatcher_OCWrappers_HeaderFile
#define _Geom2dHatch_ElementsOfHatcher_OCWrappers_HeaderFile

// include native header
#include <Geom2dHatch_ElementsOfHatcher.hxx>
#include "../Converter.h"


#include "Geom2dHatch_MapOfElementsOfElementsOfHatcher.h"
#include "Geom2dHatch_DataMapIteratorOfMapOfElementsOfElementsOfHatcher.h"
#include "../TopAbs/TopAbs_Orientation.h"


namespace OCNaroWrappers
{

ref class OCGeom2dHatch_ElementOfHatcher;
ref class OCTColStd_MapIntegerHasher;
ref class OCGeom2dAdaptor_Curve;
ref class OCGeom2dHatch_MapOfElementsOfElementsOfHatcher;
ref class OCGeom2dHatch_DataMapNodeOfMapOfElementsOfElementsOfHatcher;
ref class OCGeom2dHatch_DataMapIteratorOfMapOfElementsOfElementsOfHatcher;
ref class OCgp_Pnt2d;
ref class OCgp_Lin2d;



public ref class OCGeom2dHatch_ElementsOfHatcher  {

protected:
  Geom2dHatch_ElementsOfHatcher* nativeHandle;
  OCGeom2dHatch_ElementsOfHatcher(OCDummy^) {};

public:
  property Geom2dHatch_ElementsOfHatcher* Handle
  {
    Geom2dHatch_ElementsOfHatcher* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeom2dHatch_ElementsOfHatcher(Geom2dHatch_ElementsOfHatcher* nativeHandle);

// Methods PUBLIC


OCGeom2dHatch_ElementsOfHatcher();


OCGeom2dHatch_ElementsOfHatcher(OCNaroWrappers::OCGeom2dHatch_ElementsOfHatcher^ Other);


 /*instead*/  System::Boolean Bind(Standard_Integer K, OCNaroWrappers::OCGeom2dHatch_ElementOfHatcher^ I) ;


 /*instead*/  System::Boolean IsBound(Standard_Integer K) ;


 /*instead*/  System::Boolean UnBind(Standard_Integer K) ;


 /*instead*/  OCGeom2dHatch_ElementOfHatcher^ Find(Standard_Integer K) ;


 /*instead*/  OCGeom2dHatch_ElementOfHatcher^ ChangeFind(Standard_Integer K) ;


 /*instead*/  System::Boolean Reject(OCNaroWrappers::OCgp_Pnt2d^ P) ;


 /*instead*/  System::Boolean Segment(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Lin2d^ L, Standard_Real& Par) ;


 /*instead*/  System::Boolean OtherSegment(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Lin2d^ L, Standard_Real& Par) ;


 /*instead*/  void InitWires() ;


 /*instead*/  System::Boolean MoreWires() ;


 /*instead*/  void NextWire() ;


 /*instead*/  System::Boolean RejectWire(OCNaroWrappers::OCgp_Lin2d^ L, Standard_Real Par) ;


 /*instead*/  void InitEdges() ;


 /*instead*/  System::Boolean MoreEdges() ;


 /*instead*/  void NextEdge() ;


 /*instead*/  System::Boolean RejectEdge(OCNaroWrappers::OCgp_Lin2d^ L, Standard_Real Par) ;


 /*instead*/  void CurrentEdge(OCNaroWrappers::OCGeom2dAdaptor_Curve^ E, OCTopAbs_Orientation& Or) ;

~OCGeom2dHatch_ElementsOfHatcher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
