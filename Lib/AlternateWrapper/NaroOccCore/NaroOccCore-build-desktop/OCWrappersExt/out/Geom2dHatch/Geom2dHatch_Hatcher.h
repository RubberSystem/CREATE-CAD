// File generated by CPPExt (MPV)
//
#ifndef _Geom2dHatch_Hatcher_OCWrappers_HeaderFile
#define _Geom2dHatch_Hatcher_OCWrappers_HeaderFile

// include native header
#include <Geom2dHatch_Hatcher.hxx>
#include "../Converter.h"


#include "Geom2dHatch_Intersector.h"
#include "Geom2dHatch_ElementsOfHatcher.h"
#include "Geom2dHatch_HatchingsOfHatcher.h"
#include "../TopAbs/TopAbs_Orientation.h"
#include "../HatchGen/HatchGen_ErrorStatus.h"


namespace OCNaroWrappers
{

ref class OCGeom2dAdaptor_Curve;
ref class OCGeom2dHatch_Intersector;
ref class OCGeom2dHatch_ElementOfHatcher;
ref class OCGeom2dHatch_ElementsOfHatcher;
ref class OCGeom2dHatch_MapOfElementsOfElementsOfHatcher;
ref class OCGeom2dHatch_HatchingOfHatcher;
ref class OCGeom2dHatch_HatchingsOfHatcher;
ref class OCGeom2dHatch_DataMapNodeOfHatchingsOfHatcher;
ref class OCGeom2dHatch_DataMapIteratorOfHatchingsOfHatcher;
ref class OCGeom2dHatch_ClassifierOfHatcher;
ref class OCGeom2dHatch_FClass2dOfClassifierOfHatcher;
ref class OCHatchGen_PointOnHatching;
ref class OCHatchGen_Domain;



public ref class OCGeom2dHatch_Hatcher  {

protected:
  Geom2dHatch_Hatcher* nativeHandle;
  OCGeom2dHatch_Hatcher(OCDummy^) {};

public:
  property Geom2dHatch_Hatcher* Handle
  {
    Geom2dHatch_Hatcher* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeom2dHatch_Hatcher(Geom2dHatch_Hatcher* nativeHandle);

// Methods PUBLIC


OCGeom2dHatch_Hatcher(OCNaroWrappers::OCGeom2dHatch_Intersector^ Intersector, Standard_Real Confusion2d, Standard_Real Confusion3d, System::Boolean KeepPnt, System::Boolean KeepSeg);


 /*instead*/  void Intersector(OCNaroWrappers::OCGeom2dHatch_Intersector^ Intersector) ;


 /*instead*/  OCGeom2dHatch_Intersector^ Intersector() ;


 /*instead*/  OCGeom2dHatch_Intersector^ ChangeIntersector() ;


 /*instead*/  void Confusion2d(Standard_Real Confusion) ;


 /*instead*/  Standard_Real Confusion2d() ;


 /*instead*/  void Confusion3d(Standard_Real Confusion) ;


 /*instead*/  Standard_Real Confusion3d() ;


 /*instead*/  void KeepPoints(System::Boolean Keep) ;


 /*instead*/  System::Boolean KeepPoints() ;


 /*instead*/  void KeepSegments(System::Boolean Keep) ;


 /*instead*/  System::Boolean KeepSegments() ;


 /*instead*/  void Clear() ;


 /*instead*/  OCGeom2dAdaptor_Curve^ ElementCurve(Standard_Integer IndE) ;


 /*instead*/  Standard_Integer AddElement(OCNaroWrappers::OCGeom2dAdaptor_Curve^ Curve, OCTopAbs_Orientation Orientation) ;


 /*instead*/  void RemElement(Standard_Integer IndE) ;


 /*instead*/  void ClrElements() ;


 /*instead*/  OCGeom2dAdaptor_Curve^ HatchingCurve(Standard_Integer IndH) ;


 /*instead*/  Standard_Integer AddHatching(OCNaroWrappers::OCGeom2dAdaptor_Curve^ Curve) ;


 /*instead*/  void RemHatching(Standard_Integer IndH) ;


 /*instead*/  void ClrHatchings() ;


 /*instead*/  Standard_Integer NbPoints(Standard_Integer IndH) ;


 /*instead*/  OCHatchGen_PointOnHatching^ Point(Standard_Integer IndH, Standard_Integer IndP) ;


 /*instead*/  void Trim() ;


 /*instead*/  Standard_Integer Trim(OCNaroWrappers::OCGeom2dAdaptor_Curve^ Curve) ;


 /*instead*/  void Trim(Standard_Integer IndH) ;


 /*instead*/  void ComputeDomains() ;


 /*instead*/  void ComputeDomains(Standard_Integer IndH) ;


 /*instead*/  System::Boolean TrimDone(Standard_Integer IndH) ;


 /*instead*/  System::Boolean TrimFailed(Standard_Integer IndH) ;


 /*instead*/  System::Boolean IsDone() ;


 /*instead*/  System::Boolean IsDone(Standard_Integer IndH) ;


 /*instead*/  OCHatchGen_ErrorStatus Status(Standard_Integer IndH) ;


 /*instead*/  Standard_Integer NbDomains(Standard_Integer IndH) ;


 /*instead*/  OCHatchGen_Domain^ Domain(Standard_Integer IndH, Standard_Integer IDom) ;


 /*instead*/  void Dump() ;

~OCGeom2dHatch_Hatcher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
