// File generated by CPPExt (Transient)
//
#ifndef _Geom2dHatch_DataMapNodeOfHatchingsOfHatcher_OCWrappers_HeaderFile
#define _Geom2dHatch_DataMapNodeOfHatchingsOfHatcher_OCWrappers_HeaderFile

// include the wrapped class
#include <Geom2dHatch_DataMapNodeOfHatchingsOfHatcher.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_MapNode.h"

#include "Geom2dHatch_HatchingOfHatcher.h"


namespace OCNaroWrappers
{

ref class OCGeom2dHatch_HatchingOfHatcher;
ref class OCTColStd_MapIntegerHasher;
ref class OCGeom2dHatch_HatchingsOfHatcher;
ref class OCGeom2dHatch_DataMapIteratorOfHatchingsOfHatcher;



public ref class OCGeom2dHatch_DataMapNodeOfHatchingsOfHatcher : OCTCollection_MapNode {

protected:
  // dummy constructor;
  OCGeom2dHatch_DataMapNodeOfHatchingsOfHatcher(OCDummy^) : OCTCollection_MapNode((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom2dHatch_DataMapNodeOfHatchingsOfHatcher(Handle(Geom2dHatch_DataMapNodeOfHatchingsOfHatcher)* nativeHandle);

// Methods PUBLIC


OCGeom2dHatch_DataMapNodeOfHatchingsOfHatcher(Standard_Integer K, OCNaroWrappers::OCGeom2dHatch_HatchingOfHatcher^ I, TCollection_MapNodePtr n);


 /*instead*/  Standard_Integer Key() ;


 /*instead*/  OCGeom2dHatch_HatchingOfHatcher^ Value() ;

~OCGeom2dHatch_DataMapNodeOfHatchingsOfHatcher()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
