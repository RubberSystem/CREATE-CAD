// File generated by CPPExt (MPV)
//
#ifndef _Geom2dHatch_DataMapIteratorOfHatchingsOfHatcher_OCWrappers_HeaderFile
#define _Geom2dHatch_DataMapIteratorOfHatchingsOfHatcher_OCWrappers_HeaderFile

// include native header
#include <Geom2dHatch_DataMapIteratorOfHatchingsOfHatcher.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMapIterator.h"

#include "../TCollection/TCollection_BasicMapIterator.h"


namespace OCNaroWrappers
{

ref class OCGeom2dHatch_HatchingOfHatcher;
ref class OCTColStd_MapIntegerHasher;
ref class OCGeom2dHatch_HatchingsOfHatcher;
ref class OCGeom2dHatch_DataMapNodeOfHatchingsOfHatcher;



public ref class OCGeom2dHatch_DataMapIteratorOfHatchingsOfHatcher  : public OCTCollection_BasicMapIterator {

protected:
  // dummy constructor;
  OCGeom2dHatch_DataMapIteratorOfHatchingsOfHatcher(OCDummy^) : OCTCollection_BasicMapIterator((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom2dHatch_DataMapIteratorOfHatchingsOfHatcher(Geom2dHatch_DataMapIteratorOfHatchingsOfHatcher* nativeHandle);

// Methods PUBLIC


OCGeom2dHatch_DataMapIteratorOfHatchingsOfHatcher();


OCGeom2dHatch_DataMapIteratorOfHatchingsOfHatcher(OCNaroWrappers::OCGeom2dHatch_HatchingsOfHatcher^ aMap);


 /*instead*/  void Initialize(OCNaroWrappers::OCGeom2dHatch_HatchingsOfHatcher^ aMap) ;


 /*instead*/  Standard_Integer Key() ;


 /*instead*/  OCGeom2dHatch_HatchingOfHatcher^ Value() ;

~OCGeom2dHatch_DataMapIteratorOfHatchingsOfHatcher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
