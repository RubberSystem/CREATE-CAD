// File generated by CPPExt (MPV)
//
#ifndef _Geom2dHatch_HatchingsOfHatcher_OCWrappers_HeaderFile
#define _Geom2dHatch_HatchingsOfHatcher_OCWrappers_HeaderFile

// include native header
#include <Geom2dHatch_HatchingsOfHatcher.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCGeom2dHatch_HatchingOfHatcher;
ref class OCTColStd_MapIntegerHasher;
ref class OCGeom2dHatch_DataMapNodeOfHatchingsOfHatcher;
ref class OCGeom2dHatch_DataMapIteratorOfHatchingsOfHatcher;



public ref class OCGeom2dHatch_HatchingsOfHatcher  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCGeom2dHatch_HatchingsOfHatcher(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom2dHatch_HatchingsOfHatcher(Geom2dHatch_HatchingsOfHatcher* nativeHandle);

// Methods PUBLIC


OCGeom2dHatch_HatchingsOfHatcher(Standard_Integer NbBuckets);


 /*instead*/  OCGeom2dHatch_HatchingsOfHatcher^ Assign(OCNaroWrappers::OCGeom2dHatch_HatchingsOfHatcher^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(Standard_Integer K, OCNaroWrappers::OCGeom2dHatch_HatchingOfHatcher^ I) ;


 /*instead*/  System::Boolean IsBound(Standard_Integer K) ;


 /*instead*/  System::Boolean UnBind(Standard_Integer K) ;


 /*instead*/  OCGeom2dHatch_HatchingOfHatcher^ Find(Standard_Integer K) ;


 /*instead*/  OCGeom2dHatch_HatchingOfHatcher^ ChangeFind(Standard_Integer K) ;


 /*instead*/  Standard_Address Find1(Standard_Integer K) ;


 /*instead*/  Standard_Address ChangeFind1(Standard_Integer K) ;

~OCGeom2dHatch_HatchingsOfHatcher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
