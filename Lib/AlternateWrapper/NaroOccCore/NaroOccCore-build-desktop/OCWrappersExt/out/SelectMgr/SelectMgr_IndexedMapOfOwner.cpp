// File generated by CPPExt (CPP file)
//

#include "SelectMgr_IndexedMapOfOwner.h"
#include "../Converter.h"
#include "SelectMgr_EntityOwner.h"
#include "../TColStd/TColStd_MapTransientHasher.h"
#include "SelectMgr_IndexedMapNodeOfIndexedMapOfOwner.h"


using namespace OCNaroWrappers;

OCSelectMgr_IndexedMapOfOwner::OCSelectMgr_IndexedMapOfOwner(SelectMgr_IndexedMapOfOwner* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCSelectMgr_IndexedMapOfOwner::OCSelectMgr_IndexedMapOfOwner(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new SelectMgr_IndexedMapOfOwner(NbBuckets);
}

OCSelectMgr_IndexedMapOfOwner^ OCSelectMgr_IndexedMapOfOwner::Assign(OCNaroWrappers::OCSelectMgr_IndexedMapOfOwner^ Other)
{
  SelectMgr_IndexedMapOfOwner* tmp = new SelectMgr_IndexedMapOfOwner(0);
  *tmp = ((SelectMgr_IndexedMapOfOwner*)nativeHandle)->Assign(*((SelectMgr_IndexedMapOfOwner*)Other->Handle));
  return gcnew OCSelectMgr_IndexedMapOfOwner(tmp);
}

 void OCSelectMgr_IndexedMapOfOwner::ReSize(Standard_Integer NbBuckets)
{
  ((SelectMgr_IndexedMapOfOwner*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCSelectMgr_IndexedMapOfOwner::Add(OCNaroWrappers::OCSelectMgr_EntityOwner^ K)
{
  return ((SelectMgr_IndexedMapOfOwner*)nativeHandle)->Add(*((Handle_SelectMgr_EntityOwner*)K->Handle));
}

 void OCSelectMgr_IndexedMapOfOwner::Substitute(Standard_Integer I, OCNaroWrappers::OCSelectMgr_EntityOwner^ K)
{
  ((SelectMgr_IndexedMapOfOwner*)nativeHandle)->Substitute(I, *((Handle_SelectMgr_EntityOwner*)K->Handle));
}

 void OCSelectMgr_IndexedMapOfOwner::RemoveLast()
{
  ((SelectMgr_IndexedMapOfOwner*)nativeHandle)->RemoveLast();
}

 System::Boolean OCSelectMgr_IndexedMapOfOwner::Contains(OCNaroWrappers::OCSelectMgr_EntityOwner^ K)
{
  return OCConverter::StandardBooleanToBoolean(((SelectMgr_IndexedMapOfOwner*)nativeHandle)->Contains(*((Handle_SelectMgr_EntityOwner*)K->Handle)));
}

OCSelectMgr_EntityOwner^ OCSelectMgr_IndexedMapOfOwner::FindKey(Standard_Integer I)
{
  Handle(SelectMgr_EntityOwner) tmp = ((SelectMgr_IndexedMapOfOwner*)nativeHandle)->FindKey(I);
  return gcnew OCSelectMgr_EntityOwner(&tmp);
}

 Standard_Integer OCSelectMgr_IndexedMapOfOwner::FindIndex(OCNaroWrappers::OCSelectMgr_EntityOwner^ K)
{
  return ((SelectMgr_IndexedMapOfOwner*)nativeHandle)->FindIndex(*((Handle_SelectMgr_EntityOwner*)K->Handle));
}


