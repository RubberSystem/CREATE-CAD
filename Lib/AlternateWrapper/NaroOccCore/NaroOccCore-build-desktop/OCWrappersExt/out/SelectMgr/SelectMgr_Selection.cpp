// File generated by CPPExt (CPP file)
//

#include "SelectMgr_Selection.h"
#include "../Converter.h"
#include "../SelectBasics/SelectBasics_SensitiveEntity.h"


using namespace OCNaroWrappers;

OCSelectMgr_Selection::OCSelectMgr_Selection(Handle(SelectMgr_Selection)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_SelectMgr_Selection(*nativeHandle);
}

OCSelectMgr_Selection::OCSelectMgr_Selection(Standard_Integer IdMode) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_SelectMgr_Selection(new SelectMgr_Selection(IdMode));
}

 void OCSelectMgr_Selection::Add(OCNaroWrappers::OCSelectBasics_SensitiveEntity^ aprimitive)
{
  (*((Handle_SelectMgr_Selection*)nativeHandle))->Add(*((Handle_SelectBasics_SensitiveEntity*)aprimitive->Handle));
}

 void OCSelectMgr_Selection::Clear()
{
  (*((Handle_SelectMgr_Selection*)nativeHandle))->Clear();
}

 System::Boolean OCSelectMgr_Selection::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_SelectMgr_Selection*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCSelectMgr_Selection::Mode()
{
  return (*((Handle_SelectMgr_Selection*)nativeHandle))->Mode();
}

 void OCSelectMgr_Selection::Init()
{
  (*((Handle_SelectMgr_Selection*)nativeHandle))->Init();
}

 System::Boolean OCSelectMgr_Selection::More()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_SelectMgr_Selection*)nativeHandle))->More());
}

 void OCSelectMgr_Selection::Next()
{
  (*((Handle_SelectMgr_Selection*)nativeHandle))->Next();
}

OCSelectBasics_SensitiveEntity^ OCSelectMgr_Selection::Sensitive()
{
  Handle(SelectBasics_SensitiveEntity) tmp = (*((Handle_SelectMgr_Selection*)nativeHandle))->Sensitive();
  return gcnew OCSelectBasics_SensitiveEntity(&tmp);
}

 OCSelectMgr_TypeOfUpdate OCSelectMgr_Selection::UpdateStatus()
{
  return (OCSelectMgr_TypeOfUpdate)((*((Handle_SelectMgr_Selection*)nativeHandle))->UpdateStatus());
}

 void OCSelectMgr_Selection::UpdateStatus(OCSelectMgr_TypeOfUpdate UpdateFlag)
{
  (*((Handle_SelectMgr_Selection*)nativeHandle))->UpdateStatus((SelectMgr_TypeOfUpdate)UpdateFlag);
}


