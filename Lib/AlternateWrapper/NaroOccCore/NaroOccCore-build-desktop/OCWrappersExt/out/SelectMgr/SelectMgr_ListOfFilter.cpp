// File generated by CPPExt (CPP file)
//

#include "SelectMgr_ListOfFilter.h"
#include "../Converter.h"
#include "SelectMgr_ListIteratorOfListOfFilter.h"
#include "SelectMgr_Filter.h"
#include "SelectMgr_ListNodeOfListOfFilter.h"


using namespace OCNaroWrappers;

OCSelectMgr_ListOfFilter::OCSelectMgr_ListOfFilter(SelectMgr_ListOfFilter* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCSelectMgr_ListOfFilter::OCSelectMgr_ListOfFilter() 
{
  nativeHandle = new SelectMgr_ListOfFilter();
}

 void OCSelectMgr_ListOfFilter::Assign(OCNaroWrappers::OCSelectMgr_ListOfFilter^ Other)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->Assign(*((SelectMgr_ListOfFilter*)Other->Handle));
}

 Standard_Integer OCSelectMgr_ListOfFilter::Extent()
{
  return ((SelectMgr_ListOfFilter*)nativeHandle)->Extent();
}

 System::Boolean OCSelectMgr_ListOfFilter::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((SelectMgr_ListOfFilter*)nativeHandle)->IsEmpty());
}

 void OCSelectMgr_ListOfFilter::Prepend(OCNaroWrappers::OCSelectMgr_Filter^ I)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->Prepend(*((Handle_SelectMgr_Filter*)I->Handle));
}

 void OCSelectMgr_ListOfFilter::Prepend(OCNaroWrappers::OCSelectMgr_Filter^ I, OCNaroWrappers::OCSelectMgr_ListIteratorOfListOfFilter^ theIt)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->Prepend(*((Handle_SelectMgr_Filter*)I->Handle), *((SelectMgr_ListIteratorOfListOfFilter*)theIt->Handle));
}

 void OCSelectMgr_ListOfFilter::Prepend(OCNaroWrappers::OCSelectMgr_ListOfFilter^ Other)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->Prepend(*((SelectMgr_ListOfFilter*)Other->Handle));
}

 void OCSelectMgr_ListOfFilter::Append(OCNaroWrappers::OCSelectMgr_Filter^ I)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->Append(*((Handle_SelectMgr_Filter*)I->Handle));
}

 void OCSelectMgr_ListOfFilter::Append(OCNaroWrappers::OCSelectMgr_Filter^ I, OCNaroWrappers::OCSelectMgr_ListIteratorOfListOfFilter^ theIt)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->Append(*((Handle_SelectMgr_Filter*)I->Handle), *((SelectMgr_ListIteratorOfListOfFilter*)theIt->Handle));
}

 void OCSelectMgr_ListOfFilter::Append(OCNaroWrappers::OCSelectMgr_ListOfFilter^ Other)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->Append(*((SelectMgr_ListOfFilter*)Other->Handle));
}

OCSelectMgr_Filter^ OCSelectMgr_ListOfFilter::First()
{
  Handle(SelectMgr_Filter) tmp = ((SelectMgr_ListOfFilter*)nativeHandle)->First();
  return gcnew OCSelectMgr_Filter(&tmp);
}

OCSelectMgr_Filter^ OCSelectMgr_ListOfFilter::Last()
{
  Handle(SelectMgr_Filter) tmp = ((SelectMgr_ListOfFilter*)nativeHandle)->Last();
  return gcnew OCSelectMgr_Filter(&tmp);
}

 void OCSelectMgr_ListOfFilter::RemoveFirst()
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->RemoveFirst();
}

 void OCSelectMgr_ListOfFilter::Remove(OCNaroWrappers::OCSelectMgr_ListIteratorOfListOfFilter^ It)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->Remove(*((SelectMgr_ListIteratorOfListOfFilter*)It->Handle));
}

 void OCSelectMgr_ListOfFilter::InsertBefore(OCNaroWrappers::OCSelectMgr_Filter^ I, OCNaroWrappers::OCSelectMgr_ListIteratorOfListOfFilter^ It)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->InsertBefore(*((Handle_SelectMgr_Filter*)I->Handle), *((SelectMgr_ListIteratorOfListOfFilter*)It->Handle));
}

 void OCSelectMgr_ListOfFilter::InsertBefore(OCNaroWrappers::OCSelectMgr_ListOfFilter^ Other, OCNaroWrappers::OCSelectMgr_ListIteratorOfListOfFilter^ It)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->InsertBefore(*((SelectMgr_ListOfFilter*)Other->Handle), *((SelectMgr_ListIteratorOfListOfFilter*)It->Handle));
}

 void OCSelectMgr_ListOfFilter::InsertAfter(OCNaroWrappers::OCSelectMgr_Filter^ I, OCNaroWrappers::OCSelectMgr_ListIteratorOfListOfFilter^ It)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->InsertAfter(*((Handle_SelectMgr_Filter*)I->Handle), *((SelectMgr_ListIteratorOfListOfFilter*)It->Handle));
}

 void OCSelectMgr_ListOfFilter::InsertAfter(OCNaroWrappers::OCSelectMgr_ListOfFilter^ Other, OCNaroWrappers::OCSelectMgr_ListIteratorOfListOfFilter^ It)
{
  ((SelectMgr_ListOfFilter*)nativeHandle)->InsertAfter(*((SelectMgr_ListOfFilter*)Other->Handle), *((SelectMgr_ListIteratorOfListOfFilter*)It->Handle));
}


