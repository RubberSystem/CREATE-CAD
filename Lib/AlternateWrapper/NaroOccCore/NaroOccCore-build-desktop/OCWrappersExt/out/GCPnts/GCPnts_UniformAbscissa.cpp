// File generated by CPPExt (CPP file)
//

#include "GCPnts_UniformAbscissa.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HArray1OfReal.h"
#include "../Adaptor3d/Adaptor3d_Curve.h"
#include "../Adaptor2d/Adaptor2d_Curve2d.h"


using namespace OCNaroWrappers;

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa(GCPnts_UniformAbscissa* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa() 
{
  nativeHandle = new GCPnts_UniformAbscissa();
}

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Abscissa, Standard_Real Toler) 
{
  nativeHandle = new GCPnts_UniformAbscissa(*((Adaptor3d_Curve*)C->Handle), Abscissa, Toler);
}

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Abscissa, Standard_Real U1, Standard_Real U2, Standard_Real Toler) 
{
  nativeHandle = new GCPnts_UniformAbscissa(*((Adaptor3d_Curve*)C->Handle), Abscissa, U1, U2, Toler);
}

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Integer NbPoints, Standard_Real Toler) 
{
  nativeHandle = new GCPnts_UniformAbscissa(*((Adaptor3d_Curve*)C->Handle), NbPoints, Toler);
}

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Integer NbPoints, Standard_Real U1, Standard_Real U2, Standard_Real Toler) 
{
  nativeHandle = new GCPnts_UniformAbscissa(*((Adaptor3d_Curve*)C->Handle), NbPoints, U1, U2, Toler);
}

 void OCGCPnts_UniformAbscissa::Initialize(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Abscissa, Standard_Real Toler)
{
  ((GCPnts_UniformAbscissa*)nativeHandle)->Initialize(*((Adaptor3d_Curve*)C->Handle), Abscissa, Toler);
}

 void OCGCPnts_UniformAbscissa::Initialize(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Abscissa, Standard_Real U1, Standard_Real U2, Standard_Real Toler)
{
  ((GCPnts_UniformAbscissa*)nativeHandle)->Initialize(*((Adaptor3d_Curve*)C->Handle), Abscissa, U1, U2, Toler);
}

 void OCGCPnts_UniformAbscissa::Initialize(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Integer NbPoints, Standard_Real Toler)
{
  ((GCPnts_UniformAbscissa*)nativeHandle)->Initialize(*((Adaptor3d_Curve*)C->Handle), NbPoints, Toler);
}

 void OCGCPnts_UniformAbscissa::Initialize(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Integer NbPoints, Standard_Real U1, Standard_Real U2, Standard_Real Toler)
{
  ((GCPnts_UniformAbscissa*)nativeHandle)->Initialize(*((Adaptor3d_Curve*)C->Handle), NbPoints, U1, U2, Toler);
}

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Abscissa, Standard_Real Toler) 
{
  nativeHandle = new GCPnts_UniformAbscissa(*((Adaptor2d_Curve2d*)C->Handle), Abscissa, Toler);
}

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Abscissa, Standard_Real U1, Standard_Real U2, Standard_Real Toler) 
{
  nativeHandle = new GCPnts_UniformAbscissa(*((Adaptor2d_Curve2d*)C->Handle), Abscissa, U1, U2, Toler);
}

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Integer NbPoints, Standard_Real Toler) 
{
  nativeHandle = new GCPnts_UniformAbscissa(*((Adaptor2d_Curve2d*)C->Handle), NbPoints, Toler);
}

OCGCPnts_UniformAbscissa::OCGCPnts_UniformAbscissa(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Integer NbPoints, Standard_Real U1, Standard_Real U2, Standard_Real Toler) 
{
  nativeHandle = new GCPnts_UniformAbscissa(*((Adaptor2d_Curve2d*)C->Handle), NbPoints, U1, U2, Toler);
}

 void OCGCPnts_UniformAbscissa::Initialize(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Abscissa, Standard_Real Toler)
{
  ((GCPnts_UniformAbscissa*)nativeHandle)->Initialize(*((Adaptor2d_Curve2d*)C->Handle), Abscissa, Toler);
}

 void OCGCPnts_UniformAbscissa::Initialize(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Abscissa, Standard_Real U1, Standard_Real U2, Standard_Real Toler)
{
  ((GCPnts_UniformAbscissa*)nativeHandle)->Initialize(*((Adaptor2d_Curve2d*)C->Handle), Abscissa, U1, U2, Toler);
}

 void OCGCPnts_UniformAbscissa::Initialize(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Integer NbPoints, Standard_Real Toler)
{
  ((GCPnts_UniformAbscissa*)nativeHandle)->Initialize(*((Adaptor2d_Curve2d*)C->Handle), NbPoints, Toler);
}

 void OCGCPnts_UniformAbscissa::Initialize(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Integer NbPoints, Standard_Real U1, Standard_Real U2, Standard_Real Toler)
{
  ((GCPnts_UniformAbscissa*)nativeHandle)->Initialize(*((Adaptor2d_Curve2d*)C->Handle), NbPoints, U1, U2, Toler);
}

 System::Boolean OCGCPnts_UniformAbscissa::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((GCPnts_UniformAbscissa*)nativeHandle)->IsDone());
}

 Standard_Integer OCGCPnts_UniformAbscissa::NbPoints()
{
  return ((GCPnts_UniformAbscissa*)nativeHandle)->NbPoints();
}

 Standard_Real OCGCPnts_UniformAbscissa::Parameter(Standard_Integer Index)
{
  return ((GCPnts_UniformAbscissa*)nativeHandle)->Parameter(Index);
}

 Standard_Real OCGCPnts_UniformAbscissa::Abscissa()
{
  return ((GCPnts_UniformAbscissa*)nativeHandle)->Abscissa();
}


