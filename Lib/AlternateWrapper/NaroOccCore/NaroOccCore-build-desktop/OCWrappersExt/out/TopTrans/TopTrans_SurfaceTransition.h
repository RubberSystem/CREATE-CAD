// File generated by CPPExt (MPV)
//
#ifndef _TopTrans_SurfaceTransition_OCWrappers_HeaderFile
#define _TopTrans_SurfaceTransition_OCWrappers_HeaderFile

// include native header
#include <TopTrans_SurfaceTransition.hxx>
#include "../Converter.h"


#include "../gp/gp_Dir.h"
#include "../TColStd/TColStd_Array2OfReal.h"
#include "TopTrans_Array2OfOrientation.h"
#include "../TopAbs/TopAbs_Orientation.h"
#include "../TopAbs/TopAbs_State.h"


namespace OCNaroWrappers
{

ref class OCgp_Dir;


//! This algorithm  is used to  compute the transition <br>
//!          of a 3D surface intersecting a topological surfacic <br>
//!          boundary on a 3D curve ( intersection curve ). <br>
//!          The  boundary is  described  by a  set of faces <br>
//!          each face is described by <br>
//!          - its support surface, <br>
//!          - an orientation defining its matter side. <br>
//!          The geometric elements are described locally at the <br>
//!          intersection point by a second order development. <br>
//!          A surface is described by the normal vector, the <br>
//!          principal directions and the principal curvatures. <br>
//!          A curve is described  by the  tangent, the normal <br>
//!          and the curvature. <br>
//!          The  algorithm  keeps track of the two faces elements <br>
//!          closest to the part of the curve "before" and "after" <br>
//!          the intersection,  these  two elements are updated <br>
//!          for each new face. <br>
//!          The position of the  curve can be computed when at <br>
//!          least  one surface  element has   been given, this <br>
//!          position is "In","Out" or "On" for the part of the <br>
//!          curve "Before" or "After" the intersection. <br>
public ref class OCTopTrans_SurfaceTransition  {

protected:
  TopTrans_SurfaceTransition* nativeHandle;
  OCTopTrans_SurfaceTransition(OCDummy^) {};

public:
  property TopTrans_SurfaceTransition* Handle
  {
    TopTrans_SurfaceTransition* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopTrans_SurfaceTransition(TopTrans_SurfaceTransition* nativeHandle);

// Methods PUBLIC

//! Create an empty Surface Transition. <br>
OCTopTrans_SurfaceTransition();

//! Initialize  a  Surface Transition with the local <br>
//!          description of the intersection curve and of the <br>
//!          reference surface. <br>
//!          PREQUESITORY : Norm oriented OUTSIDE "geometric matter" <br>
 /*instead*/  void Reset(OCNaroWrappers::OCgp_Dir^ Tgt, OCNaroWrappers::OCgp_Dir^ Norm, OCNaroWrappers::OCgp_Dir^ MaxD, OCNaroWrappers::OCgp_Dir^ MinD, Standard_Real MaxCurv, Standard_Real MinCurv) ;

//! Initialize  a  Surface Transition  with the  local <br>
//!          description of a straight line. <br>
 /*instead*/  void Reset(OCNaroWrappers::OCgp_Dir^ Tgt, OCNaroWrappers::OCgp_Dir^ Norm) ;

//! Add a face element to the boundary. <br>
//! <br>
//!          - S defines topological orientation for the face : <br>
//!          S FORWARD means: along the intersection curve on the <br>
//!          reference surface, transition states while crossing <br>
//!          the face are OUT,IN. <br>
//!          S REVERSED means states are IN,OUT. <br>
//!          S INTERNAL means states are IN,IN. <br>
//! <br>
//!          - O defines curve's position on face : <br>
//!          O FORWARD means the face is before the intersection <br>
//!          O REVERSED means the face is AFTER <br>
//!          O INTERNAL means the curve intersection is in the face. <br>
//!          PREQUESITORY : Norm oriented OUTSIDE "geometric matter" <br>
 /*instead*/  void Compare(Standard_Real Tole, OCNaroWrappers::OCgp_Dir^ Norm, OCNaroWrappers::OCgp_Dir^ MaxD, OCNaroWrappers::OCgp_Dir^ MinD, Standard_Real MaxCurv, Standard_Real MinCurv, OCTopAbs_Orientation S, OCTopAbs_Orientation O) ;

//! Add a plane or a cylindric face to the boundary. <br>
 /*instead*/  void Compare(Standard_Real Tole, OCNaroWrappers::OCgp_Dir^ Norm, OCTopAbs_Orientation S, OCTopAbs_Orientation O) ;

//! Returns the state of the reference surface before <br>
//!          the interference, this is the position relative to <br>
//!          the surface of a  point very close to the intersection <br>
//!          on the negative side of the tangent. <br>
 /*instead*/  OCTopAbs_State StateBefore() ;

//! Returns the state of the reference surface after <br>
//!          interference, this is the position relative to the <br>
//!          surface of a point very  close to the intersection <br>
//!          on the positive side of the tangent. <br>
 /*instead*/  OCTopAbs_State StateAfter() ;


static /*instead*/  OCTopAbs_State GetBefore(OCTopAbs_Orientation Tran) ;


static /*instead*/  OCTopAbs_State GetAfter(OCTopAbs_Orientation Tran) ;

~OCTopTrans_SurfaceTransition()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
