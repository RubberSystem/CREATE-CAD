// File generated by CPPExt (Transient)
//
#ifndef _AIS2D_InteractiveObject_OCWrappers_HeaderFile
#define _AIS2D_InteractiveObject_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS2D_InteractiveObject.hxx>
#include "../Converter.h"

#include "../Graphic2d/Graphic2d_GraphicObject.h"

#include "AIS2D_TypeOfDetection.h"
#include "AIS2D_DataMapOfPrimAspects.h"
#include "../Prs2d/Prs2d_AspectName.h"


namespace OCNaroWrappers
{

ref class OCAIS2D_InteractiveContext;
ref class OCPrs2d_Drawer;
ref class OCAIS2D_HSequenceOfPrimArchit;
ref class OCPrs2d_AspectRoot;
ref class OCGraphic2d_Primitive;


//! Class Interactive Object defines a class of objects <br>
//!          with display and selection services. <br>
//! Using visualization and selection machanisms, <br>
//! interactive objects are used to display datum, curves, <br>
//! shapes, markers, dimensions, etc. Interactive objects <br>
//! also provide links to the interactive context. <br>
public ref class OCAIS2D_InteractiveObject : OCGraphic2d_GraphicObject {

protected:
  // dummy constructor;
  OCAIS2D_InteractiveObject(OCDummy^) : OCGraphic2d_GraphicObject((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS2D_InteractiveObject(Handle(AIS2D_InteractiveObject)* nativeHandle);

// Methods PUBLIC

//! Initialize the Interactive Object <br>
OCAIS2D_InteractiveObject();

//! Returns the attributes settings <br>
 /*instead*/  OCPrs2d_Drawer^ Attributes() ;

//! Initializes the drawing tool <aDrawer> <br>
virtual /*instead*/  void SetAttributes(OCNaroWrappers::OCPrs2d_Drawer^ aDrawer) ;

//! Clears settings provided by the drawing tool <aDrawer> <br>
virtual /*instead*/  void UnsetAttributes() ;

//! Sets the attributes from Aspect <anAspect> <br>
//!          to all primitives appropriate this Aspect. <br>
 /*instead*/  void SetAspect(OCNaroWrappers::OCPrs2d_AspectRoot^ anAspect) ;

//! Sets the attributes from Aspect <anAspect> <br>
//!          to primitive <aPrimitive> <br>
//!          Method works only for objects are linked <br>
//!          with InteractiveContext <br>
 /*instead*/  void SetAspect(OCNaroWrappers::OCPrs2d_AspectRoot^ anAspect, OCNaroWrappers::OCGraphic2d_Primitive^ aPrimitive) ;

//! Returns Aspect for primitive <aPrimitive> <br>
//!          Method works only for objects are linked <br>
//!          with InteractiveContext <br>
 /*instead*/  OCPrs2d_AspectRoot^ GetAspect(OCNaroWrappers::OCGraphic2d_Primitive^ aPrimitive) ;

//! Returns true if primitive <aPrimitive> <br>
//!          is linked with an aspect <br>
 /*instead*/  System::Boolean HasAspect(OCNaroWrappers::OCGraphic2d_Primitive^ aPrimitive) ;

//! Indicates whether the Interactive Object has a pointer <br>
//!          to an interactive context. <br>
 /*instead*/  System::Boolean HasInteractiveContext() ;

//! Returns the context pointer to the interactive context. <br>
 /*instead*/  OCAIS2D_InteractiveContext^ GetContext() ;

//! Places a link to <aCnTx>. The drawer of AIS2D_InteractiveObject <br>
//!          is connected to the Default Drawer Of <aCntx>. <br>
//!          That Means that this method has to be redefined if <br>
//!          computations depend on drawer values. <br>
virtual /*instead*/  void SetContext(OCNaroWrappers::OCAIS2D_InteractiveContext^ aCntx) ;

//! Indicates the display mode of the Interactive Object <br>
 /*instead*/  Standard_Integer DisplayMode() ;

//! Returns True if the Interactive Object has <br>
//!          a display mode setting. Otherwise, it is <br>
//!          displayed in Neutral Point. <br>
 /*instead*/  System::Boolean HasDisplayMode() ;

//! Allows to provide a setting <aMode> for an <br>
//!          Interactive Object's display mode. <br>
 /*instead*/  void SetDisplayMode(Standard_Integer aMode) ;

//! Removes display mode settings from the Interactive object <br>
 /*instead*/  void UnsetDisplayMode() ;

//! Returns the default display mode. This method is to be <br>
//!          implemented when the main mode is not mode 0. <br>
virtual /*instead*/  Standard_Integer DefaultDisplayMode() ;

//! Returns true if the class of objects accepts the display mode <aMode> <br>
virtual /*instead*/  System::Boolean AcceptDisplayMode(Standard_Integer aMode) ;

//! Returns the setting for highlight mode. <br>
 /*instead*/  OCAIS2D_TypeOfDetection HighlightMode() ;

//! Returns true if the Interactive Object is in highlight mode <br>
 /*instead*/  System::Boolean HasHighlightMode() ;

//! Allows to provide settings for highlight mode. <br>
 /*instead*/  void SetHighlightMode(OCAIS2D_TypeOfDetection aMode) ;

//! Removes settings for highlight mode <br>
 /*instead*/  void UnsetHighlightMode() ;

//! Returns the default highlight mode <br>
virtual /*instead*/  OCAIS2D_TypeOfDetection DefaultHighlightMode() ;

//! Indicates the selection mode of the Interactive Object <br>
 /*instead*/  Standard_Integer SelectionMode() ;

//! Allows you to change the selection mode of an Interactive Object <br>
 /*instead*/  System::Boolean HasSelectionMode() ;

//! Allows to provide a setting <aMode> for an <br>
//!          Interactive Object's selection mode. <br>
 /*instead*/  void SetSelectionMode(Standard_Integer aMode) ;

//! Removes settings for selection mode <br>
 /*instead*/  void UnsetSelectionMode() ;

//! Returns the default selection mode <br>
virtual /*instead*/  Standard_Integer DefaultSelectionMode() ;


 /*instead*/  Standard_Integer State() ;


 /*instead*/  void SetState(Standard_Integer aState) ;

//!  Selects primitive  with  index( TOD_PRIMITIVE  mode  only  ) <br>
 /*instead*/  void SelectPrimitive(Standard_Integer anIndex, System::Boolean append) ;


virtual /*instead*/  void Save(Aspect_FStream& aFStream) ;


virtual /*instead*/  void Retrieve(Aspect_IFStream& anIFStream) ;

~OCAIS2D_InteractiveObject()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
