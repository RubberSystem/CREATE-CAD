// File generated by CPPExt (Transient)
//
#ifndef _AIS2D_ProjShape_OCWrappers_HeaderFile
#define _AIS2D_ProjShape_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS2D_ProjShape.hxx>
#include "../Converter.h"

#include "AIS2D_InteractiveObject.h"

#include "../TopTools/TopTools_ListOfShape.h"
#include "../HLRAlgo/HLRAlgo_Projector.h"


namespace OCNaroWrappers
{

ref class OCGraphic2d_SetOfSegments;
ref class OCGGraphic2d_SetOfCurves;
ref class OCHLRAlgo_Projector;
ref class OCTopoDS_Shape;
ref class OCGraphic2d_Line;


//! Constructs presentable and selectable projection of <br>
//!          TopoDS_Shape on the view plane <br>
public ref class OCAIS2D_ProjShape : OCAIS2D_InteractiveObject {

protected:
  // dummy constructor;
  OCAIS2D_ProjShape(OCDummy^) : OCAIS2D_InteractiveObject((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS2D_ProjShape(Handle(AIS2D_ProjShape)* nativeHandle);

// Methods PUBLIC

//! Initializes the projected shape <br>
OCAIS2D_ProjShape();

//! Initializes the projected shape with projector <aProjector>, number isolines <nbIsos> <br>
OCAIS2D_ProjShape(OCNaroWrappers::OCHLRAlgo_Projector^ aProjector, Standard_Integer nbIsos, System::Boolean isPolyAlgo, System::Boolean visHL);

//! Adds <aShape> to the list of projected shapes. <br>
 /*instead*/  void Add(OCNaroWrappers::OCTopoDS_Shape^ aShape) ;

//! sets the projector <aProjector> <br>
 /*instead*/  void SetProjector(OCNaroWrappers::OCHLRAlgo_Projector^ aProjector) ;

//! Indicates the projector <br>
 /*instead*/  OCHLRAlgo_Projector^ Projector() ;


 /*instead*/  void SetNbIsos(Standard_Integer aNbIsos) ;

//! sets the projection of the shape as a polyhedral <br>
//!          simplification of the shape if <aIsPoly> is True <br>
 /*instead*/  void SetPolyAlgo(System::Boolean aIsPoly) ;

//! Sets the hidden line mode if <aIsHLM> is True <br>
 /*instead*/  void SetHLMode(System::Boolean aIsHLM) ;

//! Indicates the hidden lines are visible <br>
 /*instead*/  System::Boolean IsHLMode() ;

//! Indicates the number of isolines <br>
 /*instead*/  Standard_Integer GetNbIsos() ;

//! Indicates the shape was extracted as Algo or PolyAlgo <br>
 /*instead*/  System::Boolean GetIsPoly() ;

//! Returns the set of primitives are included into Shape, <br>
//!          except hidden lines <br>
 /*instead*/  OCGraphic2d_Line^ GetPrimitives() ;

//! Returns the set of hidden line primitives are included into Shape <br>
 /*instead*/  OCGraphic2d_Line^ GetHLPrimitives() ;

//! Sets the flags for display of all types of edges <br>
 /*instead*/  void ShowEdges(System::Boolean aSharp, System::Boolean aSmooth, System::Boolean aSewn, System::Boolean anOutline, System::Boolean anIsoline) ;

~OCAIS2D_ProjShape()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
