// File generated by CPPExt (CPP file)
//

#include "AIS2D_SequenceOfPrimArchit.h"
#include "../Converter.h"
#include "AIS2D_PrimitiveArchit.h"
#include "AIS2D_SequenceNodeOfSequenceOfPrimArchit.h"


using namespace OCNaroWrappers;

OCAIS2D_SequenceOfPrimArchit::OCAIS2D_SequenceOfPrimArchit(AIS2D_SequenceOfPrimArchit* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCAIS2D_SequenceOfPrimArchit::OCAIS2D_SequenceOfPrimArchit() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new AIS2D_SequenceOfPrimArchit();
}

OCAIS2D_SequenceOfPrimArchit^ OCAIS2D_SequenceOfPrimArchit::Assign(OCNaroWrappers::OCAIS2D_SequenceOfPrimArchit^ Other)
{
  AIS2D_SequenceOfPrimArchit* tmp = new AIS2D_SequenceOfPrimArchit();
  *tmp = ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Assign(*((AIS2D_SequenceOfPrimArchit*)Other->Handle));
  return gcnew OCAIS2D_SequenceOfPrimArchit(tmp);
}

 void OCAIS2D_SequenceOfPrimArchit::Append(OCNaroWrappers::OCAIS2D_PrimitiveArchit^ T)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Append(*((Handle_AIS2D_PrimitiveArchit*)T->Handle));
}

 void OCAIS2D_SequenceOfPrimArchit::Append(OCNaroWrappers::OCAIS2D_SequenceOfPrimArchit^ S)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Append(*((AIS2D_SequenceOfPrimArchit*)S->Handle));
}

 void OCAIS2D_SequenceOfPrimArchit::Prepend(OCNaroWrappers::OCAIS2D_PrimitiveArchit^ T)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Prepend(*((Handle_AIS2D_PrimitiveArchit*)T->Handle));
}

 void OCAIS2D_SequenceOfPrimArchit::Prepend(OCNaroWrappers::OCAIS2D_SequenceOfPrimArchit^ S)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Prepend(*((AIS2D_SequenceOfPrimArchit*)S->Handle));
}

 void OCAIS2D_SequenceOfPrimArchit::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCAIS2D_PrimitiveArchit^ T)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->InsertBefore(Index, *((Handle_AIS2D_PrimitiveArchit*)T->Handle));
}

 void OCAIS2D_SequenceOfPrimArchit::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCAIS2D_SequenceOfPrimArchit^ S)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->InsertBefore(Index, *((AIS2D_SequenceOfPrimArchit*)S->Handle));
}

 void OCAIS2D_SequenceOfPrimArchit::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCAIS2D_PrimitiveArchit^ T)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->InsertAfter(Index, *((Handle_AIS2D_PrimitiveArchit*)T->Handle));
}

 void OCAIS2D_SequenceOfPrimArchit::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCAIS2D_SequenceOfPrimArchit^ S)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->InsertAfter(Index, *((AIS2D_SequenceOfPrimArchit*)S->Handle));
}

OCAIS2D_PrimitiveArchit^ OCAIS2D_SequenceOfPrimArchit::First()
{
  Handle(AIS2D_PrimitiveArchit) tmp = ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->First();
  return gcnew OCAIS2D_PrimitiveArchit(&tmp);
}

OCAIS2D_PrimitiveArchit^ OCAIS2D_SequenceOfPrimArchit::Last()
{
  Handle(AIS2D_PrimitiveArchit) tmp = ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Last();
  return gcnew OCAIS2D_PrimitiveArchit(&tmp);
}

 void OCAIS2D_SequenceOfPrimArchit::Split(Standard_Integer Index, OCNaroWrappers::OCAIS2D_SequenceOfPrimArchit^ Sub)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Split(Index, *((AIS2D_SequenceOfPrimArchit*)Sub->Handle));
}

OCAIS2D_PrimitiveArchit^ OCAIS2D_SequenceOfPrimArchit::Value(Standard_Integer Index)
{
  Handle(AIS2D_PrimitiveArchit) tmp = ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Value(Index);
  return gcnew OCAIS2D_PrimitiveArchit(&tmp);
}

 void OCAIS2D_SequenceOfPrimArchit::SetValue(Standard_Integer Index, OCNaroWrappers::OCAIS2D_PrimitiveArchit^ I)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->SetValue(Index, *((Handle_AIS2D_PrimitiveArchit*)I->Handle));
}

OCAIS2D_PrimitiveArchit^ OCAIS2D_SequenceOfPrimArchit::ChangeValue(Standard_Integer Index)
{
  Handle(AIS2D_PrimitiveArchit) tmp = ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->ChangeValue(Index);
  return gcnew OCAIS2D_PrimitiveArchit(&tmp);
}

 void OCAIS2D_SequenceOfPrimArchit::Remove(Standard_Integer Index)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Remove(Index);
}

 void OCAIS2D_SequenceOfPrimArchit::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((AIS2D_SequenceOfPrimArchit*)nativeHandle)->Remove(FromIndex, ToIndex);
}


