// File generated by CPPExt (Transient)
//
#ifndef _PCDM_ReadWriter_OCWrappers_HeaderFile
#define _PCDM_ReadWriter_OCWrappers_HeaderFile

// include the wrapped class
#include <PCDM_ReadWriter.hxx>
#include "../Converter.h"

#include "../Standard/Standard_Transient.h"

#include "../Storage/Storage_OpenMode.h"


namespace OCNaroWrappers
{

ref class OCTCollection_AsciiString;
ref class OCStorage_Data;
ref class OCCDM_Document;
ref class OCTCollection_ExtendedString;
ref class OCCDM_MessageDriver;
ref class OCPCDM_SequenceOfReference;
ref class OCTColStd_SequenceOfExtendedString;
ref class OCStorage_BaseDriver;



public ref class OCPCDM_ReadWriter : OCStandard_Transient {

protected:
  // dummy constructor;
  OCPCDM_ReadWriter(OCDummy^) : OCStandard_Transient((OCDummy^)nullptr) {};

public:

// constructor from native
OCPCDM_ReadWriter(Handle(PCDM_ReadWriter)* nativeHandle);

// Methods PUBLIC


static /*instead*/  void Open(OCNaroWrappers::OCStorage_BaseDriver^ aDriver, OCNaroWrappers::OCTCollection_ExtendedString^ aFileName, OCStorage_OpenMode anOpenMode) ;

//! returns the convenient Reader for a File. <br>
//! <br>
static /*instead*/  OCPCDM_ReadWriter^ Reader(OCNaroWrappers::OCTCollection_ExtendedString^ aFileName) ;


static /*instead*/  OCPCDM_ReadWriter^ Writer() ;


static /*instead*/  void WriteFileFormat(OCNaroWrappers::OCStorage_Data^ aData, OCNaroWrappers::OCCDM_Document^ aDocument) ;

//! tries  to get a format  in the  file.  returns an empty <br>
//!          string if the file could not be read or does not have <br>
//!          a FileFormat information. <br>
static /*instead*/  OCTCollection_ExtendedString^ FileFormat(OCNaroWrappers::OCTCollection_ExtendedString^ aFileName) ;

~OCPCDM_ReadWriter()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
