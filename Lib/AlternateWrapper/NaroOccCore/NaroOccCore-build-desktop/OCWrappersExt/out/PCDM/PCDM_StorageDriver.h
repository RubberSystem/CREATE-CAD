// File generated by CPPExt (Transient)
//
#ifndef _PCDM_StorageDriver_OCWrappers_HeaderFile
#define _PCDM_StorageDriver_OCWrappers_HeaderFile

// include the wrapped class
#include <PCDM_StorageDriver.hxx>
#include "../Converter.h"

#include "PCDM_Writer.h"

#include "../TCollection/TCollection_ExtendedString.h"
#include "PCDM_StoreStatus.h"


namespace OCNaroWrappers
{

ref class OCPCDM_Document;
ref class OCCDM_Document;
ref class OCPCDM_SequenceOfDocument;
ref class OCTCollection_ExtendedString;
ref class OCStorage_Schema;
ref class OCTColStd_SequenceOfExtendedString;


//! persistent implemention of storage. <br>
public ref class OCPCDM_StorageDriver : OCPCDM_Writer {

protected:
  // dummy constructor;
  OCPCDM_StorageDriver(OCDummy^) : OCPCDM_Writer((OCDummy^)nullptr) {};

public:

// constructor from native
OCPCDM_StorageDriver(Handle(PCDM_StorageDriver)* nativeHandle);

// Methods PUBLIC

//! raises NotImplemented. <br>
virtual /*instead*/  OCPCDM_Document^ Make(OCNaroWrappers::OCCDM_Document^ aDocument) ;

//!By default, puts  in the Sequence the  document returns <br>
//!            by the previous Make method. <br>
//! <br>
virtual /*instead*/  void Make(OCNaroWrappers::OCCDM_Document^ aDocument, OCNaroWrappers::OCPCDM_SequenceOfDocument^ Documents) ;


virtual /*instead*/  void LoadExtensions(OCNaroWrappers::OCStorage_Schema^ aSchema, OCNaroWrappers::OCTColStd_SequenceOfExtendedString^ Extensions) ;

//!  Warning! raises DriverError if an error occurs during inside the <br>
//!          Make method. <br>//! stores the content of the Document into a new file. <br>
//! <br>
//!          by  default  Write will  use Make   method to build a persistent <br>
//!          document and the Schema method to write the persistent document. <br>
//! <br>
virtual /*instead*/  void Write(OCNaroWrappers::OCCDM_Document^ aDocument, OCNaroWrappers::OCTCollection_ExtendedString^ aFileName) ;


 /*instead*/  void SetFormat(OCNaroWrappers::OCTCollection_ExtendedString^ aformat) ;


 /*instead*/  OCTCollection_ExtendedString^ GetFormat() ;


 /*instead*/  System::Boolean IsError() ;


 /*instead*/  void SetIsError(System::Boolean theIsError) ;


 /*instead*/  OCPCDM_StoreStatus GetStoreStatus() ;


 /*instead*/  void SetStoreStatus(OCPCDM_StoreStatus theStoreStatus) ;

~OCPCDM_StorageDriver()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
