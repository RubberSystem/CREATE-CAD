// File generated by CPPExt (CPP file)
//

#include "TColGeom_HSequenceOfBoundedCurve.h"
#include "../Converter.h"
#include "../Geom/Geom_BoundedCurve.h"
#include "TColGeom_SequenceOfBoundedCurve.h"


using namespace OCNaroWrappers;

OCTColGeom_HSequenceOfBoundedCurve::OCTColGeom_HSequenceOfBoundedCurve(Handle(TColGeom_HSequenceOfBoundedCurve)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TColGeom_HSequenceOfBoundedCurve(*nativeHandle);
}

OCTColGeom_HSequenceOfBoundedCurve::OCTColGeom_HSequenceOfBoundedCurve() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TColGeom_HSequenceOfBoundedCurve(new TColGeom_HSequenceOfBoundedCurve());
}

 System::Boolean OCTColGeom_HSequenceOfBoundedCurve::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCTColGeom_HSequenceOfBoundedCurve::Length()
{
  return (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Length();
}

 void OCTColGeom_HSequenceOfBoundedCurve::Clear()
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Clear();
}

 void OCTColGeom_HSequenceOfBoundedCurve::Append(OCNaroWrappers::OCGeom_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Append(*((Handle_Geom_BoundedCurve*)anItem->Handle));
}

 void OCTColGeom_HSequenceOfBoundedCurve::Append(OCNaroWrappers::OCTColGeom_HSequenceOfBoundedCurve^ aSequence)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Append(*((Handle_TColGeom_HSequenceOfBoundedCurve*)aSequence->Handle));
}

 void OCTColGeom_HSequenceOfBoundedCurve::Prepend(OCNaroWrappers::OCGeom_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Prepend(*((Handle_Geom_BoundedCurve*)anItem->Handle));
}

 void OCTColGeom_HSequenceOfBoundedCurve::Prepend(OCNaroWrappers::OCTColGeom_HSequenceOfBoundedCurve^ aSequence)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Prepend(*((Handle_TColGeom_HSequenceOfBoundedCurve*)aSequence->Handle));
}

 void OCTColGeom_HSequenceOfBoundedCurve::Reverse()
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Reverse();
}

 void OCTColGeom_HSequenceOfBoundedCurve::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCGeom_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->InsertBefore(anIndex, *((Handle_Geom_BoundedCurve*)anItem->Handle));
}

 void OCTColGeom_HSequenceOfBoundedCurve::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCTColGeom_HSequenceOfBoundedCurve^ aSequence)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->InsertBefore(anIndex, *((Handle_TColGeom_HSequenceOfBoundedCurve*)aSequence->Handle));
}

 void OCTColGeom_HSequenceOfBoundedCurve::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCGeom_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->InsertAfter(anIndex, *((Handle_Geom_BoundedCurve*)anItem->Handle));
}

 void OCTColGeom_HSequenceOfBoundedCurve::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCTColGeom_HSequenceOfBoundedCurve^ aSequence)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->InsertAfter(anIndex, *((Handle_TColGeom_HSequenceOfBoundedCurve*)aSequence->Handle));
}

 void OCTColGeom_HSequenceOfBoundedCurve::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCTColGeom_HSequenceOfBoundedCurve^ OCTColGeom_HSequenceOfBoundedCurve::Split(Standard_Integer anIndex)
{
  Handle(TColGeom_HSequenceOfBoundedCurve) tmp = (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Split(anIndex);
  return gcnew OCTColGeom_HSequenceOfBoundedCurve(&tmp);
}

 void OCTColGeom_HSequenceOfBoundedCurve::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCGeom_BoundedCurve^ anItem)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->SetValue(anIndex, *((Handle_Geom_BoundedCurve*)anItem->Handle));
}

OCGeom_BoundedCurve^ OCTColGeom_HSequenceOfBoundedCurve::Value(Standard_Integer anIndex)
{
  Handle(Geom_BoundedCurve) tmp = (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Value(anIndex);
  return gcnew OCGeom_BoundedCurve(&tmp);
}

OCGeom_BoundedCurve^ OCTColGeom_HSequenceOfBoundedCurve::ChangeValue(Standard_Integer anIndex)
{
  Handle(Geom_BoundedCurve) tmp = (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCGeom_BoundedCurve(&tmp);
}

 void OCTColGeom_HSequenceOfBoundedCurve::Remove(Standard_Integer anIndex)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Remove(anIndex);
}

 void OCTColGeom_HSequenceOfBoundedCurve::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCTColGeom_SequenceOfBoundedCurve^ OCTColGeom_HSequenceOfBoundedCurve::Sequence()
{
  TColGeom_SequenceOfBoundedCurve* tmp = new TColGeom_SequenceOfBoundedCurve();
  *tmp = (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->Sequence();
  return gcnew OCTColGeom_SequenceOfBoundedCurve(tmp);
}

OCTColGeom_SequenceOfBoundedCurve^ OCTColGeom_HSequenceOfBoundedCurve::ChangeSequence()
{
  TColGeom_SequenceOfBoundedCurve* tmp = new TColGeom_SequenceOfBoundedCurve();
  *tmp = (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->ChangeSequence();
  return gcnew OCTColGeom_SequenceOfBoundedCurve(tmp);
}

OCTColGeom_HSequenceOfBoundedCurve^ OCTColGeom_HSequenceOfBoundedCurve::ShallowCopy()
{
  Handle(TColGeom_HSequenceOfBoundedCurve) tmp = (*((Handle_TColGeom_HSequenceOfBoundedCurve*)nativeHandle))->ShallowCopy();
  return gcnew OCTColGeom_HSequenceOfBoundedCurve(&tmp);
}


