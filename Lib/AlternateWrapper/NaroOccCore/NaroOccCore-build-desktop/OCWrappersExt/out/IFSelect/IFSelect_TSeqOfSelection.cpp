// File generated by CPPExt (CPP file)
//

#include "IFSelect_TSeqOfSelection.h"
#include "../Converter.h"
#include "IFSelect_Selection.h"
#include "IFSelect_SequenceNodeOfTSeqOfSelection.h"


using namespace OCNaroWrappers;

OCIFSelect_TSeqOfSelection::OCIFSelect_TSeqOfSelection(IFSelect_TSeqOfSelection* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIFSelect_TSeqOfSelection::OCIFSelect_TSeqOfSelection() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new IFSelect_TSeqOfSelection();
}

OCIFSelect_TSeqOfSelection^ OCIFSelect_TSeqOfSelection::Assign(OCNaroWrappers::OCIFSelect_TSeqOfSelection^ Other)
{
  IFSelect_TSeqOfSelection* tmp = new IFSelect_TSeqOfSelection();
  *tmp = ((IFSelect_TSeqOfSelection*)nativeHandle)->Assign(*((IFSelect_TSeqOfSelection*)Other->Handle));
  return gcnew OCIFSelect_TSeqOfSelection(tmp);
}

 void OCIFSelect_TSeqOfSelection::Append(OCNaroWrappers::OCIFSelect_Selection^ T)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->Append(*((Handle_IFSelect_Selection*)T->Handle));
}

 void OCIFSelect_TSeqOfSelection::Append(OCNaroWrappers::OCIFSelect_TSeqOfSelection^ S)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->Append(*((IFSelect_TSeqOfSelection*)S->Handle));
}

 void OCIFSelect_TSeqOfSelection::Prepend(OCNaroWrappers::OCIFSelect_Selection^ T)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->Prepend(*((Handle_IFSelect_Selection*)T->Handle));
}

 void OCIFSelect_TSeqOfSelection::Prepend(OCNaroWrappers::OCIFSelect_TSeqOfSelection^ S)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->Prepend(*((IFSelect_TSeqOfSelection*)S->Handle));
}

 void OCIFSelect_TSeqOfSelection::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIFSelect_Selection^ T)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->InsertBefore(Index, *((Handle_IFSelect_Selection*)T->Handle));
}

 void OCIFSelect_TSeqOfSelection::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIFSelect_TSeqOfSelection^ S)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->InsertBefore(Index, *((IFSelect_TSeqOfSelection*)S->Handle));
}

 void OCIFSelect_TSeqOfSelection::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIFSelect_Selection^ T)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->InsertAfter(Index, *((Handle_IFSelect_Selection*)T->Handle));
}

 void OCIFSelect_TSeqOfSelection::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIFSelect_TSeqOfSelection^ S)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->InsertAfter(Index, *((IFSelect_TSeqOfSelection*)S->Handle));
}

OCIFSelect_Selection^ OCIFSelect_TSeqOfSelection::First()
{
  Handle(IFSelect_Selection) tmp = ((IFSelect_TSeqOfSelection*)nativeHandle)->First();
  return gcnew OCIFSelect_Selection(&tmp);
}

OCIFSelect_Selection^ OCIFSelect_TSeqOfSelection::Last()
{
  Handle(IFSelect_Selection) tmp = ((IFSelect_TSeqOfSelection*)nativeHandle)->Last();
  return gcnew OCIFSelect_Selection(&tmp);
}

 void OCIFSelect_TSeqOfSelection::Split(Standard_Integer Index, OCNaroWrappers::OCIFSelect_TSeqOfSelection^ Sub)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->Split(Index, *((IFSelect_TSeqOfSelection*)Sub->Handle));
}

OCIFSelect_Selection^ OCIFSelect_TSeqOfSelection::Value(Standard_Integer Index)
{
  Handle(IFSelect_Selection) tmp = ((IFSelect_TSeqOfSelection*)nativeHandle)->Value(Index);
  return gcnew OCIFSelect_Selection(&tmp);
}

 void OCIFSelect_TSeqOfSelection::SetValue(Standard_Integer Index, OCNaroWrappers::OCIFSelect_Selection^ I)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->SetValue(Index, *((Handle_IFSelect_Selection*)I->Handle));
}

OCIFSelect_Selection^ OCIFSelect_TSeqOfSelection::ChangeValue(Standard_Integer Index)
{
  Handle(IFSelect_Selection) tmp = ((IFSelect_TSeqOfSelection*)nativeHandle)->ChangeValue(Index);
  return gcnew OCIFSelect_Selection(&tmp);
}

 void OCIFSelect_TSeqOfSelection::Remove(Standard_Integer Index)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->Remove(Index);
}

 void OCIFSelect_TSeqOfSelection::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((IFSelect_TSeqOfSelection*)nativeHandle)->Remove(FromIndex, ToIndex);
}


