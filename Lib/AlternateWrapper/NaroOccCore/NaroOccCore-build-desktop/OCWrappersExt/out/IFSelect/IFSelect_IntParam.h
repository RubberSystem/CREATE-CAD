// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_IntParam_OCWrappers_HeaderFile
#define _IFSelect_IntParam_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_IntParam.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../TCollection/TCollection_AsciiString.h"


namespace OCNaroWrappers
{



//! This class simply allows to access an Integer value through a <br>
//!           Handle, as a String can be (by using HString). <br>
//!           Hence, this value can be accessed : read and modified, without <br>
//!           passing through the specific object which detains it. Thus, <br>
//!           parameters of a Selection or a Dispatch (according its type) <br>
//!           can be controlled directly from the ShareOut which contains them <br>
//! <br>
//!           Additionnaly, an IntParam can be bound to a Static. <br>
//!           Remember that for a String, binding is immediate, because the <br>
//!           string value of a Static is a HAsciiString, it then suffices <br>
//!           to get its Handle. <br>
//!           For an Integer, an IntParam can designate (by its name) a <br>
//!           Static : each time its value is required or set, the Static <br>
//!           is aknowledged <br>
public ref class OCIFSelect_IntParam : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCIFSelect_IntParam(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_IntParam(Handle(IFSelect_IntParam)* nativeHandle);

// Methods PUBLIC

//! Creates an IntParam. Initial value is set to zer <br>
OCIFSelect_IntParam();

//! Commands this IntParam to be bound to a Static <br>
//!           Hence, Value will return the value if this Static if it is set <br>
//!           Else, Value works on the locally stored value <br>
//!           SetValue also will set the value of the Static <br>
//!           This works only for a present static of type integer or enum <br>
//!           Else, it is ignored <br>
//! <br>
//!           If <statname> is empty, disconnects the IntParam from Static <br>
 /*instead*/  void SetStaticName(System::String^ statname) ;

//! Returns the name of static parameter to which this IntParam <br>
//!           is bound, empty if none <br>
 /*instead*/  System::String^ StaticName() ;

//! Reads Integer Value of the IntParam. If a StaticName is <br>
//!           defined and the Static is set, looks in priority the value <br>
//!           of the static <br>
 /*instead*/  Standard_Integer Value() ;

//! Sets a new Integer Value for the IntParam. If a StaticName is <br>
//!           defined and the Static is set, also sets the value of the static <br>
 /*instead*/  void SetValue(Standard_Integer val) ;

~OCIFSelect_IntParam()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
