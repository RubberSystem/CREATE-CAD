// File generated by CPPExt (CPP file)
//

#include "IFSelect_SignCounter.h"
#include "../Converter.h"
#include "IFSelect_Signature.h"
#include "IFSelect_Selection.h"
#include "../Standard/Standard_Transient.h"
#include "../Interface/Interface_InterfaceModel.h"
#include "../TColStd/TColStd_HSequenceOfTransient.h"
#include "../Interface/Interface_Graph.h"
#include "../TCollection/TCollection_HAsciiString.h"


using namespace OCNaroWrappers;

OCIFSelect_SignCounter::OCIFSelect_SignCounter(Handle(IFSelect_SignCounter)* nativeHandle) : OCIFSelect_SignatureList((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_SignCounter(*nativeHandle);
}

OCIFSelect_SignCounter::OCIFSelect_SignCounter(System::Boolean withmap, System::Boolean withlist) : OCIFSelect_SignatureList((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IFSelect_SignCounter(new IFSelect_SignCounter(OCConverter::BooleanToStandardBoolean(withmap), OCConverter::BooleanToStandardBoolean(withlist)));
}

OCIFSelect_SignCounter::OCIFSelect_SignCounter(OCNaroWrappers::OCIFSelect_Signature^ matcher, System::Boolean withmap, System::Boolean withlist) : OCIFSelect_SignatureList((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IFSelect_SignCounter(new IFSelect_SignCounter(*((Handle_IFSelect_Signature*)matcher->Handle), OCConverter::BooleanToStandardBoolean(withmap), OCConverter::BooleanToStandardBoolean(withlist)));
}

OCIFSelect_Signature^ OCIFSelect_SignCounter::Signature()
{
  Handle(IFSelect_Signature) tmp = (*((Handle_IFSelect_SignCounter*)nativeHandle))->Signature();
  return gcnew OCIFSelect_Signature(&tmp);
}

 void OCIFSelect_SignCounter::SetMap(System::Boolean withmap)
{
  (*((Handle_IFSelect_SignCounter*)nativeHandle))->SetMap(OCConverter::BooleanToStandardBoolean(withmap));
}

 System::Boolean OCIFSelect_SignCounter::AddEntity(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SignCounter*)nativeHandle))->AddEntity(*((Handle_Standard_Transient*)ent->Handle), *((Handle_Interface_InterfaceModel*)model->Handle)));
}

 void OCIFSelect_SignCounter::AddSign(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model)
{
  (*((Handle_IFSelect_SignCounter*)nativeHandle))->AddSign(*((Handle_Standard_Transient*)ent->Handle), *((Handle_Interface_InterfaceModel*)model->Handle));
}

 void OCIFSelect_SignCounter::AddList(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list, OCNaroWrappers::OCInterface_InterfaceModel^ model)
{
  (*((Handle_IFSelect_SignCounter*)nativeHandle))->AddList(*((Handle_TColStd_HSequenceOfTransient*)list->Handle), *((Handle_Interface_InterfaceModel*)model->Handle));
}

 void OCIFSelect_SignCounter::AddWithGraph(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list, OCNaroWrappers::OCInterface_Graph^ graph)
{
  (*((Handle_IFSelect_SignCounter*)nativeHandle))->AddWithGraph(*((Handle_TColStd_HSequenceOfTransient*)list->Handle), *((Interface_Graph*)graph->Handle));
}

 void OCIFSelect_SignCounter::AddModel(OCNaroWrappers::OCInterface_InterfaceModel^ model)
{
  (*((Handle_IFSelect_SignCounter*)nativeHandle))->AddModel(*((Handle_Interface_InterfaceModel*)model->Handle));
}

 void OCIFSelect_SignCounter::AddFromSelection(OCNaroWrappers::OCIFSelect_Selection^ sel, OCNaroWrappers::OCInterface_Graph^ G)
{
  (*((Handle_IFSelect_SignCounter*)nativeHandle))->AddFromSelection(*((Handle_IFSelect_Selection*)sel->Handle), *((Interface_Graph*)G->Handle));
}

 void OCIFSelect_SignCounter::SetSelection(OCNaroWrappers::OCIFSelect_Selection^ sel)
{
  (*((Handle_IFSelect_SignCounter*)nativeHandle))->SetSelection(*((Handle_IFSelect_Selection*)sel->Handle));
}

OCIFSelect_Selection^ OCIFSelect_SignCounter::Selection()
{
  Handle(IFSelect_Selection) tmp = (*((Handle_IFSelect_SignCounter*)nativeHandle))->Selection();
  return gcnew OCIFSelect_Selection(&tmp);
}

 void OCIFSelect_SignCounter::SetSelMode(Standard_Integer selmode)
{
  (*((Handle_IFSelect_SignCounter*)nativeHandle))->SetSelMode(selmode);
}

 Standard_Integer OCIFSelect_SignCounter::SelMode()
{
  return (*((Handle_IFSelect_SignCounter*)nativeHandle))->SelMode();
}

 System::Boolean OCIFSelect_SignCounter::ComputeSelected(OCNaroWrappers::OCInterface_Graph^ G, System::Boolean forced)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SignCounter*)nativeHandle))->ComputeSelected(*((Interface_Graph*)G->Handle), OCConverter::BooleanToStandardBoolean(forced)));
}

OCTCollection_HAsciiString^ OCIFSelect_SignCounter::Sign(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model)
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_IFSelect_SignCounter*)nativeHandle))->Sign(*((Handle_Standard_Transient*)ent->Handle), *((Handle_Interface_InterfaceModel*)model->Handle));
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 System::String^ OCIFSelect_SignCounter::ComputedSign(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_Graph^ G)
{
  return OCConverter::StandardCStringToString((*((Handle_IFSelect_SignCounter*)nativeHandle))->ComputedSign(*((Handle_Standard_Transient*)ent->Handle), *((Interface_Graph*)G->Handle)));
}


