// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_GraphCounter_OCWrappers_HeaderFile
#define _IFSelect_GraphCounter_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_GraphCounter.hxx>
#include "../Converter.h"

#include "IFSelect_SignCounter.h"



namespace OCNaroWrappers
{

ref class OCIFSelect_SelectDeduct;
ref class OCTColStd_HSequenceOfTransient;
ref class OCInterface_Graph;


//! A GraphCounter computes values to be sorted with the help of <br>
//!           a Graph. I.E. not from a Signature <br>
//! <br>
//!           The default GraphCounter works with an Applied Selection (a <br>
//!           SelectDeduct), the value is the count of selected entities <br>
//!           from each input entities) <br>
public ref class OCIFSelect_GraphCounter : OCIFSelect_SignCounter {

protected:
  // dummy constructor;
  OCIFSelect_GraphCounter(OCDummy^) : OCIFSelect_SignCounter((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_GraphCounter(Handle(IFSelect_GraphCounter)* nativeHandle);

// Methods PUBLIC

//! Creates a GraphCounter, without applied selection <br>
OCIFSelect_GraphCounter(System::Boolean withmap, System::Boolean withlist);

//! Returns the applied selection <br>
 /*instead*/  OCIFSelect_SelectDeduct^ Applied() ;

//! Sets a new applied selection <br>
 /*instead*/  void SetApplied(OCNaroWrappers::OCIFSelect_SelectDeduct^ sel) ;

//! Adds a list of entities in the context given by the graph <br>
//!           Default takes the count of entities selected by the applied <br>
//!           selection, when it is given each entity of the list <br>
//!           Can be redefined <br>
virtual /*instead*/  void AddWithGraph(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list, OCNaroWrappers::OCInterface_Graph^ graph) override;

~OCIFSelect_GraphCounter()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
