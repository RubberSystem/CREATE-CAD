// File generated by CPPExt (CPP file)
//

#include "IFSelect_HSeqOfSelection.h"
#include "../Converter.h"
#include "IFSelect_Selection.h"
#include "IFSelect_TSeqOfSelection.h"


using namespace OCNaroWrappers;

OCIFSelect_HSeqOfSelection::OCIFSelect_HSeqOfSelection(Handle(IFSelect_HSeqOfSelection)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_HSeqOfSelection(*nativeHandle);
}

OCIFSelect_HSeqOfSelection::OCIFSelect_HSeqOfSelection() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IFSelect_HSeqOfSelection(new IFSelect_HSeqOfSelection());
}

 System::Boolean OCIFSelect_HSeqOfSelection::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCIFSelect_HSeqOfSelection::Length()
{
  return (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Length();
}

 void OCIFSelect_HSeqOfSelection::Clear()
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Clear();
}

 void OCIFSelect_HSeqOfSelection::Append(OCNaroWrappers::OCIFSelect_Selection^ anItem)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Append(*((Handle_IFSelect_Selection*)anItem->Handle));
}

 void OCIFSelect_HSeqOfSelection::Append(OCNaroWrappers::OCIFSelect_HSeqOfSelection^ aSequence)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Append(*((Handle_IFSelect_HSeqOfSelection*)aSequence->Handle));
}

 void OCIFSelect_HSeqOfSelection::Prepend(OCNaroWrappers::OCIFSelect_Selection^ anItem)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Prepend(*((Handle_IFSelect_Selection*)anItem->Handle));
}

 void OCIFSelect_HSeqOfSelection::Prepend(OCNaroWrappers::OCIFSelect_HSeqOfSelection^ aSequence)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Prepend(*((Handle_IFSelect_HSeqOfSelection*)aSequence->Handle));
}

 void OCIFSelect_HSeqOfSelection::Reverse()
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Reverse();
}

 void OCIFSelect_HSeqOfSelection::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCIFSelect_Selection^ anItem)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->InsertBefore(anIndex, *((Handle_IFSelect_Selection*)anItem->Handle));
}

 void OCIFSelect_HSeqOfSelection::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCIFSelect_HSeqOfSelection^ aSequence)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->InsertBefore(anIndex, *((Handle_IFSelect_HSeqOfSelection*)aSequence->Handle));
}

 void OCIFSelect_HSeqOfSelection::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCIFSelect_Selection^ anItem)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->InsertAfter(anIndex, *((Handle_IFSelect_Selection*)anItem->Handle));
}

 void OCIFSelect_HSeqOfSelection::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCIFSelect_HSeqOfSelection^ aSequence)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->InsertAfter(anIndex, *((Handle_IFSelect_HSeqOfSelection*)aSequence->Handle));
}

 void OCIFSelect_HSeqOfSelection::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCIFSelect_HSeqOfSelection^ OCIFSelect_HSeqOfSelection::Split(Standard_Integer anIndex)
{
  Handle(IFSelect_HSeqOfSelection) tmp = (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Split(anIndex);
  return gcnew OCIFSelect_HSeqOfSelection(&tmp);
}

 void OCIFSelect_HSeqOfSelection::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCIFSelect_Selection^ anItem)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->SetValue(anIndex, *((Handle_IFSelect_Selection*)anItem->Handle));
}

OCIFSelect_Selection^ OCIFSelect_HSeqOfSelection::Value(Standard_Integer anIndex)
{
  Handle(IFSelect_Selection) tmp = (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Value(anIndex);
  return gcnew OCIFSelect_Selection(&tmp);
}

OCIFSelect_Selection^ OCIFSelect_HSeqOfSelection::ChangeValue(Standard_Integer anIndex)
{
  Handle(IFSelect_Selection) tmp = (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCIFSelect_Selection(&tmp);
}

 void OCIFSelect_HSeqOfSelection::Remove(Standard_Integer anIndex)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Remove(anIndex);
}

 void OCIFSelect_HSeqOfSelection::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCIFSelect_TSeqOfSelection^ OCIFSelect_HSeqOfSelection::Sequence()
{
  IFSelect_TSeqOfSelection* tmp = new IFSelect_TSeqOfSelection();
  *tmp = (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->Sequence();
  return gcnew OCIFSelect_TSeqOfSelection(tmp);
}

OCIFSelect_TSeqOfSelection^ OCIFSelect_HSeqOfSelection::ChangeSequence()
{
  IFSelect_TSeqOfSelection* tmp = new IFSelect_TSeqOfSelection();
  *tmp = (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->ChangeSequence();
  return gcnew OCIFSelect_TSeqOfSelection(tmp);
}

OCIFSelect_HSeqOfSelection^ OCIFSelect_HSeqOfSelection::ShallowCopy()
{
  Handle(IFSelect_HSeqOfSelection) tmp = (*((Handle_IFSelect_HSeqOfSelection*)nativeHandle))->ShallowCopy();
  return gcnew OCIFSelect_HSeqOfSelection(&tmp);
}


