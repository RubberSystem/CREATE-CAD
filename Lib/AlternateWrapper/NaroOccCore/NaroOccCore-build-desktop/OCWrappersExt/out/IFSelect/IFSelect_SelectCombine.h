// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_SelectCombine_OCWrappers_HeaderFile
#define _IFSelect_SelectCombine_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_SelectCombine.hxx>
#include "../Converter.h"

#include "IFSelect_Selection.h"

#include "IFSelect_TSeqOfSelection.h"


namespace OCNaroWrappers
{

ref class OCIFSelect_Selection;
ref class OCIFSelect_SelectionIterator;


//! A SelectCombine type Selection defines algebraic operations <br>
//!           between results of several Selections <br>
//!           It is a deferred class : sub-classes will have to define <br>
//!           precise what operator is to be applied <br>
public ref class OCIFSelect_SelectCombine : OCIFSelect_Selection {

protected:
  // dummy constructor;
  OCIFSelect_SelectCombine(OCDummy^) : OCIFSelect_Selection((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_SelectCombine(Handle(IFSelect_SelectCombine)* nativeHandle);

// Methods PUBLIC

//! Defines an empty SelectCombine <br>
OCIFSelect_SelectCombine();

//! Returns the count of Input Selections <br>
 /*instead*/  Standard_Integer NbInputs() ;

//! Returns an Input Selection, given its rank in the list <br>
 /*instead*/  OCIFSelect_Selection^ Input(Standard_Integer num) ;

//! Returns the rank of an input Selection, 0 if not in the list. <br>
//!           Most generally, its value is meaningless, except for testing <br>
//!           the presence of an input Selection : <br>
//!           - == 0  if <sel> is not an input for <me> <br>
//!           - >  0  if <sel> is an input for <me> <br>
 /*instead*/  Standard_Integer InputRank(OCNaroWrappers::OCIFSelect_Selection^ sel) ;

//! Adds a Selection to the filling list <br>
//!           By default, adds it to the end of the list <br>
//!           A Positive rank less then NbInputs gives an insertion rank <br>
//!           (InsertBefore : the new <atnum>th item of the list is <sel>) <br>
 /*instead*/  void Add(OCNaroWrappers::OCIFSelect_Selection^ sel, Standard_Integer atnum) ;

//! Removes an input Selection. <br>
//!           Returns True if Done, False, if <sel> is not an input for <me> <br>
 /*instead*/  System::Boolean Remove(OCNaroWrappers::OCIFSelect_Selection^ sel) ;

//! Removes an input Selection, given its rank in the list <br>
//!           Returns True if Done, False if <num> is out of range <br>
 /*instead*/  System::Boolean Remove(Standard_Integer num) ;

//! Puts in an Iterator the Selections from which "me" depends <br>
//!           That is to say, the list of Input Selections <br>
 /*instead*/  void FillIterator(OCNaroWrappers::OCIFSelect_SelectionIterator^ iter) ;

~OCIFSelect_SelectCombine()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
