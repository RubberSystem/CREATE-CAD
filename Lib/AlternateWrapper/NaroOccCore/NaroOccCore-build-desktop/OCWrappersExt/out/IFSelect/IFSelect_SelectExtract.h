// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_SelectExtract_OCWrappers_HeaderFile
#define _IFSelect_SelectExtract_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_SelectExtract.hxx>
#include "../Converter.h"

#include "IFSelect_SelectDeduct.h"



namespace OCNaroWrappers
{

ref class OCInterface_EntityIterator;
ref class OCInterface_Graph;
ref class OCStandard_Transient;
ref class OCInterface_InterfaceModel;
ref class OCTCollection_AsciiString;


//! A SelectExtract determines a list of Entities from an Input <br>
//!           Selection, as a sub-list of the Input Result <br>
//!           It works by applying a sort criterium on each Entity of the <br>
//!           Input. This criterium can be applied Direct to Pick Items <br>
//!           (default case) or Reverse to Remove Item <br>
//! <br>
//!           Basic features (the unique Input) are inherited from SelectDeduct <br>
public ref class OCIFSelect_SelectExtract : OCIFSelect_SelectDeduct {

protected:
  // dummy constructor;
  OCIFSelect_SelectExtract(OCDummy^) : OCIFSelect_SelectDeduct((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_SelectExtract(Handle(IFSelect_SelectExtract)* nativeHandle);

// Methods PUBLIC

//! Initializes a SelectExtract : enforces the sort to be Direct <br>
OCIFSelect_SelectExtract();

//! Returns True if Sort criterium is Direct, False if Reverse <br>
 /*instead*/  System::Boolean IsDirect() ;

//! Sets Sort criterium sense to a new value <br>
//!           (True : Direct , False : Reverse) <br>
 /*instead*/  void SetDirect(System::Boolean direct) ;

//! Returns the list of selected entities. Works by calling the <br>
//!           method Sort on each input Entity : the Entity is kept as <br>
//!           output if Sort returns the same value as Direct status <br>
virtual /*instead*/  OCInterface_EntityIterator^ RootResult(OCNaroWrappers::OCInterface_Graph^ G) ;

//! Works as Sort but works on the Graph <br>
//!           Default directly calls Sort, but it can be redefined <br>
//!           If SortInGraph is redefined, Sort should be defined even if <br>
//!           not called (to avoid deferred methods in a final class) <br>
virtual /*instead*/  System::Boolean SortInGraph(Standard_Integer rank, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_Graph^ G) ;

//! Returns a text saying "Picked" or "Removed", plus the <br>
//!           specific criterium returned by ExtractLabel (see below) <br>
 /*instead*/  OCTCollection_AsciiString^ Label() ;

~OCIFSelect_SelectExtract()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
