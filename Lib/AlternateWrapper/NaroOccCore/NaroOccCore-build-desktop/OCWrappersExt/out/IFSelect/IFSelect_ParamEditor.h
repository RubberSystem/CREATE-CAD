// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_ParamEditor_OCWrappers_HeaderFile
#define _IFSelect_ParamEditor_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_ParamEditor.hxx>
#include "../Converter.h"

#include "IFSelect_Editor.h"

#include "../TCollection/TCollection_AsciiString.h"


namespace OCNaroWrappers
{

ref class OCInterface_TypedValue;
ref class OCTCollection_AsciiString;
ref class OCIFSelect_EditForm;
ref class OCTCollection_HAsciiString;
ref class OCStandard_Transient;
ref class OCInterface_InterfaceModel;
ref class OCTColStd_HSequenceOfHAsciiString;


//! A ParamEditor gives access for edition to a list of TypedValue <br>
//!           (i.e. of Static too) <br>
//!           Its definition is made of the TypedValue to edit themselves, <br>
//!           and can add some constants, which can then be displayed but <br>
//!           not changed (for instance, system name, processor version ...) <br>
//! <br>
//!           I.E. it gives a way of editing or at least displaying <br>
//!           parameters as global <br>
public ref class OCIFSelect_ParamEditor : OCIFSelect_Editor {

protected:
  // dummy constructor;
  OCIFSelect_ParamEditor(OCDummy^) : OCIFSelect_Editor((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_ParamEditor(Handle(IFSelect_ParamEditor)* nativeHandle);

// Methods PUBLIC

//! Creates a ParamEditor, empty, with a maximum count of params <br>
//!           (default is 100) <br>
//!           And a label, by default it will be "Param Editor" <br>
OCIFSelect_ParamEditor(Standard_Integer nbmax, System::String^ label);

//! Adds a TypedValue <br>
//!           By default, its short name equates its complete name, it can <br>
//!           be explicited <br>
 /*instead*/  void AddValue(OCNaroWrappers::OCInterface_TypedValue^ val, System::String^ shortname) ;

//! Adds a Constant Text, it will be Read Only <br>
//!           By default, its long name equates its shortname <br>
 /*instead*/  void AddConstantText(System::String^ val, System::String^ shortname, System::String^ completename) ;


 /*instead*/  OCTCollection_AsciiString^ Label() ;


 /*instead*/  System::Boolean Recognize(OCNaroWrappers::OCIFSelect_EditForm^ form) ;


 /*instead*/  OCTCollection_HAsciiString^ StringValue(OCNaroWrappers::OCIFSelect_EditForm^ form, Standard_Integer num) ;


 /*instead*/  System::Boolean Load(OCNaroWrappers::OCIFSelect_EditForm^ form, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model) ;


 /*instead*/  System::Boolean Apply(OCNaroWrappers::OCIFSelect_EditForm^ form, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model) ;

//! Returns a ParamEditor to work on the Static Parameters of <br>
//!           which names are listed in <list> <br>
//!           Null Handle if <list> is null or empty <br>
static /*instead*/  OCIFSelect_ParamEditor^ StaticEditor(OCNaroWrappers::OCTColStd_HSequenceOfHAsciiString^ list, System::String^ label) ;

~OCIFSelect_ParamEditor()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
