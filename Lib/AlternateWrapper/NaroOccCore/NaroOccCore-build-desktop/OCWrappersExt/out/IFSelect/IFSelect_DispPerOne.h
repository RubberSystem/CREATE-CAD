// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_DispPerOne_OCWrappers_HeaderFile
#define _IFSelect_DispPerOne_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_DispPerOne.hxx>
#include "../Converter.h"

#include "IFSelect_Dispatch.h"



namespace OCNaroWrappers
{

ref class OCTCollection_AsciiString;
ref class OCInterface_Graph;


//! A DispPerOne gathers all the input Entities into as many <br>
//!           Packets as there Root Entities from the Final Selection, <br>
//!           that is, one Packet per Entity <br>
public ref class OCIFSelect_DispPerOne : OCIFSelect_Dispatch {

protected:
  // dummy constructor;
  OCIFSelect_DispPerOne(OCDummy^) : OCIFSelect_Dispatch((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_DispPerOne(Handle(IFSelect_DispPerOne)* nativeHandle);

// Methods PUBLIC

//! Creates a DispPerOne <br>
OCIFSelect_DispPerOne();

//! Returns as Label, "One File per Input Entity" <br>
 /*instead*/  OCTCollection_AsciiString^ Label() ;

//! Returns True, maximum limit is given as <nbent> <br>
virtual /*instead*/  System::Boolean LimitedMax(Standard_Integer nbent, Standard_Integer& max) override;

//! Returns True (count is easy to know) and count is the length <br>
//!           of the input list (RootResult from FinalSelection) <br>
virtual /*instead*/  System::Boolean PacketsCount(OCNaroWrappers::OCInterface_Graph^ G, Standard_Integer& count) override;

//! Returns the list of produced Packets. It defines one Packet <br>
//!           per Entity given by RootResult from the Final Selection. <br>
 /*instead*/  void Packets(OCNaroWrappers::OCInterface_Graph^ G, ) ;

~OCIFSelect_DispPerOne()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
