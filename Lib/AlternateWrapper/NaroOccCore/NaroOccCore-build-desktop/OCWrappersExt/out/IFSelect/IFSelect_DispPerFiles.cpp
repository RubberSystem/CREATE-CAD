// File generated by CPPExt (CPP file)
//

#include "IFSelect_DispPerFiles.h"
#include "../Converter.h"
#include "IFSelect_IntParam.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../Interface/Interface_Graph.h"


using namespace OCNaroWrappers;

OCIFSelect_DispPerFiles::OCIFSelect_DispPerFiles(Handle(IFSelect_DispPerFiles)* nativeHandle) : OCIFSelect_Dispatch((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_DispPerFiles(*nativeHandle);
}

OCIFSelect_DispPerFiles::OCIFSelect_DispPerFiles() : OCIFSelect_Dispatch((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IFSelect_DispPerFiles(new IFSelect_DispPerFiles());
}

OCIFSelect_IntParam^ OCIFSelect_DispPerFiles::Count()
{
  Handle(IFSelect_IntParam) tmp = (*((Handle_IFSelect_DispPerFiles*)nativeHandle))->Count();
  return gcnew OCIFSelect_IntParam(&tmp);
}

 void OCIFSelect_DispPerFiles::SetCount(OCNaroWrappers::OCIFSelect_IntParam^ count)
{
  (*((Handle_IFSelect_DispPerFiles*)nativeHandle))->SetCount(*((Handle_IFSelect_IntParam*)count->Handle));
}

 Standard_Integer OCIFSelect_DispPerFiles::CountValue()
{
  return (*((Handle_IFSelect_DispPerFiles*)nativeHandle))->CountValue();
}

OCTCollection_AsciiString^ OCIFSelect_DispPerFiles::Label()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_IFSelect_DispPerFiles*)nativeHandle))->Label();
  return gcnew OCTCollection_AsciiString(tmp);
}

 System::Boolean OCIFSelect_DispPerFiles::LimitedMax(Standard_Integer nbent, Standard_Integer& max)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_DispPerFiles*)nativeHandle))->LimitedMax(nbent, max));
}

 System::Boolean OCIFSelect_DispPerFiles::PacketsCount(OCNaroWrappers::OCInterface_Graph^ G, Standard_Integer& count)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_DispPerFiles*)nativeHandle))->PacketsCount(*((Interface_Graph*)G->Handle), count));
}

 void OCIFSelect_DispPerFiles::Packets(OCNaroWrappers::OCInterface_Graph^ G, )
{
  (*((Handle_IFSelect_DispPerFiles*)nativeHandle))->Packets(*((Interface_Graph*)G->Handle), );
}


