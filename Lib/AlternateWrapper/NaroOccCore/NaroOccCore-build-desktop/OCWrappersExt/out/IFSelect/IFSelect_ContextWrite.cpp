// File generated by CPPExt (CPP file)
//

#include "IFSelect_ContextWrite.h"
#include "../Converter.h"
#include "../Interface/Interface_InterfaceModel.h"
#include "../Interface/Interface_Protocol.h"
#include "IFSelect_AppliedModifiers.h"
#include "../Interface/Interface_HGraph.h"
#include "IFSelect_GeneralModifier.h"
#include "../Interface/Interface_Graph.h"
#include "../Standard/Standard_Transient.h"
#include "../Interface/Interface_Check.h"
#include "../Interface/Interface_CheckIterator.h"


using namespace OCNaroWrappers;

OCIFSelect_ContextWrite::OCIFSelect_ContextWrite(IFSelect_ContextWrite* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCIFSelect_ContextWrite::OCIFSelect_ContextWrite(OCNaroWrappers::OCInterface_InterfaceModel^ model, OCNaroWrappers::OCInterface_Protocol^ proto, OCNaroWrappers::OCIFSelect_AppliedModifiers^ applieds, System::String^ filename) 
{
  nativeHandle = new IFSelect_ContextWrite(*((Handle_Interface_InterfaceModel*)model->Handle), *((Handle_Interface_Protocol*)proto->Handle), *((Handle_IFSelect_AppliedModifiers*)applieds->Handle), OCConverter::StringToStandardCString(filename));
}

OCIFSelect_ContextWrite::OCIFSelect_ContextWrite(OCNaroWrappers::OCInterface_HGraph^ hgraph, OCNaroWrappers::OCInterface_Protocol^ proto, OCNaroWrappers::OCIFSelect_AppliedModifiers^ applieds, System::String^ filename) 
{
  nativeHandle = new IFSelect_ContextWrite(*((Handle_Interface_HGraph*)hgraph->Handle), *((Handle_Interface_Protocol*)proto->Handle), *((Handle_IFSelect_AppliedModifiers*)applieds->Handle), OCConverter::StringToStandardCString(filename));
}

OCInterface_InterfaceModel^ OCIFSelect_ContextWrite::Model()
{
  Handle(Interface_InterfaceModel) tmp = ((IFSelect_ContextWrite*)nativeHandle)->Model();
  return gcnew OCInterface_InterfaceModel(&tmp);
}

OCInterface_Protocol^ OCIFSelect_ContextWrite::Protocol()
{
  Handle(Interface_Protocol) tmp = ((IFSelect_ContextWrite*)nativeHandle)->Protocol();
  return gcnew OCInterface_Protocol(&tmp);
}

 System::String^ OCIFSelect_ContextWrite::FileName()
{
  return OCConverter::StandardCStringToString(((IFSelect_ContextWrite*)nativeHandle)->FileName());
}

OCIFSelect_AppliedModifiers^ OCIFSelect_ContextWrite::AppliedModifiers()
{
  Handle(IFSelect_AppliedModifiers) tmp = ((IFSelect_ContextWrite*)nativeHandle)->AppliedModifiers();
  return gcnew OCIFSelect_AppliedModifiers(&tmp);
}

OCInterface_Graph^ OCIFSelect_ContextWrite::Graph()
{
  Interface_Graph* tmp = new Interface_Graph(123abc, 123abc, 0);
  *tmp = ((IFSelect_ContextWrite*)nativeHandle)->Graph();
  return gcnew OCInterface_Graph(tmp);
}

 Standard_Integer OCIFSelect_ContextWrite::NbModifiers()
{
  return ((IFSelect_ContextWrite*)nativeHandle)->NbModifiers();
}

 System::Boolean OCIFSelect_ContextWrite::SetModifier(Standard_Integer numod)
{
  return OCConverter::StandardBooleanToBoolean(((IFSelect_ContextWrite*)nativeHandle)->SetModifier(numod));
}

OCIFSelect_GeneralModifier^ OCIFSelect_ContextWrite::FileModifier()
{
  Handle(IFSelect_GeneralModifier) tmp = ((IFSelect_ContextWrite*)nativeHandle)->FileModifier();
  return gcnew OCIFSelect_GeneralModifier(&tmp);
}

 System::Boolean OCIFSelect_ContextWrite::IsForNone()
{
  return OCConverter::StandardBooleanToBoolean(((IFSelect_ContextWrite*)nativeHandle)->IsForNone());
}

 System::Boolean OCIFSelect_ContextWrite::IsForAll()
{
  return OCConverter::StandardBooleanToBoolean(((IFSelect_ContextWrite*)nativeHandle)->IsForAll());
}

 Standard_Integer OCIFSelect_ContextWrite::NbEntities()
{
  return ((IFSelect_ContextWrite*)nativeHandle)->NbEntities();
}

 void OCIFSelect_ContextWrite::Start()
{
  ((IFSelect_ContextWrite*)nativeHandle)->Start();
}

 System::Boolean OCIFSelect_ContextWrite::More()
{
  return OCConverter::StandardBooleanToBoolean(((IFSelect_ContextWrite*)nativeHandle)->More());
}

 void OCIFSelect_ContextWrite::Next()
{
  ((IFSelect_ContextWrite*)nativeHandle)->Next();
}

OCStandard_Transient^ OCIFSelect_ContextWrite::Value()
{
  Handle(Standard_Transient) tmp = ((IFSelect_ContextWrite*)nativeHandle)->Value();
  return gcnew OCStandard_Transient(&tmp);
}

 void OCIFSelect_ContextWrite::AddCheck(OCNaroWrappers::OCInterface_Check^ check)
{
  ((IFSelect_ContextWrite*)nativeHandle)->AddCheck(*((Handle_Interface_Check*)check->Handle));
}

 void OCIFSelect_ContextWrite::AddWarning(OCNaroWrappers::OCStandard_Transient^ start, System::String^ mess, System::String^ orig)
{
  ((IFSelect_ContextWrite*)nativeHandle)->AddWarning(*((Handle_Standard_Transient*)start->Handle), OCConverter::StringToStandardCString(mess), OCConverter::StringToStandardCString(orig));
}

 void OCIFSelect_ContextWrite::AddFail(OCNaroWrappers::OCStandard_Transient^ start, System::String^ mess, System::String^ orig)
{
  ((IFSelect_ContextWrite*)nativeHandle)->AddFail(*((Handle_Standard_Transient*)start->Handle), OCConverter::StringToStandardCString(mess), OCConverter::StringToStandardCString(orig));
}

OCInterface_Check^ OCIFSelect_ContextWrite::CCheck(Standard_Integer num)
{
  Handle(Interface_Check) tmp = ((IFSelect_ContextWrite*)nativeHandle)->CCheck(num);
  return gcnew OCInterface_Check(&tmp);
}

OCInterface_Check^ OCIFSelect_ContextWrite::CCheck(OCNaroWrappers::OCStandard_Transient^ start)
{
  Handle(Interface_Check) tmp = ((IFSelect_ContextWrite*)nativeHandle)->CCheck(*((Handle_Standard_Transient*)start->Handle));
  return gcnew OCInterface_Check(&tmp);
}

OCInterface_CheckIterator^ OCIFSelect_ContextWrite::CheckList()
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = ((IFSelect_ContextWrite*)nativeHandle)->CheckList();
  return gcnew OCInterface_CheckIterator(tmp);
}


