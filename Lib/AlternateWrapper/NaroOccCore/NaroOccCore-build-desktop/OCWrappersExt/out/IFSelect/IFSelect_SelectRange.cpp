// File generated by CPPExt (CPP file)
//

#include "IFSelect_SelectRange.h"
#include "../Converter.h"
#include "IFSelect_IntParam.h"
#include "../Standard/Standard_Transient.h"
#include "../Interface/Interface_InterfaceModel.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCIFSelect_SelectRange::OCIFSelect_SelectRange(Handle(IFSelect_SelectRange)* nativeHandle) : OCIFSelect_SelectExtract((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_SelectRange(*nativeHandle);
}

OCIFSelect_SelectRange::OCIFSelect_SelectRange() : OCIFSelect_SelectExtract((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IFSelect_SelectRange(new IFSelect_SelectRange());
}

 void OCIFSelect_SelectRange::SetRange(OCNaroWrappers::OCIFSelect_IntParam^ rankfrom, OCNaroWrappers::OCIFSelect_IntParam^ rankto)
{
  (*((Handle_IFSelect_SelectRange*)nativeHandle))->SetRange(*((Handle_IFSelect_IntParam*)rankfrom->Handle), *((Handle_IFSelect_IntParam*)rankto->Handle));
}

 void OCIFSelect_SelectRange::SetOne(OCNaroWrappers::OCIFSelect_IntParam^ rank)
{
  (*((Handle_IFSelect_SelectRange*)nativeHandle))->SetOne(*((Handle_IFSelect_IntParam*)rank->Handle));
}

 void OCIFSelect_SelectRange::SetFrom(OCNaroWrappers::OCIFSelect_IntParam^ rankfrom)
{
  (*((Handle_IFSelect_SelectRange*)nativeHandle))->SetFrom(*((Handle_IFSelect_IntParam*)rankfrom->Handle));
}

 void OCIFSelect_SelectRange::SetUntil(OCNaroWrappers::OCIFSelect_IntParam^ rankto)
{
  (*((Handle_IFSelect_SelectRange*)nativeHandle))->SetUntil(*((Handle_IFSelect_IntParam*)rankto->Handle));
}

 System::Boolean OCIFSelect_SelectRange::HasLower()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectRange*)nativeHandle))->HasLower());
}

OCIFSelect_IntParam^ OCIFSelect_SelectRange::Lower()
{
  Handle(IFSelect_IntParam) tmp = (*((Handle_IFSelect_SelectRange*)nativeHandle))->Lower();
  return gcnew OCIFSelect_IntParam(&tmp);
}

 Standard_Integer OCIFSelect_SelectRange::LowerValue()
{
  return (*((Handle_IFSelect_SelectRange*)nativeHandle))->LowerValue();
}

 System::Boolean OCIFSelect_SelectRange::HasUpper()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectRange*)nativeHandle))->HasUpper());
}

OCIFSelect_IntParam^ OCIFSelect_SelectRange::Upper()
{
  Handle(IFSelect_IntParam) tmp = (*((Handle_IFSelect_SelectRange*)nativeHandle))->Upper();
  return gcnew OCIFSelect_IntParam(&tmp);
}

 Standard_Integer OCIFSelect_SelectRange::UpperValue()
{
  return (*((Handle_IFSelect_SelectRange*)nativeHandle))->UpperValue();
}

 System::Boolean OCIFSelect_SelectRange::Sort(Standard_Integer rank, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectRange*)nativeHandle))->Sort(rank, *((Handle_Standard_Transient*)ent->Handle), *((Handle_Interface_InterfaceModel*)model->Handle)));
}

OCTCollection_AsciiString^ OCIFSelect_SelectRange::ExtractLabel()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_IFSelect_SelectRange*)nativeHandle))->ExtractLabel();
  return gcnew OCTCollection_AsciiString(tmp);
}


