// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_SelectSent_OCWrappers_HeaderFile
#define _IFSelect_SelectSent_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_SelectSent.hxx>
#include "../Converter.h"

#include "IFSelect_SelectExtract.h"



namespace OCNaroWrappers
{

ref class OCInterface_EntityIterator;
ref class OCInterface_Graph;
ref class OCStandard_Transient;
ref class OCInterface_InterfaceModel;
ref class OCTCollection_AsciiString;


//! This class returns entities according sending to a file <br>
//!           Once a model has been loaded, further sendings are recorded <br>
//!           as status in the graph (for each value, a count of sendings) <br>
//! <br>
//!           Hence, it is possible to query entities : sent ones (at least <br>
//!           once), non-sent (i.e. remaining) ones, duplicated ones, etc... <br>
//! <br>
//!           This selection performs this query <br>
public ref class OCIFSelect_SelectSent : OCIFSelect_SelectExtract {

protected:
  // dummy constructor;
  OCIFSelect_SelectSent(OCDummy^) : OCIFSelect_SelectExtract((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_SelectSent(Handle(IFSelect_SelectSent)* nativeHandle);

// Methods PUBLIC

//! Creates a SelectSent : <br>
//!           sentcount = 0 -> remaining (non-sent) entities <br>
//!           sentcount = 1, atleast = True (D) -> sent (at least once) <br>
//!           sentcount = 2, atleast = True -> duplicated (sent least twice) <br>
//!             etc... <br>
//!           sentcount = 1, atleast = False -> sent just once (non-dupl.d) <br>
//!           sentcount = 2, atleast = False -> sent just twice <br>
//!             etc... <br>
OCIFSelect_SelectSent(Standard_Integer sentcount, System::Boolean atleast);

//! Returns the queried count of sending <br>
 /*instead*/  Standard_Integer SentCount() ;

//! Returns the <atleast> status, True for sending at least the <br>
//!           sending count, False for sending exactly the sending count <br>
//!           Remark : if SentCount is 0, AtLeast is ignored <br>
 /*instead*/  System::Boolean AtLeast() ;

//! Returns the list of selected entities. It is redefined to <br>
//!           work on the graph itself (not queried by sort) <br>
//! <br>
//!           An entity is selected if its count complies to the query in <br>
//!           Direct Mode, rejected in Reversed Mode <br>
//! <br>
//!           Query works on the sending count recorded as status in Graph <br>
virtual /*instead*/  OCInterface_EntityIterator^ RootResult(OCNaroWrappers::OCInterface_Graph^ G) override;

//! Returns always False because RootResult has done the work <br>
 /*instead*/  System::Boolean Sort(Standard_Integer rank, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model) ;

//! Returns a text defining the criterium : query : <br>
//!           SentCount = 0 -> "Remaining (non-sent) entities" <br>
//!           SentCount = 1, AtLeast = True  -> "Sent entities" <br>
//!           SentCount = 1, AtLeast = False -> "Sent once (no duplicated)" <br>
//!           SentCount = 2, AtLeast = True  -> "Sent several times entities" <br>
//!           SentCount = 2, AtLeast = False -> "Sent twice entities" <br>
//!           SentCount > 2, AtLeast = True  -> "Sent at least <count> times entities" <br>
//!           SentCount > 2, AtLeast = False -> "Sent <count> times entities" <br>
 /*instead*/  OCTCollection_AsciiString^ ExtractLabel() ;

~OCIFSelect_SelectSent()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
