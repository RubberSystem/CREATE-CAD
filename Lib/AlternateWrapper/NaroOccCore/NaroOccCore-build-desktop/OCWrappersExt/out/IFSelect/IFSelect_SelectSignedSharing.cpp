// File generated by CPPExt (CPP file)
//

#include "IFSelect_SelectSignedSharing.h"
#include "../Converter.h"
#include "IFSelect_Signature.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../Standard/Standard_Transient.h"
#include "../Interface/Interface_Graph.h"
#include "../Interface/Interface_EntityIterator.h"


using namespace OCNaroWrappers;

OCIFSelect_SelectSignedSharing::OCIFSelect_SelectSignedSharing(Handle(IFSelect_SelectSignedSharing)* nativeHandle) : OCIFSelect_SelectExplore((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_SelectSignedSharing(*nativeHandle);
}

OCIFSelect_SelectSignedSharing::OCIFSelect_SelectSignedSharing(OCNaroWrappers::OCIFSelect_Signature^ matcher, System::String^ signtext, System::Boolean exact, Standard_Integer level) : OCIFSelect_SelectExplore((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IFSelect_SelectSignedSharing(new IFSelect_SelectSignedSharing(*((Handle_IFSelect_Signature*)matcher->Handle), OCConverter::StringToStandardCString(signtext), OCConverter::BooleanToStandardBoolean(exact), level));
}

OCIFSelect_Signature^ OCIFSelect_SelectSignedSharing::Signature()
{
  Handle(IFSelect_Signature) tmp = (*((Handle_IFSelect_SelectSignedSharing*)nativeHandle))->Signature();
  return gcnew OCIFSelect_Signature(&tmp);
}

OCTCollection_AsciiString^ OCIFSelect_SelectSignedSharing::SignatureText()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_IFSelect_SelectSignedSharing*)nativeHandle))->SignatureText();
  return gcnew OCTCollection_AsciiString(tmp);
}

 System::Boolean OCIFSelect_SelectSignedSharing::IsExact()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectSignedSharing*)nativeHandle))->IsExact());
}

 System::Boolean OCIFSelect_SelectSignedSharing::Explore(Standard_Integer level, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_Graph^ G, OCNaroWrappers::OCInterface_EntityIterator^ explored)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectSignedSharing*)nativeHandle))->Explore(level, *((Handle_Standard_Transient*)ent->Handle), *((Interface_Graph*)G->Handle), *((Interface_EntityIterator*)explored->Handle)));
}

OCTCollection_AsciiString^ OCIFSelect_SelectSignedSharing::ExploreLabel()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_IFSelect_SelectSignedSharing*)nativeHandle))->ExploreLabel();
  return gcnew OCTCollection_AsciiString(tmp);
}


