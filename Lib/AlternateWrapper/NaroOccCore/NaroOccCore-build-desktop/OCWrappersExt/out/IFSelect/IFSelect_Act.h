// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_Act_OCWrappers_HeaderFile
#define _IFSelect_Act_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_Act.hxx>
#include "../Converter.h"

#include "IFSelect_Activator.h"

#include "../TCollection/TCollection_AsciiString.h"
#include "IFSelect_ReturnStatus.h"


namespace OCNaroWrappers
{

ref class OCIFSelect_SessionPilot;


//! Act gives a simple way to define and add functions to be ran <br>
//!           from a SessionPilot, as follows : <br>
//! <br>
//!           Define a function as <br>
//!             static IFSelect_RetStatus myfunc <br>
//!               (const Standard_CString name, <br>
//!                const Handle(IFSelect_SessionPilot)& pilot) <br>
//!             { ... } <br>
//!           When ran, it receives the exact name (string) of the called <br>
//!           function, and the SessionPilot which brings other infos <br>
//! <br>
//!           Add it by <br>
//!             IFSelect_Act::AddFunc (name,help,myfunc); <br>
//!               for a normal function, or <br>
//!             IFSelect_Act::AddFSet (name,help,myfunc); <br>
//!               for a function which is intended to create a control item <br>
//!           name and help are given as CString <br>
//! <br>
//!           Then, it is available for run <br>
public ref class OCIFSelect_Act : OCIFSelect_Activator {

protected:
  // dummy constructor;
  OCIFSelect_Act(OCDummy^) : OCIFSelect_Activator((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_Act(Handle(IFSelect_Act)* nativeHandle);

// Methods PUBLIC

//! Creates an Act with a name, help and a function <br>
//!           mode (Add or AddSet) is given when recording <br>
OCIFSelect_Act(System::String^ name, System::String^ help, IFSelect_ActFunc func);

//! Execution of Command Line. remark that <number> is senseless <br>
//!           because each Act brings one and only one function <br>
 /*instead*/  OCIFSelect_ReturnStatus Do(Standard_Integer number, OCNaroWrappers::OCIFSelect_SessionPilot^ pilot) ;

//! Short Help for commands : returns the help given to create <br>
 /*instead*/  System::String^ Help(Standard_Integer number) ;

//! Changes the default group name for the following Acts <br>
//!           group empty means to come back to default from Activator <br>
//!           Also a file name can be precised (to query by getsource) <br>
static /*instead*/  void SetGroup(System::String^ group, System::String^ file) ;

//! Adds a function with its name and help : creates an Act then <br>
//!           records it as normal function <br>
static /*instead*/  void AddFunc(System::String^ name, System::String^ help, IFSelect_ActFunc func) ;

//! Adds a function with its name and help : creates an Act then <br>
//!           records it as function for XSET (i.e. to create control item) <br>
static /*instead*/  void AddFSet(System::String^ name, System::String^ help, IFSelect_ActFunc func) ;

~OCIFSelect_Act()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
