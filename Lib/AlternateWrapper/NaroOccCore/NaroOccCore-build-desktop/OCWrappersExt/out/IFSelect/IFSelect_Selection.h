// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_Selection_OCWrappers_HeaderFile
#define _IFSelect_Selection_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_Selection.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCInterface_EntityIterator;
ref class OCInterface_Graph;
ref class OCIFSelect_SelectionIterator;
ref class OCTCollection_AsciiString;


//! A Selection allows to define a set of Interface Entities. <br>
//!           Entities to be put on an output file should be identified in <br>
//!           a way as independant from such or such execution as possible. <br>
//!           This permits to handle comprehensive criteria, and to replay <br>
//!           them when a new variant of an input file has to be processed. <br>
//! <br>
//!           Its input can be, either an Interface Model (the very source), <br>
//!           or another-other Selection(s) or any other ouput. All list <br>
//!           computations start from an input Graph (from IFGraph) <br>
public ref class OCIFSelect_Selection : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCIFSelect_Selection(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_Selection(Handle(IFSelect_Selection)* nativeHandle);

// Methods PUBLIC

//! Returns the list of selected entities, each of them beeing <br>
//!           unique. Default definition works from RootResult. According <br>
//!           HasUniqueResult, UniqueResult returns directly RootResult, <br>
//!           or build a Unique Result from it with a Graph. <br>
 /*instead*/  OCInterface_EntityIterator^ UniqueResult(OCNaroWrappers::OCInterface_Graph^ G) ;

//! Returns the list of entities involved by a Selection, i.e. <br>
//!           UniqueResult plus the shared entities (directly or not) <br>
virtual /*instead*/  OCInterface_EntityIterator^ CompleteResult(OCNaroWrappers::OCInterface_Graph^ G) ;

~OCIFSelect_Selection()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
