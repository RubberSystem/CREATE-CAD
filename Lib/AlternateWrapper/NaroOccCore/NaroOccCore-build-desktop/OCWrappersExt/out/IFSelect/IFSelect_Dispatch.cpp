// File generated by CPPExt (CPP file)
//

#include "IFSelect_Dispatch.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "IFSelect_Selection.h"
#include "IFSelect_SelectionIterator.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../Interface/Interface_EntityIterator.h"
#include "../Interface/Interface_Graph.h"


using namespace OCNaroWrappers;

OCIFSelect_Dispatch::OCIFSelect_Dispatch(Handle(IFSelect_Dispatch)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_Dispatch(*nativeHandle);
}

 void OCIFSelect_Dispatch::SetRootName(OCNaroWrappers::OCTCollection_HAsciiString^ name)
{
  (*((Handle_IFSelect_Dispatch*)nativeHandle))->SetRootName(*((Handle_TCollection_HAsciiString*)name->Handle));
}

 System::Boolean OCIFSelect_Dispatch::HasRootName()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_Dispatch*)nativeHandle))->HasRootName());
}

OCTCollection_HAsciiString^ OCIFSelect_Dispatch::RootName()
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_IFSelect_Dispatch*)nativeHandle))->RootName();
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCIFSelect_Dispatch::SetFinalSelection(OCNaroWrappers::OCIFSelect_Selection^ sel)
{
  (*((Handle_IFSelect_Dispatch*)nativeHandle))->SetFinalSelection(*((Handle_IFSelect_Selection*)sel->Handle));
}

OCIFSelect_Selection^ OCIFSelect_Dispatch::FinalSelection()
{
  Handle(IFSelect_Selection) tmp = (*((Handle_IFSelect_Dispatch*)nativeHandle))->FinalSelection();
  return gcnew OCIFSelect_Selection(&tmp);
}

OCIFSelect_SelectionIterator^ OCIFSelect_Dispatch::Selections()
{
  IFSelect_SelectionIterator* tmp = new IFSelect_SelectionIterator();
  *tmp = (*((Handle_IFSelect_Dispatch*)nativeHandle))->Selections();
  return gcnew OCIFSelect_SelectionIterator(tmp);
}

 System::Boolean OCIFSelect_Dispatch::CanHaveRemainder()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_Dispatch*)nativeHandle))->CanHaveRemainder());
}

 System::Boolean OCIFSelect_Dispatch::LimitedMax(Standard_Integer nbent, Standard_Integer& max)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_Dispatch*)nativeHandle))->LimitedMax(nbent, max));
}

OCInterface_EntityIterator^ OCIFSelect_Dispatch::GetEntities(OCNaroWrappers::OCInterface_Graph^ G)
{
  Interface_EntityIterator* tmp = new Interface_EntityIterator();
  *tmp = (*((Handle_IFSelect_Dispatch*)nativeHandle))->GetEntities(*((Interface_Graph*)G->Handle));
  return gcnew OCInterface_EntityIterator(tmp);
}

 System::Boolean OCIFSelect_Dispatch::PacketsCount(OCNaroWrappers::OCInterface_Graph^ G, Standard_Integer& count)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_Dispatch*)nativeHandle))->PacketsCount(*((Interface_Graph*)G->Handle), count));
}

OCInterface_EntityIterator^ OCIFSelect_Dispatch::Packeted(OCNaroWrappers::OCInterface_Graph^ G)
{
  Interface_EntityIterator* tmp = new Interface_EntityIterator();
  *tmp = (*((Handle_IFSelect_Dispatch*)nativeHandle))->Packeted(*((Interface_Graph*)G->Handle));
  return gcnew OCInterface_EntityIterator(tmp);
}

OCInterface_EntityIterator^ OCIFSelect_Dispatch::Remainder(OCNaroWrappers::OCInterface_Graph^ G)
{
  Interface_EntityIterator* tmp = new Interface_EntityIterator();
  *tmp = (*((Handle_IFSelect_Dispatch*)nativeHandle))->Remainder(*((Interface_Graph*)G->Handle));
  return gcnew OCInterface_EntityIterator(tmp);
}


