// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_Transformer_OCWrappers_HeaderFile
#define _IFSelect_Transformer_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_Transformer.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCInterface_Graph;
ref class OCInterface_Protocol;
ref class OCInterface_CheckIterator;
ref class OCInterface_InterfaceModel;
ref class OCStandard_Transient;
ref class OCTCollection_AsciiString;


//! A Transformer defines the way an InterfaceModel is transformed <br>
//!           (without sending it to a file). <br>
//!           In order to work, each type of Transformer defines it method <br>
//!           Perform, it can be parametred as needed. <br>
//! <br>
//!           It receives a Model (the data set) as input. It then can : <br>
//!           - edit this Model on the spot (i.e. alter its content : by <br>
//!             editing entities, or adding/replacing some ...) <br>
//!           - produce a copied Model, which detains the needed changes <br>
//!             (typically on the same type, but some or all entities beeing <br>
//!              rebuilt or converted; or converted from a protocol to <br>
//!              another one) <br>
public ref class OCIFSelect_Transformer : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCIFSelect_Transformer(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_Transformer(Handle(IFSelect_Transformer)* nativeHandle);

// Methods PUBLIC

//! This methods allows to declare that the Protocol applied to <br>
//!           the new Model has changed. It applies to the last call to <br>
//!           Perform. <br>
//! <br>
//!           Returns True if the Protocol has changed, False else. <br>
//!           The provided default keeps the starting Protocol. This method <br>
//!           should be redefined as required by the effect of Perform. <br>
virtual /*instead*/  System::Boolean ChangeProtocol(OCNaroWrappers::OCInterface_Protocol^ newproto) ;

~OCIFSelect_Transformer()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
