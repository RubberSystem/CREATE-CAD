// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_Dispatch_OCWrappers_HeaderFile
#define _IFSelect_Dispatch_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_Dispatch.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCTCollection_HAsciiString;
ref class OCIFSelect_Selection;
ref class OCIFSelect_SelectionIterator;
ref class OCTCollection_AsciiString;
ref class OCInterface_EntityIterator;
ref class OCInterface_Graph;


//! This class allows to describe how a set of Entities has to be <br>
//!           dispatched into resulting Packets : a Packet is a sub-set of <br>
//!           the initial set of entities. <br>
//! <br>
//!           Thus, it can generate zero, one, or more Packets according <br>
//!           input set and criterium of dispatching. And it can let apart <br>
//!           some entities : it is the Remainder, which can be recovered <br>
//!           by a specific Selection (RemainderFromDispatch). <br>
//! <br>
//!           Depending of sub-classes, a Dispatch can potentially generate <br>
//!           a limited or not count of packet, and a remainder or none. <br>
//! <br>
//!           The input set is read from a specified Selection, attached to <br>
//!           the Dispatch : the Final Selection of the Dispatch. The input <br>
//!           is the Unique Root Entities list of the Final Selection <br>
public ref class OCIFSelect_Dispatch : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCIFSelect_Dispatch(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_Dispatch(Handle(IFSelect_Dispatch)* nativeHandle);

// Methods PUBLIC

//! Sets a Root Name as an HAsciiString <br>
//!           To reset it, give a Null Handle (then, a ShareOut will have <br>
//!           to define the Default Root Name) <br>
 /*instead*/  void SetRootName(OCNaroWrappers::OCTCollection_HAsciiString^ name) ;

//! Returns True if a specific Root Name has been set <br>
//!           (else, the Default Root Name has to be used) <br>
 /*instead*/  System::Boolean HasRootName() ;

//! Returns the Root Name for files produced by this dispatch <br>
//!           It is empty if it has not been set or if it has been reset <br>
 /*instead*/  OCTCollection_HAsciiString^ RootName() ;

//! Stores (or Changes) the Final Selection for a Dispatch <br>
 /*instead*/  void SetFinalSelection(OCNaroWrappers::OCIFSelect_Selection^ sel) ;

//! Returns the Final Selection of a Dispatch <br>
//! we 'd like : C++ : return const & <br>
 /*instead*/  OCIFSelect_Selection^ FinalSelection() ;

//! Returns the complete list of source Selections (starting <br>
//!           from FinalSelection) <br>
 /*instead*/  OCIFSelect_SelectionIterator^ Selections() ;

//! Returns True if a Dispatch can have a Remainder, i.e. if its <br>
//!           criterium can let entities apart. It is a potential answer, <br>
//!           remainder can be empty at run-time even if answer is True. <br>
//!           (to attach a RemainderFromDispatch Selection is not allowed if <br>
//!           answer is True). <br>
//!           Default answer given here is False (can be redefined) <br>
virtual /*instead*/  System::Boolean CanHaveRemainder() ;

//! Returns True if a Dispatch generates a count of Packets always <br>
//!           less than or equal to a maximum value : it can be computed <br>
//!           from the total count of Entities to be dispatched : <nbent>. <br>
//!           If answer is False, no limited maximum is expected for account <br>
//!           If answer is True, expected maximum is given in argument <max> <br>
//!           Default answer given here is False (can be redefined) <br>
virtual /*instead*/  System::Boolean LimitedMax(Standard_Integer nbent, Standard_Integer& max) ;

//! Gets Unique Root Entities from the Final Selection, given an <br>
//!           input Graph <br>
//!           This the starting step for an Evaluation (Packets - Remainder) <br>
 /*instead*/  OCInterface_EntityIterator^ GetEntities(OCNaroWrappers::OCInterface_Graph^ G) ;

//! Returns True if Count of Packets is actually known, and the <br>
//!           value of the count in argument "count". Returns False if <br>
//!           this count is unknown. Input is given as a Graph. <br>
//!           This method is intended to be quick (used for file names) <br>
//!           hence if this count is long to compute (that is, as a result <br>
//!           of complete evaluation made by method Packets), it is <br>
//!           preferable to answer "unknown" by returning False <br>
//!           Default answer if False. Can be redefined. <br>
virtual /*instead*/  System::Boolean PacketsCount(OCNaroWrappers::OCInterface_Graph^ G, Standard_Integer& count) ;

//! Returns the list of all Input Entities (see GetEntities) which <br>
//!           are put in a Packet. That is, Entities listed in GetEntities <br>
//!           but not in Remainder (see below). Input is given as a Graph. <br>
 /*instead*/  OCInterface_EntityIterator^ Packeted(OCNaroWrappers::OCInterface_Graph^ G) ;

//! Returns Remainder which is a set of Entities. Can be empty. <br>
//!           Default evaluation is empty (has to be redefined if <br>
//!           CanHaveRemainder is redefined to return True). <br>
virtual /*instead*/  OCInterface_EntityIterator^ Remainder(OCNaroWrappers::OCInterface_Graph^ G) ;

~OCIFSelect_Dispatch()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
