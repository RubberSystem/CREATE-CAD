// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_Signature_OCWrappers_HeaderFile
#define _IFSelect_Signature_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_Signature.hxx>
#include "../Converter.h"

#include "../Interface/Interface_SignType.h"

#include "../TCollection/TCollection_AsciiString.h"


namespace OCNaroWrappers
{

ref class OCTColStd_HSequenceOfAsciiString;
ref class OCTCollection_AsciiString;
ref class OCStandard_Transient;
ref class OCInterface_InterfaceModel;


//! Signature provides the basic service used by the classes <br>
//!             SelectSignature and Counter (i.e. Name, Value), which is : <br>
//!           - for an entity in a model, give a characteristic string, its <br>
//!             signature <br>
//!           This string has not to be unique in the model, but gives a <br>
//!           value for such or such important feature. <br>
//!           Exemples : Dynamic Type; Category; etc <br>
public ref class OCIFSelect_Signature : OCInterface_SignType {

protected:
  // dummy constructor;
  OCIFSelect_Signature(OCDummy^) : OCInterface_SignType((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_Signature(Handle(IFSelect_Signature)* nativeHandle);

// Methods PUBLIC

//! Initializes a Signature with its name <br>
OCIFSelect_Signature(System::String^ name);

//! Sets the information data to tell "integer cases" with <br>
//!           possible min and max values <br>
//!           To be called when creating <br>
 /*instead*/  void SetIntCase(System::Boolean hasmin, Standard_Integer valmin, System::Boolean hasmax, Standard_Integer valmax) ;

//! Tells if this Signature gives integer values <br>
//!           and returns values from SetIntCase if True <br>
 /*instead*/  System::Boolean IsIntCase(System::Boolean& hasmin, Standard_Integer& valmin, System::Boolean& hasmax, Standard_Integer& valmax) ;

//! Adds a possible case <br>
//!           To be called when creating, IF the list of possible cases for <br>
//!           Value is known when starting <br>
//!           For instance, for CDL types, rather do not fill this, <br>
//!           but for a specific enumeration (such as a status), can be used <br>
 /*instead*/  void AddCase(System::String^ acase) ;

//! Returns the predefined list of possible cases, filled by AddCase <br>
//!           Null Handle if no predefined list (hence, to be counted) <br>
//!           Useful to filter on  really possible vase, for instance, or <br>
//!           for a help <br>
 /*instead*/  OCTColStd_HSequenceOfAsciiString^ CaseList() ;

//! Returns an identification of the Signature (a word), given at <br>
//!           initialization time <br>//! Returns the Signature for a Transient object. It is specific <br>
//!           of each sub-class of Signature. For a Null Handle, it should <br>
//!           provide "" <br>
//!           It can work with the model which contains the entity <br>
 /*instead*/  System::String^ Name() ;

//! The label of a Signature uses its name as follow : <br>
//!           "Signature : <name>" <br>
 /*instead*/  OCTCollection_AsciiString^ Label() ;

//! Tells if the value for <ent> in <model> matches a text, with <br>
//!           a criterium <exact>. <br>
//!           The default definition calls MatchValue <br>
//!           Can be redefined <br>
virtual /*instead*/  System::Boolean Matches(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model, OCNaroWrappers::OCTCollection_AsciiString^ text, System::Boolean exact) ;

//! Default procedure to tell if a value <val> matches a text <br>
//!           with a criterium <exact>. <exact> = True requires equality, <br>
//!           else only contained (no reg-exp) <br>
static /*instead*/  System::Boolean MatchValue(System::String^ val, OCNaroWrappers::OCTCollection_AsciiString^ text, System::Boolean exact) ;

//! This procedure converts an Integer to a CString <br>
//!           It is a convenient way when the value of a signature has the <br>
//!           form of a simple integer value <br>
//!           The value is to be used immediately (one buffer only, no copy) <br>
static /*instead*/  System::String^ IntValue(Standard_Integer val) ;

~OCIFSelect_Signature()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
