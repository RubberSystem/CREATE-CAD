// File generated by CPPExt (CPP file)
//

#include "IFSelect_TransformStandard.h"
#include "../Converter.h"
#include "IFSelect_Selection.h"
#include "../Interface/Interface_CopyControl.h"
#include "IFSelect_Modifier.h"
#include "../Interface/Interface_Graph.h"
#include "../Interface/Interface_Protocol.h"
#include "../Interface/Interface_CheckIterator.h"
#include "../Interface/Interface_InterfaceModel.h"
#include "../Interface/Interface_CopyTool.h"
#include "../Standard/Standard_Transient.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCIFSelect_TransformStandard::OCIFSelect_TransformStandard(Handle(IFSelect_TransformStandard)* nativeHandle) : OCIFSelect_Transformer((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_TransformStandard(*nativeHandle);
}

OCIFSelect_TransformStandard::OCIFSelect_TransformStandard() : OCIFSelect_Transformer((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IFSelect_TransformStandard(new IFSelect_TransformStandard());
}

 void OCIFSelect_TransformStandard::SetCopyOption(System::Boolean option)
{
  (*((Handle_IFSelect_TransformStandard*)nativeHandle))->SetCopyOption(OCConverter::BooleanToStandardBoolean(option));
}

 System::Boolean OCIFSelect_TransformStandard::CopyOption()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_TransformStandard*)nativeHandle))->CopyOption());
}

 void OCIFSelect_TransformStandard::SetSelection(OCNaroWrappers::OCIFSelect_Selection^ sel)
{
  (*((Handle_IFSelect_TransformStandard*)nativeHandle))->SetSelection(*((Handle_IFSelect_Selection*)sel->Handle));
}

OCIFSelect_Selection^ OCIFSelect_TransformStandard::Selection()
{
  Handle(IFSelect_Selection) tmp = (*((Handle_IFSelect_TransformStandard*)nativeHandle))->Selection();
  return gcnew OCIFSelect_Selection(&tmp);
}

 Standard_Integer OCIFSelect_TransformStandard::NbModifiers()
{
  return (*((Handle_IFSelect_TransformStandard*)nativeHandle))->NbModifiers();
}

OCIFSelect_Modifier^ OCIFSelect_TransformStandard::Modifier(Standard_Integer num)
{
  Handle(IFSelect_Modifier) tmp = (*((Handle_IFSelect_TransformStandard*)nativeHandle))->Modifier(num);
  return gcnew OCIFSelect_Modifier(&tmp);
}

 Standard_Integer OCIFSelect_TransformStandard::ModifierRank(OCNaroWrappers::OCIFSelect_Modifier^ modif)
{
  return (*((Handle_IFSelect_TransformStandard*)nativeHandle))->ModifierRank(*((Handle_IFSelect_Modifier*)modif->Handle));
}

 System::Boolean OCIFSelect_TransformStandard::AddModifier(OCNaroWrappers::OCIFSelect_Modifier^ modif, Standard_Integer atnum)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_TransformStandard*)nativeHandle))->AddModifier(*((Handle_IFSelect_Modifier*)modif->Handle), atnum));
}

 System::Boolean OCIFSelect_TransformStandard::RemoveModifier(OCNaroWrappers::OCIFSelect_Modifier^ modif)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_TransformStandard*)nativeHandle))->RemoveModifier(*((Handle_IFSelect_Modifier*)modif->Handle)));
}

 System::Boolean OCIFSelect_TransformStandard::RemoveModifier(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_TransformStandard*)nativeHandle))->RemoveModifier(num));
}

 System::Boolean OCIFSelect_TransformStandard::Perform(OCNaroWrappers::OCInterface_Graph^ G, OCNaroWrappers::OCInterface_Protocol^ protocol, OCNaroWrappers::OCInterface_CheckIterator^ checks, OCNaroWrappers::OCInterface_InterfaceModel^ newmod)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_TransformStandard*)nativeHandle))->Perform(*((Interface_Graph*)G->Handle), *((Handle_Interface_Protocol*)protocol->Handle), *((Interface_CheckIterator*)checks->Handle), *((Handle_Interface_InterfaceModel*)newmod->Handle)));
}

 void OCIFSelect_TransformStandard::Copy(OCNaroWrappers::OCInterface_Graph^ G, OCNaroWrappers::OCInterface_CopyTool^ TC, OCNaroWrappers::OCInterface_InterfaceModel^ newmod)
{
  (*((Handle_IFSelect_TransformStandard*)nativeHandle))->Copy(*((Interface_Graph*)G->Handle), *((Interface_CopyTool*)TC->Handle), *((Handle_Interface_InterfaceModel*)newmod->Handle));
}

 void OCIFSelect_TransformStandard::StandardCopy(OCNaroWrappers::OCInterface_Graph^ G, OCNaroWrappers::OCInterface_CopyTool^ TC, OCNaroWrappers::OCInterface_InterfaceModel^ newmod)
{
  (*((Handle_IFSelect_TransformStandard*)nativeHandle))->StandardCopy(*((Interface_Graph*)G->Handle), *((Interface_CopyTool*)TC->Handle), *((Handle_Interface_InterfaceModel*)newmod->Handle));
}

 void OCIFSelect_TransformStandard::OnTheSpot(OCNaroWrappers::OCInterface_Graph^ G, OCNaroWrappers::OCInterface_CopyTool^ TC, OCNaroWrappers::OCInterface_InterfaceModel^ newmod)
{
  (*((Handle_IFSelect_TransformStandard*)nativeHandle))->OnTheSpot(*((Interface_Graph*)G->Handle), *((Interface_CopyTool*)TC->Handle), *((Handle_Interface_InterfaceModel*)newmod->Handle));
}

 System::Boolean OCIFSelect_TransformStandard::ApplyModifiers(OCNaroWrappers::OCInterface_Graph^ G, OCNaroWrappers::OCInterface_Protocol^ protocol, OCNaroWrappers::OCInterface_CopyTool^ TC, OCNaroWrappers::OCInterface_CheckIterator^ checks, OCNaroWrappers::OCInterface_InterfaceModel^ newmod)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_TransformStandard*)nativeHandle))->ApplyModifiers(*((Interface_Graph*)G->Handle), *((Handle_Interface_Protocol*)protocol->Handle), *((Interface_CopyTool*)TC->Handle), *((Interface_CheckIterator*)checks->Handle), *((Handle_Interface_InterfaceModel*)newmod->Handle)));
}

 System::Boolean OCIFSelect_TransformStandard::Updated(OCNaroWrappers::OCStandard_Transient^ entfrom, OCNaroWrappers::OCStandard_Transient^ entto)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_TransformStandard*)nativeHandle))->Updated(*((Handle_Standard_Transient*)entfrom->Handle), *((Handle_Standard_Transient*)entto->Handle)));
}

OCTCollection_AsciiString^ OCIFSelect_TransformStandard::Label()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_IFSelect_TransformStandard*)nativeHandle))->Label();
  return gcnew OCTCollection_AsciiString(tmp);
}


