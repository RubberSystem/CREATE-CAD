// File generated by CPPExt (CPP file)
//

#include "IFSelect_Signature.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HSequenceOfAsciiString.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../Standard/Standard_Transient.h"
#include "../Interface/Interface_InterfaceModel.h"


using namespace OCNaroWrappers;

OCIFSelect_Signature::OCIFSelect_Signature(Handle(IFSelect_Signature)* nativeHandle) : OCInterface_SignType((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_Signature(*nativeHandle);
}

OCIFSelect_Signature::OCIFSelect_Signature(System::String^ name) : OCInterface_SignType((OCDummy^)nullptr)

{}

 void OCIFSelect_Signature::SetIntCase(System::Boolean hasmin, Standard_Integer valmin, System::Boolean hasmax, Standard_Integer valmax)
{
  (*((Handle_IFSelect_Signature*)nativeHandle))->SetIntCase(OCConverter::BooleanToStandardBoolean(hasmin), valmin, OCConverter::BooleanToStandardBoolean(hasmax), valmax);
}

 System::Boolean OCIFSelect_Signature::IsIntCase(System::Boolean& hasmin, Standard_Integer& valmin, System::Boolean& hasmax, Standard_Integer& valmax)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_Signature*)nativeHandle))->IsIntCase((Standard_Boolean&)(hasmin), valmin, (Standard_Boolean&)(hasmax), valmax));
}

 void OCIFSelect_Signature::AddCase(System::String^ acase)
{
  (*((Handle_IFSelect_Signature*)nativeHandle))->AddCase(OCConverter::StringToStandardCString(acase));
}

OCTColStd_HSequenceOfAsciiString^ OCIFSelect_Signature::CaseList()
{
  Handle(TColStd_HSequenceOfAsciiString) tmp = (*((Handle_IFSelect_Signature*)nativeHandle))->CaseList();
  return gcnew OCTColStd_HSequenceOfAsciiString(&tmp);
}

 System::String^ OCIFSelect_Signature::Name()
{
  return OCConverter::StandardCStringToString((*((Handle_IFSelect_Signature*)nativeHandle))->Name());
}

OCTCollection_AsciiString^ OCIFSelect_Signature::Label()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_IFSelect_Signature*)nativeHandle))->Label();
  return gcnew OCTCollection_AsciiString(tmp);
}

 System::Boolean OCIFSelect_Signature::Matches(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model, OCNaroWrappers::OCTCollection_AsciiString^ text, System::Boolean exact)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_Signature*)nativeHandle))->Matches(*((Handle_Standard_Transient*)ent->Handle), *((Handle_Interface_InterfaceModel*)model->Handle), *((TCollection_AsciiString*)text->Handle), OCConverter::BooleanToStandardBoolean(exact)));
}

 System::Boolean OCIFSelect_Signature::MatchValue(System::String^ val, OCNaroWrappers::OCTCollection_AsciiString^ text, System::Boolean exact)
{
  return OCConverter::StandardBooleanToBoolean(IFSelect_Signature::MatchValue(OCConverter::StringToStandardCString(val), *((TCollection_AsciiString*)text->Handle), OCConverter::BooleanToStandardBoolean(exact)));
}

 System::String^ OCIFSelect_Signature::IntValue(Standard_Integer val)
{
  return OCConverter::StandardCStringToString(IFSelect_Signature::IntValue(val));
}


