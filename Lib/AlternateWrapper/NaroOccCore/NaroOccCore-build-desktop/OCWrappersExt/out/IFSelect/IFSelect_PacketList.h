// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_PacketList_OCWrappers_HeaderFile
#define _IFSelect_PacketList_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_PacketList.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../TColStd/TColStd_Array1OfInteger.h"
#include "../Interface/Interface_IntList.h"
#include "../TCollection/TCollection_AsciiString.h"


namespace OCNaroWrappers
{

ref class OCInterface_InterfaceModel;
ref class OCStandard_Transient;
ref class OCTColStd_HSequenceOfTransient;
ref class OCInterface_EntityIterator;


//! This class gives a simple way to return then consult a <br>
//!           list of packets, determined from the content of a Model, <br>
//!           by various criteria. <br>
//! <br>
//!           It allows to describe several lists with entities from a <br>
//!           given model, possibly more than one list knowing every entity, <br>
//!           and to determine the remaining list (entities in no lists) and <br>
//!           the duplications (with their count). <br>
public ref class OCIFSelect_PacketList : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCIFSelect_PacketList(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_PacketList(Handle(IFSelect_PacketList)* nativeHandle);

// Methods PUBLIC

//! Creates a PackList, empty, ready to receive entities from a <br>
//!           given Model <br>
OCIFSelect_PacketList(OCNaroWrappers::OCInterface_InterfaceModel^ model);

//! Sets a name to a packet list : this makes easier a general <br>
//!           routine to print it. Default is "Packets" <br>
 /*instead*/  void SetName(System::String^ name) ;

//! Returns the recorded name for a packet list <br>
 /*instead*/  System::String^ Name() ;

//! Returns the Model of reference <br>
 /*instead*/  OCInterface_InterfaceModel^ Model() ;

//! Declares a new Packet, ready to be filled <br>
//!           The entities to be added will be added to this Packet <br>
 /*instead*/  void AddPacket() ;

//! Adds an entity from the Model into the current packet for Add <br>
 /*instead*/  void Add(OCNaroWrappers::OCStandard_Transient^ ent) ;

//! Adds an list of entities into the current packet for Add <br>
 /*instead*/  void AddList(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list) ;

//! Returns the count of non-empty packets <br>
 /*instead*/  Standard_Integer NbPackets() ;

//! Returns the count of entities in a Packet given its rank, or 0 <br>
 /*instead*/  Standard_Integer NbEntities(Standard_Integer numpack) ;

//! Returns the content of a Packet given its rank <br>
//!           Null Handle if <numpack> is out of range <br>
 /*instead*/  OCInterface_EntityIterator^ Entities(Standard_Integer numpack) ;

//! Returns the highest number of packets which know a same entity <br>
//!           For no duplication, should be one <br>
 /*instead*/  Standard_Integer HighestDuplicationCount() ;

//! Returns the count of entities duplicated : <br>
//!           <count> times, if <andmore> is False, or <br>
//!           <count> or more times, if <andmore> is True <br>
//!           See Duplicated for more details <br>
 /*instead*/  Standard_Integer NbDuplicated(Standard_Integer count, System::Boolean andmore) ;

//! Returns a list of entities duplicated : <br>
//!           <count> times, if <andmore> is False, or <br>
//!           <count> or more times, if <andmore> is True <br>
//!           Hence, count=2 & andmore=True gives all duplicated entities <br>
//!           count=1 gives non-duplicated entities (in only one packet) <br>
//!           count=0 gives remaining entities (in no packet at all) <br>
 /*instead*/  OCInterface_EntityIterator^ Duplicated(Standard_Integer count, System::Boolean andmore) ;

~OCIFSelect_PacketList()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
