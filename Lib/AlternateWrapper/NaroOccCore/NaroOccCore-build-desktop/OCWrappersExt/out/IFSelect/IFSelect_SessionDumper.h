// File generated by CPPExt (Transient)
//
#ifndef _IFSelect_SessionDumper_OCWrappers_HeaderFile
#define _IFSelect_SessionDumper_OCWrappers_HeaderFile

// include the wrapped class
#include <IFSelect_SessionDumper.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCIFSelect_SessionFile;
ref class OCStandard_Transient;
ref class OCTCollection_AsciiString;


//! A SessionDumper is called by SessionFile. It takes into <br>
//!           account a set of classes (such as Selections, Dispatches ...). <br>
//!           SessionFile writes the Type (as defined by cdl) of each Item <br>
//!           and its general Parameters. It manages the names of the Items. <br>
//! <br>
//!           A SessionDumper must be able to Write the Parameters which are <br>
//!           own of each Item it takes into account, given its Class, then <br>
//!           to Recognize the Type and Read its Own Parameters to create <br>
//!           an Item of this Type with these own Parameters. <br>
//! <br>
//!           Then, there must be defined one sub-type of SessionDumper per <br>
//!           consistent set of classes (e.g. a package). <br>
//! <br>
//!           By Own Parameters, understand Parameters given at Creation Time <br>
//!           if there are, or specific of a given class, apart from those <br>
//!           defined at superclass levels (e.g. Final Selection for a <br>
//!           Dispatch, Input Selection for a SelectExtract or SelectDeduct, <br>
//!           Direct Status for a SelectExtract, etc...). <br>
//! <br>
//!           The Parameters are those stored in a WorkSession, they can be <br>
//!           of Types : IntParam, HAsciiString (for TextParam), Selection, <br>
//!           Dispatch. <br>
//! <br>
//!           SessionDumpers are organized in a Library which is used by <br>
//!           SessionFile. They are put at Creation Time in this Library. <br>
public ref class OCIFSelect_SessionDumper : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCIFSelect_SessionDumper(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCIFSelect_SessionDumper(Handle(IFSelect_SessionDumper)* nativeHandle);

// Methods PUBLIC

//! The Initialization puts a just created SessionDumper in the <br>
//!           Library of SessionDumper. Then, it suffices to create once <br>
//!           a SessionDumper to fill the Library with it <br>
OCIFSelect_SessionDumper();

//! Returns the First item of the Library of Dumper. The Next ones <br>
//!           are then obtained by Next on the returned items <br>
static /*instead*/  OCIFSelect_SessionDumper^ First() ;

//! Returns the Next SesionDumper in the Library. Returns a Null <br>
//!           Handle at the End. <br>
 /*instead*/  OCIFSelect_SessionDumper^ Next() ;

~OCIFSelect_SessionDumper()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
