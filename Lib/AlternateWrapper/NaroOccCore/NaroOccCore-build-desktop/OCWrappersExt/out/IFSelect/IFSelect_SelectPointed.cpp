// File generated by CPPExt (CPP file)
//

#include "IFSelect_SelectPointed.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "../TColStd/TColStd_HSequenceOfTransient.h"
#include "../Interface/Interface_CopyControl.h"
#include "IFSelect_Transformer.h"
#include "../Interface/Interface_EntityIterator.h"
#include "../Interface/Interface_Graph.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCIFSelect_SelectPointed::OCIFSelect_SelectPointed(Handle(IFSelect_SelectPointed)* nativeHandle) : OCIFSelect_SelectBase((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_SelectPointed(*nativeHandle);
}

OCIFSelect_SelectPointed::OCIFSelect_SelectPointed() : OCIFSelect_SelectBase((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IFSelect_SelectPointed(new IFSelect_SelectPointed());
}

 void OCIFSelect_SelectPointed::Clear()
{
  (*((Handle_IFSelect_SelectPointed*)nativeHandle))->Clear();
}

 System::Boolean OCIFSelect_SelectPointed::IsSet()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectPointed*)nativeHandle))->IsSet());
}

 void OCIFSelect_SelectPointed::SetEntity(OCNaroWrappers::OCStandard_Transient^ item)
{
  (*((Handle_IFSelect_SelectPointed*)nativeHandle))->SetEntity(*((Handle_Standard_Transient*)item->Handle));
}

 void OCIFSelect_SelectPointed::SetList(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list)
{
  (*((Handle_IFSelect_SelectPointed*)nativeHandle))->SetList(*((Handle_TColStd_HSequenceOfTransient*)list->Handle));
}

 System::Boolean OCIFSelect_SelectPointed::Add(OCNaroWrappers::OCStandard_Transient^ item)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectPointed*)nativeHandle))->Add(*((Handle_Standard_Transient*)item->Handle)));
}

 System::Boolean OCIFSelect_SelectPointed::Remove(OCNaroWrappers::OCStandard_Transient^ item)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectPointed*)nativeHandle))->Remove(*((Handle_Standard_Transient*)item->Handle)));
}

 System::Boolean OCIFSelect_SelectPointed::Toggle(OCNaroWrappers::OCStandard_Transient^ item)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectPointed*)nativeHandle))->Toggle(*((Handle_Standard_Transient*)item->Handle)));
}

 System::Boolean OCIFSelect_SelectPointed::AddList(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectPointed*)nativeHandle))->AddList(*((Handle_TColStd_HSequenceOfTransient*)list->Handle)));
}

 System::Boolean OCIFSelect_SelectPointed::RemoveList(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectPointed*)nativeHandle))->RemoveList(*((Handle_TColStd_HSequenceOfTransient*)list->Handle)));
}

 System::Boolean OCIFSelect_SelectPointed::ToggleList(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ list)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_SelectPointed*)nativeHandle))->ToggleList(*((Handle_TColStd_HSequenceOfTransient*)list->Handle)));
}

 Standard_Integer OCIFSelect_SelectPointed::Rank(OCNaroWrappers::OCStandard_Transient^ item)
{
  return (*((Handle_IFSelect_SelectPointed*)nativeHandle))->Rank(*((Handle_Standard_Transient*)item->Handle));
}

 Standard_Integer OCIFSelect_SelectPointed::NbItems()
{
  return (*((Handle_IFSelect_SelectPointed*)nativeHandle))->NbItems();
}

OCStandard_Transient^ OCIFSelect_SelectPointed::Item(Standard_Integer num)
{
  Handle(Standard_Transient) tmp = (*((Handle_IFSelect_SelectPointed*)nativeHandle))->Item(num);
  return gcnew OCStandard_Transient(&tmp);
}

 void OCIFSelect_SelectPointed::Update(OCNaroWrappers::OCInterface_CopyControl^ control)
{
  (*((Handle_IFSelect_SelectPointed*)nativeHandle))->Update(*((Handle_Interface_CopyControl*)control->Handle));
}

 void OCIFSelect_SelectPointed::Update(OCNaroWrappers::OCIFSelect_Transformer^ trf)
{
  (*((Handle_IFSelect_SelectPointed*)nativeHandle))->Update(*((Handle_IFSelect_Transformer*)trf->Handle));
}

OCInterface_EntityIterator^ OCIFSelect_SelectPointed::RootResult(OCNaroWrappers::OCInterface_Graph^ G)
{
  Interface_EntityIterator* tmp = new Interface_EntityIterator();
  *tmp = (*((Handle_IFSelect_SelectPointed*)nativeHandle))->RootResult(*((Interface_Graph*)G->Handle));
  return gcnew OCInterface_EntityIterator(tmp);
}

OCTCollection_AsciiString^ OCIFSelect_SelectPointed::Label()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_IFSelect_SelectPointed*)nativeHandle))->Label();
  return gcnew OCTCollection_AsciiString(tmp);
}


