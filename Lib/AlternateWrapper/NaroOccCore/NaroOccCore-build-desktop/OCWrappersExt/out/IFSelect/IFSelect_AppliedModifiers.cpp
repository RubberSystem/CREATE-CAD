// File generated by CPPExt (CPP file)
//

#include "IFSelect_AppliedModifiers.h"
#include "../Converter.h"
#include "IFSelect_GeneralModifier.h"
#include "../TColStd/TColStd_HSequenceOfInteger.h"


using namespace OCNaroWrappers;

OCIFSelect_AppliedModifiers::OCIFSelect_AppliedModifiers(Handle(IFSelect_AppliedModifiers)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IFSelect_AppliedModifiers(*nativeHandle);
}

OCIFSelect_AppliedModifiers::OCIFSelect_AppliedModifiers(Standard_Integer nbmax, Standard_Integer nbent) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IFSelect_AppliedModifiers(new IFSelect_AppliedModifiers(nbmax, nbent));
}

 System::Boolean OCIFSelect_AppliedModifiers::AddModif(OCNaroWrappers::OCIFSelect_GeneralModifier^ modif)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_AppliedModifiers*)nativeHandle))->AddModif(*((Handle_IFSelect_GeneralModifier*)modif->Handle)));
}

 System::Boolean OCIFSelect_AppliedModifiers::AddNum(Standard_Integer nument)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_AppliedModifiers*)nativeHandle))->AddNum(nument));
}

 Standard_Integer OCIFSelect_AppliedModifiers::Count()
{
  return (*((Handle_IFSelect_AppliedModifiers*)nativeHandle))->Count();
}

 System::Boolean OCIFSelect_AppliedModifiers::Item(Standard_Integer num, OCNaroWrappers::OCIFSelect_GeneralModifier^ modif, Standard_Integer& entcount)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_AppliedModifiers*)nativeHandle))->Item(num, *((Handle_IFSelect_GeneralModifier*)modif->Handle), entcount));
}

 Standard_Integer OCIFSelect_AppliedModifiers::ItemNum(Standard_Integer nument)
{
  return (*((Handle_IFSelect_AppliedModifiers*)nativeHandle))->ItemNum(nument);
}

OCTColStd_HSequenceOfInteger^ OCIFSelect_AppliedModifiers::ItemList()
{
  Handle(TColStd_HSequenceOfInteger) tmp = (*((Handle_IFSelect_AppliedModifiers*)nativeHandle))->ItemList();
  return gcnew OCTColStd_HSequenceOfInteger(&tmp);
}

 System::Boolean OCIFSelect_AppliedModifiers::IsForAll()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_IFSelect_AppliedModifiers*)nativeHandle))->IsForAll());
}


