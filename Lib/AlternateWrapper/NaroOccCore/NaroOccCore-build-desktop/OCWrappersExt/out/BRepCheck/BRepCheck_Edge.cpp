// File generated by CPPExt (CPP file)
//

#include "BRepCheck_Edge.h"
#include "../Converter.h"
#include "../BRep/BRep_CurveRepresentation.h"
#include "../Adaptor3d/Adaptor3d_HCurve.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopoDS/TopoDS_Shape.h"


using namespace OCNaroWrappers;

OCBRepCheck_Edge::OCBRepCheck_Edge(Handle(BRepCheck_Edge)* nativeHandle) : OCBRepCheck_Result((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_BRepCheck_Edge(*nativeHandle);
}

OCBRepCheck_Edge::OCBRepCheck_Edge(OCNaroWrappers::OCTopoDS_Edge^ E) : OCBRepCheck_Result((OCDummy^)nullptr)

{
  nativeHandle = new Handle_BRepCheck_Edge(new BRepCheck_Edge(*((TopoDS_Edge*)E->Handle)));
}

 void OCBRepCheck_Edge::InContext(OCNaroWrappers::OCTopoDS_Shape^ ContextShape)
{
  (*((Handle_BRepCheck_Edge*)nativeHandle))->InContext(*((TopoDS_Shape*)ContextShape->Handle));
}

 void OCBRepCheck_Edge::Minimum()
{
  (*((Handle_BRepCheck_Edge*)nativeHandle))->Minimum();
}

 void OCBRepCheck_Edge::Blind()
{
  (*((Handle_BRepCheck_Edge*)nativeHandle))->Blind();
}

 System::Boolean OCBRepCheck_Edge::GeometricControls()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepCheck_Edge*)nativeHandle))->GeometricControls());
}

 void OCBRepCheck_Edge::GeometricControls(System::Boolean B)
{
  (*((Handle_BRepCheck_Edge*)nativeHandle))->GeometricControls(OCConverter::BooleanToStandardBoolean(B));
}

 Standard_Real OCBRepCheck_Edge::Tolerance()
{
  return (*((Handle_BRepCheck_Edge*)nativeHandle))->Tolerance();
}


