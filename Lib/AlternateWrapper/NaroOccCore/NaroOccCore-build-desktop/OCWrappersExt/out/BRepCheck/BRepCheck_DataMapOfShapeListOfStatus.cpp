// File generated by CPPExt (CPP file)
//

#include "BRepCheck_DataMapOfShapeListOfStatus.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "BRepCheck_ListOfStatus.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "BRepCheck_DataMapNodeOfDataMapOfShapeListOfStatus.h"
#include "BRepCheck_DataMapIteratorOfDataMapOfShapeListOfStatus.h"


using namespace OCNaroWrappers;

OCBRepCheck_DataMapOfShapeListOfStatus::OCBRepCheck_DataMapOfShapeListOfStatus(BRepCheck_DataMapOfShapeListOfStatus* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepCheck_DataMapOfShapeListOfStatus::OCBRepCheck_DataMapOfShapeListOfStatus(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BRepCheck_DataMapOfShapeListOfStatus(NbBuckets);
}

OCBRepCheck_DataMapOfShapeListOfStatus^ OCBRepCheck_DataMapOfShapeListOfStatus::Assign(OCNaroWrappers::OCBRepCheck_DataMapOfShapeListOfStatus^ Other)
{
  BRepCheck_DataMapOfShapeListOfStatus* tmp = new BRepCheck_DataMapOfShapeListOfStatus(0);
  *tmp = ((BRepCheck_DataMapOfShapeListOfStatus*)nativeHandle)->Assign(*((BRepCheck_DataMapOfShapeListOfStatus*)Other->Handle));
  return gcnew OCBRepCheck_DataMapOfShapeListOfStatus(tmp);
}

 void OCBRepCheck_DataMapOfShapeListOfStatus::ReSize(Standard_Integer NbBuckets)
{
  ((BRepCheck_DataMapOfShapeListOfStatus*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCBRepCheck_DataMapOfShapeListOfStatus::Bind(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCBRepCheck_ListOfStatus^ I)
{
  return OCConverter::StandardBooleanToBoolean(((BRepCheck_DataMapOfShapeListOfStatus*)nativeHandle)->Bind(*((TopoDS_Shape*)K->Handle), *((BRepCheck_ListOfStatus*)I->Handle)));
}

 System::Boolean OCBRepCheck_DataMapOfShapeListOfStatus::IsBound(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepCheck_DataMapOfShapeListOfStatus*)nativeHandle)->IsBound(*((TopoDS_Shape*)K->Handle)));
}

 System::Boolean OCBRepCheck_DataMapOfShapeListOfStatus::UnBind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepCheck_DataMapOfShapeListOfStatus*)nativeHandle)->UnBind(*((TopoDS_Shape*)K->Handle)));
}

OCBRepCheck_ListOfStatus^ OCBRepCheck_DataMapOfShapeListOfStatus::Find(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BRepCheck_ListOfStatus* tmp = new BRepCheck_ListOfStatus();
  *tmp = ((BRepCheck_DataMapOfShapeListOfStatus*)nativeHandle)->Find(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBRepCheck_ListOfStatus(tmp);
}

OCBRepCheck_ListOfStatus^ OCBRepCheck_DataMapOfShapeListOfStatus::ChangeFind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BRepCheck_ListOfStatus* tmp = new BRepCheck_ListOfStatus();
  *tmp = ((BRepCheck_DataMapOfShapeListOfStatus*)nativeHandle)->ChangeFind(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBRepCheck_ListOfStatus(tmp);
}

 Standard_Address OCBRepCheck_DataMapOfShapeListOfStatus::Find1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepCheck_DataMapOfShapeListOfStatus*)nativeHandle)->Find1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCBRepCheck_DataMapOfShapeListOfStatus::ChangeFind1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepCheck_DataMapOfShapeListOfStatus*)nativeHandle)->ChangeFind1(*((TopoDS_Shape*)K->Handle));
}


