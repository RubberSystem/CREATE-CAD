// File generated by CPPExt (CPP file)
//

#include "MoniTool_DataMapOfTimer.h"
#include "../Converter.h"
#include "MoniTool_Timer.h"
#include "MoniTool_MTHasher.h"
#include "MoniTool_DataMapNodeOfDataMapOfTimer.h"
#include "MoniTool_DataMapIteratorOfDataMapOfTimer.h"


using namespace OCNaroWrappers;

OCMoniTool_DataMapOfTimer::OCMoniTool_DataMapOfTimer(MoniTool_DataMapOfTimer* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMoniTool_DataMapOfTimer::OCMoniTool_DataMapOfTimer(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MoniTool_DataMapOfTimer(NbBuckets);
}

OCMoniTool_DataMapOfTimer^ OCMoniTool_DataMapOfTimer::Assign(OCNaroWrappers::OCMoniTool_DataMapOfTimer^ Other)
{
  MoniTool_DataMapOfTimer* tmp = new MoniTool_DataMapOfTimer(0);
  *tmp = ((MoniTool_DataMapOfTimer*)nativeHandle)->Assign(*((MoniTool_DataMapOfTimer*)Other->Handle));
  return gcnew OCMoniTool_DataMapOfTimer(tmp);
}

 void OCMoniTool_DataMapOfTimer::ReSize(Standard_Integer NbBuckets)
{
  ((MoniTool_DataMapOfTimer*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMoniTool_DataMapOfTimer::Bind(System::String^ K, OCNaroWrappers::OCMoniTool_Timer^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MoniTool_DataMapOfTimer*)nativeHandle)->Bind(OCConverter::StringToStandardCString(K), *((Handle_MoniTool_Timer*)I->Handle)));
}

 System::Boolean OCMoniTool_DataMapOfTimer::IsBound(System::String^ K)
{
  return OCConverter::StandardBooleanToBoolean(((MoniTool_DataMapOfTimer*)nativeHandle)->IsBound(OCConverter::StringToStandardCString(K)));
}

 System::Boolean OCMoniTool_DataMapOfTimer::UnBind(System::String^ K)
{
  return OCConverter::StandardBooleanToBoolean(((MoniTool_DataMapOfTimer*)nativeHandle)->UnBind(OCConverter::StringToStandardCString(K)));
}

OCMoniTool_Timer^ OCMoniTool_DataMapOfTimer::Find(System::String^ K)
{
  Handle(MoniTool_Timer) tmp = ((MoniTool_DataMapOfTimer*)nativeHandle)->Find(OCConverter::StringToStandardCString(K));
  return gcnew OCMoniTool_Timer(&tmp);
}

OCMoniTool_Timer^ OCMoniTool_DataMapOfTimer::ChangeFind(System::String^ K)
{
  Handle(MoniTool_Timer) tmp = ((MoniTool_DataMapOfTimer*)nativeHandle)->ChangeFind(OCConverter::StringToStandardCString(K));
  return gcnew OCMoniTool_Timer(&tmp);
}

 Standard_Address OCMoniTool_DataMapOfTimer::Find1(System::String^ K)
{
  return ((MoniTool_DataMapOfTimer*)nativeHandle)->Find1(OCConverter::StringToStandardCString(K));
}

 Standard_Address OCMoniTool_DataMapOfTimer::ChangeFind1(System::String^ K)
{
  return ((MoniTool_DataMapOfTimer*)nativeHandle)->ChangeFind1(OCConverter::StringToStandardCString(K));
}


