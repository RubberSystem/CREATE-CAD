// File generated by CPPExt (CPP file)
//

#include "MoniTool_SequenceOfElement.h"
#include "../Converter.h"
#include "MoniTool_Element.h"
#include "MoniTool_SequenceNodeOfSequenceOfElement.h"


using namespace OCNaroWrappers;

OCMoniTool_SequenceOfElement::OCMoniTool_SequenceOfElement(MoniTool_SequenceOfElement* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMoniTool_SequenceOfElement::OCMoniTool_SequenceOfElement() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new MoniTool_SequenceOfElement();
}

OCMoniTool_SequenceOfElement^ OCMoniTool_SequenceOfElement::Assign(OCNaroWrappers::OCMoniTool_SequenceOfElement^ Other)
{
  MoniTool_SequenceOfElement* tmp = new MoniTool_SequenceOfElement();
  *tmp = ((MoniTool_SequenceOfElement*)nativeHandle)->Assign(*((MoniTool_SequenceOfElement*)Other->Handle));
  return gcnew OCMoniTool_SequenceOfElement(tmp);
}

 void OCMoniTool_SequenceOfElement::Append(OCNaroWrappers::OCMoniTool_Element^ T)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->Append(*((Handle_MoniTool_Element*)T->Handle));
}

 void OCMoniTool_SequenceOfElement::Append(OCNaroWrappers::OCMoniTool_SequenceOfElement^ S)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->Append(*((MoniTool_SequenceOfElement*)S->Handle));
}

 void OCMoniTool_SequenceOfElement::Prepend(OCNaroWrappers::OCMoniTool_Element^ T)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->Prepend(*((Handle_MoniTool_Element*)T->Handle));
}

 void OCMoniTool_SequenceOfElement::Prepend(OCNaroWrappers::OCMoniTool_SequenceOfElement^ S)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->Prepend(*((MoniTool_SequenceOfElement*)S->Handle));
}

 void OCMoniTool_SequenceOfElement::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMoniTool_Element^ T)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->InsertBefore(Index, *((Handle_MoniTool_Element*)T->Handle));
}

 void OCMoniTool_SequenceOfElement::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMoniTool_SequenceOfElement^ S)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->InsertBefore(Index, *((MoniTool_SequenceOfElement*)S->Handle));
}

 void OCMoniTool_SequenceOfElement::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMoniTool_Element^ T)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->InsertAfter(Index, *((Handle_MoniTool_Element*)T->Handle));
}

 void OCMoniTool_SequenceOfElement::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMoniTool_SequenceOfElement^ S)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->InsertAfter(Index, *((MoniTool_SequenceOfElement*)S->Handle));
}

OCMoniTool_Element^ OCMoniTool_SequenceOfElement::First()
{
  Handle(MoniTool_Element) tmp = ((MoniTool_SequenceOfElement*)nativeHandle)->First();
  return gcnew OCMoniTool_Element(&tmp);
}

OCMoniTool_Element^ OCMoniTool_SequenceOfElement::Last()
{
  Handle(MoniTool_Element) tmp = ((MoniTool_SequenceOfElement*)nativeHandle)->Last();
  return gcnew OCMoniTool_Element(&tmp);
}

 void OCMoniTool_SequenceOfElement::Split(Standard_Integer Index, OCNaroWrappers::OCMoniTool_SequenceOfElement^ Sub)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->Split(Index, *((MoniTool_SequenceOfElement*)Sub->Handle));
}

OCMoniTool_Element^ OCMoniTool_SequenceOfElement::Value(Standard_Integer Index)
{
  Handle(MoniTool_Element) tmp = ((MoniTool_SequenceOfElement*)nativeHandle)->Value(Index);
  return gcnew OCMoniTool_Element(&tmp);
}

 void OCMoniTool_SequenceOfElement::SetValue(Standard_Integer Index, OCNaroWrappers::OCMoniTool_Element^ I)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->SetValue(Index, *((Handle_MoniTool_Element*)I->Handle));
}

OCMoniTool_Element^ OCMoniTool_SequenceOfElement::ChangeValue(Standard_Integer Index)
{
  Handle(MoniTool_Element) tmp = ((MoniTool_SequenceOfElement*)nativeHandle)->ChangeValue(Index);
  return gcnew OCMoniTool_Element(&tmp);
}

 void OCMoniTool_SequenceOfElement::Remove(Standard_Integer Index)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->Remove(Index);
}

 void OCMoniTool_SequenceOfElement::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((MoniTool_SequenceOfElement*)nativeHandle)->Remove(FromIndex, ToIndex);
}


