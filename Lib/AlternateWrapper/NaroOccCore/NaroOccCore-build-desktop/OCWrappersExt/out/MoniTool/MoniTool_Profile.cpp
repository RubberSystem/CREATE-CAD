// File generated by CPPExt (CPP file)
//

#include "MoniTool_Profile.h"
#include "../Converter.h"
#include "../Dico/Dico_DictionaryOfTransient.h"
#include "MoniTool_Option.h"
#include "../TColStd/TColStd_HSequenceOfAsciiString.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../Standard/Standard_Transient.h"


using namespace OCNaroWrappers;

OCMoniTool_Profile::OCMoniTool_Profile(Handle(MoniTool_Profile)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MoniTool_Profile(*nativeHandle);
}

OCMoniTool_Profile::OCMoniTool_Profile() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MoniTool_Profile(new MoniTool_Profile());
}

 void OCMoniTool_Profile::AddOption(OCNaroWrappers::OCMoniTool_Option^ option, System::String^ name)
{
  (*((Handle_MoniTool_Profile*)nativeHandle))->AddOption(*((Handle_MoniTool_Option*)option->Handle), OCConverter::StringToStandardCString(name));
}

OCMoniTool_Option^ OCMoniTool_Profile::Option(System::String^ name)
{
  Handle(MoniTool_Option) tmp = (*((Handle_MoniTool_Profile*)nativeHandle))->Option(OCConverter::StringToStandardCString(name));
  return gcnew OCMoniTool_Option(&tmp);
}

OCTColStd_HSequenceOfAsciiString^ OCMoniTool_Profile::OptionList()
{
  Handle(TColStd_HSequenceOfAsciiString) tmp = (*((Handle_MoniTool_Profile*)nativeHandle))->OptionList();
  return gcnew OCTColStd_HSequenceOfAsciiString(&tmp);
}

OCTColStd_HSequenceOfAsciiString^ OCMoniTool_Profile::TypedValueList()
{
  Handle(TColStd_HSequenceOfAsciiString) tmp = (*((Handle_MoniTool_Profile*)nativeHandle))->TypedValueList();
  return gcnew OCTColStd_HSequenceOfAsciiString(&tmp);
}

 void OCMoniTool_Profile::NewConf(System::String^ confname)
{
  (*((Handle_MoniTool_Profile*)nativeHandle))->NewConf(OCConverter::StringToStandardCString(confname));
}

 void OCMoniTool_Profile::AddConf(System::String^ confname)
{
  (*((Handle_MoniTool_Profile*)nativeHandle))->AddConf(OCConverter::StringToStandardCString(confname));
}

 System::Boolean OCMoniTool_Profile::HasConf(System::String^ confname)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_Profile*)nativeHandle))->HasConf(OCConverter::StringToStandardCString(confname)));
}

OCTColStd_HSequenceOfAsciiString^ OCMoniTool_Profile::ConfList()
{
  Handle(TColStd_HSequenceOfAsciiString) tmp = (*((Handle_MoniTool_Profile*)nativeHandle))->ConfList();
  return gcnew OCTColStd_HSequenceOfAsciiString(&tmp);
}

 System::Boolean OCMoniTool_Profile::ClearConf(System::String^ confname)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_Profile*)nativeHandle))->ClearConf(OCConverter::StringToStandardCString(confname)));
}

 System::Boolean OCMoniTool_Profile::AddFromOtherConf(System::String^ confname, System::String^ otherconf)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_Profile*)nativeHandle))->AddFromOtherConf(OCConverter::StringToStandardCString(confname), OCConverter::StringToStandardCString(otherconf)));
}

 System::Boolean OCMoniTool_Profile::SetFromCurrent(System::String^ confname)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_Profile*)nativeHandle))->SetFromCurrent(OCConverter::StringToStandardCString(confname)));
}

 System::Boolean OCMoniTool_Profile::AddSwitch(System::String^ confname, System::String^ optname, System::String^ casename)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_Profile*)nativeHandle))->AddSwitch(OCConverter::StringToStandardCString(confname), OCConverter::StringToStandardCString(optname), OCConverter::StringToStandardCString(casename)));
}

 System::Boolean OCMoniTool_Profile::RemoveSwitch(System::String^ confname, System::String^ optname)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_Profile*)nativeHandle))->RemoveSwitch(OCConverter::StringToStandardCString(confname), OCConverter::StringToStandardCString(optname)));
}

 void OCMoniTool_Profile::SwitchList(System::String^ confname, OCNaroWrappers::OCTColStd_HSequenceOfAsciiString^ optlist, OCNaroWrappers::OCTColStd_HSequenceOfAsciiString^ caselist)
{
  (*((Handle_MoniTool_Profile*)nativeHandle))->SwitchList(OCConverter::StringToStandardCString(confname), *((Handle_TColStd_HSequenceOfAsciiString*)optlist->Handle), *((Handle_TColStd_HSequenceOfAsciiString*)caselist->Handle));
}

 System::Boolean OCMoniTool_Profile::SetCurrent(System::String^ confname)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_Profile*)nativeHandle))->SetCurrent(OCConverter::StringToStandardCString(confname)));
}

 void OCMoniTool_Profile::RecordCurrent()
{
  (*((Handle_MoniTool_Profile*)nativeHandle))->RecordCurrent();
}

OCTCollection_AsciiString^ OCMoniTool_Profile::Current()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_MoniTool_Profile*)nativeHandle))->Current();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCMoniTool_Profile::CaseName(System::String^ optname, System::Boolean proper)
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_MoniTool_Profile*)nativeHandle))->CaseName(OCConverter::StringToStandardCString(optname), OCConverter::BooleanToStandardBoolean(proper));
  return gcnew OCTCollection_AsciiString(tmp);
}

OCStandard_Transient^ OCMoniTool_Profile::CaseValue(System::String^ optname)
{
  Handle(Standard_Transient) tmp = (*((Handle_MoniTool_Profile*)nativeHandle))->CaseValue(OCConverter::StringToStandardCString(optname));
  return gcnew OCStandard_Transient(&tmp);
}

 System::Boolean OCMoniTool_Profile::Value(System::String^ optname, OCNaroWrappers::OCStandard_Transient^ val)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_Profile*)nativeHandle))->Value(OCConverter::StringToStandardCString(optname), *((Handle_Standard_Transient*)val->Handle)));
}

 void OCMoniTool_Profile::SetTypedValues(System::Boolean proper, System::String^ name)
{
  (*((Handle_MoniTool_Profile*)nativeHandle))->SetTypedValues(OCConverter::BooleanToStandardBoolean(proper), OCConverter::StringToStandardCString(name));
}

 void OCMoniTool_Profile::SetFast(System::String^ confname)
{
  (*((Handle_MoniTool_Profile*)nativeHandle))->SetFast(OCConverter::StringToStandardCString(confname));
}

 void OCMoniTool_Profile::ClearFast()
{
  (*((Handle_MoniTool_Profile*)nativeHandle))->ClearFast();
}

 System::Boolean OCMoniTool_Profile::FastValue(System::String^ optname, OCNaroWrappers::OCStandard_Transient^ val)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_Profile*)nativeHandle))->FastValue(OCConverter::StringToStandardCString(optname), *((Handle_Standard_Transient*)val->Handle)));
}


