// File generated by CPPExt (MPV)
//
#ifndef _MoniTool_TimerSentry_OCWrappers_HeaderFile
#define _MoniTool_TimerSentry_OCWrappers_HeaderFile

// include native header
#include <MoniTool_TimerSentry.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCMoniTool_Timer;


//! A tool to facilitate using MoniTool_Timer functionality <br>
//!          by automatically ensuring consistency of start/stop actions <br>
public ref class OCMoniTool_TimerSentry  {

protected:
  MoniTool_TimerSentry* nativeHandle;
  OCMoniTool_TimerSentry(OCDummy^) {};

public:
  property MoniTool_TimerSentry* Handle
  {
    MoniTool_TimerSentry* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCMoniTool_TimerSentry(MoniTool_TimerSentry* nativeHandle);

// Methods PUBLIC

//! Constructor creates an instance and runs the corresponding timer <br>
OCMoniTool_TimerSentry(System::String^ cname);

//! Constructor creates an instance and runs the corresponding timer <br>
OCMoniTool_TimerSentry(OCNaroWrappers::OCMoniTool_Timer^ timer);

//! Destructor stops the associated timer <br>
 /*instead*/  void Destroy() ;


 /*instead*/  OCMoniTool_Timer^ Timer() ;

//! Manually stops the timer <br>
 /*instead*/  void Stop() ;

~OCMoniTool_TimerSentry()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
