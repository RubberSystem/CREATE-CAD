// File generated by CPPExt (CPP file)
//

#include "MoniTool_HSequenceOfElement.h"
#include "../Converter.h"
#include "MoniTool_Element.h"
#include "MoniTool_SequenceOfElement.h"


using namespace OCNaroWrappers;

OCMoniTool_HSequenceOfElement::OCMoniTool_HSequenceOfElement(Handle(MoniTool_HSequenceOfElement)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MoniTool_HSequenceOfElement(*nativeHandle);
}

OCMoniTool_HSequenceOfElement::OCMoniTool_HSequenceOfElement() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MoniTool_HSequenceOfElement(new MoniTool_HSequenceOfElement());
}

 System::Boolean OCMoniTool_HSequenceOfElement::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCMoniTool_HSequenceOfElement::Length()
{
  return (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Length();
}

 void OCMoniTool_HSequenceOfElement::Clear()
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Clear();
}

 void OCMoniTool_HSequenceOfElement::Append(OCNaroWrappers::OCMoniTool_Element^ anItem)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Append(*((Handle_MoniTool_Element*)anItem->Handle));
}

 void OCMoniTool_HSequenceOfElement::Append(OCNaroWrappers::OCMoniTool_HSequenceOfElement^ aSequence)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Append(*((Handle_MoniTool_HSequenceOfElement*)aSequence->Handle));
}

 void OCMoniTool_HSequenceOfElement::Prepend(OCNaroWrappers::OCMoniTool_Element^ anItem)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Prepend(*((Handle_MoniTool_Element*)anItem->Handle));
}

 void OCMoniTool_HSequenceOfElement::Prepend(OCNaroWrappers::OCMoniTool_HSequenceOfElement^ aSequence)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Prepend(*((Handle_MoniTool_HSequenceOfElement*)aSequence->Handle));
}

 void OCMoniTool_HSequenceOfElement::Reverse()
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Reverse();
}

 void OCMoniTool_HSequenceOfElement::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCMoniTool_Element^ anItem)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->InsertBefore(anIndex, *((Handle_MoniTool_Element*)anItem->Handle));
}

 void OCMoniTool_HSequenceOfElement::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCMoniTool_HSequenceOfElement^ aSequence)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->InsertBefore(anIndex, *((Handle_MoniTool_HSequenceOfElement*)aSequence->Handle));
}

 void OCMoniTool_HSequenceOfElement::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCMoniTool_Element^ anItem)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->InsertAfter(anIndex, *((Handle_MoniTool_Element*)anItem->Handle));
}

 void OCMoniTool_HSequenceOfElement::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCMoniTool_HSequenceOfElement^ aSequence)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->InsertAfter(anIndex, *((Handle_MoniTool_HSequenceOfElement*)aSequence->Handle));
}

 void OCMoniTool_HSequenceOfElement::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCMoniTool_HSequenceOfElement^ OCMoniTool_HSequenceOfElement::Split(Standard_Integer anIndex)
{
  Handle(MoniTool_HSequenceOfElement) tmp = (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Split(anIndex);
  return gcnew OCMoniTool_HSequenceOfElement(&tmp);
}

 void OCMoniTool_HSequenceOfElement::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCMoniTool_Element^ anItem)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->SetValue(anIndex, *((Handle_MoniTool_Element*)anItem->Handle));
}

OCMoniTool_Element^ OCMoniTool_HSequenceOfElement::Value(Standard_Integer anIndex)
{
  Handle(MoniTool_Element) tmp = (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Value(anIndex);
  return gcnew OCMoniTool_Element(&tmp);
}

OCMoniTool_Element^ OCMoniTool_HSequenceOfElement::ChangeValue(Standard_Integer anIndex)
{
  Handle(MoniTool_Element) tmp = (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCMoniTool_Element(&tmp);
}

 void OCMoniTool_HSequenceOfElement::Remove(Standard_Integer anIndex)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Remove(anIndex);
}

 void OCMoniTool_HSequenceOfElement::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCMoniTool_SequenceOfElement^ OCMoniTool_HSequenceOfElement::Sequence()
{
  MoniTool_SequenceOfElement* tmp = new MoniTool_SequenceOfElement();
  *tmp = (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->Sequence();
  return gcnew OCMoniTool_SequenceOfElement(tmp);
}

OCMoniTool_SequenceOfElement^ OCMoniTool_HSequenceOfElement::ChangeSequence()
{
  MoniTool_SequenceOfElement* tmp = new MoniTool_SequenceOfElement();
  *tmp = (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->ChangeSequence();
  return gcnew OCMoniTool_SequenceOfElement(tmp);
}

OCMoniTool_HSequenceOfElement^ OCMoniTool_HSequenceOfElement::ShallowCopy()
{
  Handle(MoniTool_HSequenceOfElement) tmp = (*((Handle_MoniTool_HSequenceOfElement*)nativeHandle))->ShallowCopy();
  return gcnew OCMoniTool_HSequenceOfElement(&tmp);
}


