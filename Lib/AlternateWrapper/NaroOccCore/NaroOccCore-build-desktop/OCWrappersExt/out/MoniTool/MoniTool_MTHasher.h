// File generated by CPPExt (MPV)
//
#ifndef _MoniTool_MTHasher_OCWrappers_HeaderFile
#define _MoniTool_MTHasher_OCWrappers_HeaderFile

// include native header
#include <MoniTool_MTHasher.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{




//! The auxiliary class provides hash code for mapping objects <br>
public ref class OCMoniTool_MTHasher  {

protected:
  MoniTool_MTHasher* nativeHandle;
  OCMoniTool_MTHasher(OCDummy^) {};

public:
  property MoniTool_MTHasher* Handle
  {
    MoniTool_MTHasher* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCMoniTool_MTHasher(MoniTool_MTHasher* nativeHandle);

// Methods PUBLIC

//! Returns a HasCode value for the CString <Str>  in the <br>
//! range 0..Upper. <br>
//! Default ::HashCode(Str,Upper) <br>
static /*instead*/  Standard_Integer HashCode(System::String^ Str, Standard_Integer Upper) ;

//! Returns True  when the two CString are the same. Two <br>
//! same strings must have the same hashcode, the <br>
//! contrary is not necessary. <br>
//! Default Str1 == Str2 <br>
static /*instead*/  System::Boolean IsEqual(System::String^ Str1, System::String^ Str2) ;

~OCMoniTool_MTHasher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
