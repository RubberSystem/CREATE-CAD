// File generated by CPPExt (MPV)
//
#ifndef _MoniTool_AttrList_OCWrappers_HeaderFile
#define _MoniTool_AttrList_OCWrappers_HeaderFile

// include native header
#include <MoniTool_AttrList.hxx>
#include "../Converter.h"


#include "MoniTool_ValueType.h"


namespace OCNaroWrappers
{

ref class OCDico_DictionaryOfTransient;
ref class OCStandard_Transient;
ref class OCStandard_Type;


//! a AttrList allows to record a list of attributes as Transients <br>
//!           which can be edited, changed ... <br>
//!           Each one is identified by a name <br>
public ref class OCMoniTool_AttrList  {

protected:
  MoniTool_AttrList* nativeHandle;
  OCMoniTool_AttrList(OCDummy^) {};

public:
  property MoniTool_AttrList* Handle
  {
    MoniTool_AttrList* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCMoniTool_AttrList(MoniTool_AttrList* nativeHandle);

// Methods PUBLIC

//! Creates an AttrList, empty <br>
OCMoniTool_AttrList();

//! Creates an AttrList from another one, definitions are shared <br>
//!           (calls SameAttributes) <br>
OCMoniTool_AttrList(OCNaroWrappers::OCMoniTool_AttrList^ other);

//! Adds an attribute with a given name (replaces the former one <br>
//!           with the same name if already exists) <br>
 /*instead*/  void SetAttribute(System::String^ name, OCNaroWrappers::OCStandard_Transient^ val) ;

//! Removes an attribute <br>
//!           Returns True when done, False if this attribute did not exist <br>
 /*instead*/  System::Boolean RemoveAttribute(System::String^ name) ;

//! Returns an attribute from its name, filtered by a type <br>
//!           If no attribute has this name, or if it is not kind of this <br>
//!           type, <val> is Null and returned value is False <br>
//!           Else, it is True <br>
 /*instead*/  System::Boolean GetAttribute(System::String^ name, OCNaroWrappers::OCStandard_Type^ type, OCNaroWrappers::OCStandard_Transient^ val) ;

//! Returns an attribute from its name. Null Handle if not <br>
//!           recorded         (whatever Transient, Integer, Real ...) <br>
//!           Integer is recorded as IntVal <br>
//!           Real is recorded as RealVal <br>
//!           Text is recorded as HAsciiString <br>
 /*instead*/  OCStandard_Transient^ Attribute(System::String^ name) ;

//! Returns the type of an attribute : <br>
//!           ValueInt , ValueReal , ValueText (String) , ValueIdent (any) <br>
//!           or ValueVoid (not recorded) <br>
 /*instead*/  OCMoniTool_ValueType AttributeType(System::String^ name) ;

//! Adds an integer value for an attribute <br>
 /*instead*/  void SetIntegerAttribute(System::String^ name, Standard_Integer val) ;

//! Returns an attribute from its name, as integer <br>
//!           If no attribute has this name, or not an integer, <br>
//!           <val> is 0 and returned value is False <br>
//!           Else, it is True <br>
 /*instead*/  System::Boolean GetIntegerAttribute(System::String^ name, Standard_Integer& val) ;

//! Returns an integer attribute from its name. 0 if not recorded <br>
 /*instead*/  Standard_Integer IntegerAttribute(System::String^ name) ;

//! Adds a real value for an attribute <br>
 /*instead*/  void SetRealAttribute(System::String^ name, Standard_Real val) ;

//! Returns an attribute from its name, as real <br>
//!           If no attribute has this name, or not a real <br>
//!           <val> is 0.0 and returned value is False <br>
//!           Else, it is True <br>
 /*instead*/  System::Boolean GetRealAttribute(System::String^ name, Standard_Real& val) ;

//! Returns a real attribute from its name. 0.0 if not recorded <br>
 /*instead*/  Standard_Real RealAttribute(System::String^ name) ;

//! Adds a String value for an attribute <br>
 /*instead*/  void SetStringAttribute(System::String^ name, System::String^ val) ;

//! Returns an attribute from its name, as String <br>
//!           If no attribute has this name, or not a String <br>
//!           <val> is 0.0 and returned value is False <br>
//!           Else, it is True <br>
 /*instead*/  System::Boolean GetStringAttribute(System::String^ name, System::String^& val) ;

//! Returns a String attribute from its name. "" if not recorded <br>
 /*instead*/  System::String^ StringAttribute(System::String^ name) ;

//! Returns the exhaustive list of attributes <br>
 /*instead*/  OCDico_DictionaryOfTransient^ AttrList() ;

//! Gets the list of attributes from <other>, as such, i.e. <br>
//!           not copied : attributes are shared, any attribute edited, <br>
//!           added, or removed in <other> is also in <me> and vice versa <br>
//!           The former list of attributes of <me> is dropped <br>
 /*instead*/  void SameAttributes(OCNaroWrappers::OCMoniTool_AttrList^ other) ;

//! Gets the list of attributes from <other>, by copying it <br>
//!           By default, considers all the attributes from <other> <br>
//!           If <fromname> is given, considers only the attributes with <br>
//!           name beginning by <fromname> <br>
//! <br>
//!           For each attribute, if <copied> is True (D), its value is also <br>
//!           copied if it is a basic type (Integer,Real,String), else it <br>
//!           remains shared between <other> and <me> <br>
//! <br>
//!           These new attributes are added to the existing ones in <me>, <br>
//!           in case of same name, they replace the existing ones <br>
 /*instead*/  void GetAttributes(OCNaroWrappers::OCMoniTool_AttrList^ other, System::String^ fromname, System::Boolean copied) ;

~OCMoniTool_AttrList()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
