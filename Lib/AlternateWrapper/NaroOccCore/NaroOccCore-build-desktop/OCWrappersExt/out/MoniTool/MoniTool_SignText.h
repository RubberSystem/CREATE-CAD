// File generated by CPPExt (Transient)
//
#ifndef _MoniTool_SignText_OCWrappers_HeaderFile
#define _MoniTool_SignText_OCWrappers_HeaderFile

// include the wrapped class
#include <MoniTool_SignText.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCTCollection_AsciiString;
ref class OCStandard_Transient;


//! Provides the basic service to get a text which identifies <br>
//!           an object in a context <br>
//!           It can be used for other classes (general signatures ...) <br>
//!           It can also be used to build a message in which an object <br>
//!           is to be identified <br>
public ref class OCMoniTool_SignText : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCMoniTool_SignText(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCMoniTool_SignText(Handle(MoniTool_SignText)* nativeHandle);

// Methods PUBLIC

//! Gives a text as a signature for a transient object alone, i.e. <br>
//!           without defined context. <br>
//!           By default, calls Text with undefined context (Null Handle) and <br>
//!           if empty, then returns DynamicType <br>
virtual /*instead*/  OCTCollection_AsciiString^ TextAlone(OCNaroWrappers::OCStandard_Transient^ ent) ;

~OCMoniTool_SignText()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
