// File generated by CPPExt (CPP file)
//

#include "PlotMgt_PlotterParameter.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HSequenceOfAsciiString.h"
#include "PlotMgt_Plotter.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../OSD/OSD_File.h"


using namespace OCNaroWrappers;

OCPlotMgt_PlotterParameter::OCPlotMgt_PlotterParameter(Handle(PlotMgt_PlotterParameter)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_PlotMgt_PlotterParameter(*nativeHandle);
}

OCPlotMgt_PlotterParameter::OCPlotMgt_PlotterParameter(OCNaroWrappers::OCTCollection_AsciiString^ aName) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PlotMgt_PlotterParameter(new PlotMgt_PlotterParameter(*((TCollection_AsciiString*)aName->Handle)));
}

 System::Boolean OCPlotMgt_PlotterParameter::Save(OCNaroWrappers::OCOSD_File^ aFile)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->Save(*((OSD_File*)aFile->Handle)));
}

 void OCPlotMgt_PlotterParameter::SetState(System::Boolean aState)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->SetState(OCConverter::BooleanToStandardBoolean(aState));
}

 void OCPlotMgt_PlotterParameter::SetType(OCPlotMgt_TypeOfPlotterParameter aType)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->SetType((PlotMgt_TypeOfPlotterParameter)aType);
}

 void OCPlotMgt_PlotterParameter::SValue(OCNaroWrappers::OCTCollection_AsciiString^ aValue)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->SValue(*((TCollection_AsciiString*)aValue->Handle));
}

 System::Boolean OCPlotMgt_PlotterParameter::BValue()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->BValue());
}

 Standard_Integer OCPlotMgt_PlotterParameter::IValue()
{
  return (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->IValue();
}

 Standard_Real OCPlotMgt_PlotterParameter::RValue()
{
  return (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->RValue();
}

 void OCPlotMgt_PlotterParameter::LValues(OCNaroWrappers::OCTColStd_HSequenceOfAsciiString^ aList)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->LValues(*((Handle_TColStd_HSequenceOfAsciiString*)aList->Handle));
}

OCTColStd_HSequenceOfAsciiString^ OCPlotMgt_PlotterParameter::MValue()
{
  Handle(TColStd_HSequenceOfAsciiString) tmp = (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->MValue();
  return gcnew OCTColStd_HSequenceOfAsciiString(&tmp);
}

OCTCollection_AsciiString^ OCPlotMgt_PlotterParameter::Name()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->Name();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCPlotMgt_PlotterParameter::OldName()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->OldName();
  return gcnew OCTCollection_AsciiString(tmp);
}

 System::Boolean OCPlotMgt_PlotterParameter::NeedToBeSaved()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->NeedToBeSaved());
}

 void OCPlotMgt_PlotterParameter::Dump()
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->Dump();
}

 void OCPlotMgt_PlotterParameter::PutCommandInfo(Aspect_FStream outStream)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->PutCommandInfo(outStream);
}

 void OCPlotMgt_PlotterParameter::SetSValue(OCNaroWrappers::OCTCollection_AsciiString^ aValue)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->SetSValue(*((TCollection_AsciiString*)aValue->Handle));
}

 void OCPlotMgt_PlotterParameter::SetBValue(System::Boolean aValue)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->SetBValue(OCConverter::BooleanToStandardBoolean(aValue));
}

 void OCPlotMgt_PlotterParameter::SetIValue(Standard_Integer aValue)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->SetIValue(aValue);
}

 void OCPlotMgt_PlotterParameter::SetRValue(Standard_Real aValue)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->SetRValue(aValue);
}

 void OCPlotMgt_PlotterParameter::SetMValue(OCNaroWrappers::OCTColStd_HSequenceOfAsciiString^ aMap)
{
  (*((Handle_PlotMgt_PlotterParameter*)nativeHandle))->SetMValue(*((Handle_TColStd_HSequenceOfAsciiString*)aMap->Handle));
}


