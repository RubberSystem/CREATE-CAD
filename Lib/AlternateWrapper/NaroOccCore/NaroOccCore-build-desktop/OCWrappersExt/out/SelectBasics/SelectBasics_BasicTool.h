// File generated by CPPExt (MPV)
//
#ifndef _SelectBasics_BasicTool_OCWrappers_HeaderFile
#define _SelectBasics_BasicTool_OCWrappers_HeaderFile

// include native header
#include <SelectBasics_BasicTool.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCgp_Pnt2d;
ref class OCTColgp_Array1OfPnt2d;



public ref class OCSelectBasics_BasicTool  {

protected:
  SelectBasics_BasicTool* nativeHandle;
  OCSelectBasics_BasicTool(OCDummy^) {};

public:
  property SelectBasics_BasicTool* Handle
  {
    SelectBasics_BasicTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCSelectBasics_BasicTool(SelectBasics_BasicTool* nativeHandle);

// Methods PUBLIC

//! returns True if The Segment {P1P2} is <br>
//!          intersected by the segment {P3P4} <br>
static /*instead*/  System::Boolean MatchSegments(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2, OCNaroWrappers::OCgp_Pnt2d^ P3, OCNaroWrappers::OCgp_Pnt2d^ P4) ;

//! return True if Segment(pBegin, pEnd) is Selected <br>
static /*instead*/  System::Boolean MatchSegment(OCNaroWrappers::OCgp_Pnt2d^ pBegin, OCNaroWrappers::OCgp_Pnt2d^ pEnd, Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin) ;


static /*instead*/  System::Boolean AutoInter(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ aPolyg2d) ;

//! package method used to find if a point <br>
//!          is close enough to a polygon of 2D points <br>
//!          to be Used by Primitives like curves or faces... <br>
//!          Rank gives the index of the touched <br>
//!          segment <br>
static /*instead*/  System::Boolean MatchPolyg2d(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ tabpoint, Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin, Standard_Integer& Rank) ;

~OCSelectBasics_BasicTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
