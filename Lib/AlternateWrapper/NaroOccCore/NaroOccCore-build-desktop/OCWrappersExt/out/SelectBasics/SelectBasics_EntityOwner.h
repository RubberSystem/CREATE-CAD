// File generated by CPPExt (Transient)
//
#ifndef _SelectBasics_EntityOwner_OCWrappers_HeaderFile
#define _SelectBasics_EntityOwner_OCWrappers_HeaderFile

// include the wrapped class
#include <SelectBasics_EntityOwner.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCTopLoc_Location;


//! defines an abstract owner of sensitive primitives. <br>
//!           Owners are typically used to establish a connection <br>
//!           between sensitive entities and high-level objects (e.g. presentations). <br>
public ref class OCSelectBasics_EntityOwner : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCSelectBasics_EntityOwner(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCSelectBasics_EntityOwner(Handle(SelectBasics_EntityOwner)* nativeHandle);

// Methods PUBLIC


OCSelectBasics_EntityOwner(Standard_Integer aPriority);

//! sets the selectable priority of the owner <br>
 /*instead*/  void Set(Standard_Integer aPriority) ;


 /*instead*/  Standard_Integer Priority() ;

~OCSelectBasics_EntityOwner()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
