// File generated by CPPExt (CPP file)
//

#include "SelectBasics_SequenceOfOwner.h"
#include "../Converter.h"
#include "SelectBasics_EntityOwner.h"
#include "SelectBasics_SequenceNodeOfSequenceOfOwner.h"


using namespace OCNaroWrappers;

OCSelectBasics_SequenceOfOwner::OCSelectBasics_SequenceOfOwner(SelectBasics_SequenceOfOwner* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCSelectBasics_SequenceOfOwner::OCSelectBasics_SequenceOfOwner() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new SelectBasics_SequenceOfOwner();
}

OCSelectBasics_SequenceOfOwner^ OCSelectBasics_SequenceOfOwner::Assign(OCNaroWrappers::OCSelectBasics_SequenceOfOwner^ Other)
{
  SelectBasics_SequenceOfOwner* tmp = new SelectBasics_SequenceOfOwner();
  *tmp = ((SelectBasics_SequenceOfOwner*)nativeHandle)->Assign(*((SelectBasics_SequenceOfOwner*)Other->Handle));
  return gcnew OCSelectBasics_SequenceOfOwner(tmp);
}

 void OCSelectBasics_SequenceOfOwner::Append(OCNaroWrappers::OCSelectBasics_EntityOwner^ T)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->Append(*((Handle_SelectBasics_EntityOwner*)T->Handle));
}

 void OCSelectBasics_SequenceOfOwner::Append(OCNaroWrappers::OCSelectBasics_SequenceOfOwner^ S)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->Append(*((SelectBasics_SequenceOfOwner*)S->Handle));
}

 void OCSelectBasics_SequenceOfOwner::Prepend(OCNaroWrappers::OCSelectBasics_EntityOwner^ T)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->Prepend(*((Handle_SelectBasics_EntityOwner*)T->Handle));
}

 void OCSelectBasics_SequenceOfOwner::Prepend(OCNaroWrappers::OCSelectBasics_SequenceOfOwner^ S)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->Prepend(*((SelectBasics_SequenceOfOwner*)S->Handle));
}

 void OCSelectBasics_SequenceOfOwner::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCSelectBasics_EntityOwner^ T)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->InsertBefore(Index, *((Handle_SelectBasics_EntityOwner*)T->Handle));
}

 void OCSelectBasics_SequenceOfOwner::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCSelectBasics_SequenceOfOwner^ S)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->InsertBefore(Index, *((SelectBasics_SequenceOfOwner*)S->Handle));
}

 void OCSelectBasics_SequenceOfOwner::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCSelectBasics_EntityOwner^ T)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->InsertAfter(Index, *((Handle_SelectBasics_EntityOwner*)T->Handle));
}

 void OCSelectBasics_SequenceOfOwner::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCSelectBasics_SequenceOfOwner^ S)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->InsertAfter(Index, *((SelectBasics_SequenceOfOwner*)S->Handle));
}

OCSelectBasics_EntityOwner^ OCSelectBasics_SequenceOfOwner::First()
{
  Handle(SelectBasics_EntityOwner) tmp = ((SelectBasics_SequenceOfOwner*)nativeHandle)->First();
  return gcnew OCSelectBasics_EntityOwner(&tmp);
}

OCSelectBasics_EntityOwner^ OCSelectBasics_SequenceOfOwner::Last()
{
  Handle(SelectBasics_EntityOwner) tmp = ((SelectBasics_SequenceOfOwner*)nativeHandle)->Last();
  return gcnew OCSelectBasics_EntityOwner(&tmp);
}

 void OCSelectBasics_SequenceOfOwner::Split(Standard_Integer Index, OCNaroWrappers::OCSelectBasics_SequenceOfOwner^ Sub)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->Split(Index, *((SelectBasics_SequenceOfOwner*)Sub->Handle));
}

OCSelectBasics_EntityOwner^ OCSelectBasics_SequenceOfOwner::Value(Standard_Integer Index)
{
  Handle(SelectBasics_EntityOwner) tmp = ((SelectBasics_SequenceOfOwner*)nativeHandle)->Value(Index);
  return gcnew OCSelectBasics_EntityOwner(&tmp);
}

 void OCSelectBasics_SequenceOfOwner::SetValue(Standard_Integer Index, OCNaroWrappers::OCSelectBasics_EntityOwner^ I)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->SetValue(Index, *((Handle_SelectBasics_EntityOwner*)I->Handle));
}

OCSelectBasics_EntityOwner^ OCSelectBasics_SequenceOfOwner::ChangeValue(Standard_Integer Index)
{
  Handle(SelectBasics_EntityOwner) tmp = ((SelectBasics_SequenceOfOwner*)nativeHandle)->ChangeValue(Index);
  return gcnew OCSelectBasics_EntityOwner(&tmp);
}

 void OCSelectBasics_SequenceOfOwner::Remove(Standard_Integer Index)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->Remove(Index);
}

 void OCSelectBasics_SequenceOfOwner::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((SelectBasics_SequenceOfOwner*)nativeHandle)->Remove(FromIndex, ToIndex);
}


