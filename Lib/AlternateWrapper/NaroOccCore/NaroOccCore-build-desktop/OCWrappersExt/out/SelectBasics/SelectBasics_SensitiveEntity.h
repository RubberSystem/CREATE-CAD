// File generated by CPPExt (Transient)
//
#ifndef _SelectBasics_SensitiveEntity_OCWrappers_HeaderFile
#define _SelectBasics_SensitiveEntity_OCWrappers_HeaderFile

// include the wrapped class
#include <SelectBasics_SensitiveEntity.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCSelectBasics_EntityOwner;
ref class OCSelectBasics_ListOfBox2d;
ref class OCTColgp_Array1OfPnt2d;
ref class OCBnd_Box2d;


//! root class ; the inheriting classes will be able to give <br>
//!          sensitive Areas for the dynamic selection algorithms <br>
public ref class OCSelectBasics_SensitiveEntity : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCSelectBasics_SensitiveEntity(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCSelectBasics_SensitiveEntity(Handle(SelectBasics_SensitiveEntity)* nativeHandle);

// Methods PUBLIC


OCSelectBasics_SensitiveEntity(OCNaroWrappers::OCSelectBasics_EntityOwner^ OwnerId, Standard_ShortReal aSensitivityFactor);


virtual /*instead*/  void Set(OCNaroWrappers::OCSelectBasics_EntityOwner^ TheOwnerId) ;


 /*instead*/  OCSelectBasics_EntityOwner^ OwnerId() ;

//!  Sort Selected entities according to depth... <br>
virtual /*instead*/  Standard_Real Depth() ;


 /*instead*/  void SetSensitivityFactor(Standard_ShortReal aFactor) ;

//! allows a better sensitivity for <br>
//!          a specific entity in selection algorithms <br>
//!          useful for small sized entities. <br>
 /*instead*/  Standard_ShortReal SensitivityFactor() ;

~OCSelectBasics_SensitiveEntity()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
