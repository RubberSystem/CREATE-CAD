// File generated by CPPExt (MPV)
//
#ifndef _BRepExtrema_ExtPF_OCWrappers_HeaderFile
#define _BRepExtrema_ExtPF_OCWrappers_HeaderFile

// include native header
#include <BRepExtrema_ExtPF.hxx>
#include "../Converter.h"


#include "../Extrema/Extrema_ExtPS.h"
#include "../TColStd/TColStd_SequenceOfReal.h"
#include "../Extrema/Extrema_SequenceOfPOnSurf.h"
#include "../BRepAdaptor/BRepAdaptor_Surface.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Vertex;
ref class OCTopoDS_Face;
ref class OCgp_Pnt;



public ref class OCBRepExtrema_ExtPF  {

protected:
  BRepExtrema_ExtPF* nativeHandle;
  OCBRepExtrema_ExtPF(OCDummy^) {};

public:
  property BRepExtrema_ExtPF* Handle
  {
    BRepExtrema_ExtPF* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepExtrema_ExtPF(BRepExtrema_ExtPF* nativeHandle);

// Methods PUBLIC


OCBRepExtrema_ExtPF();

//! It calculates all the distances. <br>
OCBRepExtrema_ExtPF(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Face^ E);


 /*instead*/  void Initialize(OCNaroWrappers::OCTopoDS_Face^ E) ;

//! An exception is raised if the fields have not been <br>
//!          initialized. <br>
//!          Be careful: this method uses the Face only for <br>
//!          classify not for the fields. <br>
 /*instead*/  void Perform(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Face^ E) ;

//! True if the distances are found. <br>
 /*instead*/  System::Boolean IsDone() ;

//! Returns the number of extremum distances. <br>
 /*instead*/  Standard_Integer NbExt() ;

//! Returns the value of the <N>th extremum distance. <br>
 /*instead*/  Standard_Real Value(Standard_Integer N) ;

//! Returns the parameters on the  Face  of the  <N>th <br>
//!          extremum distance. <br>
 /*instead*/  void Parameter(Standard_Integer N, Standard_Real& U, Standard_Real& V) ;

//! Returns the Point of the <N>th extremum distance. <br>
 /*instead*/  OCgp_Pnt^ Point(Standard_Integer N) ;

~OCBRepExtrema_ExtPF()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
