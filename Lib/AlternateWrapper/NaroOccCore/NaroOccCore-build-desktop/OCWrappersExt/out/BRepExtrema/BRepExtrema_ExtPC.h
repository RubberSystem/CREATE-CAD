// File generated by CPPExt (MPV)
//
#ifndef _BRepExtrema_ExtPC_OCWrappers_HeaderFile
#define _BRepExtrema_ExtPC_OCWrappers_HeaderFile

// include native header
#include <BRepExtrema_ExtPC.hxx>
#include "../Converter.h"


#include "../Extrema/Extrema_ExtPC.h"


namespace OCNaroWrappers
{

ref class OCBRepAdaptor_HCurve;
ref class OCTopoDS_Vertex;
ref class OCTopoDS_Edge;
ref class OCgp_Pnt;



public ref class OCBRepExtrema_ExtPC  {

protected:
  BRepExtrema_ExtPC* nativeHandle;
  OCBRepExtrema_ExtPC(OCDummy^) {};

public:
  property BRepExtrema_ExtPC* Handle
  {
    BRepExtrema_ExtPC* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepExtrema_ExtPC(BRepExtrema_ExtPC* nativeHandle);

// Methods PUBLIC


OCBRepExtrema_ExtPC();

//! It calculates all the distances. <br>
OCBRepExtrema_ExtPC(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E);


 /*instead*/  void Initialize(OCNaroWrappers::OCTopoDS_Edge^ E) ;

//! An exception is raised if the fields have not been <br>
//!          initialized. <br>
 /*instead*/  void Perform(OCNaroWrappers::OCTopoDS_Vertex^ V) ;

//! True if the distances are found. <br>
 /*instead*/  System::Boolean IsDone() ;

//! Returns the number of extremum distances. <br>
 /*instead*/  Standard_Integer NbExt() ;

//! Returns True if the <N>th extremum distance is a <br>
//!          minimum. <br>
 /*instead*/  System::Boolean IsMin(Standard_Integer N) ;

//! Returns the value of the <N>th extremum distance. <br>
 /*instead*/  Standard_Real Value(Standard_Integer N) ;

//! Returns the parameter  on the  edge  of the  <N>th <br>
//!          extremum distance. <br>
 /*instead*/  Standard_Real Parameter(Standard_Integer N) ;

//! Returns the Point of the <N>th extremum distance. <br>
 /*instead*/  OCgp_Pnt^ Point(Standard_Integer N) ;

//! if the curve is a trimmed curve, <br>
//!          dist1 is the distance between <P> and the point <br>
//!          of parameter FirstParameter <pnt1> and <br>
//!          dist2 is the distance between <P> and the point <br>
//!          of parameter LastParameter <pnt2>. <br>
 /*instead*/  void TrimmedDistances(Standard_Real& dist1, Standard_Real& dist2, OCNaroWrappers::OCgp_Pnt^ pnt1, OCNaroWrappers::OCgp_Pnt^ pnt2) ;

~OCBRepExtrema_ExtPC()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
