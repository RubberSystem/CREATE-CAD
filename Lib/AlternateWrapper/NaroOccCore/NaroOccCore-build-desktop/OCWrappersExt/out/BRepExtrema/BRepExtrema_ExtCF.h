// File generated by CPPExt (MPV)
//
#ifndef _BRepExtrema_ExtCF_OCWrappers_HeaderFile
#define _BRepExtrema_ExtCF_OCWrappers_HeaderFile

// include native header
#include <BRepExtrema_ExtCF.hxx>
#include "../Converter.h"


#include "../Extrema/Extrema_ExtCS.h"
#include "../TColStd/TColStd_SequenceOfReal.h"
#include "../Extrema/Extrema_SequenceOfPOnSurf.h"
#include "../Extrema/Extrema_SequenceOfPOnCurv.h"


namespace OCNaroWrappers
{

ref class OCBRepAdaptor_HSurface;
ref class OCTopoDS_Edge;
ref class OCTopoDS_Face;
ref class OCgp_Pnt;



public ref class OCBRepExtrema_ExtCF  {

protected:
  BRepExtrema_ExtCF* nativeHandle;
  OCBRepExtrema_ExtCF(OCDummy^) {};

public:
  property BRepExtrema_ExtCF* Handle
  {
    BRepExtrema_ExtCF* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepExtrema_ExtCF(BRepExtrema_ExtCF* nativeHandle);

// Methods PUBLIC


OCBRepExtrema_ExtCF();

//! It calculates all the distances. <br>
OCBRepExtrema_ExtCF(OCNaroWrappers::OCTopoDS_Edge^ V, OCNaroWrappers::OCTopoDS_Face^ E);


 /*instead*/  void Initialize(OCNaroWrappers::OCTopoDS_Face^ E) ;

//! An exception is raised if the fields have not been <br>
//!          initialized. <br>
//!          Be careful: this method uses the Face only for <br>
//!          classify not for the fields. <br>
 /*instead*/  void Perform(OCNaroWrappers::OCTopoDS_Edge^ V, OCNaroWrappers::OCTopoDS_Face^ E) ;

//! True if the distances are found. <br>
 /*instead*/  System::Boolean IsDone() ;

//! Returns the number of extremum distances. <br>
 /*instead*/  Standard_Integer NbExt() ;

//! Returns the value of the <N>th extremum distance. <br>
 /*instead*/  Standard_Real Value(Standard_Integer N) ;

//! Returns True if the curve is on a parallel surface. <br>
 /*instead*/  System::Boolean IsParallel() ;

//! Returns the parameters on the  Edge  of the  <N>th <br>
//!          extremum distance. <br>
 /*instead*/  Standard_Real ParameterOnEdge(Standard_Integer N) ;

//! Returns the parameters on the  Face  of the  <N>th <br>
//!          extremum distance. <br>
 /*instead*/  void ParameterOnFace(Standard_Integer N, Standard_Real& U, Standard_Real& V) ;

//! Returns the Point of the <N>th extremum distance. <br>
 /*instead*/  OCgp_Pnt^ PointOnEdge(Standard_Integer N) ;

//! Returns the Point of the <N>th extremum distance. <br>
 /*instead*/  OCgp_Pnt^ PointOnFace(Standard_Integer N) ;

~OCBRepExtrema_ExtCF()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
