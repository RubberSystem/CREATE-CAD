// File generated by CPPExt (Transient)
//
#ifndef _TNaming_NamedShape_OCWrappers_HeaderFile
#define _TNaming_NamedShape_OCWrappers_HeaderFile

// include the wrapped class
#include <TNaming_NamedShape.hxx>
#include "../Converter.h"

#include "../TDF/TDF_Attribute.h"

#include "TNaming_Evolution.h"


namespace OCNaroWrappers
{

ref class OCTNaming_Builder;
ref class OCTNaming_Iterator;
ref class OCTNaming_NewShapeIterator;
ref class OCTNaming_OldShapeIterator;
ref class OCStandard_GUID;
ref class OCTopoDS_Shape;
ref class OCTDF_Attribute;
ref class OCTDF_DeltaOnModification;
ref class OCTDF_DeltaOnRemoval;
ref class OCTDF_RelocationTable;
ref class OCTDF_DataSet;
ref class OCTDF_AttributeDelta;


//! The basis to define an attribute for the storage of <br>
//! topology and naming data. <br>
//! This attribute contains two parts: <br>
//! -   The type of evolution, a term of the <br>
//!   enumeration TNaming_Evolution <br>
//! -   A list of pairs of shapes called the "old" <br>
//!   shape and the "new" shape. The meaning <br>
//!   depends on the type of evolution. <br>
public ref class OCTNaming_NamedShape : OCTDF_Attribute {

protected:
  // dummy constructor;
  OCTNaming_NamedShape(OCDummy^) : OCTDF_Attribute((OCDummy^)nullptr) {};

public:

// constructor from native
OCTNaming_NamedShape(Handle(TNaming_NamedShape)* nativeHandle);

// Methods PUBLIC

//! class method <br>
//!          ============ <br>//! Returns the GUID for named shapes. <br>
static /*instead*/  OCStandard_GUID^ GetID() ;


OCTNaming_NamedShape();


 /*instead*/  System::Boolean IsEmpty() ;

//! Returns the shapes contained in <NS>. Returns a null <br>
//!          shape if IsEmpty. <br>
 /*instead*/  OCTopoDS_Shape^ Get() ;

//! Returns the Evolution of the attribute. <br>
 /*instead*/  OCTNaming_Evolution Evolution() ;

//! Returns the Version of the attribute. <br>
 /*instead*/  Standard_Integer Version() ;

//! Set the Version of the attribute. <br>
 /*instead*/  void SetVersion(Standard_Integer version) ;

//! Returns the ID of the attribute. <br>
virtual /*instead*/  OCStandard_GUID^ ID() ;

//! Copies  the attribute  contents into  a  new other <br>
//!          attribute. It is used by Backup(). <br>
virtual /*instead*/  OCTDF_Attribute^ BackupCopy() override;

//! Restores the contents from <anAttribute> into this <br>
//!          one. It is used when aborting a transaction. <br>
//! <br>
virtual /*instead*/  void Restore(OCNaroWrappers::OCTDF_Attribute^ anAttribute) ;

//! Makes a DeltaOnModification between <me> and <br>
//!         <anOldAttribute. <br>
virtual /*instead*/  OCTDF_DeltaOnModification^ DeltaOnModification(OCNaroWrappers::OCTDF_Attribute^ anOldAttribute) override;

//! Applies a DeltaOnModification to <me>. <br>
virtual /*instead*/  void DeltaOnModification(OCNaroWrappers::OCTDF_DeltaOnModification^ aDelta) override;

//! Makes a DeltaOnRemoval on <me> because <me> has <br>
//!         disappeared from the DS. <br>
virtual /*instead*/  OCTDF_DeltaOnRemoval^ DeltaOnRemoval() override;

//! Returns an new empty attribute from the good end <br>
//!          type. It is used by the copy algorithm. <br>
virtual /*instead*/  OCTDF_Attribute^ NewEmpty() ;

//! This method is different from the "Copy" one, <br>
//!          because it is used when copying an attribute from <br>
//!          a source structure into a target structure. This <br>
//!          method pastes the current attribute to the label <br>
//!          corresponding to the insertor. The pasted <br>
//!          attribute may be a brand new one or a new version <br>
//!          of the previous one. <br>
virtual /*instead*/  void Paste(OCNaroWrappers::OCTDF_Attribute^ intoAttribute, OCNaroWrappers::OCTDF_RelocationTable^ aRelocTationable) ;

//! Adds the directly referenced attributes and labels <br>
//!          to <aDataSet>. "Directly" means we have only to <br>
//!          look at the first level of references. <br>
virtual /*instead*/  void References(OCNaroWrappers::OCTDF_DataSet^ aDataSet) override;


virtual /*instead*/  void BeforeRemoval() override;

//! Something to do before applying <anAttDelta> <br>
virtual /*instead*/  System::Boolean BeforeUndo(OCNaroWrappers::OCTDF_AttributeDelta^ anAttDelta, System::Boolean forceIt) override;

//! Something to do after applying <anAttDelta>. <br>
virtual /*instead*/  System::Boolean AfterUndo(OCNaroWrappers::OCTDF_AttributeDelta^ anAttDelta, System::Boolean forceIt) override;

//! Dumps the attribute on <aStream>. <br>
virtual /*instead*/  Standard_OStream& Dump(Standard_OStream& anOS) override;

~OCTNaming_NamedShape()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
