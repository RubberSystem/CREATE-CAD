// File generated by CPPExt (MPV)
//
#ifndef _TNaming_Iterator_OCWrappers_HeaderFile
#define _TNaming_Iterator_OCWrappers_HeaderFile

// include native header
#include <TNaming_Iterator.hxx>
#include "../Converter.h"


#include "TNaming_Evolution.h"


namespace OCNaroWrappers
{

ref class OCTNaming_NewShapeIterator;
ref class OCTNaming_OldShapeIterator;
ref class OCTNaming_NamedShape;
ref class OCTDF_Label;
ref class OCTopoDS_Shape;


//! A tool to visit the contents of a named shape attribute. <br>
//! Pairs of shapes in the attribute are iterated, one <br>
//! being the pre-modification or the old shape, and <br>
//! the other the post-modification or the new shape. <br>
//! This allows you to have a full access to all <br>
//! contents of an attribute. If, on the other hand, you <br>
//! are only interested in topological entities stored <br>
//! in the attribute, you can use the functions <br>
//! GetShape and CurrentShape in TNaming_Tool. <br>
public ref class OCTNaming_Iterator  {

protected:
  TNaming_Iterator* nativeHandle;
  OCTNaming_Iterator(OCDummy^) {};

public:
  property TNaming_Iterator* Handle
  {
    TNaming_Iterator* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTNaming_Iterator(TNaming_Iterator* nativeHandle);

// Methods PUBLIC

//! Iterates on all  the history records in <br>
//!          <anAtt>. <br>
OCTNaming_Iterator(OCNaroWrappers::OCTNaming_NamedShape^ anAtt);

//! Iterates on all  the history records in <br>
//!          the current transaction <br>
OCTNaming_Iterator(OCNaroWrappers::OCTDF_Label^ aLabel);

//! Iterates on all  the history records in <br>
//!          the transaction <aTrans> <br>
OCTNaming_Iterator(OCNaroWrappers::OCTDF_Label^ aLabel, Standard_Integer aTrans);

//! Returns True if there is a current Item in <br>
//!          the iteration. <br>
 /*instead*/  System::Boolean More() ;

//! Moves the iteration to the next Item <br>
 /*instead*/  void Next() ;

//! Returns the old shape in this iterator object. <br>
//! This shape can be a null one. <br>
 /*instead*/  OCTopoDS_Shape^ OldShape() ;

//! Returns the new shape in this iterator object. <br>
 /*instead*/  OCTopoDS_Shape^ NewShape() ;

//! Returns true if the  new  shape is a modification  (split, <br>
//!          fuse,etc...) of the old shape. <br>
//! <br>
 /*instead*/  System::Boolean IsModification() ;


 /*instead*/  OCTNaming_Evolution Evolution() ;

~OCTNaming_Iterator()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
