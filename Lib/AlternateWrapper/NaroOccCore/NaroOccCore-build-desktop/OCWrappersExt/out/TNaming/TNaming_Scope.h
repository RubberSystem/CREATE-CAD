// File generated by CPPExt (MPV)
//
#ifndef _TNaming_Scope_OCWrappers_HeaderFile
#define _TNaming_Scope_OCWrappers_HeaderFile

// include native header
#include <TNaming_Scope.hxx>
#include "../Converter.h"


#include "../TDF/TDF_LabelMap.h"


namespace OCNaroWrappers
{

ref class OCTDF_LabelMap;
ref class OCTDF_Label;
ref class OCTopoDS_Shape;
ref class OCTNaming_NamedShape;


//! this class manage a scope of labels <br>
//!          =================================== <br>
public ref class OCTNaming_Scope  {

protected:
  TNaming_Scope* nativeHandle;
  OCTNaming_Scope(OCDummy^) {};

public:
  property TNaming_Scope* Handle
  {
    TNaming_Scope* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTNaming_Scope(TNaming_Scope* nativeHandle);

// Methods PUBLIC

//! WithValid = FALSE <br>
OCTNaming_Scope();

//! if <WithValid> the scope is defined by the map. If not <br>
//!          on the whole framework. <br>
OCTNaming_Scope(System::Boolean WithValid);

//! create a scope with a map. WithValid = TRUE. <br>
OCTNaming_Scope(OCNaroWrappers::OCTDF_LabelMap^ valid);


 /*instead*/  System::Boolean WithValid() ;


 /*instead*/  void WithValid(System::Boolean mode) ;


 /*instead*/  void ClearValid() ;


 /*instead*/  void Valid(OCNaroWrappers::OCTDF_Label^ L) ;


 /*instead*/  void ValidChildren(OCNaroWrappers::OCTDF_Label^ L, System::Boolean withroot) ;


 /*instead*/  void Unvalid(OCNaroWrappers::OCTDF_Label^ L) ;


 /*instead*/  void UnvalidChildren(OCNaroWrappers::OCTDF_Label^ L, System::Boolean withroot) ;


 /*instead*/  System::Boolean IsValid(OCNaroWrappers::OCTDF_Label^ L) ;


 /*instead*/  OCTDF_LabelMap^ GetValid() ;


 /*instead*/  OCTDF_LabelMap^ ChangeValid() ;

//!  Returns  the current  value of  <NS> according to the <br>
//!          Valid Scope. <br>
 /*instead*/  OCTopoDS_Shape^ CurrentShape(OCNaroWrappers::OCTNaming_NamedShape^ NS) ;

~OCTNaming_Scope()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
