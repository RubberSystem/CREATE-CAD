// File generated by CPPExt (MPV)
//
#ifndef _TNaming_CopyShape_OCWrappers_HeaderFile
#define _TNaming_CopyShape_OCWrappers_HeaderFile

// include native header
#include <TNaming_CopyShape.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTColStd_IndexedDataMapOfTransientTransient;
ref class OCTNaming_TranslateTool;
ref class OCTopLoc_Location;



public ref class OCTNaming_CopyShape  {

protected:
  TNaming_CopyShape* nativeHandle;
  OCTNaming_CopyShape(OCDummy^) {};

public:
  property TNaming_CopyShape* Handle
  {
    TNaming_CopyShape* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTNaming_CopyShape(TNaming_CopyShape* nativeHandle);

// Methods PUBLIC

//!      Makes  copy  a  set  of  shape(s),  using the  aMap <br>
static /*instead*/  void CopyTool(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCTColStd_IndexedDataMapOfTransientTransient^ aMap, OCNaroWrappers::OCTopoDS_Shape^ aResult) ;

//! Translates  a  Transient  shape(s)  to  Transient <br>
static /*instead*/  void Translate(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCTColStd_IndexedDataMapOfTransientTransient^ aMap, OCNaroWrappers::OCTopoDS_Shape^ aResult, OCNaroWrappers::OCTNaming_TranslateTool^ TrTool) ;

//! Translates a Topological  Location  to an  other  Top. <br>
//!          Location <br>
static /*instead*/  OCTopLoc_Location^ Translate(OCNaroWrappers::OCTopLoc_Location^ L, OCNaroWrappers::OCTColStd_IndexedDataMapOfTransientTransient^ aMap) ;

~OCTNaming_CopyShape()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
