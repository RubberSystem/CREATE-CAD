// File generated by CPPExt (MPV)
//
#ifndef _TNaming_NewShapeIterator_OCWrappers_HeaderFile
#define _TNaming_NewShapeIterator_OCWrappers_HeaderFile

// include native header
#include <TNaming_NewShapeIterator.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTNaming_Tool;
ref class OCTNaming_Name;
ref class OCTNaming_Naming;
ref class OCTopoDS_Shape;
ref class OCTNaming_UsedShapes;
ref class OCTDF_Label;
ref class OCTNaming_Iterator;
ref class OCTNaming_NamedShape;


//! Iterates on all the descendants of a shape <br>
public ref class OCTNaming_NewShapeIterator  {

protected:
  TNaming_NewShapeIterator* nativeHandle;
  OCTNaming_NewShapeIterator(OCDummy^) {};

public:
  property TNaming_NewShapeIterator* Handle
  {
    TNaming_NewShapeIterator* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTNaming_NewShapeIterator(TNaming_NewShapeIterator* nativeHandle);

// Methods PUBLIC


OCTNaming_NewShapeIterator(OCNaroWrappers::OCTopoDS_Shape^ aShape, Standard_Integer Transaction, OCNaroWrappers::OCTDF_Label^ access);


OCTNaming_NewShapeIterator(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCTDF_Label^ access);

//! Iterates from the current Shape in <anIterator> <br>
OCTNaming_NewShapeIterator(OCNaroWrappers::OCTNaming_NewShapeIterator^ anIterator);

//! Iterates from the current Shape in <anIterator> <br>
OCTNaming_NewShapeIterator(OCNaroWrappers::OCTNaming_Iterator^ anIterator);


 /*instead*/  System::Boolean More() ;


 /*instead*/  void Next() ;


 /*instead*/  OCTDF_Label^ Label() ;


 /*instead*/  OCTNaming_NamedShape^ NamedShape() ;

//!  Warning! Can be a Null Shape if a descendant is deleted. <br>
 /*instead*/  OCTopoDS_Shape^ Shape() ;

//! True if the new  shape is a modification  (split, <br>
//!          fuse,etc...) of the old shape. <br>
 /*instead*/  System::Boolean IsModification() ;

~OCTNaming_NewShapeIterator()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
