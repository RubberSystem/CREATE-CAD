// File generated by CPPExt (CPP file)
//

#include "TNaming_Localizer.h"
#include "../Converter.h"
#include "TNaming_UsedShapes.h"
#include "../TopTools/TopTools_MapOfShape.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_IndexedDataMapOfShapeListOfShape.h"
#include "../TDF/TDF_Label.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "TNaming_ListOfNamedShape.h"
#include "TNaming_NamedShape.h"
#include "TNaming_MapOfNamedShape.h"


using namespace OCNaroWrappers;

OCTNaming_Localizer::OCTNaming_Localizer(TNaming_Localizer* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTNaming_Localizer::OCTNaming_Localizer() 
{
  nativeHandle = new TNaming_Localizer();
}

 void OCTNaming_Localizer::Init(OCNaroWrappers::OCTNaming_UsedShapes^ US, Standard_Integer CurTrans)
{
  ((TNaming_Localizer*)nativeHandle)->Init(*((Handle_TNaming_UsedShapes*)US->Handle), CurTrans);
}

OCTopTools_MapOfShape^ OCTNaming_Localizer::SubShapes(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum Type)
{
  TopTools_MapOfShape* tmp = new TopTools_MapOfShape(0);
  *tmp = ((TNaming_Localizer*)nativeHandle)->SubShapes(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)Type);
  return gcnew OCTopTools_MapOfShape(tmp);
}

OCTopTools_IndexedDataMapOfShapeListOfShape^ OCTNaming_Localizer::Ancestors(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum Type)
{
  TopTools_IndexedDataMapOfShapeListOfShape* tmp = new TopTools_IndexedDataMapOfShapeListOfShape(0);
  *tmp = ((TNaming_Localizer*)nativeHandle)->Ancestors(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)Type);
  return gcnew OCTopTools_IndexedDataMapOfShapeListOfShape(tmp);
}

 void OCTNaming_Localizer::FindFeaturesInAncestors(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopoDS_Shape^ In, OCNaroWrappers::OCTopTools_MapOfShape^ AncInFeatures)
{
  ((TNaming_Localizer*)nativeHandle)->FindFeaturesInAncestors(*((TopoDS_Shape*)S->Handle), *((TopoDS_Shape*)In->Handle), *((TopTools_MapOfShape*)AncInFeatures->Handle));
}

 void OCTNaming_Localizer::GoBack(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTDF_Label^ Lab, OCTNaming_Evolution Evol, OCNaroWrappers::OCTopTools_ListOfShape^ OldS, OCNaroWrappers::OCTNaming_ListOfNamedShape^ OldLab)
{
  ((TNaming_Localizer*)nativeHandle)->GoBack(*((TopoDS_Shape*)S->Handle), *((TDF_Label*)Lab->Handle), (TNaming_Evolution)Evol, *((TopTools_ListOfShape*)OldS->Handle), *((TNaming_ListOfNamedShape*)OldLab->Handle));
}

 void OCTNaming_Localizer::Backward(OCNaroWrappers::OCTNaming_NamedShape^ NS, OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTNaming_MapOfNamedShape^ Primitives, OCNaroWrappers::OCTopTools_MapOfShape^ ValidShapes)
{
  ((TNaming_Localizer*)nativeHandle)->Backward(*((Handle_TNaming_NamedShape*)NS->Handle), *((TopoDS_Shape*)S->Handle), *((TNaming_MapOfNamedShape*)Primitives->Handle), *((TopTools_MapOfShape*)ValidShapes->Handle));
}

 void OCTNaming_Localizer::FindNeighbourg(OCNaroWrappers::OCTopoDS_Shape^ Cont, OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_MapOfShape^ Neighbourg)
{
  ((TNaming_Localizer*)nativeHandle)->FindNeighbourg(*((TopoDS_Shape*)Cont->Handle), *((TopoDS_Shape*)S->Handle), *((TopTools_MapOfShape*)Neighbourg->Handle));
}

 System::Boolean OCTNaming_Localizer::IsNew(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTNaming_NamedShape^ NS)
{
  return OCConverter::StandardBooleanToBoolean(TNaming_Localizer::IsNew(*((TopoDS_Shape*)S->Handle), *((Handle_TNaming_NamedShape*)NS->Handle)));
}

 void OCTNaming_Localizer::FindGenerator(OCNaroWrappers::OCTNaming_NamedShape^ NS, OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ theListOfGenerators)
{
  TNaming_Localizer::FindGenerator(*((Handle_TNaming_NamedShape*)NS->Handle), *((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)theListOfGenerators->Handle));
}

 void OCTNaming_Localizer::FindShapeContext(OCNaroWrappers::OCTNaming_NamedShape^ NS, OCNaroWrappers::OCTopoDS_Shape^ theS, OCNaroWrappers::OCTopoDS_Shape^ theSC)
{
  TNaming_Localizer::FindShapeContext(*((Handle_TNaming_NamedShape*)NS->Handle), *((TopoDS_Shape*)theS->Handle), *((TopoDS_Shape*)theSC->Handle));
}


