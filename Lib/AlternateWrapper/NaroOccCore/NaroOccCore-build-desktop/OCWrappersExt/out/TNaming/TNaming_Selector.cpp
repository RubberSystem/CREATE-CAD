// File generated by CPPExt (CPP file)
//

#include "TNaming_Selector.h"
#include "../Converter.h"
#include "../TDF/TDF_Label.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TNaming_NamedShape.h"
#include "../TDF/TDF_LabelMap.h"
#include "../TDF/TDF_AttributeMap.h"


using namespace OCNaroWrappers;

OCTNaming_Selector::OCTNaming_Selector(TNaming_Selector* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 System::Boolean OCTNaming_Selector::IsIdentified(OCNaroWrappers::OCTDF_Label^ access, OCNaroWrappers::OCTopoDS_Shape^ selection, OCNaroWrappers::OCTNaming_NamedShape^ NS, System::Boolean Geometry)
{
  return OCConverter::StandardBooleanToBoolean(TNaming_Selector::IsIdentified(*((TDF_Label*)access->Handle), *((TopoDS_Shape*)selection->Handle), *((Handle_TNaming_NamedShape*)NS->Handle), OCConverter::BooleanToStandardBoolean(Geometry)));
}

OCTNaming_Selector::OCTNaming_Selector(OCNaroWrappers::OCTDF_Label^ aLabel) 
{
  nativeHandle = new TNaming_Selector(*((TDF_Label*)aLabel->Handle));
}

 System::Boolean OCTNaming_Selector::Select(OCNaroWrappers::OCTopoDS_Shape^ Selection, OCNaroWrappers::OCTopoDS_Shape^ Context, System::Boolean Geometry, System::Boolean KeepOrientatation)
{
  return OCConverter::StandardBooleanToBoolean(((TNaming_Selector*)nativeHandle)->Select(*((TopoDS_Shape*)Selection->Handle), *((TopoDS_Shape*)Context->Handle), OCConverter::BooleanToStandardBoolean(Geometry), OCConverter::BooleanToStandardBoolean(KeepOrientatation)));
}

 System::Boolean OCTNaming_Selector::Select(OCNaroWrappers::OCTopoDS_Shape^ Selection, System::Boolean Geometry, System::Boolean KeepOrientatation)
{
  return OCConverter::StandardBooleanToBoolean(((TNaming_Selector*)nativeHandle)->Select(*((TopoDS_Shape*)Selection->Handle), OCConverter::BooleanToStandardBoolean(Geometry), OCConverter::BooleanToStandardBoolean(KeepOrientatation)));
}

 System::Boolean OCTNaming_Selector::Solve(OCNaroWrappers::OCTDF_LabelMap^ Valid)
{
  return OCConverter::StandardBooleanToBoolean(((TNaming_Selector*)nativeHandle)->Solve(*((TDF_LabelMap*)Valid->Handle)));
}

 void OCTNaming_Selector::Arguments(OCNaroWrappers::OCTDF_AttributeMap^ args)
{
  ((TNaming_Selector*)nativeHandle)->Arguments(*((TDF_AttributeMap*)args->Handle));
}

OCTNaming_NamedShape^ OCTNaming_Selector::NamedShape()
{
  Handle(TNaming_NamedShape) tmp = ((TNaming_Selector*)nativeHandle)->NamedShape();
  return gcnew OCTNaming_NamedShape(&tmp);
}


