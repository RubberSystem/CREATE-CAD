// File generated by CPPExt (CPP file)
//

#include "TNaming_ShapesSet.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_MapOfShape.h"


using namespace OCNaroWrappers;

OCTNaming_ShapesSet::OCTNaming_ShapesSet(TNaming_ShapesSet* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTNaming_ShapesSet::OCTNaming_ShapesSet() 
{
  nativeHandle = new TNaming_ShapesSet();
}

OCTNaming_ShapesSet::OCTNaming_ShapesSet(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum Type) 
{
  nativeHandle = new TNaming_ShapesSet(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)Type);
}

 void OCTNaming_ShapesSet::Clear()
{
  ((TNaming_ShapesSet*)nativeHandle)->Clear();
}

 System::Boolean OCTNaming_ShapesSet::Add(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TNaming_ShapesSet*)nativeHandle)->Add(*((TopoDS_Shape*)S->Handle)));
}

 System::Boolean OCTNaming_ShapesSet::Contains(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TNaming_ShapesSet*)nativeHandle)->Contains(*((TopoDS_Shape*)S->Handle)));
}

 System::Boolean OCTNaming_ShapesSet::Remove(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TNaming_ShapesSet*)nativeHandle)->Remove(*((TopoDS_Shape*)S->Handle)));
}

 void OCTNaming_ShapesSet::Add(OCNaroWrappers::OCTNaming_ShapesSet^ Shapes)
{
  ((TNaming_ShapesSet*)nativeHandle)->Add(*((TNaming_ShapesSet*)Shapes->Handle));
}

 void OCTNaming_ShapesSet::Filter(OCNaroWrappers::OCTNaming_ShapesSet^ Shapes)
{
  ((TNaming_ShapesSet*)nativeHandle)->Filter(*((TNaming_ShapesSet*)Shapes->Handle));
}

 void OCTNaming_ShapesSet::Remove(OCNaroWrappers::OCTNaming_ShapesSet^ Shapes)
{
  ((TNaming_ShapesSet*)nativeHandle)->Remove(*((TNaming_ShapesSet*)Shapes->Handle));
}

 System::Boolean OCTNaming_ShapesSet::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TNaming_ShapesSet*)nativeHandle)->IsEmpty());
}

 Standard_Integer OCTNaming_ShapesSet::NbShapes()
{
  return ((TNaming_ShapesSet*)nativeHandle)->NbShapes();
}

OCTopTools_MapOfShape^ OCTNaming_ShapesSet::ChangeMap()
{
  TopTools_MapOfShape* tmp = new TopTools_MapOfShape(0);
  *tmp = ((TNaming_ShapesSet*)nativeHandle)->ChangeMap();
  return gcnew OCTopTools_MapOfShape(tmp);
}

OCTopTools_MapOfShape^ OCTNaming_ShapesSet::Map()
{
  TopTools_MapOfShape* tmp = new TopTools_MapOfShape(0);
  *tmp = ((TNaming_ShapesSet*)nativeHandle)->Map();
  return gcnew OCTopTools_MapOfShape(tmp);
}


