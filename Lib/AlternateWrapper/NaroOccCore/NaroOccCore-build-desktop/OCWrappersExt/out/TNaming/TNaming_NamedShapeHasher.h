// File generated by CPPExt (MPV)
//
#ifndef _TNaming_NamedShapeHasher_OCWrappers_HeaderFile
#define _TNaming_NamedShapeHasher_OCWrappers_HeaderFile

// include native header
#include <TNaming_NamedShapeHasher.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTNaming_NamedShape;



public ref class OCTNaming_NamedShapeHasher  {

protected:
  TNaming_NamedShapeHasher* nativeHandle;
  OCTNaming_NamedShapeHasher(OCDummy^) {};

public:
  property TNaming_NamedShapeHasher* Handle
  {
    TNaming_NamedShapeHasher* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTNaming_NamedShapeHasher(TNaming_NamedShapeHasher* nativeHandle);

// Methods PUBLIC


static /*instead*/  Standard_Integer HashCode(OCNaroWrappers::OCTNaming_NamedShape^ K, Standard_Integer Upper) ;


static /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCTNaming_NamedShape^ K1, OCNaroWrappers::OCTNaming_NamedShape^ K2) ;

~OCTNaming_NamedShapeHasher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
