// File generated by CPPExt (MPV)
//
#ifndef _TNaming_Tool_OCWrappers_HeaderFile
#define _TNaming_Tool_OCWrappers_HeaderFile

// include native header
#include <TNaming_Tool.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTNaming_Localizer;
ref class OCTNaming_NamedShape;
ref class OCTNaming_OldShapeIterator;
ref class OCTopoDS_Shape;
ref class OCTDF_LabelMap;
ref class OCTDF_Label;
ref class OCTNaming_MapOfNamedShape;
ref class OCTDF_LabelList;
ref class OCTNaming_UsedShapes;
ref class OCTopTools_MapOfShape;


//! A tool to get information on the topology of a <br>
//! named shape attribute. <br>
//! This information is typically a TopoDS_Shape object. <br>
//!  Using this tool, relations between named shapes <br>
//!  are also accessible. <br>
public ref class OCTNaming_Tool  {

protected:
  TNaming_Tool* nativeHandle;
  OCTNaming_Tool(OCDummy^) {};

public:
  property TNaming_Tool* Handle
  {
    TNaming_Tool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTNaming_Tool(TNaming_Tool* nativeHandle);

// Methods PUBLIC

//! Returns the last Modification of <NS>. <br>
//! Returns the shape CurrentShape contained in <br>
//! the named shape attribute NS. <br>
//! CurrentShape is the current state of the entities <br>
//! if they have been modified in other attributes of the same data structure. <br>
//! Each call to this function creates a new compound. <br>
static /*instead*/  OCTopoDS_Shape^ CurrentShape(OCNaroWrappers::OCTNaming_NamedShape^ NS) ;

//! Returns the shape CurrentShape contained in <br>
//! the named shape attribute NS, and present in <br>
//! the updated attribute map Updated. <br>
//! CurrentShape is the current state of the entities <br>
//! if they have been modified in other attributes of the same data structure. <br>
//! Each call to this function creates a new compound. <br>
//! Warning <br>
//! Only the contents of Updated are searched.R <br>
static /*instead*/  OCTopoDS_Shape^ CurrentShape(OCNaroWrappers::OCTNaming_NamedShape^ NS, OCNaroWrappers::OCTDF_LabelMap^ Updated) ;

//! Returns the NamedShape of the last Modification of <NS>. <br>
//!          This shape is identified by a label. <br>
static /*instead*/  OCTNaming_NamedShape^ CurrentNamedShape(OCNaroWrappers::OCTNaming_NamedShape^ NS, OCNaroWrappers::OCTDF_LabelMap^ Updated) ;

//! Returns NamedShape the last Modification of <NS>. <br>
static /*instead*/  OCTNaming_NamedShape^ CurrentNamedShape(OCNaroWrappers::OCTNaming_NamedShape^ NS) ;

//! Returns the named shape attribute defined by <br>
//! the shape aShape and the label anAccess. <br>
//! This attribute is returned as a new shape. <br>
//! You call this function, if you need to create a <br>
//! topological attribute for existing data. <br>
//! Example <br>
//! class MyPkg_MyClass <br>
//!  { <br>
//!  public: Standard_Boolean <br>
//! SameEdge(const <br>
//! Handle(OCafTest_Line)& , const <br>
//! Handle(CafTest_Line)& ); <br>
//! }; <br>
static /*instead*/  OCTNaming_NamedShape^ NamedShape(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCTDF_Label^ anAcces) ;

//! Returns the entities stored in the named shape attribute NS. <br>
//! If there is only one old-new pair, the new shape <br>
//! is returned. Otherwise, a Compound is returned. <br>
//! This compound is made out of all the new shapes found. <br>
//! Each call to this function creates a new compound. <br>
static /*instead*/  OCTopoDS_Shape^ GetShape(OCNaroWrappers::OCTNaming_NamedShape^ NS) ;

//! Returns the shape contained as OldShape in <NS> <br>
static /*instead*/  OCTopoDS_Shape^ OriginalShape(OCNaroWrappers::OCTNaming_NamedShape^ NS) ;

//!  Returns the shape generated from S or by a <br>
//! modification of S and contained in the named <br>
//! shape Generation. <br>
static /*instead*/  OCTopoDS_Shape^ GeneratedShape(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTNaming_NamedShape^ Generation) ;


static /*instead*/  void Collect(OCNaroWrappers::OCTNaming_NamedShape^ NS, OCNaroWrappers::OCTNaming_MapOfNamedShape^ Labels, System::Boolean OnlyModif) ;

//! Returns True if <aShape> appears under a label.(DP) <br>
static /*instead*/  System::Boolean HasLabel(OCNaroWrappers::OCTDF_Label^ access, OCNaroWrappers::OCTopoDS_Shape^ aShape) ;

//!  Returns  the label  of   the first apparition  of <br>
//!          <aShape>.  Transdef  is a value of the transaction <br>
//!          of the first apparition of <aShape>. <br>
static /*instead*/  OCTDF_Label^ Label(OCNaroWrappers::OCTDF_Label^ access, OCNaroWrappers::OCTopoDS_Shape^ aShape, Standard_Integer& TransDef) ;


//! Returns the shape created from the shape <br>
//! aShape contained in the attribute anAcces. <br>
static /*instead*/  OCTopoDS_Shape^ InitialShape(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCTDF_Label^ anAcces, OCNaroWrappers::OCTDF_LabelList^ Labels) ;

//! Returns the last transaction where the creation of S <br>
//!          is valid. <br>
static /*instead*/  Standard_Integer ValidUntil(OCNaroWrappers::OCTDF_Label^ access, OCNaroWrappers::OCTopoDS_Shape^ S) ;

//! Returns the current shape (a Wire or a Shell) built (in the data framework) <br>
//!          from the the shapes of the argument named shape. <br>
//!          It is used for IDENTITY name type computation. <br>
static /*instead*/  void FindShape(OCNaroWrappers::OCTDF_LabelMap^ Valid, OCNaroWrappers::OCTDF_LabelMap^ Forbiden, OCNaroWrappers::OCTNaming_NamedShape^ Arg, OCNaroWrappers::OCTopoDS_Shape^ S) ;

~OCTNaming_Tool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
