// File generated by CPPExt (CPP file)
//

#include "HatchGen_PointOnHatching.h"
#include "../Converter.h"
#include "../IntRes2d/IntRes2d_IntersectionPoint.h"
#include "HatchGen_PointOnElement.h"


using namespace OCNaroWrappers;

OCHatchGen_PointOnHatching::OCHatchGen_PointOnHatching(HatchGen_PointOnHatching* nativeHandle) : OCHatchGen_IntersectionPoint((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCHatchGen_PointOnHatching::OCHatchGen_PointOnHatching() : OCHatchGen_IntersectionPoint((OCDummy^)nullptr)

{
  nativeHandle = new HatchGen_PointOnHatching();
}

OCHatchGen_PointOnHatching::OCHatchGen_PointOnHatching(OCNaroWrappers::OCHatchGen_PointOnHatching^ Point) : OCHatchGen_IntersectionPoint((OCDummy^)nullptr)

{
  nativeHandle = new HatchGen_PointOnHatching(*((HatchGen_PointOnHatching*)Point->Handle));
}

OCHatchGen_PointOnHatching::OCHatchGen_PointOnHatching(OCNaroWrappers::OCIntRes2d_IntersectionPoint^ Point) : OCHatchGen_IntersectionPoint((OCDummy^)nullptr)

{
  nativeHandle = new HatchGen_PointOnHatching(*((IntRes2d_IntersectionPoint*)Point->Handle));
}

 void OCHatchGen_PointOnHatching::Delete()
{
  ((HatchGen_PointOnHatching*)nativeHandle)->Delete();
}

 void OCHatchGen_PointOnHatching::AddPoint(OCNaroWrappers::OCHatchGen_PointOnElement^ Point, Standard_Real Confusion)
{
  ((HatchGen_PointOnHatching*)nativeHandle)->AddPoint(*((HatchGen_PointOnElement*)Point->Handle), Confusion);
}

 Standard_Integer OCHatchGen_PointOnHatching::NbPoints()
{
  return ((HatchGen_PointOnHatching*)nativeHandle)->NbPoints();
}

OCHatchGen_PointOnElement^ OCHatchGen_PointOnHatching::Point(Standard_Integer Index)
{
  HatchGen_PointOnElement* tmp = new HatchGen_PointOnElement();
  *tmp = ((HatchGen_PointOnHatching*)nativeHandle)->Point(Index);
  return gcnew OCHatchGen_PointOnElement(tmp);
}

 void OCHatchGen_PointOnHatching::RemPoint(Standard_Integer Index)
{
  ((HatchGen_PointOnHatching*)nativeHandle)->RemPoint(Index);
}

 void OCHatchGen_PointOnHatching::ClrPoints()
{
  ((HatchGen_PointOnHatching*)nativeHandle)->ClrPoints();
}

 System::Boolean OCHatchGen_PointOnHatching::IsLower(OCNaroWrappers::OCHatchGen_PointOnHatching^ Point, Standard_Real Confusion)
{
  return OCConverter::StandardBooleanToBoolean(((HatchGen_PointOnHatching*)nativeHandle)->IsLower(*((HatchGen_PointOnHatching*)Point->Handle), Confusion));
}

 System::Boolean OCHatchGen_PointOnHatching::IsEqual(OCNaroWrappers::OCHatchGen_PointOnHatching^ Point, Standard_Real Confusion)
{
  return OCConverter::StandardBooleanToBoolean(((HatchGen_PointOnHatching*)nativeHandle)->IsEqual(*((HatchGen_PointOnHatching*)Point->Handle), Confusion));
}

 System::Boolean OCHatchGen_PointOnHatching::IsGreater(OCNaroWrappers::OCHatchGen_PointOnHatching^ Point, Standard_Real Confusion)
{
  return OCConverter::StandardBooleanToBoolean(((HatchGen_PointOnHatching*)nativeHandle)->IsGreater(*((HatchGen_PointOnHatching*)Point->Handle), Confusion));
}

 void OCHatchGen_PointOnHatching::Dump(Standard_Integer Index)
{
  ((HatchGen_PointOnHatching*)nativeHandle)->Dump(Index);
}


