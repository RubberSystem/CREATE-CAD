// File generated by CPPExt (MPV)
//
#ifndef _HatchGen_PointOnElement_OCWrappers_HeaderFile
#define _HatchGen_PointOnElement_OCWrappers_HeaderFile

// include native header
#include <HatchGen_PointOnElement.hxx>
#include "../Converter.h"

#include "HatchGen_IntersectionPoint.h"

#include "HatchGen_IntersectionType.h"
#include "HatchGen_IntersectionPoint.h"


namespace OCNaroWrappers
{

ref class OCIntRes2d_IntersectionPoint;



public ref class OCHatchGen_PointOnElement  : public OCHatchGen_IntersectionPoint {

protected:
  // dummy constructor;
  OCHatchGen_PointOnElement(OCDummy^) : OCHatchGen_IntersectionPoint((OCDummy^)nullptr) {};

public:

// constructor from native
OCHatchGen_PointOnElement(HatchGen_PointOnElement* nativeHandle);

// Methods PUBLIC

//!---Purpose; Creates an empty point on element <br>
OCHatchGen_PointOnElement();

//! Creates a point from an other. <br>
OCHatchGen_PointOnElement(OCNaroWrappers::OCHatchGen_PointOnElement^ Point);

//! Creates a point from an intersection point. <br>
OCHatchGen_PointOnElement(OCNaroWrappers::OCIntRes2d_IntersectionPoint^ Point);

//! Sets the intersection type at this point. <br>
 /*instead*/  void SetIntersectionType(OCHatchGen_IntersectionType Type) ;

//! Returns the intersection type at this point. <br>
 /*instead*/  OCHatchGen_IntersectionType IntersectionType() ;

//! Tests if the point is identical to an other. <br>
//!          That is to say : <br>
//!            P1.myIndex  = P2.myIndex <br>
//!            Abs (P1.myParam - P2.myParam) <= Confusion <br>
//!            P1.myPosit  = P2.myPosit <br>
//!            P1.myBefore = P2.myBefore <br>
//!            P1.myAfter  = P2.myAfter <br>
//!            P1.mySegBeg = P2.mySegBeg <br>
//!            P1.mySegEnd = P2.mySegEnd <br>
//!            P1.myType   = P2.myType <br>
 /*instead*/  System::Boolean IsIdentical(OCNaroWrappers::OCHatchGen_PointOnElement^ Point, Standard_Real Confusion) ;

//! Tests if the point is different from an other. <br>
 /*instead*/  System::Boolean IsDifferent(OCNaroWrappers::OCHatchGen_PointOnElement^ Point, Standard_Real Confusion) ;

//! Dump of the point on element. <br>
 /*instead*/  void Dump(Standard_Integer Index) ;

~OCHatchGen_PointOnElement()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
