// File generated by CPPExt (CPP file)
//

#include "HatchGen_IntersectionPoint.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCHatchGen_IntersectionPoint::OCHatchGen_IntersectionPoint(HatchGen_IntersectionPoint* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 void OCHatchGen_IntersectionPoint::SetIndex(Standard_Integer Index)
{
  ((HatchGen_IntersectionPoint*)nativeHandle)->SetIndex(Index);
}

 Standard_Integer OCHatchGen_IntersectionPoint::Index()
{
  return ((HatchGen_IntersectionPoint*)nativeHandle)->Index();
}

 void OCHatchGen_IntersectionPoint::SetParameter(Standard_Real Parameter)
{
  ((HatchGen_IntersectionPoint*)nativeHandle)->SetParameter(Parameter);
}

 Standard_Real OCHatchGen_IntersectionPoint::Parameter()
{
  return ((HatchGen_IntersectionPoint*)nativeHandle)->Parameter();
}

 void OCHatchGen_IntersectionPoint::SetPosition(OCTopAbs_Orientation Position)
{
  ((HatchGen_IntersectionPoint*)nativeHandle)->SetPosition((TopAbs_Orientation)Position);
}

 OCTopAbs_Orientation OCHatchGen_IntersectionPoint::Position()
{
  return (OCTopAbs_Orientation)(((HatchGen_IntersectionPoint*)nativeHandle)->Position());
}

 void OCHatchGen_IntersectionPoint::SetStateBefore(OCTopAbs_State State)
{
  ((HatchGen_IntersectionPoint*)nativeHandle)->SetStateBefore((TopAbs_State)State);
}

 OCTopAbs_State OCHatchGen_IntersectionPoint::StateBefore()
{
  return (OCTopAbs_State)(((HatchGen_IntersectionPoint*)nativeHandle)->StateBefore());
}

 void OCHatchGen_IntersectionPoint::SetStateAfter(OCTopAbs_State State)
{
  ((HatchGen_IntersectionPoint*)nativeHandle)->SetStateAfter((TopAbs_State)State);
}

 OCTopAbs_State OCHatchGen_IntersectionPoint::StateAfter()
{
  return (OCTopAbs_State)(((HatchGen_IntersectionPoint*)nativeHandle)->StateAfter());
}

 void OCHatchGen_IntersectionPoint::SetSegmentBeginning(System::Boolean State)
{
  ((HatchGen_IntersectionPoint*)nativeHandle)->SetSegmentBeginning(OCConverter::BooleanToStandardBoolean(State));
}

 System::Boolean OCHatchGen_IntersectionPoint::SegmentBeginning()
{
  return OCConverter::StandardBooleanToBoolean(((HatchGen_IntersectionPoint*)nativeHandle)->SegmentBeginning());
}

 void OCHatchGen_IntersectionPoint::SetSegmentEnd(System::Boolean State)
{
  ((HatchGen_IntersectionPoint*)nativeHandle)->SetSegmentEnd(OCConverter::BooleanToStandardBoolean(State));
}

 System::Boolean OCHatchGen_IntersectionPoint::SegmentEnd()
{
  return OCConverter::StandardBooleanToBoolean(((HatchGen_IntersectionPoint*)nativeHandle)->SegmentEnd());
}


