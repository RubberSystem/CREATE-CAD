// File generated by CPPExt (MPV)
//
#ifndef _HatchGen_PointOnHatching_OCWrappers_HeaderFile
#define _HatchGen_PointOnHatching_OCWrappers_HeaderFile

// include native header
#include <HatchGen_PointOnHatching.hxx>
#include "../Converter.h"

#include "HatchGen_IntersectionPoint.h"

#include "HatchGen_PointsOnElement.h"
#include "HatchGen_IntersectionPoint.h"


namespace OCNaroWrappers
{

ref class OCIntRes2d_IntersectionPoint;
ref class OCHatchGen_PointOnElement;



public ref class OCHatchGen_PointOnHatching  : public OCHatchGen_IntersectionPoint {

protected:
  // dummy constructor;
  OCHatchGen_PointOnHatching(OCDummy^) : OCHatchGen_IntersectionPoint((OCDummy^)nullptr) {};

public:

// constructor from native
OCHatchGen_PointOnHatching(HatchGen_PointOnHatching* nativeHandle);

// Methods PUBLIC

//! Creates an empty point. <br>
OCHatchGen_PointOnHatching();

//! Creates a point from an other. <br>
OCHatchGen_PointOnHatching(OCNaroWrappers::OCHatchGen_PointOnHatching^ Point);

//! Creates a point from an intersection point. <br>
OCHatchGen_PointOnHatching(OCNaroWrappers::OCIntRes2d_IntersectionPoint^ Point);

//! linux porting <br>
virtual /*instead*/  void Delete() ;

//! Adds a point on element to the point. <br>
 /*instead*/  void AddPoint(OCNaroWrappers::OCHatchGen_PointOnElement^ Point, Standard_Real Confusion) ;

//! Returns the number of elements intersecting the <br>
//!          hatching at this point. <br>
 /*instead*/  Standard_Integer NbPoints() ;

//! Returns the Index-th point on element of the point. <br>
//!          The exception OutOfRange is raised if <br>
//!          Index > NbPoints. <br>
 /*instead*/  OCHatchGen_PointOnElement^ Point(Standard_Integer Index) ;

//! Removes the Index-th point on element of the point. <br>
//!          The exception OutOfRange is raised if <br>
//!          Index > NbPoints. <br>
 /*instead*/  void RemPoint(Standard_Integer Index) ;

//! Removes all the points on element of the point. <br>
 /*instead*/  void ClrPoints() ;

//! Tests if the point is lower than an other. <br>
//!          A point on hatching P1 is said to be lower than an <br>
//!          other P2 if : <br>
//!            P2.myParam - P1.myParam > Confusion <br>
 /*instead*/  System::Boolean IsLower(OCNaroWrappers::OCHatchGen_PointOnHatching^ Point, Standard_Real Confusion) ;

//! Tests if the  point is equal to an other. <br>
//!          A  point on hatching P1 is said to be equal to an <br>
//!          other P2 if : <br>
//!            | P2.myParam - P1.myParam | <= Confusion <br>
 /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCHatchGen_PointOnHatching^ Point, Standard_Real Confusion) ;

//! Tests if the point is greater than an other. <br>
//!          A point on hatching P1 is said to be greater than an <br>
//!          other P2 if : <br>
//!            P1.myParam - P2.myParam > Confusion <br>
 /*instead*/  System::Boolean IsGreater(OCNaroWrappers::OCHatchGen_PointOnHatching^ Point, Standard_Real Confusion) ;

//! Dump of the point. <br>
 /*instead*/  void Dump(Standard_Integer Index) ;

~OCHatchGen_PointOnHatching()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
