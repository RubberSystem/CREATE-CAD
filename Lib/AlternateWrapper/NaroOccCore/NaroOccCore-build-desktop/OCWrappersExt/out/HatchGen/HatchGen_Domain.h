// File generated by CPPExt (MPV)
//
#ifndef _HatchGen_Domain_OCWrappers_HeaderFile
#define _HatchGen_Domain_OCWrappers_HeaderFile

// include native header
#include <HatchGen_Domain.hxx>
#include "../Converter.h"


#include "HatchGen_PointOnHatching.h"


namespace OCNaroWrappers
{

ref class OCHatchGen_PointOnHatching;



public ref class OCHatchGen_Domain  {

protected:
  HatchGen_Domain* nativeHandle;
  OCHatchGen_Domain(OCDummy^) {};

public:
  property HatchGen_Domain* Handle
  {
    HatchGen_Domain* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCHatchGen_Domain(HatchGen_Domain* nativeHandle);

// Methods PUBLIC

//! Creates an infinite domain. <br>
OCHatchGen_Domain();

//! Creates a domain for the curve associated to a hatching. <br>
OCHatchGen_Domain(OCNaroWrappers::OCHatchGen_PointOnHatching^ P1, OCNaroWrappers::OCHatchGen_PointOnHatching^ P2);

//! Creates a semi-infinite domain for the curve associated <br>
//!          to a hatching. The `First' flag means that the given <br>
//!          point is the first one. <br>
OCHatchGen_Domain(OCNaroWrappers::OCHatchGen_PointOnHatching^ P, System::Boolean First);

//! Sets the first and the second points of the domain. <br>
 /*instead*/  void SetPoints(OCNaroWrappers::OCHatchGen_PointOnHatching^ P1, OCNaroWrappers::OCHatchGen_PointOnHatching^ P2) ;

//! Sets the first and the second points of the domain <br>
//!          as the infinite. <br>
 /*instead*/  void SetPoints() ;

//! Sets the first point of the domain. <br>
 /*instead*/  void SetFirstPoint(OCNaroWrappers::OCHatchGen_PointOnHatching^ P) ;

//! Sets the first point of the domain at the <br>
//!          infinite. <br>
 /*instead*/  void SetFirstPoint() ;

//! Sets the second point of the domain. <br>
 /*instead*/  void SetSecondPoint(OCNaroWrappers::OCHatchGen_PointOnHatching^ P) ;

//! Sets the second point of the domain at the <br>
//!          infinite. <br>
 /*instead*/  void SetSecondPoint() ;

//! Returns True if the domain has a first point. <br>
 /*instead*/  System::Boolean HasFirstPoint() ;

//! Returns the first point of the domain. <br>
//!          The exception DomainError is raised if <br>
//!          HasFirstPoint returns False. <br>
 /*instead*/  OCHatchGen_PointOnHatching^ FirstPoint() ;

//! Returns True if the domain has a second point. <br>
 /*instead*/  System::Boolean HasSecondPoint() ;

//! Returns the second point of the domain. <br>
//!          The exception DomainError is raised if <br>
//!          HasSecondPoint returns False. <br>
 /*instead*/  OCHatchGen_PointOnHatching^ SecondPoint() ;

//! Dump of the domain. <br>
 /*instead*/  void Dump(Standard_Integer Index) ;

~OCHatchGen_Domain()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
