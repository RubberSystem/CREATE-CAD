// File generated by CPPExt (CPP file)
//

#include "HatchGen_PointsOnHatching.h"
#include "../Converter.h"
#include "HatchGen_PointOnHatching.h"
#include "HatchGen_SequenceNodeOfPointsOnHatching.h"


using namespace OCNaroWrappers;

OCHatchGen_PointsOnHatching::OCHatchGen_PointsOnHatching(HatchGen_PointsOnHatching* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCHatchGen_PointsOnHatching::OCHatchGen_PointsOnHatching() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new HatchGen_PointsOnHatching();
}

OCHatchGen_PointsOnHatching^ OCHatchGen_PointsOnHatching::Assign(OCNaroWrappers::OCHatchGen_PointsOnHatching^ Other)
{
  HatchGen_PointsOnHatching* tmp = new HatchGen_PointsOnHatching();
  *tmp = ((HatchGen_PointsOnHatching*)nativeHandle)->Assign(*((HatchGen_PointsOnHatching*)Other->Handle));
  return gcnew OCHatchGen_PointsOnHatching(tmp);
}

 void OCHatchGen_PointsOnHatching::Append(OCNaroWrappers::OCHatchGen_PointOnHatching^ T)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->Append(*((HatchGen_PointOnHatching*)T->Handle));
}

 void OCHatchGen_PointsOnHatching::Append(OCNaroWrappers::OCHatchGen_PointsOnHatching^ S)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->Append(*((HatchGen_PointsOnHatching*)S->Handle));
}

 void OCHatchGen_PointsOnHatching::Prepend(OCNaroWrappers::OCHatchGen_PointOnHatching^ T)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->Prepend(*((HatchGen_PointOnHatching*)T->Handle));
}

 void OCHatchGen_PointsOnHatching::Prepend(OCNaroWrappers::OCHatchGen_PointsOnHatching^ S)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->Prepend(*((HatchGen_PointsOnHatching*)S->Handle));
}

 void OCHatchGen_PointsOnHatching::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCHatchGen_PointOnHatching^ T)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->InsertBefore(Index, *((HatchGen_PointOnHatching*)T->Handle));
}

 void OCHatchGen_PointsOnHatching::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCHatchGen_PointsOnHatching^ S)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->InsertBefore(Index, *((HatchGen_PointsOnHatching*)S->Handle));
}

 void OCHatchGen_PointsOnHatching::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCHatchGen_PointOnHatching^ T)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->InsertAfter(Index, *((HatchGen_PointOnHatching*)T->Handle));
}

 void OCHatchGen_PointsOnHatching::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCHatchGen_PointsOnHatching^ S)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->InsertAfter(Index, *((HatchGen_PointsOnHatching*)S->Handle));
}

OCHatchGen_PointOnHatching^ OCHatchGen_PointsOnHatching::First()
{
  HatchGen_PointOnHatching* tmp = new HatchGen_PointOnHatching();
  *tmp = ((HatchGen_PointsOnHatching*)nativeHandle)->First();
  return gcnew OCHatchGen_PointOnHatching(tmp);
}

OCHatchGen_PointOnHatching^ OCHatchGen_PointsOnHatching::Last()
{
  HatchGen_PointOnHatching* tmp = new HatchGen_PointOnHatching();
  *tmp = ((HatchGen_PointsOnHatching*)nativeHandle)->Last();
  return gcnew OCHatchGen_PointOnHatching(tmp);
}

 void OCHatchGen_PointsOnHatching::Split(Standard_Integer Index, OCNaroWrappers::OCHatchGen_PointsOnHatching^ Sub)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->Split(Index, *((HatchGen_PointsOnHatching*)Sub->Handle));
}

OCHatchGen_PointOnHatching^ OCHatchGen_PointsOnHatching::Value(Standard_Integer Index)
{
  HatchGen_PointOnHatching* tmp = new HatchGen_PointOnHatching();
  *tmp = ((HatchGen_PointsOnHatching*)nativeHandle)->Value(Index);
  return gcnew OCHatchGen_PointOnHatching(tmp);
}

 void OCHatchGen_PointsOnHatching::SetValue(Standard_Integer Index, OCNaroWrappers::OCHatchGen_PointOnHatching^ I)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->SetValue(Index, *((HatchGen_PointOnHatching*)I->Handle));
}

OCHatchGen_PointOnHatching^ OCHatchGen_PointsOnHatching::ChangeValue(Standard_Integer Index)
{
  HatchGen_PointOnHatching* tmp = new HatchGen_PointOnHatching();
  *tmp = ((HatchGen_PointsOnHatching*)nativeHandle)->ChangeValue(Index);
  return gcnew OCHatchGen_PointOnHatching(tmp);
}

 void OCHatchGen_PointsOnHatching::Remove(Standard_Integer Index)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->Remove(Index);
}

 void OCHatchGen_PointsOnHatching::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((HatchGen_PointsOnHatching*)nativeHandle)->Remove(FromIndex, ToIndex);
}


