// File generated by CPPExt (MPV)
//
#ifndef _HatchGen_IntersectionPoint_OCWrappers_HeaderFile
#define _HatchGen_IntersectionPoint_OCWrappers_HeaderFile

// include native header
#include <HatchGen_IntersectionPoint.hxx>
#include "../Converter.h"


#include "../TopAbs/TopAbs_Orientation.h"
#include "../TopAbs/TopAbs_State.h"


namespace OCNaroWrappers
{




public ref class OCHatchGen_IntersectionPoint  {

protected:
  HatchGen_IntersectionPoint* nativeHandle;
  OCHatchGen_IntersectionPoint(OCDummy^) {};

public:
  property HatchGen_IntersectionPoint* Handle
  {
    HatchGen_IntersectionPoint* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCHatchGen_IntersectionPoint(HatchGen_IntersectionPoint* nativeHandle);

// Methods PUBLIC

//! Sets the index of the supporting curve. <br>
 /*instead*/  void SetIndex(Standard_Integer Index) ;

//! Returns the index of the supporting curve. <br>
 /*instead*/  Standard_Integer Index() ;

//! Sets the parameter on the curve. <br>
 /*instead*/  void SetParameter(Standard_Real Parameter) ;

//! Returns the parameter on the curve. <br>
 /*instead*/  Standard_Real Parameter() ;

//! Sets the position of the point on the curve. <br>
 /*instead*/  void SetPosition(OCTopAbs_Orientation Position) ;

//! Returns the position of the point on the curve. <br>
 /*instead*/  OCTopAbs_Orientation Position() ;

//! Sets the transition state before the intersection. <br>
 /*instead*/  void SetStateBefore(OCTopAbs_State State) ;

//! Returns the transition state before the intersection. <br>
 /*instead*/  OCTopAbs_State StateBefore() ;

//! Sets the transition state after the intersection. <br>
 /*instead*/  void SetStateAfter(OCTopAbs_State State) ;

//! Returns the transition state after of the intersection. <br>
 /*instead*/  OCTopAbs_State StateAfter() ;

//! Sets the flag that the point is the beginning of a segment. <br>
 /*instead*/  void SetSegmentBeginning(System::Boolean State) ;

//! Returns the flag that the point is the beginning of a segment. <br>
 /*instead*/  System::Boolean SegmentBeginning() ;

//! Sets the flag that the point is the end of a segment. <br>
 /*instead*/  void SetSegmentEnd(System::Boolean State) ;

//! Returns the flag that the point is the end of a segment. <br>
 /*instead*/  System::Boolean SegmentEnd() ;

~OCHatchGen_IntersectionPoint()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
