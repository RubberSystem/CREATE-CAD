// File generated by CPPExt (CPP file)
//

#include "Plate_Array1OfPinpointConstraint.h"
#include "../Converter.h"
#include "Plate_PinpointConstraint.h"


using namespace OCNaroWrappers;

OCPlate_Array1OfPinpointConstraint::OCPlate_Array1OfPinpointConstraint(Plate_Array1OfPinpointConstraint* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCPlate_Array1OfPinpointConstraint::OCPlate_Array1OfPinpointConstraint(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Plate_Array1OfPinpointConstraint(Low, Up);
}

OCPlate_Array1OfPinpointConstraint::OCPlate_Array1OfPinpointConstraint(OCNaroWrappers::OCPlate_PinpointConstraint^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Plate_Array1OfPinpointConstraint(*((Plate_PinpointConstraint*)Item->Handle), Low, Up);
}

 void OCPlate_Array1OfPinpointConstraint::Init(OCNaroWrappers::OCPlate_PinpointConstraint^ V)
{
  ((Plate_Array1OfPinpointConstraint*)nativeHandle)->Init(*((Plate_PinpointConstraint*)V->Handle));
}

 System::Boolean OCPlate_Array1OfPinpointConstraint::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((Plate_Array1OfPinpointConstraint*)nativeHandle)->IsAllocated());
}

OCPlate_Array1OfPinpointConstraint^ OCPlate_Array1OfPinpointConstraint::Assign(OCNaroWrappers::OCPlate_Array1OfPinpointConstraint^ Other)
{
  Plate_Array1OfPinpointConstraint* tmp = new Plate_Array1OfPinpointConstraint(0, 0);
  *tmp = ((Plate_Array1OfPinpointConstraint*)nativeHandle)->Assign(*((Plate_Array1OfPinpointConstraint*)Other->Handle));
  return gcnew OCPlate_Array1OfPinpointConstraint(tmp);
}

 Standard_Integer OCPlate_Array1OfPinpointConstraint::Length()
{
  return ((Plate_Array1OfPinpointConstraint*)nativeHandle)->Length();
}

 Standard_Integer OCPlate_Array1OfPinpointConstraint::Lower()
{
  return ((Plate_Array1OfPinpointConstraint*)nativeHandle)->Lower();
}

 Standard_Integer OCPlate_Array1OfPinpointConstraint::Upper()
{
  return ((Plate_Array1OfPinpointConstraint*)nativeHandle)->Upper();
}

 void OCPlate_Array1OfPinpointConstraint::SetValue(Standard_Integer Index, OCNaroWrappers::OCPlate_PinpointConstraint^ Value)
{
  ((Plate_Array1OfPinpointConstraint*)nativeHandle)->SetValue(Index, *((Plate_PinpointConstraint*)Value->Handle));
}

OCPlate_PinpointConstraint^ OCPlate_Array1OfPinpointConstraint::Value(Standard_Integer Index)
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = ((Plate_Array1OfPinpointConstraint*)nativeHandle)->Value(Index);
  return gcnew OCPlate_PinpointConstraint(tmp);
}

OCPlate_PinpointConstraint^ OCPlate_Array1OfPinpointConstraint::ChangeValue(Standard_Integer Index)
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = ((Plate_Array1OfPinpointConstraint*)nativeHandle)->ChangeValue(Index);
  return gcnew OCPlate_PinpointConstraint(tmp);
}


