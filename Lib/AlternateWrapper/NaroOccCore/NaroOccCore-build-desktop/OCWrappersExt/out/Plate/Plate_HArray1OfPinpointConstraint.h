// File generated by CPPExt (Transient)
//
#ifndef _Plate_HArray1OfPinpointConstraint_OCWrappers_HeaderFile
#define _Plate_HArray1OfPinpointConstraint_OCWrappers_HeaderFile

// include the wrapped class
#include <Plate_HArray1OfPinpointConstraint.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Plate_Array1OfPinpointConstraint.h"


namespace OCNaroWrappers
{

ref class OCPlate_PinpointConstraint;
ref class OCPlate_Array1OfPinpointConstraint;



public ref class OCPlate_HArray1OfPinpointConstraint : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCPlate_HArray1OfPinpointConstraint(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCPlate_HArray1OfPinpointConstraint(Handle(Plate_HArray1OfPinpointConstraint)* nativeHandle);

// Methods PUBLIC


OCPlate_HArray1OfPinpointConstraint(Standard_Integer Low, Standard_Integer Up);


OCPlate_HArray1OfPinpointConstraint(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCPlate_PinpointConstraint^ V);


 /*instead*/  void Init(OCNaroWrappers::OCPlate_PinpointConstraint^ V) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCPlate_PinpointConstraint^ Value) ;


 /*instead*/  OCPlate_PinpointConstraint^ Value(Standard_Integer Index) ;


 /*instead*/  OCPlate_PinpointConstraint^ ChangeValue(Standard_Integer Index) ;


 /*instead*/  OCPlate_Array1OfPinpointConstraint^ Array1() ;


 /*instead*/  OCPlate_Array1OfPinpointConstraint^ ChangeArray1() ;

~OCPlate_HArray1OfPinpointConstraint()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
