// File generated by CPPExt (CPP file)
//

#include "Plate_FreeGtoCConstraint.h"
#include "../Converter.h"
#include "../gp/gp_XY.h"
#include "Plate_D1.h"
#include "Plate_D2.h"
#include "Plate_D3.h"
#include "Plate_PinpointConstraint.h"
#include "Plate_LinearScalarConstraint.h"


using namespace OCNaroWrappers;

OCPlate_FreeGtoCConstraint::OCPlate_FreeGtoCConstraint(Plate_FreeGtoCConstraint* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCPlate_FreeGtoCConstraint::OCPlate_FreeGtoCConstraint(OCNaroWrappers::OCgp_XY^ point2d, OCNaroWrappers::OCPlate_D1^ D1S, OCNaroWrappers::OCPlate_D1^ D1T, Standard_Real IncrementalLoad, Standard_Integer orientation) 
{
  nativeHandle = new Plate_FreeGtoCConstraint(*((gp_XY*)point2d->Handle), *((Plate_D1*)D1S->Handle), *((Plate_D1*)D1T->Handle), IncrementalLoad, orientation);
}

OCPlate_FreeGtoCConstraint::OCPlate_FreeGtoCConstraint(OCNaroWrappers::OCgp_XY^ point2d, OCNaroWrappers::OCPlate_D1^ D1S, OCNaroWrappers::OCPlate_D1^ D1T, OCNaroWrappers::OCPlate_D2^ D2S, OCNaroWrappers::OCPlate_D2^ D2T, Standard_Real IncrementalLoad, Standard_Integer orientation) 
{
  nativeHandle = new Plate_FreeGtoCConstraint(*((gp_XY*)point2d->Handle), *((Plate_D1*)D1S->Handle), *((Plate_D1*)D1T->Handle), *((Plate_D2*)D2S->Handle), *((Plate_D2*)D2T->Handle), IncrementalLoad, orientation);
}

OCPlate_FreeGtoCConstraint::OCPlate_FreeGtoCConstraint(OCNaroWrappers::OCgp_XY^ point2d, OCNaroWrappers::OCPlate_D1^ D1S, OCNaroWrappers::OCPlate_D1^ D1T, OCNaroWrappers::OCPlate_D2^ D2S, OCNaroWrappers::OCPlate_D2^ D2T, OCNaroWrappers::OCPlate_D3^ D3S, OCNaroWrappers::OCPlate_D3^ D3T, Standard_Real IncrementalLoad, Standard_Integer orientation) 
{
  nativeHandle = new Plate_FreeGtoCConstraint(*((gp_XY*)point2d->Handle), *((Plate_D1*)D1S->Handle), *((Plate_D1*)D1T->Handle), *((Plate_D2*)D2S->Handle), *((Plate_D2*)D2T->Handle), *((Plate_D3*)D3S->Handle), *((Plate_D3*)D3T->Handle), IncrementalLoad, orientation);
}

 Standard_Integer OCPlate_FreeGtoCConstraint::nb_PPC()
{
  return ((Plate_FreeGtoCConstraint*)nativeHandle)->nb_PPC();
}

OCPlate_PinpointConstraint^ OCPlate_FreeGtoCConstraint::GetPPC(Standard_Integer Index)
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = ((Plate_FreeGtoCConstraint*)nativeHandle)->GetPPC(Index);
  return gcnew OCPlate_PinpointConstraint(tmp);
}

 Standard_Integer OCPlate_FreeGtoCConstraint::nb_LSC()
{
  return ((Plate_FreeGtoCConstraint*)nativeHandle)->nb_LSC();
}

OCPlate_LinearScalarConstraint^ OCPlate_FreeGtoCConstraint::LSC(Standard_Integer Index)
{
  Plate_LinearScalarConstraint* tmp = new Plate_LinearScalarConstraint();
  *tmp = ((Plate_FreeGtoCConstraint*)nativeHandle)->LSC(Index);
  return gcnew OCPlate_LinearScalarConstraint(tmp);
}


