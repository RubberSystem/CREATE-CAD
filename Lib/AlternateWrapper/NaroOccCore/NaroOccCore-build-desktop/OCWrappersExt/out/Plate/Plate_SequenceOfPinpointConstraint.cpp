// File generated by CPPExt (CPP file)
//

#include "Plate_SequenceOfPinpointConstraint.h"
#include "../Converter.h"
#include "Plate_PinpointConstraint.h"
#include "Plate_SequenceNodeOfSequenceOfPinpointConstraint.h"


using namespace OCNaroWrappers;

OCPlate_SequenceOfPinpointConstraint::OCPlate_SequenceOfPinpointConstraint(Plate_SequenceOfPinpointConstraint* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCPlate_SequenceOfPinpointConstraint::OCPlate_SequenceOfPinpointConstraint() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Plate_SequenceOfPinpointConstraint();
}

OCPlate_SequenceOfPinpointConstraint^ OCPlate_SequenceOfPinpointConstraint::Assign(OCNaroWrappers::OCPlate_SequenceOfPinpointConstraint^ Other)
{
  Plate_SequenceOfPinpointConstraint* tmp = new Plate_SequenceOfPinpointConstraint();
  *tmp = ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Assign(*((Plate_SequenceOfPinpointConstraint*)Other->Handle));
  return gcnew OCPlate_SequenceOfPinpointConstraint(tmp);
}

 void OCPlate_SequenceOfPinpointConstraint::Append(OCNaroWrappers::OCPlate_PinpointConstraint^ T)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Append(*((Plate_PinpointConstraint*)T->Handle));
}

 void OCPlate_SequenceOfPinpointConstraint::Append(OCNaroWrappers::OCPlate_SequenceOfPinpointConstraint^ S)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Append(*((Plate_SequenceOfPinpointConstraint*)S->Handle));
}

 void OCPlate_SequenceOfPinpointConstraint::Prepend(OCNaroWrappers::OCPlate_PinpointConstraint^ T)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Prepend(*((Plate_PinpointConstraint*)T->Handle));
}

 void OCPlate_SequenceOfPinpointConstraint::Prepend(OCNaroWrappers::OCPlate_SequenceOfPinpointConstraint^ S)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Prepend(*((Plate_SequenceOfPinpointConstraint*)S->Handle));
}

 void OCPlate_SequenceOfPinpointConstraint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPlate_PinpointConstraint^ T)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->InsertBefore(Index, *((Plate_PinpointConstraint*)T->Handle));
}

 void OCPlate_SequenceOfPinpointConstraint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPlate_SequenceOfPinpointConstraint^ S)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->InsertBefore(Index, *((Plate_SequenceOfPinpointConstraint*)S->Handle));
}

 void OCPlate_SequenceOfPinpointConstraint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPlate_PinpointConstraint^ T)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->InsertAfter(Index, *((Plate_PinpointConstraint*)T->Handle));
}

 void OCPlate_SequenceOfPinpointConstraint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPlate_SequenceOfPinpointConstraint^ S)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->InsertAfter(Index, *((Plate_SequenceOfPinpointConstraint*)S->Handle));
}

OCPlate_PinpointConstraint^ OCPlate_SequenceOfPinpointConstraint::First()
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->First();
  return gcnew OCPlate_PinpointConstraint(tmp);
}

OCPlate_PinpointConstraint^ OCPlate_SequenceOfPinpointConstraint::Last()
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Last();
  return gcnew OCPlate_PinpointConstraint(tmp);
}

 void OCPlate_SequenceOfPinpointConstraint::Split(Standard_Integer Index, OCNaroWrappers::OCPlate_SequenceOfPinpointConstraint^ Sub)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Split(Index, *((Plate_SequenceOfPinpointConstraint*)Sub->Handle));
}

OCPlate_PinpointConstraint^ OCPlate_SequenceOfPinpointConstraint::Value(Standard_Integer Index)
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Value(Index);
  return gcnew OCPlate_PinpointConstraint(tmp);
}

 void OCPlate_SequenceOfPinpointConstraint::SetValue(Standard_Integer Index, OCNaroWrappers::OCPlate_PinpointConstraint^ I)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->SetValue(Index, *((Plate_PinpointConstraint*)I->Handle));
}

OCPlate_PinpointConstraint^ OCPlate_SequenceOfPinpointConstraint::ChangeValue(Standard_Integer Index)
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->ChangeValue(Index);
  return gcnew OCPlate_PinpointConstraint(tmp);
}

 void OCPlate_SequenceOfPinpointConstraint::Remove(Standard_Integer Index)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Remove(Index);
}

 void OCPlate_SequenceOfPinpointConstraint::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Plate_SequenceOfPinpointConstraint*)nativeHandle)->Remove(FromIndex, ToIndex);
}


