// File generated by CPPExt (CPP file)
//

#include "Plate_GtoCConstraint.h"
#include "../Converter.h"
#include "../gp/gp_XY.h"
#include "Plate_D1.h"
#include "../gp/gp_XYZ.h"
#include "Plate_D2.h"
#include "Plate_D3.h"
#include "Plate_PinpointConstraint.h"


using namespace OCNaroWrappers;

OCPlate_GtoCConstraint::OCPlate_GtoCConstraint(Plate_GtoCConstraint* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCPlate_GtoCConstraint::OCPlate_GtoCConstraint(OCNaroWrappers::OCPlate_GtoCConstraint^ ref) 
{
  nativeHandle = new Plate_GtoCConstraint(*((Plate_GtoCConstraint*)ref->Handle));
}

OCPlate_GtoCConstraint::OCPlate_GtoCConstraint(OCNaroWrappers::OCgp_XY^ point2d, OCNaroWrappers::OCPlate_D1^ D1S, OCNaroWrappers::OCPlate_D1^ D1T) 
{
  nativeHandle = new Plate_GtoCConstraint(*((gp_XY*)point2d->Handle), *((Plate_D1*)D1S->Handle), *((Plate_D1*)D1T->Handle));
}

OCPlate_GtoCConstraint::OCPlate_GtoCConstraint(OCNaroWrappers::OCgp_XY^ point2d, OCNaroWrappers::OCPlate_D1^ D1S, OCNaroWrappers::OCPlate_D1^ D1T, OCNaroWrappers::OCgp_XYZ^ nP) 
{
  nativeHandle = new Plate_GtoCConstraint(*((gp_XY*)point2d->Handle), *((Plate_D1*)D1S->Handle), *((Plate_D1*)D1T->Handle), *((gp_XYZ*)nP->Handle));
}

OCPlate_GtoCConstraint::OCPlate_GtoCConstraint(OCNaroWrappers::OCgp_XY^ point2d, OCNaroWrappers::OCPlate_D1^ D1S, OCNaroWrappers::OCPlate_D1^ D1T, OCNaroWrappers::OCPlate_D2^ D2S, OCNaroWrappers::OCPlate_D2^ D2T) 
{
  nativeHandle = new Plate_GtoCConstraint(*((gp_XY*)point2d->Handle), *((Plate_D1*)D1S->Handle), *((Plate_D1*)D1T->Handle), *((Plate_D2*)D2S->Handle), *((Plate_D2*)D2T->Handle));
}

OCPlate_GtoCConstraint::OCPlate_GtoCConstraint(OCNaroWrappers::OCgp_XY^ point2d, OCNaroWrappers::OCPlate_D1^ D1S, OCNaroWrappers::OCPlate_D1^ D1T, OCNaroWrappers::OCPlate_D2^ D2S, OCNaroWrappers::OCPlate_D2^ D2T, OCNaroWrappers::OCgp_XYZ^ nP) 
{
  nativeHandle = new Plate_GtoCConstraint(*((gp_XY*)point2d->Handle), *((Plate_D1*)D1S->Handle), *((Plate_D1*)D1T->Handle), *((Plate_D2*)D2S->Handle), *((Plate_D2*)D2T->Handle), *((gp_XYZ*)nP->Handle));
}

OCPlate_GtoCConstraint::OCPlate_GtoCConstraint(OCNaroWrappers::OCgp_XY^ point2d, OCNaroWrappers::OCPlate_D1^ D1S, OCNaroWrappers::OCPlate_D1^ D1T, OCNaroWrappers::OCPlate_D2^ D2S, OCNaroWrappers::OCPlate_D2^ D2T, OCNaroWrappers::OCPlate_D3^ D3S, OCNaroWrappers::OCPlate_D3^ D3T) 
{
  nativeHandle = new Plate_GtoCConstraint(*((gp_XY*)point2d->Handle), *((Plate_D1*)D1S->Handle), *((Plate_D1*)D1T->Handle), *((Plate_D2*)D2S->Handle), *((Plate_D2*)D2T->Handle), *((Plate_D3*)D3S->Handle), *((Plate_D3*)D3T->Handle));
}

OCPlate_GtoCConstraint::OCPlate_GtoCConstraint(OCNaroWrappers::OCgp_XY^ point2d, OCNaroWrappers::OCPlate_D1^ D1S, OCNaroWrappers::OCPlate_D1^ D1T, OCNaroWrappers::OCPlate_D2^ D2S, OCNaroWrappers::OCPlate_D2^ D2T, OCNaroWrappers::OCPlate_D3^ D3S, OCNaroWrappers::OCPlate_D3^ D3T, OCNaroWrappers::OCgp_XYZ^ nP) 
{
  nativeHandle = new Plate_GtoCConstraint(*((gp_XY*)point2d->Handle), *((Plate_D1*)D1S->Handle), *((Plate_D1*)D1T->Handle), *((Plate_D2*)D2S->Handle), *((Plate_D2*)D2T->Handle), *((Plate_D3*)D3S->Handle), *((Plate_D3*)D3T->Handle), *((gp_XYZ*)nP->Handle));
}

 Standard_Integer OCPlate_GtoCConstraint::nb_PPC()
{
  return ((Plate_GtoCConstraint*)nativeHandle)->nb_PPC();
}

OCPlate_PinpointConstraint^ OCPlate_GtoCConstraint::GetPPC(Standard_Integer Index)
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = ((Plate_GtoCConstraint*)nativeHandle)->GetPPC(Index);
  return gcnew OCPlate_PinpointConstraint(tmp);
}

OCPlate_D1^ OCPlate_GtoCConstraint::D1SurfInit()
{
  Plate_D1* tmp = new Plate_D1(123abc, 123abc);
  *tmp = ((Plate_GtoCConstraint*)nativeHandle)->D1SurfInit();
  return gcnew OCPlate_D1(tmp);
}


