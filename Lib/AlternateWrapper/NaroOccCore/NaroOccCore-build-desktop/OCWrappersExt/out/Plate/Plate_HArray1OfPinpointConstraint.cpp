// File generated by CPPExt (CPP file)
//

#include "Plate_HArray1OfPinpointConstraint.h"
#include "../Converter.h"
#include "Plate_PinpointConstraint.h"
#include "Plate_Array1OfPinpointConstraint.h"


using namespace OCNaroWrappers;

OCPlate_HArray1OfPinpointConstraint::OCPlate_HArray1OfPinpointConstraint(Handle(Plate_HArray1OfPinpointConstraint)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Plate_HArray1OfPinpointConstraint(*nativeHandle);
}

OCPlate_HArray1OfPinpointConstraint::OCPlate_HArray1OfPinpointConstraint(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Plate_HArray1OfPinpointConstraint(new Plate_HArray1OfPinpointConstraint(Low, Up));
}

OCPlate_HArray1OfPinpointConstraint::OCPlate_HArray1OfPinpointConstraint(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCPlate_PinpointConstraint^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Plate_HArray1OfPinpointConstraint(new Plate_HArray1OfPinpointConstraint(Low, Up, *((Plate_PinpointConstraint*)V->Handle)));
}

 void OCPlate_HArray1OfPinpointConstraint::Init(OCNaroWrappers::OCPlate_PinpointConstraint^ V)
{
  (*((Handle_Plate_HArray1OfPinpointConstraint*)nativeHandle))->Init(*((Plate_PinpointConstraint*)V->Handle));
}

 Standard_Integer OCPlate_HArray1OfPinpointConstraint::Length()
{
  return (*((Handle_Plate_HArray1OfPinpointConstraint*)nativeHandle))->Length();
}

 Standard_Integer OCPlate_HArray1OfPinpointConstraint::Lower()
{
  return (*((Handle_Plate_HArray1OfPinpointConstraint*)nativeHandle))->Lower();
}

 Standard_Integer OCPlate_HArray1OfPinpointConstraint::Upper()
{
  return (*((Handle_Plate_HArray1OfPinpointConstraint*)nativeHandle))->Upper();
}

 void OCPlate_HArray1OfPinpointConstraint::SetValue(Standard_Integer Index, OCNaroWrappers::OCPlate_PinpointConstraint^ Value)
{
  (*((Handle_Plate_HArray1OfPinpointConstraint*)nativeHandle))->SetValue(Index, *((Plate_PinpointConstraint*)Value->Handle));
}

OCPlate_PinpointConstraint^ OCPlate_HArray1OfPinpointConstraint::Value(Standard_Integer Index)
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = (*((Handle_Plate_HArray1OfPinpointConstraint*)nativeHandle))->Value(Index);
  return gcnew OCPlate_PinpointConstraint(tmp);
}

OCPlate_PinpointConstraint^ OCPlate_HArray1OfPinpointConstraint::ChangeValue(Standard_Integer Index)
{
  Plate_PinpointConstraint* tmp = new Plate_PinpointConstraint();
  *tmp = (*((Handle_Plate_HArray1OfPinpointConstraint*)nativeHandle))->ChangeValue(Index);
  return gcnew OCPlate_PinpointConstraint(tmp);
}

OCPlate_Array1OfPinpointConstraint^ OCPlate_HArray1OfPinpointConstraint::Array1()
{
  Plate_Array1OfPinpointConstraint* tmp = new Plate_Array1OfPinpointConstraint(0, 0);
  *tmp = (*((Handle_Plate_HArray1OfPinpointConstraint*)nativeHandle))->Array1();
  return gcnew OCPlate_Array1OfPinpointConstraint(tmp);
}

OCPlate_Array1OfPinpointConstraint^ OCPlate_HArray1OfPinpointConstraint::ChangeArray1()
{
  Plate_Array1OfPinpointConstraint* tmp = new Plate_Array1OfPinpointConstraint(0, 0);
  *tmp = (*((Handle_Plate_HArray1OfPinpointConstraint*)nativeHandle))->ChangeArray1();
  return gcnew OCPlate_Array1OfPinpointConstraint(tmp);
}


