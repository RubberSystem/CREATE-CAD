// File generated by CPPExt (CPP file)
//

#include "Plate_SequenceOfLinearXYZConstraint.h"
#include "../Converter.h"
#include "Plate_LinearXYZConstraint.h"
#include "Plate_SequenceNodeOfSequenceOfLinearXYZConstraint.h"


using namespace OCNaroWrappers;

OCPlate_SequenceOfLinearXYZConstraint::OCPlate_SequenceOfLinearXYZConstraint(Plate_SequenceOfLinearXYZConstraint* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCPlate_SequenceOfLinearXYZConstraint::OCPlate_SequenceOfLinearXYZConstraint() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Plate_SequenceOfLinearXYZConstraint();
}

OCPlate_SequenceOfLinearXYZConstraint^ OCPlate_SequenceOfLinearXYZConstraint::Assign(OCNaroWrappers::OCPlate_SequenceOfLinearXYZConstraint^ Other)
{
  Plate_SequenceOfLinearXYZConstraint* tmp = new Plate_SequenceOfLinearXYZConstraint();
  *tmp = ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Assign(*((Plate_SequenceOfLinearXYZConstraint*)Other->Handle));
  return gcnew OCPlate_SequenceOfLinearXYZConstraint(tmp);
}

 void OCPlate_SequenceOfLinearXYZConstraint::Append(OCNaroWrappers::OCPlate_LinearXYZConstraint^ T)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Append(*((Plate_LinearXYZConstraint*)T->Handle));
}

 void OCPlate_SequenceOfLinearXYZConstraint::Append(OCNaroWrappers::OCPlate_SequenceOfLinearXYZConstraint^ S)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Append(*((Plate_SequenceOfLinearXYZConstraint*)S->Handle));
}

 void OCPlate_SequenceOfLinearXYZConstraint::Prepend(OCNaroWrappers::OCPlate_LinearXYZConstraint^ T)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Prepend(*((Plate_LinearXYZConstraint*)T->Handle));
}

 void OCPlate_SequenceOfLinearXYZConstraint::Prepend(OCNaroWrappers::OCPlate_SequenceOfLinearXYZConstraint^ S)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Prepend(*((Plate_SequenceOfLinearXYZConstraint*)S->Handle));
}

 void OCPlate_SequenceOfLinearXYZConstraint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPlate_LinearXYZConstraint^ T)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->InsertBefore(Index, *((Plate_LinearXYZConstraint*)T->Handle));
}

 void OCPlate_SequenceOfLinearXYZConstraint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPlate_SequenceOfLinearXYZConstraint^ S)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->InsertBefore(Index, *((Plate_SequenceOfLinearXYZConstraint*)S->Handle));
}

 void OCPlate_SequenceOfLinearXYZConstraint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPlate_LinearXYZConstraint^ T)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->InsertAfter(Index, *((Plate_LinearXYZConstraint*)T->Handle));
}

 void OCPlate_SequenceOfLinearXYZConstraint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPlate_SequenceOfLinearXYZConstraint^ S)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->InsertAfter(Index, *((Plate_SequenceOfLinearXYZConstraint*)S->Handle));
}

OCPlate_LinearXYZConstraint^ OCPlate_SequenceOfLinearXYZConstraint::First()
{
  Plate_LinearXYZConstraint* tmp = new Plate_LinearXYZConstraint();
  *tmp = ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->First();
  return gcnew OCPlate_LinearXYZConstraint(tmp);
}

OCPlate_LinearXYZConstraint^ OCPlate_SequenceOfLinearXYZConstraint::Last()
{
  Plate_LinearXYZConstraint* tmp = new Plate_LinearXYZConstraint();
  *tmp = ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Last();
  return gcnew OCPlate_LinearXYZConstraint(tmp);
}

 void OCPlate_SequenceOfLinearXYZConstraint::Split(Standard_Integer Index, OCNaroWrappers::OCPlate_SequenceOfLinearXYZConstraint^ Sub)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Split(Index, *((Plate_SequenceOfLinearXYZConstraint*)Sub->Handle));
}

OCPlate_LinearXYZConstraint^ OCPlate_SequenceOfLinearXYZConstraint::Value(Standard_Integer Index)
{
  Plate_LinearXYZConstraint* tmp = new Plate_LinearXYZConstraint();
  *tmp = ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Value(Index);
  return gcnew OCPlate_LinearXYZConstraint(tmp);
}

 void OCPlate_SequenceOfLinearXYZConstraint::SetValue(Standard_Integer Index, OCNaroWrappers::OCPlate_LinearXYZConstraint^ I)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->SetValue(Index, *((Plate_LinearXYZConstraint*)I->Handle));
}

OCPlate_LinearXYZConstraint^ OCPlate_SequenceOfLinearXYZConstraint::ChangeValue(Standard_Integer Index)
{
  Plate_LinearXYZConstraint* tmp = new Plate_LinearXYZConstraint();
  *tmp = ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->ChangeValue(Index);
  return gcnew OCPlate_LinearXYZConstraint(tmp);
}

 void OCPlate_SequenceOfLinearXYZConstraint::Remove(Standard_Integer Index)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Remove(Index);
}

 void OCPlate_SequenceOfLinearXYZConstraint::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Plate_SequenceOfLinearXYZConstraint*)nativeHandle)->Remove(FromIndex, ToIndex);
}


