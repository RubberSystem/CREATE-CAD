// File generated by CPPExt (CPP file)
//

#include "Plate_SequenceOfLinearScalarConstraint.h"
#include "../Converter.h"
#include "Plate_LinearScalarConstraint.h"
#include "Plate_SequenceNodeOfSequenceOfLinearScalarConstraint.h"


using namespace OCNaroWrappers;

OCPlate_SequenceOfLinearScalarConstraint::OCPlate_SequenceOfLinearScalarConstraint(Plate_SequenceOfLinearScalarConstraint* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCPlate_SequenceOfLinearScalarConstraint::OCPlate_SequenceOfLinearScalarConstraint() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Plate_SequenceOfLinearScalarConstraint();
}

OCPlate_SequenceOfLinearScalarConstraint^ OCPlate_SequenceOfLinearScalarConstraint::Assign(OCNaroWrappers::OCPlate_SequenceOfLinearScalarConstraint^ Other)
{
  Plate_SequenceOfLinearScalarConstraint* tmp = new Plate_SequenceOfLinearScalarConstraint();
  *tmp = ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Assign(*((Plate_SequenceOfLinearScalarConstraint*)Other->Handle));
  return gcnew OCPlate_SequenceOfLinearScalarConstraint(tmp);
}

 void OCPlate_SequenceOfLinearScalarConstraint::Append(OCNaroWrappers::OCPlate_LinearScalarConstraint^ T)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Append(*((Plate_LinearScalarConstraint*)T->Handle));
}

 void OCPlate_SequenceOfLinearScalarConstraint::Append(OCNaroWrappers::OCPlate_SequenceOfLinearScalarConstraint^ S)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Append(*((Plate_SequenceOfLinearScalarConstraint*)S->Handle));
}

 void OCPlate_SequenceOfLinearScalarConstraint::Prepend(OCNaroWrappers::OCPlate_LinearScalarConstraint^ T)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Prepend(*((Plate_LinearScalarConstraint*)T->Handle));
}

 void OCPlate_SequenceOfLinearScalarConstraint::Prepend(OCNaroWrappers::OCPlate_SequenceOfLinearScalarConstraint^ S)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Prepend(*((Plate_SequenceOfLinearScalarConstraint*)S->Handle));
}

 void OCPlate_SequenceOfLinearScalarConstraint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPlate_LinearScalarConstraint^ T)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->InsertBefore(Index, *((Plate_LinearScalarConstraint*)T->Handle));
}

 void OCPlate_SequenceOfLinearScalarConstraint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPlate_SequenceOfLinearScalarConstraint^ S)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->InsertBefore(Index, *((Plate_SequenceOfLinearScalarConstraint*)S->Handle));
}

 void OCPlate_SequenceOfLinearScalarConstraint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPlate_LinearScalarConstraint^ T)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->InsertAfter(Index, *((Plate_LinearScalarConstraint*)T->Handle));
}

 void OCPlate_SequenceOfLinearScalarConstraint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPlate_SequenceOfLinearScalarConstraint^ S)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->InsertAfter(Index, *((Plate_SequenceOfLinearScalarConstraint*)S->Handle));
}

OCPlate_LinearScalarConstraint^ OCPlate_SequenceOfLinearScalarConstraint::First()
{
  Plate_LinearScalarConstraint* tmp = new Plate_LinearScalarConstraint();
  *tmp = ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->First();
  return gcnew OCPlate_LinearScalarConstraint(tmp);
}

OCPlate_LinearScalarConstraint^ OCPlate_SequenceOfLinearScalarConstraint::Last()
{
  Plate_LinearScalarConstraint* tmp = new Plate_LinearScalarConstraint();
  *tmp = ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Last();
  return gcnew OCPlate_LinearScalarConstraint(tmp);
}

 void OCPlate_SequenceOfLinearScalarConstraint::Split(Standard_Integer Index, OCNaroWrappers::OCPlate_SequenceOfLinearScalarConstraint^ Sub)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Split(Index, *((Plate_SequenceOfLinearScalarConstraint*)Sub->Handle));
}

OCPlate_LinearScalarConstraint^ OCPlate_SequenceOfLinearScalarConstraint::Value(Standard_Integer Index)
{
  Plate_LinearScalarConstraint* tmp = new Plate_LinearScalarConstraint();
  *tmp = ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Value(Index);
  return gcnew OCPlate_LinearScalarConstraint(tmp);
}

 void OCPlate_SequenceOfLinearScalarConstraint::SetValue(Standard_Integer Index, OCNaroWrappers::OCPlate_LinearScalarConstraint^ I)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->SetValue(Index, *((Plate_LinearScalarConstraint*)I->Handle));
}

OCPlate_LinearScalarConstraint^ OCPlate_SequenceOfLinearScalarConstraint::ChangeValue(Standard_Integer Index)
{
  Plate_LinearScalarConstraint* tmp = new Plate_LinearScalarConstraint();
  *tmp = ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->ChangeValue(Index);
  return gcnew OCPlate_LinearScalarConstraint(tmp);
}

 void OCPlate_SequenceOfLinearScalarConstraint::Remove(Standard_Integer Index)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Remove(Index);
}

 void OCPlate_SequenceOfLinearScalarConstraint::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Plate_SequenceOfLinearScalarConstraint*)nativeHandle)->Remove(FromIndex, ToIndex);
}


