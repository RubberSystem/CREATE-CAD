// File generated by CPPExt (Transient)
//
#ifndef _BRepTools_NurbsConvertModification_OCWrappers_HeaderFile
#define _BRepTools_NurbsConvertModification_OCWrappers_HeaderFile

// include the wrapped class
#include <BRepTools_NurbsConvertModification.hxx>
#include "../Converter.h"

#include "BRepTools_Modification.h"

#include "../TopTools/TopTools_ListOfShape.h"
#include "../TColStd/TColStd_ListOfTransient.h"
#include "../TColStd/TColStd_IndexedDataMapOfTransientTransient.h"
#include "../GeomAbs/GeomAbs_Shape.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Face;
ref class OCGeom_Surface;
ref class OCTopLoc_Location;
ref class OCTopoDS_Edge;
ref class OCGeom_Curve;
ref class OCTopoDS_Vertex;
ref class OCgp_Pnt;
ref class OCGeom2d_Curve;


//! Defines a modification of the  geometry by a  Trsf <br>
//!          from gp. All methods return True and transform the <br>
//!          geometry. <br>
public ref class OCBRepTools_NurbsConvertModification : OCBRepTools_Modification {

protected:
  // dummy constructor;
  OCBRepTools_NurbsConvertModification(OCDummy^) : OCBRepTools_Modification((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepTools_NurbsConvertModification(Handle(BRepTools_NurbsConvertModification)* nativeHandle);

// Methods PUBLIC


OCBRepTools_NurbsConvertModification();

//! Returns Standard_True  if  the face  <F> has  been <br>
//!          modified.  In this  case, <S> is the new geometric <br>
//!          support of  the  face, <L> the  new location,<Tol> <br>
//!          the new  tolerance.<RevWires> has  to  be set   to <br>
//!          Standard_True   when the modification reverses the <br>
//!          normal of  the   surface.(the wires   have  to  be <br>
//!          reversed).   <RevFace>   has   to   be   set    to <br>
//!          Standard_True if  the orientation  of the modified <br>
//!          face changes in the  shells which contain  it.  -- <br>
//!          Here, <RevFace>  will  return Standard_True if the <br>
//!          -- gp_Trsf is negative. <br>
 /*instead*/  System::Boolean NewSurface(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L, Standard_Real& Tol, System::Boolean& RevWires, System::Boolean& RevFace) ;

//! Returns Standard_True  if  the edge  <E> has  been <br>
//!          modified.  In this case,  <C> is the new geometric <br>
//!          support of the  edge, <L> the  new location, <Tol> <br>
//!          the         new    tolerance.   Otherwise, returns <br>
//!          Standard_False,    and  <C>,  <L>,   <Tol> are not <br>
//!          significant. <br>
 /*instead*/  System::Boolean NewCurve(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Curve^ C, OCNaroWrappers::OCTopLoc_Location^ L, Standard_Real& Tol) ;

//! Returns  Standard_True if the  vertex <V> has been <br>
//!          modified.  In this  case, <P> is the new geometric <br>
//!          support of the vertex,   <Tol> the new  tolerance. <br>
//!          Otherwise, returns Standard_False, and <P>,  <Tol> <br>
//!          are not significant. <br>
 /*instead*/  System::Boolean NewPoint(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& Tol) ;

//! Returns Standard_True if  the edge  <E> has a  new <br>
//!          curve on surface on the face <F>.In this case, <C> <br>
//!          is the new geometric support of  the edge, <L> the <br>
//!          new location, <Tol> the new tolerance. <br>
//!          Otherwise, returns  Standard_False, and <C>,  <L>, <br>
//!          <Tol> are not significant. <br>
 /*instead*/  System::Boolean NewCurve2d(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopoDS_Edge^ NewE, OCNaroWrappers::OCTopoDS_Face^ NewF, OCNaroWrappers::OCGeom2d_Curve^ C, Standard_Real& Tol) ;

//! Returns Standard_True if the Vertex  <V> has a new <br>
//!          parameter on the  edge <E>. In  this case,  <P> is <br>
//!          the parameter,    <Tol>  the     new    tolerance. <br>
//!          Otherwise, returns Standard_False, and <P>,  <Tol> <br>
//!          are not significant. <br>
 /*instead*/  System::Boolean NewParameter(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E, Standard_Real& P, Standard_Real& Tol) ;

//! Returns the  continuity of  <NewE> between <NewF1> <br>
//!          and <NewF2>. <br>
//! <br>
//!          <NewE> is the new  edge created from <E>.  <NewF1> <br>
//!          (resp. <NewF2>) is the new  face created from <F1> <br>
//!          (resp. <F2>). <br>
 /*instead*/  OCGeomAbs_Shape Continuity(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F1, OCNaroWrappers::OCTopoDS_Face^ F2, OCNaroWrappers::OCTopoDS_Edge^ NewE, OCNaroWrappers::OCTopoDS_Face^ NewF1, OCNaroWrappers::OCTopoDS_Face^ NewF2) ;

~OCBRepTools_NurbsConvertModification()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
