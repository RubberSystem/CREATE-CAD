// File generated by CPPExt (CPP file)
//

#include "TopExp_StackOfIterator.h"
#include "../Converter.h"
#include "TopExp_StackIteratorOfStackOfIterator.h"
#include "../TopoDS/TopoDS_Iterator.h"
#include "TopExp_StackNodeOfStackOfIterator.h"


using namespace OCNaroWrappers;

OCTopExp_StackOfIterator::OCTopExp_StackOfIterator(TopExp_StackOfIterator* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopExp_StackOfIterator::OCTopExp_StackOfIterator() 
{
  nativeHandle = new TopExp_StackOfIterator();
}

OCTopExp_StackOfIterator^ OCTopExp_StackOfIterator::Assign(OCNaroWrappers::OCTopExp_StackOfIterator^ Other)
{
  TopExp_StackOfIterator* tmp = new TopExp_StackOfIterator();
  *tmp = ((TopExp_StackOfIterator*)nativeHandle)->Assign(*((TopExp_StackOfIterator*)Other->Handle));
  return gcnew OCTopExp_StackOfIterator(tmp);
}

 System::Boolean OCTopExp_StackOfIterator::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TopExp_StackOfIterator*)nativeHandle)->IsEmpty());
}

 Standard_Integer OCTopExp_StackOfIterator::Depth()
{
  return ((TopExp_StackOfIterator*)nativeHandle)->Depth();
}

OCTopoDS_Iterator^ OCTopExp_StackOfIterator::Top()
{
  TopoDS_Iterator* tmp = new TopoDS_Iterator();
  *tmp = ((TopExp_StackOfIterator*)nativeHandle)->Top();
  return gcnew OCTopoDS_Iterator(tmp);
}

 void OCTopExp_StackOfIterator::Push(OCNaroWrappers::OCTopoDS_Iterator^ I)
{
  ((TopExp_StackOfIterator*)nativeHandle)->Push(*((TopoDS_Iterator*)I->Handle));
}

 void OCTopExp_StackOfIterator::Pop()
{
  ((TopExp_StackOfIterator*)nativeHandle)->Pop();
}

OCTopoDS_Iterator^ OCTopExp_StackOfIterator::ChangeTop()
{
  TopoDS_Iterator* tmp = new TopoDS_Iterator();
  *tmp = ((TopExp_StackOfIterator*)nativeHandle)->ChangeTop();
  return gcnew OCTopoDS_Iterator(tmp);
}


