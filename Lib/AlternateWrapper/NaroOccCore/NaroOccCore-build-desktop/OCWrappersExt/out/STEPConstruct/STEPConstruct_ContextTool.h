// File generated by CPPExt (MPV)
//
#ifndef _STEPConstruct_ContextTool_OCWrappers_HeaderFile
#define _STEPConstruct_ContextTool_OCWrappers_HeaderFile

// include native header
#include <STEPConstruct_ContextTool.hxx>
#include "../Converter.h"


#include "../TColStd/TColStd_SequenceOfInteger.h"
#include "STEPConstruct_AP203Context.h"
#include "../StepGeom/StepGeom_Axis2Placement3d.h"


namespace OCNaroWrappers
{

ref class OCStepBasic_ApplicationProtocolDefinition;
ref class OCStepData_StepModel;
ref class OCTCollection_HAsciiString;
ref class OCStepGeom_Axis2Placement3d;
ref class OCSTEPConstruct_AP203Context;
ref class OCTColStd_HSequenceOfTransient;
ref class OCSTEPConstruct_Part;
ref class OCSTEPConstruct_Assembly;


//! Gives access to Product Definition Context (one per Model) <br>
//!           Maintains ApplicationProtocolDefinition entity (common for all <br>
//!           products) <br>
//!           Also maintains context specific for AP203 and provides set of <br>
//!           methods to work with various STEP constructs as required <br>
//!           by Actor <br>
public ref class OCSTEPConstruct_ContextTool  {

protected:
  STEPConstruct_ContextTool* nativeHandle;
  OCSTEPConstruct_ContextTool(OCDummy^) {};

public:
  property STEPConstruct_ContextTool* Handle
  {
    STEPConstruct_ContextTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCSTEPConstruct_ContextTool(STEPConstruct_ContextTool* nativeHandle);

// Methods PUBLIC


OCSTEPConstruct_ContextTool();


OCSTEPConstruct_ContextTool(OCNaroWrappers::OCStepData_StepModel^ aStepModel);

//! Initialize ApplicationProtocolDefinition by the first <br>
//!          entity of that type found in the model <br>
 /*instead*/  void SetModel(OCNaroWrappers::OCStepData_StepModel^ aStepModel) ;


 /*instead*/  OCStepBasic_ApplicationProtocolDefinition^ GetAPD() ;


 /*instead*/  void AddAPD(System::Boolean enforce) ;

//! Returns True if APD.schema_name is config_control_design <br>
 /*instead*/  System::Boolean IsAP203() ;

//! Returns True if APD.schema_name is automotive_design <br>
 /*instead*/  System::Boolean IsAP214() ;


 /*instead*/  OCTCollection_HAsciiString^ GetACstatus() ;


 /*instead*/  OCTCollection_HAsciiString^ GetACschemaName() ;


 /*instead*/  Standard_Integer GetACyear() ;


 /*instead*/  OCTCollection_HAsciiString^ GetACname() ;


 /*instead*/  void SetACstatus(OCNaroWrappers::OCTCollection_HAsciiString^ status) ;


 /*instead*/  void SetACschemaName(OCNaroWrappers::OCTCollection_HAsciiString^ schemaName) ;


 /*instead*/  void SetACyear(Standard_Integer year) ;


 /*instead*/  void SetACname(OCNaroWrappers::OCTCollection_HAsciiString^ name) ;

//! Returns a default axis placement <br>
 /*instead*/  OCStepGeom_Axis2Placement3d^ GetDefaultAxis() ;

//! Returns tool which maintains context specific for AP203 <br>
 /*instead*/  OCSTEPConstruct_AP203Context^ AP203Context() ;

//! Returns current assembly level <br>
 /*instead*/  Standard_Integer Level() ;


 /*instead*/  void NextLevel() ;


 /*instead*/  void PrevLevel() ;

//! Changes current assembly level <br>
 /*instead*/  void SetLevel(Standard_Integer lev) ;

//! Returns current index of assembly component on current level <br>
 /*instead*/  Standard_Integer Index() ;


 /*instead*/  void NextIndex() ;


 /*instead*/  void PrevIndex() ;

//! Changes current index of assembly component on current level <br>
 /*instead*/  void SetIndex(Standard_Integer ind) ;

//! Generates a product name basing on write.step.product.name <br>
//!          parameter and current position in the assembly structure <br>
 /*instead*/  OCTCollection_HAsciiString^ GetProductName() ;

//! Produces and returns a full list of root entities required <br>
//!          for part identified by SDRTool (including SDR itself) <br>
 /*instead*/  OCTColStd_HSequenceOfTransient^ GetRootsForPart(OCNaroWrappers::OCSTEPConstruct_Part^ SDRTool) ;

//! Produces and returns a full list of root entities required <br>
//!          for assembly link identified by assembly (including NAUO and CDSR) <br>
 /*instead*/  OCTColStd_HSequenceOfTransient^ GetRootsForAssemblyLink(OCNaroWrappers::OCSTEPConstruct_Assembly^ assembly) ;

~OCSTEPConstruct_ContextTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
