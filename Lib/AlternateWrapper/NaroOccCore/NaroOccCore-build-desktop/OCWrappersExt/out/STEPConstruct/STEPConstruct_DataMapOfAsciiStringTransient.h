// File generated by CPPExt (MPV)
//
#ifndef _STEPConstruct_DataMapOfAsciiStringTransient_OCWrappers_HeaderFile
#define _STEPConstruct_DataMapOfAsciiStringTransient_OCWrappers_HeaderFile

// include native header
#include <STEPConstruct_DataMapOfAsciiStringTransient.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTCollection_AsciiString;
ref class OCStandard_Transient;
ref class OCSTEPConstruct_DataMapNodeOfDataMapOfAsciiStringTransient;
ref class OCSTEPConstruct_DataMapIteratorOfDataMapOfAsciiStringTransient;



public ref class OCSTEPConstruct_DataMapOfAsciiStringTransient  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCSTEPConstruct_DataMapOfAsciiStringTransient(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCSTEPConstruct_DataMapOfAsciiStringTransient(STEPConstruct_DataMapOfAsciiStringTransient* nativeHandle);

// Methods PUBLIC


OCSTEPConstruct_DataMapOfAsciiStringTransient(Standard_Integer NbBuckets);


 /*instead*/  OCSTEPConstruct_DataMapOfAsciiStringTransient^ Assign(OCNaroWrappers::OCSTEPConstruct_DataMapOfAsciiStringTransient^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(OCNaroWrappers::OCTCollection_AsciiString^ K, OCNaroWrappers::OCStandard_Transient^ I) ;


 /*instead*/  System::Boolean IsBound(OCNaroWrappers::OCTCollection_AsciiString^ K) ;


 /*instead*/  System::Boolean UnBind(OCNaroWrappers::OCTCollection_AsciiString^ K) ;


 /*instead*/  OCStandard_Transient^ Find(OCNaroWrappers::OCTCollection_AsciiString^ K) ;


 /*instead*/  OCStandard_Transient^ ChangeFind(OCNaroWrappers::OCTCollection_AsciiString^ K) ;


 /*instead*/  Standard_Address Find1(OCNaroWrappers::OCTCollection_AsciiString^ K) ;


 /*instead*/  Standard_Address ChangeFind1(OCNaroWrappers::OCTCollection_AsciiString^ K) ;

~OCSTEPConstruct_DataMapOfAsciiStringTransient()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
