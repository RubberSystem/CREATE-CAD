// File generated by CPPExt (MPV)
//
#ifndef _STEPConstruct_ValidationProps_OCWrappers_HeaderFile
#define _STEPConstruct_ValidationProps_OCWrappers_HeaderFile

// include native header
#include <STEPConstruct_ValidationProps.hxx>
#include "../Converter.h"

#include "STEPConstruct_Tool.h"

#include "../StepBasic/StepBasic_Unit.h"
#include "STEPConstruct_Tool.h"


namespace OCNaroWrappers
{

ref class OCStepBasic_ProductDefinition;
ref class OCXSControl_WorkSession;
ref class OCTopoDS_Shape;
ref class OCStepRepr_RepresentationItem;
ref class OCStepRepr_CharacterizedDefinition;
ref class OCStepRepr_RepresentationContext;
ref class OCgp_Pnt;
ref class OCTColStd_SequenceOfTransient;
ref class OCStepRepr_NextAssemblyUsageOccurrence;
ref class OCStepRepr_PropertyDefinition;


//! This class provides tools for access (write and read) <br>
//!          the validation properties on shapes in the STEP file. <br>
//!          These are surface area, solid volume and centroid. <br>
public ref class OCSTEPConstruct_ValidationProps  : public OCSTEPConstruct_Tool {

protected:
  // dummy constructor;
  OCSTEPConstruct_ValidationProps(OCDummy^) : OCSTEPConstruct_Tool((OCDummy^)nullptr) {};

public:

// constructor from native
OCSTEPConstruct_ValidationProps(STEPConstruct_ValidationProps* nativeHandle);

// Methods PUBLIC

//! Creates an empty tool <br>
OCSTEPConstruct_ValidationProps();

//! Creates a tool and loads it with worksession <br>
OCSTEPConstruct_ValidationProps(OCNaroWrappers::OCXSControl_WorkSession^ WS);

//! Load worksession; returns True if succeeded <br>
 /*instead*/  System::Boolean Init(OCNaroWrappers::OCXSControl_WorkSession^ WS) ;

//! General method for adding (writing) a validation property <br>
//!          for shape which should be already mapped on writing itself. <br>
//!          It uses FindTarget() to find target STEP entity <br>
//!          resulting from given shape, and associated context <br>
//!          Returns True if success, False in case of fail <br>
 /*instead*/  System::Boolean AddProp(OCNaroWrappers::OCTopoDS_Shape^ Shape, OCNaroWrappers::OCStepRepr_RepresentationItem^ Prop, System::String^ Descr, System::Boolean instance) ;

//! General method for adding (writing) a validation property <br>
//!          for shape which should be already mapped on writing itself. <br>
//!          It takes target and Context entities which correspond to shape <br>
//!          Returns True if success, False in case of fail <br>
 /*instead*/  System::Boolean AddProp(OCNaroWrappers::OCStepRepr_CharacterizedDefinition^ target, OCNaroWrappers::OCStepRepr_RepresentationContext^ Context, OCNaroWrappers::OCStepRepr_RepresentationItem^ Prop, System::String^ Descr) ;

//! Adds surface area property for given shape (already mapped). <br>
//!          Returns True if success, False in case of fail <br>
 /*instead*/  System::Boolean AddArea(OCNaroWrappers::OCTopoDS_Shape^ Shape, Standard_Real Area) ;

//! Adds volume property for given shape (already mapped). <br>
//!          Returns True if success, False in case of fail <br>
 /*instead*/  System::Boolean AddVolume(OCNaroWrappers::OCTopoDS_Shape^ Shape, Standard_Real Vol) ;

//! Adds centroid property for given shape (already mapped). <br>
//!          Returns True if success, False in case of fail <br>
//!          If instance is True, then centroid is assigned to <br>
//!          an instance of component in assembly <br>
 /*instead*/  System::Boolean AddCentroid(OCNaroWrappers::OCTopoDS_Shape^ Shape, OCNaroWrappers::OCgp_Pnt^ Pnt, System::Boolean instance) ;

//! Finds target STEP entity to which validation props should <br>
//!          be assigned, and corresponding context, starting from shape <br>
//!          Returns True if success, False in case of fail <br>
 /*instead*/  System::Boolean FindTarget(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCStepRepr_CharacterizedDefinition^ target, OCNaroWrappers::OCStepRepr_RepresentationContext^ Context, System::Boolean instance) ;

//! Searches for entities of the type PropertyDefinitionRepresentation <br>
//!          in the model and fills the sequence by them <br>
 /*instead*/  System::Boolean LoadProps(OCNaroWrappers::OCTColStd_SequenceOfTransient^ seq) ;

//! Returns CDSR associated with given PpD or NULL if not found <br>
//!          (when, try GetPropSDR) <br>
 /*instead*/  OCStepRepr_NextAssemblyUsageOccurrence^ GetPropNAUO(OCNaroWrappers::OCStepRepr_PropertyDefinition^ PD) ;

//! Returns SDR associated with given PpD or NULL if not found <br>
//!          (when, try GetPropCDSR) <br>
 /*instead*/  OCStepBasic_ProductDefinition^ GetPropPD(OCNaroWrappers::OCStepRepr_PropertyDefinition^ PD) ;

//! Returns Shape associated with given SDR or Null Shape <br>
//!          if not found <br>
 /*instead*/  OCTopoDS_Shape^ GetPropShape(OCNaroWrappers::OCStepBasic_ProductDefinition^ ProdDef) ;

//! Returns Shape associated with given PpD or Null Shape <br>
//!          if not found <br>
 /*instead*/  OCTopoDS_Shape^ GetPropShape(OCNaroWrappers::OCStepRepr_PropertyDefinition^ PD) ;

//! Returns value of Real-Valued property (Area or Volume) <br>
//!          If Property is neither Area nor Volume, returns False <br>
//!          Else returns True and isArea indicates whether property <br>
//!          is area or volume <br>
 /*instead*/  System::Boolean GetPropReal(OCNaroWrappers::OCStepRepr_RepresentationItem^ item, Standard_Real& Val, System::Boolean& isArea) ;

//! Returns value of Centriod property (or False if it is not) <br>
 /*instead*/  System::Boolean GetPropPnt(OCNaroWrappers::OCStepRepr_RepresentationItem^ item, OCNaroWrappers::OCStepRepr_RepresentationContext^ Context, OCNaroWrappers::OCgp_Pnt^ Pnt) ;

//! Sets current assembly shape SDR (for FindCDSR calls) <br>
 /*instead*/  void SetAssemblyShape(OCNaroWrappers::OCTopoDS_Shape^ shape) ;

~OCSTEPConstruct_ValidationProps()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
