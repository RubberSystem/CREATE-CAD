// File generated by CPPExt (CPP file)
//

#include "BRepBlend_RstRstLineBuilder.h"
#include "../Converter.h"
#include "BRepBlend_Line.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "../Adaptor3d/Adaptor3d_TopolTool.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"
#include "../Blend/Blend_RstRstFunction.h"
#include "../Blend/Blend_SurfCurvFuncInv.h"
#include "../Blend/Blend_CurvPointFuncInv.h"
#include "../math/math_Vector.h"
#include "../Adaptor3d/Adaptor3d_HVertex.h"
#include "../IntSurf/IntSurf_Transition.h"
#include "BRepBlend_Extremity.h"
#include "../Blend/Blend_Point.h"


using namespace OCNaroWrappers;

OCBRepBlend_RstRstLineBuilder::OCBRepBlend_RstRstLineBuilder(BRepBlend_RstRstLineBuilder* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepBlend_RstRstLineBuilder::OCBRepBlend_RstRstLineBuilder(OCNaroWrappers::OCAdaptor3d_HSurface^ Surf1, OCNaroWrappers::OCAdaptor2d_HCurve2d^ Rst1, OCNaroWrappers::OCAdaptor3d_TopolTool^ Domain1, OCNaroWrappers::OCAdaptor3d_HSurface^ Surf2, OCNaroWrappers::OCAdaptor2d_HCurve2d^ Rst2, OCNaroWrappers::OCAdaptor3d_TopolTool^ Domain2) 
{
  nativeHandle = new BRepBlend_RstRstLineBuilder(*((Handle_Adaptor3d_HSurface*)Surf1->Handle), *((Handle_Adaptor2d_HCurve2d*)Rst1->Handle), *((Handle_Adaptor3d_TopolTool*)Domain1->Handle), *((Handle_Adaptor3d_HSurface*)Surf2->Handle), *((Handle_Adaptor2d_HCurve2d*)Rst2->Handle), *((Handle_Adaptor3d_TopolTool*)Domain2->Handle));
}

 void OCBRepBlend_RstRstLineBuilder::Perform(OCNaroWrappers::OCBlend_RstRstFunction^ Func, OCNaroWrappers::OCBlend_SurfCurvFuncInv^ Finv1, OCNaroWrappers::OCBlend_CurvPointFuncInv^ FinvP1, OCNaroWrappers::OCBlend_SurfCurvFuncInv^ Finv2, OCNaroWrappers::OCBlend_CurvPointFuncInv^ FinvP2, Standard_Real Pdep, Standard_Real Pmax, Standard_Real MaxStep, Standard_Real TolGuide, OCNaroWrappers::OCmath_Vector^ Soldep, Standard_Real Tolesp, Standard_Real Fleche, System::Boolean Appro)
{
  ((BRepBlend_RstRstLineBuilder*)nativeHandle)->Perform(*((Blend_RstRstFunction*)Func->Handle), *((Blend_SurfCurvFuncInv*)Finv1->Handle), *((Blend_CurvPointFuncInv*)FinvP1->Handle), *((Blend_SurfCurvFuncInv*)Finv2->Handle), *((Blend_CurvPointFuncInv*)FinvP2->Handle), Pdep, Pmax, MaxStep, TolGuide, *((math_Vector*)Soldep->Handle), Tolesp, Fleche, OCConverter::BooleanToStandardBoolean(Appro));
}

 System::Boolean OCBRepBlend_RstRstLineBuilder::PerformFirstSection(OCNaroWrappers::OCBlend_RstRstFunction^ Func, OCNaroWrappers::OCBlend_SurfCurvFuncInv^ Finv1, OCNaroWrappers::OCBlend_CurvPointFuncInv^ FinvP1, OCNaroWrappers::OCBlend_SurfCurvFuncInv^ Finv2, OCNaroWrappers::OCBlend_CurvPointFuncInv^ FinvP2, Standard_Real Pdep, Standard_Real Pmax, OCNaroWrappers::OCmath_Vector^ Soldep, Standard_Real Tolesp, Standard_Real TolGuide, System::Boolean RecRst1, System::Boolean RecP1, System::Boolean RecRst2, System::Boolean RecP2, Standard_Real& Psol, OCNaroWrappers::OCmath_Vector^ ParSol)
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_RstRstLineBuilder*)nativeHandle)->PerformFirstSection(*((Blend_RstRstFunction*)Func->Handle), *((Blend_SurfCurvFuncInv*)Finv1->Handle), *((Blend_CurvPointFuncInv*)FinvP1->Handle), *((Blend_SurfCurvFuncInv*)Finv2->Handle), *((Blend_CurvPointFuncInv*)FinvP2->Handle), Pdep, Pmax, *((math_Vector*)Soldep->Handle), Tolesp, TolGuide, OCConverter::BooleanToStandardBoolean(RecRst1), OCConverter::BooleanToStandardBoolean(RecP1), OCConverter::BooleanToStandardBoolean(RecRst2), OCConverter::BooleanToStandardBoolean(RecP2), Psol, *((math_Vector*)ParSol->Handle)));
}

 System::Boolean OCBRepBlend_RstRstLineBuilder::Complete(OCNaroWrappers::OCBlend_RstRstFunction^ Func, OCNaroWrappers::OCBlend_SurfCurvFuncInv^ Finv1, OCNaroWrappers::OCBlend_CurvPointFuncInv^ FinvP1, OCNaroWrappers::OCBlend_SurfCurvFuncInv^ Finv2, OCNaroWrappers::OCBlend_CurvPointFuncInv^ FinvP2, Standard_Real Pmin)
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_RstRstLineBuilder*)nativeHandle)->Complete(*((Blend_RstRstFunction*)Func->Handle), *((Blend_SurfCurvFuncInv*)Finv1->Handle), *((Blend_CurvPointFuncInv*)FinvP1->Handle), *((Blend_SurfCurvFuncInv*)Finv2->Handle), *((Blend_CurvPointFuncInv*)FinvP2->Handle), Pmin));
}

 System::Boolean OCBRepBlend_RstRstLineBuilder::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_RstRstLineBuilder*)nativeHandle)->IsDone());
}

OCBRepBlend_Line^ OCBRepBlend_RstRstLineBuilder::Line()
{
  Handle(BRepBlend_Line) tmp = ((BRepBlend_RstRstLineBuilder*)nativeHandle)->Line();
  return gcnew OCBRepBlend_Line(&tmp);
}

 System::Boolean OCBRepBlend_RstRstLineBuilder::Decroch1Start()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_RstRstLineBuilder*)nativeHandle)->Decroch1Start());
}

 System::Boolean OCBRepBlend_RstRstLineBuilder::Decroch1End()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_RstRstLineBuilder*)nativeHandle)->Decroch1End());
}

 System::Boolean OCBRepBlend_RstRstLineBuilder::Decroch2Start()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_RstRstLineBuilder*)nativeHandle)->Decroch2Start());
}

 System::Boolean OCBRepBlend_RstRstLineBuilder::Decroch2End()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_RstRstLineBuilder*)nativeHandle)->Decroch2End());
}


