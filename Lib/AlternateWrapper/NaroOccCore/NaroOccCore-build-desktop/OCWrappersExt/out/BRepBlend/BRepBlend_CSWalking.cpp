// File generated by CPPExt (CPP file)
//

#include "BRepBlend_CSWalking.h"
#include "../Converter.h"
#include "BRepBlend_Line.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "../Adaptor3d/Adaptor3d_HCurve.h"
#include "../Adaptor3d/Adaptor3d_TopolTool.h"
#include "../TColStd/TColStd_HArray1OfReal.h"
#include "../Adaptor3d/Adaptor3d_HVertex.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"
#include "BRepBlend_HCurve2dTool.h"
#include "../Adaptor3d/Adaptor3d_HSurfaceTool.h"
#include "BRepBlend_HCurveTool.h"
#include "BRepBlend_BlendTool.h"
#include "BRepBlend_PointOnRst.h"
#include "BRepBlend_SequenceOfPointOnRst.h"
#include "BRepBlend_Extremity.h"
#include "../Blend/Blend_CSFunction.h"
#include "../math/math_Vector.h"
#include "../IntSurf/IntSurf_Transition.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Vec.h"
#include "../gp/gp_Vec2d.h"


using namespace OCNaroWrappers;

OCBRepBlend_CSWalking::OCBRepBlend_CSWalking(BRepBlend_CSWalking* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepBlend_CSWalking::OCBRepBlend_CSWalking(OCNaroWrappers::OCAdaptor3d_HCurve^ Curv, OCNaroWrappers::OCAdaptor3d_HSurface^ Surf, OCNaroWrappers::OCAdaptor3d_TopolTool^ Domain) 
{
  nativeHandle = new BRepBlend_CSWalking(*((Handle_Adaptor3d_HCurve*)Curv->Handle), *((Handle_Adaptor3d_HSurface*)Surf->Handle), *((Handle_Adaptor3d_TopolTool*)Domain->Handle));
}

 void OCBRepBlend_CSWalking::Perform(OCNaroWrappers::OCBlend_CSFunction^ F, Standard_Real Pdep, Standard_Real Pmax, Standard_Real MaxStep, Standard_Real TolGuide, OCNaroWrappers::OCmath_Vector^ Soldep, Standard_Real Tolesp, Standard_Real Fleche, System::Boolean Appro)
{
  ((BRepBlend_CSWalking*)nativeHandle)->Perform(*((Blend_CSFunction*)F->Handle), Pdep, Pmax, MaxStep, TolGuide, *((math_Vector*)Soldep->Handle), Tolesp, Fleche, OCConverter::BooleanToStandardBoolean(Appro));
}

 System::Boolean OCBRepBlend_CSWalking::Complete(OCNaroWrappers::OCBlend_CSFunction^ F, Standard_Real Pmin)
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_CSWalking*)nativeHandle)->Complete(*((Blend_CSFunction*)F->Handle), Pmin));
}

 System::Boolean OCBRepBlend_CSWalking::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_CSWalking*)nativeHandle)->IsDone());
}

OCBRepBlend_Line^ OCBRepBlend_CSWalking::Line()
{
  Handle(BRepBlend_Line) tmp = ((BRepBlend_CSWalking*)nativeHandle)->Line();
  return gcnew OCBRepBlend_Line(&tmp);
}


