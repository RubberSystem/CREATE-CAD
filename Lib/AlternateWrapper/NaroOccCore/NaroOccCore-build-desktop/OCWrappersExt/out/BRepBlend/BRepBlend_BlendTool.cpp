// File generated by CPPExt (CPP file)
//

#include "BRepBlend_BlendTool.h"
#include "../Converter.h"
#include "../gp/gp_Pnt2d.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"
#include "../Adaptor3d/Adaptor3d_HVertex.h"


using namespace OCNaroWrappers;

OCBRepBlend_BlendTool::OCBRepBlend_BlendTool(BRepBlend_BlendTool* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 System::Boolean OCBRepBlend_BlendTool::Project(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCAdaptor3d_HSurface^ S, OCNaroWrappers::OCAdaptor2d_HCurve2d^ C, Standard_Real& Paramproj, Standard_Real& Dist)
{
  return OCConverter::StandardBooleanToBoolean(BRepBlend_BlendTool::Project(*((gp_Pnt2d*)P->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle), *((Handle_Adaptor2d_HCurve2d*)C->Handle), Paramproj, Dist));
}

 System::Boolean OCBRepBlend_BlendTool::Inters(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2, OCNaroWrappers::OCAdaptor3d_HSurface^ S, OCNaroWrappers::OCAdaptor2d_HCurve2d^ C, Standard_Real& Param, Standard_Real& Dist)
{
  return OCConverter::StandardBooleanToBoolean(BRepBlend_BlendTool::Inters(*((gp_Pnt2d*)P1->Handle), *((gp_Pnt2d*)P2->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle), *((Handle_Adaptor2d_HCurve2d*)C->Handle), Param, Dist));
}

 Standard_Real OCBRepBlend_BlendTool::Parameter(OCNaroWrappers::OCAdaptor3d_HVertex^ V, OCNaroWrappers::OCAdaptor2d_HCurve2d^ A)
{
  return BRepBlend_BlendTool::Parameter(*((Handle_Adaptor3d_HVertex*)V->Handle), *((Handle_Adaptor2d_HCurve2d*)A->Handle));
}

 Standard_Real OCBRepBlend_BlendTool::Tolerance(OCNaroWrappers::OCAdaptor3d_HVertex^ V, OCNaroWrappers::OCAdaptor2d_HCurve2d^ A)
{
  return BRepBlend_BlendTool::Tolerance(*((Handle_Adaptor3d_HVertex*)V->Handle), *((Handle_Adaptor2d_HCurve2d*)A->Handle));
}

 System::Boolean OCBRepBlend_BlendTool::SingularOnUMin(OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  return OCConverter::StandardBooleanToBoolean(BRepBlend_BlendTool::SingularOnUMin(*((Handle_Adaptor3d_HSurface*)S->Handle)));
}

 System::Boolean OCBRepBlend_BlendTool::SingularOnUMax(OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  return OCConverter::StandardBooleanToBoolean(BRepBlend_BlendTool::SingularOnUMax(*((Handle_Adaptor3d_HSurface*)S->Handle)));
}

 System::Boolean OCBRepBlend_BlendTool::SingularOnVMin(OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  return OCConverter::StandardBooleanToBoolean(BRepBlend_BlendTool::SingularOnVMin(*((Handle_Adaptor3d_HSurface*)S->Handle)));
}

 System::Boolean OCBRepBlend_BlendTool::SingularOnVMax(OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  return OCConverter::StandardBooleanToBoolean(BRepBlend_BlendTool::SingularOnVMax(*((Handle_Adaptor3d_HSurface*)S->Handle)));
}

 Standard_Integer OCBRepBlend_BlendTool::NbSamplesU(OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real u1, Standard_Real u2)
{
  return BRepBlend_BlendTool::NbSamplesU(*((Handle_Adaptor3d_HSurface*)S->Handle), u1, u2);
}

 Standard_Integer OCBRepBlend_BlendTool::NbSamplesV(OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real v1, Standard_Real v2)
{
  return BRepBlend_BlendTool::NbSamplesV(*((Handle_Adaptor3d_HSurface*)S->Handle), v1, v2);
}

 void OCBRepBlend_BlendTool::Bounds(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C, Standard_Real& Ufirst, Standard_Real& Ulast)
{
  BRepBlend_BlendTool::Bounds(*((Handle_Adaptor2d_HCurve2d*)C->Handle), Ufirst, Ulast);
}

OCAdaptor2d_HCurve2d^ OCBRepBlend_BlendTool::CurveOnSurf(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  Handle(Adaptor2d_HCurve2d) tmp = BRepBlend_BlendTool::CurveOnSurf(*((Handle_Adaptor2d_HCurve2d*)C->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle));
  return gcnew OCAdaptor2d_HCurve2d(&tmp);
}


