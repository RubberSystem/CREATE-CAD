// File generated by CPPExt (CPP file)
//

#include "BRepBlend_AppFuncRoot.h"
#include "../Converter.h"
#include "BRepBlend_Line.h"
#include "../Blend/Blend_AppFunction.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "../TColgp/TColgp_Array1OfVec.h"
#include "../TColgp/TColgp_Array1OfVec2d.h"
#include "../TColStd/TColStd_Array1OfInteger.h"
#include "../gp/gp_Pnt.h"
#include "../Blend/Blend_Point.h"
#include "../math/math_Vector.h"


using namespace OCNaroWrappers;

OCBRepBlend_AppFuncRoot::OCBRepBlend_AppFuncRoot(Handle(BRepBlend_AppFuncRoot)* nativeHandle) : OCApprox_SweepFunction((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_BRepBlend_AppFuncRoot(*nativeHandle);
}

OCBRepBlend_AppFuncRoot::OCBRepBlend_AppFuncRoot(OCNaroWrappers::OCBRepBlend_Line^ Line, OCNaroWrappers::OCBlend_AppFunction^ Func, Standard_Real Tol3d, Standard_Real Tol2d) : OCApprox_SweepFunction((OCDummy^)nullptr)

{}

 System::Boolean OCBRepBlend_AppFuncRoot::D0(Standard_Real Param, Standard_Real First, Standard_Real Last, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Poles2d, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->D0(Param, First, Last, *((TColgp_Array1OfPnt*)Poles->Handle), *((TColgp_Array1OfPnt2d*)Poles2d->Handle), *((TColStd_Array1OfReal*)Weigths->Handle)));
}

 System::Boolean OCBRepBlend_AppFuncRoot::D1(Standard_Real Param, Standard_Real First, Standard_Real Last, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColgp_Array1OfVec^ DPoles, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Poles2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ DPoles2d, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths, OCNaroWrappers::OCTColStd_Array1OfReal^ DWeigths)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->D1(Param, First, Last, *((TColgp_Array1OfPnt*)Poles->Handle), *((TColgp_Array1OfVec*)DPoles->Handle), *((TColgp_Array1OfPnt2d*)Poles2d->Handle), *((TColgp_Array1OfVec2d*)DPoles2d->Handle), *((TColStd_Array1OfReal*)Weigths->Handle), *((TColStd_Array1OfReal*)DWeigths->Handle)));
}

 System::Boolean OCBRepBlend_AppFuncRoot::D2(Standard_Real Param, Standard_Real First, Standard_Real Last, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColgp_Array1OfVec^ DPoles, OCNaroWrappers::OCTColgp_Array1OfVec^ D2Poles, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Poles2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ DPoles2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ D2Poles2d, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths, OCNaroWrappers::OCTColStd_Array1OfReal^ DWeigths, OCNaroWrappers::OCTColStd_Array1OfReal^ D2Weigths)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->D2(Param, First, Last, *((TColgp_Array1OfPnt*)Poles->Handle), *((TColgp_Array1OfVec*)DPoles->Handle), *((TColgp_Array1OfVec*)D2Poles->Handle), *((TColgp_Array1OfPnt2d*)Poles2d->Handle), *((TColgp_Array1OfVec2d*)DPoles2d->Handle), *((TColgp_Array1OfVec2d*)D2Poles2d->Handle), *((TColStd_Array1OfReal*)Weigths->Handle), *((TColStd_Array1OfReal*)DWeigths->Handle), *((TColStd_Array1OfReal*)D2Weigths->Handle)));
}

 Standard_Integer OCBRepBlend_AppFuncRoot::Nb2dCurves()
{
  return (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->Nb2dCurves();
}

 void OCBRepBlend_AppFuncRoot::SectionShape(Standard_Integer& NbPoles, Standard_Integer& NbKnots, Standard_Integer& Degree)
{
  (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->SectionShape(NbPoles, NbKnots, Degree);
}

 void OCBRepBlend_AppFuncRoot::Knots(OCNaroWrappers::OCTColStd_Array1OfReal^ TKnots)
{
  (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->Knots(*((TColStd_Array1OfReal*)TKnots->Handle));
}

 void OCBRepBlend_AppFuncRoot::Mults(OCNaroWrappers::OCTColStd_Array1OfInteger^ TMults)
{
  (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->Mults(*((TColStd_Array1OfInteger*)TMults->Handle));
}

 System::Boolean OCBRepBlend_AppFuncRoot::IsRational()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->IsRational());
}

 Standard_Integer OCBRepBlend_AppFuncRoot::NbIntervals(OCGeomAbs_Shape S)
{
  return (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->NbIntervals((GeomAbs_Shape)S);
}

 void OCBRepBlend_AppFuncRoot::Intervals(OCNaroWrappers::OCTColStd_Array1OfReal^ T, OCGeomAbs_Shape S)
{
  (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->Intervals(*((TColStd_Array1OfReal*)T->Handle), (GeomAbs_Shape)S);
}

 void OCBRepBlend_AppFuncRoot::SetInterval(Standard_Real First, Standard_Real Last)
{
  (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->SetInterval(First, Last);
}

 void OCBRepBlend_AppFuncRoot::Resolution(Standard_Integer Index, Standard_Real Tol, Standard_Real& TolU, Standard_Real& TolV)
{
  (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->Resolution(Index, Tol, TolU, TolV);
}

 void OCBRepBlend_AppFuncRoot::GetTolerance(Standard_Real BoundTol, Standard_Real SurfTol, Standard_Real AngleTol, OCNaroWrappers::OCTColStd_Array1OfReal^ Tol3d)
{
  (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->GetTolerance(BoundTol, SurfTol, AngleTol, *((TColStd_Array1OfReal*)Tol3d->Handle));
}

 void OCBRepBlend_AppFuncRoot::SetTolerance(Standard_Real Tol3d, Standard_Real Tol2d)
{
  (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->SetTolerance(Tol3d, Tol2d);
}

OCgp_Pnt^ OCBRepBlend_AppFuncRoot::BarycentreOfSurf()
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->BarycentreOfSurf();
  return gcnew OCgp_Pnt(tmp);
}

 Standard_Real OCBRepBlend_AppFuncRoot::MaximalSection()
{
  return (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->MaximalSection();
}

 void OCBRepBlend_AppFuncRoot::GetMinimalWeight(OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths)
{
  (*((Handle_BRepBlend_AppFuncRoot*)nativeHandle))->GetMinimalWeight(*((TColStd_Array1OfReal*)Weigths->Handle));
}


