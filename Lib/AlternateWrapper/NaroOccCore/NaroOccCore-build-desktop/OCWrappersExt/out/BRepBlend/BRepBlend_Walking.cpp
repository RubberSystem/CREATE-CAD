// File generated by CPPExt (CPP file)
//

#include "BRepBlend_Walking.h"
#include "../Converter.h"
#include "BRepBlend_Line.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "../Adaptor3d/Adaptor3d_TopolTool.h"
#include "../Adaptor3d/Adaptor3d_HVertex.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"
#include "../Adaptor3d/Adaptor3d_HCurve.h"
#include "BRepBlend_HCurve2dTool.h"
#include "../Adaptor3d/Adaptor3d_HSurfaceTool.h"
#include "BRepBlend_HCurveTool.h"
#include "BRepBlend_BlendTool.h"
#include "BRepBlend_PointOnRst.h"
#include "BRepBlend_SequenceOfPointOnRst.h"
#include "BRepBlend_Extremity.h"
#include "../Blend/Blend_Point.h"
#include "../Blend/Blend_Function.h"
#include "../Blend/Blend_FuncInv.h"
#include "../math/math_Vector.h"
#include "../gp/gp_Pnt2d.h"
#include "../IntSurf/IntSurf_Transition.h"


using namespace OCNaroWrappers;

OCBRepBlend_Walking::OCBRepBlend_Walking(BRepBlend_Walking* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepBlend_Walking::OCBRepBlend_Walking(OCNaroWrappers::OCAdaptor3d_HSurface^ Surf1, OCNaroWrappers::OCAdaptor3d_HSurface^ Surf2, OCNaroWrappers::OCAdaptor3d_TopolTool^ Domain1, OCNaroWrappers::OCAdaptor3d_TopolTool^ Domain2) 
{
  nativeHandle = new BRepBlend_Walking(*((Handle_Adaptor3d_HSurface*)Surf1->Handle), *((Handle_Adaptor3d_HSurface*)Surf2->Handle), *((Handle_Adaptor3d_TopolTool*)Domain1->Handle), *((Handle_Adaptor3d_TopolTool*)Domain2->Handle));
}

 void OCBRepBlend_Walking::SetDomainsToRecadre(OCNaroWrappers::OCAdaptor3d_TopolTool^ RecDomain1, OCNaroWrappers::OCAdaptor3d_TopolTool^ RecDomain2)
{
  ((BRepBlend_Walking*)nativeHandle)->SetDomainsToRecadre(*((Handle_Adaptor3d_TopolTool*)RecDomain1->Handle), *((Handle_Adaptor3d_TopolTool*)RecDomain2->Handle));
}

 void OCBRepBlend_Walking::AddSingularPoint(OCNaroWrappers::OCBlend_Point^ P)
{
  ((BRepBlend_Walking*)nativeHandle)->AddSingularPoint(*((Blend_Point*)P->Handle));
}

 void OCBRepBlend_Walking::Perform(OCNaroWrappers::OCBlend_Function^ F, OCNaroWrappers::OCBlend_FuncInv^ FInv, Standard_Real Pdep, Standard_Real Pmax, Standard_Real MaxStep, Standard_Real TolGuide, OCNaroWrappers::OCmath_Vector^ Soldep, Standard_Real Tolesp, Standard_Real Fleche, System::Boolean Appro)
{
  ((BRepBlend_Walking*)nativeHandle)->Perform(*((Blend_Function*)F->Handle), *((Blend_FuncInv*)FInv->Handle), Pdep, Pmax, MaxStep, TolGuide, *((math_Vector*)Soldep->Handle), Tolesp, Fleche, OCConverter::BooleanToStandardBoolean(Appro));
}

 System::Boolean OCBRepBlend_Walking::PerformFirstSection(OCNaroWrappers::OCBlend_Function^ F, Standard_Real Pdep, OCNaroWrappers::OCmath_Vector^ ParDep, Standard_Real Tolesp, Standard_Real TolGuide, OCTopAbs_State& Pos1, OCTopAbs_State& Pos2)
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_Walking*)nativeHandle)->PerformFirstSection(*((Blend_Function*)F->Handle), Pdep, *((math_Vector*)ParDep->Handle), Tolesp, TolGuide, (TopAbs_State&)Pos1, (TopAbs_State&)Pos2));
}

 System::Boolean OCBRepBlend_Walking::PerformFirstSection(OCNaroWrappers::OCBlend_Function^ F, OCNaroWrappers::OCBlend_FuncInv^ FInv, Standard_Real Pdep, Standard_Real Pmax, OCNaroWrappers::OCmath_Vector^ ParDep, Standard_Real Tolesp, Standard_Real TolGuide, System::Boolean RecOnS1, System::Boolean RecOnS2, Standard_Real& Psol, OCNaroWrappers::OCmath_Vector^ ParSol)
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_Walking*)nativeHandle)->PerformFirstSection(*((Blend_Function*)F->Handle), *((Blend_FuncInv*)FInv->Handle), Pdep, Pmax, *((math_Vector*)ParDep->Handle), Tolesp, TolGuide, OCConverter::BooleanToStandardBoolean(RecOnS1), OCConverter::BooleanToStandardBoolean(RecOnS2), Psol, *((math_Vector*)ParSol->Handle)));
}

 System::Boolean OCBRepBlend_Walking::Continu(OCNaroWrappers::OCBlend_Function^ F, OCNaroWrappers::OCBlend_FuncInv^ FInv, Standard_Real P)
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_Walking*)nativeHandle)->Continu(*((Blend_Function*)F->Handle), *((Blend_FuncInv*)FInv->Handle), P));
}

 System::Boolean OCBRepBlend_Walking::Continu(OCNaroWrappers::OCBlend_Function^ F, OCNaroWrappers::OCBlend_FuncInv^ FInv, Standard_Real P, System::Boolean OnS1)
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_Walking*)nativeHandle)->Continu(*((Blend_Function*)F->Handle), *((Blend_FuncInv*)FInv->Handle), P, OCConverter::BooleanToStandardBoolean(OnS1)));
}

 System::Boolean OCBRepBlend_Walking::Complete(OCNaroWrappers::OCBlend_Function^ F, OCNaroWrappers::OCBlend_FuncInv^ FInv, Standard_Real Pmin)
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_Walking*)nativeHandle)->Complete(*((Blend_Function*)F->Handle), *((Blend_FuncInv*)FInv->Handle), Pmin));
}

 void OCBRepBlend_Walking::ClassificationOnS1(System::Boolean C)
{
  ((BRepBlend_Walking*)nativeHandle)->ClassificationOnS1(OCConverter::BooleanToStandardBoolean(C));
}

 void OCBRepBlend_Walking::ClassificationOnS2(System::Boolean C)
{
  ((BRepBlend_Walking*)nativeHandle)->ClassificationOnS2(OCConverter::BooleanToStandardBoolean(C));
}

 void OCBRepBlend_Walking::Check2d(System::Boolean C)
{
  ((BRepBlend_Walking*)nativeHandle)->Check2d(OCConverter::BooleanToStandardBoolean(C));
}

 void OCBRepBlend_Walking::Check(System::Boolean C)
{
  ((BRepBlend_Walking*)nativeHandle)->Check(OCConverter::BooleanToStandardBoolean(C));
}

 System::Boolean OCBRepBlend_Walking::TwistOnS1()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_Walking*)nativeHandle)->TwistOnS1());
}

 System::Boolean OCBRepBlend_Walking::TwistOnS2()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_Walking*)nativeHandle)->TwistOnS2());
}

 System::Boolean OCBRepBlend_Walking::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBlend_Walking*)nativeHandle)->IsDone());
}

OCBRepBlend_Line^ OCBRepBlend_Walking::Line()
{
  Handle(BRepBlend_Line) tmp = ((BRepBlend_Walking*)nativeHandle)->Line();
  return gcnew OCBRepBlend_Line(&tmp);
}


