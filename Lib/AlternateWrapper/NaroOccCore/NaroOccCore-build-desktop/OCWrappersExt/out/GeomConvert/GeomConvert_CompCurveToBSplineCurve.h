// File generated by CPPExt (MPV)
//
#ifndef _GeomConvert_CompCurveToBSplineCurve_OCWrappers_HeaderFile
#define _GeomConvert_CompCurveToBSplineCurve_OCWrappers_HeaderFile

// include native header
#include <GeomConvert_CompCurveToBSplineCurve.hxx>
#include "../Converter.h"


#include "../Convert/Convert_ParameterisationType.h"


namespace OCNaroWrappers
{

ref class OCGeom_BSplineCurve;
ref class OCGeom_BoundedCurve;


//! Concat several curve in an BSplineCurve <br>
public ref class OCGeomConvert_CompCurveToBSplineCurve  {

protected:
  GeomConvert_CompCurveToBSplineCurve* nativeHandle;
  OCGeomConvert_CompCurveToBSplineCurve(OCDummy^) {};

public:
  property GeomConvert_CompCurveToBSplineCurve* Handle
  {
    GeomConvert_CompCurveToBSplineCurve* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeomConvert_CompCurveToBSplineCurve(GeomConvert_CompCurveToBSplineCurve* nativeHandle);

// Methods PUBLIC

//! Initialize the algorithme with one curve <br>
//!        - Parameterisation is used to convert <br>
OCGeomConvert_CompCurveToBSplineCurve(OCNaroWrappers::OCGeom_BoundedCurve^ BasisCurve, OCConvert_ParameterisationType Parameterisation);

//! Append a curve in  the BSpline Return False if the <br>
//!          curve is not G0  with the BSplineCurve.  Tolerance <br>
//!             is   used to   check   continuity  and decrease <br>
//!          Multiplicity at the common Knot until MinM <br>
//!          if MinM = 0, the common Knot can be removed <br>
 /*instead*/  System::Boolean Add(OCNaroWrappers::OCGeom_BoundedCurve^ NewCurve, Standard_Real Tolerance, System::Boolean After, System::Boolean WithRatio, Standard_Integer MinM) ;


 /*instead*/  OCGeom_BSplineCurve^ BSplineCurve() ;

~OCGeomConvert_CompCurveToBSplineCurve()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
