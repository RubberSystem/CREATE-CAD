// File generated by CPPExt (CPP file)
//

#include "GeomConvert.h"
#include "../Converter.h"


using namespace OCNaroWrappers;



OCGeom_BSplineCurve^ OCGeomConvert::SplitBSplineCurve(OCNaroWrappers::OCGeom_BSplineCurve^ C, Standard_Integer FromK1, Standard_Integer ToK2, System::Boolean SameOrientation)
{
  Handle(Geom_BSplineCurve) tmp = GeomConvert::SplitBSplineCurve(*((Handle_Geom_BSplineCurve*)C->Handle), FromK1, ToK2, OCConverter::BooleanToStandardBoolean(SameOrientation));
  return gcnew OCGeom_BSplineCurve(&tmp);
}

OCGeom_BSplineCurve^ OCGeomConvert::SplitBSplineCurve(OCNaroWrappers::OCGeom_BSplineCurve^ C, Standard_Real FromU1, Standard_Real ToU2, Standard_Real ParametricTolerance, System::Boolean SameOrientation)
{
  Handle(Geom_BSplineCurve) tmp = GeomConvert::SplitBSplineCurve(*((Handle_Geom_BSplineCurve*)C->Handle), FromU1, ToU2, ParametricTolerance, OCConverter::BooleanToStandardBoolean(SameOrientation));
  return gcnew OCGeom_BSplineCurve(&tmp);
}

OCGeom_BSplineSurface^ OCGeomConvert::SplitBSplineSurface(OCNaroWrappers::OCGeom_BSplineSurface^ S, Standard_Integer FromUK1, Standard_Integer ToUK2, Standard_Integer FromVK1, Standard_Integer ToVK2, System::Boolean SameUOrientation, System::Boolean SameVOrientation)
{
  Handle(Geom_BSplineSurface) tmp = GeomConvert::SplitBSplineSurface(*((Handle_Geom_BSplineSurface*)S->Handle), FromUK1, ToUK2, FromVK1, ToVK2, OCConverter::BooleanToStandardBoolean(SameUOrientation), OCConverter::BooleanToStandardBoolean(SameVOrientation));
  return gcnew OCGeom_BSplineSurface(&tmp);
}

OCGeom_BSplineSurface^ OCGeomConvert::SplitBSplineSurface(OCNaroWrappers::OCGeom_BSplineSurface^ S, Standard_Integer FromK1, Standard_Integer ToK2, System::Boolean USplit, System::Boolean SameOrientation)
{
  Handle(Geom_BSplineSurface) tmp = GeomConvert::SplitBSplineSurface(*((Handle_Geom_BSplineSurface*)S->Handle), FromK1, ToK2, OCConverter::BooleanToStandardBoolean(USplit), OCConverter::BooleanToStandardBoolean(SameOrientation));
  return gcnew OCGeom_BSplineSurface(&tmp);
}

OCGeom_BSplineSurface^ OCGeomConvert::SplitBSplineSurface(OCNaroWrappers::OCGeom_BSplineSurface^ S, Standard_Real FromU1, Standard_Real ToU2, Standard_Real FromV1, Standard_Real ToV2, Standard_Real ParametricTolerance, System::Boolean SameUOrientation, System::Boolean SameVOrientation)
{
  Handle(Geom_BSplineSurface) tmp = GeomConvert::SplitBSplineSurface(*((Handle_Geom_BSplineSurface*)S->Handle), FromU1, ToU2, FromV1, ToV2, ParametricTolerance, OCConverter::BooleanToStandardBoolean(SameUOrientation), OCConverter::BooleanToStandardBoolean(SameVOrientation));
  return gcnew OCGeom_BSplineSurface(&tmp);
}

OCGeom_BSplineSurface^ OCGeomConvert::SplitBSplineSurface(OCNaroWrappers::OCGeom_BSplineSurface^ S, Standard_Real FromParam1, Standard_Real ToParam2, System::Boolean USplit, Standard_Real ParametricTolerance, System::Boolean SameOrientation)
{
  Handle(Geom_BSplineSurface) tmp = GeomConvert::SplitBSplineSurface(*((Handle_Geom_BSplineSurface*)S->Handle), FromParam1, ToParam2, OCConverter::BooleanToStandardBoolean(USplit), ParametricTolerance, OCConverter::BooleanToStandardBoolean(SameOrientation));
  return gcnew OCGeom_BSplineSurface(&tmp);
}

OCGeom_BSplineCurve^ OCGeomConvert::CurveToBSplineCurve(OCNaroWrappers::OCGeom_Curve^ C, OCConvert_ParameterisationType Parameterisation)
{
  Handle(Geom_BSplineCurve) tmp = GeomConvert::CurveToBSplineCurve(*((Handle_Geom_Curve*)C->Handle), (Convert_ParameterisationType)Parameterisation);
  return gcnew OCGeom_BSplineCurve(&tmp);
}

OCGeom_BSplineSurface^ OCGeomConvert::SurfaceToBSplineSurface(OCNaroWrappers::OCGeom_Surface^ S)
{
  Handle(Geom_BSplineSurface) tmp = GeomConvert::SurfaceToBSplineSurface(*((Handle_Geom_Surface*)S->Handle));
  return gcnew OCGeom_BSplineSurface(&tmp);
}

 void OCGeomConvert::ConcatG1(OCNaroWrappers::OCTColGeom_Array1OfBSplineCurve^ ArrayOfCurves, OCNaroWrappers::OCTColStd_Array1OfReal^ ArrayOfToler, OCNaroWrappers::OCTColGeom_HArray1OfBSplineCurve^ ArrayOfConcatenated, System::Boolean ClosedG1Flag, Standard_Real ClosedTolerance)
{
  GeomConvert::ConcatG1(*((TColGeom_Array1OfBSplineCurve*)ArrayOfCurves->Handle), *((TColStd_Array1OfReal*)ArrayOfToler->Handle), *((Handle_TColGeom_HArray1OfBSplineCurve*)ArrayOfConcatenated->Handle), OCConverter::BooleanToStandardBoolean(ClosedG1Flag), ClosedTolerance);
}

 void OCGeomConvert::ConcatC1(OCNaroWrappers::OCTColGeom_Array1OfBSplineCurve^ ArrayOfCurves, OCNaroWrappers::OCTColStd_Array1OfReal^ ArrayOfToler, OCNaroWrappers::OCTColStd_HArray1OfInteger^ ArrayOfIndices, OCNaroWrappers::OCTColGeom_HArray1OfBSplineCurve^ ArrayOfConcatenated, System::Boolean ClosedG1Flag, Standard_Real ClosedTolerance)
{
  GeomConvert::ConcatC1(*((TColGeom_Array1OfBSplineCurve*)ArrayOfCurves->Handle), *((TColStd_Array1OfReal*)ArrayOfToler->Handle), *((Handle_TColStd_HArray1OfInteger*)ArrayOfIndices->Handle), *((Handle_TColGeom_HArray1OfBSplineCurve*)ArrayOfConcatenated->Handle), OCConverter::BooleanToStandardBoolean(ClosedG1Flag), ClosedTolerance);
}

 void OCGeomConvert::ConcatC1(OCNaroWrappers::OCTColGeom_Array1OfBSplineCurve^ ArrayOfCurves, OCNaroWrappers::OCTColStd_Array1OfReal^ ArrayOfToler, OCNaroWrappers::OCTColStd_HArray1OfInteger^ ArrayOfIndices, OCNaroWrappers::OCTColGeom_HArray1OfBSplineCurve^ ArrayOfConcatenated, System::Boolean ClosedG1Flag, Standard_Real ClosedTolerance, Standard_Real AngularTolerance)
{
  GeomConvert::ConcatC1(*((TColGeom_Array1OfBSplineCurve*)ArrayOfCurves->Handle), *((TColStd_Array1OfReal*)ArrayOfToler->Handle), *((Handle_TColStd_HArray1OfInteger*)ArrayOfIndices->Handle), *((Handle_TColGeom_HArray1OfBSplineCurve*)ArrayOfConcatenated->Handle), OCConverter::BooleanToStandardBoolean(ClosedG1Flag), ClosedTolerance, AngularTolerance);
}

 void OCGeomConvert::C0BSplineToC1BSplineCurve(OCNaroWrappers::OCGeom_BSplineCurve^ BS, Standard_Real tolerance, Standard_Real AngularTolerance)
{
  GeomConvert::C0BSplineToC1BSplineCurve(*((Handle_Geom_BSplineCurve*)BS->Handle), tolerance, AngularTolerance);
}

 void OCGeomConvert::C0BSplineToArrayOfC1BSplineCurve(OCNaroWrappers::OCGeom_BSplineCurve^ BS, OCNaroWrappers::OCTColGeom_HArray1OfBSplineCurve^ tabBS, Standard_Real tolerance)
{
  GeomConvert::C0BSplineToArrayOfC1BSplineCurve(*((Handle_Geom_BSplineCurve*)BS->Handle), *((Handle_TColGeom_HArray1OfBSplineCurve*)tabBS->Handle), tolerance);
}

 void OCGeomConvert::C0BSplineToArrayOfC1BSplineCurve(OCNaroWrappers::OCGeom_BSplineCurve^ BS, OCNaroWrappers::OCTColGeom_HArray1OfBSplineCurve^ tabBS, Standard_Real AngularTolerance, Standard_Real tolerance)
{
  GeomConvert::C0BSplineToArrayOfC1BSplineCurve(*((Handle_Geom_BSplineCurve*)BS->Handle), *((Handle_TColGeom_HArray1OfBSplineCurve*)tabBS->Handle), AngularTolerance, tolerance);
}


