// File generated by CPPExt (Transient)
//
#ifndef _Poly_HArray1OfTriangle_OCWrappers_HeaderFile
#define _Poly_HArray1OfTriangle_OCWrappers_HeaderFile

// include the wrapped class
#include <Poly_HArray1OfTriangle.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Poly_Array1OfTriangle.h"


namespace OCNaroWrappers
{

ref class OCPoly_Triangle;
ref class OCPoly_Array1OfTriangle;



public ref class OCPoly_HArray1OfTriangle : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCPoly_HArray1OfTriangle(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCPoly_HArray1OfTriangle(Handle(Poly_HArray1OfTriangle)* nativeHandle);

// Methods PUBLIC


OCPoly_HArray1OfTriangle(Standard_Integer Low, Standard_Integer Up);


OCPoly_HArray1OfTriangle(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCPoly_Triangle^ V);


 /*instead*/  void Init(OCNaroWrappers::OCPoly_Triangle^ V) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCPoly_Triangle^ Value) ;


 /*instead*/  OCPoly_Triangle^ Value(Standard_Integer Index) ;


 /*instead*/  OCPoly_Triangle^ ChangeValue(Standard_Integer Index) ;


 /*instead*/  OCPoly_Array1OfTriangle^ Array1() ;


 /*instead*/  OCPoly_Array1OfTriangle^ ChangeArray1() ;

~OCPoly_HArray1OfTriangle()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
