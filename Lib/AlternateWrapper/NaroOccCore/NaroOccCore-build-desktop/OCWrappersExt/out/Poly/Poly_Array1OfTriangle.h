// File generated by CPPExt (MPV)
//
#ifndef _Poly_Array1OfTriangle_OCWrappers_HeaderFile
#define _Poly_Array1OfTriangle_OCWrappers_HeaderFile

// include native header
#include <Poly_Array1OfTriangle.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCPoly_Triangle;



public ref class OCPoly_Array1OfTriangle  {

protected:
  Poly_Array1OfTriangle* nativeHandle;
  OCPoly_Array1OfTriangle(OCDummy^) {};

public:
  property Poly_Array1OfTriangle* Handle
  {
    Poly_Array1OfTriangle* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCPoly_Array1OfTriangle(Poly_Array1OfTriangle* nativeHandle);

// Methods PUBLIC


OCPoly_Array1OfTriangle(Standard_Integer Low, Standard_Integer Up);


OCPoly_Array1OfTriangle(OCNaroWrappers::OCPoly_Triangle^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCPoly_Triangle^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCPoly_Array1OfTriangle^ Assign(OCNaroWrappers::OCPoly_Array1OfTriangle^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCPoly_Triangle^ Value) ;


 /*instead*/  OCPoly_Triangle^ Value(Standard_Integer Index) ;


 /*instead*/  OCPoly_Triangle^ ChangeValue(Standard_Integer Index) ;

~OCPoly_Array1OfTriangle()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
