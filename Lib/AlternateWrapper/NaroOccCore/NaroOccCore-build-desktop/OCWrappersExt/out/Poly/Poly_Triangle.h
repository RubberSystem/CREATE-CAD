// File generated by CPPExt (MPV)
//
#ifndef _Poly_Triangle_OCWrappers_HeaderFile
#define _Poly_Triangle_OCWrappers_HeaderFile

// include native header
#include <Poly_Triangle.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{



//! Describes a component triangle of a triangulation <br>
//! (Poly_Triangulation object). <br>
//! A Triangle is defined by a triplet of nodes. Each node is an <br>
//! index in the table of nodes specific to an existing <br>
//! triangulation of a shape, and represents a point on the surface. <br>
public ref class OCPoly_Triangle  {

protected:
  Poly_Triangle* nativeHandle;
  OCPoly_Triangle(OCDummy^) {};

public:
  property Poly_Triangle* Handle
  {
    Poly_Triangle* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCPoly_Triangle(Poly_Triangle* nativeHandle);

// Methods PUBLIC

//! Constructs a triangle and sets all indices to zero. <br>
OCPoly_Triangle();

//! Constructs a triangle and sets its three indices <br>
//! to N1, N2 and N3 respectively, where these node values <br>
//!   are indices in the table of nodes specific to an existing <br>
//!   triangulation of a shape. <br>
OCPoly_Triangle(Standard_Integer N1, Standard_Integer N2, Standard_Integer N3);

//! Sets the value of  the three nodes of this triangle to N1, N2 and N3   respectively. <br>
 /*instead*/  void Set(Standard_Integer N1, Standard_Integer N2, Standard_Integer N3) ;

//! Sets the value of  the Indexth node of this triangle to Node. <br>
//! Raises OutOfRange if Index is not in 1,2,3 <br>
 /*instead*/  void Set(Standard_Integer Index, Standard_Integer Node) ;

//! Returns the node indices of this triangle in N1, N2 and N3. <br>
 /*instead*/  void Get(Standard_Integer& N1, Standard_Integer& N2, Standard_Integer& N3) ;

//! Get the node of given Index. <br>
//! Raises OutOfRange from Standard if Index is not in 1,2,3 <br>
 /*instead*/  Standard_Integer Value(Standard_Integer Index) ;

//! Get the node of given Index. <br>
//! Raises OutOfRange if Index is not in 1,2,3 <br>
 /*instead*/  Standard_Integer ChangeValue(Standard_Integer Index) ;

~OCPoly_Triangle()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
