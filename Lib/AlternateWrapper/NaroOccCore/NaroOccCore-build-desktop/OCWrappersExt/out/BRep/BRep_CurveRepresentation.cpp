// File generated by CPPExt (CPP file)
//

#include "BRep_CurveRepresentation.h"
#include "../Converter.h"
#include "../TopLoc/TopLoc_Location.h"
#include "../Geom/Geom_Surface.h"
#include "../Poly/Poly_Triangulation.h"
#include "../Geom/Geom_Curve.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../Poly/Poly_Polygon3D.h"
#include "../Poly/Poly_Polygon2D.h"
#include "../Poly/Poly_PolygonOnTriangulation.h"


using namespace OCNaroWrappers;

OCBRep_CurveRepresentation::OCBRep_CurveRepresentation(Handle(BRep_CurveRepresentation)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_BRep_CurveRepresentation(*nativeHandle);
}

OCBRep_CurveRepresentation::OCBRep_CurveRepresentation(OCNaroWrappers::OCTopLoc_Location^ L) : OCMMgt_TShared((OCDummy^)nullptr)

{}

 System::Boolean OCBRep_CurveRepresentation::IsCurve3D()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsCurve3D());
}

 System::Boolean OCBRep_CurveRepresentation::IsCurveOnSurface()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsCurveOnSurface());
}

 System::Boolean OCBRep_CurveRepresentation::IsRegularity()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsRegularity());
}

 System::Boolean OCBRep_CurveRepresentation::IsCurveOnClosedSurface()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsCurveOnClosedSurface());
}

 System::Boolean OCBRep_CurveRepresentation::IsCurveOnSurface(OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsCurveOnSurface(*((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle)));
}

 System::Boolean OCBRep_CurveRepresentation::IsRegularity(OCNaroWrappers::OCGeom_Surface^ S1, OCNaroWrappers::OCGeom_Surface^ S2, OCNaroWrappers::OCTopLoc_Location^ L1, OCNaroWrappers::OCTopLoc_Location^ L2)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsRegularity(*((Handle_Geom_Surface*)S1->Handle), *((Handle_Geom_Surface*)S2->Handle), *((TopLoc_Location*)L1->Handle), *((TopLoc_Location*)L2->Handle)));
}

 System::Boolean OCBRep_CurveRepresentation::IsPolygon3D()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsPolygon3D());
}

 System::Boolean OCBRep_CurveRepresentation::IsPolygonOnTriangulation()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsPolygonOnTriangulation());
}

 System::Boolean OCBRep_CurveRepresentation::IsPolygonOnTriangulation(OCNaroWrappers::OCPoly_Triangulation^ T, OCNaroWrappers::OCTopLoc_Location^ L)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsPolygonOnTriangulation(*((Handle_Poly_Triangulation*)T->Handle), *((TopLoc_Location*)L->Handle)));
}

 System::Boolean OCBRep_CurveRepresentation::IsPolygonOnClosedTriangulation()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsPolygonOnClosedTriangulation());
}

 System::Boolean OCBRep_CurveRepresentation::IsPolygonOnSurface()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsPolygonOnSurface());
}

 System::Boolean OCBRep_CurveRepresentation::IsPolygonOnSurface(OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsPolygonOnSurface(*((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle)));
}

 System::Boolean OCBRep_CurveRepresentation::IsPolygonOnClosedSurface()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_CurveRepresentation*)nativeHandle))->IsPolygonOnClosedSurface());
}

OCTopLoc_Location^ OCBRep_CurveRepresentation::Location()
{
  TopLoc_Location* tmp = new TopLoc_Location();
  *tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Location();
  return gcnew OCTopLoc_Location(tmp);
}

 void OCBRep_CurveRepresentation::Location(OCNaroWrappers::OCTopLoc_Location^ L)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Location(*((TopLoc_Location*)L->Handle));
}

OCGeom_Curve^ OCBRep_CurveRepresentation::Curve3D()
{
  Handle(Geom_Curve) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Curve3D();
  return gcnew OCGeom_Curve(&tmp);
}

 void OCBRep_CurveRepresentation::Curve3D(OCNaroWrappers::OCGeom_Curve^ C)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Curve3D(*((Handle_Geom_Curve*)C->Handle));
}

OCGeom_Surface^ OCBRep_CurveRepresentation::Surface()
{
  Handle(Geom_Surface) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Surface();
  return gcnew OCGeom_Surface(&tmp);
}

OCGeom2d_Curve^ OCBRep_CurveRepresentation::PCurve()
{
  Handle(Geom2d_Curve) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->PCurve();
  return gcnew OCGeom2d_Curve(&tmp);
}

 void OCBRep_CurveRepresentation::PCurve(OCNaroWrappers::OCGeom2d_Curve^ C)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->PCurve(*((Handle_Geom2d_Curve*)C->Handle));
}

OCGeom2d_Curve^ OCBRep_CurveRepresentation::PCurve2()
{
  Handle(Geom2d_Curve) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->PCurve2();
  return gcnew OCGeom2d_Curve(&tmp);
}

 void OCBRep_CurveRepresentation::PCurve2(OCNaroWrappers::OCGeom2d_Curve^ C)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->PCurve2(*((Handle_Geom2d_Curve*)C->Handle));
}

OCPoly_Polygon3D^ OCBRep_CurveRepresentation::Polygon3D()
{
  Handle(Poly_Polygon3D) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Polygon3D();
  return gcnew OCPoly_Polygon3D(&tmp);
}

 void OCBRep_CurveRepresentation::Polygon3D(OCNaroWrappers::OCPoly_Polygon3D^ P)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Polygon3D(*((Handle_Poly_Polygon3D*)P->Handle));
}

OCPoly_Polygon2D^ OCBRep_CurveRepresentation::Polygon()
{
  Handle(Poly_Polygon2D) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Polygon();
  return gcnew OCPoly_Polygon2D(&tmp);
}

 void OCBRep_CurveRepresentation::Polygon(OCNaroWrappers::OCPoly_Polygon2D^ P)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Polygon(*((Handle_Poly_Polygon2D*)P->Handle));
}

OCPoly_Polygon2D^ OCBRep_CurveRepresentation::Polygon2()
{
  Handle(Poly_Polygon2D) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Polygon2();
  return gcnew OCPoly_Polygon2D(&tmp);
}

 void OCBRep_CurveRepresentation::Polygon2(OCNaroWrappers::OCPoly_Polygon2D^ P)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Polygon2(*((Handle_Poly_Polygon2D*)P->Handle));
}

OCPoly_Triangulation^ OCBRep_CurveRepresentation::Triangulation()
{
  Handle(Poly_Triangulation) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Triangulation();
  return gcnew OCPoly_Triangulation(&tmp);
}

OCPoly_PolygonOnTriangulation^ OCBRep_CurveRepresentation::PolygonOnTriangulation()
{
  Handle(Poly_PolygonOnTriangulation) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->PolygonOnTriangulation();
  return gcnew OCPoly_PolygonOnTriangulation(&tmp);
}

 void OCBRep_CurveRepresentation::PolygonOnTriangulation(OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->PolygonOnTriangulation(*((Handle_Poly_PolygonOnTriangulation*)P->Handle));
}

OCPoly_PolygonOnTriangulation^ OCBRep_CurveRepresentation::PolygonOnTriangulation2()
{
  Handle(Poly_PolygonOnTriangulation) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->PolygonOnTriangulation2();
  return gcnew OCPoly_PolygonOnTriangulation(&tmp);
}

 void OCBRep_CurveRepresentation::PolygonOnTriangulation2(OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P2)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->PolygonOnTriangulation2(*((Handle_Poly_PolygonOnTriangulation*)P2->Handle));
}

OCGeom_Surface^ OCBRep_CurveRepresentation::Surface2()
{
  Handle(Geom_Surface) tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Surface2();
  return gcnew OCGeom_Surface(&tmp);
}

OCTopLoc_Location^ OCBRep_CurveRepresentation::Location2()
{
  TopLoc_Location* tmp = new TopLoc_Location();
  *tmp = (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Location2();
  return gcnew OCTopLoc_Location(tmp);
}

 OCGeomAbs_Shape OCBRep_CurveRepresentation::Continuity()
{
  return (OCGeomAbs_Shape)((*((Handle_BRep_CurveRepresentation*)nativeHandle))->Continuity());
}

 void OCBRep_CurveRepresentation::Continuity(OCGeomAbs_Shape C)
{
  (*((Handle_BRep_CurveRepresentation*)nativeHandle))->Continuity((GeomAbs_Shape)C);
}


