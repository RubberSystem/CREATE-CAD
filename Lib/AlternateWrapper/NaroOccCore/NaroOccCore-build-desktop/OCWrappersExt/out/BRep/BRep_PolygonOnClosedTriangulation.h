// File generated by CPPExt (Transient)
//
#ifndef _BRep_PolygonOnClosedTriangulation_OCWrappers_HeaderFile
#define _BRep_PolygonOnClosedTriangulation_OCWrappers_HeaderFile

// include the wrapped class
#include <BRep_PolygonOnClosedTriangulation.hxx>
#include "../Converter.h"

#include "BRep_PolygonOnTriangulation.h"



namespace OCNaroWrappers
{

ref class OCPoly_PolygonOnTriangulation;
ref class OCPoly_Triangulation;
ref class OCTopLoc_Location;
ref class OCBRep_CurveRepresentation;


//! A representation by two arrays of nodes on a <br>
//!          triangulation. <br>
public ref class OCBRep_PolygonOnClosedTriangulation : OCBRep_PolygonOnTriangulation {

protected:
  // dummy constructor;
  OCBRep_PolygonOnClosedTriangulation(OCDummy^) : OCBRep_PolygonOnTriangulation((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRep_PolygonOnClosedTriangulation(Handle(BRep_PolygonOnClosedTriangulation)* nativeHandle);

// Methods PUBLIC


OCBRep_PolygonOnClosedTriangulation(OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P1, OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P2, OCNaroWrappers::OCPoly_Triangulation^ Tr, OCNaroWrappers::OCTopLoc_Location^ L);

//! Returns True. <br>
virtual /*instead*/  System::Boolean IsPolygonOnClosedTriangulation() override;


virtual /*instead*/  void PolygonOnTriangulation2(OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P2) override;


virtual /*instead*/  OCPoly_PolygonOnTriangulation^ PolygonOnTriangulation2() override;

//! Return a copy of this representation. <br>
virtual /*instead*/  OCBRep_CurveRepresentation^ Copy() override;

~OCBRep_PolygonOnClosedTriangulation()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
