// File generated by CPPExt (CPP file)
//

#include "BRep_Tool.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../Geom/Geom_Surface.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopLoc/TopLoc_Location.h"
#include "../Poly/Poly_Triangulation.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../Geom/Geom_Curve.h"
#include "../Poly/Poly_Polygon3D.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../Poly/Poly_Polygon2D.h"
#include "../Poly/Poly_PolygonOnTriangulation.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Pnt.h"
#include "../TopoDS/TopoDS_Vertex.h"


using namespace OCNaroWrappers;

OCBRep_Tool::OCBRep_Tool(BRep_Tool* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 System::Boolean OCBRep_Tool::IsClosed(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::IsClosed(*((TopoDS_Shape*)S->Handle)));
}

OCGeom_Surface^ OCBRep_Tool::Surface(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopLoc_Location^ L)
{
  Handle(Geom_Surface) tmp = BRep_Tool::Surface(*((TopoDS_Face*)F->Handle), *((TopLoc_Location*)L->Handle));
  return gcnew OCGeom_Surface(&tmp);
}

OCGeom_Surface^ OCBRep_Tool::Surface(OCNaroWrappers::OCTopoDS_Face^ F)
{
  Handle(Geom_Surface) tmp = BRep_Tool::Surface(*((TopoDS_Face*)F->Handle));
  return gcnew OCGeom_Surface(&tmp);
}

OCPoly_Triangulation^ OCBRep_Tool::Triangulation(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopLoc_Location^ L)
{
  Handle(Poly_Triangulation) tmp = BRep_Tool::Triangulation(*((TopoDS_Face*)F->Handle), *((TopLoc_Location*)L->Handle));
  return gcnew OCPoly_Triangulation(&tmp);
}

 Standard_Real OCBRep_Tool::Tolerance(OCNaroWrappers::OCTopoDS_Face^ F)
{
  return BRep_Tool::Tolerance(*((TopoDS_Face*)F->Handle));
}

 System::Boolean OCBRep_Tool::NaturalRestriction(OCNaroWrappers::OCTopoDS_Face^ F)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::NaturalRestriction(*((TopoDS_Face*)F->Handle)));
}

 System::Boolean OCBRep_Tool::IsGeometric(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::IsGeometric(*((TopoDS_Edge*)E->Handle)));
}

OCGeom_Curve^ OCBRep_Tool::Curve(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopLoc_Location^ L, Standard_Real& First, Standard_Real& Last)
{
  Handle(Geom_Curve) tmp = BRep_Tool::Curve(*((TopoDS_Edge*)E->Handle), *((TopLoc_Location*)L->Handle), First, Last);
  return gcnew OCGeom_Curve(&tmp);
}

OCGeom_Curve^ OCBRep_Tool::Curve(OCNaroWrappers::OCTopoDS_Edge^ E, Standard_Real& First, Standard_Real& Last)
{
  Handle(Geom_Curve) tmp = BRep_Tool::Curve(*((TopoDS_Edge*)E->Handle), First, Last);
  return gcnew OCGeom_Curve(&tmp);
}

OCPoly_Polygon3D^ OCBRep_Tool::Polygon3D(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopLoc_Location^ L)
{
  Handle(Poly_Polygon3D) tmp = BRep_Tool::Polygon3D(*((TopoDS_Edge*)E->Handle), *((TopLoc_Location*)L->Handle));
  return gcnew OCPoly_Polygon3D(&tmp);
}

OCGeom2d_Curve^ OCBRep_Tool::CurveOnSurface(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, Standard_Real& First, Standard_Real& Last)
{
  Handle(Geom2d_Curve) tmp = BRep_Tool::CurveOnSurface(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle), First, Last);
  return gcnew OCGeom2d_Curve(&tmp);
}

OCGeom2d_Curve^ OCBRep_Tool::CurveOnSurface(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L, Standard_Real& First, Standard_Real& Last)
{
  Handle(Geom2d_Curve) tmp = BRep_Tool::CurveOnSurface(*((TopoDS_Edge*)E->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle), First, Last);
  return gcnew OCGeom2d_Curve(&tmp);
}

 void OCBRep_Tool::CurveOnSurface(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom2d_Curve^ C, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L, Standard_Real& First, Standard_Real& Last)
{
  BRep_Tool::CurveOnSurface(*((TopoDS_Edge*)E->Handle), *((Handle_Geom2d_Curve*)C->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle), First, Last);
}

 void OCBRep_Tool::CurveOnSurface(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom2d_Curve^ C, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L, Standard_Real& First, Standard_Real& Last, Standard_Integer Index)
{
  BRep_Tool::CurveOnSurface(*((TopoDS_Edge*)E->Handle), *((Handle_Geom2d_Curve*)C->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle), First, Last, Index);
}

OCPoly_Polygon2D^ OCBRep_Tool::PolygonOnSurface(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F)
{
  Handle(Poly_Polygon2D) tmp = BRep_Tool::PolygonOnSurface(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle));
  return gcnew OCPoly_Polygon2D(&tmp);
}

OCPoly_Polygon2D^ OCBRep_Tool::PolygonOnSurface(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L)
{
  Handle(Poly_Polygon2D) tmp = BRep_Tool::PolygonOnSurface(*((TopoDS_Edge*)E->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle));
  return gcnew OCPoly_Polygon2D(&tmp);
}

 void OCBRep_Tool::PolygonOnSurface(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCPoly_Polygon2D^ C, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L)
{
  BRep_Tool::PolygonOnSurface(*((TopoDS_Edge*)E->Handle), *((Handle_Poly_Polygon2D*)C->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle));
}

 void OCBRep_Tool::PolygonOnSurface(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCPoly_Polygon2D^ C, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L, Standard_Integer Index)
{
  BRep_Tool::PolygonOnSurface(*((TopoDS_Edge*)E->Handle), *((Handle_Poly_Polygon2D*)C->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle), Index);
}

OCPoly_PolygonOnTriangulation^ OCBRep_Tool::PolygonOnTriangulation(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCPoly_Triangulation^ T, OCNaroWrappers::OCTopLoc_Location^ L)
{
  Handle(Poly_PolygonOnTriangulation) tmp = BRep_Tool::PolygonOnTriangulation(*((TopoDS_Edge*)E->Handle), *((Handle_Poly_Triangulation*)T->Handle), *((TopLoc_Location*)L->Handle));
  return gcnew OCPoly_PolygonOnTriangulation(&tmp);
}

 void OCBRep_Tool::PolygonOnTriangulation(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P, OCNaroWrappers::OCPoly_Triangulation^ T, OCNaroWrappers::OCTopLoc_Location^ L)
{
  BRep_Tool::PolygonOnTriangulation(*((TopoDS_Edge*)E->Handle), *((Handle_Poly_PolygonOnTriangulation*)P->Handle), *((Handle_Poly_Triangulation*)T->Handle), *((TopLoc_Location*)L->Handle));
}

 void OCBRep_Tool::PolygonOnTriangulation(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P, OCNaroWrappers::OCPoly_Triangulation^ T, OCNaroWrappers::OCTopLoc_Location^ L, Standard_Integer Index)
{
  BRep_Tool::PolygonOnTriangulation(*((TopoDS_Edge*)E->Handle), *((Handle_Poly_PolygonOnTriangulation*)P->Handle), *((Handle_Poly_Triangulation*)T->Handle), *((TopLoc_Location*)L->Handle), Index);
}

 System::Boolean OCBRep_Tool::IsClosed(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::IsClosed(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle)));
}

 System::Boolean OCBRep_Tool::IsClosed(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::IsClosed(*((TopoDS_Edge*)E->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle)));
}

 System::Boolean OCBRep_Tool::IsClosed(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCPoly_Triangulation^ T)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::IsClosed(*((TopoDS_Edge*)E->Handle), *((Handle_Poly_Triangulation*)T->Handle)));
}

 Standard_Real OCBRep_Tool::Tolerance(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return BRep_Tool::Tolerance(*((TopoDS_Edge*)E->Handle));
}

 System::Boolean OCBRep_Tool::SameParameter(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::SameParameter(*((TopoDS_Edge*)E->Handle)));
}

 System::Boolean OCBRep_Tool::SameRange(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::SameRange(*((TopoDS_Edge*)E->Handle)));
}

 System::Boolean OCBRep_Tool::Degenerated(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::Degenerated(*((TopoDS_Edge*)E->Handle)));
}

 void OCBRep_Tool::Range(OCNaroWrappers::OCTopoDS_Edge^ E, Standard_Real& First, Standard_Real& Last)
{
  BRep_Tool::Range(*((TopoDS_Edge*)E->Handle), First, Last);
}

 void OCBRep_Tool::Range(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L, Standard_Real& First, Standard_Real& Last)
{
  BRep_Tool::Range(*((TopoDS_Edge*)E->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle), First, Last);
}

 void OCBRep_Tool::Range(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, Standard_Real& First, Standard_Real& Last)
{
  BRep_Tool::Range(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle), First, Last);
}

 void OCBRep_Tool::UVPoints(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L, OCNaroWrappers::OCgp_Pnt2d^ PFirst, OCNaroWrappers::OCgp_Pnt2d^ PLast)
{
  BRep_Tool::UVPoints(*((TopoDS_Edge*)E->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle), *((gp_Pnt2d*)PFirst->Handle), *((gp_Pnt2d*)PLast->Handle));
}

 void OCBRep_Tool::UVPoints(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Pnt2d^ PFirst, OCNaroWrappers::OCgp_Pnt2d^ PLast)
{
  BRep_Tool::UVPoints(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle), *((gp_Pnt2d*)PFirst->Handle), *((gp_Pnt2d*)PLast->Handle));
}

 void OCBRep_Tool::SetUVPoints(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L, OCNaroWrappers::OCgp_Pnt2d^ PFirst, OCNaroWrappers::OCgp_Pnt2d^ PLast)
{
  BRep_Tool::SetUVPoints(*((TopoDS_Edge*)E->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle), *((gp_Pnt2d*)PFirst->Handle), *((gp_Pnt2d*)PLast->Handle));
}

 void OCBRep_Tool::SetUVPoints(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Pnt2d^ PFirst, OCNaroWrappers::OCgp_Pnt2d^ PLast)
{
  BRep_Tool::SetUVPoints(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle), *((gp_Pnt2d*)PFirst->Handle), *((gp_Pnt2d*)PLast->Handle));
}

 System::Boolean OCBRep_Tool::HasContinuity(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F1, OCNaroWrappers::OCTopoDS_Face^ F2)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::HasContinuity(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F1->Handle), *((TopoDS_Face*)F2->Handle)));
}

 OCGeomAbs_Shape OCBRep_Tool::Continuity(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F1, OCNaroWrappers::OCTopoDS_Face^ F2)
{
  return (OCGeomAbs_Shape)(BRep_Tool::Continuity(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F1->Handle), *((TopoDS_Face*)F2->Handle)));
}

 System::Boolean OCBRep_Tool::HasContinuity(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Surface^ S1, OCNaroWrappers::OCGeom_Surface^ S2, OCNaroWrappers::OCTopLoc_Location^ L1, OCNaroWrappers::OCTopLoc_Location^ L2)
{
  return OCConverter::StandardBooleanToBoolean(BRep_Tool::HasContinuity(*((TopoDS_Edge*)E->Handle), *((Handle_Geom_Surface*)S1->Handle), *((Handle_Geom_Surface*)S2->Handle), *((TopLoc_Location*)L1->Handle), *((TopLoc_Location*)L2->Handle)));
}

 OCGeomAbs_Shape OCBRep_Tool::Continuity(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Surface^ S1, OCNaroWrappers::OCGeom_Surface^ S2, OCNaroWrappers::OCTopLoc_Location^ L1, OCNaroWrappers::OCTopLoc_Location^ L2)
{
  return (OCGeomAbs_Shape)(BRep_Tool::Continuity(*((TopoDS_Edge*)E->Handle), *((Handle_Geom_Surface*)S1->Handle), *((Handle_Geom_Surface*)S2->Handle), *((TopLoc_Location*)L1->Handle), *((TopLoc_Location*)L2->Handle)));
}

OCgp_Pnt^ OCBRep_Tool::Pnt(OCNaroWrappers::OCTopoDS_Vertex^ V)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = BRep_Tool::Pnt(*((TopoDS_Vertex*)V->Handle));
  return gcnew OCgp_Pnt(tmp);
}

 Standard_Real OCBRep_Tool::Tolerance(OCNaroWrappers::OCTopoDS_Vertex^ V)
{
  return BRep_Tool::Tolerance(*((TopoDS_Vertex*)V->Handle));
}

 Standard_Real OCBRep_Tool::Parameter(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return BRep_Tool::Parameter(*((TopoDS_Vertex*)V->Handle), *((TopoDS_Edge*)E->Handle));
}

 Standard_Real OCBRep_Tool::Parameter(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F)
{
  return BRep_Tool::Parameter(*((TopoDS_Vertex*)V->Handle), *((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle));
}

 Standard_Real OCBRep_Tool::Parameter(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCGeom_Surface^ S, OCNaroWrappers::OCTopLoc_Location^ L)
{
  return BRep_Tool::Parameter(*((TopoDS_Vertex*)V->Handle), *((TopoDS_Edge*)E->Handle), *((Handle_Geom_Surface*)S->Handle), *((TopLoc_Location*)L->Handle));
}

OCgp_Pnt2d^ OCBRep_Tool::Parameters(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Face^ F)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = BRep_Tool::Parameters(*((TopoDS_Vertex*)V->Handle), *((TopoDS_Face*)F->Handle));
  return gcnew OCgp_Pnt2d(tmp);
}


