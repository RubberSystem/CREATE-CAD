// File generated by CPPExt (Transient)
//
#ifndef _BRep_Curve3D_OCWrappers_HeaderFile
#define _BRep_Curve3D_OCWrappers_HeaderFile

// include the wrapped class
#include <BRep_Curve3D.hxx>
#include "../Converter.h"

#include "BRep_GCurve.h"



namespace OCNaroWrappers
{

ref class OCGeom_Curve;
ref class OCTopLoc_Location;
ref class OCgp_Pnt;
ref class OCBRep_CurveRepresentation;


//! Representation of a curve by a 3D curve. <br>
public ref class OCBRep_Curve3D : OCBRep_GCurve {

protected:
  // dummy constructor;
  OCBRep_Curve3D(OCDummy^) : OCBRep_GCurve((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRep_Curve3D(Handle(BRep_Curve3D)* nativeHandle);

// Methods PUBLIC


OCBRep_Curve3D(OCNaroWrappers::OCGeom_Curve^ C, OCNaroWrappers::OCTopLoc_Location^ L);

//! Computes the point at parameter U. <br>
 /*instead*/  void D0(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P) ;

//! Returns True. <br>
virtual /*instead*/  System::Boolean IsCurve3D() override;


virtual /*instead*/  OCGeom_Curve^ Curve3D() override;


virtual /*instead*/  void Curve3D(OCNaroWrappers::OCGeom_Curve^ C) override;

//! Return a copy of this representation. <br>
 /*instead*/  OCBRep_CurveRepresentation^ Copy() ;

~OCBRep_Curve3D()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
