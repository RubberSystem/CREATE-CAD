// File generated by CPPExt (CPP file)
//

#include "BRep_PolygonOnClosedTriangulation.h"
#include "../Converter.h"
#include "../Poly/Poly_PolygonOnTriangulation.h"
#include "../Poly/Poly_Triangulation.h"
#include "../TopLoc/TopLoc_Location.h"
#include "BRep_CurveRepresentation.h"


using namespace OCNaroWrappers;

OCBRep_PolygonOnClosedTriangulation::OCBRep_PolygonOnClosedTriangulation(Handle(BRep_PolygonOnClosedTriangulation)* nativeHandle) : OCBRep_PolygonOnTriangulation((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_BRep_PolygonOnClosedTriangulation(*nativeHandle);
}

OCBRep_PolygonOnClosedTriangulation::OCBRep_PolygonOnClosedTriangulation(OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P1, OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P2, OCNaroWrappers::OCPoly_Triangulation^ Tr, OCNaroWrappers::OCTopLoc_Location^ L) : OCBRep_PolygonOnTriangulation((OCDummy^)nullptr)

{
  nativeHandle = new Handle_BRep_PolygonOnClosedTriangulation(new BRep_PolygonOnClosedTriangulation(*((Handle_Poly_PolygonOnTriangulation*)P1->Handle), *((Handle_Poly_PolygonOnTriangulation*)P2->Handle), *((Handle_Poly_Triangulation*)Tr->Handle), *((TopLoc_Location*)L->Handle)));
}

 System::Boolean OCBRep_PolygonOnClosedTriangulation::IsPolygonOnClosedTriangulation()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRep_PolygonOnClosedTriangulation*)nativeHandle))->IsPolygonOnClosedTriangulation());
}

 void OCBRep_PolygonOnClosedTriangulation::PolygonOnTriangulation2(OCNaroWrappers::OCPoly_PolygonOnTriangulation^ P2)
{
  (*((Handle_BRep_PolygonOnClosedTriangulation*)nativeHandle))->PolygonOnTriangulation2(*((Handle_Poly_PolygonOnTriangulation*)P2->Handle));
}

OCPoly_PolygonOnTriangulation^ OCBRep_PolygonOnClosedTriangulation::PolygonOnTriangulation2()
{
  Handle(Poly_PolygonOnTriangulation) tmp = (*((Handle_BRep_PolygonOnClosedTriangulation*)nativeHandle))->PolygonOnTriangulation2();
  return gcnew OCPoly_PolygonOnTriangulation(&tmp);
}

OCBRep_CurveRepresentation^ OCBRep_PolygonOnClosedTriangulation::Copy()
{
  Handle(BRep_CurveRepresentation) tmp = (*((Handle_BRep_PolygonOnClosedTriangulation*)nativeHandle))->Copy();
  return gcnew OCBRep_CurveRepresentation(&tmp);
}


