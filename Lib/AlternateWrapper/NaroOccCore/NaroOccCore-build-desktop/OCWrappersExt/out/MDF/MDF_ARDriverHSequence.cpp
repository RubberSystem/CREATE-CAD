// File generated by CPPExt (CPP file)
//

#include "MDF_ARDriverHSequence.h"
#include "../Converter.h"
#include "MDF_ARDriver.h"
#include "MDF_ARDriverSequence.h"


using namespace OCNaroWrappers;

OCMDF_ARDriverHSequence::OCMDF_ARDriverHSequence(Handle(MDF_ARDriverHSequence)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MDF_ARDriverHSequence(*nativeHandle);
}

OCMDF_ARDriverHSequence::OCMDF_ARDriverHSequence() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MDF_ARDriverHSequence(new MDF_ARDriverHSequence());
}

 System::Boolean OCMDF_ARDriverHSequence::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MDF_ARDriverHSequence*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCMDF_ARDriverHSequence::Length()
{
  return (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Length();
}

 void OCMDF_ARDriverHSequence::Clear()
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Clear();
}

 void OCMDF_ARDriverHSequence::Append(OCNaroWrappers::OCMDF_ARDriver^ anItem)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Append(*((Handle_MDF_ARDriver*)anItem->Handle));
}

 void OCMDF_ARDriverHSequence::Append(OCNaroWrappers::OCMDF_ARDriverHSequence^ aSequence)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Append(*((Handle_MDF_ARDriverHSequence*)aSequence->Handle));
}

 void OCMDF_ARDriverHSequence::Prepend(OCNaroWrappers::OCMDF_ARDriver^ anItem)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Prepend(*((Handle_MDF_ARDriver*)anItem->Handle));
}

 void OCMDF_ARDriverHSequence::Prepend(OCNaroWrappers::OCMDF_ARDriverHSequence^ aSequence)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Prepend(*((Handle_MDF_ARDriverHSequence*)aSequence->Handle));
}

 void OCMDF_ARDriverHSequence::Reverse()
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Reverse();
}

 void OCMDF_ARDriverHSequence::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCMDF_ARDriver^ anItem)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->InsertBefore(anIndex, *((Handle_MDF_ARDriver*)anItem->Handle));
}

 void OCMDF_ARDriverHSequence::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCMDF_ARDriverHSequence^ aSequence)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->InsertBefore(anIndex, *((Handle_MDF_ARDriverHSequence*)aSequence->Handle));
}

 void OCMDF_ARDriverHSequence::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCMDF_ARDriver^ anItem)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->InsertAfter(anIndex, *((Handle_MDF_ARDriver*)anItem->Handle));
}

 void OCMDF_ARDriverHSequence::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCMDF_ARDriverHSequence^ aSequence)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->InsertAfter(anIndex, *((Handle_MDF_ARDriverHSequence*)aSequence->Handle));
}

 void OCMDF_ARDriverHSequence::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCMDF_ARDriverHSequence^ OCMDF_ARDriverHSequence::Split(Standard_Integer anIndex)
{
  Handle(MDF_ARDriverHSequence) tmp = (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Split(anIndex);
  return gcnew OCMDF_ARDriverHSequence(&tmp);
}

 void OCMDF_ARDriverHSequence::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCMDF_ARDriver^ anItem)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->SetValue(anIndex, *((Handle_MDF_ARDriver*)anItem->Handle));
}

OCMDF_ARDriver^ OCMDF_ARDriverHSequence::Value(Standard_Integer anIndex)
{
  Handle(MDF_ARDriver) tmp = (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Value(anIndex);
  return gcnew OCMDF_ARDriver(&tmp);
}

OCMDF_ARDriver^ OCMDF_ARDriverHSequence::ChangeValue(Standard_Integer anIndex)
{
  Handle(MDF_ARDriver) tmp = (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCMDF_ARDriver(&tmp);
}

 void OCMDF_ARDriverHSequence::Remove(Standard_Integer anIndex)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Remove(anIndex);
}

 void OCMDF_ARDriverHSequence::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCMDF_ARDriverSequence^ OCMDF_ARDriverHSequence::Sequence()
{
  MDF_ARDriverSequence* tmp = new MDF_ARDriverSequence();
  *tmp = (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->Sequence();
  return gcnew OCMDF_ARDriverSequence(tmp);
}

OCMDF_ARDriverSequence^ OCMDF_ARDriverHSequence::ChangeSequence()
{
  MDF_ARDriverSequence* tmp = new MDF_ARDriverSequence();
  *tmp = (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->ChangeSequence();
  return gcnew OCMDF_ARDriverSequence(tmp);
}

OCMDF_ARDriverHSequence^ OCMDF_ARDriverHSequence::ShallowCopy()
{
  Handle(MDF_ARDriverHSequence) tmp = (*((Handle_MDF_ARDriverHSequence*)nativeHandle))->ShallowCopy();
  return gcnew OCMDF_ARDriverHSequence(&tmp);
}


