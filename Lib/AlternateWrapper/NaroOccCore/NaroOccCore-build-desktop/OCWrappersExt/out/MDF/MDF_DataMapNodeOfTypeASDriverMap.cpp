// File generated by CPPExt (CPP file)
//

#include "MDF_DataMapNodeOfTypeASDriverMap.h"
#include "../Converter.h"
#include "../Standard/Standard_Type.h"
#include "MDF_ASDriver.h"
#include "../TColStd/TColStd_MapTransientHasher.h"
#include "MDF_TypeASDriverMap.h"
#include "MDF_DataMapIteratorOfTypeASDriverMap.h"


using namespace OCNaroWrappers;

OCMDF_DataMapNodeOfTypeASDriverMap::OCMDF_DataMapNodeOfTypeASDriverMap(Handle(MDF_DataMapNodeOfTypeASDriverMap)* nativeHandle) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MDF_DataMapNodeOfTypeASDriverMap(*nativeHandle);
}

OCMDF_DataMapNodeOfTypeASDriverMap::OCMDF_DataMapNodeOfTypeASDriverMap(OCNaroWrappers::OCStandard_Type^ K, OCNaroWrappers::OCMDF_ASDriver^ I, TCollection_MapNodePtr n) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MDF_DataMapNodeOfTypeASDriverMap(new MDF_DataMapNodeOfTypeASDriverMap(*((Handle_Standard_Type*)K->Handle), *((Handle_MDF_ASDriver*)I->Handle), n));
}

OCStandard_Type^ OCMDF_DataMapNodeOfTypeASDriverMap::Key()
{
  Handle(Standard_Type) tmp = (*((Handle_MDF_DataMapNodeOfTypeASDriverMap*)nativeHandle))->Key();
  return gcnew OCStandard_Type(&tmp);
}

OCMDF_ASDriver^ OCMDF_DataMapNodeOfTypeASDriverMap::Value()
{
  Handle(MDF_ASDriver) tmp = (*((Handle_MDF_DataMapNodeOfTypeASDriverMap*)nativeHandle))->Value();
  return gcnew OCMDF_ASDriver(&tmp);
}


