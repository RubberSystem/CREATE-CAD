// File generated by CPPExt (CPP file)
//

#include "MDF_DataMapNodeOfTypeARDriverMap.h"
#include "../Converter.h"
#include "../Standard/Standard_Type.h"
#include "MDF_ARDriver.h"
#include "../TColStd/TColStd_MapTransientHasher.h"
#include "MDF_TypeARDriverMap.h"
#include "MDF_DataMapIteratorOfTypeARDriverMap.h"


using namespace OCNaroWrappers;

OCMDF_DataMapNodeOfTypeARDriverMap::OCMDF_DataMapNodeOfTypeARDriverMap(Handle(MDF_DataMapNodeOfTypeARDriverMap)* nativeHandle) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MDF_DataMapNodeOfTypeARDriverMap(*nativeHandle);
}

OCMDF_DataMapNodeOfTypeARDriverMap::OCMDF_DataMapNodeOfTypeARDriverMap(OCNaroWrappers::OCStandard_Type^ K, OCNaroWrappers::OCMDF_ARDriver^ I, TCollection_MapNodePtr n) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MDF_DataMapNodeOfTypeARDriverMap(new MDF_DataMapNodeOfTypeARDriverMap(*((Handle_Standard_Type*)K->Handle), *((Handle_MDF_ARDriver*)I->Handle), n));
}

OCStandard_Type^ OCMDF_DataMapNodeOfTypeARDriverMap::Key()
{
  Handle(Standard_Type) tmp = (*((Handle_MDF_DataMapNodeOfTypeARDriverMap*)nativeHandle))->Key();
  return gcnew OCStandard_Type(&tmp);
}

OCMDF_ARDriver^ OCMDF_DataMapNodeOfTypeARDriverMap::Value()
{
  Handle(MDF_ARDriver) tmp = (*((Handle_MDF_DataMapNodeOfTypeARDriverMap*)nativeHandle))->Value();
  return gcnew OCMDF_ARDriver(&tmp);
}


