// File generated by CPPExt (CPP file)
//

#include "MDF_DriverListOfASDriverTable.h"
#include "../Converter.h"
#include "MDF_ListIteratorOfDriverListOfASDriverTable.h"
#include "MDF_ASDriver.h"
#include "MDF_ListNodeOfDriverListOfASDriverTable.h"


using namespace OCNaroWrappers;

OCMDF_DriverListOfASDriverTable::OCMDF_DriverListOfASDriverTable(MDF_DriverListOfASDriverTable* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCMDF_DriverListOfASDriverTable::OCMDF_DriverListOfASDriverTable() 
{
  nativeHandle = new MDF_DriverListOfASDriverTable();
}

 void OCMDF_DriverListOfASDriverTable::Assign(OCNaroWrappers::OCMDF_DriverListOfASDriverTable^ Other)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->Assign(*((MDF_DriverListOfASDriverTable*)Other->Handle));
}

 Standard_Integer OCMDF_DriverListOfASDriverTable::Extent()
{
  return ((MDF_DriverListOfASDriverTable*)nativeHandle)->Extent();
}

 System::Boolean OCMDF_DriverListOfASDriverTable::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((MDF_DriverListOfASDriverTable*)nativeHandle)->IsEmpty());
}

 void OCMDF_DriverListOfASDriverTable::Prepend(OCNaroWrappers::OCMDF_ASDriver^ I)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->Prepend(*((Handle_MDF_ASDriver*)I->Handle));
}

 void OCMDF_DriverListOfASDriverTable::Prepend(OCNaroWrappers::OCMDF_ASDriver^ I, OCNaroWrappers::OCMDF_ListIteratorOfDriverListOfASDriverTable^ theIt)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->Prepend(*((Handle_MDF_ASDriver*)I->Handle), *((MDF_ListIteratorOfDriverListOfASDriverTable*)theIt->Handle));
}

 void OCMDF_DriverListOfASDriverTable::Prepend(OCNaroWrappers::OCMDF_DriverListOfASDriverTable^ Other)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->Prepend(*((MDF_DriverListOfASDriverTable*)Other->Handle));
}

 void OCMDF_DriverListOfASDriverTable::Append(OCNaroWrappers::OCMDF_ASDriver^ I)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->Append(*((Handle_MDF_ASDriver*)I->Handle));
}

 void OCMDF_DriverListOfASDriverTable::Append(OCNaroWrappers::OCMDF_ASDriver^ I, OCNaroWrappers::OCMDF_ListIteratorOfDriverListOfASDriverTable^ theIt)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->Append(*((Handle_MDF_ASDriver*)I->Handle), *((MDF_ListIteratorOfDriverListOfASDriverTable*)theIt->Handle));
}

 void OCMDF_DriverListOfASDriverTable::Append(OCNaroWrappers::OCMDF_DriverListOfASDriverTable^ Other)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->Append(*((MDF_DriverListOfASDriverTable*)Other->Handle));
}

OCMDF_ASDriver^ OCMDF_DriverListOfASDriverTable::First()
{
  Handle(MDF_ASDriver) tmp = ((MDF_DriverListOfASDriverTable*)nativeHandle)->First();
  return gcnew OCMDF_ASDriver(&tmp);
}

OCMDF_ASDriver^ OCMDF_DriverListOfASDriverTable::Last()
{
  Handle(MDF_ASDriver) tmp = ((MDF_DriverListOfASDriverTable*)nativeHandle)->Last();
  return gcnew OCMDF_ASDriver(&tmp);
}

 void OCMDF_DriverListOfASDriverTable::RemoveFirst()
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->RemoveFirst();
}

 void OCMDF_DriverListOfASDriverTable::Remove(OCNaroWrappers::OCMDF_ListIteratorOfDriverListOfASDriverTable^ It)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->Remove(*((MDF_ListIteratorOfDriverListOfASDriverTable*)It->Handle));
}

 void OCMDF_DriverListOfASDriverTable::InsertBefore(OCNaroWrappers::OCMDF_ASDriver^ I, OCNaroWrappers::OCMDF_ListIteratorOfDriverListOfASDriverTable^ It)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->InsertBefore(*((Handle_MDF_ASDriver*)I->Handle), *((MDF_ListIteratorOfDriverListOfASDriverTable*)It->Handle));
}

 void OCMDF_DriverListOfASDriverTable::InsertBefore(OCNaroWrappers::OCMDF_DriverListOfASDriverTable^ Other, OCNaroWrappers::OCMDF_ListIteratorOfDriverListOfASDriverTable^ It)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->InsertBefore(*((MDF_DriverListOfASDriverTable*)Other->Handle), *((MDF_ListIteratorOfDriverListOfASDriverTable*)It->Handle));
}

 void OCMDF_DriverListOfASDriverTable::InsertAfter(OCNaroWrappers::OCMDF_ASDriver^ I, OCNaroWrappers::OCMDF_ListIteratorOfDriverListOfASDriverTable^ It)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->InsertAfter(*((Handle_MDF_ASDriver*)I->Handle), *((MDF_ListIteratorOfDriverListOfASDriverTable*)It->Handle));
}

 void OCMDF_DriverListOfASDriverTable::InsertAfter(OCNaroWrappers::OCMDF_DriverListOfASDriverTable^ Other, OCNaroWrappers::OCMDF_ListIteratorOfDriverListOfASDriverTable^ It)
{
  ((MDF_DriverListOfASDriverTable*)nativeHandle)->InsertAfter(*((MDF_DriverListOfASDriverTable*)Other->Handle), *((MDF_ListIteratorOfDriverListOfASDriverTable*)It->Handle));
}


