// File generated by CPPExt (CPP file)
//

#include "MDF_DataMapIteratorOfTypeARDriverMap.h"
#include "../Converter.h"
#include "../Standard/Standard_Type.h"
#include "MDF_ARDriver.h"
#include "../TColStd/TColStd_MapTransientHasher.h"
#include "MDF_TypeARDriverMap.h"
#include "MDF_DataMapNodeOfTypeARDriverMap.h"


using namespace OCNaroWrappers;

OCMDF_DataMapIteratorOfTypeARDriverMap::OCMDF_DataMapIteratorOfTypeARDriverMap(MDF_DataMapIteratorOfTypeARDriverMap* nativeHandle) : OCTCollection_BasicMapIterator((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMDF_DataMapIteratorOfTypeARDriverMap::OCMDF_DataMapIteratorOfTypeARDriverMap() : OCTCollection_BasicMapIterator((OCDummy^)nullptr)

{
  nativeHandle = new MDF_DataMapIteratorOfTypeARDriverMap();
}

OCMDF_DataMapIteratorOfTypeARDriverMap::OCMDF_DataMapIteratorOfTypeARDriverMap(OCNaroWrappers::OCMDF_TypeARDriverMap^ aMap) : OCTCollection_BasicMapIterator((OCDummy^)nullptr)

{
  nativeHandle = new MDF_DataMapIteratorOfTypeARDriverMap(*((MDF_TypeARDriverMap*)aMap->Handle));
}

 void OCMDF_DataMapIteratorOfTypeARDriverMap::Initialize(OCNaroWrappers::OCMDF_TypeARDriverMap^ aMap)
{
  ((MDF_DataMapIteratorOfTypeARDriverMap*)nativeHandle)->Initialize(*((MDF_TypeARDriverMap*)aMap->Handle));
}

OCStandard_Type^ OCMDF_DataMapIteratorOfTypeARDriverMap::Key()
{
  Handle(Standard_Type) tmp = ((MDF_DataMapIteratorOfTypeARDriverMap*)nativeHandle)->Key();
  return gcnew OCStandard_Type(&tmp);
}

OCMDF_ARDriver^ OCMDF_DataMapIteratorOfTypeARDriverMap::Value()
{
  Handle(MDF_ARDriver) tmp = ((MDF_DataMapIteratorOfTypeARDriverMap*)nativeHandle)->Value();
  return gcnew OCMDF_ARDriver(&tmp);
}


