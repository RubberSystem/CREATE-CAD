// File generated by CPPExt (CPP file)
//

#include "MDF_ARDriverSequence.h"
#include "../Converter.h"
#include "MDF_ARDriver.h"
#include "MDF_SequenceNodeOfARDriverSequence.h"


using namespace OCNaroWrappers;

OCMDF_ARDriverSequence::OCMDF_ARDriverSequence(MDF_ARDriverSequence* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMDF_ARDriverSequence::OCMDF_ARDriverSequence() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new MDF_ARDriverSequence();
}

OCMDF_ARDriverSequence^ OCMDF_ARDriverSequence::Assign(OCNaroWrappers::OCMDF_ARDriverSequence^ Other)
{
  MDF_ARDriverSequence* tmp = new MDF_ARDriverSequence();
  *tmp = ((MDF_ARDriverSequence*)nativeHandle)->Assign(*((MDF_ARDriverSequence*)Other->Handle));
  return gcnew OCMDF_ARDriverSequence(tmp);
}

 void OCMDF_ARDriverSequence::Append(OCNaroWrappers::OCMDF_ARDriver^ T)
{
  ((MDF_ARDriverSequence*)nativeHandle)->Append(*((Handle_MDF_ARDriver*)T->Handle));
}

 void OCMDF_ARDriverSequence::Append(OCNaroWrappers::OCMDF_ARDriverSequence^ S)
{
  ((MDF_ARDriverSequence*)nativeHandle)->Append(*((MDF_ARDriverSequence*)S->Handle));
}

 void OCMDF_ARDriverSequence::Prepend(OCNaroWrappers::OCMDF_ARDriver^ T)
{
  ((MDF_ARDriverSequence*)nativeHandle)->Prepend(*((Handle_MDF_ARDriver*)T->Handle));
}

 void OCMDF_ARDriverSequence::Prepend(OCNaroWrappers::OCMDF_ARDriverSequence^ S)
{
  ((MDF_ARDriverSequence*)nativeHandle)->Prepend(*((MDF_ARDriverSequence*)S->Handle));
}

 void OCMDF_ARDriverSequence::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMDF_ARDriver^ T)
{
  ((MDF_ARDriverSequence*)nativeHandle)->InsertBefore(Index, *((Handle_MDF_ARDriver*)T->Handle));
}

 void OCMDF_ARDriverSequence::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMDF_ARDriverSequence^ S)
{
  ((MDF_ARDriverSequence*)nativeHandle)->InsertBefore(Index, *((MDF_ARDriverSequence*)S->Handle));
}

 void OCMDF_ARDriverSequence::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMDF_ARDriver^ T)
{
  ((MDF_ARDriverSequence*)nativeHandle)->InsertAfter(Index, *((Handle_MDF_ARDriver*)T->Handle));
}

 void OCMDF_ARDriverSequence::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMDF_ARDriverSequence^ S)
{
  ((MDF_ARDriverSequence*)nativeHandle)->InsertAfter(Index, *((MDF_ARDriverSequence*)S->Handle));
}

OCMDF_ARDriver^ OCMDF_ARDriverSequence::First()
{
  Handle(MDF_ARDriver) tmp = ((MDF_ARDriverSequence*)nativeHandle)->First();
  return gcnew OCMDF_ARDriver(&tmp);
}

OCMDF_ARDriver^ OCMDF_ARDriverSequence::Last()
{
  Handle(MDF_ARDriver) tmp = ((MDF_ARDriverSequence*)nativeHandle)->Last();
  return gcnew OCMDF_ARDriver(&tmp);
}

 void OCMDF_ARDriverSequence::Split(Standard_Integer Index, OCNaroWrappers::OCMDF_ARDriverSequence^ Sub)
{
  ((MDF_ARDriverSequence*)nativeHandle)->Split(Index, *((MDF_ARDriverSequence*)Sub->Handle));
}

OCMDF_ARDriver^ OCMDF_ARDriverSequence::Value(Standard_Integer Index)
{
  Handle(MDF_ARDriver) tmp = ((MDF_ARDriverSequence*)nativeHandle)->Value(Index);
  return gcnew OCMDF_ARDriver(&tmp);
}

 void OCMDF_ARDriverSequence::SetValue(Standard_Integer Index, OCNaroWrappers::OCMDF_ARDriver^ I)
{
  ((MDF_ARDriverSequence*)nativeHandle)->SetValue(Index, *((Handle_MDF_ARDriver*)I->Handle));
}

OCMDF_ARDriver^ OCMDF_ARDriverSequence::ChangeValue(Standard_Integer Index)
{
  Handle(MDF_ARDriver) tmp = ((MDF_ARDriverSequence*)nativeHandle)->ChangeValue(Index);
  return gcnew OCMDF_ARDriver(&tmp);
}

 void OCMDF_ARDriverSequence::Remove(Standard_Integer Index)
{
  ((MDF_ARDriverSequence*)nativeHandle)->Remove(Index);
}

 void OCMDF_ARDriverSequence::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((MDF_ARDriverSequence*)nativeHandle)->Remove(FromIndex, ToIndex);
}


