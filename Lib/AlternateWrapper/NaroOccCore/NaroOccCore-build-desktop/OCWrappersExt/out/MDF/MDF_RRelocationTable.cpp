// File generated by CPPExt (CPP file)
//

#include "MDF_RRelocationTable.h"
#include "../Converter.h"
#include "../PDF/PDF_Attribute.h"
#include "../TDF/TDF_Attribute.h"
#include "../Standard/Standard_Persistent.h"
#include "../Standard/Standard_Transient.h"
#include "../PTColStd/PTColStd_PersistentTransientMap.h"


using namespace OCNaroWrappers;

OCMDF_RRelocationTable::OCMDF_RRelocationTable(Handle(MDF_RRelocationTable)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MDF_RRelocationTable(*nativeHandle);
}

OCMDF_RRelocationTable::OCMDF_RRelocationTable(System::Boolean theSelfRelocation) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MDF_RRelocationTable(new MDF_RRelocationTable(OCConverter::BooleanToStandardBoolean(theSelfRelocation)));
}

 void OCMDF_RRelocationTable::SetSelfRelocation(System::Boolean theStatus)
{
  (*((Handle_MDF_RRelocationTable*)nativeHandle))->SetSelfRelocation(OCConverter::BooleanToStandardBoolean(theStatus));
}

 System::Boolean OCMDF_RRelocationTable::IsSelfRelocation()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MDF_RRelocationTable*)nativeHandle))->IsSelfRelocation());
}

 void OCMDF_RRelocationTable::SetRelocation(OCNaroWrappers::OCPDF_Attribute^ aSourceAttribute, OCNaroWrappers::OCTDF_Attribute^ aTargetAttribute)
{
  (*((Handle_MDF_RRelocationTable*)nativeHandle))->SetRelocation(*((Handle_PDF_Attribute*)aSourceAttribute->Handle), *((Handle_TDF_Attribute*)aTargetAttribute->Handle));
}

 System::Boolean OCMDF_RRelocationTable::HasRelocation(OCNaroWrappers::OCPDF_Attribute^ aSourceAttribute, OCNaroWrappers::OCTDF_Attribute^ aTargetAttribute)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MDF_RRelocationTable*)nativeHandle))->HasRelocation(*((Handle_PDF_Attribute*)aSourceAttribute->Handle), *((Handle_TDF_Attribute*)aTargetAttribute->Handle)));
}

 void OCMDF_RRelocationTable::SetOtherRelocation(OCNaroWrappers::OCStandard_Persistent^ aSource, OCNaroWrappers::OCStandard_Transient^ aTarget)
{
  (*((Handle_MDF_RRelocationTable*)nativeHandle))->SetOtherRelocation(*((Handle_Standard_Persistent*)aSource->Handle), *((Handle_Standard_Transient*)aTarget->Handle));
}

 System::Boolean OCMDF_RRelocationTable::HasOtherRelocation(OCNaroWrappers::OCStandard_Persistent^ aSource, OCNaroWrappers::OCStandard_Transient^ aTarget)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MDF_RRelocationTable*)nativeHandle))->HasOtherRelocation(*((Handle_Standard_Persistent*)aSource->Handle), *((Handle_Standard_Transient*)aTarget->Handle)));
}

OCPTColStd_PersistentTransientMap^ OCMDF_RRelocationTable::AttributeTable()
{
  PTColStd_PersistentTransientMap* tmp = new PTColStd_PersistentTransientMap(0);
  *tmp = (*((Handle_MDF_RRelocationTable*)nativeHandle))->AttributeTable();
  return gcnew OCPTColStd_PersistentTransientMap(tmp);
}

OCPTColStd_PersistentTransientMap^ OCMDF_RRelocationTable::OtherTable()
{
  PTColStd_PersistentTransientMap* tmp = new PTColStd_PersistentTransientMap(0);
  *tmp = (*((Handle_MDF_RRelocationTable*)nativeHandle))->OtherTable();
  return gcnew OCPTColStd_PersistentTransientMap(tmp);
}


