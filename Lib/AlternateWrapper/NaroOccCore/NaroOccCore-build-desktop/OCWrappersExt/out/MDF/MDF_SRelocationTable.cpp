// File generated by CPPExt (CPP file)
//

#include "MDF_SRelocationTable.h"
#include "../Converter.h"
#include "../TDF/TDF_Attribute.h"
#include "../PDF/PDF_Attribute.h"
#include "../Standard/Standard_Transient.h"
#include "../Standard/Standard_Persistent.h"
#include "../PTColStd/PTColStd_TransientPersistentMap.h"


using namespace OCNaroWrappers;

OCMDF_SRelocationTable::OCMDF_SRelocationTable(Handle(MDF_SRelocationTable)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MDF_SRelocationTable(*nativeHandle);
}

OCMDF_SRelocationTable::OCMDF_SRelocationTable(System::Boolean theSelfRelocation) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MDF_SRelocationTable(new MDF_SRelocationTable(OCConverter::BooleanToStandardBoolean(theSelfRelocation)));
}

 void OCMDF_SRelocationTable::SetSelfRelocation(System::Boolean theStatus)
{
  (*((Handle_MDF_SRelocationTable*)nativeHandle))->SetSelfRelocation(OCConverter::BooleanToStandardBoolean(theStatus));
}

 System::Boolean OCMDF_SRelocationTable::IsSelfRelocation()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MDF_SRelocationTable*)nativeHandle))->IsSelfRelocation());
}

 void OCMDF_SRelocationTable::SetRelocation(OCNaroWrappers::OCTDF_Attribute^ aSourceAttribute, OCNaroWrappers::OCPDF_Attribute^ aTargetAttribute)
{
  (*((Handle_MDF_SRelocationTable*)nativeHandle))->SetRelocation(*((Handle_TDF_Attribute*)aSourceAttribute->Handle), *((Handle_PDF_Attribute*)aTargetAttribute->Handle));
}

 System::Boolean OCMDF_SRelocationTable::HasRelocation(OCNaroWrappers::OCTDF_Attribute^ aSourceAttribute, OCNaroWrappers::OCPDF_Attribute^ aTargetAttribute)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MDF_SRelocationTable*)nativeHandle))->HasRelocation(*((Handle_TDF_Attribute*)aSourceAttribute->Handle), *((Handle_PDF_Attribute*)aTargetAttribute->Handle)));
}

 void OCMDF_SRelocationTable::SetOtherRelocation(OCNaroWrappers::OCStandard_Transient^ aSource, OCNaroWrappers::OCStandard_Persistent^ aTarget)
{
  (*((Handle_MDF_SRelocationTable*)nativeHandle))->SetOtherRelocation(*((Handle_Standard_Transient*)aSource->Handle), *((Handle_Standard_Persistent*)aTarget->Handle));
}

 System::Boolean OCMDF_SRelocationTable::HasOtherRelocation(OCNaroWrappers::OCStandard_Transient^ aSource, OCNaroWrappers::OCStandard_Persistent^ aTarget)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MDF_SRelocationTable*)nativeHandle))->HasOtherRelocation(*((Handle_Standard_Transient*)aSource->Handle), *((Handle_Standard_Persistent*)aTarget->Handle)));
}

OCPTColStd_TransientPersistentMap^ OCMDF_SRelocationTable::AttributeTable()
{
  PTColStd_TransientPersistentMap* tmp = new PTColStd_TransientPersistentMap(0);
  *tmp = (*((Handle_MDF_SRelocationTable*)nativeHandle))->AttributeTable();
  return gcnew OCPTColStd_TransientPersistentMap(tmp);
}

OCPTColStd_TransientPersistentMap^ OCMDF_SRelocationTable::OtherTable()
{
  PTColStd_TransientPersistentMap* tmp = new PTColStd_TransientPersistentMap(0);
  *tmp = (*((Handle_MDF_SRelocationTable*)nativeHandle))->OtherTable();
  return gcnew OCPTColStd_TransientPersistentMap(tmp);
}


