// File generated by CPPExt (Transient)
//
#ifndef _MDF_ARDriverTable_OCWrappers_HeaderFile
#define _MDF_ARDriverTable_OCWrappers_HeaderFile

// include the wrapped class
#include <MDF_ARDriverTable.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "MDF_TypeARDriverMap.h"
#include "MDF_TypeDriverListMapOfARDriverTable.h"


namespace OCNaroWrappers
{

ref class OCMDF_ARDriver;
ref class OCMDF_ARDriverHSequence;
ref class OCMDF_TypeARDriverMap;
ref class OCMDF_DriverListOfARDriverTable;
ref class OCMDF_ListNodeOfDriverListOfARDriverTable;
ref class OCMDF_ListIteratorOfDriverListOfARDriverTable;
ref class OCMDF_TypeDriverListMapOfARDriverTable;
ref class OCMDF_DataMapNodeOfTypeDriverListMapOfARDriverTable;
ref class OCMDF_DataMapIteratorOfTypeDriverListMapOfARDriverTable;
ref class OCStandard_Type;



public ref class OCMDF_ARDriverTable : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCMDF_ARDriverTable(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCMDF_ARDriverTable(Handle(MDF_ARDriverTable)* nativeHandle);

// Methods PUBLIC


OCMDF_ARDriverTable();


 /*instead*/  void SetDriver(OCNaroWrappers::OCMDF_ARDriver^ anHDriver) ;


 /*instead*/  void SetDrivers(OCNaroWrappers::OCMDF_ARDriverHSequence^ aDriverHSeq) ;


 /*instead*/  OCMDF_TypeARDriverMap^ GetDrivers(Standard_Integer aVersion) ;


 /*instead*/  System::Boolean GetDriver(OCNaroWrappers::OCStandard_Type^ aType, OCNaroWrappers::OCMDF_ARDriver^ anHDriver, Standard_Integer aVersion) ;

~OCMDF_ARDriverTable()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
