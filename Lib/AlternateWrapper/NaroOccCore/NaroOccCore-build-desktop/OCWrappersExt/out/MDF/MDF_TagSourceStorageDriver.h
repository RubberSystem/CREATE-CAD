// File generated by CPPExt (Transient)
//
#ifndef _MDF_TagSourceStorageDriver_OCWrappers_HeaderFile
#define _MDF_TagSourceStorageDriver_OCWrappers_HeaderFile

// include the wrapped class
#include <MDF_TagSourceStorageDriver.hxx>
#include "../Converter.h"

#include "MDF_ASDriver.h"



namespace OCNaroWrappers
{

ref class OCCDM_MessageDriver;
ref class OCStandard_Type;
ref class OCPDF_Attribute;
ref class OCTDF_Attribute;
ref class OCMDF_SRelocationTable;



public ref class OCMDF_TagSourceStorageDriver : OCMDF_ASDriver {

protected:
  // dummy constructor;
  OCMDF_TagSourceStorageDriver(OCDummy^) : OCMDF_ASDriver((OCDummy^)nullptr) {};

public:

// constructor from native
OCMDF_TagSourceStorageDriver(Handle(MDF_TagSourceStorageDriver)* nativeHandle);

// Methods PUBLIC


OCMDF_TagSourceStorageDriver(OCNaroWrappers::OCCDM_MessageDriver^ theMessageDriver);

//! Returns the version number from which the driver <br>
//!          is available: 0. <br>
 /*instead*/  Standard_Integer VersionNumber() ;

//! Returns the type: Integer from TDF. <br>
 /*instead*/  OCStandard_Type^ SourceType() ;


 /*instead*/  OCPDF_Attribute^ NewEmpty() ;


 /*instead*/  void Paste(OCNaroWrappers::OCTDF_Attribute^ Source, OCNaroWrappers::OCPDF_Attribute^ Target, OCNaroWrappers::OCMDF_SRelocationTable^ RelocTable) ;

~OCMDF_TagSourceStorageDriver()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
