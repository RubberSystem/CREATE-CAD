// File generated by CPPExt (CPP file)
//

#include "MDF_ARDriverTable.h"
#include "../Converter.h"
#include "MDF_ARDriver.h"
#include "MDF_ARDriverHSequence.h"
#include "MDF_TypeARDriverMap.h"
#include "MDF_DriverListOfARDriverTable.h"
#include "MDF_ListNodeOfDriverListOfARDriverTable.h"
#include "MDF_ListIteratorOfDriverListOfARDriverTable.h"
#include "MDF_TypeDriverListMapOfARDriverTable.h"
#include "MDF_DataMapNodeOfTypeDriverListMapOfARDriverTable.h"
#include "MDF_DataMapIteratorOfTypeDriverListMapOfARDriverTable.h"
#include "../Standard/Standard_Type.h"


using namespace OCNaroWrappers;

OCMDF_ARDriverTable::OCMDF_ARDriverTable(Handle(MDF_ARDriverTable)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MDF_ARDriverTable(*nativeHandle);
}

OCMDF_ARDriverTable::OCMDF_ARDriverTable() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MDF_ARDriverTable(new MDF_ARDriverTable());
}

 void OCMDF_ARDriverTable::SetDriver(OCNaroWrappers::OCMDF_ARDriver^ anHDriver)
{
  (*((Handle_MDF_ARDriverTable*)nativeHandle))->SetDriver(*((Handle_MDF_ARDriver*)anHDriver->Handle));
}

 void OCMDF_ARDriverTable::SetDrivers(OCNaroWrappers::OCMDF_ARDriverHSequence^ aDriverHSeq)
{
  (*((Handle_MDF_ARDriverTable*)nativeHandle))->SetDrivers(*((Handle_MDF_ARDriverHSequence*)aDriverHSeq->Handle));
}

OCMDF_TypeARDriverMap^ OCMDF_ARDriverTable::GetDrivers(Standard_Integer aVersion)
{
  MDF_TypeARDriverMap* tmp = new MDF_TypeARDriverMap(0);
  *tmp = (*((Handle_MDF_ARDriverTable*)nativeHandle))->GetDrivers(aVersion);
  return gcnew OCMDF_TypeARDriverMap(tmp);
}

 System::Boolean OCMDF_ARDriverTable::GetDriver(OCNaroWrappers::OCStandard_Type^ aType, OCNaroWrappers::OCMDF_ARDriver^ anHDriver, Standard_Integer aVersion)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MDF_ARDriverTable*)nativeHandle))->GetDriver(*((Handle_Standard_Type*)aType->Handle), *((Handle_MDF_ARDriver*)anHDriver->Handle), aVersion));
}


