// File generated by CPPExt (MPV)
//
#ifndef _Geom2dInt_Geom2dCurveTool_OCWrappers_HeaderFile
#define _Geom2dInt_Geom2dCurveTool_OCWrappers_HeaderFile

// include native header
#include <Geom2dInt_Geom2dCurveTool.hxx>
#include "../Converter.h"


#include "../GeomAbs/GeomAbs_CurveType.h"
#include "../gp/gp_Lin2d.h"
#include "../gp/gp_Circ2d.h"
#include "../gp/gp_Elips2d.h"
#include "../gp/gp_Parab2d.h"
#include "../gp/gp_Hypr2d.h"
#include "../gp/gp_Pnt2d.h"


namespace OCNaroWrappers
{

ref class OCAdaptor2d_Curve2d;
ref class OCgp_Pnt2d;
ref class OCgp_Vec2d;
ref class OCTColStd_Array1OfReal;



public ref class OCGeom2dInt_Geom2dCurveTool  {

protected:
  Geom2dInt_Geom2dCurveTool* nativeHandle;
  OCGeom2dInt_Geom2dCurveTool(OCDummy^) {};

public:
  property Geom2dInt_Geom2dCurveTool* Handle
  {
    Geom2dInt_Geom2dCurveTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeom2dInt_Geom2dCurveTool(Geom2dInt_Geom2dCurveTool* nativeHandle);

// Methods PUBLIC


static /*instead*/  OCGeomAbs_CurveType TheType(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  System::Boolean IsComposite(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  OCgp_Lin2d^ Line(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  OCgp_Circ2d^ Circle(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  OCgp_Elips2d^ Ellipse(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  OCgp_Parab2d^ Parabola(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  OCgp_Hypr2d^ Hyperbola(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  Standard_Real EpsX(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  Standard_Real EpsX(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Eps_XYZ) ;


static /*instead*/  Standard_Integer NbSamples(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  Standard_Integer NbSamples(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real U0, Standard_Real U1) ;


static /*instead*/  Standard_Real FirstParameter(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  Standard_Real LastParameter(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  OCgp_Pnt2d^ Value(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real X) ;


static /*instead*/  void D0(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P) ;


static /*instead*/  void D1(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ T) ;


static /*instead*/  void D2(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ T, OCNaroWrappers::OCgp_Vec2d^ N) ;


static /*instead*/  Standard_Integer NbIntervals(OCNaroWrappers::OCAdaptor2d_Curve2d^ C) ;


static /*instead*/  void Intervals(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, OCNaroWrappers::OCTColStd_Array1OfReal^ Tab) ;


static /*instead*/  void GetInterval(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Integer Index, OCNaroWrappers::OCTColStd_Array1OfReal^ Tab, Standard_Real& U1, Standard_Real& U2) ;

~OCGeom2dInt_Geom2dCurveTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
