// File generated by CPPExt (MPV)
//
#ifndef _StepAP203_ApprovedItem_OCWrappers_HeaderFile
#define _StepAP203_ApprovedItem_OCWrappers_HeaderFile

// include native header
#include <StepAP203_ApprovedItem.hxx>
#include "../Converter.h"

#include "../StepData/StepData_SelectType.h"

#include "../StepData/StepData_SelectType.h"


namespace OCNaroWrappers
{

ref class OCStandard_Transient;
ref class OCStepBasic_ProductDefinitionFormation;
ref class OCStepBasic_ProductDefinition;
ref class OCStepRepr_ConfigurationEffectivity;
ref class OCStepRepr_ConfigurationItem;
ref class OCStepBasic_SecurityClassification;
ref class OCStepAP203_ChangeRequest;
ref class OCStepAP203_Change;
ref class OCStepAP203_StartRequest;
ref class OCStepAP203_StartWork;
ref class OCStepBasic_Certification;
ref class OCStepBasic_Contract;


//! Representation of STEP SELECT type ApprovedItem <br>
public ref class OCStepAP203_ApprovedItem  : public OCStepData_SelectType {

protected:
  // dummy constructor;
  OCStepAP203_ApprovedItem(OCDummy^) : OCStepData_SelectType((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepAP203_ApprovedItem(StepAP203_ApprovedItem* nativeHandle);

// Methods PUBLIC

//! Empty constructor <br>
OCStepAP203_ApprovedItem();

//! Recognizes a kind of ApprovedItem select type <br>
//!          1 -> ProductDefinitionFormation from StepBasic <br>
//!          2 -> ProductDefinition from StepBasic <br>
//!          3 -> ConfigurationEffectivity from StepRepr <br>
//!          4 -> ConfigurationItem from StepRepr <br>
//!          5 -> SecurityClassification from StepBasic <br>
//!          6 -> ChangeRequest from StepAP203 <br>
//!          7 -> Change from StepAP203 <br>
//!          8 -> StartRequest from StepAP203 <br>
//!          9 -> StartWork from StepAP203 <br>
//!          10 -> Certification from StepBasic <br>
//!          11 -> Contract from StepBasic <br>
//!          0 else <br>
 /*instead*/  Standard_Integer CaseNum(OCNaroWrappers::OCStandard_Transient^ ent) ;

//! Returns Value as ProductDefinitionFormation (or Null if another type) <br>
 /*instead*/  OCStepBasic_ProductDefinitionFormation^ ProductDefinitionFormation() ;

//! Returns Value as ProductDefinition (or Null if another type) <br>
 /*instead*/  OCStepBasic_ProductDefinition^ ProductDefinition() ;

//! Returns Value as ConfigurationEffectivity (or Null if another type) <br>
 /*instead*/  OCStepRepr_ConfigurationEffectivity^ ConfigurationEffectivity() ;

//! Returns Value as ConfigurationItem (or Null if another type) <br>
 /*instead*/  OCStepRepr_ConfigurationItem^ ConfigurationItem() ;

//! Returns Value as SecurityClassification (or Null if another type) <br>
 /*instead*/  OCStepBasic_SecurityClassification^ SecurityClassification() ;

//! Returns Value as ChangeRequest (or Null if another type) <br>
 /*instead*/  OCStepAP203_ChangeRequest^ ChangeRequest() ;

//! Returns Value as Change (or Null if another type) <br>
 /*instead*/  OCStepAP203_Change^ Change() ;

//! Returns Value as StartRequest (or Null if another type) <br>
 /*instead*/  OCStepAP203_StartRequest^ StartRequest() ;

//! Returns Value as StartWork (or Null if another type) <br>
 /*instead*/  OCStepAP203_StartWork^ StartWork() ;

//! Returns Value as Certification (or Null if another type) <br>
 /*instead*/  OCStepBasic_Certification^ Certification() ;

//! Returns Value as Contract (or Null if another type) <br>
 /*instead*/  OCStepBasic_Contract^ Contract() ;

~OCStepAP203_ApprovedItem()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
