// File generated by CPPExt (MPV)
//
#ifndef _GeomLib_MakeCurvefromApprox_OCWrappers_HeaderFile
#define _GeomLib_MakeCurvefromApprox_OCWrappers_HeaderFile

// include native header
#include <GeomLib_MakeCurvefromApprox.hxx>
#include "../Converter.h"


#include "../AdvApprox/AdvApprox_ApproxAFunction.h"


namespace OCNaroWrappers
{

ref class OCAdvApprox_ApproxAFunction;
ref class OCGeom2d_BSplineCurve;
ref class OCGeom_BSplineCurve;


//! this class is used to  construct the BSpline curve <br>
//!          from an Approximation ( ApproxAFunction from AdvApprox). <br>
public ref class OCGeomLib_MakeCurvefromApprox  {

protected:
  GeomLib_MakeCurvefromApprox* nativeHandle;
  OCGeomLib_MakeCurvefromApprox(OCDummy^) {};

public:
  property GeomLib_MakeCurvefromApprox* Handle
  {
    GeomLib_MakeCurvefromApprox* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeomLib_MakeCurvefromApprox(GeomLib_MakeCurvefromApprox* nativeHandle);

// Methods PUBLIC


OCGeomLib_MakeCurvefromApprox(OCNaroWrappers::OCAdvApprox_ApproxAFunction^ Approx);


 /*instead*/  System::Boolean IsDone() ;

//! returns the number of 1D spaces of the Approx <br>
 /*instead*/  Standard_Integer Nb1DSpaces() ;

//! returns the number of 3D spaces of the Approx <br>
 /*instead*/  Standard_Integer Nb2DSpaces() ;

//! returns the number of 3D spaces of the Approx <br>
 /*instead*/  Standard_Integer Nb3DSpaces() ;

//! returns a polynomial curve whose poles correspond to <br>
//! the Index2d 2D space <br>//! if Index2d not in the Range [1,Nb2dSpaces] <br>//! if the Approx is not Done <br>
 /*instead*/  OCGeom2d_BSplineCurve^ Curve2d(Standard_Integer Index2d) ;

//! returns a 2D curve building it from the 1D curve <br>
//!          in x at Index1d and y at Index2d amongst the <br>
//!          1D curves <br>//! if Index1d not in the Range [1,Nb1dSpaces] <br>
//!          if Index2d not in the Range [1,Nb1dSpaces] <br>//! if the Approx is not Done <br>
 /*instead*/  OCGeom2d_BSplineCurve^ Curve2dFromTwo1d(Standard_Integer Index1d, Standard_Integer Index2d) ;

//! returns a rational curve whose poles correspond to <br>
//! the index2d of the 2D space and whose weights correspond <br>
//! to one dimensional space of index 1d <br>//! if Index1d not in the Range [1,Nb1dSpaces] <br>
//!          if Index2d not in the Range [1,Nb2dSpaces] <br>//! if the Approx is not Done <br>
 /*instead*/  OCGeom2d_BSplineCurve^ Curve2d(Standard_Integer Index1d, Standard_Integer Index2d) ;

//!  returns a polynomial curve whose poles correspond to <br>
//! the Index3D 3D space <br>//! if Index3D not in the Range [1,Nb3dSpaces] <br>//! if the Approx is not Done <br>
 /*instead*/  OCGeom_BSplineCurve^ Curve(Standard_Integer Index3d) ;

//! returns a rational curve whose poles correspond to <br>
//! the index3D of the 3D space and whose weights correspond <br>
//! to the index1d 1D space. <br>//! if Index1D not in the Range [1,Nb1dSpaces] <br>
//!          if Index3D not in the Range [1,Nb3dSpaces] <br>//! if the Approx is not Done <br>
 /*instead*/  OCGeom_BSplineCurve^ Curve(Standard_Integer Index1D, Standard_Integer Index3D) ;

~OCGeomLib_MakeCurvefromApprox()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
