// File generated by CPPExt (MPV)
//
#ifndef _GeomLib_Tool_OCWrappers_HeaderFile
#define _GeomLib_Tool_OCWrappers_HeaderFile

// include native header
#include <GeomLib_Tool.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCGeom_Curve;
ref class OCgp_Pnt;
ref class OCGeom_Surface;
ref class OCGeom2d_Curve;
ref class OCgp_Pnt2d;


//!   The methods of this class compute the parameter(s) of a given point on a <br>
//! curve or a surface. The point must be located either <br>
//! on the curve (surface) itself or relatively to the latter at <br>
//! a distance less than the tolerance value. <br>
//! Return FALSE if the point is beyond the tolerance <br>
//! limit or if computation fails. <br>
//! Max Tolerance value is currently limited to 1.e-4 for <br>
//! geometrical curves and 1.e-3 for BSpline, Bezier and <br>
//! other parametrical curves. <br>
public ref class OCGeomLib_Tool  {

protected:
  GeomLib_Tool* nativeHandle;
  OCGeomLib_Tool(OCDummy^) {};

public:
  property GeomLib_Tool* Handle
  {
    GeomLib_Tool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeomLib_Tool(GeomLib_Tool* nativeHandle);

// Methods PUBLIC


//! Extracts the parameter of a 3D point lying on a 3D curve <br>
//! or at a distance less than the tolerance value. <br>
static /*instead*/  System::Boolean Parameter(OCNaroWrappers::OCGeom_Curve^ Curve, OCNaroWrappers::OCgp_Pnt^ Point, Standard_Real Tolerance, Standard_Real& U) ;

//! Extracts the parameter of a 3D point lying on a surface <br>
//! or at a distance less than the tolerance value. <br>
static /*instead*/  System::Boolean Parameters(OCNaroWrappers::OCGeom_Surface^ Surface, OCNaroWrappers::OCgp_Pnt^ Point, Standard_Real Tolerance, Standard_Real& U, Standard_Real& V) ;

//! Extracts the parameter of a 2D point lying on a 2D curve <br>
//! or at a distance less than the tolerance value. <br>
static /*instead*/  System::Boolean Parameter(OCNaroWrappers::OCGeom2d_Curve^ Curve, OCNaroWrappers::OCgp_Pnt2d^ Point, Standard_Real Tolerance, Standard_Real& U) ;

~OCGeomLib_Tool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
