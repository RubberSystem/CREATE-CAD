// File generated by CPPExt (CPP file)
//

#include "GeomLib_CheckBSplineCurve.h"
#include "../Converter.h"
#include "../Geom/Geom_BSplineCurve.h"


using namespace OCNaroWrappers;

OCGeomLib_CheckBSplineCurve::OCGeomLib_CheckBSplineCurve(GeomLib_CheckBSplineCurve* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGeomLib_CheckBSplineCurve::OCGeomLib_CheckBSplineCurve(OCNaroWrappers::OCGeom_BSplineCurve^ Curve, Standard_Real Tolerance, Standard_Real AngularTolerance) 
{
  nativeHandle = new GeomLib_CheckBSplineCurve(*((Handle_Geom_BSplineCurve*)Curve->Handle), Tolerance, AngularTolerance);
}

 System::Boolean OCGeomLib_CheckBSplineCurve::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((GeomLib_CheckBSplineCurve*)nativeHandle)->IsDone());
}

 void OCGeomLib_CheckBSplineCurve::NeedTangentFix(System::Boolean& FirstFlag, System::Boolean& SecondFlag)
{
  ((GeomLib_CheckBSplineCurve*)nativeHandle)->NeedTangentFix((Standard_Boolean&)(FirstFlag), (Standard_Boolean&)(SecondFlag));
}

 void OCGeomLib_CheckBSplineCurve::FixTangent(System::Boolean FirstFlag, System::Boolean LastFlag)
{
  ((GeomLib_CheckBSplineCurve*)nativeHandle)->FixTangent(OCConverter::BooleanToStandardBoolean(FirstFlag), OCConverter::BooleanToStandardBoolean(LastFlag));
}

OCGeom_BSplineCurve^ OCGeomLib_CheckBSplineCurve::FixedTangent(System::Boolean FirstFlag, System::Boolean LastFlag)
{
  Handle(Geom_BSplineCurve) tmp = ((GeomLib_CheckBSplineCurve*)nativeHandle)->FixedTangent(OCConverter::BooleanToStandardBoolean(FirstFlag), OCConverter::BooleanToStandardBoolean(LastFlag));
  return gcnew OCGeom_BSplineCurve(&tmp);
}


