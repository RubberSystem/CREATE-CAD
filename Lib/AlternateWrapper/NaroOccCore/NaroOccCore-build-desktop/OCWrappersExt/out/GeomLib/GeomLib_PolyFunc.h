// File generated by CPPExt (MPV)
//
#ifndef _GeomLib_PolyFunc_OCWrappers_HeaderFile
#define _GeomLib_PolyFunc_OCWrappers_HeaderFile

// include native header
#include <GeomLib_PolyFunc.hxx>
#include "../Converter.h"

#include "../math/math_FunctionWithDerivative.h"

#include "../math/math_Vector.h"
#include "../math/math_FunctionWithDerivative.h"


namespace OCNaroWrappers
{

ref class OCmath_Vector;


//! Polynomial  Function <br>
public ref class OCGeomLib_PolyFunc  : public OCmath_FunctionWithDerivative {

protected:
  // dummy constructor;
  OCGeomLib_PolyFunc(OCDummy^) : OCmath_FunctionWithDerivative((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeomLib_PolyFunc(GeomLib_PolyFunc* nativeHandle);

// Methods PUBLIC


OCGeomLib_PolyFunc(OCNaroWrappers::OCmath_Vector^ Coeffs);

//! computes the value <F>of the function for the variable <X>. <br>
//!          Returns True if the calculation were successfully done, <br>
//!          False otherwise. <br>
virtual /*instead*/  System::Boolean Value(Standard_Real X, Standard_Real& F) ;

//! computes the derivative <D> of the function <br>
//!          for the variable <X>. <br>
//!           Returns True if the calculation were successfully done, <br>
//!           False otherwise. <br>
virtual /*instead*/  System::Boolean Derivative(Standard_Real X, Standard_Real& D) ;

//! computes the value <F> and the derivative <D> of the <br>
//!          function for the variable <X>. <br>
//!          Returns True if the calculation were successfully done, <br>
//!          False otherwise. <br>
virtual /*instead*/  System::Boolean Values(Standard_Real X, Standard_Real& F, Standard_Real& D) ;

~OCGeomLib_PolyFunc()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
