// File generated by CPPExt (CPP file)
//

#include "IntTools_DataMapOfSurfaceSampleBox.h"
#include "../Converter.h"
#include "IntTools_SurfaceRangeSample.h"
#include "../Bnd/Bnd_Box.h"
#include "IntTools_SurfaceRangeSampleMapHasher.h"
#include "IntTools_DataMapNodeOfDataMapOfSurfaceSampleBox.h"
#include "IntTools_DataMapIteratorOfDataMapOfSurfaceSampleBox.h"


using namespace OCNaroWrappers;

OCIntTools_DataMapOfSurfaceSampleBox::OCIntTools_DataMapOfSurfaceSampleBox(IntTools_DataMapOfSurfaceSampleBox* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIntTools_DataMapOfSurfaceSampleBox::OCIntTools_DataMapOfSurfaceSampleBox(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new IntTools_DataMapOfSurfaceSampleBox(NbBuckets);
}

OCIntTools_DataMapOfSurfaceSampleBox^ OCIntTools_DataMapOfSurfaceSampleBox::Assign(OCNaroWrappers::OCIntTools_DataMapOfSurfaceSampleBox^ Other)
{
  IntTools_DataMapOfSurfaceSampleBox* tmp = new IntTools_DataMapOfSurfaceSampleBox(0);
  *tmp = ((IntTools_DataMapOfSurfaceSampleBox*)nativeHandle)->Assign(*((IntTools_DataMapOfSurfaceSampleBox*)Other->Handle));
  return gcnew OCIntTools_DataMapOfSurfaceSampleBox(tmp);
}

 void OCIntTools_DataMapOfSurfaceSampleBox::ReSize(Standard_Integer NbBuckets)
{
  ((IntTools_DataMapOfSurfaceSampleBox*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCIntTools_DataMapOfSurfaceSampleBox::Bind(OCNaroWrappers::OCIntTools_SurfaceRangeSample^ K, OCNaroWrappers::OCBnd_Box^ I)
{
  return OCConverter::StandardBooleanToBoolean(((IntTools_DataMapOfSurfaceSampleBox*)nativeHandle)->Bind(*((IntTools_SurfaceRangeSample*)K->Handle), *((Bnd_Box*)I->Handle)));
}

 System::Boolean OCIntTools_DataMapOfSurfaceSampleBox::IsBound(OCNaroWrappers::OCIntTools_SurfaceRangeSample^ K)
{
  return OCConverter::StandardBooleanToBoolean(((IntTools_DataMapOfSurfaceSampleBox*)nativeHandle)->IsBound(*((IntTools_SurfaceRangeSample*)K->Handle)));
}

 System::Boolean OCIntTools_DataMapOfSurfaceSampleBox::UnBind(OCNaroWrappers::OCIntTools_SurfaceRangeSample^ K)
{
  return OCConverter::StandardBooleanToBoolean(((IntTools_DataMapOfSurfaceSampleBox*)nativeHandle)->UnBind(*((IntTools_SurfaceRangeSample*)K->Handle)));
}

OCBnd_Box^ OCIntTools_DataMapOfSurfaceSampleBox::Find(OCNaroWrappers::OCIntTools_SurfaceRangeSample^ K)
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = ((IntTools_DataMapOfSurfaceSampleBox*)nativeHandle)->Find(*((IntTools_SurfaceRangeSample*)K->Handle));
  return gcnew OCBnd_Box(tmp);
}

OCBnd_Box^ OCIntTools_DataMapOfSurfaceSampleBox::ChangeFind(OCNaroWrappers::OCIntTools_SurfaceRangeSample^ K)
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = ((IntTools_DataMapOfSurfaceSampleBox*)nativeHandle)->ChangeFind(*((IntTools_SurfaceRangeSample*)K->Handle));
  return gcnew OCBnd_Box(tmp);
}

 Standard_Address OCIntTools_DataMapOfSurfaceSampleBox::Find1(OCNaroWrappers::OCIntTools_SurfaceRangeSample^ K)
{
  return ((IntTools_DataMapOfSurfaceSampleBox*)nativeHandle)->Find1(*((IntTools_SurfaceRangeSample*)K->Handle));
}

 Standard_Address OCIntTools_DataMapOfSurfaceSampleBox::ChangeFind1(OCNaroWrappers::OCIntTools_SurfaceRangeSample^ K)
{
  return ((IntTools_DataMapOfSurfaceSampleBox*)nativeHandle)->ChangeFind1(*((IntTools_SurfaceRangeSample*)K->Handle));
}


