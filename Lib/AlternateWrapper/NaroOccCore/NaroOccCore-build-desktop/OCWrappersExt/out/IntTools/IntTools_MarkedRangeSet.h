// File generated by CPPExt (MPV)
//
#ifndef _IntTools_MarkedRangeSet_OCWrappers_HeaderFile
#define _IntTools_MarkedRangeSet_OCWrappers_HeaderFile

// include native header
#include <IntTools_MarkedRangeSet.hxx>
#include "../Converter.h"


#include "../TColStd/TColStd_SequenceOfReal.h"
#include "../TColStd/TColStd_SequenceOfInteger.h"


namespace OCNaroWrappers
{

ref class OCIntTools_CArray1OfReal;
ref class OCIntTools_Range;
ref class OCTColStd_SequenceOfInteger;


//! class MarkedRangeSet provides continuous set of ranges marked with flags <br>
public ref class OCIntTools_MarkedRangeSet  {

protected:
  IntTools_MarkedRangeSet* nativeHandle;
  OCIntTools_MarkedRangeSet(OCDummy^) {};

public:
  property IntTools_MarkedRangeSet* Handle
  {
    IntTools_MarkedRangeSet* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntTools_MarkedRangeSet(IntTools_MarkedRangeSet* nativeHandle);

// Methods PUBLIC


//! Empty constructor <br>
OCIntTools_MarkedRangeSet();


//! build set of ranges which consists of one range with <br>
//! boundary values theFirstBoundary and theLastBoundary <br>
OCIntTools_MarkedRangeSet(Standard_Real theFirstBoundary, Standard_Real theLastBoundary, Standard_Integer theInitFlag);


//! Build set of ranges based on the array of progressive sorted values <br>
OCIntTools_MarkedRangeSet(OCNaroWrappers::OCIntTools_CArray1OfReal^ theSortedArray, Standard_Integer theInitFlag);


//! build set of ranges which consists of one range with <br>
//! boundary values theFirstBoundary and theLastBoundary <br>
 /*instead*/  void SetBoundaries(Standard_Real theFirstBoundary, Standard_Real theLastBoundary, Standard_Integer theInitFlag) ;


//! Build set of ranges based on the array of progressive sorted values <br>
 /*instead*/  void SetRanges(OCNaroWrappers::OCIntTools_CArray1OfReal^ theSortedArray, Standard_Integer theInitFlag) ;


//! Inserts a new range marked with flag theFlag <br>
//! It replace the existing ranges or parts of ranges <br>
//! and their flags. <br>
//! Returns True if the range is inside the initial boundaries, <br>
//! otherwise or in case of some error returns False <br>
 /*instead*/  System::Boolean InsertRange(Standard_Real theFirstBoundary, Standard_Real theLastBoundary, Standard_Integer theFlag) ;


//! Inserts a new range marked with flag theFlag <br>
//! It replace the existing ranges or parts of ranges <br>
//! and their flags. <br>
//! Returns True if the range is inside the initial boundaries, <br>
//! otherwise or in case of some error returns False <br>
 /*instead*/  System::Boolean InsertRange(OCNaroWrappers::OCIntTools_Range^ theRange, Standard_Integer theFlag) ;


//! Inserts a new range marked with flag theFlag <br>
//! It replace the existing ranges or parts of ranges <br>
//! and their flags. <br>
//! The index theIndex is a position where the range will be inserted. <br>
//! Returns True if the range is inside the initial boundaries, <br>
//! otherwise or in case of some error returns False <br>
 /*instead*/  System::Boolean InsertRange(Standard_Real theFirstBoundary, Standard_Real theLastBoundary, Standard_Integer theFlag, Standard_Integer theIndex) ;


//! Inserts a new range marked with flag theFlag <br>
//! It replace the existing ranges or parts of ranges <br>
//! and their flags. <br>
//! The index theIndex is a position where the range will be inserted. <br>
//! Returns True if the range is inside the initial boundaries, <br>
//! otherwise or in case of some error returns False <br>
 /*instead*/  System::Boolean InsertRange(OCNaroWrappers::OCIntTools_Range^ theRange, Standard_Integer theFlag, Standard_Integer theIndex) ;


//! Set flag theFlag for range with index theIndex <br>
 /*instead*/  void SetFlag(Standard_Integer theIndex, Standard_Integer theFlag) ;


//! Returns flag of the range with index theIndex <br>
 /*instead*/  Standard_Integer Flag(Standard_Integer theIndex) ;


//! Returns index of range which contains theValue. <br>
//! If theValue do not belong any range returns 0. <br>
 /*instead*/  Standard_Integer GetIndex(Standard_Real theValue) ;


 /*instead*/  OCTColStd_SequenceOfInteger^ GetIndices(Standard_Real theValue) ;


//! Returns index of range which contains theValue <br>
//! If theValue do not belong any range returns 0. <br>
//! If UseLower is Standard_True then lower boundary of the range <br>
//! can be equal to theValue, otherwise upper boundary of the range <br>
//! can be equal to theValue. <br>
 /*instead*/  Standard_Integer GetIndex(Standard_Real theValue, System::Boolean UseLower) ;


//! Returns number of ranges <br>
 /*instead*/  Standard_Integer Length() ;


//! Returns the range with index theIndex. <br>
//! the Index can be from 1 to Length() <br>
 /*instead*/  OCIntTools_Range^ Range(Standard_Integer theIndex) ;

~OCIntTools_MarkedRangeSet()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
