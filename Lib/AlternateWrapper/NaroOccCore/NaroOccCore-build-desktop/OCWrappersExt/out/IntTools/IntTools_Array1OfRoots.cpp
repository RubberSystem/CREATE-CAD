// File generated by CPPExt (CPP file)
//

#include "IntTools_Array1OfRoots.h"
#include "../Converter.h"
#include "IntTools_Root.h"


using namespace OCNaroWrappers;

OCIntTools_Array1OfRoots::OCIntTools_Array1OfRoots(IntTools_Array1OfRoots* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCIntTools_Array1OfRoots::OCIntTools_Array1OfRoots(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new IntTools_Array1OfRoots(Low, Up);
}

OCIntTools_Array1OfRoots::OCIntTools_Array1OfRoots(OCNaroWrappers::OCIntTools_Root^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new IntTools_Array1OfRoots(*((IntTools_Root*)Item->Handle), Low, Up);
}

 void OCIntTools_Array1OfRoots::Init(OCNaroWrappers::OCIntTools_Root^ V)
{
  ((IntTools_Array1OfRoots*)nativeHandle)->Init(*((IntTools_Root*)V->Handle));
}

 System::Boolean OCIntTools_Array1OfRoots::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((IntTools_Array1OfRoots*)nativeHandle)->IsAllocated());
}

OCIntTools_Array1OfRoots^ OCIntTools_Array1OfRoots::Assign(OCNaroWrappers::OCIntTools_Array1OfRoots^ Other)
{
  IntTools_Array1OfRoots* tmp = new IntTools_Array1OfRoots(0, 0);
  *tmp = ((IntTools_Array1OfRoots*)nativeHandle)->Assign(*((IntTools_Array1OfRoots*)Other->Handle));
  return gcnew OCIntTools_Array1OfRoots(tmp);
}

 Standard_Integer OCIntTools_Array1OfRoots::Length()
{
  return ((IntTools_Array1OfRoots*)nativeHandle)->Length();
}

 Standard_Integer OCIntTools_Array1OfRoots::Lower()
{
  return ((IntTools_Array1OfRoots*)nativeHandle)->Lower();
}

 Standard_Integer OCIntTools_Array1OfRoots::Upper()
{
  return ((IntTools_Array1OfRoots*)nativeHandle)->Upper();
}

 void OCIntTools_Array1OfRoots::SetValue(Standard_Integer Index, OCNaroWrappers::OCIntTools_Root^ Value)
{
  ((IntTools_Array1OfRoots*)nativeHandle)->SetValue(Index, *((IntTools_Root*)Value->Handle));
}

OCIntTools_Root^ OCIntTools_Array1OfRoots::Value(Standard_Integer Index)
{
  IntTools_Root* tmp = new IntTools_Root();
  *tmp = ((IntTools_Array1OfRoots*)nativeHandle)->Value(Index);
  return gcnew OCIntTools_Root(tmp);
}

OCIntTools_Root^ OCIntTools_Array1OfRoots::ChangeValue(Standard_Integer Index)
{
  IntTools_Root* tmp = new IntTools_Root();
  *tmp = ((IntTools_Array1OfRoots*)nativeHandle)->ChangeValue(Index);
  return gcnew OCIntTools_Root(tmp);
}


