// File generated by CPPExt (CPP file)
//

#include "IntTools_Array1OfRange.h"
#include "../Converter.h"
#include "IntTools_Range.h"


using namespace OCNaroWrappers;

OCIntTools_Array1OfRange::OCIntTools_Array1OfRange(IntTools_Array1OfRange* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCIntTools_Array1OfRange::OCIntTools_Array1OfRange(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new IntTools_Array1OfRange(Low, Up);
}

OCIntTools_Array1OfRange::OCIntTools_Array1OfRange(OCNaroWrappers::OCIntTools_Range^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new IntTools_Array1OfRange(*((IntTools_Range*)Item->Handle), Low, Up);
}

 void OCIntTools_Array1OfRange::Init(OCNaroWrappers::OCIntTools_Range^ V)
{
  ((IntTools_Array1OfRange*)nativeHandle)->Init(*((IntTools_Range*)V->Handle));
}

 System::Boolean OCIntTools_Array1OfRange::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((IntTools_Array1OfRange*)nativeHandle)->IsAllocated());
}

OCIntTools_Array1OfRange^ OCIntTools_Array1OfRange::Assign(OCNaroWrappers::OCIntTools_Array1OfRange^ Other)
{
  IntTools_Array1OfRange* tmp = new IntTools_Array1OfRange(0, 0);
  *tmp = ((IntTools_Array1OfRange*)nativeHandle)->Assign(*((IntTools_Array1OfRange*)Other->Handle));
  return gcnew OCIntTools_Array1OfRange(tmp);
}

 Standard_Integer OCIntTools_Array1OfRange::Length()
{
  return ((IntTools_Array1OfRange*)nativeHandle)->Length();
}

 Standard_Integer OCIntTools_Array1OfRange::Lower()
{
  return ((IntTools_Array1OfRange*)nativeHandle)->Lower();
}

 Standard_Integer OCIntTools_Array1OfRange::Upper()
{
  return ((IntTools_Array1OfRange*)nativeHandle)->Upper();
}

 void OCIntTools_Array1OfRange::SetValue(Standard_Integer Index, OCNaroWrappers::OCIntTools_Range^ Value)
{
  ((IntTools_Array1OfRange*)nativeHandle)->SetValue(Index, *((IntTools_Range*)Value->Handle));
}

OCIntTools_Range^ OCIntTools_Array1OfRange::Value(Standard_Integer Index)
{
  IntTools_Range* tmp = new IntTools_Range();
  *tmp = ((IntTools_Array1OfRange*)nativeHandle)->Value(Index);
  return gcnew OCIntTools_Range(tmp);
}

OCIntTools_Range^ OCIntTools_Array1OfRange::ChangeValue(Standard_Integer Index)
{
  IntTools_Range* tmp = new IntTools_Range();
  *tmp = ((IntTools_Array1OfRange*)nativeHandle)->ChangeValue(Index);
  return gcnew OCIntTools_Range(tmp);
}


