// File generated by CPPExt (CPP file)
//

#include "IntTools_SequenceOfRoots.h"
#include "../Converter.h"
#include "IntTools_Root.h"
#include "IntTools_SequenceNodeOfSequenceOfRoots.h"


using namespace OCNaroWrappers;

OCIntTools_SequenceOfRoots::OCIntTools_SequenceOfRoots(IntTools_SequenceOfRoots* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIntTools_SequenceOfRoots::OCIntTools_SequenceOfRoots() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new IntTools_SequenceOfRoots();
}

OCIntTools_SequenceOfRoots^ OCIntTools_SequenceOfRoots::Assign(OCNaroWrappers::OCIntTools_SequenceOfRoots^ Other)
{
  IntTools_SequenceOfRoots* tmp = new IntTools_SequenceOfRoots();
  *tmp = ((IntTools_SequenceOfRoots*)nativeHandle)->Assign(*((IntTools_SequenceOfRoots*)Other->Handle));
  return gcnew OCIntTools_SequenceOfRoots(tmp);
}

 void OCIntTools_SequenceOfRoots::Append(OCNaroWrappers::OCIntTools_Root^ T)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->Append(*((IntTools_Root*)T->Handle));
}

 void OCIntTools_SequenceOfRoots::Append(OCNaroWrappers::OCIntTools_SequenceOfRoots^ S)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->Append(*((IntTools_SequenceOfRoots*)S->Handle));
}

 void OCIntTools_SequenceOfRoots::Prepend(OCNaroWrappers::OCIntTools_Root^ T)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->Prepend(*((IntTools_Root*)T->Handle));
}

 void OCIntTools_SequenceOfRoots::Prepend(OCNaroWrappers::OCIntTools_SequenceOfRoots^ S)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->Prepend(*((IntTools_SequenceOfRoots*)S->Handle));
}

 void OCIntTools_SequenceOfRoots::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntTools_Root^ T)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->InsertBefore(Index, *((IntTools_Root*)T->Handle));
}

 void OCIntTools_SequenceOfRoots::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntTools_SequenceOfRoots^ S)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->InsertBefore(Index, *((IntTools_SequenceOfRoots*)S->Handle));
}

 void OCIntTools_SequenceOfRoots::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntTools_Root^ T)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->InsertAfter(Index, *((IntTools_Root*)T->Handle));
}

 void OCIntTools_SequenceOfRoots::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntTools_SequenceOfRoots^ S)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->InsertAfter(Index, *((IntTools_SequenceOfRoots*)S->Handle));
}

OCIntTools_Root^ OCIntTools_SequenceOfRoots::First()
{
  IntTools_Root* tmp = new IntTools_Root();
  *tmp = ((IntTools_SequenceOfRoots*)nativeHandle)->First();
  return gcnew OCIntTools_Root(tmp);
}

OCIntTools_Root^ OCIntTools_SequenceOfRoots::Last()
{
  IntTools_Root* tmp = new IntTools_Root();
  *tmp = ((IntTools_SequenceOfRoots*)nativeHandle)->Last();
  return gcnew OCIntTools_Root(tmp);
}

 void OCIntTools_SequenceOfRoots::Split(Standard_Integer Index, OCNaroWrappers::OCIntTools_SequenceOfRoots^ Sub)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->Split(Index, *((IntTools_SequenceOfRoots*)Sub->Handle));
}

OCIntTools_Root^ OCIntTools_SequenceOfRoots::Value(Standard_Integer Index)
{
  IntTools_Root* tmp = new IntTools_Root();
  *tmp = ((IntTools_SequenceOfRoots*)nativeHandle)->Value(Index);
  return gcnew OCIntTools_Root(tmp);
}

 void OCIntTools_SequenceOfRoots::SetValue(Standard_Integer Index, OCNaroWrappers::OCIntTools_Root^ I)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->SetValue(Index, *((IntTools_Root*)I->Handle));
}

OCIntTools_Root^ OCIntTools_SequenceOfRoots::ChangeValue(Standard_Integer Index)
{
  IntTools_Root* tmp = new IntTools_Root();
  *tmp = ((IntTools_SequenceOfRoots*)nativeHandle)->ChangeValue(Index);
  return gcnew OCIntTools_Root(tmp);
}

 void OCIntTools_SequenceOfRoots::Remove(Standard_Integer Index)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->Remove(Index);
}

 void OCIntTools_SequenceOfRoots::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((IntTools_SequenceOfRoots*)nativeHandle)->Remove(FromIndex, ToIndex);
}


