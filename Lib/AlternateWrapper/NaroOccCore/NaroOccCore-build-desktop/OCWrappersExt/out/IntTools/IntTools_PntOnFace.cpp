// File generated by CPPExt (CPP file)
//

#include "IntTools_PntOnFace.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCIntTools_PntOnFace::OCIntTools_PntOnFace(IntTools_PntOnFace* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCIntTools_PntOnFace::OCIntTools_PntOnFace() 
{
  nativeHandle = new IntTools_PntOnFace();
}

 void OCIntTools_PntOnFace::Init(OCNaroWrappers::OCTopoDS_Face^ aF, OCNaroWrappers::OCgp_Pnt^ aP, Standard_Real U, Standard_Real V)
{
  ((IntTools_PntOnFace*)nativeHandle)->Init(*((TopoDS_Face*)aF->Handle), *((gp_Pnt*)aP->Handle), U, V);
}

 void OCIntTools_PntOnFace::SetFace(OCNaroWrappers::OCTopoDS_Face^ aF)
{
  ((IntTools_PntOnFace*)nativeHandle)->SetFace(*((TopoDS_Face*)aF->Handle));
}

 void OCIntTools_PntOnFace::SetPnt(OCNaroWrappers::OCgp_Pnt^ aP)
{
  ((IntTools_PntOnFace*)nativeHandle)->SetPnt(*((gp_Pnt*)aP->Handle));
}

 void OCIntTools_PntOnFace::SetParameters(Standard_Real U, Standard_Real V)
{
  ((IntTools_PntOnFace*)nativeHandle)->SetParameters(U, V);
}

 void OCIntTools_PntOnFace::SetValid(System::Boolean bF)
{
  ((IntTools_PntOnFace*)nativeHandle)->SetValid(OCConverter::BooleanToStandardBoolean(bF));
}

 System::Boolean OCIntTools_PntOnFace::Valid()
{
  return OCConverter::StandardBooleanToBoolean(((IntTools_PntOnFace*)nativeHandle)->Valid());
}

OCTopoDS_Face^ OCIntTools_PntOnFace::Face()
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = ((IntTools_PntOnFace*)nativeHandle)->Face();
  return gcnew OCTopoDS_Face(tmp);
}

OCgp_Pnt^ OCIntTools_PntOnFace::Pnt()
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((IntTools_PntOnFace*)nativeHandle)->Pnt();
  return gcnew OCgp_Pnt(tmp);
}

 void OCIntTools_PntOnFace::Parameters(Standard_Real& U, Standard_Real& V)
{
  ((IntTools_PntOnFace*)nativeHandle)->Parameters(U, V);
}

 System::Boolean OCIntTools_PntOnFace::IsValid()
{
  return OCConverter::StandardBooleanToBoolean(((IntTools_PntOnFace*)nativeHandle)->IsValid());
}


