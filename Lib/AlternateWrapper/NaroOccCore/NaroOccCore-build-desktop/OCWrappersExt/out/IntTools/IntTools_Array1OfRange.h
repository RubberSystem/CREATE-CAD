// File generated by CPPExt (MPV)
//
#ifndef _IntTools_Array1OfRange_OCWrappers_HeaderFile
#define _IntTools_Array1OfRange_OCWrappers_HeaderFile

// include native header
#include <IntTools_Array1OfRange.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCIntTools_Range;



public ref class OCIntTools_Array1OfRange  {

protected:
  IntTools_Array1OfRange* nativeHandle;
  OCIntTools_Array1OfRange(OCDummy^) {};

public:
  property IntTools_Array1OfRange* Handle
  {
    IntTools_Array1OfRange* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntTools_Array1OfRange(IntTools_Array1OfRange* nativeHandle);

// Methods PUBLIC


OCIntTools_Array1OfRange(Standard_Integer Low, Standard_Integer Up);


OCIntTools_Array1OfRange(OCNaroWrappers::OCIntTools_Range^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCIntTools_Range^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCIntTools_Array1OfRange^ Assign(OCNaroWrappers::OCIntTools_Array1OfRange^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCIntTools_Range^ Value) ;


 /*instead*/  OCIntTools_Range^ Value(Standard_Integer Index) ;


 /*instead*/  OCIntTools_Range^ ChangeValue(Standard_Integer Index) ;

~OCIntTools_Array1OfRange()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
