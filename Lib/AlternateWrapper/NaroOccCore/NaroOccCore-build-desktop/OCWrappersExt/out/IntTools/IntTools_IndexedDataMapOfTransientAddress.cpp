// File generated by CPPExt (CPP file)
//

#include "IntTools_IndexedDataMapOfTransientAddress.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "../TColStd/TColStd_MapTransientHasher.h"
#include "IntTools_IndexedDataMapNodeOfIndexedDataMapOfTransientAddress.h"


using namespace OCNaroWrappers;

OCIntTools_IndexedDataMapOfTransientAddress::OCIntTools_IndexedDataMapOfTransientAddress(IntTools_IndexedDataMapOfTransientAddress* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIntTools_IndexedDataMapOfTransientAddress::OCIntTools_IndexedDataMapOfTransientAddress(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new IntTools_IndexedDataMapOfTransientAddress(NbBuckets);
}

OCIntTools_IndexedDataMapOfTransientAddress^ OCIntTools_IndexedDataMapOfTransientAddress::Assign(OCNaroWrappers::OCIntTools_IndexedDataMapOfTransientAddress^ Other)
{
  IntTools_IndexedDataMapOfTransientAddress* tmp = new IntTools_IndexedDataMapOfTransientAddress(0);
  *tmp = ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->Assign(*((IntTools_IndexedDataMapOfTransientAddress*)Other->Handle));
  return gcnew OCIntTools_IndexedDataMapOfTransientAddress(tmp);
}

 void OCIntTools_IndexedDataMapOfTransientAddress::ReSize(Standard_Integer NbBuckets)
{
  ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCIntTools_IndexedDataMapOfTransientAddress::Add(OCNaroWrappers::OCStandard_Transient^ K, Standard_Address I)
{
  return ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->Add(*((Handle_Standard_Transient*)K->Handle), I);
}

 void OCIntTools_IndexedDataMapOfTransientAddress::Substitute(Standard_Integer I, OCNaroWrappers::OCStandard_Transient^ K, Standard_Address T)
{
  ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->Substitute(I, *((Handle_Standard_Transient*)K->Handle), T);
}

 void OCIntTools_IndexedDataMapOfTransientAddress::RemoveLast()
{
  ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->RemoveLast();
}

 System::Boolean OCIntTools_IndexedDataMapOfTransientAddress::Contains(OCNaroWrappers::OCStandard_Transient^ K)
{
  return OCConverter::StandardBooleanToBoolean(((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->Contains(*((Handle_Standard_Transient*)K->Handle)));
}

OCStandard_Transient^ OCIntTools_IndexedDataMapOfTransientAddress::FindKey(Standard_Integer I)
{
  Handle(Standard_Transient) tmp = ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->FindKey(I);
  return gcnew OCStandard_Transient(&tmp);
}

 Standard_Address OCIntTools_IndexedDataMapOfTransientAddress::FindFromIndex(Standard_Integer I)
{
  return ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->FindFromIndex(I);
}

 Standard_Address OCIntTools_IndexedDataMapOfTransientAddress::ChangeFromIndex(Standard_Integer I)
{
  return ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->ChangeFromIndex(I);
}

 Standard_Integer OCIntTools_IndexedDataMapOfTransientAddress::FindIndex(OCNaroWrappers::OCStandard_Transient^ K)
{
  return ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->FindIndex(*((Handle_Standard_Transient*)K->Handle));
}

 Standard_Address OCIntTools_IndexedDataMapOfTransientAddress::FindFromKey(OCNaroWrappers::OCStandard_Transient^ K)
{
  return ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->FindFromKey(*((Handle_Standard_Transient*)K->Handle));
}

 Standard_Address OCIntTools_IndexedDataMapOfTransientAddress::ChangeFromKey(OCNaroWrappers::OCStandard_Transient^ K)
{
  return ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->ChangeFromKey(*((Handle_Standard_Transient*)K->Handle));
}

 Standard_Address OCIntTools_IndexedDataMapOfTransientAddress::FindFromKey1(OCNaroWrappers::OCStandard_Transient^ K)
{
  return ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->FindFromKey1(*((Handle_Standard_Transient*)K->Handle));
}

 Standard_Address OCIntTools_IndexedDataMapOfTransientAddress::ChangeFromKey1(OCNaroWrappers::OCStandard_Transient^ K)
{
  return ((IntTools_IndexedDataMapOfTransientAddress*)nativeHandle)->ChangeFromKey1(*((Handle_Standard_Transient*)K->Handle));
}


