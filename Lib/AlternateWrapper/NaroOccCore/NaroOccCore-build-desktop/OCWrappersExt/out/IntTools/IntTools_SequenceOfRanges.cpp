// File generated by CPPExt (CPP file)
//

#include "IntTools_SequenceOfRanges.h"
#include "../Converter.h"
#include "IntTools_Range.h"
#include "IntTools_SequenceNodeOfSequenceOfRanges.h"


using namespace OCNaroWrappers;

OCIntTools_SequenceOfRanges::OCIntTools_SequenceOfRanges(IntTools_SequenceOfRanges* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIntTools_SequenceOfRanges::OCIntTools_SequenceOfRanges() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new IntTools_SequenceOfRanges();
}

OCIntTools_SequenceOfRanges^ OCIntTools_SequenceOfRanges::Assign(OCNaroWrappers::OCIntTools_SequenceOfRanges^ Other)
{
  IntTools_SequenceOfRanges* tmp = new IntTools_SequenceOfRanges();
  *tmp = ((IntTools_SequenceOfRanges*)nativeHandle)->Assign(*((IntTools_SequenceOfRanges*)Other->Handle));
  return gcnew OCIntTools_SequenceOfRanges(tmp);
}

 void OCIntTools_SequenceOfRanges::Append(OCNaroWrappers::OCIntTools_Range^ T)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->Append(*((IntTools_Range*)T->Handle));
}

 void OCIntTools_SequenceOfRanges::Append(OCNaroWrappers::OCIntTools_SequenceOfRanges^ S)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->Append(*((IntTools_SequenceOfRanges*)S->Handle));
}

 void OCIntTools_SequenceOfRanges::Prepend(OCNaroWrappers::OCIntTools_Range^ T)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->Prepend(*((IntTools_Range*)T->Handle));
}

 void OCIntTools_SequenceOfRanges::Prepend(OCNaroWrappers::OCIntTools_SequenceOfRanges^ S)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->Prepend(*((IntTools_SequenceOfRanges*)S->Handle));
}

 void OCIntTools_SequenceOfRanges::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntTools_Range^ T)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->InsertBefore(Index, *((IntTools_Range*)T->Handle));
}

 void OCIntTools_SequenceOfRanges::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntTools_SequenceOfRanges^ S)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->InsertBefore(Index, *((IntTools_SequenceOfRanges*)S->Handle));
}

 void OCIntTools_SequenceOfRanges::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntTools_Range^ T)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->InsertAfter(Index, *((IntTools_Range*)T->Handle));
}

 void OCIntTools_SequenceOfRanges::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntTools_SequenceOfRanges^ S)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->InsertAfter(Index, *((IntTools_SequenceOfRanges*)S->Handle));
}

OCIntTools_Range^ OCIntTools_SequenceOfRanges::First()
{
  IntTools_Range* tmp = new IntTools_Range();
  *tmp = ((IntTools_SequenceOfRanges*)nativeHandle)->First();
  return gcnew OCIntTools_Range(tmp);
}

OCIntTools_Range^ OCIntTools_SequenceOfRanges::Last()
{
  IntTools_Range* tmp = new IntTools_Range();
  *tmp = ((IntTools_SequenceOfRanges*)nativeHandle)->Last();
  return gcnew OCIntTools_Range(tmp);
}

 void OCIntTools_SequenceOfRanges::Split(Standard_Integer Index, OCNaroWrappers::OCIntTools_SequenceOfRanges^ Sub)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->Split(Index, *((IntTools_SequenceOfRanges*)Sub->Handle));
}

OCIntTools_Range^ OCIntTools_SequenceOfRanges::Value(Standard_Integer Index)
{
  IntTools_Range* tmp = new IntTools_Range();
  *tmp = ((IntTools_SequenceOfRanges*)nativeHandle)->Value(Index);
  return gcnew OCIntTools_Range(tmp);
}

 void OCIntTools_SequenceOfRanges::SetValue(Standard_Integer Index, OCNaroWrappers::OCIntTools_Range^ I)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->SetValue(Index, *((IntTools_Range*)I->Handle));
}

OCIntTools_Range^ OCIntTools_SequenceOfRanges::ChangeValue(Standard_Integer Index)
{
  IntTools_Range* tmp = new IntTools_Range();
  *tmp = ((IntTools_SequenceOfRanges*)nativeHandle)->ChangeValue(Index);
  return gcnew OCIntTools_Range(tmp);
}

 void OCIntTools_SequenceOfRanges::Remove(Standard_Integer Index)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->Remove(Index);
}

 void OCIntTools_SequenceOfRanges::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((IntTools_SequenceOfRanges*)nativeHandle)->Remove(FromIndex, ToIndex);
}


