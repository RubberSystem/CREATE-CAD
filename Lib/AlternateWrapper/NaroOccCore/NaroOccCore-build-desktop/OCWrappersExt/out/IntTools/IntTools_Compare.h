// File generated by CPPExt (MPV)
//
#ifndef _IntTools_Compare_OCWrappers_HeaderFile
#define _IntTools_Compare_OCWrappers_HeaderFile

// include native header
#include <IntTools_Compare.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCIntTools_Root;


//! Auxiliary class to provide a sorting Roots. <br>
public ref class OCIntTools_Compare  {

protected:
  IntTools_Compare* nativeHandle;
  OCIntTools_Compare(OCDummy^) {};

public:
  property IntTools_Compare* Handle
  {
    IntTools_Compare* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntTools_Compare(IntTools_Compare* nativeHandle);

// Methods PUBLIC


//! Empty constructor <br>
OCIntTools_Compare();


//! Initializes me by tolerance <br>
OCIntTools_Compare(Standard_Real aTol);


//! Returns True if <Left> is lower than <Right>. <br>
 /*instead*/  System::Boolean IsLower(OCNaroWrappers::OCIntTools_Root^ Left, OCNaroWrappers::OCIntTools_Root^ Right) ;


//! Returns True if <Left> is greater than <Right>. <br>
 /*instead*/  System::Boolean IsGreater(OCNaroWrappers::OCIntTools_Root^ Left, OCNaroWrappers::OCIntTools_Root^ Right) ;


//! Returns True when <Right> and <Left> are equal. <br>
 /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCIntTools_Root^ Left, OCNaroWrappers::OCIntTools_Root^ Right) ;

~OCIntTools_Compare()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
