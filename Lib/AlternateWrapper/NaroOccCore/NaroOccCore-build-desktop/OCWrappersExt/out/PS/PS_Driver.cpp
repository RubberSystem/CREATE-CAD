// File generated by CPPExt (CPP file)
//

#include "PS_Driver.h"
#include "../Converter.h"
#include "../PlotMgt/PlotMgt_Plotter.h"
#include "../Aspect/Aspect_ColorMap.h"
#include "../Aspect/Aspect_TypeMap.h"
#include "../Aspect/Aspect_WidthMap.h"
#include "../Aspect/Aspect_FontMap.h"
#include "../Aspect/Aspect_MarkMap.h"
#include "../TCollection/TCollection_ExtendedString.h"


using namespace OCNaroWrappers;

OCPS_Driver::OCPS_Driver(Handle(PS_Driver)* nativeHandle) : OCPlotMgt_PlotterDriver((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_PS_Driver(*nativeHandle);
}

OCPS_Driver::OCPS_Driver(System::String^ aName, Quantity_Length aDX, Quantity_Length aDY, OCAspect_TypeOfColorSpace aTypeOfColorSpace, OCAspect_FormatOfSheetPaper aSheetFormat) : OCPlotMgt_PlotterDriver((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PS_Driver(new PS_Driver(OCConverter::StringToStandardCString(aName), aDX, aDY, (Aspect_TypeOfColorSpace)aTypeOfColorSpace, (Aspect_FormatOfSheetPaper)aSheetFormat));
}

OCPS_Driver::OCPS_Driver(OCNaroWrappers::OCPlotMgt_Plotter^ aPlotter, System::String^ aName, Quantity_Length aPaperX, Quantity_Length aPaperY, OCAspect_TypeOfColorSpace aTypeOfColorSpace) : OCPlotMgt_PlotterDriver((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PS_Driver(new PS_Driver(*((Handle_PlotMgt_Plotter*)aPlotter->Handle), OCConverter::StringToStandardCString(aName), aPaperX, aPaperY, (Aspect_TypeOfColorSpace)aTypeOfColorSpace));
}

 void OCPS_Driver::BeginDraw()
{
  (*((Handle_PS_Driver*)nativeHandle))->BeginDraw();
}

 void OCPS_Driver::EndDraw(System::Boolean dontFlush)
{
  (*((Handle_PS_Driver*)nativeHandle))->EndDraw(OCConverter::BooleanToStandardBoolean(dontFlush));
}

 void OCPS_Driver::SetTextAttrib(Standard_Integer ColorIndex, Standard_Integer FontIndex)
{
  (*((Handle_PS_Driver*)nativeHandle))->SetTextAttrib(ColorIndex, FontIndex);
}

 void OCPS_Driver::SetTextAttrib(Standard_Integer ColorIndex, Standard_Integer FontIndex, Quantity_PlaneAngle aSlant, Quantity_Factor aHScale, Quantity_Factor aWScale, System::Boolean isUnderlined)
{
  (*((Handle_PS_Driver*)nativeHandle))->SetTextAttrib(ColorIndex, FontIndex, aSlant, aHScale, aWScale, OCConverter::BooleanToStandardBoolean(isUnderlined));
}

 System::Boolean OCPS_Driver::SizeOfImageFile(System::String^ anImageFile, Standard_Integer& aWidth, Standard_Integer& aHeight)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_PS_Driver*)nativeHandle))->SizeOfImageFile(OCConverter::StringToStandardCString(anImageFile), aWidth, aHeight));
}


