// File generated by CPPExt (CPP file)
//

#include "Image_PixelRowOfDIndexedImage.h"
#include "../Converter.h"
#include "../Aspect/Aspect_IndexPixel.h"


using namespace OCNaroWrappers;

OCImage_PixelRowOfDIndexedImage::OCImage_PixelRowOfDIndexedImage(Image_PixelRowOfDIndexedImage* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCImage_PixelRowOfDIndexedImage::OCImage_PixelRowOfDIndexedImage(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Image_PixelRowOfDIndexedImage(Low, Up);
}

OCImage_PixelRowOfDIndexedImage::OCImage_PixelRowOfDIndexedImage(OCNaroWrappers::OCAspect_IndexPixel^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Image_PixelRowOfDIndexedImage(*((Aspect_IndexPixel*)Item->Handle), Low, Up);
}

 void OCImage_PixelRowOfDIndexedImage::Init(OCNaroWrappers::OCAspect_IndexPixel^ V)
{
  ((Image_PixelRowOfDIndexedImage*)nativeHandle)->Init(*((Aspect_IndexPixel*)V->Handle));
}

 System::Boolean OCImage_PixelRowOfDIndexedImage::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((Image_PixelRowOfDIndexedImage*)nativeHandle)->IsAllocated());
}

OCImage_PixelRowOfDIndexedImage^ OCImage_PixelRowOfDIndexedImage::Assign(OCNaroWrappers::OCImage_PixelRowOfDIndexedImage^ Other)
{
  Image_PixelRowOfDIndexedImage* tmp = new Image_PixelRowOfDIndexedImage(0, 0);
  *tmp = ((Image_PixelRowOfDIndexedImage*)nativeHandle)->Assign(*((Image_PixelRowOfDIndexedImage*)Other->Handle));
  return gcnew OCImage_PixelRowOfDIndexedImage(tmp);
}

 Standard_Integer OCImage_PixelRowOfDIndexedImage::Length()
{
  return ((Image_PixelRowOfDIndexedImage*)nativeHandle)->Length();
}

 Standard_Integer OCImage_PixelRowOfDIndexedImage::Lower()
{
  return ((Image_PixelRowOfDIndexedImage*)nativeHandle)->Lower();
}

 Standard_Integer OCImage_PixelRowOfDIndexedImage::Upper()
{
  return ((Image_PixelRowOfDIndexedImage*)nativeHandle)->Upper();
}

 void OCImage_PixelRowOfDIndexedImage::SetValue(Standard_Integer Index, OCNaroWrappers::OCAspect_IndexPixel^ Value)
{
  ((Image_PixelRowOfDIndexedImage*)nativeHandle)->SetValue(Index, *((Aspect_IndexPixel*)Value->Handle));
}

OCAspect_IndexPixel^ OCImage_PixelRowOfDIndexedImage::Value(Standard_Integer Index)
{
  Aspect_IndexPixel* tmp = new Aspect_IndexPixel();
  *tmp = ((Image_PixelRowOfDIndexedImage*)nativeHandle)->Value(Index);
  return gcnew OCAspect_IndexPixel(tmp);
}

OCAspect_IndexPixel^ OCImage_PixelRowOfDIndexedImage::ChangeValue(Standard_Integer Index)
{
  Aspect_IndexPixel* tmp = new Aspect_IndexPixel();
  *tmp = ((Image_PixelRowOfDIndexedImage*)nativeHandle)->ChangeValue(Index);
  return gcnew OCAspect_IndexPixel(tmp);
}


