// File generated by CPPExt (MPV)
//
#ifndef _Image_BalancedPixelInterpolation_OCWrappers_HeaderFile
#define _Image_BalancedPixelInterpolation_OCWrappers_HeaderFile

// include native header
#include <Image_BalancedPixelInterpolation.hxx>
#include "../Converter.h"

#include "Image_PixelInterpolation.h"

#include "Image_PixelInterpolation.h"


namespace OCNaroWrappers
{

ref class OCImage_Image;
ref class OCAspect_Pixel;
ref class OCImage_DColorImage;
ref class OCAspect_ColorPixel;
ref class OCImage_DIndexedImage;
ref class OCAspect_IndexPixel;


//! The class BalancedPixelInterpolation is used to compute a <br>
//!            SubPixel value on non integer Image coordinate <br>
//!          BalancedPixelInterpolation redefined a new method to compute <br>
//!	      a SubPixel value . <br>
//!	    The value is the proportional to the distance of the <br>
//!	      four nearest Image Pixel. <br>
//!			A          B <br>
//!			  SubPixel <br>
//!			C          D <br>
//!	    If VA, VB, VC, VD is the value of the four nearest Image <br>
//!	      Pixel, if ColDelta and RowDelta is the distance from non <br>
//!	      integer coordinate (FX,FY) to the upper left nearest Image <br>
//!	      Pixel , then : <br>
//!		ColDelta = FX - XA ; <br>
//!		RowDelta = FY - YA ; <br>
//!		CAB = ColDelta*( VB - VA ) + VA <br>
//!		CCD = ColDelta*( VD - VC ) + VD <br>
//!		V =  RowDelta*( CCD - CAB ) + CAB <br>
//!	      is the Image SubPixel value on non integer <br>
//!	      coordinate (FX,FY). <br>
public ref class OCImage_BalancedPixelInterpolation  : public OCImage_PixelInterpolation {

protected:
  // dummy constructor;
  OCImage_BalancedPixelInterpolation(OCDummy^) : OCImage_PixelInterpolation((OCDummy^)nullptr) {};

public:

// constructor from native
OCImage_BalancedPixelInterpolation(Image_BalancedPixelInterpolation* nativeHandle);

// Methods PUBLIC

//! Create a BalancedPixelInterpolation  object. <br>
OCImage_BalancedPixelInterpolation();

//! Redefined the method to compute SubPixel's value <br>
//!	      on non integer Image coordinate. <br>
//!	    LowerX,LowerY,UpperX,UpperY is the Image Min Max, it's used <br>
//!	      to check if the SubPixel coordinate FX,FY is outside of <br>
//!	      image. <br>
//!          Return True  if Interpolation Succes. <br>
//!	    Return False if the SubPixel is out from Image. <br>
virtual /*instead*/  System::Boolean Interpolate(OCNaroWrappers::OCImage_Image^ aImage, Standard_Real FX, Standard_Real FY, Standard_Integer LowerX, Standard_Integer LowerY, Standard_Integer UpperX, Standard_Integer UpperY, OCNaroWrappers::OCAspect_Pixel^ RetPixel) override;

//! Compute SubPixel's value on non integer Image coordinate for <br>
//!	      DColorImage and ColorPixel. <br>
//!	    LowerX,LowerY,UpperX,UpperY is the Image Min Max, it's used <br>
//!	      to check if the SubPixel coordinate FX,FY is outside of <br>
//!	      image. <br>
//!          Return True  if Interpolation Succes. <br>
//!	    Return False if the SubPixel is out from Image. <br>
virtual /*instead*/  System::Boolean Interpolate(OCNaroWrappers::OCImage_DColorImage^ aImage, Standard_Real FX, Standard_Real FY, Standard_Integer LowerX, Standard_Integer LowerY, Standard_Integer UpperX, Standard_Integer UpperY, OCNaroWrappers::OCAspect_ColorPixel^ RetPixel) override;

//! Compute SubPixel's value on non integer Image coordinate for <br>
//!	      DIndexedImage and IndexPixel. <br>
//!	    LowerX,LowerY,UpperX,UpperY is the Image Min Max, it's used <br>
//!	      to check if the SubPixel coordinate X,Y is outside of <br>
//!	      image. <br>
//!          Return True  if Interpolation Succes. <br>
//!	    Return False if the SubPixel is out from Image. <br>
virtual /*instead*/  System::Boolean Interpolate(OCNaroWrappers::OCImage_DIndexedImage^ aImage, Standard_Real FX, Standard_Real FY, Standard_Integer LowerX, Standard_Integer LowerY, Standard_Integer UpperX, Standard_Integer UpperY, OCNaroWrappers::OCAspect_IndexPixel^ RetPixel) override;

~OCImage_BalancedPixelInterpolation()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
