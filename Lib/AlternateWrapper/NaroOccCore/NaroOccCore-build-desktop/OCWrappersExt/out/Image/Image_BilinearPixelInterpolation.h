// File generated by CPPExt (MPV)
//
#ifndef _Image_BilinearPixelInterpolation_OCWrappers_HeaderFile
#define _Image_BilinearPixelInterpolation_OCWrappers_HeaderFile

// include native header
#include <Image_BilinearPixelInterpolation.hxx>
#include "../Converter.h"

#include "Image_PixelInterpolation.h"

#include "Image_PixelInterpolation.h"


namespace OCNaroWrappers
{

ref class OCImage_Image;
ref class OCAspect_Pixel;
ref class OCImage_DColorImage;
ref class OCAspect_ColorPixel;
ref class OCImage_DIndexedImage;
ref class OCAspect_IndexPixel;


//! The class BilinearPixelInterpolation is used to compute a <br>
//!            SubPixel value on non integer Image coordinate <br>
//!          BilinearPixelInterpolation redefined a new method to compute <br>
//!	      a SubPixel value . <br>
//!	    The value is the bilinear interpolation of the <br>
//!	      four nearest Image Pixel. <br>
//!	    If V1, V2, V3, V4 is the value  and (X1,Y1) , (X2,Y2), <br>
//!              (X3,Y3), (X4,Y4) the coordinates of the four nearest <br>
//!		Image Pixel then first we solve : <br>
//!		V1 = a*X1 + b*Y1 + c*X1*Y1 + d <br>
//!		V2 = a*X2 + b*Y2 + c*X2*Y2 + d <br>
//!		V3 = a*X3 + b*Y3 + c*X3*Y3 + d <br>
//!		V1 = a*X4 + b*Y4 + c*X4*Y4 + d <br>
public ref class OCImage_BilinearPixelInterpolation  : public OCImage_PixelInterpolation {

protected:
  // dummy constructor;
  OCImage_BilinearPixelInterpolation(OCDummy^) : OCImage_PixelInterpolation((OCDummy^)nullptr) {};

public:

// constructor from native
OCImage_BilinearPixelInterpolation(Image_BilinearPixelInterpolation* nativeHandle);

// Methods PUBLIC

//! Create a BilinearPixelInterpolation  object. <br>
OCImage_BilinearPixelInterpolation();

//! Redefined the method to compute SubPixel's value <br>
//!	      on non integer Image coordinate. <br>
//!	    LowerX,LowerY,UpperX,UpperY is the Image Min Max, it's used <br>
//!	      to check if the SubPixel coordinate FX,FY is outside of <br>
//!	      image. <br>
//!          Return True  if Interpolation Succes. <br>
//!	    Return False if the SubPixel is out from Image. <br>
virtual /*instead*/  System::Boolean Interpolate(OCNaroWrappers::OCImage_Image^ aImage, Standard_Real FX, Standard_Real FY, Standard_Integer LowerX, Standard_Integer LowerY, Standard_Integer UpperX, Standard_Integer UpperY, OCNaroWrappers::OCAspect_Pixel^ RetPixel) override;

//! Compute SubPixel's value on non integer Image coordinate for <br>
//!	      DColorImage and ColorPixel. <br>
//!	    LowerX,LowerY,UpperX,UpperY is the Image Min Max, it's used <br>
//!	      to check if the SubPixel coordinate FX,FY is outside of <br>
//!	      image. <br>
//!          Return True  if Interpolation Succes. <br>
//!	    Return False if the SubPixel is out from Image. <br>
virtual /*instead*/  System::Boolean Interpolate(OCNaroWrappers::OCImage_DColorImage^ aImage, Standard_Real FX, Standard_Real FY, Standard_Integer LowerX, Standard_Integer LowerY, Standard_Integer UpperX, Standard_Integer UpperY, OCNaroWrappers::OCAspect_ColorPixel^ RetPixel) override;

//! Compute SubPixel's value on non integer Image coordinate for <br>
//!	      DIndexedImage and IndexPixel. <br>
//!	    LowerX,LowerY,UpperX,UpperY is the Image Min Max, it's used <br>
//!	      to check if the SubPixel coordinate X,Y is outside of <br>
//!	      image. <br>
//!          Return True  if Interpolation Succes. <br>
//!	    Return False if the SubPixel is out from Image. <br>
virtual /*instead*/  System::Boolean Interpolate(OCNaroWrappers::OCImage_DIndexedImage^ aImage, Standard_Real FX, Standard_Real FY, Standard_Integer LowerX, Standard_Integer LowerY, Standard_Integer UpperX, Standard_Integer UpperY, OCNaroWrappers::OCAspect_IndexPixel^ RetPixel) override;

~OCImage_BilinearPixelInterpolation()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
