// File generated by CPPExt (CPP file)
//

#include "Image_DIndexedImage.h"
#include "../Converter.h"
#include "../Aspect/Aspect_IndexPixel.h"
#include "Image_PixelRowOfDIndexedImage.h"
#include "Image_PixelFieldOfDIndexedImage.h"
#include "Image_PixelInterpolation.h"
#include "../gp/gp_GTrsf2d.h"
#include "../gp/gp_Trsf.h"
#include "Image_Image.h"
#include "../Aspect/Aspect_Pixel.h"


using namespace OCNaroWrappers;

OCImage_DIndexedImage::OCImage_DIndexedImage(Handle(Image_DIndexedImage)* nativeHandle) : OCImage_Image((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Image_DIndexedImage(*nativeHandle);
}

OCImage_DIndexedImage::OCImage_DIndexedImage(Standard_Integer x, Standard_Integer y, Standard_Integer dx, Standard_Integer dy, OCNaroWrappers::OCAspect_IndexPixel^ BackPixel) : OCImage_Image((OCDummy^)nullptr)

{}

 void OCImage_DIndexedImage::SetBackgroundPixel(OCNaroWrappers::OCAspect_IndexPixel^ aPixel)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->SetBackgroundPixel(*((Aspect_IndexPixel*)aPixel->Handle));
}

OCAspect_IndexPixel^ OCImage_DIndexedImage::BackgroundPixel()
{
  Aspect_IndexPixel* tmp = new Aspect_IndexPixel();
  *tmp = (*((Handle_Image_DIndexedImage*)nativeHandle))->BackgroundPixel();
  return gcnew OCAspect_IndexPixel(tmp);
}

OCAspect_IndexPixel^ OCImage_DIndexedImage::Pixel(Standard_Integer X, Standard_Integer Y)
{
  Aspect_IndexPixel* tmp = new Aspect_IndexPixel();
  *tmp = (*((Handle_Image_DIndexedImage*)nativeHandle))->Pixel(X, Y);
  return gcnew OCAspect_IndexPixel(tmp);
}

 void OCImage_DIndexedImage::SetPixel(Standard_Integer X, Standard_Integer Y, OCNaroWrappers::OCAspect_IndexPixel^ aPixel)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->SetPixel(X, Y, *((Aspect_IndexPixel*)aPixel->Handle));
}

OCAspect_IndexPixel^ OCImage_DIndexedImage::MutPixel(Standard_Integer X, Standard_Integer Y)
{
  Aspect_IndexPixel* tmp = new Aspect_IndexPixel();
  *tmp = (*((Handle_Image_DIndexedImage*)nativeHandle))->MutPixel(X, Y);
  return gcnew OCAspect_IndexPixel(tmp);
}

 void OCImage_DIndexedImage::SetRow(Standard_Integer X, Standard_Integer Y, OCNaroWrappers::OCImage_PixelRowOfDIndexedImage^ aRow)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->SetRow(X, Y, *((Image_PixelRowOfDIndexedImage*)aRow->Handle));
}

 void OCImage_DIndexedImage::Row(Standard_Integer X, Standard_Integer Y, OCNaroWrappers::OCImage_PixelRowOfDIndexedImage^ aRow)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Row(X, Y, *((Image_PixelRowOfDIndexedImage*)aRow->Handle));
}

 void OCImage_DIndexedImage::SwapRow(Standard_Integer I, Standard_Integer J)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->SwapRow(I, J);
}

 void OCImage_DIndexedImage::SwapCol(Standard_Integer I, Standard_Integer J)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->SwapCol(I, J);
}

 void OCImage_DIndexedImage::Zoom(OCNaroWrappers::OCImage_PixelInterpolation^ anInterpolation, Standard_Real aCoefX, Standard_Real aCoefY)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Zoom(*((Image_PixelInterpolation*)anInterpolation->Handle), aCoefX, aCoefY);
}

 void OCImage_DIndexedImage::Rotate(OCNaroWrappers::OCImage_PixelInterpolation^ anInterpolation, Quantity_PlaneAngle aAngle)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Rotate(*((Image_PixelInterpolation*)anInterpolation->Handle), aAngle);
}

 void OCImage_DIndexedImage::Translate(OCNaroWrappers::OCImage_PixelInterpolation^ anInterpolation, Standard_Real DX, Standard_Real DY)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Translate(*((Image_PixelInterpolation*)anInterpolation->Handle), DX, DY);
}

 void OCImage_DIndexedImage::Affine(OCNaroWrappers::OCImage_PixelInterpolation^ anInterpolation, OCNaroWrappers::OCgp_GTrsf2d^ Trsf)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Affine(*((Image_PixelInterpolation*)anInterpolation->Handle), *((gp_GTrsf2d*)Trsf->Handle));
}

 void OCImage_DIndexedImage::Affine(OCNaroWrappers::OCImage_PixelInterpolation^ anInterpolation, OCNaroWrappers::OCgp_Trsf^ Trsf)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Affine(*((Image_PixelInterpolation*)anInterpolation->Handle), *((gp_Trsf*)Trsf->Handle));
}

 void OCImage_DIndexedImage::InternalDup(OCNaroWrappers::OCImage_Image^ anImage)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->InternalDup(*((Handle_Image_Image*)anImage->Handle));
}

 void OCImage_DIndexedImage::SetOrigin(Standard_Integer x, Standard_Integer y)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->SetOrigin(x, y);
}

 Standard_Integer OCImage_DIndexedImage::LowerX()
{
  return (*((Handle_Image_DIndexedImage*)nativeHandle))->LowerX();
}

 Standard_Integer OCImage_DIndexedImage::UpperX()
{
  return (*((Handle_Image_DIndexedImage*)nativeHandle))->UpperX();
}

 Standard_Integer OCImage_DIndexedImage::Width()
{
  return (*((Handle_Image_DIndexedImage*)nativeHandle))->Width();
}

 Standard_Integer OCImage_DIndexedImage::LowerY()
{
  return (*((Handle_Image_DIndexedImage*)nativeHandle))->LowerY();
}

 Standard_Integer OCImage_DIndexedImage::UpperY()
{
  return (*((Handle_Image_DIndexedImage*)nativeHandle))->UpperY();
}

 Standard_Integer OCImage_DIndexedImage::Height()
{
  return (*((Handle_Image_DIndexedImage*)nativeHandle))->Height();
}

 void OCImage_DIndexedImage::Resize(Standard_Real XOffset, Standard_Real XScale, Standard_Real YOffset, Standard_Real YScale)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Resize(XOffset, XScale, YOffset, YScale);
}

 System::Boolean OCImage_DIndexedImage::isSamePixel(Standard_Integer X, Standard_Integer Y, OCNaroWrappers::OCImage_Image^ anotherImage, Standard_Integer anotherX, Standard_Integer anotherY)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Image_DIndexedImage*)nativeHandle))->isSamePixel(X, Y, *((Handle_Image_Image*)anotherImage->Handle), anotherX, anotherY));
}

 void OCImage_DIndexedImage::Pixel(Standard_Integer X, Standard_Integer Y, OCNaroWrappers::OCAspect_Pixel^ aPixel)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Pixel(X, Y, *((Aspect_Pixel*)aPixel->Handle));
}

 void OCImage_DIndexedImage::SetPixel(Standard_Integer X, Standard_Integer Y, OCNaroWrappers::OCAspect_Pixel^ aPixel)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->SetPixel(X, Y, *((Aspect_Pixel*)aPixel->Handle));
}

 void OCImage_DIndexedImage::Pixel(Standard_Integer X, Standard_Integer Y, Image_PixelAddress& aPixel)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Pixel(X, Y, aPixel);
}

 void OCImage_DIndexedImage::SetPixel(Standard_Integer X, Standard_Integer Y, Image_PixelAddress aPixel)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->SetPixel(X, Y, aPixel);
}

 void OCImage_DIndexedImage::Transpose(OCImage_FlipType aType)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Transpose((Image_FlipType)aType);
}

 void OCImage_DIndexedImage::Clip(Standard_Integer X, Standard_Integer Y, Standard_Integer Width, Standard_Integer Height)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Clip(X, Y, Width, Height);
}

 void OCImage_DIndexedImage::Shift(Standard_Integer XShifth, Standard_Integer YShift)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Shift(XShifth, YShift);
}

 void OCImage_DIndexedImage::Fill(OCNaroWrappers::OCImage_Image^ SrcImage)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Fill(*((Handle_Image_Image*)SrcImage->Handle));
}

 void OCImage_DIndexedImage::Fill(OCNaroWrappers::OCImage_Image^ SrcImage, Standard_Integer SrcX, Standard_Integer SrcY, Standard_Integer SrcWidth, Standard_Integer SrcHeight, Standard_Integer X, Standard_Integer Y)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Fill(*((Handle_Image_Image*)SrcImage->Handle), SrcX, SrcY, SrcWidth, SrcHeight, X, Y);
}

 void OCImage_DIndexedImage::FillRect(OCNaroWrappers::OCAspect_IndexPixel^ aPixel, Standard_Integer X, Standard_Integer Y, Standard_Integer Width, Standard_Integer Height)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->FillRect(*((Aspect_IndexPixel*)aPixel->Handle), X, Y, Width, Height);
}

 void OCImage_DIndexedImage::DrawRect(OCNaroWrappers::OCAspect_IndexPixel^ aPixel, Standard_Integer X, Standard_Integer Y, Standard_Integer Width, Standard_Integer Height)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->DrawRect(*((Aspect_IndexPixel*)aPixel->Handle), X, Y, Width, Height);
}

 void OCImage_DIndexedImage::DrawLine(OCNaroWrappers::OCAspect_IndexPixel^ aPixel, Standard_Integer X1, Standard_Integer Y1, Standard_Integer X2, Standard_Integer Y2)
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->DrawLine(*((Aspect_IndexPixel*)aPixel->Handle), X1, Y1, X2, Y2);
}

 void OCImage_DIndexedImage::Clear()
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Clear();
}

 void OCImage_DIndexedImage::Dump()
{
  (*((Handle_Image_DIndexedImage*)nativeHandle))->Dump();
}


