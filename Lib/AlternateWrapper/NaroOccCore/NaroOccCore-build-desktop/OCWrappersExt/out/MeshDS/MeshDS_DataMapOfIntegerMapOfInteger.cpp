// File generated by CPPExt (CPP file)
//

#include "MeshDS_DataMapOfIntegerMapOfInteger.h"
#include "../Converter.h"
#include "../TColStd/TColStd_MapOfInteger.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MeshDS_DataMapNodeOfDataMapOfIntegerMapOfInteger.h"
#include "MeshDS_DataMapIteratorOfDataMapOfIntegerMapOfInteger.h"


using namespace OCNaroWrappers;

OCMeshDS_DataMapOfIntegerMapOfInteger::OCMeshDS_DataMapOfIntegerMapOfInteger(MeshDS_DataMapOfIntegerMapOfInteger* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMeshDS_DataMapOfIntegerMapOfInteger::OCMeshDS_DataMapOfIntegerMapOfInteger(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MeshDS_DataMapOfIntegerMapOfInteger(NbBuckets);
}

OCMeshDS_DataMapOfIntegerMapOfInteger^ OCMeshDS_DataMapOfIntegerMapOfInteger::Assign(OCNaroWrappers::OCMeshDS_DataMapOfIntegerMapOfInteger^ Other)
{
  MeshDS_DataMapOfIntegerMapOfInteger* tmp = new MeshDS_DataMapOfIntegerMapOfInteger(0);
  *tmp = ((MeshDS_DataMapOfIntegerMapOfInteger*)nativeHandle)->Assign(*((MeshDS_DataMapOfIntegerMapOfInteger*)Other->Handle));
  return gcnew OCMeshDS_DataMapOfIntegerMapOfInteger(tmp);
}

 void OCMeshDS_DataMapOfIntegerMapOfInteger::ReSize(Standard_Integer NbBuckets)
{
  ((MeshDS_DataMapOfIntegerMapOfInteger*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMeshDS_DataMapOfIntegerMapOfInteger::Bind(Standard_Integer K, OCNaroWrappers::OCTColStd_MapOfInteger^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MeshDS_DataMapOfIntegerMapOfInteger*)nativeHandle)->Bind(K, *((TColStd_MapOfInteger*)I->Handle)));
}

 System::Boolean OCMeshDS_DataMapOfIntegerMapOfInteger::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshDS_DataMapOfIntegerMapOfInteger*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMeshDS_DataMapOfIntegerMapOfInteger::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshDS_DataMapOfIntegerMapOfInteger*)nativeHandle)->UnBind(K));
}

OCTColStd_MapOfInteger^ OCMeshDS_DataMapOfIntegerMapOfInteger::Find(Standard_Integer K)
{
  TColStd_MapOfInteger* tmp = new TColStd_MapOfInteger(0);
  *tmp = ((MeshDS_DataMapOfIntegerMapOfInteger*)nativeHandle)->Find(K);
  return gcnew OCTColStd_MapOfInteger(tmp);
}

OCTColStd_MapOfInteger^ OCMeshDS_DataMapOfIntegerMapOfInteger::ChangeFind(Standard_Integer K)
{
  TColStd_MapOfInteger* tmp = new TColStd_MapOfInteger(0);
  *tmp = ((MeshDS_DataMapOfIntegerMapOfInteger*)nativeHandle)->ChangeFind(K);
  return gcnew OCTColStd_MapOfInteger(tmp);
}


