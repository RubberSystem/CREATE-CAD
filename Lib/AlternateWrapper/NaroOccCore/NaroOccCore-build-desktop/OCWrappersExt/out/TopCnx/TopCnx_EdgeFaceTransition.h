// File generated by CPPExt (MPV)
//
#ifndef _TopCnx_EdgeFaceTransition_OCWrappers_HeaderFile
#define _TopCnx_EdgeFaceTransition_OCWrappers_HeaderFile

// include native header
#include <TopCnx_EdgeFaceTransition.hxx>
#include "../Converter.h"


#include "../TopTrans/TopTrans_CurveTransition.h"
#include "../TopAbs/TopAbs_Orientation.h"


namespace OCNaroWrappers
{

ref class OCgp_Dir;


//! TheEdgeFaceTransition is an algorithm to   compute <br>
//!          the  cumulated  transition for interferences on an <br>
//!          edge. <br>
public ref class OCTopCnx_EdgeFaceTransition  {

protected:
  TopCnx_EdgeFaceTransition* nativeHandle;
  OCTopCnx_EdgeFaceTransition(OCDummy^) {};

public:
  property TopCnx_EdgeFaceTransition* Handle
  {
    TopCnx_EdgeFaceTransition* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopCnx_EdgeFaceTransition(TopCnx_EdgeFaceTransition* nativeHandle);

// Methods PUBLIC

//! Creates an empty algorithm. <br>
OCTopCnx_EdgeFaceTransition();

//! Initialize  the     algorithm    with the    local <br>
//!          description of the edge. <br>
 /*instead*/  void Reset(OCNaroWrappers::OCgp_Dir^ Tgt, OCNaroWrappers::OCgp_Dir^ Norm, Standard_Real Curv) ;

//! Initialize the algorithm with a linear Edge. <br>
 /*instead*/  void Reset(OCNaroWrappers::OCgp_Dir^ Tgt) ;

//! Add a curve  element to the  boundary.  Or  is the <br>
//!          orientation of   the interference on  the boundary <br>
//!          curve. Tr is  the transition  of the interference. <br>
//!          BTr     is   the    boundary  transition    of the <br>
//!          interference. <br>
 /*instead*/  void AddInterference(Standard_Real Tole, OCNaroWrappers::OCgp_Dir^ Tang, OCNaroWrappers::OCgp_Dir^ Norm, Standard_Real Curv, OCTopAbs_Orientation Or, OCTopAbs_Orientation Tr, OCTopAbs_Orientation BTr) ;

//! Returns the current cumulated transition. <br>
 /*instead*/  OCTopAbs_Orientation Transition() ;

//! Returns the current cumulated BoundaryTransition. <br>
 /*instead*/  OCTopAbs_Orientation BoundaryTransition() ;

~OCTopCnx_EdgeFaceTransition()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
