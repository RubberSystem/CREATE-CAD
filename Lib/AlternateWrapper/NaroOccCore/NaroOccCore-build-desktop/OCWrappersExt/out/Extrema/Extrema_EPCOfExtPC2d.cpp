// File generated by CPPExt (CPP file)
//

#include "Extrema_EPCOfExtPC2d.h"
#include "../Converter.h"
#include "../Adaptor2d/Adaptor2d_Curve2d.h"
#include "Extrema_Curve2dTool.h"
#include "Extrema_POnCurv2d.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Vec2d.h"
#include "Extrema_PCFOfEPCOfExtPC2d.h"
#include "Extrema_SeqPCOfPCFOfEPCOfExtPC2d.h"


using namespace OCNaroWrappers;

OCExtrema_EPCOfExtPC2d::OCExtrema_EPCOfExtPC2d(Extrema_EPCOfExtPC2d* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCExtrema_EPCOfExtPC2d::OCExtrema_EPCOfExtPC2d() 
{
  nativeHandle = new Extrema_EPCOfExtPC2d();
}

OCExtrema_EPCOfExtPC2d::OCExtrema_EPCOfExtPC2d(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Integer NbU, Standard_Real TolU, Standard_Real TolF) 
{
  nativeHandle = new Extrema_EPCOfExtPC2d(*((gp_Pnt2d*)P->Handle), *((Adaptor2d_Curve2d*)C->Handle), NbU, TolU, TolF);
}

OCExtrema_EPCOfExtPC2d::OCExtrema_EPCOfExtPC2d(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Integer NbU, Standard_Real Umin, Standard_Real Usup, Standard_Real TolU, Standard_Real TolF) 
{
  nativeHandle = new Extrema_EPCOfExtPC2d(*((gp_Pnt2d*)P->Handle), *((Adaptor2d_Curve2d*)C->Handle), NbU, Umin, Usup, TolU, TolF);
}

 void OCExtrema_EPCOfExtPC2d::Initialize(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Integer NbU, Standard_Real TolU, Standard_Real TolF)
{
  ((Extrema_EPCOfExtPC2d*)nativeHandle)->Initialize(*((Adaptor2d_Curve2d*)C->Handle), NbU, TolU, TolF);
}

 void OCExtrema_EPCOfExtPC2d::Initialize(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Integer NbU, Standard_Real Umin, Standard_Real Usup, Standard_Real TolU, Standard_Real TolF)
{
  ((Extrema_EPCOfExtPC2d*)nativeHandle)->Initialize(*((Adaptor2d_Curve2d*)C->Handle), NbU, Umin, Usup, TolU, TolF);
}

 void OCExtrema_EPCOfExtPC2d::Initialize(OCNaroWrappers::OCAdaptor2d_Curve2d^ C)
{
  ((Extrema_EPCOfExtPC2d*)nativeHandle)->Initialize(*((Adaptor2d_Curve2d*)C->Handle));
}

 void OCExtrema_EPCOfExtPC2d::Initialize(Standard_Integer NbU, Standard_Real Umin, Standard_Real Usup, Standard_Real TolU, Standard_Real TolF)
{
  ((Extrema_EPCOfExtPC2d*)nativeHandle)->Initialize(NbU, Umin, Usup, TolU, TolF);
}

 void OCExtrema_EPCOfExtPC2d::Perform(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  ((Extrema_EPCOfExtPC2d*)nativeHandle)->Perform(*((gp_Pnt2d*)P->Handle));
}

 System::Boolean OCExtrema_EPCOfExtPC2d::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_EPCOfExtPC2d*)nativeHandle)->IsDone());
}

 Standard_Integer OCExtrema_EPCOfExtPC2d::NbExt()
{
  return ((Extrema_EPCOfExtPC2d*)nativeHandle)->NbExt();
}

 Standard_Real OCExtrema_EPCOfExtPC2d::SquareDistance(Standard_Integer N)
{
  return ((Extrema_EPCOfExtPC2d*)nativeHandle)->SquareDistance(N);
}

 System::Boolean OCExtrema_EPCOfExtPC2d::IsMin(Standard_Integer N)
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_EPCOfExtPC2d*)nativeHandle)->IsMin(N));
}

OCExtrema_POnCurv2d^ OCExtrema_EPCOfExtPC2d::Point(Standard_Integer N)
{
  Extrema_POnCurv2d* tmp = new Extrema_POnCurv2d();
  *tmp = ((Extrema_EPCOfExtPC2d*)nativeHandle)->Point(N);
  return gcnew OCExtrema_POnCurv2d(tmp);
}


