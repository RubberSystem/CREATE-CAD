// File generated by CPPExt (CPP file)
//

#include "Extrema_LocECCOfLocateExtCC.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_Curve.h"
#include "Extrema_CurveTool.h"
#include "Extrema_POnCurv.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Vec.h"
#include "Extrema_CCLocFOfLocECCOfLocateExtCC.h"
#include "Extrema_SeqPOnCOfCCLocFOfLocECCOfLocateExtCC.h"


using namespace OCNaroWrappers;

OCExtrema_LocECCOfLocateExtCC::OCExtrema_LocECCOfLocateExtCC(Extrema_LocECCOfLocateExtCC* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCExtrema_LocECCOfLocateExtCC::OCExtrema_LocECCOfLocateExtCC(OCNaroWrappers::OCAdaptor3d_Curve^ C1, OCNaroWrappers::OCAdaptor3d_Curve^ C2, Standard_Real U0, Standard_Real V0, Standard_Real TolU, Standard_Real TolV) 
{
  nativeHandle = new Extrema_LocECCOfLocateExtCC(*((Adaptor3d_Curve*)C1->Handle), *((Adaptor3d_Curve*)C2->Handle), U0, V0, TolU, TolV);
}

 System::Boolean OCExtrema_LocECCOfLocateExtCC::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_LocECCOfLocateExtCC*)nativeHandle)->IsDone());
}

 Standard_Real OCExtrema_LocECCOfLocateExtCC::SquareDistance()
{
  return ((Extrema_LocECCOfLocateExtCC*)nativeHandle)->SquareDistance();
}

 void OCExtrema_LocECCOfLocateExtCC::Point(OCNaroWrappers::OCExtrema_POnCurv^ P1, OCNaroWrappers::OCExtrema_POnCurv^ P2)
{
  ((Extrema_LocECCOfLocateExtCC*)nativeHandle)->Point(*((Extrema_POnCurv*)P1->Handle), *((Extrema_POnCurv*)P2->Handle));
}


