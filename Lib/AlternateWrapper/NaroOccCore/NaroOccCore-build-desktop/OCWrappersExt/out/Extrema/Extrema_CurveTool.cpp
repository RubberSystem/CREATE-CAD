// File generated by CPPExt (CPP file)
//

#include "Extrema_CurveTool.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_Curve.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Vec.h"
#include "../Geom/Geom_BezierCurve.h"
#include "../Geom/Geom_BSplineCurve.h"


using namespace OCNaroWrappers;

OCExtrema_CurveTool::OCExtrema_CurveTool(Extrema_CurveTool* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 Standard_Real OCExtrema_CurveTool::FirstParameter(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return Extrema_CurveTool::FirstParameter(*((Adaptor3d_Curve*)C->Handle));
}

 Standard_Real OCExtrema_CurveTool::LastParameter(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return Extrema_CurveTool::LastParameter(*((Adaptor3d_Curve*)C->Handle));
}

 OCGeomAbs_Shape OCExtrema_CurveTool::Continuity(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return (OCGeomAbs_Shape)(Extrema_CurveTool::Continuity(*((Adaptor3d_Curve*)C->Handle)));
}

 Standard_Integer OCExtrema_CurveTool::NbIntervals(OCNaroWrappers::OCAdaptor3d_Curve^ C, OCGeomAbs_Shape S)
{
  return Extrema_CurveTool::NbIntervals(*((Adaptor3d_Curve*)C->Handle), (GeomAbs_Shape)S);
}

 void OCExtrema_CurveTool::Intervals(OCNaroWrappers::OCAdaptor3d_Curve^ C, OCNaroWrappers::OCTColStd_Array1OfReal^ T, OCGeomAbs_Shape S)
{
  Extrema_CurveTool::Intervals(*((Adaptor3d_Curve*)C->Handle), *((TColStd_Array1OfReal*)T->Handle), (GeomAbs_Shape)S);
}

 System::Boolean OCExtrema_CurveTool::IsPeriodic(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return OCConverter::StandardBooleanToBoolean(Extrema_CurveTool::IsPeriodic(*((Adaptor3d_Curve*)C->Handle)));
}

 Standard_Real OCExtrema_CurveTool::Period(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return Extrema_CurveTool::Period(*((Adaptor3d_Curve*)C->Handle));
}

 Standard_Real OCExtrema_CurveTool::Resolution(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real R3d)
{
  return Extrema_CurveTool::Resolution(*((Adaptor3d_Curve*)C->Handle), R3d);
}

 OCGeomAbs_CurveType OCExtrema_CurveTool::GetType(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return (OCGeomAbs_CurveType)(Extrema_CurveTool::GetType(*((Adaptor3d_Curve*)C->Handle)));
}

OCgp_Pnt^ OCExtrema_CurveTool::Value(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = Extrema_CurveTool::Value(*((Adaptor3d_Curve*)C->Handle), U);
  return gcnew OCgp_Pnt(tmp);
}

 void OCExtrema_CurveTool::D1(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V)
{
  Extrema_CurveTool::D1(*((Adaptor3d_Curve*)C->Handle), U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V->Handle));
}

 void OCExtrema_CurveTool::D2(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1, OCNaroWrappers::OCgp_Vec^ V2)
{
  Extrema_CurveTool::D2(*((Adaptor3d_Curve*)C->Handle), U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V1->Handle), *((gp_Vec*)V2->Handle));
}

OCgp_Lin^ OCExtrema_CurveTool::Line(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  gp_Lin* tmp = new gp_Lin();
  *tmp = Extrema_CurveTool::Line(*((Adaptor3d_Curve*)C->Handle));
  return gcnew OCgp_Lin(tmp);
}

OCgp_Circ^ OCExtrema_CurveTool::Circle(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  gp_Circ* tmp = new gp_Circ();
  *tmp = Extrema_CurveTool::Circle(*((Adaptor3d_Curve*)C->Handle));
  return gcnew OCgp_Circ(tmp);
}

OCgp_Elips^ OCExtrema_CurveTool::Ellipse(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  gp_Elips* tmp = new gp_Elips();
  *tmp = Extrema_CurveTool::Ellipse(*((Adaptor3d_Curve*)C->Handle));
  return gcnew OCgp_Elips(tmp);
}

OCgp_Hypr^ OCExtrema_CurveTool::Hyperbola(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  gp_Hypr* tmp = new gp_Hypr();
  *tmp = Extrema_CurveTool::Hyperbola(*((Adaptor3d_Curve*)C->Handle));
  return gcnew OCgp_Hypr(tmp);
}

OCgp_Parab^ OCExtrema_CurveTool::Parabola(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  gp_Parab* tmp = new gp_Parab();
  *tmp = Extrema_CurveTool::Parabola(*((Adaptor3d_Curve*)C->Handle));
  return gcnew OCgp_Parab(tmp);
}

 Standard_Integer OCExtrema_CurveTool::Degree(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return Extrema_CurveTool::Degree(*((Adaptor3d_Curve*)C->Handle));
}

 System::Boolean OCExtrema_CurveTool::IsRational(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return OCConverter::StandardBooleanToBoolean(Extrema_CurveTool::IsRational(*((Adaptor3d_Curve*)C->Handle)));
}

 Standard_Integer OCExtrema_CurveTool::NbPoles(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return Extrema_CurveTool::NbPoles(*((Adaptor3d_Curve*)C->Handle));
}

 Standard_Integer OCExtrema_CurveTool::NbKnots(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return Extrema_CurveTool::NbKnots(*((Adaptor3d_Curve*)C->Handle));
}

OCGeom_BezierCurve^ OCExtrema_CurveTool::Bezier(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  Handle(Geom_BezierCurve) tmp = Extrema_CurveTool::Bezier(*((Adaptor3d_Curve*)C->Handle));
  return gcnew OCGeom_BezierCurve(&tmp);
}

OCGeom_BSplineCurve^ OCExtrema_CurveTool::BSpline(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  Handle(Geom_BSplineCurve) tmp = Extrema_CurveTool::BSpline(*((Adaptor3d_Curve*)C->Handle));
  return gcnew OCGeom_BSplineCurve(&tmp);
}


