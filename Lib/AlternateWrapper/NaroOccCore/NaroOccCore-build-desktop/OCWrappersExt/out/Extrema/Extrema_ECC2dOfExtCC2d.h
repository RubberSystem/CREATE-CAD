// File generated by CPPExt (MPV)
//
#ifndef _Extrema_ECC2dOfExtCC2d_OCWrappers_HeaderFile
#define _Extrema_ECC2dOfExtCC2d_OCWrappers_HeaderFile

// include native header
#include <Extrema_ECC2dOfExtCC2d.hxx>
#include "../Converter.h"


#include "Extrema_CCFOfECC2dOfExtCC2d.h"


namespace OCNaroWrappers
{

ref class OCExtrema_CCache2dOfExtCC2d;
ref class OCAdaptor2d_Curve2d;
ref class OCExtrema_Curve2dTool;
ref class OCTColgp_HArray1OfPnt2d;
ref class OCExtrema_POnCurv2d;
ref class OCgp_Pnt2d;
ref class OCgp_Vec2d;
ref class OCExtrema_CCFOfECC2dOfExtCC2d;
ref class OCExtrema_SeqPOnCOfCCFOfECC2dOfExtCC2d;



public ref class OCExtrema_ECC2dOfExtCC2d  {

protected:
  Extrema_ECC2dOfExtCC2d* nativeHandle;
  OCExtrema_ECC2dOfExtCC2d(OCDummy^) {};

public:
  property Extrema_ECC2dOfExtCC2d* Handle
  {
    Extrema_ECC2dOfExtCC2d* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCExtrema_ECC2dOfExtCC2d(Extrema_ECC2dOfExtCC2d* nativeHandle);

// Methods PUBLIC


OCExtrema_ECC2dOfExtCC2d();


OCExtrema_ECC2dOfExtCC2d(OCNaroWrappers::OCAdaptor2d_Curve2d^ C1, OCNaroWrappers::OCAdaptor2d_Curve2d^ C2, Standard_Integer NbU, Standard_Integer NbV, Standard_Real TolU, Standard_Real TolV);


OCExtrema_ECC2dOfExtCC2d(OCNaroWrappers::OCAdaptor2d_Curve2d^ C1, OCNaroWrappers::OCAdaptor2d_Curve2d^ C2, Standard_Real Uinf, Standard_Real Usup, Standard_Real Vinf, Standard_Real Vsup, Standard_Integer NbU, Standard_Integer NbV, Standard_Real TolU, Standard_Real TolV);


 /*instead*/  void SetCurveCache(Standard_Integer theRank, OCNaroWrappers::OCExtrema_CCache2dOfExtCC2d^ theCache) ;


 /*instead*/  void SetTolerance(Standard_Real Tol) ;


 /*instead*/  void Perform() ;


 /*instead*/  System::Boolean IsDone() ;


 /*instead*/  Standard_Integer NbExt() ;


 /*instead*/  Standard_Real SquareDistance(Standard_Integer N) ;


 /*instead*/  void Points(Standard_Integer N, OCNaroWrappers::OCExtrema_POnCurv2d^ P1, OCNaroWrappers::OCExtrema_POnCurv2d^ P2) ;

~OCExtrema_ECC2dOfExtCC2d()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
