// File generated by CPPExt (MPV)
//
#ifndef _Extrema_GenLocateExtCS_OCWrappers_HeaderFile
#define _Extrema_GenLocateExtCS_OCWrappers_HeaderFile

// include native header
#include <Extrema_GenLocateExtCS.hxx>
#include "../Converter.h"


#include "Extrema_POnCurv.h"
#include "Extrema_POnSurf.h"


namespace OCNaroWrappers
{

ref class OCAdaptor3d_Curve;
ref class OCAdaptor3d_Surface;
ref class OCExtrema_POnCurv;
ref class OCExtrema_POnSurf;


//! With two close points it calculates the distance <br>
//!          between two surfaces. <br>
//!          This distance can be a minimum or a maximum. <br>
public ref class OCExtrema_GenLocateExtCS  {

protected:
  Extrema_GenLocateExtCS* nativeHandle;
  OCExtrema_GenLocateExtCS(OCDummy^) {};

public:
  property Extrema_GenLocateExtCS* Handle
  {
    Extrema_GenLocateExtCS* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCExtrema_GenLocateExtCS(Extrema_GenLocateExtCS* nativeHandle);

// Methods PUBLIC


OCExtrema_GenLocateExtCS();

//! Calculates the distance with two close points. <br>
//!          The close points are defined by the parameter values <br>
//!          T for C and (U,V) for S. <br>
//!          The function F(t,u,v)=distance(C(t),S(u,v)) <br>
//!          has an extremun when gradient(F)=0. The algorithm searchs <br>
//!          a zero near the close points. <br>
OCExtrema_GenLocateExtCS(OCNaroWrappers::OCAdaptor3d_Curve^ C, OCNaroWrappers::OCAdaptor3d_Surface^ S, Standard_Real T, Standard_Real U, Standard_Real V, Standard_Real Tol1, Standard_Real Tol2);


 /*instead*/  void Perform(OCNaroWrappers::OCAdaptor3d_Curve^ C, OCNaroWrappers::OCAdaptor3d_Surface^ S, Standard_Real T, Standard_Real U, Standard_Real V, Standard_Real Tol1, Standard_Real Tol2) ;

//! Returns True if the distance is found. <br>
 /*instead*/  System::Boolean IsDone() ;

//! Returns the value of the extremum square distance. <br>
 /*instead*/  Standard_Real SquareDistance() ;

//! Returns the point of the extremum distance on C. <br>
 /*instead*/  OCExtrema_POnCurv^ PointOnCurve() ;

//! Returns the point of the extremum distance on S. <br>
 /*instead*/  OCExtrema_POnSurf^ PointOnSurface() ;

~OCExtrema_GenLocateExtCS()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
