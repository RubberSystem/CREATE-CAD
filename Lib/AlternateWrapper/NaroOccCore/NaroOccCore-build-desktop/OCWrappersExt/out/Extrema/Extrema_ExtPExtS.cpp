// File generated by CPPExt (CPP file)
//

#include "Extrema_ExtPExtS.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_HCurve.h"
#include "../gp/gp_Pnt.h"
#include "../Adaptor3d/Adaptor3d_SurfaceOfLinearExtrusion.h"
#include "Extrema_POnSurf.h"
#include "../gp/gp_Ax2.h"


using namespace OCNaroWrappers;

OCExtrema_ExtPExtS::OCExtrema_ExtPExtS(Extrema_ExtPExtS* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCExtrema_ExtPExtS::OCExtrema_ExtPExtS() 
{
  nativeHandle = new Extrema_ExtPExtS();
}

OCExtrema_ExtPExtS::OCExtrema_ExtPExtS(OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCAdaptor3d_SurfaceOfLinearExtrusion^ S, Standard_Real Umin, Standard_Real Usup, Standard_Real Vmin, Standard_Real Vsup, Standard_Real TolU, Standard_Real TolV) 
{
  nativeHandle = new Extrema_ExtPExtS(*((gp_Pnt*)P->Handle), *((Adaptor3d_SurfaceOfLinearExtrusion*)S->Handle), Umin, Usup, Vmin, Vsup, TolU, TolV);
}

OCExtrema_ExtPExtS::OCExtrema_ExtPExtS(OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCAdaptor3d_SurfaceOfLinearExtrusion^ S, Standard_Real TolU, Standard_Real TolV) 
{
  nativeHandle = new Extrema_ExtPExtS(*((gp_Pnt*)P->Handle), *((Adaptor3d_SurfaceOfLinearExtrusion*)S->Handle), TolU, TolV);
}

 void OCExtrema_ExtPExtS::Initialize(OCNaroWrappers::OCAdaptor3d_SurfaceOfLinearExtrusion^ S, Standard_Real Uinf, Standard_Real Usup, Standard_Real Vinf, Standard_Real Vsup, Standard_Real TolU, Standard_Real TolV)
{
  ((Extrema_ExtPExtS*)nativeHandle)->Initialize(*((Adaptor3d_SurfaceOfLinearExtrusion*)S->Handle), Uinf, Usup, Vinf, Vsup, TolU, TolV);
}

 void OCExtrema_ExtPExtS::Perform(OCNaroWrappers::OCgp_Pnt^ P)
{
  ((Extrema_ExtPExtS*)nativeHandle)->Perform(*((gp_Pnt*)P->Handle));
}

 System::Boolean OCExtrema_ExtPExtS::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_ExtPExtS*)nativeHandle)->IsDone());
}

 Standard_Integer OCExtrema_ExtPExtS::NbExt()
{
  return ((Extrema_ExtPExtS*)nativeHandle)->NbExt();
}

 Standard_Real OCExtrema_ExtPExtS::SquareDistance(Standard_Integer N)
{
  return ((Extrema_ExtPExtS*)nativeHandle)->SquareDistance(N);
}

OCExtrema_POnSurf^ OCExtrema_ExtPExtS::Point(Standard_Integer N)
{
  Extrema_POnSurf* tmp = new Extrema_POnSurf();
  *tmp = ((Extrema_ExtPExtS*)nativeHandle)->Point(N);
  return gcnew OCExtrema_POnSurf(tmp);
}


