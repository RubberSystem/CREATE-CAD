// File generated by CPPExt (MPV)
//
#ifndef _Extrema_ExtPRevS_OCWrappers_HeaderFile
#define _Extrema_ExtPRevS_OCWrappers_HeaderFile

// include native header
#include <Extrema_ExtPRevS.hxx>
#include "../Converter.h"


#include "../gp/gp_Ax2.h"
#include "Extrema_GenExtPS.h"
#include "Extrema_POnSurf.h"


namespace OCNaroWrappers
{

ref class OCgp_Pnt;
ref class OCAdaptor3d_SurfaceOfRevolution;
ref class OCExtrema_POnSurf;


//! It calculates all the extremum (minimum and <br>
//!          maximum) distances between a point and a surface <br>
//!          of revolution. <br>
public ref class OCExtrema_ExtPRevS  {

protected:
  Extrema_ExtPRevS* nativeHandle;
  OCExtrema_ExtPRevS(OCDummy^) {};

public:
  property Extrema_ExtPRevS* Handle
  {
    Extrema_ExtPRevS* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCExtrema_ExtPRevS(Extrema_ExtPRevS* nativeHandle);

// Methods PUBLIC


OCExtrema_ExtPRevS();

//! It calculates all the distances between a point <br>
//!          from gp and a SurfacePtr from Adaptor3d. <br>
OCExtrema_ExtPRevS(OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCAdaptor3d_SurfaceOfRevolution^ S, Standard_Real Umin, Standard_Real Usup, Standard_Real Vmin, Standard_Real Vsup, Standard_Real TolU, Standard_Real TolV);

//! It calculates all the distances between a point <br>
//!          from gp and a SurfacePtr from Adaptor3d. <br>
OCExtrema_ExtPRevS(OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCAdaptor3d_SurfaceOfRevolution^ S, Standard_Real TolU, Standard_Real TolV);


 /*instead*/  void Initialize(OCNaroWrappers::OCAdaptor3d_SurfaceOfRevolution^ S, Standard_Real Umin, Standard_Real Usup, Standard_Real Vmin, Standard_Real Vsup, Standard_Real TolU, Standard_Real TolV) ;


 /*instead*/  void Perform(OCNaroWrappers::OCgp_Pnt^ P) ;

//! Returns True if the distances are found. <br>
 /*instead*/  System::Boolean IsDone() ;

//! Returns the number of extremum distances. <br>
 /*instead*/  Standard_Integer NbExt() ;

//! Returns the value of the Nth resulting square distance. <br>
 /*instead*/  Standard_Real SquareDistance(Standard_Integer N) ;

//! Returns the point of the Nth resulting distance. <br>
 /*instead*/  OCExtrema_POnSurf^ Point(Standard_Integer N) ;

~OCExtrema_ExtPRevS()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
