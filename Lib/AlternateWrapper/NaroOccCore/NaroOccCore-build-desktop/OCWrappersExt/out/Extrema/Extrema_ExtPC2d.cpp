// File generated by CPPExt (CPP file)
//

#include "Extrema_ExtPC2d.h"
#include "../Converter.h"
#include "../Adaptor2d/Adaptor2d_Curve2d.h"
#include "Extrema_Curve2dTool.h"
#include "Extrema_ExtPElC2d.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Vec2d.h"
#include "Extrema_POnCurv2d.h"
#include "Extrema_SequenceOfPOnCurv2d.h"
#include "Extrema_EPCOfExtPC2d.h"
#include "Extrema_PCFOfEPCOfExtPC2d.h"


using namespace OCNaroWrappers;

OCExtrema_ExtPC2d::OCExtrema_ExtPC2d(Extrema_ExtPC2d* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCExtrema_ExtPC2d::OCExtrema_ExtPC2d() 
{
  nativeHandle = new Extrema_ExtPC2d();
}

OCExtrema_ExtPC2d::OCExtrema_ExtPC2d(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Uinf, Standard_Real Usup, Standard_Real TolF) 
{
  nativeHandle = new Extrema_ExtPC2d(*((gp_Pnt2d*)P->Handle), *((Adaptor2d_Curve2d*)C->Handle), Uinf, Usup, TolF);
}

OCExtrema_ExtPC2d::OCExtrema_ExtPC2d(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real TolF) 
{
  nativeHandle = new Extrema_ExtPC2d(*((gp_Pnt2d*)P->Handle), *((Adaptor2d_Curve2d*)C->Handle), TolF);
}

 void OCExtrema_ExtPC2d::Initialize(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Uinf, Standard_Real Usup, Standard_Real TolF)
{
  ((Extrema_ExtPC2d*)nativeHandle)->Initialize(*((Adaptor2d_Curve2d*)C->Handle), Uinf, Usup, TolF);
}

 void OCExtrema_ExtPC2d::Perform(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  ((Extrema_ExtPC2d*)nativeHandle)->Perform(*((gp_Pnt2d*)P->Handle));
}

 System::Boolean OCExtrema_ExtPC2d::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_ExtPC2d*)nativeHandle)->IsDone());
}

 Standard_Real OCExtrema_ExtPC2d::SquareDistance(Standard_Integer N)
{
  return ((Extrema_ExtPC2d*)nativeHandle)->SquareDistance(N);
}

 Standard_Integer OCExtrema_ExtPC2d::NbExt()
{
  return ((Extrema_ExtPC2d*)nativeHandle)->NbExt();
}

 System::Boolean OCExtrema_ExtPC2d::IsMin(Standard_Integer N)
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_ExtPC2d*)nativeHandle)->IsMin(N));
}

OCExtrema_POnCurv2d^ OCExtrema_ExtPC2d::Point(Standard_Integer N)
{
  Extrema_POnCurv2d* tmp = new Extrema_POnCurv2d();
  *tmp = ((Extrema_ExtPC2d*)nativeHandle)->Point(N);
  return gcnew OCExtrema_POnCurv2d(tmp);
}

 void OCExtrema_ExtPC2d::TrimmedSquareDistances(Standard_Real& dist1, Standard_Real& dist2, OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2)
{
  ((Extrema_ExtPC2d*)nativeHandle)->TrimmedSquareDistances(dist1, dist2, *((gp_Pnt2d*)P1->Handle), *((gp_Pnt2d*)P2->Handle));
}


