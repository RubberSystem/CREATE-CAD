// File generated by CPPExt (CPP file)
//

#include "Extrema_ExtCS.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_Curve.h"
#include "../Adaptor3d/Adaptor3d_Surface.h"
#include "Extrema_POnCurv.h"
#include "Extrema_POnSurf.h"


using namespace OCNaroWrappers;

OCExtrema_ExtCS::OCExtrema_ExtCS(Extrema_ExtCS* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCExtrema_ExtCS::OCExtrema_ExtCS() 
{
  nativeHandle = new Extrema_ExtCS();
}

OCExtrema_ExtCS::OCExtrema_ExtCS(OCNaroWrappers::OCAdaptor3d_Curve^ C, OCNaroWrappers::OCAdaptor3d_Surface^ S, Standard_Real TolC, Standard_Real TolS) 
{
  nativeHandle = new Extrema_ExtCS(*((Adaptor3d_Curve*)C->Handle), *((Adaptor3d_Surface*)S->Handle), TolC, TolS);
}

OCExtrema_ExtCS::OCExtrema_ExtCS(OCNaroWrappers::OCAdaptor3d_Curve^ C, OCNaroWrappers::OCAdaptor3d_Surface^ S, Standard_Real UCinf, Standard_Real UCsup, Standard_Real Uinf, Standard_Real Usup, Standard_Real Vinf, Standard_Real Vsup, Standard_Real TolC, Standard_Real TolS) 
{
  nativeHandle = new Extrema_ExtCS(*((Adaptor3d_Curve*)C->Handle), *((Adaptor3d_Surface*)S->Handle), UCinf, UCsup, Uinf, Usup, Vinf, Vsup, TolC, TolS);
}

 void OCExtrema_ExtCS::Initialize(OCNaroWrappers::OCAdaptor3d_Surface^ S, Standard_Real Uinf, Standard_Real Usup, Standard_Real Vinf, Standard_Real Vsup, Standard_Real TolC, Standard_Real TolS)
{
  ((Extrema_ExtCS*)nativeHandle)->Initialize(*((Adaptor3d_Surface*)S->Handle), Uinf, Usup, Vinf, Vsup, TolC, TolS);
}

 void OCExtrema_ExtCS::Perform(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Uinf, Standard_Real Usup)
{
  ((Extrema_ExtCS*)nativeHandle)->Perform(*((Adaptor3d_Curve*)C->Handle), Uinf, Usup);
}

 System::Boolean OCExtrema_ExtCS::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_ExtCS*)nativeHandle)->IsDone());
}

 System::Boolean OCExtrema_ExtCS::IsParallel()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_ExtCS*)nativeHandle)->IsParallel());
}

 Standard_Integer OCExtrema_ExtCS::NbExt()
{
  return ((Extrema_ExtCS*)nativeHandle)->NbExt();
}

 Standard_Real OCExtrema_ExtCS::SquareDistance(Standard_Integer N)
{
  return ((Extrema_ExtCS*)nativeHandle)->SquareDistance(N);
}

 void OCExtrema_ExtCS::Points(Standard_Integer N, OCNaroWrappers::OCExtrema_POnCurv^ P1, OCNaroWrappers::OCExtrema_POnSurf^ P2)
{
  ((Extrema_ExtCS*)nativeHandle)->Points(N, *((Extrema_POnCurv*)P1->Handle), *((Extrema_POnSurf*)P2->Handle));
}


