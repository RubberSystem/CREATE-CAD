// File generated by CPPExt (CPP file)
//

#include "Extrema_LocEPCOfLocateExtPC.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_Curve.h"
#include "Extrema_CurveTool.h"
#include "Extrema_POnCurv.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Vec.h"
#include "Extrema_PCLocFOfLocEPCOfLocateExtPC.h"
#include "Extrema_SeqPCOfPCLocFOfLocEPCOfLocateExtPC.h"


using namespace OCNaroWrappers;

OCExtrema_LocEPCOfLocateExtPC::OCExtrema_LocEPCOfLocateExtPC(Extrema_LocEPCOfLocateExtPC* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCExtrema_LocEPCOfLocateExtPC::OCExtrema_LocEPCOfLocateExtPC() 
{
  nativeHandle = new Extrema_LocEPCOfLocateExtPC();
}

OCExtrema_LocEPCOfLocateExtPC::OCExtrema_LocEPCOfLocateExtPC(OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U0, Standard_Real TolU) 
{
  nativeHandle = new Extrema_LocEPCOfLocateExtPC(*((gp_Pnt*)P->Handle), *((Adaptor3d_Curve*)C->Handle), U0, TolU);
}

OCExtrema_LocEPCOfLocateExtPC::OCExtrema_LocEPCOfLocateExtPC(OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U0, Standard_Real Umin, Standard_Real Usup, Standard_Real TolU) 
{
  nativeHandle = new Extrema_LocEPCOfLocateExtPC(*((gp_Pnt*)P->Handle), *((Adaptor3d_Curve*)C->Handle), U0, Umin, Usup, TolU);
}

 void OCExtrema_LocEPCOfLocateExtPC::Initialize(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Umin, Standard_Real Usup, Standard_Real TolU)
{
  ((Extrema_LocEPCOfLocateExtPC*)nativeHandle)->Initialize(*((Adaptor3d_Curve*)C->Handle), Umin, Usup, TolU);
}

 void OCExtrema_LocEPCOfLocateExtPC::Perform(OCNaroWrappers::OCgp_Pnt^ P, Standard_Real U0)
{
  ((Extrema_LocEPCOfLocateExtPC*)nativeHandle)->Perform(*((gp_Pnt*)P->Handle), U0);
}

 System::Boolean OCExtrema_LocEPCOfLocateExtPC::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_LocEPCOfLocateExtPC*)nativeHandle)->IsDone());
}

 Standard_Real OCExtrema_LocEPCOfLocateExtPC::SquareDistance()
{
  return ((Extrema_LocEPCOfLocateExtPC*)nativeHandle)->SquareDistance();
}

 System::Boolean OCExtrema_LocEPCOfLocateExtPC::IsMin()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_LocEPCOfLocateExtPC*)nativeHandle)->IsMin());
}

OCExtrema_POnCurv^ OCExtrema_LocEPCOfLocateExtPC::Point()
{
  Extrema_POnCurv* tmp = new Extrema_POnCurv();
  *tmp = ((Extrema_LocEPCOfLocateExtPC*)nativeHandle)->Point();
  return gcnew OCExtrema_POnCurv(tmp);
}


