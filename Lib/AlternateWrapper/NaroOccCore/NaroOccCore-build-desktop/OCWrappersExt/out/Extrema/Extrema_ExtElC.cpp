// File generated by CPPExt (CPP file)
//

#include "Extrema_ExtElC.h"
#include "../Converter.h"
#include "../gp/gp_Lin.h"
#include "../gp/gp_Circ.h"
#include "../gp/gp_Elips.h"
#include "../gp/gp_Hypr.h"
#include "../gp/gp_Parab.h"
#include "Extrema_POnCurv.h"


using namespace OCNaroWrappers;

OCExtrema_ExtElC::OCExtrema_ExtElC(Extrema_ExtElC* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCExtrema_ExtElC::OCExtrema_ExtElC() 
{
  nativeHandle = new Extrema_ExtElC();
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Lin^ C1, OCNaroWrappers::OCgp_Lin^ C2, Standard_Real AngTol) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Lin*)C1->Handle), *((gp_Lin*)C2->Handle), AngTol);
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Lin^ C1, OCNaroWrappers::OCgp_Circ^ C2, Standard_Real Tol) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Lin*)C1->Handle), *((gp_Circ*)C2->Handle), Tol);
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Lin^ C1, OCNaroWrappers::OCgp_Elips^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Lin*)C1->Handle), *((gp_Elips*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Lin^ C1, OCNaroWrappers::OCgp_Hypr^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Lin*)C1->Handle), *((gp_Hypr*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Lin^ C1, OCNaroWrappers::OCgp_Parab^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Lin*)C1->Handle), *((gp_Parab*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Circ^ C1, OCNaroWrappers::OCgp_Circ^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Circ*)C1->Handle), *((gp_Circ*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Circ^ C1, OCNaroWrappers::OCgp_Elips^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Circ*)C1->Handle), *((gp_Elips*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Circ^ C1, OCNaroWrappers::OCgp_Hypr^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Circ*)C1->Handle), *((gp_Hypr*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Circ^ C1, OCNaroWrappers::OCgp_Parab^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Circ*)C1->Handle), *((gp_Parab*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Elips^ C1, OCNaroWrappers::OCgp_Elips^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Elips*)C1->Handle), *((gp_Elips*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Elips^ C1, OCNaroWrappers::OCgp_Hypr^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Elips*)C1->Handle), *((gp_Hypr*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Elips^ C1, OCNaroWrappers::OCgp_Parab^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Elips*)C1->Handle), *((gp_Parab*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Hypr^ C1, OCNaroWrappers::OCgp_Hypr^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Hypr*)C1->Handle), *((gp_Hypr*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Hypr^ C1, OCNaroWrappers::OCgp_Parab^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Hypr*)C1->Handle), *((gp_Parab*)C2->Handle));
}

OCExtrema_ExtElC::OCExtrema_ExtElC(OCNaroWrappers::OCgp_Parab^ C1, OCNaroWrappers::OCgp_Parab^ C2) 
{
  nativeHandle = new Extrema_ExtElC(*((gp_Parab*)C1->Handle), *((gp_Parab*)C2->Handle));
}

 System::Boolean OCExtrema_ExtElC::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_ExtElC*)nativeHandle)->IsDone());
}

 System::Boolean OCExtrema_ExtElC::IsParallel()
{
  return OCConverter::StandardBooleanToBoolean(((Extrema_ExtElC*)nativeHandle)->IsParallel());
}

 Standard_Integer OCExtrema_ExtElC::NbExt()
{
  return ((Extrema_ExtElC*)nativeHandle)->NbExt();
}

 Standard_Real OCExtrema_ExtElC::SquareDistance(Standard_Integer N)
{
  return ((Extrema_ExtElC*)nativeHandle)->SquareDistance(N);
}

 void OCExtrema_ExtElC::Points(Standard_Integer N, OCNaroWrappers::OCExtrema_POnCurv^ P1, OCNaroWrappers::OCExtrema_POnCurv^ P2)
{
  ((Extrema_ExtElC*)nativeHandle)->Points(N, *((Extrema_POnCurv*)P1->Handle), *((Extrema_POnCurv*)P2->Handle));
}


