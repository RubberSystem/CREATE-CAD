// File generated by CPPExt (MPV)
//
#ifndef _Extrema_ExtElSS_OCWrappers_HeaderFile
#define _Extrema_ExtElSS_OCWrappers_HeaderFile

// include native header
#include <Extrema_ExtElSS.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTColStd_HArray1OfReal;
ref class OCExtrema_HArray1OfPOnSurf;
ref class OCgp_Pln;
ref class OCgp_Sphere;
ref class OCgp_Cylinder;
ref class OCgp_Cone;
ref class OCgp_Torus;
ref class OCExtrema_POnSurf;


//! It calculates all the distances between 2 elementary <br>
//!          surfaces. <br>
//!          These distances can be maximum or minimum. <br>
public ref class OCExtrema_ExtElSS  {

protected:
  Extrema_ExtElSS* nativeHandle;
  OCExtrema_ExtElSS(OCDummy^) {};

public:
  property Extrema_ExtElSS* Handle
  {
    Extrema_ExtElSS* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCExtrema_ExtElSS(Extrema_ExtElSS* nativeHandle);

// Methods PUBLIC


OCExtrema_ExtElSS();

//! Calculates the distances between 2 planes. <br>
//!          These planes can be parallel. <br>
OCExtrema_ExtElSS(OCNaroWrappers::OCgp_Pln^ S1, OCNaroWrappers::OCgp_Pln^ S2);


 /*instead*/  void Perform(OCNaroWrappers::OCgp_Pln^ S1, OCNaroWrappers::OCgp_Pln^ S2) ;

//! Calculates the distances between a plane <br>
//!          and a sphere. <br>
OCExtrema_ExtElSS(OCNaroWrappers::OCgp_Pln^ S1, OCNaroWrappers::OCgp_Sphere^ S2);


 /*instead*/  void Perform(OCNaroWrappers::OCgp_Pln^ S1, OCNaroWrappers::OCgp_Sphere^ S2) ;

//! Calculates the distances between 2 spheres. <br>
//!          These spheres can be parallel. <br>
OCExtrema_ExtElSS(OCNaroWrappers::OCgp_Sphere^ S1, OCNaroWrappers::OCgp_Sphere^ S2);


 /*instead*/  void Perform(OCNaroWrappers::OCgp_Sphere^ S1, OCNaroWrappers::OCgp_Sphere^ S2) ;

//! Calculates the distances between a sphere <br>
//!          and a cylinder. <br>
OCExtrema_ExtElSS(OCNaroWrappers::OCgp_Sphere^ S1, OCNaroWrappers::OCgp_Cylinder^ S2);


 /*instead*/  void Perform(OCNaroWrappers::OCgp_Sphere^ S1, OCNaroWrappers::OCgp_Cylinder^ S2) ;

//! Calculates the distances between a sphere <br>
//!          and a cone. <br>
OCExtrema_ExtElSS(OCNaroWrappers::OCgp_Sphere^ S1, OCNaroWrappers::OCgp_Cone^ S2);


 /*instead*/  void Perform(OCNaroWrappers::OCgp_Sphere^ S1, OCNaroWrappers::OCgp_Cone^ S2) ;

//! Calculates the distances between a sphere <br>
//!          and a torus. <br>
OCExtrema_ExtElSS(OCNaroWrappers::OCgp_Sphere^ S1, OCNaroWrappers::OCgp_Torus^ S2);


 /*instead*/  void Perform(OCNaroWrappers::OCgp_Sphere^ S1, OCNaroWrappers::OCgp_Torus^ S2) ;

//! Returns True if the distances are found. <br>
 /*instead*/  System::Boolean IsDone() ;

//! Returns True if the two surfaces are parallel. <br>
 /*instead*/  System::Boolean IsParallel() ;

//! Returns the number of extremum distances. <br>
 /*instead*/  Standard_Integer NbExt() ;

//! Returns the value of the Nth extremum square distance. <br>
 /*instead*/  Standard_Real SquareDistance(Standard_Integer N) ;

//! Returns the points for the Nth resulting distance. <br>
//!          P1 is on the first surface, P2 on the second one. <br>
 /*instead*/  void Points(Standard_Integer N, OCNaroWrappers::OCExtrema_POnSurf^ P1, OCNaroWrappers::OCExtrema_POnSurf^ P2) ;

~OCExtrema_ExtElSS()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
