// File generated by CPPExt (MPV)
//
#ifndef _STEPControl_Reader_OCWrappers_HeaderFile
#define _STEPControl_Reader_OCWrappers_HeaderFile

// include native header
#include <STEPControl_Reader.hxx>
#include "../Converter.h"

#include "../XSControl/XSControl_Reader.h"

#include "../XSControl/XSControl_Reader.h"


namespace OCNaroWrappers
{

ref class OCXSControl_WorkSession;
ref class OCStepData_StepModel;
ref class OCTColStd_SequenceOfAsciiString;
ref class OCStepRepr_RepresentationContext;
ref class OCTColStd_Array1OfAsciiString;
ref class OCTColStd_Array1OfReal;


//! Reads STEP files, checks them and translates their contents <br>
//! into Open CASCADE models. The STEP data can be that of <br>
//! a whole model or that of a specific list of entities in the model. <br>
//! As in XSControl_Reader, you specify the list using a selection. <br>
//! For the translation of iges files it is possible to use next sequence: <br>
//! To change translation parameters <br>
//! class Interface_Static should be used before beginning of <br>
//! translation  (see STEP Parameters and General Parameters) <br>
//!     Creation of reader - STEPControl_Reader reader; <br>
//!  To load s file in a model use method reader.ReadFile("filename.stp") <br>
//! To print load results reader.PrintCheckLoad(failsonly,mode) <br>
//! where mode is equal to the value of enumeration IFSelect_PrintCount <br>
//!   For definition number of candidates : <br>
//! Standard_Integer nbroots = reader. NbRootsForTransfer(); <br>
//! To transfer entities from a model the following methods can be used: <br>
//! for the whole model - reader.TransferRoots(); <br>
//! to transfer a list of entities: reader.TransferList(list); <br>
//! to transfer one entity Handle(Standard_Transient) <br>
//! ent = reader.RootForTransfer(num); <br>
//! reader.TransferEntity(ent), or <br>
//! reader.TransferOneRoot(num), or <br>
//! reader.TransferOne(num), or <br>
//! reader.TransferRoot(num) <br>
//!   To obtain the result the following method can be used: <br>
//! reader.NbShapes() and reader.Shape(num); or reader.OneShape(); <br>
//! To print the results of transfer use method: <br>
//! reader.PrintCheckTransfer(failwarn,mode); <br>
//! where printfail is equal to the value of enumeration <br>
//! IFSelect_PrintFail, mode see above; or reader.PrintStatsTransfer(); <br>
//! Gets correspondence between a STEP entity and a result <br>
//! shape obtained from it. <br>
//! Handle(XSControl_WorkSession) <br>
//! WS = reader.WS(); <br>
//! if ( WS->TransferReader()->HasResult(ent) ) <br>
//! TopoDS_Shape shape = WS->TransferReader()->ShapeResult(ent); <br>
public ref class OCSTEPControl_Reader  : public OCXSControl_Reader {

protected:
  // dummy constructor;
  OCSTEPControl_Reader(OCDummy^) : OCXSControl_Reader((OCDummy^)nullptr) {};

public:

// constructor from native
OCSTEPControl_Reader(STEPControl_Reader* nativeHandle);

// Methods PUBLIC

//! Creates a reader object with an empty STEP model. <br>
OCSTEPControl_Reader();

//! Creates a Reader for STEP from an already existing Session <br>
//!           Clears the session if it was not yet set for STEP <br>
OCSTEPControl_Reader(OCNaroWrappers::OCXSControl_WorkSession^ WS, System::Boolean scratch);

//! Returns the model as a StepModel. <br>
//!           It can then be consulted (header, product) <br>
 /*instead*/  OCStepData_StepModel^ StepModel() ;

//! Transfers a root given its rank in the list of candidate roots <br>
//!           Default is the first one <br>
//!           Returns True if a shape has resulted, false else <br>
//!           Same as inherited TransferOneRoot, kept for compatibility <br>
 /*instead*/  System::Boolean TransferRoot(Standard_Integer num) ;

//! Determines the list of root entities from Model which are candidate for <br>
//!           a transfer to a Shape (type of entities is PRODUCT) <br>
virtual /*instead*/  Standard_Integer NbRootsForTransfer() override;

//! Returns sequence of all unit names for shape representations <br>
//!           found in file <br>
 /*instead*/  void FileUnits(OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ theUnitLengthNames, OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ theUnitAngleNames, OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ theUnitSolidAngleNames) ;

~OCSTEPControl_Reader()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
