// File generated by CPPExt (Transient)
//
#ifndef _STEPControl_ActorRead_OCWrappers_HeaderFile
#define _STEPControl_ActorRead_OCWrappers_HeaderFile

// include the wrapped class
#include <STEPControl_ActorRead.hxx>
#include "../Converter.h"

#include "../Transfer/Transfer_ActorOfTransientProcess.h"



namespace OCNaroWrappers
{

ref class OCStepRepr_Representation;
ref class OCStandard_Transient;
ref class OCTransfer_Binder;
ref class OCTransfer_TransientProcess;
ref class OCStepGeom_Axis2Placement3d;
ref class OCgp_Trsf;
ref class OCStepRepr_RepresentationRelationship;
ref class OCTransferBRep_ShapeBinder;
ref class OCStepBasic_ProductDefinition;
ref class OCStepRepr_NextAssemblyUsageOccurrence;
ref class OCStepShape_ShapeRepresentation;
ref class OCStepShape_ContextDependentShapeRepresentation;
ref class OCStepRepr_ShapeRepresentationRelationship;
ref class OCStepGeom_GeometricRepresentationItem;
ref class OCStepRepr_MappedItem;
ref class OCStepShape_FaceSurface;
ref class OCTopoDS_Shell;
ref class OCTopTools_ListOfShape;
ref class OCTopoDS_Compound;
ref class OCTopTools_IndexedDataMapOfShapeListOfShape;


//! This class performs the transfer of an Entity from <br>
//!           AP214 and AP203, either Geometric or Topologic. <br>
//! <br>
//!           I.E. for each type of Entity, it invokes the appropriate Tool <br>
//!           then returns the Binder which contains the Result <br>
public ref class OCSTEPControl_ActorRead : OCTransfer_ActorOfTransientProcess {

protected:
  // dummy constructor;
  OCSTEPControl_ActorRead(OCDummy^) : OCTransfer_ActorOfTransientProcess((OCDummy^)nullptr) {};

public:

// constructor from native
OCSTEPControl_ActorRead(Handle(STEPControl_ActorRead)* nativeHandle);

// Methods PUBLIC


OCSTEPControl_ActorRead();


virtual /*instead*/  System::Boolean Recognize(OCNaroWrappers::OCStandard_Transient^ start) override;


virtual /*instead*/  OCTransfer_Binder^ Transfer(OCNaroWrappers::OCStandard_Transient^ start, OCNaroWrappers::OCTransfer_TransientProcess^ TP) override;


 /*instead*/  OCTransfer_Binder^ TransferShape(OCNaroWrappers::OCStandard_Transient^ start, OCNaroWrappers::OCTransfer_TransientProcess^ TP, System::Boolean isManifold) ;

//! set units and tolerances context by given ShapeRepresentation <br>
 /*instead*/  void PrepareUnits(OCNaroWrappers::OCStepRepr_Representation^ rep, OCNaroWrappers::OCTransfer_TransientProcess^ TP) ;

//! reset units and tolerances context to default <br>
//!         (mm, radians, read.precision.val, etc.) <br>
 /*instead*/  void ResetUnits() ;

//! Computes transformation defined by two axis placements (in MAPPED_ITEM <br>
//!          or ITEM_DEFINED_TRANSFORMATION) taking into account their <br>
//!          representation contexts (i.e. units, which may be different) <br>
//!          Returns True if transformation is computed and is not an identity. <br>
 /*instead*/  System::Boolean ComputeTransformation(OCNaroWrappers::OCStepGeom_Axis2Placement3d^ Origin, OCNaroWrappers::OCStepGeom_Axis2Placement3d^ Target, OCNaroWrappers::OCStepRepr_Representation^ OrigContext, OCNaroWrappers::OCStepRepr_Representation^ TargContext, OCNaroWrappers::OCTransfer_TransientProcess^ TP, OCNaroWrappers::OCgp_Trsf^ Trsf) ;

//! Computes transformation defined by given <br>
//!          REPRESENTATION_RELATIONSHIP_WITH_TRANSFORMATION <br>
 /*instead*/  System::Boolean ComputeSRRWT(OCNaroWrappers::OCStepRepr_RepresentationRelationship^ SRR, OCNaroWrappers::OCTransfer_TransientProcess^ TP, OCNaroWrappers::OCgp_Trsf^ Trsf) ;

~OCSTEPControl_ActorRead()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
