// File generated by CPPExt (MPV)
//
#ifndef _STEPControl_Writer_OCWrappers_HeaderFile
#define _STEPControl_Writer_OCWrappers_HeaderFile

// include native header
#include <STEPControl_Writer.hxx>
#include "../Converter.h"


#include "../IFSelect/IFSelect_ReturnStatus.h"
#include "STEPControl_StepModelType.h"


namespace OCNaroWrappers
{

ref class OCXSControl_WorkSession;
ref class OCStepData_StepModel;
ref class OCTopoDS_Shape;


//! This class creates and writes <br>
//! STEP files from Open CASCADE models. A STEP file can be <br>
//! written to an existing STEP file or to a new one. <br>
//! Translation can be performed in one or several operations. Each <br>
//! translation operation outputs a distinct root entity in the STEP file. <br>
public ref class OCSTEPControl_Writer  {

protected:
  STEPControl_Writer* nativeHandle;
  OCSTEPControl_Writer(OCDummy^) {};

public:
  property STEPControl_Writer* Handle
  {
    STEPControl_Writer* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCSTEPControl_Writer(STEPControl_Writer* nativeHandle);

// Methods PUBLIC

//! Creates a Writer from scratch <br>
OCSTEPControl_Writer();

//! Creates a Writer from an already existing Session <br>
//!           If <scratch> is True (D), clears already recorded data <br>
OCSTEPControl_Writer(OCNaroWrappers::OCXSControl_WorkSession^ WS, System::Boolean scratch);

//! Sets a length-measure value that <br>
//!           will be written to uncertainty-measure-with-unit <br>
//!           when the next shape is translated. <br>
 /*instead*/  void SetTolerance(Standard_Real Tol) ;

//! Unsets the tolerance formerly forced by SetTolerance <br>
 /*instead*/  void UnsetTolerance() ;

//! Sets a specific session to <me> <br>
 /*instead*/  void SetWS(OCNaroWrappers::OCXSControl_WorkSession^ WS, System::Boolean scratch) ;

//! Returns the session used in <me> <br>
 /*instead*/  OCXSControl_WorkSession^ WS() ;

//! Returns the produced model. Produces a new one if not yet done <br>
//!           or if <newone> is True <br>
//!           This method allows for instance to edit product or header <br>
//!           data before writing. <br>
 /*instead*/  OCStepData_StepModel^ Model(System::Boolean newone) ;

//! Translates shape sh to a STEP <br>
//! entity. mode defines the STEP entity type to be output: <br>
//! - STEPControlStd_AsIs translates a shape to its highest possible <br>
//!   STEP representation. <br>
//! - STEPControlStd_ManifoldSolidBrep translates a shape to a STEP <br>
//!   manifold_solid_brep or brep_with_voids entity. <br>
//! - STEPControlStd_FacetedBrep translates a shape into a STEP <br>
//!   faceted_brep entity. <br>
//! - STEPControlStd_ShellBasedSurfaceModel translates a shape into a STEP <br>
//!   shell_based_surface_model entity. <br>
//! - STEPControlStd_GeometricCurveSet translates a shape into a STEP <br>
//!   geometric_curve_set entity. <br>
 /*instead*/  OCIFSelect_ReturnStatus Transfer(OCNaroWrappers::OCTopoDS_Shape^ sh, OCSTEPControl_StepModelType mode, System::Boolean compgraph) ;

//! Writes a STEP model in the file identified by filename. <br>
 /*instead*/  OCIFSelect_ReturnStatus Write(System::String^ filename) ;

//!  Displays the statistics for the <br>
//! last translation. what defines the kind of statistics that are displayed: <br>
//! - 0 gives general statistics   (number of translated roots, <br>
//!   number of warnings, number of   fail messages), <br>
//! - 1 gives root results, <br>
//! - 2 gives statistics for all checked entities, <br>
//! - 3 gives the list of translated entities, <br>
//! - 4 gives warning and fail messages, <br>
//! - 5 gives fail messages only. <br>
//!   mode is used according to the use of what. If what is 0, mode is <br>
//! ignored. If what is 1, 2 or 3, mode defines the following: <br>
//! - 0 lists the numbers of STEP entities in a STEP model, <br>
//! - 1 gives the number, identifier, type and result type for each <br>
//!   STEP entity and/or its status (fail, warning, etc.), <br>
//! - 2 gives maximum information for each STEP entity (i.e. checks), <br>
//! - 3 gives the number of entities by the type of a STEP entity, <br>
//! - 4 gives the number of of STEP entities per result type and/or status, <br>
//! - 5 gives the number of pairs (STEP or result type and status), <br>
//! - 6 gives the number of pairs (STEP or result type and status) <br>
//!   AND the list of entity numbers in the STEP model. <br>
 /*instead*/  void PrintStatsTransfer(Standard_Integer what, Standard_Integer mode) ;

~OCSTEPControl_Writer()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
