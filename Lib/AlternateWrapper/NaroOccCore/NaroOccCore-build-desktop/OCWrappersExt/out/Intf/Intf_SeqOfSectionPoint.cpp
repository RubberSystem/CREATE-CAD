// File generated by CPPExt (CPP file)
//

#include "Intf_SeqOfSectionPoint.h"
#include "../Converter.h"
#include "Intf_SectionPoint.h"
#include "Intf_SequenceNodeOfSeqOfSectionPoint.h"


using namespace OCNaroWrappers;

OCIntf_SeqOfSectionPoint::OCIntf_SeqOfSectionPoint(Intf_SeqOfSectionPoint* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIntf_SeqOfSectionPoint::OCIntf_SeqOfSectionPoint() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Intf_SeqOfSectionPoint();
}

OCIntf_SeqOfSectionPoint^ OCIntf_SeqOfSectionPoint::Assign(OCNaroWrappers::OCIntf_SeqOfSectionPoint^ Other)
{
  Intf_SeqOfSectionPoint* tmp = new Intf_SeqOfSectionPoint();
  *tmp = ((Intf_SeqOfSectionPoint*)nativeHandle)->Assign(*((Intf_SeqOfSectionPoint*)Other->Handle));
  return gcnew OCIntf_SeqOfSectionPoint(tmp);
}

 void OCIntf_SeqOfSectionPoint::Append(OCNaroWrappers::OCIntf_SectionPoint^ T)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->Append(*((Intf_SectionPoint*)T->Handle));
}

 void OCIntf_SeqOfSectionPoint::Append(OCNaroWrappers::OCIntf_SeqOfSectionPoint^ S)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->Append(*((Intf_SeqOfSectionPoint*)S->Handle));
}

 void OCIntf_SeqOfSectionPoint::Prepend(OCNaroWrappers::OCIntf_SectionPoint^ T)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->Prepend(*((Intf_SectionPoint*)T->Handle));
}

 void OCIntf_SeqOfSectionPoint::Prepend(OCNaroWrappers::OCIntf_SeqOfSectionPoint^ S)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->Prepend(*((Intf_SeqOfSectionPoint*)S->Handle));
}

 void OCIntf_SeqOfSectionPoint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntf_SectionPoint^ T)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->InsertBefore(Index, *((Intf_SectionPoint*)T->Handle));
}

 void OCIntf_SeqOfSectionPoint::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCIntf_SeqOfSectionPoint^ S)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->InsertBefore(Index, *((Intf_SeqOfSectionPoint*)S->Handle));
}

 void OCIntf_SeqOfSectionPoint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntf_SectionPoint^ T)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->InsertAfter(Index, *((Intf_SectionPoint*)T->Handle));
}

 void OCIntf_SeqOfSectionPoint::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCIntf_SeqOfSectionPoint^ S)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->InsertAfter(Index, *((Intf_SeqOfSectionPoint*)S->Handle));
}

OCIntf_SectionPoint^ OCIntf_SeqOfSectionPoint::First()
{
  Intf_SectionPoint* tmp = new Intf_SectionPoint();
  *tmp = ((Intf_SeqOfSectionPoint*)nativeHandle)->First();
  return gcnew OCIntf_SectionPoint(tmp);
}

OCIntf_SectionPoint^ OCIntf_SeqOfSectionPoint::Last()
{
  Intf_SectionPoint* tmp = new Intf_SectionPoint();
  *tmp = ((Intf_SeqOfSectionPoint*)nativeHandle)->Last();
  return gcnew OCIntf_SectionPoint(tmp);
}

 void OCIntf_SeqOfSectionPoint::Split(Standard_Integer Index, OCNaroWrappers::OCIntf_SeqOfSectionPoint^ Sub)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->Split(Index, *((Intf_SeqOfSectionPoint*)Sub->Handle));
}

OCIntf_SectionPoint^ OCIntf_SeqOfSectionPoint::Value(Standard_Integer Index)
{
  Intf_SectionPoint* tmp = new Intf_SectionPoint();
  *tmp = ((Intf_SeqOfSectionPoint*)nativeHandle)->Value(Index);
  return gcnew OCIntf_SectionPoint(tmp);
}

 void OCIntf_SeqOfSectionPoint::SetValue(Standard_Integer Index, OCNaroWrappers::OCIntf_SectionPoint^ I)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->SetValue(Index, *((Intf_SectionPoint*)I->Handle));
}

OCIntf_SectionPoint^ OCIntf_SeqOfSectionPoint::ChangeValue(Standard_Integer Index)
{
  Intf_SectionPoint* tmp = new Intf_SectionPoint();
  *tmp = ((Intf_SeqOfSectionPoint*)nativeHandle)->ChangeValue(Index);
  return gcnew OCIntf_SectionPoint(tmp);
}

 void OCIntf_SeqOfSectionPoint::Remove(Standard_Integer Index)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->Remove(Index);
}

 void OCIntf_SeqOfSectionPoint::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Intf_SeqOfSectionPoint*)nativeHandle)->Remove(FromIndex, ToIndex);
}


