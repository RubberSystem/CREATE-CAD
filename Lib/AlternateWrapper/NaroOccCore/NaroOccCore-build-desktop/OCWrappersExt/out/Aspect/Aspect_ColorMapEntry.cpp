// File generated by CPPExt (CPP file)
//

#include "Aspect_ColorMapEntry.h"
#include "../Converter.h"
#include "../Quantity/Quantity_Color.h"


using namespace OCNaroWrappers;

OCAspect_ColorMapEntry::OCAspect_ColorMapEntry(Aspect_ColorMapEntry* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCAspect_ColorMapEntry::OCAspect_ColorMapEntry() 
{
  nativeHandle = new Aspect_ColorMapEntry();
}

OCAspect_ColorMapEntry::OCAspect_ColorMapEntry(Standard_Integer index, OCNaroWrappers::OCQuantity_Color^ rgb) 
{
  nativeHandle = new Aspect_ColorMapEntry(index, *((Quantity_Color*)rgb->Handle));
}

OCAspect_ColorMapEntry::OCAspect_ColorMapEntry(OCNaroWrappers::OCAspect_ColorMapEntry^ entry) 
{
  nativeHandle = new Aspect_ColorMapEntry(*((Aspect_ColorMapEntry*)entry->Handle));
}

 void OCAspect_ColorMapEntry::SetValue(Standard_Integer index, OCNaroWrappers::OCQuantity_Color^ rgb)
{
  ((Aspect_ColorMapEntry*)nativeHandle)->SetValue(index, *((Quantity_Color*)rgb->Handle));
}

 void OCAspect_ColorMapEntry::SetValue(OCNaroWrappers::OCAspect_ColorMapEntry^ entry)
{
  ((Aspect_ColorMapEntry*)nativeHandle)->SetValue(*((Aspect_ColorMapEntry*)entry->Handle));
}

 void OCAspect_ColorMapEntry::SetColor(OCNaroWrappers::OCQuantity_Color^ rgb)
{
  ((Aspect_ColorMapEntry*)nativeHandle)->SetColor(*((Quantity_Color*)rgb->Handle));
}

OCQuantity_Color^ OCAspect_ColorMapEntry::Color()
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = ((Aspect_ColorMapEntry*)nativeHandle)->Color();
  return gcnew OCQuantity_Color(tmp);
}

 void OCAspect_ColorMapEntry::SetIndex(Standard_Integer index)
{
  ((Aspect_ColorMapEntry*)nativeHandle)->SetIndex(index);
}

 Standard_Integer OCAspect_ColorMapEntry::Index()
{
  return ((Aspect_ColorMapEntry*)nativeHandle)->Index();
}

 void OCAspect_ColorMapEntry::Free()
{
  ((Aspect_ColorMapEntry*)nativeHandle)->Free();
}

 System::Boolean OCAspect_ColorMapEntry::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((Aspect_ColorMapEntry*)nativeHandle)->IsAllocated());
}

 void OCAspect_ColorMapEntry::Dump()
{
  ((Aspect_ColorMapEntry*)nativeHandle)->Dump();
}


