// File generated by CPPExt (MPV)
//
#ifndef _Aspect_Array1OfEdge_OCWrappers_HeaderFile
#define _Aspect_Array1OfEdge_OCWrappers_HeaderFile

// include native header
#include <Aspect_Array1OfEdge.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCAspect_Edge;



public ref class OCAspect_Array1OfEdge  {

protected:
  Aspect_Array1OfEdge* nativeHandle;
  OCAspect_Array1OfEdge(OCDummy^) {};

public:
  property Aspect_Array1OfEdge* Handle
  {
    Aspect_Array1OfEdge* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCAspect_Array1OfEdge(Aspect_Array1OfEdge* nativeHandle);

// Methods PUBLIC


OCAspect_Array1OfEdge(Standard_Integer Low, Standard_Integer Up);


OCAspect_Array1OfEdge(OCNaroWrappers::OCAspect_Edge^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCAspect_Edge^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCAspect_Array1OfEdge^ Assign(OCNaroWrappers::OCAspect_Array1OfEdge^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCAspect_Edge^ Value) ;


 /*instead*/  OCAspect_Edge^ Value(Standard_Integer Index) ;


 /*instead*/  OCAspect_Edge^ ChangeValue(Standard_Integer Index) ;

~OCAspect_Array1OfEdge()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
