// File generated by CPPExt (MPV)
//
#ifndef _Aspect_WidthMapEntry_OCWrappers_HeaderFile
#define _Aspect_WidthMapEntry_OCWrappers_HeaderFile

// include native header
#include <Aspect_WidthMapEntry.hxx>
#include "../Converter.h"


#include "Aspect_WidthOfLine.h"


namespace OCNaroWrappers
{



//! This class defines a widthmap entry. <br>
//!	    A widthmap entry is an association between <br>
//!	    a LineStyle object and an index in the widthmap. <br>
public ref class OCAspect_WidthMapEntry  {

protected:
  Aspect_WidthMapEntry* nativeHandle;
  OCAspect_WidthMapEntry(OCDummy^) {};

public:
  property Aspect_WidthMapEntry* Handle
  {
    Aspect_WidthMapEntry* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCAspect_WidthMapEntry(Aspect_WidthMapEntry* nativeHandle);

// Methods PUBLIC

//! Creates an unallocated widthmap entry <br>
OCAspect_WidthMapEntry();

//! Creates an allocated widthmap entry from width style <br>
OCAspect_WidthMapEntry(Standard_Integer index, OCAspect_WidthOfLine style);

//! Creates an allocated widthmap entry from width value <br>
OCAspect_WidthMapEntry(Standard_Integer index, Quantity_Length width);

//! Creates an allocated widthmap entry. <br>
OCAspect_WidthMapEntry(OCNaroWrappers::OCAspect_WidthMapEntry^ entry);

//! Sets widthmap entry value from width style <br>
//!	    and allocates it. <br>
 /*instead*/  void SetValue(Standard_Integer index, OCAspect_WidthOfLine style) ;

//! Sets widthmap entry value from width value <br>
//!	    and allocates it. <br>
 /*instead*/  void SetValue(Standard_Integer index, Quantity_Length width) ;

//! Sets widthmap entry value and allocates it. <br>
 /*instead*/  void SetValue(OCNaroWrappers::OCAspect_WidthMapEntry^ entry) ;

//! Sets index value of a widthmap entry. <br>
 /*instead*/  void SetIndex(Standard_Integer index) ;

//! Sets width style of widthmap entry. <br>
 /*instead*/  void SetType(OCAspect_WidthOfLine Style) ;

//! Sets width value of widthmap entry. <br>
 /*instead*/  void SetWidth(Quantity_Length Width) ;


 /*instead*/  OCAspect_WidthOfLine Type() ;

//! Returns width value of widthmap entry. <br>
//!  Warning: Raises error if the widthmap entry is unallocated . <br>
 /*instead*/  Quantity_Length Width() ;

//! Returns index value of a widthmap entry. <br>
//!  Warning: Raises error if the widthmap entry is unallocated . <br>
 /*instead*/  Standard_Integer Index() ;

//! Unallocates the widthmap entry. <br>
 /*instead*/  void Free() ;

//! Returns True if the widthmap entry is allocated. <br>
//!  Warning: A widthmap entry is allocated when the width and <br>
//!	    the index is defined. <br>
 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  void Dump() ;

~OCAspect_WidthMapEntry()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
