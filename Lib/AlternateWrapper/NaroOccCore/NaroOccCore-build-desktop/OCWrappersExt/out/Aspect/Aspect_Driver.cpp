// File generated by CPPExt (CPP file)
//

#include "Aspect_Driver.h"
#include "../Converter.h"
#include "Aspect_ColorMap.h"
#include "Aspect_TypeMap.h"
#include "Aspect_WidthMap.h"
#include "Aspect_FontMap.h"
#include "Aspect_MarkMap.h"
#include "../Standard/Standard_Transient.h"
#include "../TShort/TShort_Array1OfShortReal.h"
#include "../TCollection/TCollection_ExtendedString.h"


using namespace OCNaroWrappers;

OCAspect_Driver::OCAspect_Driver(Handle(Aspect_Driver)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Aspect_Driver(*nativeHandle);
}

OCAspect_Driver::OCAspect_Driver() : OCMMgt_TShared((OCDummy^)nullptr)

{}

 void OCAspect_Driver::SetColorMap(OCNaroWrappers::OCAspect_ColorMap^ aColorMap)
{
  (*((Handle_Aspect_Driver*)nativeHandle))->SetColorMap(*((Handle_Aspect_ColorMap*)aColorMap->Handle));
}

 void OCAspect_Driver::SetTypeMap(OCNaroWrappers::OCAspect_TypeMap^ aTypeMap)
{
  (*((Handle_Aspect_Driver*)nativeHandle))->SetTypeMap(*((Handle_Aspect_TypeMap*)aTypeMap->Handle));
}

 void OCAspect_Driver::SetWidthMap(OCNaroWrappers::OCAspect_WidthMap^ aWidthMap)
{
  (*((Handle_Aspect_Driver*)nativeHandle))->SetWidthMap(*((Handle_Aspect_WidthMap*)aWidthMap->Handle));
}

 void OCAspect_Driver::SetFontMap(OCNaroWrappers::OCAspect_FontMap^ aFontMap, System::Boolean useMFT)
{
  (*((Handle_Aspect_Driver*)nativeHandle))->SetFontMap(*((Handle_Aspect_FontMap*)aFontMap->Handle), OCConverter::BooleanToStandardBoolean(useMFT));
}

 void OCAspect_Driver::SetMarkMap(OCNaroWrappers::OCAspect_MarkMap^ aMarkMap)
{
  (*((Handle_Aspect_Driver*)nativeHandle))->SetMarkMap(*((Handle_Aspect_MarkMap*)aMarkMap->Handle));
}

OCAspect_ColorMap^ OCAspect_Driver::ColorMap()
{
  Handle(Aspect_ColorMap) tmp = (*((Handle_Aspect_Driver*)nativeHandle))->ColorMap();
  return gcnew OCAspect_ColorMap(&tmp);
}

OCAspect_TypeMap^ OCAspect_Driver::TypeMap()
{
  Handle(Aspect_TypeMap) tmp = (*((Handle_Aspect_Driver*)nativeHandle))->TypeMap();
  return gcnew OCAspect_TypeMap(&tmp);
}

OCAspect_WidthMap^ OCAspect_Driver::WidthMap()
{
  Handle(Aspect_WidthMap) tmp = (*((Handle_Aspect_Driver*)nativeHandle))->WidthMap();
  return gcnew OCAspect_WidthMap(&tmp);
}

OCAspect_FontMap^ OCAspect_Driver::FontMap()
{
  Handle(Aspect_FontMap) tmp = (*((Handle_Aspect_Driver*)nativeHandle))->FontMap();
  return gcnew OCAspect_FontMap(&tmp);
}

OCAspect_MarkMap^ OCAspect_Driver::MarkMap()
{
  Handle(Aspect_MarkMap) tmp = (*((Handle_Aspect_Driver*)nativeHandle))->MarkMap();
  return gcnew OCAspect_MarkMap(&tmp);
}

 System::Boolean OCAspect_Driver::UseMFT()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Aspect_Driver*)nativeHandle))->UseMFT());
}


