// File generated by CPPExt (MPV)
//
#ifndef _Aspect_Edge_OCWrappers_HeaderFile
#define _Aspect_Edge_OCWrappers_HeaderFile

// include native header
#include <Aspect_Edge.hxx>
#include "../Converter.h"


#include "Aspect_TypeOfEdge.h"


namespace OCNaroWrappers
{



//! This class allows the definition of an edge. <br>
public ref class OCAspect_Edge  {

protected:
  Aspect_Edge* nativeHandle;
  OCAspect_Edge(OCDummy^) {};

public:
  property Aspect_Edge* Handle
  {
    Aspect_Edge* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCAspect_Edge(Aspect_Edge* nativeHandle);

// Methods PUBLIC

//! Creates an edge. <br>
OCAspect_Edge();

//! Creates an edge from an index of vertices <br>
//!	    in a table of vertices. <br>
//!	    <AType> indicates if this edge is seen or not. <br>
//!  Warning: Raises EdgeDefinitionError if AIndex1 == AIndex2. <br>
OCAspect_Edge(Standard_Integer AIndex1, Standard_Integer AIndex2, OCAspect_TypeOfEdge AType);

//! Updates the values of an edge <me>. <br>
//!  Warning: Raises EdgeDefinitionError if AIndex1 == AIndex2. <br>
 /*instead*/  void SetValues(Standard_Integer AIndex1, Standard_Integer AIndex2, OCAspect_TypeOfEdge AType) ;

//! Returns the index of the vertices and the <br>
//!	    type of edge <me>. <br>
 /*instead*/  void Values(Standard_Integer& AIndex1, Standard_Integer& AIndex2, OCAspect_TypeOfEdge& AType) ;

//! Returns the index of the begin of the edge <me>. <br>
 /*instead*/  Standard_Integer FirstIndex() ;

//! Returns the index of the end of the edge <me>. <br>
 /*instead*/  Standard_Integer LastIndex() ;

//! Returns the type of the edge <me>. <br>
 /*instead*/  OCAspect_TypeOfEdge Type() ;

~OCAspect_Edge()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
