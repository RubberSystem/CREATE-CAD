// File generated by CPPExt (MPV)
//
#ifndef _Aspect_GenId_OCWrappers_HeaderFile
#define _Aspect_GenId_OCWrappers_HeaderFile

// include native header
#include <Aspect_GenId.hxx>
#include "../Converter.h"


#include "../TColStd/TColStd_ListOfInteger.h"


namespace OCNaroWrappers
{



//! This class permits the creation and control of all <br>
//!	    identifiers. <br>
//!  Warning: An identifier is an integer. <br>
public ref class OCAspect_GenId  {

protected:
  Aspect_GenId* nativeHandle;
  OCAspect_GenId(OCDummy^) {};

public:
  property Aspect_GenId* Handle
  {
    Aspect_GenId* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCAspect_GenId(Aspect_GenId* nativeHandle);

// Methods PUBLIC

//! Creates an available set of identifiers with the lower <br>
//!	    bound 0 and the upper bound INT_MAX/2. <br>
OCAspect_GenId();

//! Creates an available set of identifiers with the lower <br>
//!	    bound <Low> and the upper bound <Up>. <br>
//!  Warning: Raises IdentDefinitionError if <Up> is less than <Low>. <br>//! Copies the content of <Other> into <me>. <br>
OCAspect_GenId(Standard_Integer Low, Standard_Integer Up);

//! Frees all identifiers of <me>. <br>
 /*instead*/  void Free() ;

//! Frees the identifier <Id> of <me>. <br>
 /*instead*/  void Free(Standard_Integer Id) ;

//! Returns the number of available identifiers of <me>. <br>
 /*instead*/  Standard_Integer Available() ;

//! Returns the lower bound of <me>. <br>
 /*instead*/  Standard_Integer Lower() ;

//! Returns an available identifier of <me>. <br>
//!  Warning: Raises IdentDefinitionError if all identifiers are busy. <br>
 /*instead*/  Standard_Integer Next() ;

//! Returns the upper bound of <me>. <br>
 /*instead*/  Standard_Integer Upper() ;

~OCAspect_GenId()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
