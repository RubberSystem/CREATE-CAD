// File generated by CPPExt (Transient)
//
#ifndef _Aspect_FontMap_OCWrappers_HeaderFile
#define _Aspect_FontMap_OCWrappers_HeaderFile

// include the wrapped class
#include <Aspect_FontMap.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Aspect_SequenceOfFontMapEntry.h"


namespace OCNaroWrappers
{

ref class OCAspect_FontMapEntry;
ref class OCAspect_FontStyle;


//! This class defines a FontMap object. <br>
public ref class OCAspect_FontMap : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCAspect_FontMap(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCAspect_FontMap(Handle(Aspect_FontMap)* nativeHandle);

// Methods PUBLIC


OCAspect_FontMap();

//! Adds an entry in the font map <me>. <br>
//!  Warning: Raises BadAccess if FontMap size is exceeded. <br>
 /*instead*/  void AddEntry(OCNaroWrappers::OCAspect_FontMapEntry^ AnEntry) ;

//! Search an identical font style entry in the font map <me> <br>
//! and returns the FontMapEntry Index if exist. <br>
//! Or add a new entry and returns the computed FontMapEntry index used. <br>
 /*instead*/  Standard_Integer AddEntry(OCNaroWrappers::OCAspect_FontStyle^ aStyle) ;

//! Returns the Allocated fontmap Size <br>
 /*instead*/  Standard_Integer Size() ;

//! Returns the FontMapEntry.Index of the FontMap <br>
//!          at rank <aFontmapIndex> . <br>
 /*instead*/  Standard_Integer Index(Standard_Integer aFontmapIndex) ;


 /*instead*/  void Dump() ;

//! Returns the Font map entry with the index <AnIndex>. <br>
//!  Warning: Raises BadAccess if the index less than 1 <br>
//!	    or greater than Size. <br>
 /*instead*/  OCAspect_FontMapEntry^ Entry(Standard_Integer AnIndex) ;

~OCAspect_FontMap()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
