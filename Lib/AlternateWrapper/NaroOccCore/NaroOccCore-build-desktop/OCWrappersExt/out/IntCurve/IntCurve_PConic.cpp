// File generated by CPPExt (CPP file)
//

#include "IntCurve_PConic.h"
#include "../Converter.h"
#include "../gp/gp_Elips2d.h"
#include "../gp/gp_Circ2d.h"
#include "../gp/gp_Parab2d.h"
#include "../gp/gp_Hypr2d.h"
#include "../gp/gp_Lin2d.h"
#include "../gp/gp_Ax22d.h"


using namespace OCNaroWrappers;

OCIntCurve_PConic::OCIntCurve_PConic(IntCurve_PConic* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCIntCurve_PConic::OCIntCurve_PConic(OCNaroWrappers::OCIntCurve_PConic^ PC) 
{
  nativeHandle = new IntCurve_PConic(*((IntCurve_PConic*)PC->Handle));
}

OCIntCurve_PConic::OCIntCurve_PConic(OCNaroWrappers::OCgp_Elips2d^ E) 
{
  nativeHandle = new IntCurve_PConic(*((gp_Elips2d*)E->Handle));
}

OCIntCurve_PConic::OCIntCurve_PConic(OCNaroWrappers::OCgp_Circ2d^ C) 
{
  nativeHandle = new IntCurve_PConic(*((gp_Circ2d*)C->Handle));
}

OCIntCurve_PConic::OCIntCurve_PConic(OCNaroWrappers::OCgp_Parab2d^ P) 
{
  nativeHandle = new IntCurve_PConic(*((gp_Parab2d*)P->Handle));
}

OCIntCurve_PConic::OCIntCurve_PConic(OCNaroWrappers::OCgp_Hypr2d^ H) 
{
  nativeHandle = new IntCurve_PConic(*((gp_Hypr2d*)H->Handle));
}

OCIntCurve_PConic::OCIntCurve_PConic(OCNaroWrappers::OCgp_Lin2d^ L) 
{
  nativeHandle = new IntCurve_PConic(*((gp_Lin2d*)L->Handle));
}

 void OCIntCurve_PConic::SetEpsX(Standard_Real EpsDist)
{
  ((IntCurve_PConic*)nativeHandle)->SetEpsX(EpsDist);
}

 void OCIntCurve_PConic::SetAccuracy(Standard_Integer Nb)
{
  ((IntCurve_PConic*)nativeHandle)->SetAccuracy(Nb);
}

 Standard_Integer OCIntCurve_PConic::Accuracy()
{
  return ((IntCurve_PConic*)nativeHandle)->Accuracy();
}

 Standard_Real OCIntCurve_PConic::EpsX()
{
  return ((IntCurve_PConic*)nativeHandle)->EpsX();
}

 OCGeomAbs_CurveType OCIntCurve_PConic::TypeCurve()
{
  return (OCGeomAbs_CurveType)(((IntCurve_PConic*)nativeHandle)->TypeCurve());
}

OCgp_Ax22d^ OCIntCurve_PConic::Axis2()
{
  gp_Ax22d* tmp = new gp_Ax22d();
  *tmp = ((IntCurve_PConic*)nativeHandle)->Axis2();
  return gcnew OCgp_Ax22d(tmp);
}

 Standard_Real OCIntCurve_PConic::Param1()
{
  return ((IntCurve_PConic*)nativeHandle)->Param1();
}

 Standard_Real OCIntCurve_PConic::Param2()
{
  return ((IntCurve_PConic*)nativeHandle)->Param2();
}


