// File generated by CPPExt (MPV)
//
#ifndef _IntCurve_IntImpConicParConic_OCWrappers_HeaderFile
#define _IntCurve_IntImpConicParConic_OCWrappers_HeaderFile

// include native header
#include <IntCurve_IntImpConicParConic.hxx>
#include "../Converter.h"

#include "../IntRes2d/IntRes2d_Intersection.h"

#include "../IntRes2d/IntRes2d_Intersection.h"


namespace OCNaroWrappers
{

ref class OCIntCurve_IConicTool;
ref class OCIntCurve_PConic;
ref class OCIntCurve_PConicTool;
ref class OCIntCurve_ProjectOnPConicTool;
ref class OCIntCurve_MyImpParToolOfIntImpConicParConic;
ref class OCIntRes2d_Domain;
ref class OCgp_Pnt2d;
ref class OCTColStd_Array1OfReal;



public ref class OCIntCurve_IntImpConicParConic  : public OCIntRes2d_Intersection {

protected:
  // dummy constructor;
  OCIntCurve_IntImpConicParConic(OCDummy^) : OCIntRes2d_Intersection((OCDummy^)nullptr) {};

public:

// constructor from native
OCIntCurve_IntImpConicParConic(IntCurve_IntImpConicParConic* nativeHandle);

// Methods PUBLIC


OCIntCurve_IntImpConicParConic();


OCIntCurve_IntImpConicParConic(OCNaroWrappers::OCIntCurve_IConicTool^ ITool, OCNaroWrappers::OCIntRes2d_Domain^ Dom1, OCNaroWrappers::OCIntCurve_PConic^ PCurve, OCNaroWrappers::OCIntRes2d_Domain^ Dom2, Standard_Real TolConf, Standard_Real Tol);


 /*instead*/  void Perform(OCNaroWrappers::OCIntCurve_IConicTool^ ITool, OCNaroWrappers::OCIntRes2d_Domain^ Dom1, OCNaroWrappers::OCIntCurve_PConic^ PCurve, OCNaroWrappers::OCIntRes2d_Domain^ Dom2, Standard_Real TolConf, Standard_Real Tol) ;


 /*instead*/  Standard_Real FindU(Standard_Real parameter, OCNaroWrappers::OCgp_Pnt2d^ point, OCNaroWrappers::OCIntCurve_PConic^ TheParCurev, OCNaroWrappers::OCIntCurve_IConicTool^ TheImpTool) ;


 /*instead*/  Standard_Real FindV(Standard_Real parameter, OCNaroWrappers::OCgp_Pnt2d^ point, OCNaroWrappers::OCIntCurve_IConicTool^ TheImpTool, OCNaroWrappers::OCIntCurve_PConic^ ParCurve, OCNaroWrappers::OCIntRes2d_Domain^ TheParCurveDomain, Standard_Real V0, Standard_Real V1, Standard_Real Tolerance) ;


 /*instead*/  void And_Domaine_Objet1_Intersections(OCNaroWrappers::OCIntCurve_IConicTool^ TheImpTool, OCNaroWrappers::OCIntCurve_PConic^ TheParCurve, OCNaroWrappers::OCIntRes2d_Domain^ TheImpCurveDomain, OCNaroWrappers::OCIntRes2d_Domain^ TheParCurveDomain, Standard_Integer& NbResultats, OCNaroWrappers::OCTColStd_Array1OfReal^ Inter2_And_Domain2, OCNaroWrappers::OCTColStd_Array1OfReal^ Inter1, OCNaroWrappers::OCTColStd_Array1OfReal^ Resultat1, OCNaroWrappers::OCTColStd_Array1OfReal^ Resultat2, Standard_Real EpsNul) ;

~OCIntCurve_IntImpConicParConic()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
