// File generated by CPPExt (MPV)
//
#ifndef _IntCurve_PConicTool_OCWrappers_HeaderFile
#define _IntCurve_PConicTool_OCWrappers_HeaderFile

// include native header
#include <IntCurve_PConicTool.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCIntCurve_PConic;
ref class OCgp_Pnt2d;
ref class OCgp_Vec2d;


//! Implementation of the ParTool from IntImpParGen <br>
//!          for conics of gp, using the class PConic from IntCurve. <br>
public ref class OCIntCurve_PConicTool  {

protected:
  IntCurve_PConicTool* nativeHandle;
  OCIntCurve_PConicTool(OCDummy^) {};

public:
  property IntCurve_PConicTool* Handle
  {
    IntCurve_PConicTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntCurve_PConicTool(IntCurve_PConicTool* nativeHandle);

// Methods PUBLIC


static /*instead*/  Standard_Real EpsX(OCNaroWrappers::OCIntCurve_PConic^ C) ;


static /*instead*/  Standard_Integer NbSamples(OCNaroWrappers::OCIntCurve_PConic^ C) ;


static /*instead*/  Standard_Integer NbSamples(OCNaroWrappers::OCIntCurve_PConic^ C, Standard_Real U0, Standard_Real U1) ;


static /*instead*/  OCgp_Pnt2d^ Value(OCNaroWrappers::OCIntCurve_PConic^ C, Standard_Real X) ;


static /*instead*/  void D1(OCNaroWrappers::OCIntCurve_PConic^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ T) ;


static /*instead*/  void D2(OCNaroWrappers::OCIntCurve_PConic^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ T, OCNaroWrappers::OCgp_Vec2d^ N) ;

~OCIntCurve_PConicTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
