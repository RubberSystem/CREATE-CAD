// File generated by CPPExt (CPP file)
//

#include "IntCurve_IntImpConicParConic.h"
#include "../Converter.h"
#include "IntCurve_IConicTool.h"
#include "IntCurve_PConic.h"
#include "IntCurve_PConicTool.h"
#include "IntCurve_ProjectOnPConicTool.h"
#include "IntCurve_MyImpParToolOfIntImpConicParConic.h"
#include "../IntRes2d/IntRes2d_Domain.h"
#include "../gp/gp_Pnt2d.h"
#include "../TColStd/TColStd_Array1OfReal.h"


using namespace OCNaroWrappers;

OCIntCurve_IntImpConicParConic::OCIntCurve_IntImpConicParConic(IntCurve_IntImpConicParConic* nativeHandle) : OCIntRes2d_Intersection((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCIntCurve_IntImpConicParConic::OCIntCurve_IntImpConicParConic() : OCIntRes2d_Intersection((OCDummy^)nullptr)

{
  nativeHandle = new IntCurve_IntImpConicParConic();
}

OCIntCurve_IntImpConicParConic::OCIntCurve_IntImpConicParConic(OCNaroWrappers::OCIntCurve_IConicTool^ ITool, OCNaroWrappers::OCIntRes2d_Domain^ Dom1, OCNaroWrappers::OCIntCurve_PConic^ PCurve, OCNaroWrappers::OCIntRes2d_Domain^ Dom2, Standard_Real TolConf, Standard_Real Tol) : OCIntRes2d_Intersection((OCDummy^)nullptr)

{
  nativeHandle = new IntCurve_IntImpConicParConic(*((IntCurve_IConicTool*)ITool->Handle), *((IntRes2d_Domain*)Dom1->Handle), *((IntCurve_PConic*)PCurve->Handle), *((IntRes2d_Domain*)Dom2->Handle), TolConf, Tol);
}

 void OCIntCurve_IntImpConicParConic::Perform(OCNaroWrappers::OCIntCurve_IConicTool^ ITool, OCNaroWrappers::OCIntRes2d_Domain^ Dom1, OCNaroWrappers::OCIntCurve_PConic^ PCurve, OCNaroWrappers::OCIntRes2d_Domain^ Dom2, Standard_Real TolConf, Standard_Real Tol)
{
  ((IntCurve_IntImpConicParConic*)nativeHandle)->Perform(*((IntCurve_IConicTool*)ITool->Handle), *((IntRes2d_Domain*)Dom1->Handle), *((IntCurve_PConic*)PCurve->Handle), *((IntRes2d_Domain*)Dom2->Handle), TolConf, Tol);
}

 Standard_Real OCIntCurve_IntImpConicParConic::FindU(Standard_Real parameter, OCNaroWrappers::OCgp_Pnt2d^ point, OCNaroWrappers::OCIntCurve_PConic^ TheParCurev, OCNaroWrappers::OCIntCurve_IConicTool^ TheImpTool)
{
  return ((IntCurve_IntImpConicParConic*)nativeHandle)->FindU(parameter, *((gp_Pnt2d*)point->Handle), *((IntCurve_PConic*)TheParCurev->Handle), *((IntCurve_IConicTool*)TheImpTool->Handle));
}

 Standard_Real OCIntCurve_IntImpConicParConic::FindV(Standard_Real parameter, OCNaroWrappers::OCgp_Pnt2d^ point, OCNaroWrappers::OCIntCurve_IConicTool^ TheImpTool, OCNaroWrappers::OCIntCurve_PConic^ ParCurve, OCNaroWrappers::OCIntRes2d_Domain^ TheParCurveDomain, Standard_Real V0, Standard_Real V1, Standard_Real Tolerance)
{
  return ((IntCurve_IntImpConicParConic*)nativeHandle)->FindV(parameter, *((gp_Pnt2d*)point->Handle), *((IntCurve_IConicTool*)TheImpTool->Handle), *((IntCurve_PConic*)ParCurve->Handle), *((IntRes2d_Domain*)TheParCurveDomain->Handle), V0, V1, Tolerance);
}

 void OCIntCurve_IntImpConicParConic::And_Domaine_Objet1_Intersections(OCNaroWrappers::OCIntCurve_IConicTool^ TheImpTool, OCNaroWrappers::OCIntCurve_PConic^ TheParCurve, OCNaroWrappers::OCIntRes2d_Domain^ TheImpCurveDomain, OCNaroWrappers::OCIntRes2d_Domain^ TheParCurveDomain, Standard_Integer& NbResultats, OCNaroWrappers::OCTColStd_Array1OfReal^ Inter2_And_Domain2, OCNaroWrappers::OCTColStd_Array1OfReal^ Inter1, OCNaroWrappers::OCTColStd_Array1OfReal^ Resultat1, OCNaroWrappers::OCTColStd_Array1OfReal^ Resultat2, Standard_Real EpsNul)
{
  ((IntCurve_IntImpConicParConic*)nativeHandle)->And_Domaine_Objet1_Intersections(*((IntCurve_IConicTool*)TheImpTool->Handle), *((IntCurve_PConic*)TheParCurve->Handle), *((IntRes2d_Domain*)TheImpCurveDomain->Handle), *((IntRes2d_Domain*)TheParCurveDomain->Handle), NbResultats, *((TColStd_Array1OfReal*)Inter2_And_Domain2->Handle), *((TColStd_Array1OfReal*)Inter1->Handle), *((TColStd_Array1OfReal*)Resultat1->Handle), *((TColStd_Array1OfReal*)Resultat2->Handle), EpsNul);
}


