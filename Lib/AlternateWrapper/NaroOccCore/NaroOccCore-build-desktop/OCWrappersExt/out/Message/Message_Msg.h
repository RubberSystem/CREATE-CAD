// File generated by CPPExt (MPV)
//
#ifndef _Message_Msg_OCWrappers_HeaderFile
#define _Message_Msg_OCWrappers_HeaderFile

// include native header
#include <Message_Msg.hxx>
#include "../Converter.h"


#include "../TCollection/TCollection_ExtendedString.h"
#include "../TColStd/TColStd_SequenceOfInteger.h"


namespace OCNaroWrappers
{

ref class OCTCollection_ExtendedString;
ref class OCTCollection_AsciiString;
ref class OCTCollection_HAsciiString;
ref class OCTCollection_HExtendedString;


//! This class provides a tool for constructing the parametrized message <br>
//!          basing on resources loaded by Message_MsgFile tool. <br>
//! <br>
//!          A Message is created from a keyword: this keyword identifies the <br>
//!          message in a message file that should be previously loaded by call <br>
//!          to Message_MsgFile::LoadFile(). <br>
//! <br>
//!          The text of the message can contain placeholders for the parameters <br>
//!          which are to be filled by the proper values when the message <br>
//!          is prepared. Most of the format specifiers used in C can be used, <br>
//!          for instance, %s for string, %d for integer etc. In addition, <br>
//!          specifier %f is supported for double numbers (for compatibility <br>
//!          with previous versions). <br>
//! <br>
//!          User fills the parameter fields in the text of the message by <br>
//!          calling corresponding methods Arg() or operators "<<". <br>
//! <br>
//!          The resulting message, filled with all parameters, can be obtained <br>
//!          by method Get(). If some parameters were not filled, the text <br>
//!          UNKNOWN is placed instead. <br>
public ref class OCMessage_Msg  {

protected:
  Message_Msg* nativeHandle;
  OCMessage_Msg(OCDummy^) {};

public:
  property Message_Msg* Handle
  {
    Message_Msg* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCMessage_Msg(Message_Msg* nativeHandle);

// Methods PUBLIC

//! Empty constructor <br>
OCMessage_Msg();

//! Copy constructor <br>
OCMessage_Msg(OCNaroWrappers::OCMessage_Msg^ theMsg);

//! Create a message using a corresponding entry in Message_MsgFile <br>
OCMessage_Msg(System::String^ theKey);

//! Create a message using a corresponding entry in Message_MsgFile <br>
OCMessage_Msg(OCNaroWrappers::OCTCollection_ExtendedString^ theKey);

//! Set a message body text -- can be used as alternative to <br>
//!           using messages from resource file <br>
 /*instead*/  void Set(System::String^ theMsg) ;

//! Set a message body text -- can be used as alternative to <br>
//!           using messages from resource file <br>
 /*instead*/  void Set(OCNaroWrappers::OCTCollection_ExtendedString^ theMsg) ;

//! Set a value for %..s conversion <br>
 /*instead*/  OCMessage_Msg^ Arg(System::String^ theString) ;

//! Set a value for %..s conversion <br>
 /*instead*/  OCMessage_Msg^ Arg(OCNaroWrappers::OCTCollection_AsciiString^ theString) ;

//! Set a value for %..s conversion <br>
 /*instead*/  OCMessage_Msg^ Arg(OCNaroWrappers::OCTCollection_HAsciiString^ theString) ;

//! Set a value for %..s conversion <br>
 /*instead*/  OCMessage_Msg^ Arg(OCNaroWrappers::OCTCollection_ExtendedString^ theString) ;

//! Set a value for %..s conversion <br>
 /*instead*/  OCMessage_Msg^ Arg(OCNaroWrappers::OCTCollection_HExtendedString^ theString) ;

//! Set a value for %..d, %..i, %..o, %..u, %..x or %..X conversion <br>
 /*instead*/  OCMessage_Msg^ Arg(Standard_Integer theInt) ;

//! Set a value for %..f, %..e, %..E, %..g or %..G conversion <br>
 /*instead*/  OCMessage_Msg^ Arg(Standard_Real theReal) ;

//! Returns the original message text <br>
 /*instead*/  OCTCollection_ExtendedString^ Original() ;

//! Returns current state of the message text with <br>
//!           parameters to the moment <br>
 /*instead*/  OCTCollection_ExtendedString^ Value() ;

//! Tells if Value differs from Original <br>
 /*instead*/  System::Boolean IsEdited() ;

//! Return the resulting message string with all parameters <br>
//!           filled. If some parameters were not yet filled by calls <br>
//!           to methods Arg (or <<), these parameters are filled by <br>
//!           the word UNKNOWN <br>
 /*instead*/  OCTCollection_ExtendedString^ Get() ;

~OCMessage_Msg()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
