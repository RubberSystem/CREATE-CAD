// File generated by CPPExt (CPP file)
//

#include "Message_ProgressScale.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"


using namespace OCNaroWrappers;

OCMessage_ProgressScale::OCMessage_ProgressScale(Message_ProgressScale* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCMessage_ProgressScale::OCMessage_ProgressScale() 
{
  nativeHandle = new Message_ProgressScale();
}

 void OCMessage_ProgressScale::SetName(System::String^ theName)
{
  ((Message_ProgressScale*)nativeHandle)->SetName(OCConverter::StringToStandardCString(theName));
}

 void OCMessage_ProgressScale::SetName(OCNaroWrappers::OCTCollection_HAsciiString^ theName)
{
  ((Message_ProgressScale*)nativeHandle)->SetName(*((Handle_TCollection_HAsciiString*)theName->Handle));
}

OCTCollection_HAsciiString^ OCMessage_ProgressScale::GetName()
{
  Handle(TCollection_HAsciiString) tmp = ((Message_ProgressScale*)nativeHandle)->GetName();
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCMessage_ProgressScale::SetMin(Standard_Real theMin)
{
  ((Message_ProgressScale*)nativeHandle)->SetMin(theMin);
}

 Standard_Real OCMessage_ProgressScale::GetMin()
{
  return ((Message_ProgressScale*)nativeHandle)->GetMin();
}

 void OCMessage_ProgressScale::SetMax(Standard_Real theMax)
{
  ((Message_ProgressScale*)nativeHandle)->SetMax(theMax);
}

 Standard_Real OCMessage_ProgressScale::GetMax()
{
  return ((Message_ProgressScale*)nativeHandle)->GetMax();
}

 void OCMessage_ProgressScale::SetRange(Standard_Real min, Standard_Real max)
{
  ((Message_ProgressScale*)nativeHandle)->SetRange(min, max);
}

 void OCMessage_ProgressScale::SetStep(Standard_Real theStep)
{
  ((Message_ProgressScale*)nativeHandle)->SetStep(theStep);
}

 Standard_Real OCMessage_ProgressScale::GetStep()
{
  return ((Message_ProgressScale*)nativeHandle)->GetStep();
}

 void OCMessage_ProgressScale::SetInfinite(System::Boolean theInfinite)
{
  ((Message_ProgressScale*)nativeHandle)->SetInfinite(OCConverter::BooleanToStandardBoolean(theInfinite));
}

 System::Boolean OCMessage_ProgressScale::GetInfinite()
{
  return OCConverter::StandardBooleanToBoolean(((Message_ProgressScale*)nativeHandle)->GetInfinite());
}

 void OCMessage_ProgressScale::SetScale(Standard_Real min, Standard_Real max, Standard_Real step, System::Boolean theInfinite)
{
  ((Message_ProgressScale*)nativeHandle)->SetScale(min, max, step, OCConverter::BooleanToStandardBoolean(theInfinite));
}

 void OCMessage_ProgressScale::SetSpan(Standard_Real first, Standard_Real last)
{
  ((Message_ProgressScale*)nativeHandle)->SetSpan(first, last);
}

 Standard_Real OCMessage_ProgressScale::GetFirst()
{
  return ((Message_ProgressScale*)nativeHandle)->GetFirst();
}

 Standard_Real OCMessage_ProgressScale::GetLast()
{
  return ((Message_ProgressScale*)nativeHandle)->GetLast();
}

 Standard_Real OCMessage_ProgressScale::LocalToBase(Standard_Real val)
{
  return ((Message_ProgressScale*)nativeHandle)->LocalToBase(val);
}

 Standard_Real OCMessage_ProgressScale::BaseToLocal(Standard_Real val)
{
  return ((Message_ProgressScale*)nativeHandle)->BaseToLocal(val);
}


