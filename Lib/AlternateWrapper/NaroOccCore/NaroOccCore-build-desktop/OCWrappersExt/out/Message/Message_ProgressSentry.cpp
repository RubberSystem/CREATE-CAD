// File generated by CPPExt (CPP file)
//

#include "Message_ProgressSentry.h"
#include "../Converter.h"
#include "Message_ProgressIndicator.h"
#include "../TCollection/TCollection_HAsciiString.h"


using namespace OCNaroWrappers;

OCMessage_ProgressSentry::OCMessage_ProgressSentry(Message_ProgressSentry* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCMessage_ProgressSentry::OCMessage_ProgressSentry(OCNaroWrappers::OCMessage_ProgressIndicator^ PI, System::String^ name, Standard_Real min, Standard_Real max, Standard_Real step, System::Boolean isInf, Standard_Real newScopeSpan) 
{
  nativeHandle = new Message_ProgressSentry(*((Handle_Message_ProgressIndicator*)PI->Handle), OCConverter::StringToStandardCString(name), min, max, step, OCConverter::BooleanToStandardBoolean(isInf), newScopeSpan);
}

OCMessage_ProgressSentry::OCMessage_ProgressSentry(OCNaroWrappers::OCMessage_ProgressIndicator^ PI, OCNaroWrappers::OCTCollection_HAsciiString^ name, Standard_Real min, Standard_Real max, Standard_Real step, System::Boolean isInf, Standard_Real newScopeSpan) 
{
  nativeHandle = new Message_ProgressSentry(*((Handle_Message_ProgressIndicator*)PI->Handle), *((Handle_TCollection_HAsciiString*)name->Handle), min, max, step, OCConverter::BooleanToStandardBoolean(isInf), newScopeSpan);
}

 void OCMessage_ProgressSentry::Next(System::String^ name)
{
  ((Message_ProgressSentry*)nativeHandle)->Next(OCConverter::StringToStandardCString(name));
}

 void OCMessage_ProgressSentry::Next(Standard_Real span, System::String^ name)
{
  ((Message_ProgressSentry*)nativeHandle)->Next(span, OCConverter::StringToStandardCString(name));
}

 void OCMessage_ProgressSentry::Next(Standard_Real span, OCNaroWrappers::OCTCollection_HAsciiString^ name)
{
  ((Message_ProgressSentry*)nativeHandle)->Next(span, *((Handle_TCollection_HAsciiString*)name->Handle));
}

 System::Boolean OCMessage_ProgressSentry::More()
{
  return OCConverter::StandardBooleanToBoolean(((Message_ProgressSentry*)nativeHandle)->More());
}

 void OCMessage_ProgressSentry::Show()
{
  ((Message_ProgressSentry*)nativeHandle)->Show();
}


