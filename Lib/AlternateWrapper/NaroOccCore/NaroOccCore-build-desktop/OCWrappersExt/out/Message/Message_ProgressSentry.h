// File generated by CPPExt (MPV)
//
#ifndef _Message_ProgressSentry_OCWrappers_HeaderFile
#define _Message_ProgressSentry_OCWrappers_HeaderFile

// include native header
#include <Message_ProgressSentry.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCMessage_ProgressIndicator;
ref class OCTCollection_HAsciiString;


//! This class is a tool allowing to manage opening/closing <br>
//!          scopes in the ProgressIndicator in convenient and safe way. <br>
public ref class OCMessage_ProgressSentry  {

protected:
  Message_ProgressSentry* nativeHandle;
  OCMessage_ProgressSentry(OCDummy^) {};

public:
  property Message_ProgressSentry* Handle
  {
    Message_ProgressSentry* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCMessage_ProgressSentry(Message_ProgressSentry* nativeHandle);

// Methods PUBLIC


OCMessage_ProgressSentry(OCNaroWrappers::OCMessage_ProgressIndicator^ PI, System::String^ name, Standard_Real min, Standard_Real max, Standard_Real step, System::Boolean isInf, Standard_Real newScopeSpan);

//! Creates an instance of ProgressSentry attaching it to <br>
//!          the specified ProgressIndicator, selects parameters of <br>
//!          the current scale, and opens a new scope with specified <br>
//!          span (equal to step by default) <br>
OCMessage_ProgressSentry(OCNaroWrappers::OCMessage_ProgressIndicator^ PI, OCNaroWrappers::OCTCollection_HAsciiString^ name, Standard_Real min, Standard_Real max, Standard_Real step, System::Boolean isInf, Standard_Real newScopeSpan);


 /*instead*/  void Next(System::String^ name) ;


 /*instead*/  void Next(Standard_Real span, System::String^ name) ;

//! Closes current scope and opens next one <br>
//!          with either specified or default span <br>
 /*instead*/  void Next(Standard_Real span, OCNaroWrappers::OCTCollection_HAsciiString^ name) ;

//! Returns False if ProgressIndicator signals UserBreak <br>
 /*instead*/  System::Boolean More() ;

//! Forces update of progress indicator display <br>
 /*instead*/  void Show() ;

~OCMessage_ProgressSentry()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
