// File generated by CPPExt (CPP file)
//

#include "FEmTool_LinearTension.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HArray2OfInteger.h"
#include "../math/math_Matrix.h"
#include "../math/math_Vector.h"


using namespace OCNaroWrappers;

OCFEmTool_LinearTension::OCFEmTool_LinearTension(Handle(FEmTool_LinearTension)* nativeHandle) : OCFEmTool_ElementaryCriterion((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_FEmTool_LinearTension(*nativeHandle);
}

OCFEmTool_LinearTension::OCFEmTool_LinearTension(Standard_Integer WorkDegree, OCGeomAbs_Shape ConstraintOrder) : OCFEmTool_ElementaryCriterion((OCDummy^)nullptr)

{
  nativeHandle = new Handle_FEmTool_LinearTension(new FEmTool_LinearTension(WorkDegree, (GeomAbs_Shape)ConstraintOrder));
}

OCTColStd_HArray2OfInteger^ OCFEmTool_LinearTension::DependenceTable()
{
  Handle(TColStd_HArray2OfInteger) tmp = (*((Handle_FEmTool_LinearTension*)nativeHandle))->DependenceTable();
  return gcnew OCTColStd_HArray2OfInteger(&tmp);
}

 Standard_Real OCFEmTool_LinearTension::Value()
{
  return (*((Handle_FEmTool_LinearTension*)nativeHandle))->Value();
}

 void OCFEmTool_LinearTension::Hessian(Standard_Integer Dimension1, Standard_Integer Dimension2, OCNaroWrappers::OCmath_Matrix^ H)
{
  (*((Handle_FEmTool_LinearTension*)nativeHandle))->Hessian(Dimension1, Dimension2, *((math_Matrix*)H->Handle));
}

 void OCFEmTool_LinearTension::Gradient(Standard_Integer Dimension, OCNaroWrappers::OCmath_Vector^ G)
{
  (*((Handle_FEmTool_LinearTension*)nativeHandle))->Gradient(Dimension, *((math_Vector*)G->Handle));
}


