// File generated by CPPExt (Transient)
//
#ifndef _FEmTool_ProfileMatrix_OCWrappers_HeaderFile
#define _FEmTool_ProfileMatrix_OCWrappers_HeaderFile

// include the wrapped class
#include <FEmTool_ProfileMatrix.hxx>
#include "../Converter.h"

#include "FEmTool_SparseMatrix.h"

#include "../TColStd/TColStd_Array2OfInteger.h"


namespace OCNaroWrappers
{

ref class OCTColStd_HArray1OfReal;
ref class OCTColStd_HArray1OfInteger;
ref class OCTColStd_Array1OfInteger;
ref class OCmath_Vector;


//! Symmetric Sparse ProfileMatrix useful  for 1D Finite <br>
//!          Element methods <br>
public ref class OCFEmTool_ProfileMatrix : OCFEmTool_SparseMatrix {

protected:
  // dummy constructor;
  OCFEmTool_ProfileMatrix(OCDummy^) : OCFEmTool_SparseMatrix((OCDummy^)nullptr) {};

public:

// constructor from native
OCFEmTool_ProfileMatrix(Handle(FEmTool_ProfileMatrix)* nativeHandle);

// Methods PUBLIC


OCFEmTool_ProfileMatrix(OCNaroWrappers::OCTColStd_Array1OfInteger^ FirstIndexes);


 /*instead*/  void Init(Standard_Real Value) ;


 /*instead*/  Standard_Real ChangeValue(Standard_Integer I, Standard_Integer J) ;

//! To make a Factorization of <me> <br>
 /*instead*/  System::Boolean Decompose() ;

//! Direct Solve of AX = B <br>
 /*instead*/  void Solve(OCNaroWrappers::OCmath_Vector^ B, OCNaroWrappers::OCmath_Vector^ X) ;

//! Make Preparation to iterative solve <br>
 /*instead*/  System::Boolean Prepare() ;

//! Iterative solve  of AX = B <br>
 /*instead*/  void Solve(OCNaroWrappers::OCmath_Vector^ B, OCNaroWrappers::OCmath_Vector^ Init, OCNaroWrappers::OCmath_Vector^ X, OCNaroWrappers::OCmath_Vector^ Residual, Standard_Real Tolerance, Standard_Integer NbIterations) ;

//! returns the product of a SparseMatrix by a vector. <br>
//!          An exception is raised if the dimensions are different <br>
 /*instead*/  void Multiplied(OCNaroWrappers::OCmath_Vector^ X, OCNaroWrappers::OCmath_Vector^ MX) ;

//! returns the row range of a matrix. <br>
 /*instead*/  Standard_Integer RowNumber() ;

//! returns the column range of the matrix. <br>
 /*instead*/  Standard_Integer ColNumber() ;


 /*instead*/  System::Boolean IsInProfile(Standard_Integer i, Standard_Integer j) ;


 /*instead*/  void OutM() ;


 /*instead*/  void OutS() ;

~OCFEmTool_ProfileMatrix()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
