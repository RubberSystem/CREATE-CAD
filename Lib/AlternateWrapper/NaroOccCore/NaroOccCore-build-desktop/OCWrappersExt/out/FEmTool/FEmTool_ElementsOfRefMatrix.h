// File generated by CPPExt (MPV)
//
#ifndef _FEmTool_ElementsOfRefMatrix_OCWrappers_HeaderFile
#define _FEmTool_ElementsOfRefMatrix_OCWrappers_HeaderFile

// include native header
#include <FEmTool_ElementsOfRefMatrix.hxx>
#include "../Converter.h"

#include "../math/math_FunctionSet.h"

#include "../math/math_FunctionSet.h"


namespace OCNaroWrappers
{

ref class OCPLib_Base;
ref class OCmath_Vector;


//! this  class  describes  the  functions  needed  for <br>
//!          calculating  matrix  elements  of  RefMatrix  for  linear <br>
//!          criteriums  (Tension,  Flexsion  and  Jerk). <br>
//!          Each  function  from  set  gives  value  Pi(u)'*Pj(u)'  or <br>
//!          Pi(u)''*Pj(u)''  or  Pi(u)'''*Pj(u)'''  for  each  i  and  j, <br>
//!          where  Pi(u)  is  i-th  basis  function  of  expansion  and <br>
//!          (')  means  derivative. <br>
public ref class OCFEmTool_ElementsOfRefMatrix  : public OCmath_FunctionSet {

protected:
  // dummy constructor;
  OCFEmTool_ElementsOfRefMatrix(OCDummy^) : OCmath_FunctionSet((OCDummy^)nullptr) {};

public:

// constructor from native
OCFEmTool_ElementsOfRefMatrix(FEmTool_ElementsOfRefMatrix* nativeHandle);

// Methods PUBLIC


OCFEmTool_ElementsOfRefMatrix(OCNaroWrappers::OCPLib_Base^ TheBase, Standard_Integer DerOrder);

//! returns the number of variables of the function. <br>
//!  It  is  supposed  that  NbVariables  =  1. <br>
 /*instead*/  Standard_Integer NbVariables() ;

//! returns the number of equations of the function. <br>
 /*instead*/  Standard_Integer NbEquations() ;

//! computes the values <F> of the functions for the <br>
//!          variable <X>. <br>
//!          returns True if the computation was done successfully, <br>
//!          False otherwise. <br>
//!          F  contains  results  only  for  i<=j  in  following  order: <br>
//!          P0*P0,  P0*P1,  P0*P2...  P1*P1,  P1*P2,...  (upper  triangle of <br>
//!          matrix  {PiPj}) <br>
 /*instead*/  System::Boolean Value(OCNaroWrappers::OCmath_Vector^ X, OCNaroWrappers::OCmath_Vector^ F) ;

~OCFEmTool_ElementsOfRefMatrix()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
