// File generated by CPPExt (CPP file)
//

#include "FEmTool_LinearJerk.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HArray2OfInteger.h"
#include "../math/math_Matrix.h"
#include "../math/math_Vector.h"


using namespace OCNaroWrappers;

OCFEmTool_LinearJerk::OCFEmTool_LinearJerk(Handle(FEmTool_LinearJerk)* nativeHandle) : OCFEmTool_ElementaryCriterion((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_FEmTool_LinearJerk(*nativeHandle);
}

OCFEmTool_LinearJerk::OCFEmTool_LinearJerk(Standard_Integer WorkDegree, OCGeomAbs_Shape ConstraintOrder) : OCFEmTool_ElementaryCriterion((OCDummy^)nullptr)

{
  nativeHandle = new Handle_FEmTool_LinearJerk(new FEmTool_LinearJerk(WorkDegree, (GeomAbs_Shape)ConstraintOrder));
}

OCTColStd_HArray2OfInteger^ OCFEmTool_LinearJerk::DependenceTable()
{
  Handle(TColStd_HArray2OfInteger) tmp = (*((Handle_FEmTool_LinearJerk*)nativeHandle))->DependenceTable();
  return gcnew OCTColStd_HArray2OfInteger(&tmp);
}

 Standard_Real OCFEmTool_LinearJerk::Value()
{
  return (*((Handle_FEmTool_LinearJerk*)nativeHandle))->Value();
}

 void OCFEmTool_LinearJerk::Hessian(Standard_Integer Dimension1, Standard_Integer Dimension2, OCNaroWrappers::OCmath_Matrix^ H)
{
  (*((Handle_FEmTool_LinearJerk*)nativeHandle))->Hessian(Dimension1, Dimension2, *((math_Matrix*)H->Handle));
}

 void OCFEmTool_LinearJerk::Gradient(Standard_Integer Dimension, OCNaroWrappers::OCmath_Vector^ G)
{
  (*((Handle_FEmTool_LinearJerk*)nativeHandle))->Gradient(Dimension, *((math_Vector*)G->Handle));
}


