// File generated by CPPExt (Transient)
//
#ifndef _FEmTool_LinearFlexion_OCWrappers_HeaderFile
#define _FEmTool_LinearFlexion_OCWrappers_HeaderFile

// include the wrapped class
#include <FEmTool_LinearFlexion.hxx>
#include "../Converter.h"

#include "FEmTool_ElementaryCriterion.h"

#include "../math/math_Matrix.h"
#include "../GeomAbs/GeomAbs_Shape.h"


namespace OCNaroWrappers
{

ref class OCTColStd_HArray2OfInteger;
ref class OCmath_Matrix;
ref class OCmath_Vector;


//! Criterium of LinearFlexion To Hermit-Jacobi  elements <br>
public ref class OCFEmTool_LinearFlexion : OCFEmTool_ElementaryCriterion {

protected:
  // dummy constructor;
  OCFEmTool_LinearFlexion(OCDummy^) : OCFEmTool_ElementaryCriterion((OCDummy^)nullptr) {};

public:

// constructor from native
OCFEmTool_LinearFlexion(Handle(FEmTool_LinearFlexion)* nativeHandle);

// Methods PUBLIC


OCFEmTool_LinearFlexion(Standard_Integer WorkDegree, OCGeomAbs_Shape ConstraintOrder);


virtual /*instead*/  OCTColStd_HArray2OfInteger^ DependenceTable() ;


virtual /*instead*/  Standard_Real Value() ;


virtual /*instead*/  void Hessian(Standard_Integer Dimension1, Standard_Integer Dimension2, OCNaroWrappers::OCmath_Matrix^ H) ;


virtual /*instead*/  void Gradient(Standard_Integer Dimension, OCNaroWrappers::OCmath_Vector^ G) ;

~OCFEmTool_LinearFlexion()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
