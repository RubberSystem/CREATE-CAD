// File generated by CPPExt (Package)
//

#ifndef _Law_OCWrappers_HeaderFile
#define _Law_OCWrappers_HeaderFile

// Include the wrapped header
#include <Law.hxx>

#include "Law_BSpline.h"
#include "Law_Interpolate.h"
#include "Law_Function.h"
#include "Law_Constant.h"
#include "Law_Linear.h"
#include "Law_BSpFunc.h"
#include "Law_S.h"
#include "Law_Interpol.h"
#include "Law_Laws.h"
#include "Law_Composite.h"
#include "Law_BSplineKnotSplitting.h"
#include "Law_ListNodeOfLaws.h"
#include "Law_ListIteratorOfLaws.h"


namespace OCNaroWrappers
{
//! Multiple services concerning 1d functions. <br>
public ref class OCLaw abstract sealed
{

public:
// Methods


static /*instead*/  OCLaw_BSpFunc^ MixBnd(OCNaroWrappers::OCLaw_Linear^ Lin) ;


static /*instead*/  OCTColStd_HArray1OfReal^ MixBnd(Standard_Integer Degree, OCNaroWrappers::OCTColStd_Array1OfReal^ Knots, OCNaroWrappers::OCTColStd_Array1OfInteger^ Mults, OCNaroWrappers::OCLaw_Linear^ Lin) ;


static /*instead*/  OCTColStd_HArray1OfReal^ MixTgt(Standard_Integer Degree, OCNaroWrappers::OCTColStd_Array1OfReal^ Knots, OCNaroWrappers::OCTColStd_Array1OfInteger^ Mults, System::Boolean NulOnTheRight, Standard_Integer Index) ;

//! Computes a 1 d curve to  reparametrize a curve. Its an <br>
//!          interpolation of NbPoints  points calculated  at quasi <br>
//!          constant abscissa. <br>
static /*instead*/  OCLaw_BSpline^ Reparametrize(OCNaroWrappers::OCAdaptor3d_Curve^ Curve, Standard_Real First, Standard_Real Last, System::Boolean HasDF, System::Boolean HasDL, Standard_Real DFirst, Standard_Real DLast, System::Boolean Rev, Standard_Integer NbPoints) ;

//! Computes a 1  d curve to  scale  a field of  tangency. <br>
//!          Value is 1. for t = (First+Last)/2 . <br>
//!          If HasFirst value for t = First is VFirst (null derivative). <br>
//!          If HasLast value for t = Last is VLast (null derivative). <br>
static /*instead*/  OCLaw_BSpline^ Scale(Standard_Real First, Standard_Real Last, System::Boolean HasF, System::Boolean HasL, Standard_Real VFirst, Standard_Real VLast) ;


static /*instead*/  OCLaw_BSpline^ ScaleCub(Standard_Real First, Standard_Real Last, System::Boolean HasF, System::Boolean HasL, Standard_Real VFirst, Standard_Real VLast) ;


};

}; // OCNaroWrappers

#endif
