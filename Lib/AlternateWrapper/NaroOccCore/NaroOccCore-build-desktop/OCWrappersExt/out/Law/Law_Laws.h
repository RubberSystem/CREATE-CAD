// File generated by CPPExt (MPV)
//
#ifndef _Law_Laws_OCWrappers_HeaderFile
#define _Law_Laws_OCWrappers_HeaderFile

// include native header
#include <Law_Laws.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCLaw_ListIteratorOfLaws;
ref class OCLaw_Function;
ref class OCLaw_ListNodeOfLaws;



public ref class OCLaw_Laws  {

protected:
  Law_Laws* nativeHandle;
  OCLaw_Laws(OCDummy^) {};

public:
  property Law_Laws* Handle
  {
    Law_Laws* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCLaw_Laws(Law_Laws* nativeHandle);

// Methods PUBLIC


OCLaw_Laws();


 /*instead*/  void Assign(OCNaroWrappers::OCLaw_Laws^ Other) ;


 /*instead*/  Standard_Integer Extent() ;


 /*instead*/  System::Boolean IsEmpty() ;


 /*instead*/  void Prepend(OCNaroWrappers::OCLaw_Function^ I) ;


 /*instead*/  void Prepend(OCNaroWrappers::OCLaw_Function^ I, OCNaroWrappers::OCLaw_ListIteratorOfLaws^ theIt) ;


 /*instead*/  void Prepend(OCNaroWrappers::OCLaw_Laws^ Other) ;


 /*instead*/  void Append(OCNaroWrappers::OCLaw_Function^ I) ;


 /*instead*/  void Append(OCNaroWrappers::OCLaw_Function^ I, OCNaroWrappers::OCLaw_ListIteratorOfLaws^ theIt) ;


 /*instead*/  void Append(OCNaroWrappers::OCLaw_Laws^ Other) ;


 /*instead*/  OCLaw_Function^ First() ;


 /*instead*/  OCLaw_Function^ Last() ;


 /*instead*/  void RemoveFirst() ;


 /*instead*/  void Remove(OCNaroWrappers::OCLaw_ListIteratorOfLaws^ It) ;


 /*instead*/  void InsertBefore(OCNaroWrappers::OCLaw_Function^ I, OCNaroWrappers::OCLaw_ListIteratorOfLaws^ It) ;


 /*instead*/  void InsertBefore(OCNaroWrappers::OCLaw_Laws^ Other, OCNaroWrappers::OCLaw_ListIteratorOfLaws^ It) ;


 /*instead*/  void InsertAfter(OCNaroWrappers::OCLaw_Function^ I, OCNaroWrappers::OCLaw_ListIteratorOfLaws^ It) ;


 /*instead*/  void InsertAfter(OCNaroWrappers::OCLaw_Laws^ Other, OCNaroWrappers::OCLaw_ListIteratorOfLaws^ It) ;

~OCLaw_Laws()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
