// File generated by CPPExt (Transient)
//
#ifndef _Law_Interpol_OCWrappers_HeaderFile
#define _Law_Interpol_OCWrappers_HeaderFile

// include the wrapped class
#include <Law_Interpol.hxx>
#include "../Converter.h"

#include "Law_BSpFunc.h"



namespace OCNaroWrappers
{

ref class OCTColgp_Array1OfPnt2d;


//! Provides an evolution law that interpolates a set <br>
//!          of parameter and value pairs (wi, radi) <br>
public ref class OCLaw_Interpol : OCLaw_BSpFunc {

protected:
  // dummy constructor;
  OCLaw_Interpol(OCDummy^) : OCLaw_BSpFunc((OCDummy^)nullptr) {};

public:

// constructor from native
OCLaw_Interpol(Handle(Law_Interpol)* nativeHandle);

// Methods PUBLIC

//! Constructs an empty interpolative evolution law. <br>
//! The function Set is used to define the law. <br>
OCLaw_Interpol();


//!    Defines this evolution law by interpolating the set of 2D <br>
//! points ParAndRad. The Y coordinate of a point of <br>
//! ParAndRad is the value of the function at the parameter <br>
//! point given by its X coordinate. <br>
//! If Periodic is true, this function is assumed to be periodic. <br>
//! Warning <br>
//! -   The X coordinates of points in the table ParAndRad <br>
//!   must be given in ascendant order. <br>
//! -   If Periodic is true, the first and last Y coordinates of <br>
//!   points in the table ParAndRad are assumed to be <br>
//!   equal. In addition, with the second syntax, Dd and Df <br>
//!   are also assumed to be equal. If this is not the case, <br>
//!   Set uses the first value(s) as last value(s). <br>
 /*instead*/  void Set(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ ParAndRad, System::Boolean Periodic) ;


 /*instead*/  void SetInRelative(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ ParAndRad, Standard_Real Ud, Standard_Real Uf, System::Boolean Periodic) ;


//!    Defines this evolution law by interpolating the set of 2D <br>
//! points ParAndRad. The Y coordinate of a point of <br>
//! ParAndRad is the value of the function at the parameter <br>
//! point given by its X coordinate. <br>
//! If Periodic is true, this function is assumed to be periodic. <br>
//! In the second syntax, Dd and Df define the values of <br>
//! the first derivative of the function at its first and last points. <br>
//! Warning <br>
//! -   The X coordinates of points in the table ParAndRad <br>
//!   must be given in ascendant order. <br>
//! -   If Periodic is true, the first and last Y coordinates of <br>
//!   points in the table ParAndRad are assumed to be <br>
//!   equal. In addition, with the second syntax, Dd and Df <br>
//!   are also assumed to be equal. If this is not the case, <br>
//!   Set uses the first value(s) as last value(s). <br>
 /*instead*/  void Set(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ ParAndRad, Standard_Real Dd, Standard_Real Df, System::Boolean Periodic) ;


 /*instead*/  void SetInRelative(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ ParAndRad, Standard_Real Ud, Standard_Real Uf, Standard_Real Dd, Standard_Real Df, System::Boolean Periodic) ;

~OCLaw_Interpol()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
