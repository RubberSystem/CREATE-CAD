// File generated by CPPExt (CPP file)
//

#include "Law_Linear.h"
#include "../Converter.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "Law_Function.h"


using namespace OCNaroWrappers;

OCLaw_Linear::OCLaw_Linear(Handle(Law_Linear)* nativeHandle) : OCLaw_Function((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Law_Linear(*nativeHandle);
}

OCLaw_Linear::OCLaw_Linear() : OCLaw_Function((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Law_Linear(new Law_Linear());
}

 void OCLaw_Linear::Set(Standard_Real Pdeb, Standard_Real Valdeb, Standard_Real Pfin, Standard_Real Valfin)
{
  (*((Handle_Law_Linear*)nativeHandle))->Set(Pdeb, Valdeb, Pfin, Valfin);
}

 OCGeomAbs_Shape OCLaw_Linear::Continuity()
{
  return (OCGeomAbs_Shape)((*((Handle_Law_Linear*)nativeHandle))->Continuity());
}

 Standard_Integer OCLaw_Linear::NbIntervals(OCGeomAbs_Shape S)
{
  return (*((Handle_Law_Linear*)nativeHandle))->NbIntervals((GeomAbs_Shape)S);
}

 void OCLaw_Linear::Intervals(OCNaroWrappers::OCTColStd_Array1OfReal^ T, OCGeomAbs_Shape S)
{
  (*((Handle_Law_Linear*)nativeHandle))->Intervals(*((TColStd_Array1OfReal*)T->Handle), (GeomAbs_Shape)S);
}

 Standard_Real OCLaw_Linear::Value(Standard_Real X)
{
  return (*((Handle_Law_Linear*)nativeHandle))->Value(X);
}

 void OCLaw_Linear::D1(Standard_Real X, Standard_Real& F, Standard_Real& D)
{
  (*((Handle_Law_Linear*)nativeHandle))->D1(X, F, D);
}

 void OCLaw_Linear::D2(Standard_Real X, Standard_Real& F, Standard_Real& D, Standard_Real& D2)
{
  (*((Handle_Law_Linear*)nativeHandle))->D2(X, F, D, D2);
}

OCLaw_Function^ OCLaw_Linear::Trim(Standard_Real PFirst, Standard_Real PLast, Standard_Real Tol)
{
  Handle(Law_Function) tmp = (*((Handle_Law_Linear*)nativeHandle))->Trim(PFirst, PLast, Tol);
  return gcnew OCLaw_Function(&tmp);
}

 void OCLaw_Linear::Bounds(Standard_Real& PFirst, Standard_Real& PLast)
{
  (*((Handle_Law_Linear*)nativeHandle))->Bounds(PFirst, PLast);
}


