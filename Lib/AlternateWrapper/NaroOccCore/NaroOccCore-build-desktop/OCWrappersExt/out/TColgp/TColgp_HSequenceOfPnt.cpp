// File generated by CPPExt (CPP file)
//

#include "TColgp_HSequenceOfPnt.h"
#include "../Converter.h"
#include "../gp/gp_Pnt.h"
#include "TColgp_SequenceOfPnt.h"


using namespace OCNaroWrappers;

OCTColgp_HSequenceOfPnt::OCTColgp_HSequenceOfPnt(Handle(TColgp_HSequenceOfPnt)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TColgp_HSequenceOfPnt(*nativeHandle);
}

OCTColgp_HSequenceOfPnt::OCTColgp_HSequenceOfPnt() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TColgp_HSequenceOfPnt(new TColgp_HSequenceOfPnt());
}

 System::Boolean OCTColgp_HSequenceOfPnt::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCTColgp_HSequenceOfPnt::Length()
{
  return (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Length();
}

 void OCTColgp_HSequenceOfPnt::Clear()
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Clear();
}

 void OCTColgp_HSequenceOfPnt::Append(OCNaroWrappers::OCgp_Pnt^ anItem)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Append(*((gp_Pnt*)anItem->Handle));
}

 void OCTColgp_HSequenceOfPnt::Append(OCNaroWrappers::OCTColgp_HSequenceOfPnt^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Append(*((Handle_TColgp_HSequenceOfPnt*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfPnt::Prepend(OCNaroWrappers::OCgp_Pnt^ anItem)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Prepend(*((gp_Pnt*)anItem->Handle));
}

 void OCTColgp_HSequenceOfPnt::Prepend(OCNaroWrappers::OCTColgp_HSequenceOfPnt^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Prepend(*((Handle_TColgp_HSequenceOfPnt*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfPnt::Reverse()
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Reverse();
}

 void OCTColgp_HSequenceOfPnt::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCgp_Pnt^ anItem)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->InsertBefore(anIndex, *((gp_Pnt*)anItem->Handle));
}

 void OCTColgp_HSequenceOfPnt::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCTColgp_HSequenceOfPnt^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->InsertBefore(anIndex, *((Handle_TColgp_HSequenceOfPnt*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfPnt::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCgp_Pnt^ anItem)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->InsertAfter(anIndex, *((gp_Pnt*)anItem->Handle));
}

 void OCTColgp_HSequenceOfPnt::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCTColgp_HSequenceOfPnt^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->InsertAfter(anIndex, *((Handle_TColgp_HSequenceOfPnt*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfPnt::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCTColgp_HSequenceOfPnt^ OCTColgp_HSequenceOfPnt::Split(Standard_Integer anIndex)
{
  Handle(TColgp_HSequenceOfPnt) tmp = (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Split(anIndex);
  return gcnew OCTColgp_HSequenceOfPnt(&tmp);
}

 void OCTColgp_HSequenceOfPnt::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCgp_Pnt^ anItem)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->SetValue(anIndex, *((gp_Pnt*)anItem->Handle));
}

OCgp_Pnt^ OCTColgp_HSequenceOfPnt::Value(Standard_Integer anIndex)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Value(anIndex);
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCTColgp_HSequenceOfPnt::ChangeValue(Standard_Integer anIndex)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCgp_Pnt(tmp);
}

 void OCTColgp_HSequenceOfPnt::Remove(Standard_Integer anIndex)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Remove(anIndex);
}

 void OCTColgp_HSequenceOfPnt::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCTColgp_SequenceOfPnt^ OCTColgp_HSequenceOfPnt::Sequence()
{
  TColgp_SequenceOfPnt* tmp = new TColgp_SequenceOfPnt();
  *tmp = (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->Sequence();
  return gcnew OCTColgp_SequenceOfPnt(tmp);
}

OCTColgp_SequenceOfPnt^ OCTColgp_HSequenceOfPnt::ChangeSequence()
{
  TColgp_SequenceOfPnt* tmp = new TColgp_SequenceOfPnt();
  *tmp = (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->ChangeSequence();
  return gcnew OCTColgp_SequenceOfPnt(tmp);
}

OCTColgp_HSequenceOfPnt^ OCTColgp_HSequenceOfPnt::ShallowCopy()
{
  Handle(TColgp_HSequenceOfPnt) tmp = (*((Handle_TColgp_HSequenceOfPnt*)nativeHandle))->ShallowCopy();
  return gcnew OCTColgp_HSequenceOfPnt(&tmp);
}


