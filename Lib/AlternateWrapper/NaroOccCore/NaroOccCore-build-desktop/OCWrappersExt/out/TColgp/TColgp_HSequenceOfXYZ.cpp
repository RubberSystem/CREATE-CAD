// File generated by CPPExt (CPP file)
//

#include "TColgp_HSequenceOfXYZ.h"
#include "../Converter.h"
#include "../gp/gp_XYZ.h"
#include "TColgp_SequenceOfXYZ.h"


using namespace OCNaroWrappers;

OCTColgp_HSequenceOfXYZ::OCTColgp_HSequenceOfXYZ(Handle(TColgp_HSequenceOfXYZ)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TColgp_HSequenceOfXYZ(*nativeHandle);
}

OCTColgp_HSequenceOfXYZ::OCTColgp_HSequenceOfXYZ() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TColgp_HSequenceOfXYZ(new TColgp_HSequenceOfXYZ());
}

 System::Boolean OCTColgp_HSequenceOfXYZ::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCTColgp_HSequenceOfXYZ::Length()
{
  return (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Length();
}

 void OCTColgp_HSequenceOfXYZ::Clear()
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Clear();
}

 void OCTColgp_HSequenceOfXYZ::Append(OCNaroWrappers::OCgp_XYZ^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Append(*((gp_XYZ*)anItem->Handle));
}

 void OCTColgp_HSequenceOfXYZ::Append(OCNaroWrappers::OCTColgp_HSequenceOfXYZ^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Append(*((Handle_TColgp_HSequenceOfXYZ*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfXYZ::Prepend(OCNaroWrappers::OCgp_XYZ^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Prepend(*((gp_XYZ*)anItem->Handle));
}

 void OCTColgp_HSequenceOfXYZ::Prepend(OCNaroWrappers::OCTColgp_HSequenceOfXYZ^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Prepend(*((Handle_TColgp_HSequenceOfXYZ*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfXYZ::Reverse()
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Reverse();
}

 void OCTColgp_HSequenceOfXYZ::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCgp_XYZ^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->InsertBefore(anIndex, *((gp_XYZ*)anItem->Handle));
}

 void OCTColgp_HSequenceOfXYZ::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCTColgp_HSequenceOfXYZ^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->InsertBefore(anIndex, *((Handle_TColgp_HSequenceOfXYZ*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfXYZ::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCgp_XYZ^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->InsertAfter(anIndex, *((gp_XYZ*)anItem->Handle));
}

 void OCTColgp_HSequenceOfXYZ::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCTColgp_HSequenceOfXYZ^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->InsertAfter(anIndex, *((Handle_TColgp_HSequenceOfXYZ*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfXYZ::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCTColgp_HSequenceOfXYZ^ OCTColgp_HSequenceOfXYZ::Split(Standard_Integer anIndex)
{
  Handle(TColgp_HSequenceOfXYZ) tmp = (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Split(anIndex);
  return gcnew OCTColgp_HSequenceOfXYZ(&tmp);
}

 void OCTColgp_HSequenceOfXYZ::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCgp_XYZ^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->SetValue(anIndex, *((gp_XYZ*)anItem->Handle));
}

OCgp_XYZ^ OCTColgp_HSequenceOfXYZ::Value(Standard_Integer anIndex)
{
  gp_XYZ* tmp = new gp_XYZ();
  *tmp = (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Value(anIndex);
  return gcnew OCgp_XYZ(tmp);
}

OCgp_XYZ^ OCTColgp_HSequenceOfXYZ::ChangeValue(Standard_Integer anIndex)
{
  gp_XYZ* tmp = new gp_XYZ();
  *tmp = (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCgp_XYZ(tmp);
}

 void OCTColgp_HSequenceOfXYZ::Remove(Standard_Integer anIndex)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Remove(anIndex);
}

 void OCTColgp_HSequenceOfXYZ::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCTColgp_SequenceOfXYZ^ OCTColgp_HSequenceOfXYZ::Sequence()
{
  TColgp_SequenceOfXYZ* tmp = new TColgp_SequenceOfXYZ();
  *tmp = (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->Sequence();
  return gcnew OCTColgp_SequenceOfXYZ(tmp);
}

OCTColgp_SequenceOfXYZ^ OCTColgp_HSequenceOfXYZ::ChangeSequence()
{
  TColgp_SequenceOfXYZ* tmp = new TColgp_SequenceOfXYZ();
  *tmp = (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->ChangeSequence();
  return gcnew OCTColgp_SequenceOfXYZ(tmp);
}

OCTColgp_HSequenceOfXYZ^ OCTColgp_HSequenceOfXYZ::ShallowCopy()
{
  Handle(TColgp_HSequenceOfXYZ) tmp = (*((Handle_TColgp_HSequenceOfXYZ*)nativeHandle))->ShallowCopy();
  return gcnew OCTColgp_HSequenceOfXYZ(&tmp);
}


