// File generated by CPPExt (CPP file)
//

#include "TColgp_SequenceOfVec.h"
#include "../Converter.h"
#include "../gp/gp_Vec.h"
#include "TColgp_SequenceNodeOfSequenceOfVec.h"


using namespace OCNaroWrappers;

OCTColgp_SequenceOfVec::OCTColgp_SequenceOfVec(TColgp_SequenceOfVec* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTColgp_SequenceOfVec::OCTColgp_SequenceOfVec() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new TColgp_SequenceOfVec();
}

OCTColgp_SequenceOfVec^ OCTColgp_SequenceOfVec::Assign(OCNaroWrappers::OCTColgp_SequenceOfVec^ Other)
{
  TColgp_SequenceOfVec* tmp = new TColgp_SequenceOfVec();
  *tmp = ((TColgp_SequenceOfVec*)nativeHandle)->Assign(*((TColgp_SequenceOfVec*)Other->Handle));
  return gcnew OCTColgp_SequenceOfVec(tmp);
}

 void OCTColgp_SequenceOfVec::Append(OCNaroWrappers::OCgp_Vec^ T)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->Append(*((gp_Vec*)T->Handle));
}

 void OCTColgp_SequenceOfVec::Append(OCNaroWrappers::OCTColgp_SequenceOfVec^ S)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->Append(*((TColgp_SequenceOfVec*)S->Handle));
}

 void OCTColgp_SequenceOfVec::Prepend(OCNaroWrappers::OCgp_Vec^ T)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->Prepend(*((gp_Vec*)T->Handle));
}

 void OCTColgp_SequenceOfVec::Prepend(OCNaroWrappers::OCTColgp_SequenceOfVec^ S)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->Prepend(*((TColgp_SequenceOfVec*)S->Handle));
}

 void OCTColgp_SequenceOfVec::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCgp_Vec^ T)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->InsertBefore(Index, *((gp_Vec*)T->Handle));
}

 void OCTColgp_SequenceOfVec::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTColgp_SequenceOfVec^ S)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->InsertBefore(Index, *((TColgp_SequenceOfVec*)S->Handle));
}

 void OCTColgp_SequenceOfVec::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCgp_Vec^ T)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->InsertAfter(Index, *((gp_Vec*)T->Handle));
}

 void OCTColgp_SequenceOfVec::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTColgp_SequenceOfVec^ S)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->InsertAfter(Index, *((TColgp_SequenceOfVec*)S->Handle));
}

OCgp_Vec^ OCTColgp_SequenceOfVec::First()
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ((TColgp_SequenceOfVec*)nativeHandle)->First();
  return gcnew OCgp_Vec(tmp);
}

OCgp_Vec^ OCTColgp_SequenceOfVec::Last()
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ((TColgp_SequenceOfVec*)nativeHandle)->Last();
  return gcnew OCgp_Vec(tmp);
}

 void OCTColgp_SequenceOfVec::Split(Standard_Integer Index, OCNaroWrappers::OCTColgp_SequenceOfVec^ Sub)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->Split(Index, *((TColgp_SequenceOfVec*)Sub->Handle));
}

OCgp_Vec^ OCTColgp_SequenceOfVec::Value(Standard_Integer Index)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ((TColgp_SequenceOfVec*)nativeHandle)->Value(Index);
  return gcnew OCgp_Vec(tmp);
}

 void OCTColgp_SequenceOfVec::SetValue(Standard_Integer Index, OCNaroWrappers::OCgp_Vec^ I)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->SetValue(Index, *((gp_Vec*)I->Handle));
}

OCgp_Vec^ OCTColgp_SequenceOfVec::ChangeValue(Standard_Integer Index)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = ((TColgp_SequenceOfVec*)nativeHandle)->ChangeValue(Index);
  return gcnew OCgp_Vec(tmp);
}

 void OCTColgp_SequenceOfVec::Remove(Standard_Integer Index)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->Remove(Index);
}

 void OCTColgp_SequenceOfVec::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((TColgp_SequenceOfVec*)nativeHandle)->Remove(FromIndex, ToIndex);
}


