// File generated by CPPExt (CPP file)
//

#include "TColgp_DataMapOfIntegerCirc2d.h"
#include "../Converter.h"
#include "../gp/gp_Circ2d.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "TColgp_DataMapNodeOfDataMapOfIntegerCirc2d.h"
#include "TColgp_DataMapIteratorOfDataMapOfIntegerCirc2d.h"


using namespace OCNaroWrappers;

OCTColgp_DataMapOfIntegerCirc2d::OCTColgp_DataMapOfIntegerCirc2d(TColgp_DataMapOfIntegerCirc2d* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTColgp_DataMapOfIntegerCirc2d::OCTColgp_DataMapOfIntegerCirc2d(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TColgp_DataMapOfIntegerCirc2d(NbBuckets);
}

OCTColgp_DataMapOfIntegerCirc2d^ OCTColgp_DataMapOfIntegerCirc2d::Assign(OCNaroWrappers::OCTColgp_DataMapOfIntegerCirc2d^ Other)
{
  TColgp_DataMapOfIntegerCirc2d* tmp = new TColgp_DataMapOfIntegerCirc2d(0);
  *tmp = ((TColgp_DataMapOfIntegerCirc2d*)nativeHandle)->Assign(*((TColgp_DataMapOfIntegerCirc2d*)Other->Handle));
  return gcnew OCTColgp_DataMapOfIntegerCirc2d(tmp);
}

 void OCTColgp_DataMapOfIntegerCirc2d::ReSize(Standard_Integer NbBuckets)
{
  ((TColgp_DataMapOfIntegerCirc2d*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCTColgp_DataMapOfIntegerCirc2d::Bind(Standard_Integer K, OCNaroWrappers::OCgp_Circ2d^ I)
{
  return OCConverter::StandardBooleanToBoolean(((TColgp_DataMapOfIntegerCirc2d*)nativeHandle)->Bind(K, *((gp_Circ2d*)I->Handle)));
}

 System::Boolean OCTColgp_DataMapOfIntegerCirc2d::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((TColgp_DataMapOfIntegerCirc2d*)nativeHandle)->IsBound(K));
}

 System::Boolean OCTColgp_DataMapOfIntegerCirc2d::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((TColgp_DataMapOfIntegerCirc2d*)nativeHandle)->UnBind(K));
}

OCgp_Circ2d^ OCTColgp_DataMapOfIntegerCirc2d::Find(Standard_Integer K)
{
  gp_Circ2d* tmp = new gp_Circ2d();
  *tmp = ((TColgp_DataMapOfIntegerCirc2d*)nativeHandle)->Find(K);
  return gcnew OCgp_Circ2d(tmp);
}

OCgp_Circ2d^ OCTColgp_DataMapOfIntegerCirc2d::ChangeFind(Standard_Integer K)
{
  gp_Circ2d* tmp = new gp_Circ2d();
  *tmp = ((TColgp_DataMapOfIntegerCirc2d*)nativeHandle)->ChangeFind(K);
  return gcnew OCgp_Circ2d(tmp);
}

 Standard_Address OCTColgp_DataMapOfIntegerCirc2d::Find1(Standard_Integer K)
{
  return ((TColgp_DataMapOfIntegerCirc2d*)nativeHandle)->Find1(K);
}

 Standard_Address OCTColgp_DataMapOfIntegerCirc2d::ChangeFind1(Standard_Integer K)
{
  return ((TColgp_DataMapOfIntegerCirc2d*)nativeHandle)->ChangeFind1(K);
}


