// File generated by CPPExt (CPP file)
//

#include "TColgp_HSequenceOfXY.h"
#include "../Converter.h"
#include "../gp/gp_XY.h"
#include "TColgp_SequenceOfXY.h"


using namespace OCNaroWrappers;

OCTColgp_HSequenceOfXY::OCTColgp_HSequenceOfXY(Handle(TColgp_HSequenceOfXY)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TColgp_HSequenceOfXY(*nativeHandle);
}

OCTColgp_HSequenceOfXY::OCTColgp_HSequenceOfXY() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TColgp_HSequenceOfXY(new TColgp_HSequenceOfXY());
}

 System::Boolean OCTColgp_HSequenceOfXY::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCTColgp_HSequenceOfXY::Length()
{
  return (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Length();
}

 void OCTColgp_HSequenceOfXY::Clear()
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Clear();
}

 void OCTColgp_HSequenceOfXY::Append(OCNaroWrappers::OCgp_XY^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Append(*((gp_XY*)anItem->Handle));
}

 void OCTColgp_HSequenceOfXY::Append(OCNaroWrappers::OCTColgp_HSequenceOfXY^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Append(*((Handle_TColgp_HSequenceOfXY*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfXY::Prepend(OCNaroWrappers::OCgp_XY^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Prepend(*((gp_XY*)anItem->Handle));
}

 void OCTColgp_HSequenceOfXY::Prepend(OCNaroWrappers::OCTColgp_HSequenceOfXY^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Prepend(*((Handle_TColgp_HSequenceOfXY*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfXY::Reverse()
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Reverse();
}

 void OCTColgp_HSequenceOfXY::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCgp_XY^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->InsertBefore(anIndex, *((gp_XY*)anItem->Handle));
}

 void OCTColgp_HSequenceOfXY::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCTColgp_HSequenceOfXY^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->InsertBefore(anIndex, *((Handle_TColgp_HSequenceOfXY*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfXY::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCgp_XY^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->InsertAfter(anIndex, *((gp_XY*)anItem->Handle));
}

 void OCTColgp_HSequenceOfXY::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCTColgp_HSequenceOfXY^ aSequence)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->InsertAfter(anIndex, *((Handle_TColgp_HSequenceOfXY*)aSequence->Handle));
}

 void OCTColgp_HSequenceOfXY::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCTColgp_HSequenceOfXY^ OCTColgp_HSequenceOfXY::Split(Standard_Integer anIndex)
{
  Handle(TColgp_HSequenceOfXY) tmp = (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Split(anIndex);
  return gcnew OCTColgp_HSequenceOfXY(&tmp);
}

 void OCTColgp_HSequenceOfXY::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCgp_XY^ anItem)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->SetValue(anIndex, *((gp_XY*)anItem->Handle));
}

OCgp_XY^ OCTColgp_HSequenceOfXY::Value(Standard_Integer anIndex)
{
  gp_XY* tmp = new gp_XY();
  *tmp = (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Value(anIndex);
  return gcnew OCgp_XY(tmp);
}

OCgp_XY^ OCTColgp_HSequenceOfXY::ChangeValue(Standard_Integer anIndex)
{
  gp_XY* tmp = new gp_XY();
  *tmp = (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCgp_XY(tmp);
}

 void OCTColgp_HSequenceOfXY::Remove(Standard_Integer anIndex)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Remove(anIndex);
}

 void OCTColgp_HSequenceOfXY::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCTColgp_SequenceOfXY^ OCTColgp_HSequenceOfXY::Sequence()
{
  TColgp_SequenceOfXY* tmp = new TColgp_SequenceOfXY();
  *tmp = (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->Sequence();
  return gcnew OCTColgp_SequenceOfXY(tmp);
}

OCTColgp_SequenceOfXY^ OCTColgp_HSequenceOfXY::ChangeSequence()
{
  TColgp_SequenceOfXY* tmp = new TColgp_SequenceOfXY();
  *tmp = (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->ChangeSequence();
  return gcnew OCTColgp_SequenceOfXY(tmp);
}

OCTColgp_HSequenceOfXY^ OCTColgp_HSequenceOfXY::ShallowCopy()
{
  Handle(TColgp_HSequenceOfXY) tmp = (*((Handle_TColgp_HSequenceOfXY*)nativeHandle))->ShallowCopy();
  return gcnew OCTColgp_HSequenceOfXY(&tmp);
}


