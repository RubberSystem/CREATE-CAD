// File generated by CPPExt (MPV)
//
#ifndef _Draft_EdgeInfo_OCWrappers_HeaderFile
#define _Draft_EdgeInfo_OCWrappers_HeaderFile

// include native header
#include <Draft_EdgeInfo.hxx>
#include "../Converter.h"


#include "../TopoDS/TopoDS_Face.h"
#include "../gp/gp_Pnt.h"


namespace OCNaroWrappers
{

ref class OCGeom_Curve;
ref class OCGeom2d_Curve;
ref class OCTopoDS_Face;
ref class OCgp_Pnt;



public ref class OCDraft_EdgeInfo  {

protected:
  Draft_EdgeInfo* nativeHandle;
  OCDraft_EdgeInfo(OCDummy^) {};

public:
  property Draft_EdgeInfo* Handle
  {
    Draft_EdgeInfo* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCDraft_EdgeInfo(Draft_EdgeInfo* nativeHandle);

// Methods PUBLIC


OCDraft_EdgeInfo();


OCDraft_EdgeInfo(System::Boolean HasNewGeometry);


 /*instead*/  void Add(OCNaroWrappers::OCTopoDS_Face^ F) ;


 /*instead*/  void RootFace(OCNaroWrappers::OCTopoDS_Face^ F) ;


 /*instead*/  void Tangent(OCNaroWrappers::OCgp_Pnt^ P) ;


 /*instead*/  System::Boolean IsTangent(OCNaroWrappers::OCgp_Pnt^ P) ;


 /*instead*/  System::Boolean NewGeometry() ;


 /*instead*/  void SetNewGeometry(System::Boolean NewGeom) ;


 /*instead*/  OCGeom_Curve^ Geometry() ;


 /*instead*/  OCTopoDS_Face^ FirstFace() ;


 /*instead*/  OCTopoDS_Face^ SecondFace() ;


 /*instead*/  OCGeom2d_Curve^ FirstPC() ;


 /*instead*/  OCGeom2d_Curve^ SecondPC() ;


 /*instead*/  OCGeom_Curve^ ChangeGeometry() ;


 /*instead*/  OCGeom2d_Curve^ ChangeFirstPC() ;


 /*instead*/  OCGeom2d_Curve^ ChangeSecondPC() ;


 /*instead*/  OCTopoDS_Face^ RootFace() ;


 /*instead*/  void Tolerance(Standard_Real tol) ;


 /*instead*/  Standard_Real Tolerance() ;

~OCDraft_EdgeInfo()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
