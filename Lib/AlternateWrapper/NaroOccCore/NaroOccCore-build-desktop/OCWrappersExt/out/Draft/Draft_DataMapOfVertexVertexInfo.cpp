// File generated by CPPExt (CPP file)
//

#include "Draft_DataMapOfVertexVertexInfo.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "Draft_VertexInfo.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "Draft_DataMapNodeOfDataMapOfVertexVertexInfo.h"
#include "Draft_DataMapIteratorOfDataMapOfVertexVertexInfo.h"


using namespace OCNaroWrappers;

OCDraft_DataMapOfVertexVertexInfo::OCDraft_DataMapOfVertexVertexInfo(Draft_DataMapOfVertexVertexInfo* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCDraft_DataMapOfVertexVertexInfo::OCDraft_DataMapOfVertexVertexInfo(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new Draft_DataMapOfVertexVertexInfo(NbBuckets);
}

OCDraft_DataMapOfVertexVertexInfo^ OCDraft_DataMapOfVertexVertexInfo::Assign(OCNaroWrappers::OCDraft_DataMapOfVertexVertexInfo^ Other)
{
  Draft_DataMapOfVertexVertexInfo* tmp = new Draft_DataMapOfVertexVertexInfo(0);
  *tmp = ((Draft_DataMapOfVertexVertexInfo*)nativeHandle)->Assign(*((Draft_DataMapOfVertexVertexInfo*)Other->Handle));
  return gcnew OCDraft_DataMapOfVertexVertexInfo(tmp);
}

 void OCDraft_DataMapOfVertexVertexInfo::ReSize(Standard_Integer NbBuckets)
{
  ((Draft_DataMapOfVertexVertexInfo*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCDraft_DataMapOfVertexVertexInfo::Bind(OCNaroWrappers::OCTopoDS_Vertex^ K, OCNaroWrappers::OCDraft_VertexInfo^ I)
{
  return OCConverter::StandardBooleanToBoolean(((Draft_DataMapOfVertexVertexInfo*)nativeHandle)->Bind(*((TopoDS_Vertex*)K->Handle), *((Draft_VertexInfo*)I->Handle)));
}

 System::Boolean OCDraft_DataMapOfVertexVertexInfo::IsBound(OCNaroWrappers::OCTopoDS_Vertex^ K)
{
  return OCConverter::StandardBooleanToBoolean(((Draft_DataMapOfVertexVertexInfo*)nativeHandle)->IsBound(*((TopoDS_Vertex*)K->Handle)));
}

 System::Boolean OCDraft_DataMapOfVertexVertexInfo::UnBind(OCNaroWrappers::OCTopoDS_Vertex^ K)
{
  return OCConverter::StandardBooleanToBoolean(((Draft_DataMapOfVertexVertexInfo*)nativeHandle)->UnBind(*((TopoDS_Vertex*)K->Handle)));
}

OCDraft_VertexInfo^ OCDraft_DataMapOfVertexVertexInfo::Find(OCNaroWrappers::OCTopoDS_Vertex^ K)
{
  Draft_VertexInfo* tmp = new Draft_VertexInfo();
  *tmp = ((Draft_DataMapOfVertexVertexInfo*)nativeHandle)->Find(*((TopoDS_Vertex*)K->Handle));
  return gcnew OCDraft_VertexInfo(tmp);
}

OCDraft_VertexInfo^ OCDraft_DataMapOfVertexVertexInfo::ChangeFind(OCNaroWrappers::OCTopoDS_Vertex^ K)
{
  Draft_VertexInfo* tmp = new Draft_VertexInfo();
  *tmp = ((Draft_DataMapOfVertexVertexInfo*)nativeHandle)->ChangeFind(*((TopoDS_Vertex*)K->Handle));
  return gcnew OCDraft_VertexInfo(tmp);
}

 Standard_Address OCDraft_DataMapOfVertexVertexInfo::Find1(OCNaroWrappers::OCTopoDS_Vertex^ K)
{
  return ((Draft_DataMapOfVertexVertexInfo*)nativeHandle)->Find1(*((TopoDS_Vertex*)K->Handle));
}

 Standard_Address OCDraft_DataMapOfVertexVertexInfo::ChangeFind1(OCNaroWrappers::OCTopoDS_Vertex^ K)
{
  return ((Draft_DataMapOfVertexVertexInfo*)nativeHandle)->ChangeFind1(*((TopoDS_Vertex*)K->Handle));
}


