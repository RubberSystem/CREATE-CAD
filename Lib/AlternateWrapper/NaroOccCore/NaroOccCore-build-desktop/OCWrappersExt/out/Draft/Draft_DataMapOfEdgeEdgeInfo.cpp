// File generated by CPPExt (CPP file)
//

#include "Draft_DataMapOfEdgeEdgeInfo.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "Draft_EdgeInfo.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "Draft_DataMapNodeOfDataMapOfEdgeEdgeInfo.h"
#include "Draft_DataMapIteratorOfDataMapOfEdgeEdgeInfo.h"


using namespace OCNaroWrappers;

OCDraft_DataMapOfEdgeEdgeInfo::OCDraft_DataMapOfEdgeEdgeInfo(Draft_DataMapOfEdgeEdgeInfo* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCDraft_DataMapOfEdgeEdgeInfo::OCDraft_DataMapOfEdgeEdgeInfo(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new Draft_DataMapOfEdgeEdgeInfo(NbBuckets);
}

OCDraft_DataMapOfEdgeEdgeInfo^ OCDraft_DataMapOfEdgeEdgeInfo::Assign(OCNaroWrappers::OCDraft_DataMapOfEdgeEdgeInfo^ Other)
{
  Draft_DataMapOfEdgeEdgeInfo* tmp = new Draft_DataMapOfEdgeEdgeInfo(0);
  *tmp = ((Draft_DataMapOfEdgeEdgeInfo*)nativeHandle)->Assign(*((Draft_DataMapOfEdgeEdgeInfo*)Other->Handle));
  return gcnew OCDraft_DataMapOfEdgeEdgeInfo(tmp);
}

 void OCDraft_DataMapOfEdgeEdgeInfo::ReSize(Standard_Integer NbBuckets)
{
  ((Draft_DataMapOfEdgeEdgeInfo*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCDraft_DataMapOfEdgeEdgeInfo::Bind(OCNaroWrappers::OCTopoDS_Edge^ K, OCNaroWrappers::OCDraft_EdgeInfo^ I)
{
  return OCConverter::StandardBooleanToBoolean(((Draft_DataMapOfEdgeEdgeInfo*)nativeHandle)->Bind(*((TopoDS_Edge*)K->Handle), *((Draft_EdgeInfo*)I->Handle)));
}

 System::Boolean OCDraft_DataMapOfEdgeEdgeInfo::IsBound(OCNaroWrappers::OCTopoDS_Edge^ K)
{
  return OCConverter::StandardBooleanToBoolean(((Draft_DataMapOfEdgeEdgeInfo*)nativeHandle)->IsBound(*((TopoDS_Edge*)K->Handle)));
}

 System::Boolean OCDraft_DataMapOfEdgeEdgeInfo::UnBind(OCNaroWrappers::OCTopoDS_Edge^ K)
{
  return OCConverter::StandardBooleanToBoolean(((Draft_DataMapOfEdgeEdgeInfo*)nativeHandle)->UnBind(*((TopoDS_Edge*)K->Handle)));
}

OCDraft_EdgeInfo^ OCDraft_DataMapOfEdgeEdgeInfo::Find(OCNaroWrappers::OCTopoDS_Edge^ K)
{
  Draft_EdgeInfo* tmp = new Draft_EdgeInfo();
  *tmp = ((Draft_DataMapOfEdgeEdgeInfo*)nativeHandle)->Find(*((TopoDS_Edge*)K->Handle));
  return gcnew OCDraft_EdgeInfo(tmp);
}

OCDraft_EdgeInfo^ OCDraft_DataMapOfEdgeEdgeInfo::ChangeFind(OCNaroWrappers::OCTopoDS_Edge^ K)
{
  Draft_EdgeInfo* tmp = new Draft_EdgeInfo();
  *tmp = ((Draft_DataMapOfEdgeEdgeInfo*)nativeHandle)->ChangeFind(*((TopoDS_Edge*)K->Handle));
  return gcnew OCDraft_EdgeInfo(tmp);
}

 Standard_Address OCDraft_DataMapOfEdgeEdgeInfo::Find1(OCNaroWrappers::OCTopoDS_Edge^ K)
{
  return ((Draft_DataMapOfEdgeEdgeInfo*)nativeHandle)->Find1(*((TopoDS_Edge*)K->Handle));
}

 Standard_Address OCDraft_DataMapOfEdgeEdgeInfo::ChangeFind1(OCNaroWrappers::OCTopoDS_Edge^ K)
{
  return ((Draft_DataMapOfEdgeEdgeInfo*)nativeHandle)->ChangeFind1(*((TopoDS_Edge*)K->Handle));
}


