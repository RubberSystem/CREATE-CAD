// File generated by CPPExt (MPV)
//
#ifndef _BRepMesh_ShapeTool_OCWrappers_HeaderFile
#define _BRepMesh_ShapeTool_OCWrappers_HeaderFile

// include native header
#include <BRepMesh_ShapeTool.hxx>
#include "../Converter.h"


#include "../TopExp/TopExp_Explorer.h"
#include "../TopAbs/TopAbs_Orientation.h"
#include "../gp/gp_Pnt.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopoDS_Face;
ref class OCTopoDS_Edge;
ref class OCTopoDS_Vertex;
ref class OCBnd_Box;
ref class OCgp_Pnt2d;
ref class OCBRepAdaptor_Curve;
ref class OCgp_Pnt;
ref class OCPoly_Triangulation;



public ref class OCBRepMesh_ShapeTool  {

protected:
  BRepMesh_ShapeTool* nativeHandle;
  OCBRepMesh_ShapeTool(OCDummy^) {};

public:
  property BRepMesh_ShapeTool* Handle
  {
    BRepMesh_ShapeTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepMesh_ShapeTool(BRepMesh_ShapeTool* nativeHandle);

// Methods PUBLIC


OCBRepMesh_ShapeTool();


 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  System::Boolean MoreFace() ;


 /*instead*/  void NextFace() ;


 /*instead*/  OCTopoDS_Face^ CurrentFace() ;


 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Face^ F) ;


 /*instead*/  System::Boolean MoreEdge() ;


 /*instead*/  void NextEdge() ;


 /*instead*/  OCTopoDS_Edge^ CurrentEdge() ;


 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Edge^ E) ;


 /*instead*/  System::Boolean MoreInternalVertex() ;


 /*instead*/  void NextInternalVertex() ;


 /*instead*/  OCTopoDS_Vertex^ CurrentInternalVertex() ;


static /*instead*/  OCTopAbs_Orientation Orientation(OCNaroWrappers::OCTopoDS_Face^ F) ;


static /*instead*/  OCTopAbs_Orientation Orientation(OCNaroWrappers::OCTopoDS_Edge^ E) ;


static /*instead*/  OCBnd_Box^ Bound(OCNaroWrappers::OCTopoDS_Face^ F) ;


static /*instead*/  OCBnd_Box^ Bound(OCNaroWrappers::OCTopoDS_Edge^ E) ;


static /*instead*/  OCTopoDS_Vertex^ FirstVertex(OCNaroWrappers::OCTopoDS_Edge^ E) ;


static /*instead*/  OCTopoDS_Vertex^ LastVertex(OCNaroWrappers::OCTopoDS_Edge^ E) ;

//! If there is  not First or Last vertex (infinite or <br>
//!          semi-infinite edge) return null shapes. <br>
static /*instead*/  void Vertices(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Vertex^ Vfirst, OCNaroWrappers::OCTopoDS_Vertex^ Vlast) ;


static /*instead*/  void Range(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, Standard_Real& wFirst, Standard_Real& wLast) ;


static /*instead*/  void UVPoints(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Pnt2d^ uvFirst, OCNaroWrappers::OCgp_Pnt2d^ uvLast) ;


static /*instead*/  System::Boolean Degenerated(OCNaroWrappers::OCTopoDS_Edge^ E) ;


static /*instead*/  Standard_Real Tolerance(OCNaroWrappers::OCTopoDS_Vertex^ V) ;


static /*instead*/  Standard_Real Parameter(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F) ;


static /*instead*/  void Parameters(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, Standard_Real W, OCNaroWrappers::OCgp_Pnt2d^ UV) ;


static /*instead*/  void Locate(OCNaroWrappers::OCBRepAdaptor_Curve^ C, Standard_Real W, Standard_Real& WFound, OCNaroWrappers::OCgp_Pnt^ p3d, OCNaroWrappers::OCgp_Pnt2d^ UV) ;


static /*instead*/  OCgp_Pnt^ Pnt(OCNaroWrappers::OCTopoDS_Vertex^ V) ;


static /*instead*/  void AddInFace(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCPoly_Triangulation^ T) ;

~OCBRepMesh_ShapeTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
