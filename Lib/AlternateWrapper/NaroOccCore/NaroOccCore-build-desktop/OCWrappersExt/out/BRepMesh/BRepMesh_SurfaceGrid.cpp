// File generated by CPPExt (CPP file)
//

#include "BRepMesh_SurfaceGrid.h"
#include "../Converter.h"
#include "../BRepAdaptor/BRepAdaptor_HSurface.h"
#include "../TopoDS/TopoDS_Face.h"
#include "BRepMesh_Classifier.h"
#include "../TColgp/TColgp_SequenceOfPnt.h"
#include "../TColgp/TColgp_SequenceOfPnt2d.h"
#include "../TColStd/TColStd_SequenceOfReal.h"


using namespace OCNaroWrappers;

OCBRepMesh_SurfaceGrid::OCBRepMesh_SurfaceGrid(Handle(BRepMesh_SurfaceGrid)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_BRepMesh_SurfaceGrid(*nativeHandle);
}

OCBRepMesh_SurfaceGrid::OCBRepMesh_SurfaceGrid(OCNaroWrappers::OCTopoDS_Face^ F, Standard_Real def, Standard_Real Ang) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_BRepMesh_SurfaceGrid(new BRepMesh_SurfaceGrid(*((TopoDS_Face*)F->Handle), def, Ang));
}

 void OCBRepMesh_SurfaceGrid::Perform(OCNaroWrappers::OCBRepMesh_Classifier^ cl)
{
  (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->Perform(*((BRepMesh_Classifier*)cl->Handle));
}

 void OCBRepMesh_SurfaceGrid::SetEquilateral()
{
  (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->SetEquilateral();
}

 void OCBRepMesh_SurfaceGrid::SetTrianglesOnPlane()
{
  (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->SetTrianglesOnPlane();
}

 void OCBRepMesh_SurfaceGrid::SetEdgeDimension(Standard_Real D)
{
  (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->SetEdgeDimension(D);
}

OCTColgp_SequenceOfPnt^ OCBRepMesh_SurfaceGrid::Points()
{
  TColgp_SequenceOfPnt* tmp = new TColgp_SequenceOfPnt();
  *tmp = (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->Points();
  return gcnew OCTColgp_SequenceOfPnt(tmp);
}

OCTColgp_SequenceOfPnt2d^ OCBRepMesh_SurfaceGrid::Parameters()
{
  TColgp_SequenceOfPnt2d* tmp = new TColgp_SequenceOfPnt2d();
  *tmp = (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->Parameters();
  return gcnew OCTColgp_SequenceOfPnt2d(tmp);
}

 Standard_Real OCBRepMesh_SurfaceGrid::DeltaX()
{
  return (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->DeltaX();
}

 Standard_Real OCBRepMesh_SurfaceGrid::DeltaY()
{
  return (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->DeltaY();
}

 OCBRepMesh_Status OCBRepMesh_SurfaceGrid::Error()
{
  return (OCBRepMesh_Status)((*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->Error());
}

OCTColStd_SequenceOfReal^ OCBRepMesh_SurfaceGrid::UParameters()
{
  TColStd_SequenceOfReal* tmp = new TColStd_SequenceOfReal();
  *tmp = (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->UParameters();
  return gcnew OCTColStd_SequenceOfReal(tmp);
}

OCTColStd_SequenceOfReal^ OCBRepMesh_SurfaceGrid::VParameters()
{
  TColStd_SequenceOfReal* tmp = new TColStd_SequenceOfReal();
  *tmp = (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->VParameters();
  return gcnew OCTColStd_SequenceOfReal(tmp);
}

OCBRepAdaptor_HSurface^ OCBRepMesh_SurfaceGrid::Surface()
{
  Handle(BRepAdaptor_HSurface) tmp = (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->Surface();
  return gcnew OCBRepAdaptor_HSurface(&tmp);
}

OCTopoDS_Face^ OCBRepMesh_SurfaceGrid::Face()
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->Face();
  return gcnew OCTopoDS_Face(tmp);
}

 void OCBRepMesh_SurfaceGrid::Bounds(Standard_Real& Umin, Standard_Real& Umax, Standard_Real& Vmin, Standard_Real& Vmax)
{
  (*((Handle_BRepMesh_SurfaceGrid*)nativeHandle))->Bounds(Umin, Umax, Vmin, Vmax);
}


