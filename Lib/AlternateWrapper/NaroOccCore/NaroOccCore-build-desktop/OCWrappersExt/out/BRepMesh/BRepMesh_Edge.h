// File generated by CPPExt (MPV)
//
#ifndef _BRepMesh_Edge_OCWrappers_HeaderFile
#define _BRepMesh_Edge_OCWrappers_HeaderFile

// include native header
#include <BRepMesh_Edge.hxx>
#include "../Converter.h"


#include "BRepMesh_DegreeOfFreedom.h"


namespace OCNaroWrappers
{




public ref class OCBRepMesh_Edge  {

protected:
  BRepMesh_Edge* nativeHandle;
  OCBRepMesh_Edge(OCDummy^) {};

public:
  property BRepMesh_Edge* Handle
  {
    BRepMesh_Edge* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepMesh_Edge(BRepMesh_Edge* nativeHandle);

// Methods PUBLIC


OCBRepMesh_Edge();

//! Contructs a link beetween to vertices. <br>
OCBRepMesh_Edge(Standard_Integer vDebut, Standard_Integer vFin, OCBRepMesh_DegreeOfFreedom canMove);

//! Give the index of first node of the Link. <br>
 /*instead*/  Standard_Integer FirstNode() ;

//! Give the index of Last node of the Link. <br>
 /*instead*/  Standard_Integer LastNode() ;


 /*instead*/  OCBRepMesh_DegreeOfFreedom Movability() ;


 /*instead*/  void SetMovability(OCBRepMesh_DegreeOfFreedom Move) ;


 /*instead*/  Standard_Integer HashCode(Standard_Integer Upper) ;


 /*instead*/  System::Boolean SameOrientation(OCNaroWrappers::OCBRepMesh_Edge^ Other) ;


 /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCBRepMesh_Edge^ Other) ;

~OCBRepMesh_Edge()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
