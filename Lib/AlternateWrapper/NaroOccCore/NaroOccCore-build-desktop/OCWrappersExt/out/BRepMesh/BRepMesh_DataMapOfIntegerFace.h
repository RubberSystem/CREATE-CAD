// File generated by CPPExt (MPV)
//
#ifndef _BRepMesh_DataMapOfIntegerFace_OCWrappers_HeaderFile
#define _BRepMesh_DataMapOfIntegerFace_OCWrappers_HeaderFile

// include native header
#include <BRepMesh_DataMapOfIntegerFace.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Face;
ref class OCTColStd_MapIntegerHasher;
ref class OCBRepMesh_DataMapNodeOfDataMapOfIntegerFace;
ref class OCBRepMesh_DataMapIteratorOfDataMapOfIntegerFace;



public ref class OCBRepMesh_DataMapOfIntegerFace  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCBRepMesh_DataMapOfIntegerFace(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepMesh_DataMapOfIntegerFace(BRepMesh_DataMapOfIntegerFace* nativeHandle);

// Methods PUBLIC


OCBRepMesh_DataMapOfIntegerFace(Standard_Integer NbBuckets);


 /*instead*/  OCBRepMesh_DataMapOfIntegerFace^ Assign(OCNaroWrappers::OCBRepMesh_DataMapOfIntegerFace^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(Standard_Integer K, OCNaroWrappers::OCTopoDS_Face^ I) ;


 /*instead*/  System::Boolean IsBound(Standard_Integer K) ;


 /*instead*/  System::Boolean UnBind(Standard_Integer K) ;


 /*instead*/  OCTopoDS_Face^ Find(Standard_Integer K) ;


 /*instead*/  OCTopoDS_Face^ ChangeFind(Standard_Integer K) ;

~OCBRepMesh_DataMapOfIntegerFace()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
