// File generated by CPPExt (CPP file)
//

#include "BRepMesh_FastDiscretFace.h"
#include "../Converter.h"
#include "BRepMesh_DataStructureOfDelaun.h"
#include "BRepMesh_FaceAttribute.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopTools/TopTools_DataMapOfShapeReal.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "../BRepAdaptor/BRepAdaptor_HSurface.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../Poly/Poly_Triangulation.h"
#include "../TopLoc/TopLoc_Location.h"
#include "BRepMesh_ListOfVertex.h"
#include "../TColStd/TColStd_ListOfInteger.h"
#include "BRepMesh_Delaun.h"
#include "../gp/gp_XY.h"
#include "../gp/gp_Pnt2d.h"
#include "BRepMesh_DataMapOfIntegerListOfXY.h"
#include "BRepMesh_Triangle.h"
#include "BRepMesh_Edge.h"
#include "BRepMesh_Vertex.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCBRepMesh_FastDiscretFace::OCBRepMesh_FastDiscretFace(Handle(BRepMesh_FastDiscretFace)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_BRepMesh_FastDiscretFace(*nativeHandle);
}

OCBRepMesh_FastDiscretFace::OCBRepMesh_FastDiscretFace(Standard_Real theAngle, System::Boolean theWithShare) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_BRepMesh_FastDiscretFace(new BRepMesh_FastDiscretFace(theAngle, OCConverter::BooleanToStandardBoolean(theWithShare)));
}

 void OCBRepMesh_FastDiscretFace::Add(OCNaroWrappers::OCTopoDS_Face^ theFace, OCNaroWrappers::OCBRepMesh_FaceAttribute^ theAttrib, OCNaroWrappers::OCTopTools_DataMapOfShapeReal^ theMapDefle, TopTools_MutexForShapeProvider theMutexProvider)
{
  (*((Handle_BRepMesh_FastDiscretFace*)nativeHandle))->Add(*((TopoDS_Face*)theFace->Handle), *((Handle_BRepMesh_FaceAttribute*)theAttrib->Handle), *((TopTools_DataMapOfShapeReal*)theMapDefle->Handle), theMutexProvider);
}

 Standard_Real OCBRepMesh_FastDiscretFace::Control(OCNaroWrappers::OCBRepAdaptor_HSurface^ theCaro, Standard_Real theDefFace, OCNaroWrappers::OCBRepMesh_ListOfVertex^ theInternalV, OCNaroWrappers::OCTColStd_ListOfInteger^ theBadTriangles, OCNaroWrappers::OCTColStd_ListOfInteger^ theNulTriangles, OCNaroWrappers::OCBRepMesh_Delaun^ theTrigu, System::Boolean theIsFirst)
{
  return (*((Handle_BRepMesh_FastDiscretFace*)nativeHandle))->Control(*((Handle_BRepAdaptor_HSurface*)theCaro->Handle), theDefFace, *((BRepMesh_ListOfVertex*)theInternalV->Handle), *((TColStd_ListOfInteger*)theBadTriangles->Handle), *((TColStd_ListOfInteger*)theNulTriangles->Handle), *((BRepMesh_Delaun*)theTrigu->Handle), OCConverter::BooleanToStandardBoolean(theIsFirst));
}

OCgp_XY^ OCBRepMesh_FastDiscretFace::FindUV(OCNaroWrappers::OCTopoDS_Vertex^ theV, OCNaroWrappers::OCgp_Pnt2d^ theXY, Standard_Integer theIp, OCNaroWrappers::OCBRepAdaptor_HSurface^ theSFace, Standard_Real theMinDist, OCNaroWrappers::OCBRepMesh_DataMapOfIntegerListOfXY^ theLocation2dMap)
{
  gp_XY* tmp = new gp_XY();
  *tmp = BRepMesh_FastDiscretFace::FindUV(*((TopoDS_Vertex*)theV->Handle), *((gp_Pnt2d*)theXY->Handle), theIp, *((Handle_BRepAdaptor_HSurface*)theSFace->Handle), theMinDist, *((BRepMesh_DataMapOfIntegerListOfXY*)theLocation2dMap->Handle));
  return gcnew OCgp_XY(tmp);
}

OCBRepMesh_Triangle^ OCBRepMesh_FastDiscretFace::Triangle(Standard_Integer theIndex)
{
  BRepMesh_Triangle* tmp = new BRepMesh_Triangle();
  *tmp = (*((Handle_BRepMesh_FastDiscretFace*)nativeHandle))->Triangle(theIndex);
  return gcnew OCBRepMesh_Triangle(tmp);
}

OCBRepMesh_Edge^ OCBRepMesh_FastDiscretFace::Edge(Standard_Integer theIndex)
{
  BRepMesh_Edge* tmp = new BRepMesh_Edge();
  *tmp = (*((Handle_BRepMesh_FastDiscretFace*)nativeHandle))->Edge(theIndex);
  return gcnew OCBRepMesh_Edge(tmp);
}

OCBRepMesh_Vertex^ OCBRepMesh_FastDiscretFace::Vertex(Standard_Integer theIndex)
{
  BRepMesh_Vertex* tmp = new BRepMesh_Vertex();
  *tmp = (*((Handle_BRepMesh_FastDiscretFace*)nativeHandle))->Vertex(theIndex);
  return gcnew OCBRepMesh_Vertex(tmp);
}

OCgp_Pnt^ OCBRepMesh_FastDiscretFace::Pnt(Standard_Integer theIndex)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_BRepMesh_FastDiscretFace*)nativeHandle))->Pnt(theIndex);
  return gcnew OCgp_Pnt(tmp);
}


