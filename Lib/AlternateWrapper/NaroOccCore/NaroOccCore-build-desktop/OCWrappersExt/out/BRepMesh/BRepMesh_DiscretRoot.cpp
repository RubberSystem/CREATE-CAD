// File generated by CPPExt (CPP file)
//

#include "BRepMesh_DiscretRoot.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"


using namespace OCNaroWrappers;

OCBRepMesh_DiscretRoot::OCBRepMesh_DiscretRoot(Handle(BRepMesh_DiscretRoot)* nativeHandle) : OCStandard_Transient((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_BRepMesh_DiscretRoot(*nativeHandle);
}

OCBRepMesh_DiscretRoot::OCBRepMesh_DiscretRoot() : OCStandard_Transient((OCDummy^)nullptr)

{}

 void OCBRepMesh_DiscretRoot::SetDeflection(Standard_Real theDeflection)
{
  (*((Handle_BRepMesh_DiscretRoot*)nativeHandle))->SetDeflection(theDeflection);
}

 Standard_Real OCBRepMesh_DiscretRoot::Deflection()
{
  return (*((Handle_BRepMesh_DiscretRoot*)nativeHandle))->Deflection();
}

 void OCBRepMesh_DiscretRoot::SetAngle(Standard_Real theAngle)
{
  (*((Handle_BRepMesh_DiscretRoot*)nativeHandle))->SetAngle(theAngle);
}

 Standard_Real OCBRepMesh_DiscretRoot::Angle()
{
  return (*((Handle_BRepMesh_DiscretRoot*)nativeHandle))->Angle();
}

 void OCBRepMesh_DiscretRoot::SetShape(OCNaroWrappers::OCTopoDS_Shape^ theShape)
{
  (*((Handle_BRepMesh_DiscretRoot*)nativeHandle))->SetShape(*((TopoDS_Shape*)theShape->Handle));
}

OCTopoDS_Shape^ OCBRepMesh_DiscretRoot::Shape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_BRepMesh_DiscretRoot*)nativeHandle))->Shape();
  return gcnew OCTopoDS_Shape(tmp);
}

 System::Boolean OCBRepMesh_DiscretRoot::IsDone()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepMesh_DiscretRoot*)nativeHandle))->IsDone());
}


