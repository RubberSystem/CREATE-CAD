// File generated by CPPExt (MPV)
//
#ifndef _BRepMesh_VertexTool_OCWrappers_HeaderFile
#define _BRepMesh_VertexTool_OCWrappers_HeaderFile

// include native header
#include <BRepMesh_VertexTool.hxx>
#include "../Converter.h"


#include "BRepMesh_DataMapOfIntegerListOfInteger.h"
#include "../TColStd/TColStd_Array1OfReal.h"


namespace OCNaroWrappers
{

ref class OCBRepMesh_Vertex;
ref class OCgp_XY;


//! Describes the data structure necessary for the <br>
//!          mesh algorithm and contains the vertices in UV space. <br>
public ref class OCBRepMesh_VertexTool  {

protected:
  BRepMesh_VertexTool* nativeHandle;
  OCBRepMesh_VertexTool(OCDummy^) {};

public:
  property BRepMesh_VertexTool* Handle
  {
    BRepMesh_VertexTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepMesh_VertexTool(BRepMesh_VertexTool* nativeHandle);

// Methods PUBLIC


OCBRepMesh_VertexTool(BRepMesh_BaseAllocator theAlloc);

//! Constructs a VertexTool with an  evaluation of the <br>
//!          number of vertices. <br>
OCBRepMesh_VertexTool(Standard_Integer nbComp, BRepMesh_BaseAllocator theAlloc);

//! Sets new size for cellfilter. <br>
 /*instead*/  void SetCellSize(Standard_Real theSize) ;

//! Sets new size for cellfilter. <br>
 /*instead*/  void SetCellSize(Standard_Real theXSize, Standard_Real theYSize) ;

//! Sets new size for cellfilter. <br>
 /*instead*/  void SetTolerance(Standard_Real theTol) ;

//! Sets new size for cellfilter. <br>
 /*instead*/  void SetTolerance(Standard_Real theTolX, Standard_Real theTolY) ;

//! Adds a vertex to the tool. <br>
 /*instead*/  Standard_Integer Add(OCNaroWrappers::OCBRepMesh_Vertex^ theVertex, BRepMesh_ListOfInteger theParams) ;

//! Adds a vertex to the tool. <br>
 /*instead*/  Standard_Integer Add(OCNaroWrappers::OCBRepMesh_Vertex^ theVertex) ;

//! Deletes a vertex from the tool. <br>
 /*instead*/  void Delete(Standard_Integer theIndex) ;

//! Returns data assigned to theIndex. <br>
 /*instead*/  BRepMesh_ListOfInteger& FindFromIndex(Standard_Integer theIndex) ;

//! Selects the vertex by theIndex. <br>
 /*instead*/  OCBRepMesh_Vertex^ FindKey(Standard_Integer theIndex) ;

//! Returns an index of theVertex. <br>
 /*instead*/  Standard_Integer FindIndex(OCNaroWrappers::OCBRepMesh_Vertex^ theVertex) ;

//! Returns a number of vertices. <br>
 /*instead*/  Standard_Integer Extent() ;

//! Returns True when the map contains no keys. <br>
 /*instead*/  System::Boolean IsEmpty() ;

//! Substitutes vertex with Index on <br>
//!          theVertex with attributes theData. <br>
 /*instead*/  void Substitute(Standard_Integer Index, OCNaroWrappers::OCBRepMesh_Vertex^ theVertex, BRepMesh_ListOfInteger theData) ;

//! Remove last node from the structure. <br>
 /*instead*/  void RemoveLast() ;

//! Returns the list with indexes of <br>
//!          vertices that have Movability attribute <br>
//!          equal to BRepMesh_Deleted and can be <br>
//!          replaced with another node. <br>
 /*instead*/  BRepMesh_ListOfInteger& GetListOfDelNodes() ;

//! Prints statistics. <br>
 /*instead*/  void Statistics(Standard_OStream& S) ;

~OCBRepMesh_VertexTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
