// File generated by CPPExt (CPP file)
//

#include "BRepMesh_DataMapOfIntegerFace.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "BRepMesh_DataMapNodeOfDataMapOfIntegerFace.h"
#include "BRepMesh_DataMapIteratorOfDataMapOfIntegerFace.h"


using namespace OCNaroWrappers;

OCBRepMesh_DataMapOfIntegerFace::OCBRepMesh_DataMapOfIntegerFace(BRepMesh_DataMapOfIntegerFace* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepMesh_DataMapOfIntegerFace::OCBRepMesh_DataMapOfIntegerFace(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BRepMesh_DataMapOfIntegerFace(NbBuckets);
}

OCBRepMesh_DataMapOfIntegerFace^ OCBRepMesh_DataMapOfIntegerFace::Assign(OCNaroWrappers::OCBRepMesh_DataMapOfIntegerFace^ Other)
{
  BRepMesh_DataMapOfIntegerFace* tmp = new BRepMesh_DataMapOfIntegerFace(0);
  *tmp = ((BRepMesh_DataMapOfIntegerFace*)nativeHandle)->Assign(*((BRepMesh_DataMapOfIntegerFace*)Other->Handle));
  return gcnew OCBRepMesh_DataMapOfIntegerFace(tmp);
}

 void OCBRepMesh_DataMapOfIntegerFace::ReSize(Standard_Integer NbBuckets)
{
  ((BRepMesh_DataMapOfIntegerFace*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCBRepMesh_DataMapOfIntegerFace::Bind(Standard_Integer K, OCNaroWrappers::OCTopoDS_Face^ I)
{
  return OCConverter::StandardBooleanToBoolean(((BRepMesh_DataMapOfIntegerFace*)nativeHandle)->Bind(K, *((TopoDS_Face*)I->Handle)));
}

 System::Boolean OCBRepMesh_DataMapOfIntegerFace::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepMesh_DataMapOfIntegerFace*)nativeHandle)->IsBound(K));
}

 System::Boolean OCBRepMesh_DataMapOfIntegerFace::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepMesh_DataMapOfIntegerFace*)nativeHandle)->UnBind(K));
}

OCTopoDS_Face^ OCBRepMesh_DataMapOfIntegerFace::Find(Standard_Integer K)
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = ((BRepMesh_DataMapOfIntegerFace*)nativeHandle)->Find(K);
  return gcnew OCTopoDS_Face(tmp);
}

OCTopoDS_Face^ OCBRepMesh_DataMapOfIntegerFace::ChangeFind(Standard_Integer K)
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = ((BRepMesh_DataMapOfIntegerFace*)nativeHandle)->ChangeFind(K);
  return gcnew OCTopoDS_Face(tmp);
}


