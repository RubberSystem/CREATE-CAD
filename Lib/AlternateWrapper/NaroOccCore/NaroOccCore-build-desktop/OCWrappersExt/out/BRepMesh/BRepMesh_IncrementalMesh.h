// File generated by CPPExt (Transient)
//
#ifndef _BRepMesh_IncrementalMesh_OCWrappers_HeaderFile
#define _BRepMesh_IncrementalMesh_OCWrappers_HeaderFile

// include the wrapped class
#include <BRepMesh_IncrementalMesh.hxx>
#include "../Converter.h"

#include "BRepMesh_DiscretRoot.h"

#include "../TopTools/TopTools_MapOfShape.h"
#include "../TopTools/TopTools_DataMapOfShapeReal.h"
#include "../TopTools/TopTools_IndexedDataMapOfShapeListOfShape.h"
#include "../Bnd/Bnd_Box.h"


namespace OCNaroWrappers
{

ref class OCBRepMesh_FastDiscret;
ref class OCTopoDS_Shape;
ref class OCTopoDS_Edge;
ref class OCTopoDS_Face;


//! Builds the mesh of a shape with respect of their <br>
//!          correctly triangulated parts <br>
public ref class OCBRepMesh_IncrementalMesh : OCBRepMesh_DiscretRoot {

protected:
  // dummy constructor;
  OCBRepMesh_IncrementalMesh(OCDummy^) : OCBRepMesh_DiscretRoot((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepMesh_IncrementalMesh(Handle(BRepMesh_IncrementalMesh)* nativeHandle);

// Methods PUBLIC


OCBRepMesh_IncrementalMesh();

//! If the  boolean    <Relatif>   is  True,    the <br>
//!          deflection used   for the polygonalisation   of <br>
//!          each edge will be <D> * Size of Edge. <br>
//!          the deflection used for the faces will be the maximum <br>
//!          deflection of their edges. <br>
OCBRepMesh_IncrementalMesh(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Real D, System::Boolean Relatif, Standard_Real Ang, System::Boolean InParallel);


 /*instead*/  void SetRelative(System::Boolean theFlag) ;


 /*instead*/  System::Boolean Relative() ;


virtual /*instead*/  void Perform() ;

//! Builds the incremental mesh of the shape <br>
 /*instead*/  void Update(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  System::Boolean IsModified() ;


 /*instead*/  Standard_Integer GetStatusFlags() ;


//! Request algorithm to launch in multiple threads to improve performance. <br>
 /*instead*/  void SetParallel(System::Boolean theInParallel) ;


//! Returns the multi-threading usage flag. <br>
 /*instead*/  System::Boolean IsParallel() ;


//! Plugin interface for the Mesh Factories. <br>
static /*instead*/  Standard_Integer Discret(OCNaroWrappers::OCTopoDS_Shape^ theShape, Standard_Real theDeflection, Standard_Real theAngle, BRepMesh_PDiscretRoot& theAlgo) ;


//! Returns multi-threading usage flag set by default in <br>
//! Discret() static method (thus applied only to Mesh Factories). <br>
static /*instead*/  System::Boolean IsParallelDefault() ;


//! Setup multi-threading usage flag set by default in <br>
//! Discret() static method (thus applied only to Mesh Factories). <br>
static /*instead*/  void SetParallelDefault(System::Boolean theInParallel) ;

~OCBRepMesh_IncrementalMesh()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
