// File generated by CPPExt (CPP file)
//

#include "BRepMesh_DataMapOfFaceAttribute.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Face.h"
#include "BRepMesh_FaceAttribute.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "BRepMesh_DataMapNodeOfDataMapOfFaceAttribute.h"
#include "BRepMesh_DataMapIteratorOfDataMapOfFaceAttribute.h"


using namespace OCNaroWrappers;

OCBRepMesh_DataMapOfFaceAttribute::OCBRepMesh_DataMapOfFaceAttribute(BRepMesh_DataMapOfFaceAttribute* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepMesh_DataMapOfFaceAttribute::OCBRepMesh_DataMapOfFaceAttribute(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BRepMesh_DataMapOfFaceAttribute(NbBuckets);
}

OCBRepMesh_DataMapOfFaceAttribute^ OCBRepMesh_DataMapOfFaceAttribute::Assign(OCNaroWrappers::OCBRepMesh_DataMapOfFaceAttribute^ Other)
{
  BRepMesh_DataMapOfFaceAttribute* tmp = new BRepMesh_DataMapOfFaceAttribute(0);
  *tmp = ((BRepMesh_DataMapOfFaceAttribute*)nativeHandle)->Assign(*((BRepMesh_DataMapOfFaceAttribute*)Other->Handle));
  return gcnew OCBRepMesh_DataMapOfFaceAttribute(tmp);
}

 void OCBRepMesh_DataMapOfFaceAttribute::ReSize(Standard_Integer NbBuckets)
{
  ((BRepMesh_DataMapOfFaceAttribute*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCBRepMesh_DataMapOfFaceAttribute::Bind(OCNaroWrappers::OCTopoDS_Face^ K, OCNaroWrappers::OCBRepMesh_FaceAttribute^ I)
{
  return OCConverter::StandardBooleanToBoolean(((BRepMesh_DataMapOfFaceAttribute*)nativeHandle)->Bind(*((TopoDS_Face*)K->Handle), *((Handle_BRepMesh_FaceAttribute*)I->Handle)));
}

 System::Boolean OCBRepMesh_DataMapOfFaceAttribute::IsBound(OCNaroWrappers::OCTopoDS_Face^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepMesh_DataMapOfFaceAttribute*)nativeHandle)->IsBound(*((TopoDS_Face*)K->Handle)));
}

 System::Boolean OCBRepMesh_DataMapOfFaceAttribute::UnBind(OCNaroWrappers::OCTopoDS_Face^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepMesh_DataMapOfFaceAttribute*)nativeHandle)->UnBind(*((TopoDS_Face*)K->Handle)));
}

OCBRepMesh_FaceAttribute^ OCBRepMesh_DataMapOfFaceAttribute::Find(OCNaroWrappers::OCTopoDS_Face^ K)
{
  Handle(BRepMesh_FaceAttribute) tmp = ((BRepMesh_DataMapOfFaceAttribute*)nativeHandle)->Find(*((TopoDS_Face*)K->Handle));
  return gcnew OCBRepMesh_FaceAttribute(&tmp);
}

OCBRepMesh_FaceAttribute^ OCBRepMesh_DataMapOfFaceAttribute::ChangeFind(OCNaroWrappers::OCTopoDS_Face^ K)
{
  Handle(BRepMesh_FaceAttribute) tmp = ((BRepMesh_DataMapOfFaceAttribute*)nativeHandle)->ChangeFind(*((TopoDS_Face*)K->Handle));
  return gcnew OCBRepMesh_FaceAttribute(&tmp);
}

 Standard_Address OCBRepMesh_DataMapOfFaceAttribute::Find1(OCNaroWrappers::OCTopoDS_Face^ K)
{
  return ((BRepMesh_DataMapOfFaceAttribute*)nativeHandle)->Find1(*((TopoDS_Face*)K->Handle));
}

 Standard_Address OCBRepMesh_DataMapOfFaceAttribute::ChangeFind1(OCNaroWrappers::OCTopoDS_Face^ K)
{
  return ((BRepMesh_DataMapOfFaceAttribute*)nativeHandle)->ChangeFind1(*((TopoDS_Face*)K->Handle));
}


