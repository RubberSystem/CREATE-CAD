// File generated by CPPExt (MPV)
//
#ifndef _GC_MakeMirror_OCWrappers_HeaderFile
#define _GC_MakeMirror_OCWrappers_HeaderFile

// include native header
#include <GC_MakeMirror.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCGeom_Transformation;
ref class OCgp_Pnt;
ref class OCgp_Ax1;
ref class OCgp_Lin;
ref class OCgp_Dir;
ref class OCgp_Pln;
ref class OCgp_Ax2;


//! This class implements elementary construction algorithms for a <br>
//! symmetrical transformation in 3D space about a point, <br>
//! axis or plane. The result is a Geom_Transformation transformation. <br>
//! A MakeMirror object provides a framework for: <br>
//! -   defining the construction of the transformation, <br>
//! -   implementing the construction algorithm, and <br>
//! -   consulting the result. <br>
public ref class OCGC_MakeMirror  {

protected:
  GC_MakeMirror* nativeHandle;
  OCGC_MakeMirror(OCDummy^) {};

public:
  property GC_MakeMirror* Handle
  {
    GC_MakeMirror* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGC_MakeMirror(GC_MakeMirror* nativeHandle);

// Methods PUBLIC


OCGC_MakeMirror(OCNaroWrappers::OCgp_Pnt^ Point);


OCGC_MakeMirror(OCNaroWrappers::OCgp_Ax1^ Axis);


OCGC_MakeMirror(OCNaroWrappers::OCgp_Lin^ Line);

//! Make a symetry transformation af axis defined by <br>
//!          <Point> and <Direc>. <br>
OCGC_MakeMirror(OCNaroWrappers::OCgp_Pnt^ Point, OCNaroWrappers::OCgp_Dir^ Direc);

//! Make a symetry transformation of plane <Plane>. <br>
OCGC_MakeMirror(OCNaroWrappers::OCgp_Pln^ Plane);

//! Make a symetry transformation of plane <Plane>. <br>
OCGC_MakeMirror(OCNaroWrappers::OCgp_Ax2^ Plane);

//! Returns the constructed transformation. <br>
 /*instead*/  OCGeom_Transformation^ Value() ;


 /*instead*/  OCGeom_Transformation^ Operator() ;

~OCGC_MakeMirror()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
