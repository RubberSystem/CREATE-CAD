// File generated by CPPExt (MPV)
//
#ifndef _Geom2dLProp_CLProps2d_OCWrappers_HeaderFile
#define _Geom2dLProp_CLProps2d_OCWrappers_HeaderFile

// include native header
#include <Geom2dLProp_CLProps2d.hxx>
#include "../Converter.h"


#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Vec2d.h"
#include "../gp/gp_Dir2d.h"
#include "../LProp/LProp_Status.h"


namespace OCNaroWrappers
{

ref class OCGeom2d_Curve;
ref class OCgp_Vec2d;
ref class OCgp_Pnt2d;
ref class OCgp_Dir2d;
ref class OCGeom2dLProp_Curve2dTool;



public ref class OCGeom2dLProp_CLProps2d  {

protected:
  Geom2dLProp_CLProps2d* nativeHandle;
  OCGeom2dLProp_CLProps2d(OCDummy^) {};

public:
  property Geom2dLProp_CLProps2d* Handle
  {
    Geom2dLProp_CLProps2d* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeom2dLProp_CLProps2d(Geom2dLProp_CLProps2d* nativeHandle);

// Methods PUBLIC


OCGeom2dLProp_CLProps2d(OCNaroWrappers::OCGeom2d_Curve^ C, Standard_Integer N, Standard_Real Resolution);


OCGeom2dLProp_CLProps2d(OCNaroWrappers::OCGeom2d_Curve^ C, Standard_Real U, Standard_Integer N, Standard_Real Resolution);


OCGeom2dLProp_CLProps2d(Standard_Integer N, Standard_Real Resolution);


 /*instead*/  void SetParameter(Standard_Real U) ;


 /*instead*/  void SetCurve(OCNaroWrappers::OCGeom2d_Curve^ C) ;


 /*instead*/  OCgp_Pnt2d^ Value() ;


 /*instead*/  OCgp_Vec2d^ D1() ;


 /*instead*/  OCgp_Vec2d^ D2() ;


 /*instead*/  OCgp_Vec2d^ D3() ;


 /*instead*/  System::Boolean IsTangentDefined() ;


 /*instead*/  void Tangent(OCNaroWrappers::OCgp_Dir2d^ D) ;


 /*instead*/  Standard_Real Curvature() ;


 /*instead*/  void Normal(OCNaroWrappers::OCgp_Dir2d^ N) ;


 /*instead*/  void CentreOfCurvature(OCNaroWrappers::OCgp_Pnt2d^ P) ;

~OCGeom2dLProp_CLProps2d()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
