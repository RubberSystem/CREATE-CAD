// File generated by CPPExt (MPV)
//
#ifndef _Geom2dLProp_CurAndInf2d_OCWrappers_HeaderFile
#define _Geom2dLProp_CurAndInf2d_OCWrappers_HeaderFile

// include native header
#include <Geom2dLProp_CurAndInf2d.hxx>
#include "../Converter.h"

#include "../LProp/LProp_CurAndInf.h"

#include "../LProp/LProp_CurAndInf.h"


namespace OCNaroWrappers
{

ref class OCGeom2d_Curve;


//! An algorithm for computing local properties of a curve. <br>
//! These properties include: <br>
//! - the maximum and minimum curvatures <br>
//! - the inflection points. <br>
//!   A CurAndInf2d object provides the framework for: <br>
//! - defining the curve to be analyzed <br>
//! - implementing the computation algorithms <br>
//! - consulting the results. <br>
public ref class OCGeom2dLProp_CurAndInf2d  : public OCLProp_CurAndInf {

protected:
  // dummy constructor;
  OCGeom2dLProp_CurAndInf2d(OCDummy^) : OCLProp_CurAndInf((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom2dLProp_CurAndInf2d(Geom2dLProp_CurAndInf2d* nativeHandle);

// Methods PUBLIC

//! Initializes the framework. <br>
//! Note: The curve on which the local properties are <br>
//! computed is defined using one of the following <br>
//! functions: Perform, PerformCurExt or PerformInf. <br>
OCGeom2dLProp_CurAndInf2d();

//! For the curve C, Computes both the <br>
//!  inflection points and the maximum and minimum curvatures. <br>
 /*instead*/  void Perform(OCNaroWrappers::OCGeom2d_Curve^ C) ;

//! For the curve C, Computes the locals extremas of curvature. <br>
 /*instead*/  void PerformCurExt(OCNaroWrappers::OCGeom2d_Curve^ C) ;

//! For the curve C, Computes the inflections. <br>
//! After computation, the following functions can be used: <br>
//! - IsDone to check if the computation was successful <br>
//! - NbPoints to obtain the number of computed particular points <br>
//! - Parameter to obtain the parameter on the curve for <br>
//!   each particular point <br>
//! - Type to check if the point is an inflection point or an <br>
//!   extremum of curvature of the curve C. <br>
//!   Warning <br>
//! These functions can be used to analyze a series of <br>
//! curves, however it is necessary to clear the table of <br>
//! results between each computation. <br>
 /*instead*/  void PerformInf(OCNaroWrappers::OCGeom2d_Curve^ C) ;

//! True if the solutions are found. <br>
 /*instead*/  System::Boolean IsDone() ;

~OCGeom2dLProp_CurAndInf2d()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
