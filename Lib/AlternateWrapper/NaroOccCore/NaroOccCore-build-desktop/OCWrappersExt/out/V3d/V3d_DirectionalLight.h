// File generated by CPPExt (Transient)
//
#ifndef _V3d_DirectionalLight_OCWrappers_HeaderFile
#define _V3d_DirectionalLight_OCWrappers_HeaderFile

// include the wrapped class
#include <V3d_DirectionalLight.hxx>
#include "../Converter.h"

#include "V3d_PositionLight.h"

#include "../Graphic3d/Graphic3d_Vertex.h"
#include "V3d_TypeOfOrientation.h"
#include "../Quantity/Quantity_NameOfColor.h"
#include "V3d_TypeOfRepresentation.h"


namespace OCNaroWrappers
{

ref class OCV3d_Viewer;
ref class OCV3d_View;
ref class OCGraphic3d_Group;


//! Create and modify a directional light source <br>
//!          in a viewer. <br>
public ref class OCV3d_DirectionalLight : OCV3d_PositionLight {

protected:
  // dummy constructor;
  OCV3d_DirectionalLight(OCDummy^) : OCV3d_PositionLight((OCDummy^)nullptr) {};

public:

// constructor from native
OCV3d_DirectionalLight(Handle(V3d_DirectionalLight)* nativeHandle);

// Methods PUBLIC

//! Creates a directional light source in the viewer. <br>
OCV3d_DirectionalLight(OCNaroWrappers::OCV3d_Viewer^ VM, OCV3d_TypeOfOrientation Direction, OCQuantity_NameOfColor Color, System::Boolean Headlight);

//! Creates a directional light source in the viewer. <br>
//!          Xt,Yt,Zt : Coordinate of light source Target. <br>
//!          Xp,Yp,Zp : Coordinate of light source Position. <br>
//!          The others parameters describe before. <br>
OCV3d_DirectionalLight(OCNaroWrappers::OCV3d_Viewer^ VM, V3d_Coordinate Xt, V3d_Coordinate Yt, V3d_Coordinate Zt, V3d_Coordinate Xp, V3d_Coordinate Yp, V3d_Coordinate Zp, OCQuantity_NameOfColor Color, System::Boolean Headlight);

//! Defines the direction of the light source <br>
//!	     by a predefined orientation. <br>
 /*instead*/  void SetDirection(OCV3d_TypeOfOrientation Direction) ;

//! Defines the direction of the light source by the predefined <br>
//! vector Xm,Ym,Zm. <br>
//!  Warning: raises  BadValue from Viewer if the vector is null. <br>
 /*instead*/  void SetDirection(Quantity_Parameter Xm, Quantity_Parameter Ym, Quantity_Parameter Zm) ;

//! Defines the point of light source representation. <br>
 /*instead*/  void SetDisplayPosition(V3d_Coordinate X, V3d_Coordinate Y, V3d_Coordinate Z) ;

//! Calls SetDisplayPosition method. <br>
virtual /*instead*/  void SetPosition(V3d_Coordinate Xp, V3d_Coordinate Yp, V3d_Coordinate Zp) ;

//! Display the graphic structure of light source <br>
//!          in the choosen view. We have three type of representation <br>
//!          - SIMPLE   : Only the light source is displayed. <br>
//!          - PARTIAL  : The light source and the light space are <br>
//!                       displayed. <br>
//!          - COMPLETE : The same representation as PARTIAL. <br>
//!          We can choose the "SAMELAST" as parameter of representation <br>
//!          In this case the graphic structure representation will be <br>
//!          the last displayed. <br>
virtual /*instead*/  void Display(OCNaroWrappers::OCV3d_View^ aView, OCV3d_TypeOfRepresentation Representation) override;

//! Calls DisplayPosition method. <br>
virtual /*instead*/  void Position(V3d_Coordinate& X, V3d_Coordinate& Y, V3d_Coordinate& Z) ;

//! Returns the choosen position to represent the light <br>
//!          source. <br>
 /*instead*/  void DisplayPosition(V3d_Coordinate& X, V3d_Coordinate& Y, V3d_Coordinate& Z) ;

//! Returns the Vx,Vy,Vz direction of the light source. <br>
 /*instead*/  void Direction(Quantity_Parameter& Vx, Quantity_Parameter& Vy, Quantity_Parameter& Vz) ;

~OCV3d_DirectionalLight()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
