// File generated by CPPExt (Transient)
//
#ifndef _V3d_PositionalLight_OCWrappers_HeaderFile
#define _V3d_PositionalLight_OCWrappers_HeaderFile

// include the wrapped class
#include <V3d_PositionalLight.hxx>
#include "../Converter.h"

#include "V3d_PositionLight.h"

#include "../Quantity/Quantity_NameOfColor.h"
#include "V3d_TypeOfRepresentation.h"


namespace OCNaroWrappers
{

ref class OCV3d_Viewer;
ref class OCV3d_View;
ref class OCGraphic3d_Group;


//! Creation and modification of an isolated <br>
//!          light source. <br>
public ref class OCV3d_PositionalLight : OCV3d_PositionLight {

protected:
  // dummy constructor;
  OCV3d_PositionalLight(OCDummy^) : OCV3d_PositionLight((OCDummy^)nullptr) {};

public:

// constructor from native
OCV3d_PositionalLight(Handle(V3d_PositionalLight)* nativeHandle);

// Methods PUBLIC

//! Creates an isolated light source X,Y,Z in the viewer. <br>
//!          It is also defined by the color Color and <br>
//!          two attenuation factors Attenuation1, Attenuation2. <br>
//!	    The resulting attenuation factor determining the <br>
//!	    illumination of a surface depends on the following <br>
//!	    formula : <br>
//!	    F = 1/(A1 + A2*Length) <br>
//!		A1,A2 being the two factors of attenuation <br>
//!	 	Length is the distance of the isolated source <br>
//!	    from the surface. <br>//!  Warning!  raises BadValue from Viewer <br>
//!          if one of the attenuation coefficients is not between 0 et 1. <br>
OCV3d_PositionalLight(OCNaroWrappers::OCV3d_Viewer^ VM, V3d_Coordinate X, V3d_Coordinate Y, V3d_Coordinate Z, OCQuantity_NameOfColor Color, Quantity_Coefficient Attenuation1, Quantity_Coefficient Attenuation2);

//! Creates a light source of the Positional type <br>
//!          in the viewer. <br>
//!          Xt,Yt,Zt : Coordinate of Target light source. <br>
//!          Xp,Yp,Zp : Coordinate of Position light source. <br>
//!          The light source is also defined by the color Color <br>
//!          and two attenuation factors Attenuation1, <br>
//!          Attenuation2 that determine the illumination of a <br>
//!          surface using the following formula : <br>
//!          F = 1/(A1 + A2*Length) where: <br>
//!          -   A1,A2 are the two attenuation factors, and <br>
//!          -   Length is the distance from the isolated source. <br>//!  Warning! raises BadValue from Viewer <br>
//!          if one of the attenuation coefficients is not between 0 et 1. <br>
OCV3d_PositionalLight(OCNaroWrappers::OCV3d_Viewer^ VM, V3d_Coordinate Xt, V3d_Coordinate Yt, V3d_Coordinate Zt, V3d_Coordinate Xp, V3d_Coordinate Yp, V3d_Coordinate Zp, OCQuantity_NameOfColor Color, Quantity_Coefficient Attenuation1, Quantity_Coefficient Attenuation2);

//! Defines the position of the light source. <br>
virtual /*instead*/  void SetPosition(V3d_Coordinate X, V3d_Coordinate Y, V3d_Coordinate Z) ;

//! Defines the attenuation factors. <br>
//!  Warning: raises BadValue from Viewer <br>
//!          if one of the attenuation coefficients is not between 0 et 1. <br>
 /*instead*/  void SetAttenuation(Quantity_Coefficient A1, Quantity_Coefficient A2) ;

//! Display the graphic structure of light source <br>
//!          in the choosen view. We have three type of representation <br>
//!          - SIMPLE   : Only the light source is displayed. <br>
//!          - PARTIAL  : The light source and the light space are <br>
//!                       displayed. <br>
//!          - COMPLETE : The light source, the light space and the <br>
//!                       radius of light space are displayed. <br>
//!          We can choose the "SAMELAST" as parameter of representation <br>
//!          In this case the graphic structure representation will be <br>
//!          the last displayed. <br>
virtual /*instead*/  void Display(OCNaroWrappers::OCV3d_View^ aView, OCV3d_TypeOfRepresentation Representation) override;

//! Returns the position of the light source. <br>
virtual /*instead*/  void Position(V3d_Coordinate& X, V3d_Coordinate& Y, V3d_Coordinate& Z) ;

//! Returns the attenuation factors A1,A2 of the light <br>
//! source used at construction time. <br>
 /*instead*/  void Attenuation(Quantity_Coefficient& A1, Quantity_Coefficient& A2) ;

~OCV3d_PositionalLight()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
