// File generated by CPPExt (CPP file)
//

#include "V3d_PositionLight.h"
#include "../Converter.h"
#include "V3d_Viewer.h"
#include "V3d_View.h"
#include "../Graphic3d/Graphic3d_Group.h"


using namespace OCNaroWrappers;

OCV3d_PositionLight::OCV3d_PositionLight(Handle(V3d_PositionLight)* nativeHandle) : OCV3d_Light((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_V3d_PositionLight(*nativeHandle);
}

OCV3d_PositionLight::OCV3d_PositionLight(OCNaroWrappers::OCV3d_Viewer^ VM) : OCV3d_Light((OCDummy^)nullptr)

{}

 void OCV3d_PositionLight::SetTarget(V3d_Coordinate X, V3d_Coordinate Y, V3d_Coordinate Z)
{
  (*((Handle_V3d_PositionLight*)nativeHandle))->SetTarget(X, Y, Z);
}

 void OCV3d_PositionLight::SetRadius(Quantity_Parameter Radius)
{
  (*((Handle_V3d_PositionLight*)nativeHandle))->SetRadius(Radius);
}

 void OCV3d_PositionLight::OnHideFace(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_V3d_PositionLight*)nativeHandle))->OnHideFace(*((Handle_V3d_View*)aView->Handle));
}

 void OCV3d_PositionLight::OnSeeFace(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_V3d_PositionLight*)nativeHandle))->OnSeeFace(*((Handle_V3d_View*)aView->Handle));
}

 void OCV3d_PositionLight::Tracking(OCNaroWrappers::OCV3d_View^ aView, OCV3d_TypeOfPickLight WathPick, Standard_Integer Xpix, Standard_Integer Ypix)
{
  (*((Handle_V3d_PositionLight*)nativeHandle))->Tracking(*((Handle_V3d_View*)aView->Handle), (V3d_TypeOfPickLight)WathPick, Xpix, Ypix);
}

 void OCV3d_PositionLight::Display(OCNaroWrappers::OCV3d_View^ aView, OCV3d_TypeOfRepresentation Representation)
{
  (*((Handle_V3d_PositionLight*)nativeHandle))->Display(*((Handle_V3d_View*)aView->Handle), (V3d_TypeOfRepresentation)Representation);
}

 void OCV3d_PositionLight::Erase()
{
  (*((Handle_V3d_PositionLight*)nativeHandle))->Erase();
}

 Quantity_Parameter OCV3d_PositionLight::Radius()
{
  return (*((Handle_V3d_PositionLight*)nativeHandle))->Radius();
}

 System::Boolean OCV3d_PositionLight::SeeOrHide(OCNaroWrappers::OCV3d_View^ aView)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_V3d_PositionLight*)nativeHandle))->SeeOrHide(*((Handle_V3d_View*)aView->Handle)));
}

 void OCV3d_PositionLight::Target(V3d_Coordinate& X, V3d_Coordinate& Y, V3d_Coordinate& Z)
{
  (*((Handle_V3d_PositionLight*)nativeHandle))->Target(X, Y, Z);
}


