// File generated by CPPExt (Transient)
//
#ifndef _V3d_PositionLight_OCWrappers_HeaderFile
#define _V3d_PositionLight_OCWrappers_HeaderFile

// include the wrapped class
#include <V3d_PositionLight.hxx>
#include "../Converter.h"

#include "V3d_Light.h"

#include "../Graphic3d/Graphic3d_Vertex.h"
#include "V3d_TypeOfRepresentation.h"
#include "V3d_TypeOfPickLight.h"


namespace OCNaroWrappers
{

ref class OCV3d_Viewer;
ref class OCV3d_View;
ref class OCGraphic3d_Group;


//! Base class for Positional, Spot and Directional Light classes <br>
public ref class OCV3d_PositionLight : OCV3d_Light {

protected:
  // dummy constructor;
  OCV3d_PositionLight(OCDummy^) : OCV3d_Light((OCDummy^)nullptr) {};

public:

// constructor from native
OCV3d_PositionLight(Handle(V3d_PositionLight)* nativeHandle);

// Methods PUBLIC


OCV3d_PositionLight(OCNaroWrappers::OCV3d_Viewer^ VM);

//! Defines the target of the light (the center <br>
//!          of the sphere) <br>
 /*instead*/  void SetTarget(V3d_Coordinate X, V3d_Coordinate Y, V3d_Coordinate Z) ;

//! Define the radius. <br>
 /*instead*/  void SetRadius(Quantity_Parameter Radius) ;

//! Calculate the position of the light, on the hide face <br>
//!          of the picking sphere. <br>
 /*instead*/  void OnHideFace(OCNaroWrappers::OCV3d_View^ aView) ;

//! Calculate the position of the light, on the seen face <br>
//!          of the picking sphere. <br>
 /*instead*/  void OnSeeFace(OCNaroWrappers::OCV3d_View^ aView) ;

//! Tracking the light position, or the light space, <br>
//!          or the radius of the light space, that depends of <br>
//!          initial picking "WhatPick" (see the pick method). <br>
//!          If WhatPick is SPACELIGHT, then the parameters <br>
//!          Xpix, Ypix are the coordinates of a translation vector. <br>
 /*instead*/  void Tracking(OCNaroWrappers::OCV3d_View^ aView, OCV3d_TypeOfPickLight WathPick, Standard_Integer Xpix, Standard_Integer Ypix) ;

//! Display the graphic structure of light source <br>
//!          in the choosen view. We have three type of representation <br>
//!          - SIMPLE   : Only the light source is displayed. <br>
//!          - PARTIAL  : The light source and the light space are <br>
//!                       displayed. <br>
//!          - COMPLETE : The light source, the light space and the <br>
//!                       radius of light space are displayed. <br>
//!          We can choose the "SAMELAST" as parameter of representation <br>
//!          In this case the graphic structure representation will be <br>
//!          the last displayed. <br>
virtual /*instead*/  void Display(OCNaroWrappers::OCV3d_View^ aView, OCV3d_TypeOfRepresentation Representation) ;

//! Erase the graphic structure of light source. <br>
 /*instead*/  void Erase() ;

//! Returns the radius of the picking sphere. <br>
 /*instead*/  Quantity_Parameter Radius() ;

//! Returns the visibility status <br>
//!          If True the source is visible. <br>
//!          If False it's hidden. <br>
 /*instead*/  System::Boolean SeeOrHide(OCNaroWrappers::OCV3d_View^ aView) ;

//! Returns the position of the target of the light source. <br>
 /*instead*/  void Target(V3d_Coordinate& X, V3d_Coordinate& Y, V3d_Coordinate& Z) ;

~OCV3d_PositionLight()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
