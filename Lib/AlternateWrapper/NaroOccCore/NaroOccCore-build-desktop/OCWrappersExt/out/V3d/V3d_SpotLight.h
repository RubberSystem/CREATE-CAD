// File generated by CPPExt (Transient)
//
#ifndef _V3d_SpotLight_OCWrappers_HeaderFile
#define _V3d_SpotLight_OCWrappers_HeaderFile

// include the wrapped class
#include <V3d_SpotLight.hxx>
#include "../Converter.h"

#include "V3d_PositionLight.h"

#include "V3d_TypeOfOrientation.h"
#include "../Quantity/Quantity_NameOfColor.h"
#include "V3d_TypeOfRepresentation.h"


namespace OCNaroWrappers
{

ref class OCV3d_Viewer;
ref class OCV3d_View;
ref class OCGraphic3d_Group;


//! Creation and modification of a spot. <br>
public ref class OCV3d_SpotLight : OCV3d_PositionLight {

protected:
  // dummy constructor;
  OCV3d_SpotLight(OCDummy^) : OCV3d_PositionLight((OCDummy^)nullptr) {};

public:

// constructor from native
OCV3d_SpotLight(Handle(V3d_SpotLight)* nativeHandle);

// Methods PUBLIC

//! Creates a light source of the Spot type in the viewer. <br>
//!          The attenuation factor F which determines <br>
//!          the illumination of a surface depends on the following formula : <br>
//!          F = 1/(A1 + A2*Length) <br>
//!              A1,A2 being the 2 factors of attenuation <br>
//!              Length is the distance from the source to the surface. <br>
//!	    The default values (1.0,0.0) correspond to a minimum <br>
//!	    of attenuation . <br>
//!	    The concentration factor determines the dispersion <br>
//!	    of the light on the surface, the default value <br>
//!	    (1.0) corresponds to a minimum of dispersion . <br>//!  Warning! raises BadValue from Viewer  - <br>
//!	If one of the coefficients is not between 0 and 1 . <br>
//!	If the lighting angle is <= 0 ou > PI . <br>
OCV3d_SpotLight(OCNaroWrappers::OCV3d_Viewer^ VM, V3d_Coordinate X, V3d_Coordinate Y, V3d_Coordinate Z, OCV3d_TypeOfOrientation Direction, OCQuantity_NameOfColor Color, Quantity_Coefficient Attenuation1, Quantity_Coefficient Attenuation2, Quantity_Coefficient Concentration, Quantity_PlaneAngle Angle);

//! Creates a light source of the Spot type in the viewer. <br>
//!          Xt,Yt,Zt : Coordinate of light source Target. <br>
//!          Xp,Yp,Zp : Coordinate of light source Position. <br>
//!          The others parameters describe before. <br>//!  Warning! raises BadValue from Viewer  - <br>
//!	If one of the coefficients is not between 0 and 1 . <br>
//!	If the lighting angle is <= 0 ou > PI . <br>
OCV3d_SpotLight(OCNaroWrappers::OCV3d_Viewer^ VM, V3d_Coordinate Xt, V3d_Coordinate Yt, V3d_Coordinate Zt, V3d_Coordinate Xp, V3d_Coordinate Yp, V3d_Coordinate Zp, OCQuantity_NameOfColor Color, Quantity_Coefficient Attenuation1, Quantity_Coefficient Attenuation2, Quantity_Coefficient Concentration, Quantity_PlaneAngle Angle);

//! Defines the position of the light source. <br>
virtual /*instead*/  void SetPosition(V3d_Coordinate X, V3d_Coordinate Y, V3d_Coordinate Z) ;

//! Defines the direction of the light source. <br>
//!	If the normal vector is NULL. <br>
 /*instead*/  void SetDirection(Quantity_Parameter Vx, Quantity_Parameter Vy, Quantity_Parameter Vz) ;

//! Defines the direction of the light source <br>
//!	     according to a predefined directional vector. <br>
 /*instead*/  void SetDirection(OCV3d_TypeOfOrientation Orientation) ;

//! Defines the coefficients of attenuation. <br>
//!  Warning! raises BadValue from Viewer <br>
//!	    if one of the coefficient is <0 ou >1 . <br>
 /*instead*/  void SetAttenuation(Quantity_Coefficient A1, Quantity_Coefficient A2) ;

//! Defines the coefficient of concentration. <br>
//!	if the coefficient is <0 ou >1 . <br>
 /*instead*/  void SetConcentration(Quantity_Coefficient C) ;

//! Defines the spot angle in RADIANS. <br>
//!  Warning: raises BadValue from from Viewer <br>
//!	If the angle is <= 0 ou > PI . <br>
 /*instead*/  void SetAngle(Quantity_PlaneAngle Angle) ;

//! Display the graphic structure of light source <br>
//!          in the choosen view. We have three type of representation <br>
//!          - SIMPLE   : Only the light source is displayed. <br>
//!          - PARTIAL  : The light source and the light space are <br>
//!                       displayed. <br>
//!          - COMPLETE : The light source, the light space and the <br>
//!                       radius of light space are displayed. <br>
//!          We can choose the "SAMELAST" as parameter of representation <br>
//!          In this case the graphic structure representation will be <br>
//!          the last displayed. <br>
virtual /*instead*/  void Display(OCNaroWrappers::OCV3d_View^ aView, OCV3d_TypeOfRepresentation Representation) override;

//! Returns the direction of the light source defined by Vx,Vy,Vz. <br>
 /*instead*/  void Direction(Quantity_Parameter& Vx, Quantity_Parameter& Vy, Quantity_Parameter& Vz) ;

//! Returns the position of the light source. <br>
virtual /*instead*/  void Position(V3d_Coordinate& X, V3d_Coordinate& Y, V3d_Coordinate& Z) ;

//! Returns the attenuation factors A1,A2 of the light source. <br>
 /*instead*/  void Attenuation(Quantity_Coefficient& A1, Quantity_Coefficient& A2) ;


 /*instead*/  Quantity_Coefficient Concentration() ;

//! Returns the spot angle. <br>
 /*instead*/  Quantity_PlaneAngle Angle() ;

~OCV3d_SpotLight()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
