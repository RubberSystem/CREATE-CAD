// File generated by CPPExt (CPP file)
//

#include "TCollection_ExtendedString.h"
#include "../Converter.h"
#include "TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCTCollection_ExtendedString::OCTCollection_ExtendedString(TCollection_ExtendedString* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString() 
{
  nativeHandle = new TCollection_ExtendedString();
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString(System::String^ astring, System::Boolean isMultiByte) 
{
  nativeHandle = new TCollection_ExtendedString(OCConverter::StringToStandardCString(astring), OCConverter::BooleanToStandardBoolean(isMultiByte));
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString(System::String^ astring) 
{
  nativeHandle = new TCollection_ExtendedString(OCConverter::StringToStandardExtString(astring));
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString(Standard_Character aChar) 
{
  nativeHandle = new TCollection_ExtendedString(aChar);
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString(Standard_ExtCharacter aChar) 
{
  nativeHandle = new TCollection_ExtendedString(aChar);
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString(Standard_Integer length, Standard_ExtCharacter filler) 
{
  nativeHandle = new TCollection_ExtendedString(length, filler);
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString(Standard_Integer value) 
{
  nativeHandle = new TCollection_ExtendedString(value);
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString(Standard_Real value) 
{
  nativeHandle = new TCollection_ExtendedString(value);
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString(OCNaroWrappers::OCTCollection_ExtendedString^ astring) 
{
  nativeHandle = new TCollection_ExtendedString(*((TCollection_ExtendedString*)astring->Handle));
}

OCTCollection_ExtendedString::OCTCollection_ExtendedString(OCNaroWrappers::OCTCollection_AsciiString^ astring) 
{
  nativeHandle = new TCollection_ExtendedString(*((TCollection_AsciiString*)astring->Handle));
}

 void OCTCollection_ExtendedString::AssignCat(OCNaroWrappers::OCTCollection_ExtendedString^ other)
{
  ((TCollection_ExtendedString*)nativeHandle)->AssignCat(*((TCollection_ExtendedString*)other->Handle));
}

OCTCollection_ExtendedString^ OCTCollection_ExtendedString::Cat(OCNaroWrappers::OCTCollection_ExtendedString^ other)
{
  TCollection_ExtendedString* tmp = new TCollection_ExtendedString();
  *tmp = ((TCollection_ExtendedString*)nativeHandle)->Cat(*((TCollection_ExtendedString*)other->Handle));
  return gcnew OCTCollection_ExtendedString(tmp);
}

 void OCTCollection_ExtendedString::ChangeAll(Standard_ExtCharacter aChar, Standard_ExtCharacter NewChar)
{
  ((TCollection_ExtendedString*)nativeHandle)->ChangeAll(aChar, NewChar);
}

 void OCTCollection_ExtendedString::Clear()
{
  ((TCollection_ExtendedString*)nativeHandle)->Clear();
}

 void OCTCollection_ExtendedString::Copy(OCNaroWrappers::OCTCollection_ExtendedString^ fromwhere)
{
  ((TCollection_ExtendedString*)nativeHandle)->Copy(*((TCollection_ExtendedString*)fromwhere->Handle));
}

 void OCTCollection_ExtendedString::Insert(Standard_Integer where, Standard_ExtCharacter what)
{
  ((TCollection_ExtendedString*)nativeHandle)->Insert(where, what);
}

 void OCTCollection_ExtendedString::Insert(Standard_Integer where, OCNaroWrappers::OCTCollection_ExtendedString^ what)
{
  ((TCollection_ExtendedString*)nativeHandle)->Insert(where, *((TCollection_ExtendedString*)what->Handle));
}

 System::Boolean OCTCollection_ExtendedString::IsEqual(System::String^ other)
{
  return OCConverter::StandardBooleanToBoolean(((TCollection_ExtendedString*)nativeHandle)->IsEqual(OCConverter::StringToStandardExtString(other)));
}

 System::Boolean OCTCollection_ExtendedString::IsEqual(OCNaroWrappers::OCTCollection_ExtendedString^ other)
{
  return OCConverter::StandardBooleanToBoolean(((TCollection_ExtendedString*)nativeHandle)->IsEqual(*((TCollection_ExtendedString*)other->Handle)));
}

 System::Boolean OCTCollection_ExtendedString::IsDifferent(System::String^ other)
{
  return OCConverter::StandardBooleanToBoolean(((TCollection_ExtendedString*)nativeHandle)->IsDifferent(OCConverter::StringToStandardExtString(other)));
}

 System::Boolean OCTCollection_ExtendedString::IsDifferent(OCNaroWrappers::OCTCollection_ExtendedString^ other)
{
  return OCConverter::StandardBooleanToBoolean(((TCollection_ExtendedString*)nativeHandle)->IsDifferent(*((TCollection_ExtendedString*)other->Handle)));
}

 System::Boolean OCTCollection_ExtendedString::IsLess(System::String^ other)
{
  return OCConverter::StandardBooleanToBoolean(((TCollection_ExtendedString*)nativeHandle)->IsLess(OCConverter::StringToStandardExtString(other)));
}

 System::Boolean OCTCollection_ExtendedString::IsLess(OCNaroWrappers::OCTCollection_ExtendedString^ other)
{
  return OCConverter::StandardBooleanToBoolean(((TCollection_ExtendedString*)nativeHandle)->IsLess(*((TCollection_ExtendedString*)other->Handle)));
}

 System::Boolean OCTCollection_ExtendedString::IsGreater(System::String^ other)
{
  return OCConverter::StandardBooleanToBoolean(((TCollection_ExtendedString*)nativeHandle)->IsGreater(OCConverter::StringToStandardExtString(other)));
}

 System::Boolean OCTCollection_ExtendedString::IsGreater(OCNaroWrappers::OCTCollection_ExtendedString^ other)
{
  return OCConverter::StandardBooleanToBoolean(((TCollection_ExtendedString*)nativeHandle)->IsGreater(*((TCollection_ExtendedString*)other->Handle)));
}

 System::Boolean OCTCollection_ExtendedString::IsAscii()
{
  return OCConverter::StandardBooleanToBoolean(((TCollection_ExtendedString*)nativeHandle)->IsAscii());
}

 Standard_Integer OCTCollection_ExtendedString::Length()
{
  return ((TCollection_ExtendedString*)nativeHandle)->Length();
}

 void OCTCollection_ExtendedString::Print(Standard_OStream& astream)
{
  ((TCollection_ExtendedString*)nativeHandle)->Print(astream);
}

 void OCTCollection_ExtendedString::RemoveAll(Standard_ExtCharacter what)
{
  ((TCollection_ExtendedString*)nativeHandle)->RemoveAll(what);
}

 void OCTCollection_ExtendedString::Remove(Standard_Integer where, Standard_Integer ahowmany)
{
  ((TCollection_ExtendedString*)nativeHandle)->Remove(where, ahowmany);
}

 Standard_Integer OCTCollection_ExtendedString::Search(OCNaroWrappers::OCTCollection_ExtendedString^ what)
{
  return ((TCollection_ExtendedString*)nativeHandle)->Search(*((TCollection_ExtendedString*)what->Handle));
}

 Standard_Integer OCTCollection_ExtendedString::SearchFromEnd(OCNaroWrappers::OCTCollection_ExtendedString^ what)
{
  return ((TCollection_ExtendedString*)nativeHandle)->SearchFromEnd(*((TCollection_ExtendedString*)what->Handle));
}

 void OCTCollection_ExtendedString::SetValue(Standard_Integer where, Standard_ExtCharacter what)
{
  ((TCollection_ExtendedString*)nativeHandle)->SetValue(where, what);
}

 void OCTCollection_ExtendedString::SetValue(Standard_Integer where, OCNaroWrappers::OCTCollection_ExtendedString^ what)
{
  ((TCollection_ExtendedString*)nativeHandle)->SetValue(where, *((TCollection_ExtendedString*)what->Handle));
}

OCTCollection_ExtendedString^ OCTCollection_ExtendedString::Split(Standard_Integer where)
{
  TCollection_ExtendedString* tmp = new TCollection_ExtendedString();
  *tmp = ((TCollection_ExtendedString*)nativeHandle)->Split(where);
  return gcnew OCTCollection_ExtendedString(tmp);
}

OCTCollection_ExtendedString^ OCTCollection_ExtendedString::Token(System::String^ separators, Standard_Integer whichone)
{
  TCollection_ExtendedString* tmp = new TCollection_ExtendedString();
  *tmp = ((TCollection_ExtendedString*)nativeHandle)->Token(OCConverter::StringToStandardExtString(separators), whichone);
  return gcnew OCTCollection_ExtendedString(tmp);
}

 System::String^ OCTCollection_ExtendedString::ToExtString()
{
  return OCConverter::StandardExtStringToString(((TCollection_ExtendedString*)nativeHandle)->ToExtString());
}

 void OCTCollection_ExtendedString::Trunc(Standard_Integer ahowmany)
{
  ((TCollection_ExtendedString*)nativeHandle)->Trunc(ahowmany);
}

 Standard_ExtCharacter OCTCollection_ExtendedString::Value(Standard_Integer where)
{
  return ((TCollection_ExtendedString*)nativeHandle)->Value(where);
}

 Standard_Integer OCTCollection_ExtendedString::HashCode(OCNaroWrappers::OCTCollection_ExtendedString^ astring, Standard_Integer Upper)
{
  return TCollection_ExtendedString::HashCode(*((TCollection_ExtendedString*)astring->Handle), Upper);
}

 System::Boolean OCTCollection_ExtendedString::IsEqual(OCNaroWrappers::OCTCollection_ExtendedString^ string1, OCNaroWrappers::OCTCollection_ExtendedString^ string2)
{
  return OCConverter::StandardBooleanToBoolean(TCollection_ExtendedString::IsEqual(*((TCollection_ExtendedString*)string1->Handle), *((TCollection_ExtendedString*)string2->Handle)));
}

 Standard_Integer OCTCollection_ExtendedString::ToUTF8CString(Standard_PCharacter& theCString)
{
  return ((TCollection_ExtendedString*)nativeHandle)->ToUTF8CString(theCString);
}

 Standard_Integer OCTCollection_ExtendedString::LengthOfCString()
{
  return ((TCollection_ExtendedString*)nativeHandle)->LengthOfCString();
}


