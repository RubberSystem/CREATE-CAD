// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_ShapeTolerance.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_HSequenceOfShape.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_ShapeTolerance::OCShapeAnalysis_ShapeTolerance(ShapeAnalysis_ShapeTolerance* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCShapeAnalysis_ShapeTolerance::OCShapeAnalysis_ShapeTolerance() 
{
  nativeHandle = new ShapeAnalysis_ShapeTolerance();
}

 Standard_Real OCShapeAnalysis_ShapeTolerance::Tolerance(OCNaroWrappers::OCTopoDS_Shape^ shape, Standard_Integer mode, OCTopAbs_ShapeEnum type)
{
  return ((ShapeAnalysis_ShapeTolerance*)nativeHandle)->Tolerance(*((TopoDS_Shape*)shape->Handle), mode, (TopAbs_ShapeEnum)type);
}

OCTopTools_HSequenceOfShape^ OCShapeAnalysis_ShapeTolerance::OverTolerance(OCNaroWrappers::OCTopoDS_Shape^ shape, Standard_Real value, OCTopAbs_ShapeEnum type)
{
  Handle(TopTools_HSequenceOfShape) tmp = ((ShapeAnalysis_ShapeTolerance*)nativeHandle)->OverTolerance(*((TopoDS_Shape*)shape->Handle), value, (TopAbs_ShapeEnum)type);
  return gcnew OCTopTools_HSequenceOfShape(&tmp);
}

OCTopTools_HSequenceOfShape^ OCShapeAnalysis_ShapeTolerance::InTolerance(OCNaroWrappers::OCTopoDS_Shape^ shape, Standard_Real valmin, Standard_Real valmax, OCTopAbs_ShapeEnum type)
{
  Handle(TopTools_HSequenceOfShape) tmp = ((ShapeAnalysis_ShapeTolerance*)nativeHandle)->InTolerance(*((TopoDS_Shape*)shape->Handle), valmin, valmax, (TopAbs_ShapeEnum)type);
  return gcnew OCTopTools_HSequenceOfShape(&tmp);
}

 void OCShapeAnalysis_ShapeTolerance::InitTolerance()
{
  ((ShapeAnalysis_ShapeTolerance*)nativeHandle)->InitTolerance();
}

 void OCShapeAnalysis_ShapeTolerance::AddTolerance(OCNaroWrappers::OCTopoDS_Shape^ shape, OCTopAbs_ShapeEnum type)
{
  ((ShapeAnalysis_ShapeTolerance*)nativeHandle)->AddTolerance(*((TopoDS_Shape*)shape->Handle), (TopAbs_ShapeEnum)type);
}

 Standard_Real OCShapeAnalysis_ShapeTolerance::GlobalTolerance(Standard_Integer mode)
{
  return ((ShapeAnalysis_ShapeTolerance*)nativeHandle)->GlobalTolerance(mode);
}


