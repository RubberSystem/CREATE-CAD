// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_TransferParametersProj.h"
#include "../Converter.h"
#include "../Geom/Geom_Curve.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TColStd/TColStd_HSequenceOfReal.h"
#include "../TopoDS/TopoDS_Vertex.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_TransferParametersProj::OCShapeAnalysis_TransferParametersProj(Handle(ShapeAnalysis_TransferParametersProj)* nativeHandle) : OCShapeAnalysis_TransferParameters((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_ShapeAnalysis_TransferParametersProj(*nativeHandle);
}

OCShapeAnalysis_TransferParametersProj::OCShapeAnalysis_TransferParametersProj() : OCShapeAnalysis_TransferParameters((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ShapeAnalysis_TransferParametersProj(new ShapeAnalysis_TransferParametersProj());
}

OCShapeAnalysis_TransferParametersProj::OCShapeAnalysis_TransferParametersProj(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F) : OCShapeAnalysis_TransferParameters((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ShapeAnalysis_TransferParametersProj(new ShapeAnalysis_TransferParametersProj(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle)));
}

 void OCShapeAnalysis_TransferParametersProj::Init(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F)
{
  (*((Handle_ShapeAnalysis_TransferParametersProj*)nativeHandle))->Init(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle));
}

OCTColStd_HSequenceOfReal^ OCShapeAnalysis_TransferParametersProj::Perform(OCNaroWrappers::OCTColStd_HSequenceOfReal^ Papams, System::Boolean To2d)
{
  Handle(TColStd_HSequenceOfReal) tmp = (*((Handle_ShapeAnalysis_TransferParametersProj*)nativeHandle))->Perform(*((Handle_TColStd_HSequenceOfReal*)Papams->Handle), OCConverter::BooleanToStandardBoolean(To2d));
  return gcnew OCTColStd_HSequenceOfReal(&tmp);
}

 Standard_Real OCShapeAnalysis_TransferParametersProj::Perform(Standard_Real Param, System::Boolean To2d)
{
  return (*((Handle_ShapeAnalysis_TransferParametersProj*)nativeHandle))->Perform(Param, OCConverter::BooleanToStandardBoolean(To2d));
}

 System::Boolean OCShapeAnalysis_TransferParametersProj::ForceProjection()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_TransferParametersProj*)nativeHandle))->ForceProjection());
}

 void OCShapeAnalysis_TransferParametersProj::TransferRange(OCNaroWrappers::OCTopoDS_Edge^ newEdge, Standard_Real prevPar, Standard_Real currPar, System::Boolean Is2d)
{
  (*((Handle_ShapeAnalysis_TransferParametersProj*)nativeHandle))->TransferRange(*((TopoDS_Edge*)newEdge->Handle), prevPar, currPar, OCConverter::BooleanToStandardBoolean(Is2d));
}

 System::Boolean OCShapeAnalysis_TransferParametersProj::IsSameRange()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_TransferParametersProj*)nativeHandle))->IsSameRange());
}

OCTopoDS_Vertex^ OCShapeAnalysis_TransferParametersProj::CopyNMVertex(OCNaroWrappers::OCTopoDS_Vertex^ theVert, OCNaroWrappers::OCTopoDS_Edge^ toedge, OCNaroWrappers::OCTopoDS_Edge^ fromedge)
{
  TopoDS_Vertex* tmp = new TopoDS_Vertex();
  *tmp = ShapeAnalysis_TransferParametersProj::CopyNMVertex(*((TopoDS_Vertex*)theVert->Handle), *((TopoDS_Edge*)toedge->Handle), *((TopoDS_Edge*)fromedge->Handle));
  return gcnew OCTopoDS_Vertex(tmp);
}

OCTopoDS_Vertex^ OCShapeAnalysis_TransferParametersProj::CopyNMVertex(OCNaroWrappers::OCTopoDS_Vertex^ theVert, OCNaroWrappers::OCTopoDS_Face^ toFace, OCNaroWrappers::OCTopoDS_Face^ fromFace)
{
  TopoDS_Vertex* tmp = new TopoDS_Vertex();
  *tmp = ShapeAnalysis_TransferParametersProj::CopyNMVertex(*((TopoDS_Vertex*)theVert->Handle), *((TopoDS_Face*)toFace->Handle), *((TopoDS_Face*)fromFace->Handle));
  return gcnew OCTopoDS_Vertex(tmp);
}


