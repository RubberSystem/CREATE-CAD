// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_CheckSmallFace.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../gp/gp_Pnt.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopTools/TopTools_DataMapOfShapeListOfShape.h"
#include "ShapeAnalysis_DataMapOfShapeListOfReal.h"
#include "../TopoDS/TopoDS_Compound.h"
#include "../TopTools/TopTools_DataMapOfShapeShape.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_CheckSmallFace::OCShapeAnalysis_CheckSmallFace(ShapeAnalysis_CheckSmallFace* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCShapeAnalysis_CheckSmallFace::OCShapeAnalysis_CheckSmallFace() 
{
  nativeHandle = new ShapeAnalysis_CheckSmallFace();
}

 Standard_Integer OCShapeAnalysis_CheckSmallFace::IsSpotFace(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Pnt^ spot, Standard_Real& spotol, Standard_Real tol)
{
  return ((ShapeAnalysis_CheckSmallFace*)nativeHandle)->IsSpotFace(*((TopoDS_Face*)F->Handle), *((gp_Pnt*)spot->Handle), spotol, tol);
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::CheckSpotFace(OCNaroWrappers::OCTopoDS_Face^ F, Standard_Real tol)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->CheckSpotFace(*((TopoDS_Face*)F->Handle), tol));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::IsStripSupport(OCNaroWrappers::OCTopoDS_Face^ F, Standard_Real tol)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->IsStripSupport(*((TopoDS_Face*)F->Handle), tol));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::CheckStripEdges(OCNaroWrappers::OCTopoDS_Edge^ E1, OCNaroWrappers::OCTopoDS_Edge^ E2, Standard_Real tol, Standard_Real& dmax)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->CheckStripEdges(*((TopoDS_Edge*)E1->Handle), *((TopoDS_Edge*)E2->Handle), tol, dmax));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::FindStripEdges(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopoDS_Edge^ E1, OCNaroWrappers::OCTopoDS_Edge^ E2, Standard_Real tol, Standard_Real& dmax)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->FindStripEdges(*((TopoDS_Face*)F->Handle), *((TopoDS_Edge*)E1->Handle), *((TopoDS_Edge*)E2->Handle), tol, dmax));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::CheckSingleStrip(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopoDS_Edge^ E1, OCNaroWrappers::OCTopoDS_Edge^ E2, Standard_Real tol)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->CheckSingleStrip(*((TopoDS_Face*)F->Handle), *((TopoDS_Edge*)E1->Handle), *((TopoDS_Edge*)E2->Handle), tol));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::CheckStripFace(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopoDS_Edge^ E1, OCNaroWrappers::OCTopoDS_Edge^ E2, Standard_Real tol)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->CheckStripFace(*((TopoDS_Face*)F->Handle), *((TopoDS_Edge*)E1->Handle), *((TopoDS_Edge*)E2->Handle), tol));
}

 Standard_Integer OCShapeAnalysis_CheckSmallFace::CheckSplittingVertices(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopTools_DataMapOfShapeListOfShape^ MapEdges, OCNaroWrappers::OCShapeAnalysis_DataMapOfShapeListOfReal^ MapParam, OCNaroWrappers::OCTopoDS_Compound^ theAllVert)
{
  return ((ShapeAnalysis_CheckSmallFace*)nativeHandle)->CheckSplittingVertices(*((TopoDS_Face*)F->Handle), *((TopTools_DataMapOfShapeListOfShape*)MapEdges->Handle), *((ShapeAnalysis_DataMapOfShapeListOfReal*)MapParam->Handle), *((TopoDS_Compound*)theAllVert->Handle));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::CheckPin(OCNaroWrappers::OCTopoDS_Face^ F, Standard_Integer& whatrow, Standard_Integer& sence)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->CheckPin(*((TopoDS_Face*)F->Handle), whatrow, sence));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::CheckTwisted(OCNaroWrappers::OCTopoDS_Face^ F, Standard_Real& paramu, Standard_Real& paramv)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->CheckTwisted(*((TopoDS_Face*)F->Handle), paramu, paramv));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::CheckPinFace(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopTools_DataMapOfShapeShape^ mapEdges, Standard_Real toler)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->CheckPinFace(*((TopoDS_Face*)F->Handle), *((TopTools_DataMapOfShapeShape*)mapEdges->Handle), toler));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::CheckPinEdges(OCNaroWrappers::OCTopoDS_Edge^ theFirstEdge, OCNaroWrappers::OCTopoDS_Edge^ theSecondEdge, Standard_Real coef1, Standard_Real coef2, Standard_Real toler)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->CheckPinEdges(*((TopoDS_Edge*)theFirstEdge->Handle), *((TopoDS_Edge*)theSecondEdge->Handle), coef1, coef2, toler));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::Status(OCShapeExtend_Status status)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->Status((ShapeExtend_Status)status));
}

 void OCShapeAnalysis_CheckSmallFace::SetTolerance(Standard_Real tol)
{
  ((ShapeAnalysis_CheckSmallFace*)nativeHandle)->SetTolerance(tol);
}

 Standard_Real OCShapeAnalysis_CheckSmallFace::Tolerance()
{
  return ((ShapeAnalysis_CheckSmallFace*)nativeHandle)->Tolerance();
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::StatusSpot(OCShapeExtend_Status status)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->StatusSpot((ShapeExtend_Status)status));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::StatusStrip(OCShapeExtend_Status status)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->StatusStrip((ShapeExtend_Status)status));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::StatusPin(OCShapeExtend_Status status)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->StatusPin((ShapeExtend_Status)status));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::StatusTwisted(OCShapeExtend_Status status)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->StatusTwisted((ShapeExtend_Status)status));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::StatusSplitVert(OCShapeExtend_Status status)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->StatusSplitVert((ShapeExtend_Status)status));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::StatusPinFace(OCShapeExtend_Status status)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->StatusPinFace((ShapeExtend_Status)status));
}

 System::Boolean OCShapeAnalysis_CheckSmallFace::StatusPinEdges(OCShapeExtend_Status status)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_CheckSmallFace*)nativeHandle)->StatusPinEdges((ShapeExtend_Status)status));
}


