// File generated by CPPExt (MPV)
//
#ifndef _ShapeAnalysis_Shell_OCWrappers_HeaderFile
#define _ShapeAnalysis_Shell_OCWrappers_HeaderFile

// include native header
#include <ShapeAnalysis_Shell.hxx>
#include "../Converter.h"


#include "../TopTools/TopTools_IndexedMapOfShape.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopoDS_Compound;


//! This class provides operators to analyze edges orientation <br>
//!          in the shell. <br>
public ref class OCShapeAnalysis_Shell  {

protected:
  ShapeAnalysis_Shell* nativeHandle;
  OCShapeAnalysis_Shell(OCDummy^) {};

public:
  property ShapeAnalysis_Shell* Handle
  {
    ShapeAnalysis_Shell* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCShapeAnalysis_Shell(ShapeAnalysis_Shell* nativeHandle);

// Methods PUBLIC

//! Clears data about loaded shells and performed checks <br>
 /*instead*/  void Clear() ;

//! Adds shells contained in the <shape> to the list of loaded shells <br>
 /*instead*/  void LoadShells(OCNaroWrappers::OCTopoDS_Shape^ shape) ;

//! Checks if shells fulfill orientation condition, i.e. if each <br>
//!          edge is, either present once (free edge) or twice (connected <br>
//!          edge) but with different orientations (FORWARD/REVERSED) <br>
//!          Edges which do not fulfill these conditions are bad <br>
//! <br>
//!          If <alsofree> is True free edges are considered. <br>
//!          Free edges can be queried but are not bad <br>
 /*instead*/  System::Boolean CheckOrientedShells(OCNaroWrappers::OCTopoDS_Shape^ shape, System::Boolean alsofree, System::Boolean checkinternaledges) ;

//! Tells if a shape is loaded (only shells are checked) <br>
 /*instead*/  System::Boolean IsLoaded(OCNaroWrappers::OCTopoDS_Shape^ shape) ;

//! Returns the actual number of loaded shapes (i.e. shells) <br>
 /*instead*/  Standard_Integer NbLoaded() ;

//! Returns a loaded shape specified by its rank number. <br>
//!          Returns null shape if <num> is out of range <br>
 /*instead*/  OCTopoDS_Shape^ Loaded(Standard_Integer num) ;

//! Tells if at least one edge is recorded as bad <br>
 /*instead*/  System::Boolean HasBadEdges() ;

//! Returns the list of bad edges as a Compound <br>
//!          It is empty (not null) if no edge are recorded as bad <br>
 /*instead*/  OCTopoDS_Compound^ BadEdges() ;

//! Tells if at least one edge is recorded as free (not connected) <br>
 /*instead*/  System::Boolean HasFreeEdges() ;

//! Returns the list of free (not connected) edges as a Compound <br>
//!          It is empty (not null) if no edge are recorded as free <br>
 /*instead*/  OCTopoDS_Compound^ FreeEdges() ;

//! Tells if at least one edge is connected (shared twice or more) <br>
 /*instead*/  System::Boolean HasConnectedEdges() ;

~OCShapeAnalysis_Shell()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
