// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_HSequenceOfFreeBounds.h"
#include "../Converter.h"
#include "ShapeAnalysis_FreeBoundData.h"
#include "ShapeAnalysis_SequenceOfFreeBounds.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_HSequenceOfFreeBounds::OCShapeAnalysis_HSequenceOfFreeBounds(Handle(ShapeAnalysis_HSequenceOfFreeBounds)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_ShapeAnalysis_HSequenceOfFreeBounds(*nativeHandle);
}

OCShapeAnalysis_HSequenceOfFreeBounds::OCShapeAnalysis_HSequenceOfFreeBounds() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ShapeAnalysis_HSequenceOfFreeBounds(new ShapeAnalysis_HSequenceOfFreeBounds());
}

 System::Boolean OCShapeAnalysis_HSequenceOfFreeBounds::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCShapeAnalysis_HSequenceOfFreeBounds::Length()
{
  return (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Length();
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::Clear()
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Clear();
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::Append(OCNaroWrappers::OCShapeAnalysis_FreeBoundData^ anItem)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Append(*((Handle_ShapeAnalysis_FreeBoundData*)anItem->Handle));
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::Append(OCNaroWrappers::OCShapeAnalysis_HSequenceOfFreeBounds^ aSequence)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Append(*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)aSequence->Handle));
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::Prepend(OCNaroWrappers::OCShapeAnalysis_FreeBoundData^ anItem)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Prepend(*((Handle_ShapeAnalysis_FreeBoundData*)anItem->Handle));
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::Prepend(OCNaroWrappers::OCShapeAnalysis_HSequenceOfFreeBounds^ aSequence)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Prepend(*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)aSequence->Handle));
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::Reverse()
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Reverse();
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCShapeAnalysis_FreeBoundData^ anItem)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->InsertBefore(anIndex, *((Handle_ShapeAnalysis_FreeBoundData*)anItem->Handle));
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCShapeAnalysis_HSequenceOfFreeBounds^ aSequence)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->InsertBefore(anIndex, *((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)aSequence->Handle));
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCShapeAnalysis_FreeBoundData^ anItem)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->InsertAfter(anIndex, *((Handle_ShapeAnalysis_FreeBoundData*)anItem->Handle));
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCShapeAnalysis_HSequenceOfFreeBounds^ aSequence)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->InsertAfter(anIndex, *((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)aSequence->Handle));
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCShapeAnalysis_HSequenceOfFreeBounds^ OCShapeAnalysis_HSequenceOfFreeBounds::Split(Standard_Integer anIndex)
{
  Handle(ShapeAnalysis_HSequenceOfFreeBounds) tmp = (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Split(anIndex);
  return gcnew OCShapeAnalysis_HSequenceOfFreeBounds(&tmp);
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCShapeAnalysis_FreeBoundData^ anItem)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->SetValue(anIndex, *((Handle_ShapeAnalysis_FreeBoundData*)anItem->Handle));
}

OCShapeAnalysis_FreeBoundData^ OCShapeAnalysis_HSequenceOfFreeBounds::Value(Standard_Integer anIndex)
{
  Handle(ShapeAnalysis_FreeBoundData) tmp = (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Value(anIndex);
  return gcnew OCShapeAnalysis_FreeBoundData(&tmp);
}

OCShapeAnalysis_FreeBoundData^ OCShapeAnalysis_HSequenceOfFreeBounds::ChangeValue(Standard_Integer anIndex)
{
  Handle(ShapeAnalysis_FreeBoundData) tmp = (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCShapeAnalysis_FreeBoundData(&tmp);
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::Remove(Standard_Integer anIndex)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Remove(anIndex);
}

 void OCShapeAnalysis_HSequenceOfFreeBounds::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCShapeAnalysis_SequenceOfFreeBounds^ OCShapeAnalysis_HSequenceOfFreeBounds::Sequence()
{
  ShapeAnalysis_SequenceOfFreeBounds* tmp = new ShapeAnalysis_SequenceOfFreeBounds();
  *tmp = (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->Sequence();
  return gcnew OCShapeAnalysis_SequenceOfFreeBounds(tmp);
}

OCShapeAnalysis_SequenceOfFreeBounds^ OCShapeAnalysis_HSequenceOfFreeBounds::ChangeSequence()
{
  ShapeAnalysis_SequenceOfFreeBounds* tmp = new ShapeAnalysis_SequenceOfFreeBounds();
  *tmp = (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->ChangeSequence();
  return gcnew OCShapeAnalysis_SequenceOfFreeBounds(tmp);
}

OCShapeAnalysis_HSequenceOfFreeBounds^ OCShapeAnalysis_HSequenceOfFreeBounds::ShallowCopy()
{
  Handle(ShapeAnalysis_HSequenceOfFreeBounds) tmp = (*((Handle_ShapeAnalysis_HSequenceOfFreeBounds*)nativeHandle))->ShallowCopy();
  return gcnew OCShapeAnalysis_HSequenceOfFreeBounds(&tmp);
}


