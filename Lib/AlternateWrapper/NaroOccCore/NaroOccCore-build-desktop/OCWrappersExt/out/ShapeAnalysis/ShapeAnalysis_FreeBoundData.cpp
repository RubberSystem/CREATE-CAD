// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_FreeBoundData.h"
#include "../Converter.h"
#include "../TopTools/TopTools_HSequenceOfShape.h"
#include "../TopoDS/TopoDS_Wire.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_FreeBoundData::OCShapeAnalysis_FreeBoundData(Handle(ShapeAnalysis_FreeBoundData)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_ShapeAnalysis_FreeBoundData(*nativeHandle);
}

OCShapeAnalysis_FreeBoundData::OCShapeAnalysis_FreeBoundData() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ShapeAnalysis_FreeBoundData(new ShapeAnalysis_FreeBoundData());
}

OCShapeAnalysis_FreeBoundData::OCShapeAnalysis_FreeBoundData(OCNaroWrappers::OCTopoDS_Wire^ freebound) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ShapeAnalysis_FreeBoundData(new ShapeAnalysis_FreeBoundData(*((TopoDS_Wire*)freebound->Handle)));
}

 void OCShapeAnalysis_FreeBoundData::Clear()
{
  (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->Clear();
}

 void OCShapeAnalysis_FreeBoundData::SetFreeBound(OCNaroWrappers::OCTopoDS_Wire^ freebound)
{
  (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->SetFreeBound(*((TopoDS_Wire*)freebound->Handle));
}

 void OCShapeAnalysis_FreeBoundData::SetArea(Standard_Real area)
{
  (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->SetArea(area);
}

 void OCShapeAnalysis_FreeBoundData::SetPerimeter(Standard_Real perimeter)
{
  (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->SetPerimeter(perimeter);
}

 void OCShapeAnalysis_FreeBoundData::SetRatio(Standard_Real ratio)
{
  (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->SetRatio(ratio);
}

 void OCShapeAnalysis_FreeBoundData::SetWidth(Standard_Real width)
{
  (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->SetWidth(width);
}

 void OCShapeAnalysis_FreeBoundData::AddNotch(OCNaroWrappers::OCTopoDS_Wire^ notch, Standard_Real width)
{
  (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->AddNotch(*((TopoDS_Wire*)notch->Handle), width);
}

OCTopoDS_Wire^ OCShapeAnalysis_FreeBoundData::FreeBound()
{
  TopoDS_Wire* tmp = new TopoDS_Wire();
  *tmp = (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->FreeBound();
  return gcnew OCTopoDS_Wire(tmp);
}

 Standard_Real OCShapeAnalysis_FreeBoundData::Area()
{
  return (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->Area();
}

 Standard_Real OCShapeAnalysis_FreeBoundData::Perimeter()
{
  return (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->Perimeter();
}

 Standard_Real OCShapeAnalysis_FreeBoundData::Ratio()
{
  return (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->Ratio();
}

 Standard_Real OCShapeAnalysis_FreeBoundData::Width()
{
  return (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->Width();
}

 Standard_Integer OCShapeAnalysis_FreeBoundData::NbNotches()
{
  return (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->NbNotches();
}

OCTopTools_HSequenceOfShape^ OCShapeAnalysis_FreeBoundData::Notches()
{
  Handle(TopTools_HSequenceOfShape) tmp = (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->Notches();
  return gcnew OCTopTools_HSequenceOfShape(&tmp);
}

OCTopoDS_Wire^ OCShapeAnalysis_FreeBoundData::Notch(Standard_Integer index)
{
  TopoDS_Wire* tmp = new TopoDS_Wire();
  *tmp = (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->Notch(index);
  return gcnew OCTopoDS_Wire(tmp);
}

 Standard_Real OCShapeAnalysis_FreeBoundData::NotchWidth(Standard_Integer index)
{
  return (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->NotchWidth(index);
}

 Standard_Real OCShapeAnalysis_FreeBoundData::NotchWidth(OCNaroWrappers::OCTopoDS_Wire^ notch)
{
  return (*((Handle_ShapeAnalysis_FreeBoundData*)nativeHandle))->NotchWidth(*((TopoDS_Wire*)notch->Handle));
}


