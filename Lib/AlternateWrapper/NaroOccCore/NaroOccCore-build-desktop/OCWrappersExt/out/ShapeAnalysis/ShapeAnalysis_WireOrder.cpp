// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_WireOrder.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HArray1OfInteger.h"
#include "../TColgp/TColgp_HSequenceOfXYZ.h"
#include "../gp/gp_XYZ.h"
#include "../gp/gp_XY.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_WireOrder::OCShapeAnalysis_WireOrder(ShapeAnalysis_WireOrder* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCShapeAnalysis_WireOrder::OCShapeAnalysis_WireOrder() 
{
  nativeHandle = new ShapeAnalysis_WireOrder();
}

OCShapeAnalysis_WireOrder::OCShapeAnalysis_WireOrder(System::Boolean mode3d, Standard_Real tol) 
{
  nativeHandle = new ShapeAnalysis_WireOrder(OCConverter::BooleanToStandardBoolean(mode3d), tol);
}

 void OCShapeAnalysis_WireOrder::SetMode(System::Boolean mode3d, Standard_Real tol)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->SetMode(OCConverter::BooleanToStandardBoolean(mode3d), tol);
}

 Standard_Real OCShapeAnalysis_WireOrder::Tolerance()
{
  return ((ShapeAnalysis_WireOrder*)nativeHandle)->Tolerance();
}

 void OCShapeAnalysis_WireOrder::Clear()
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->Clear();
}

 void OCShapeAnalysis_WireOrder::Add(OCNaroWrappers::OCgp_XYZ^ start3d, OCNaroWrappers::OCgp_XYZ^ end3d)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->Add(*((gp_XYZ*)start3d->Handle), *((gp_XYZ*)end3d->Handle));
}

 void OCShapeAnalysis_WireOrder::Add(OCNaroWrappers::OCgp_XY^ start2d, OCNaroWrappers::OCgp_XY^ end2d)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->Add(*((gp_XY*)start2d->Handle), *((gp_XY*)end2d->Handle));
}

 Standard_Integer OCShapeAnalysis_WireOrder::NbEdges()
{
  return ((ShapeAnalysis_WireOrder*)nativeHandle)->NbEdges();
}

 System::Boolean OCShapeAnalysis_WireOrder::KeepLoopsMode()
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_WireOrder*)nativeHandle)->KeepLoopsMode());
}

 void OCShapeAnalysis_WireOrder::Perform(System::Boolean closed)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->Perform(OCConverter::BooleanToStandardBoolean(closed));
}

 System::Boolean OCShapeAnalysis_WireOrder::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_WireOrder*)nativeHandle)->IsDone());
}

 Standard_Integer OCShapeAnalysis_WireOrder::Status()
{
  return ((ShapeAnalysis_WireOrder*)nativeHandle)->Status();
}

 Standard_Integer OCShapeAnalysis_WireOrder::Ordered(Standard_Integer n)
{
  return ((ShapeAnalysis_WireOrder*)nativeHandle)->Ordered(n);
}

 void OCShapeAnalysis_WireOrder::XYZ(Standard_Integer num, OCNaroWrappers::OCgp_XYZ^ start3d, OCNaroWrappers::OCgp_XYZ^ end3d)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->XYZ(num, *((gp_XYZ*)start3d->Handle), *((gp_XYZ*)end3d->Handle));
}

 void OCShapeAnalysis_WireOrder::XY(Standard_Integer num, OCNaroWrappers::OCgp_XY^ start2d, OCNaroWrappers::OCgp_XY^ end2d)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->XY(num, *((gp_XY*)start2d->Handle), *((gp_XY*)end2d->Handle));
}

 Standard_Real OCShapeAnalysis_WireOrder::Gap(Standard_Integer num)
{
  return ((ShapeAnalysis_WireOrder*)nativeHandle)->Gap(num);
}

 void OCShapeAnalysis_WireOrder::SetChains(Standard_Real gap)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->SetChains(gap);
}

 Standard_Integer OCShapeAnalysis_WireOrder::NbChains()
{
  return ((ShapeAnalysis_WireOrder*)nativeHandle)->NbChains();
}

 void OCShapeAnalysis_WireOrder::Chain(Standard_Integer num, Standard_Integer& n1, Standard_Integer& n2)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->Chain(num, n1, n2);
}

 void OCShapeAnalysis_WireOrder::SetCouples(Standard_Real gap)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->SetCouples(gap);
}

 Standard_Integer OCShapeAnalysis_WireOrder::NbCouples()
{
  return ((ShapeAnalysis_WireOrder*)nativeHandle)->NbCouples();
}

 void OCShapeAnalysis_WireOrder::Couple(Standard_Integer num, Standard_Integer& n1, Standard_Integer& n2)
{
  ((ShapeAnalysis_WireOrder*)nativeHandle)->Couple(num, n1, n2);
}


