// File generated by CPPExt (MPV)
//
#ifndef _ShapeAnalysis_ShapeContents_OCWrappers_HeaderFile
#define _ShapeAnalysis_ShapeContents_OCWrappers_HeaderFile

// include native header
#include <ShapeAnalysis_ShapeContents.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTopTools_HSequenceOfShape;
ref class OCTopoDS_Shape;



public ref class OCShapeAnalysis_ShapeContents  {

protected:
  ShapeAnalysis_ShapeContents* nativeHandle;
  OCShapeAnalysis_ShapeContents(OCDummy^) {};

public:
  property ShapeAnalysis_ShapeContents* Handle
  {
    ShapeAnalysis_ShapeContents* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCShapeAnalysis_ShapeContents(ShapeAnalysis_ShapeContents* nativeHandle);

// Methods PUBLIC

//! Initialize fields and call ClearFlags() <br>
OCShapeAnalysis_ShapeContents();

//! Clears all accumulated statictics <br>
 /*instead*/  void Clear() ;

//! Clears all flags <br>
 /*instead*/  void ClearFlags() ;

//! Counts quantities of sun-shapes in shape and <br>
//!          stores sub-shapes according to flags <br>
 /*instead*/  void Perform(OCNaroWrappers::OCTopoDS_Shape^ shape) ;

//! Returns (modifiable) the flag which defines whether to store faces <br>
//!          with edges if its 3D curves has more than 8192 poles. <br>
 /*instead*/  System::Boolean ModifyBigSplineMode() ;

//! Returns (modifiable) the flag which defines whether to store faces <br>
//!          on indirect surfaces <br>
 /*instead*/  System::Boolean ModifyIndirectMode() ;

//! Returns (modifiable) the flag which defines whether to store faces <br>
//!          on offset surfaces. <br>
 /*instead*/  System::Boolean ModifyOffestSurfaceMode() ;

//! Returns (modifiable) the flag which defines whether to store faces <br>
//!          with edges if ist 3D curves are trimmed curves <br>
 /*instead*/  System::Boolean ModifyTrimmed3dMode() ;

//! Returns (modifiable) the flag which defines whether to store faces <br>
//!          with edges if its 3D curves and pcurves are offest curves <br>
 /*instead*/  System::Boolean ModifyOffsetCurveMode() ;

//! Returns (modifiable) the flag which defines whether to store faces <br>
//!          with edges if its  pcurves are trimmed curves <br>
 /*instead*/  System::Boolean ModifyTrimmed2dMode() ;


 /*instead*/  Standard_Integer NbSolids() ;


 /*instead*/  Standard_Integer NbShells() ;


 /*instead*/  Standard_Integer NbFaces() ;


 /*instead*/  Standard_Integer NbWires() ;


 /*instead*/  Standard_Integer NbEdges() ;


 /*instead*/  Standard_Integer NbVertices() ;


 /*instead*/  Standard_Integer NbSolidsWithVoids() ;


 /*instead*/  Standard_Integer NbBigSplines() ;


 /*instead*/  Standard_Integer NbC0Surfaces() ;


 /*instead*/  Standard_Integer NbC0Curves() ;


 /*instead*/  Standard_Integer NbOffsetSurf() ;


 /*instead*/  Standard_Integer NbIndirectSurf() ;


 /*instead*/  Standard_Integer NbOffsetCurves() ;


 /*instead*/  Standard_Integer NbTrimmedCurve2d() ;


 /*instead*/  Standard_Integer NbTrimmedCurve3d() ;


 /*instead*/  Standard_Integer NbBSplibeSurf() ;


 /*instead*/  Standard_Integer NbBezierSurf() ;


 /*instead*/  Standard_Integer NbTrimSurf() ;


 /*instead*/  Standard_Integer NbWireWitnSeam() ;


 /*instead*/  Standard_Integer NbWireWithSevSeams() ;


 /*instead*/  Standard_Integer NbFaceWithSevWires() ;


 /*instead*/  Standard_Integer NbNoPCurve() ;


 /*instead*/  Standard_Integer NbFreeFaces() ;


 /*instead*/  Standard_Integer NbFreeWires() ;


 /*instead*/  Standard_Integer NbFreeEdges() ;


 /*instead*/  Standard_Integer NbSharedSolids() ;


 /*instead*/  Standard_Integer NbSharedShells() ;


 /*instead*/  Standard_Integer NbSharedFaces() ;


 /*instead*/  Standard_Integer NbSharedWires() ;


 /*instead*/  Standard_Integer NbSharedFreeWires() ;


 /*instead*/  Standard_Integer NbSharedFreeEdges() ;


 /*instead*/  Standard_Integer NbSharedEdges() ;


 /*instead*/  Standard_Integer NbSharedVertices() ;


 /*instead*/  OCTopTools_HSequenceOfShape^ BigSplineSec() ;


 /*instead*/  OCTopTools_HSequenceOfShape^ IndirectSec() ;


 /*instead*/  OCTopTools_HSequenceOfShape^ OffsetSurfaceSec() ;


 /*instead*/  OCTopTools_HSequenceOfShape^ Trimmed3dSec() ;


 /*instead*/  OCTopTools_HSequenceOfShape^ OffsetCurveSec() ;


 /*instead*/  OCTopTools_HSequenceOfShape^ Trimmed2dSec() ;

~OCShapeAnalysis_ShapeContents()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
