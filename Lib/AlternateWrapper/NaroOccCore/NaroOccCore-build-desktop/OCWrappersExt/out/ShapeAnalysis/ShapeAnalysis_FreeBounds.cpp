// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_FreeBounds.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopoDS/TopoDS_Compound.h"
#include "../TopTools/TopTools_HSequenceOfShape.h"
#include "../TopTools/TopTools_DataMapOfShapeShape.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_FreeBounds::OCShapeAnalysis_FreeBounds(ShapeAnalysis_FreeBounds* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCShapeAnalysis_FreeBounds::OCShapeAnalysis_FreeBounds() 
{
  nativeHandle = new ShapeAnalysis_FreeBounds();
}

OCShapeAnalysis_FreeBounds::OCShapeAnalysis_FreeBounds(OCNaroWrappers::OCTopoDS_Shape^ shape, Standard_Real toler, System::Boolean splitclosed, System::Boolean splitopen) 
{
  nativeHandle = new ShapeAnalysis_FreeBounds(*((TopoDS_Shape*)shape->Handle), toler, OCConverter::BooleanToStandardBoolean(splitclosed), OCConverter::BooleanToStandardBoolean(splitopen));
}

OCShapeAnalysis_FreeBounds::OCShapeAnalysis_FreeBounds(OCNaroWrappers::OCTopoDS_Shape^ shape, System::Boolean splitclosed, System::Boolean splitopen, System::Boolean checkinternaledges) 
{
  nativeHandle = new ShapeAnalysis_FreeBounds(*((TopoDS_Shape*)shape->Handle), OCConverter::BooleanToStandardBoolean(splitclosed), OCConverter::BooleanToStandardBoolean(splitopen), OCConverter::BooleanToStandardBoolean(checkinternaledges));
}

OCTopoDS_Compound^ OCShapeAnalysis_FreeBounds::GetClosedWires()
{
  TopoDS_Compound* tmp = new TopoDS_Compound();
  *tmp = ((ShapeAnalysis_FreeBounds*)nativeHandle)->GetClosedWires();
  return gcnew OCTopoDS_Compound(tmp);
}

OCTopoDS_Compound^ OCShapeAnalysis_FreeBounds::GetOpenWires()
{
  TopoDS_Compound* tmp = new TopoDS_Compound();
  *tmp = ((ShapeAnalysis_FreeBounds*)nativeHandle)->GetOpenWires();
  return gcnew OCTopoDS_Compound(tmp);
}

 void OCShapeAnalysis_FreeBounds::ConnectEdgesToWires(OCNaroWrappers::OCTopTools_HSequenceOfShape^ edges, Standard_Real toler, System::Boolean shared, OCNaroWrappers::OCTopTools_HSequenceOfShape^ wires)
{
  ShapeAnalysis_FreeBounds::ConnectEdgesToWires(*((Handle_TopTools_HSequenceOfShape*)edges->Handle), toler, OCConverter::BooleanToStandardBoolean(shared), *((Handle_TopTools_HSequenceOfShape*)wires->Handle));
}

 void OCShapeAnalysis_FreeBounds::ConnectWiresToWires(OCNaroWrappers::OCTopTools_HSequenceOfShape^ iwires, Standard_Real toler, System::Boolean shared, OCNaroWrappers::OCTopTools_HSequenceOfShape^ owires)
{
  ShapeAnalysis_FreeBounds::ConnectWiresToWires(*((Handle_TopTools_HSequenceOfShape*)iwires->Handle), toler, OCConverter::BooleanToStandardBoolean(shared), *((Handle_TopTools_HSequenceOfShape*)owires->Handle));
}

 void OCShapeAnalysis_FreeBounds::ConnectWiresToWires(OCNaroWrappers::OCTopTools_HSequenceOfShape^ iwires, Standard_Real toler, System::Boolean shared, OCNaroWrappers::OCTopTools_HSequenceOfShape^ owires, OCNaroWrappers::OCTopTools_DataMapOfShapeShape^ vertices)
{
  ShapeAnalysis_FreeBounds::ConnectWiresToWires(*((Handle_TopTools_HSequenceOfShape*)iwires->Handle), toler, OCConverter::BooleanToStandardBoolean(shared), *((Handle_TopTools_HSequenceOfShape*)owires->Handle), *((TopTools_DataMapOfShapeShape*)vertices->Handle));
}

 void OCShapeAnalysis_FreeBounds::SplitWires(OCNaroWrappers::OCTopTools_HSequenceOfShape^ wires, Standard_Real toler, System::Boolean shared, OCNaroWrappers::OCTopTools_HSequenceOfShape^ closed, OCNaroWrappers::OCTopTools_HSequenceOfShape^ open)
{
  ShapeAnalysis_FreeBounds::SplitWires(*((Handle_TopTools_HSequenceOfShape*)wires->Handle), toler, OCConverter::BooleanToStandardBoolean(shared), *((Handle_TopTools_HSequenceOfShape*)closed->Handle), *((Handle_TopTools_HSequenceOfShape*)open->Handle));
}

 void OCShapeAnalysis_FreeBounds::DispatchWires(OCNaroWrappers::OCTopTools_HSequenceOfShape^ wires, OCNaroWrappers::OCTopoDS_Compound^ closed, OCNaroWrappers::OCTopoDS_Compound^ open)
{
  ShapeAnalysis_FreeBounds::DispatchWires(*((Handle_TopTools_HSequenceOfShape*)wires->Handle), *((TopoDS_Compound*)closed->Handle), *((TopoDS_Compound*)open->Handle));
}


