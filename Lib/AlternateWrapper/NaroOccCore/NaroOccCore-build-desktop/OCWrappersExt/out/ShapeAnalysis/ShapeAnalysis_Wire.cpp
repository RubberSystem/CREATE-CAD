// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_Wire.h"
#include "../Converter.h"
#include "../ShapeExtend/ShapeExtend_WireData.h"
#include "ShapeAnalysis_Surface.h"
#include "../TopoDS/TopoDS_Wire.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../Geom/Geom_Surface.h"
#include "../TopLoc/TopLoc_Location.h"
#include "ShapeAnalysis_WireOrder.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../gp/gp_Pnt2d.h"
#include "../IntRes2d/IntRes2d_SequenceOfIntersectionPoint.h"
#include "../TColgp/TColgp_SequenceOfPnt.h"
#include "../TColStd/TColStd_SequenceOfReal.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_IndexedMapOfShape.h"
#include "../TopTools/TopTools_DataMapOfShapeListOfShape.h"
#include "../TopTools/TopTools_MapOfShape.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_Wire::OCShapeAnalysis_Wire(Handle(ShapeAnalysis_Wire)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_ShapeAnalysis_Wire(*nativeHandle);
}

OCShapeAnalysis_Wire::OCShapeAnalysis_Wire() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ShapeAnalysis_Wire(new ShapeAnalysis_Wire());
}

OCShapeAnalysis_Wire::OCShapeAnalysis_Wire(OCNaroWrappers::OCTopoDS_Wire^ wire, OCNaroWrappers::OCTopoDS_Face^ face, Standard_Real precision) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ShapeAnalysis_Wire(new ShapeAnalysis_Wire(*((TopoDS_Wire*)wire->Handle), *((TopoDS_Face*)face->Handle), precision));
}

OCShapeAnalysis_Wire::OCShapeAnalysis_Wire(OCNaroWrappers::OCShapeExtend_WireData^ sbwd, OCNaroWrappers::OCTopoDS_Face^ face, Standard_Real precision) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ShapeAnalysis_Wire(new ShapeAnalysis_Wire(*((Handle_ShapeExtend_WireData*)sbwd->Handle), *((TopoDS_Face*)face->Handle), precision));
}

 void OCShapeAnalysis_Wire::Init(OCNaroWrappers::OCTopoDS_Wire^ wire, OCNaroWrappers::OCTopoDS_Face^ face, Standard_Real precision)
{
  (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->Init(*((TopoDS_Wire*)wire->Handle), *((TopoDS_Face*)face->Handle), precision);
}

 void OCShapeAnalysis_Wire::Init(OCNaroWrappers::OCShapeExtend_WireData^ sbwd, OCNaroWrappers::OCTopoDS_Face^ face, Standard_Real precision)
{
  (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->Init(*((Handle_ShapeExtend_WireData*)sbwd->Handle), *((TopoDS_Face*)face->Handle), precision);
}

 void OCShapeAnalysis_Wire::Load(OCNaroWrappers::OCTopoDS_Wire^ wire)
{
  (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->Load(*((TopoDS_Wire*)wire->Handle));
}

 void OCShapeAnalysis_Wire::Load(OCNaroWrappers::OCShapeExtend_WireData^ sbwd)
{
  (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->Load(*((Handle_ShapeExtend_WireData*)sbwd->Handle));
}

 void OCShapeAnalysis_Wire::SetFace(OCNaroWrappers::OCTopoDS_Face^ face)
{
  (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->SetFace(*((TopoDS_Face*)face->Handle));
}

 void OCShapeAnalysis_Wire::SetSurface(OCNaroWrappers::OCGeom_Surface^ surface)
{
  (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->SetSurface(*((Handle_Geom_Surface*)surface->Handle));
}

 void OCShapeAnalysis_Wire::SetSurface(OCNaroWrappers::OCGeom_Surface^ surface, OCNaroWrappers::OCTopLoc_Location^ location)
{
  (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->SetSurface(*((Handle_Geom_Surface*)surface->Handle), *((TopLoc_Location*)location->Handle));
}

 void OCShapeAnalysis_Wire::SetPrecision(Standard_Real precision)
{
  (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->SetPrecision(precision);
}

 void OCShapeAnalysis_Wire::ClearStatuses()
{
  (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->ClearStatuses();
}

 System::Boolean OCShapeAnalysis_Wire::IsLoaded()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->IsLoaded());
}

 System::Boolean OCShapeAnalysis_Wire::IsReady()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->IsReady());
}

 Standard_Real OCShapeAnalysis_Wire::Precision()
{
  return (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->Precision();
}

OCShapeExtend_WireData^ OCShapeAnalysis_Wire::WireData()
{
  Handle(ShapeExtend_WireData) tmp = (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->WireData();
  return gcnew OCShapeExtend_WireData(&tmp);
}

 Standard_Integer OCShapeAnalysis_Wire::NbEdges()
{
  return (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->NbEdges();
}

OCTopoDS_Face^ OCShapeAnalysis_Wire::Face()
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->Face();
  return gcnew OCTopoDS_Face(tmp);
}

OCShapeAnalysis_Surface^ OCShapeAnalysis_Wire::Surface()
{
  Handle(ShapeAnalysis_Surface) tmp = (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->Surface();
  return gcnew OCShapeAnalysis_Surface(&tmp);
}

 System::Boolean OCShapeAnalysis_Wire::Perform()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->Perform());
}

 System::Boolean OCShapeAnalysis_Wire::CheckOrder(System::Boolean isClosed, System::Boolean mode3d)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckOrder(OCConverter::BooleanToStandardBoolean(isClosed), OCConverter::BooleanToStandardBoolean(mode3d)));
}

 System::Boolean OCShapeAnalysis_Wire::CheckConnected(Standard_Real prec)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckConnected(prec));
}

 System::Boolean OCShapeAnalysis_Wire::CheckSmall(Standard_Real precsmall)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckSmall(precsmall));
}

 System::Boolean OCShapeAnalysis_Wire::CheckEdgeCurves()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckEdgeCurves());
}

 System::Boolean OCShapeAnalysis_Wire::CheckDegenerated()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckDegenerated());
}

 System::Boolean OCShapeAnalysis_Wire::CheckClosed(Standard_Real prec)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckClosed(prec));
}

 System::Boolean OCShapeAnalysis_Wire::CheckSelfIntersection()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckSelfIntersection());
}

 System::Boolean OCShapeAnalysis_Wire::CheckLacking()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckLacking());
}

 System::Boolean OCShapeAnalysis_Wire::CheckGaps3d()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckGaps3d());
}

 System::Boolean OCShapeAnalysis_Wire::CheckGaps2d()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckGaps2d());
}

 System::Boolean OCShapeAnalysis_Wire::CheckCurveGaps()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckCurveGaps());
}

 System::Boolean OCShapeAnalysis_Wire::CheckOrder(OCNaroWrappers::OCShapeAnalysis_WireOrder^ sawo, System::Boolean isClosed, System::Boolean mode3d)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckOrder(*((ShapeAnalysis_WireOrder*)sawo->Handle), OCConverter::BooleanToStandardBoolean(isClosed), OCConverter::BooleanToStandardBoolean(mode3d)));
}

 System::Boolean OCShapeAnalysis_Wire::CheckConnected(Standard_Integer num, Standard_Real prec)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckConnected(num, prec));
}

 System::Boolean OCShapeAnalysis_Wire::CheckSmall(Standard_Integer num, Standard_Real precsmall)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckSmall(num, precsmall));
}

 System::Boolean OCShapeAnalysis_Wire::CheckSeam(Standard_Integer num, OCNaroWrappers::OCGeom2d_Curve^ C1, OCNaroWrappers::OCGeom2d_Curve^ C2, Standard_Real& cf, Standard_Real& cl)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckSeam(num, *((Handle_Geom2d_Curve*)C1->Handle), *((Handle_Geom2d_Curve*)C2->Handle), cf, cl));
}

 System::Boolean OCShapeAnalysis_Wire::CheckSeam(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckSeam(num));
}

 System::Boolean OCShapeAnalysis_Wire::CheckDegenerated(Standard_Integer num, OCNaroWrappers::OCgp_Pnt2d^ dgnr1, OCNaroWrappers::OCgp_Pnt2d^ dgnr2)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckDegenerated(num, *((gp_Pnt2d*)dgnr1->Handle), *((gp_Pnt2d*)dgnr2->Handle)));
}

 System::Boolean OCShapeAnalysis_Wire::CheckDegenerated(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckDegenerated(num));
}

 System::Boolean OCShapeAnalysis_Wire::CheckGap3d(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckGap3d(num));
}

 System::Boolean OCShapeAnalysis_Wire::CheckGap2d(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckGap2d(num));
}

 System::Boolean OCShapeAnalysis_Wire::CheckCurveGap(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckCurveGap(num));
}

 System::Boolean OCShapeAnalysis_Wire::CheckSelfIntersectingEdge(Standard_Integer num, OCNaroWrappers::OCIntRes2d_SequenceOfIntersectionPoint^ points2d, OCNaroWrappers::OCTColgp_SequenceOfPnt^ points3d)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckSelfIntersectingEdge(num, *((IntRes2d_SequenceOfIntersectionPoint*)points2d->Handle), *((TColgp_SequenceOfPnt*)points3d->Handle)));
}

 System::Boolean OCShapeAnalysis_Wire::CheckSelfIntersectingEdge(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckSelfIntersectingEdge(num));
}

 System::Boolean OCShapeAnalysis_Wire::CheckIntersectingEdges(Standard_Integer num, OCNaroWrappers::OCIntRes2d_SequenceOfIntersectionPoint^ points2d, OCNaroWrappers::OCTColgp_SequenceOfPnt^ points3d, OCNaroWrappers::OCTColStd_SequenceOfReal^ errors)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckIntersectingEdges(num, *((IntRes2d_SequenceOfIntersectionPoint*)points2d->Handle), *((TColgp_SequenceOfPnt*)points3d->Handle), *((TColStd_SequenceOfReal*)errors->Handle)));
}

 System::Boolean OCShapeAnalysis_Wire::CheckIntersectingEdges(Standard_Integer num)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckIntersectingEdges(num));
}

 System::Boolean OCShapeAnalysis_Wire::CheckIntersectingEdges(Standard_Integer num1, Standard_Integer num2, OCNaroWrappers::OCIntRes2d_SequenceOfIntersectionPoint^ points2d, OCNaroWrappers::OCTColgp_SequenceOfPnt^ points3d, OCNaroWrappers::OCTColStd_SequenceOfReal^ errors)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckIntersectingEdges(num1, num2, *((IntRes2d_SequenceOfIntersectionPoint*)points2d->Handle), *((TColgp_SequenceOfPnt*)points3d->Handle), *((TColStd_SequenceOfReal*)errors->Handle)));
}

 System::Boolean OCShapeAnalysis_Wire::CheckIntersectingEdges(Standard_Integer num1, Standard_Integer num2)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckIntersectingEdges(num1, num2));
}

 System::Boolean OCShapeAnalysis_Wire::CheckLacking(Standard_Integer num, Standard_Real Tolerance, OCNaroWrappers::OCgp_Pnt2d^ p2d1, OCNaroWrappers::OCgp_Pnt2d^ p2d2)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckLacking(num, Tolerance, *((gp_Pnt2d*)p2d1->Handle), *((gp_Pnt2d*)p2d2->Handle)));
}

 System::Boolean OCShapeAnalysis_Wire::CheckLacking(Standard_Integer num, Standard_Real Tolerance)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckLacking(num, Tolerance));
}

 System::Boolean OCShapeAnalysis_Wire::CheckOuterBound(System::Boolean APIMake)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckOuterBound(OCConverter::BooleanToStandardBoolean(APIMake)));
}

 System::Boolean OCShapeAnalysis_Wire::CheckNotchedEdges(Standard_Integer num, Standard_Integer& shortNum, Standard_Real& param, Standard_Real Tolerance)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckNotchedEdges(num, shortNum, param, Tolerance));
}

 System::Boolean OCShapeAnalysis_Wire::CheckSmallArea(Standard_Real prec2d)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckSmallArea(prec2d));
}

 System::Boolean OCShapeAnalysis_Wire::CheckShapeConnect(OCNaroWrappers::OCTopoDS_Shape^ shape, Standard_Real prec)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckShapeConnect(*((TopoDS_Shape*)shape->Handle), prec));
}

 System::Boolean OCShapeAnalysis_Wire::CheckShapeConnect(Standard_Real& tailhead, Standard_Real& tailtail, Standard_Real& headtail, Standard_Real& headhead, OCNaroWrappers::OCTopoDS_Shape^ shape, Standard_Real prec)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckShapeConnect(tailhead, tailtail, headtail, headhead, *((TopoDS_Shape*)shape->Handle), prec));
}

 System::Boolean OCShapeAnalysis_Wire::CheckLoop(OCNaroWrappers::OCTopTools_IndexedMapOfShape^ aMapLoopVertices, OCNaroWrappers::OCTopTools_DataMapOfShapeListOfShape^ aMapVertexEdges, OCNaroWrappers::OCTopTools_MapOfShape^ aMapSmallEdges, OCNaroWrappers::OCTopTools_MapOfShape^ aMapSeemEdges)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->CheckLoop(*((TopTools_IndexedMapOfShape*)aMapLoopVertices->Handle), *((TopTools_DataMapOfShapeListOfShape*)aMapVertexEdges->Handle), *((TopTools_MapOfShape*)aMapSmallEdges->Handle), *((TopTools_MapOfShape*)aMapSeemEdges->Handle)));
}

 System::Boolean OCShapeAnalysis_Wire::StatusOrder(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusOrder((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusConnected(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusConnected((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusEdgeCurves(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusEdgeCurves((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusDegenerated(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusDegenerated((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusClosed(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusClosed((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusSmall(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusSmall((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusSelfIntersection(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusSelfIntersection((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusLacking(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusLacking((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusGaps3d(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusGaps3d((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusGaps2d(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusGaps2d((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusCurveGaps(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusCurveGaps((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::StatusLoop(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->StatusLoop((ShapeExtend_Status)Status));
}

 System::Boolean OCShapeAnalysis_Wire::LastCheckStatus(OCShapeExtend_Status Status)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Wire*)nativeHandle))->LastCheckStatus((ShapeExtend_Status)Status));
}

 Standard_Real OCShapeAnalysis_Wire::MinDistance3d()
{
  return (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->MinDistance3d();
}

 Standard_Real OCShapeAnalysis_Wire::MinDistance2d()
{
  return (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->MinDistance2d();
}

 Standard_Real OCShapeAnalysis_Wire::MaxDistance3d()
{
  return (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->MaxDistance3d();
}

 Standard_Real OCShapeAnalysis_Wire::MaxDistance2d()
{
  return (*((Handle_ShapeAnalysis_Wire*)nativeHandle))->MaxDistance2d();
}


