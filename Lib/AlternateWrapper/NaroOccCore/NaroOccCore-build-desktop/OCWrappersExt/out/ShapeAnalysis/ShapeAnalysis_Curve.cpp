// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_Curve.h"
#include "../Converter.h"
#include "../Geom/Geom_Curve.h"
#include "../gp/gp_Pnt.h"
#include "../Adaptor3d/Adaptor3d_Curve.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../Bnd/Bnd_Box2d.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../gp/gp_XYZ.h"
#include "../TColgp/TColgp_SequenceOfPnt2d.h"
#include "../TColgp/TColgp_SequenceOfPnt.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_Curve::OCShapeAnalysis_Curve(ShapeAnalysis_Curve* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 Standard_Real OCShapeAnalysis_Curve::Project(OCNaroWrappers::OCGeom_Curve^ C3D, OCNaroWrappers::OCgp_Pnt^ P3D, Standard_Real preci, OCNaroWrappers::OCgp_Pnt^ proj, Standard_Real& param, System::Boolean AdjustToEnds)
{
  return ((ShapeAnalysis_Curve*)nativeHandle)->Project(*((Handle_Geom_Curve*)C3D->Handle), *((gp_Pnt*)P3D->Handle), preci, *((gp_Pnt*)proj->Handle), param, OCConverter::BooleanToStandardBoolean(AdjustToEnds));
}

 Standard_Real OCShapeAnalysis_Curve::Project(OCNaroWrappers::OCAdaptor3d_Curve^ C3D, OCNaroWrappers::OCgp_Pnt^ P3D, Standard_Real preci, OCNaroWrappers::OCgp_Pnt^ proj, Standard_Real& param, System::Boolean AdjustToEnds)
{
  return ((ShapeAnalysis_Curve*)nativeHandle)->Project(*((Adaptor3d_Curve*)C3D->Handle), *((gp_Pnt*)P3D->Handle), preci, *((gp_Pnt*)proj->Handle), param, OCConverter::BooleanToStandardBoolean(AdjustToEnds));
}

 Standard_Real OCShapeAnalysis_Curve::Project(OCNaroWrappers::OCGeom_Curve^ C3D, OCNaroWrappers::OCgp_Pnt^ P3D, Standard_Real preci, OCNaroWrappers::OCgp_Pnt^ proj, Standard_Real& param, Standard_Real cf, Standard_Real cl, System::Boolean AdjustToEnds)
{
  return ((ShapeAnalysis_Curve*)nativeHandle)->Project(*((Handle_Geom_Curve*)C3D->Handle), *((gp_Pnt*)P3D->Handle), preci, *((gp_Pnt*)proj->Handle), param, cf, cl, OCConverter::BooleanToStandardBoolean(AdjustToEnds));
}

 Standard_Real OCShapeAnalysis_Curve::ProjectAct(OCNaroWrappers::OCAdaptor3d_Curve^ C3D, OCNaroWrappers::OCgp_Pnt^ P3D, Standard_Real preci, OCNaroWrappers::OCgp_Pnt^ proj, Standard_Real& param)
{
  return ((ShapeAnalysis_Curve*)nativeHandle)->ProjectAct(*((Adaptor3d_Curve*)C3D->Handle), *((gp_Pnt*)P3D->Handle), preci, *((gp_Pnt*)proj->Handle), param);
}

 Standard_Real OCShapeAnalysis_Curve::NextProject(Standard_Real paramPrev, OCNaroWrappers::OCGeom_Curve^ C3D, OCNaroWrappers::OCgp_Pnt^ P3D, Standard_Real preci, OCNaroWrappers::OCgp_Pnt^ proj, Standard_Real& param, Standard_Real cf, Standard_Real cl, System::Boolean AdjustToEnds)
{
  return ((ShapeAnalysis_Curve*)nativeHandle)->NextProject(paramPrev, *((Handle_Geom_Curve*)C3D->Handle), *((gp_Pnt*)P3D->Handle), preci, *((gp_Pnt*)proj->Handle), param, cf, cl, OCConverter::BooleanToStandardBoolean(AdjustToEnds));
}

 Standard_Real OCShapeAnalysis_Curve::NextProject(Standard_Real paramPrev, OCNaroWrappers::OCAdaptor3d_Curve^ C3D, OCNaroWrappers::OCgp_Pnt^ P3D, Standard_Real preci, OCNaroWrappers::OCgp_Pnt^ proj, Standard_Real& param)
{
  return ((ShapeAnalysis_Curve*)nativeHandle)->NextProject(paramPrev, *((Adaptor3d_Curve*)C3D->Handle), *((gp_Pnt*)P3D->Handle), preci, *((gp_Pnt*)proj->Handle), param);
}

 System::Boolean OCShapeAnalysis_Curve::ValidateRange(OCNaroWrappers::OCGeom_Curve^ Crv, Standard_Real& First, Standard_Real& Last, Standard_Real prec)
{
  return OCConverter::StandardBooleanToBoolean(((ShapeAnalysis_Curve*)nativeHandle)->ValidateRange(*((Handle_Geom_Curve*)Crv->Handle), First, Last, prec));
}

 void OCShapeAnalysis_Curve::FillBndBox(OCNaroWrappers::OCGeom2d_Curve^ C2d, Standard_Real First, Standard_Real Last, Standard_Integer NPoints, System::Boolean Exact, OCNaroWrappers::OCBnd_Box2d^ Box)
{
  ((ShapeAnalysis_Curve*)nativeHandle)->FillBndBox(*((Handle_Geom2d_Curve*)C2d->Handle), First, Last, NPoints, OCConverter::BooleanToStandardBoolean(Exact), *((Bnd_Box2d*)Box->Handle));
}

 Standard_Integer OCShapeAnalysis_Curve::SelectForwardSeam(OCNaroWrappers::OCGeom2d_Curve^ C1, OCNaroWrappers::OCGeom2d_Curve^ C2)
{
  return ((ShapeAnalysis_Curve*)nativeHandle)->SelectForwardSeam(*((Handle_Geom2d_Curve*)C1->Handle), *((Handle_Geom2d_Curve*)C2->Handle));
}

 System::Boolean OCShapeAnalysis_Curve::IsPlanar(OCNaroWrappers::OCTColgp_Array1OfPnt^ pnts, OCNaroWrappers::OCgp_XYZ^ Normal, Standard_Real preci)
{
  return OCConverter::StandardBooleanToBoolean(ShapeAnalysis_Curve::IsPlanar(*((TColgp_Array1OfPnt*)pnts->Handle), *((gp_XYZ*)Normal->Handle), preci));
}

 System::Boolean OCShapeAnalysis_Curve::IsPlanar(OCNaroWrappers::OCGeom_Curve^ curve, OCNaroWrappers::OCgp_XYZ^ Normal, Standard_Real preci)
{
  return OCConverter::StandardBooleanToBoolean(ShapeAnalysis_Curve::IsPlanar(*((Handle_Geom_Curve*)curve->Handle), *((gp_XYZ*)Normal->Handle), preci));
}

 System::Boolean OCShapeAnalysis_Curve::GetSamplePoints(OCNaroWrappers::OCGeom2d_Curve^ curve, Standard_Real first, Standard_Real last, OCNaroWrappers::OCTColgp_SequenceOfPnt2d^ seq)
{
  return OCConverter::StandardBooleanToBoolean(ShapeAnalysis_Curve::GetSamplePoints(*((Handle_Geom2d_Curve*)curve->Handle), first, last, *((TColgp_SequenceOfPnt2d*)seq->Handle)));
}

 System::Boolean OCShapeAnalysis_Curve::GetSamplePoints(OCNaroWrappers::OCGeom_Curve^ curve, Standard_Real first, Standard_Real last, OCNaroWrappers::OCTColgp_SequenceOfPnt^ seq)
{
  return OCConverter::StandardBooleanToBoolean(ShapeAnalysis_Curve::GetSamplePoints(*((Handle_Geom_Curve*)curve->Handle), first, last, *((TColgp_SequenceOfPnt*)seq->Handle)));
}

 System::Boolean OCShapeAnalysis_Curve::IsClosed(OCNaroWrappers::OCGeom_Curve^ curve, Standard_Real preci)
{
  return OCConverter::StandardBooleanToBoolean(ShapeAnalysis_Curve::IsClosed(*((Handle_Geom_Curve*)curve->Handle), preci));
}

 System::Boolean OCShapeAnalysis_Curve::IsPeriodic(OCNaroWrappers::OCGeom_Curve^ curve)
{
  return OCConverter::StandardBooleanToBoolean(ShapeAnalysis_Curve::IsPeriodic(*((Handle_Geom_Curve*)curve->Handle)));
}

 System::Boolean OCShapeAnalysis_Curve::IsPeriodic(OCNaroWrappers::OCGeom2d_Curve^ curve)
{
  return OCConverter::StandardBooleanToBoolean(ShapeAnalysis_Curve::IsPeriodic(*((Handle_Geom2d_Curve*)curve->Handle)));
}


