// File generated by CPPExt (CPP file)
//

#include "ShapeAnalysis_Surface.h"
#include "../Converter.h"
#include "../Geom/Geom_Surface.h"
#include "../GeomAdaptor/GeomAdaptor_HSurface.h"
#include "../Geom/Geom_Curve.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Pnt.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../Bnd/Bnd_Box.h"


using namespace OCNaroWrappers;

OCShapeAnalysis_Surface::OCShapeAnalysis_Surface(Handle(ShapeAnalysis_Surface)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_ShapeAnalysis_Surface(*nativeHandle);
}

OCShapeAnalysis_Surface::OCShapeAnalysis_Surface(OCNaroWrappers::OCGeom_Surface^ S) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ShapeAnalysis_Surface(new ShapeAnalysis_Surface(*((Handle_Geom_Surface*)S->Handle)));
}

 void OCShapeAnalysis_Surface::Init(OCNaroWrappers::OCGeom_Surface^ S)
{
  (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->Init(*((Handle_Geom_Surface*)S->Handle));
}

 void OCShapeAnalysis_Surface::Init(OCNaroWrappers::OCShapeAnalysis_Surface^ other)
{
  (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->Init(*((Handle_ShapeAnalysis_Surface*)other->Handle));
}

 void OCShapeAnalysis_Surface::SetDomain(Standard_Real U1, Standard_Real U2, Standard_Real V1, Standard_Real V2)
{
  (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->SetDomain(U1, U2, V1, V2);
}

OCGeom_Surface^ OCShapeAnalysis_Surface::Surface()
{
  Handle(Geom_Surface) tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->Surface();
  return gcnew OCGeom_Surface(&tmp);
}

OCGeomAdaptor_HSurface^ OCShapeAnalysis_Surface::Adaptor3d()
{
  Handle(GeomAdaptor_HSurface) tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->Adaptor3d();
  return gcnew OCGeomAdaptor_HSurface(&tmp);
}

OCGeomAdaptor_HSurface^ OCShapeAnalysis_Surface::TrueAdaptor3d()
{
  Handle(GeomAdaptor_HSurface) tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->TrueAdaptor3d();
  return gcnew OCGeomAdaptor_HSurface(&tmp);
}

 Standard_Real OCShapeAnalysis_Surface::Gap()
{
  return (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->Gap();
}

OCgp_Pnt^ OCShapeAnalysis_Surface::Value(Standard_Real u, Standard_Real v)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->Value(u, v);
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCShapeAnalysis_Surface::Value(OCNaroWrappers::OCgp_Pnt2d^ p2d)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->Value(*((gp_Pnt2d*)p2d->Handle));
  return gcnew OCgp_Pnt(tmp);
}

 System::Boolean OCShapeAnalysis_Surface::HasSingularities(Standard_Real preci)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Surface*)nativeHandle))->HasSingularities(preci));
}

 Standard_Integer OCShapeAnalysis_Surface::NbSingularities(Standard_Real preci)
{
  return (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->NbSingularities(preci);
}

 System::Boolean OCShapeAnalysis_Surface::Singularity(Standard_Integer num, Standard_Real& preci, OCNaroWrappers::OCgp_Pnt^ P3d, OCNaroWrappers::OCgp_Pnt2d^ firstP2d, OCNaroWrappers::OCgp_Pnt2d^ lastP2d, Standard_Real& firstpar, Standard_Real& lastpar, System::Boolean& uisodeg)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Surface*)nativeHandle))->Singularity(num, preci, *((gp_Pnt*)P3d->Handle), *((gp_Pnt2d*)firstP2d->Handle), *((gp_Pnt2d*)lastP2d->Handle), firstpar, lastpar, (Standard_Boolean&)(uisodeg)));
}

 System::Boolean OCShapeAnalysis_Surface::IsDegenerated(OCNaroWrappers::OCgp_Pnt^ P3d, Standard_Real preci)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Surface*)nativeHandle))->IsDegenerated(*((gp_Pnt*)P3d->Handle), preci));
}

 System::Boolean OCShapeAnalysis_Surface::DegeneratedValues(OCNaroWrappers::OCgp_Pnt^ P3d, Standard_Real preci, OCNaroWrappers::OCgp_Pnt2d^ firstP2d, OCNaroWrappers::OCgp_Pnt2d^ lastP2d, Standard_Real& firstpar, Standard_Real& lastpar, System::Boolean forward)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Surface*)nativeHandle))->DegeneratedValues(*((gp_Pnt*)P3d->Handle), preci, *((gp_Pnt2d*)firstP2d->Handle), *((gp_Pnt2d*)lastP2d->Handle), firstpar, lastpar, OCConverter::BooleanToStandardBoolean(forward)));
}

 System::Boolean OCShapeAnalysis_Surface::ProjectDegenerated(OCNaroWrappers::OCgp_Pnt^ P3d, Standard_Real preci, OCNaroWrappers::OCgp_Pnt2d^ neighbour, OCNaroWrappers::OCgp_Pnt2d^ result)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Surface*)nativeHandle))->ProjectDegenerated(*((gp_Pnt*)P3d->Handle), preci, *((gp_Pnt2d*)neighbour->Handle), *((gp_Pnt2d*)result->Handle)));
}

 System::Boolean OCShapeAnalysis_Surface::ProjectDegenerated(Standard_Integer nbrPnt, OCNaroWrappers::OCTColgp_Array1OfPnt^ points, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ pnt2d, Standard_Real preci, System::Boolean direct)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Surface*)nativeHandle))->ProjectDegenerated(nbrPnt, *((TColgp_Array1OfPnt*)points->Handle), *((TColgp_Array1OfPnt2d*)pnt2d->Handle), preci, OCConverter::BooleanToStandardBoolean(direct)));
}

 System::Boolean OCShapeAnalysis_Surface::IsDegenerated(OCNaroWrappers::OCgp_Pnt2d^ p2d1, OCNaroWrappers::OCgp_Pnt2d^ p2d2, Standard_Real tol, Standard_Real ratio)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Surface*)nativeHandle))->IsDegenerated(*((gp_Pnt2d*)p2d1->Handle), *((gp_Pnt2d*)p2d2->Handle), tol, ratio));
}

 void OCShapeAnalysis_Surface::Bounds(Standard_Real& ufirst, Standard_Real& ulast, Standard_Real& vfirst, Standard_Real& vlast)
{
  (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->Bounds(ufirst, ulast, vfirst, vlast);
}

 void OCShapeAnalysis_Surface::ComputeBoundIsos()
{
  (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->ComputeBoundIsos();
}

OCGeom_Curve^ OCShapeAnalysis_Surface::UIso(Standard_Real U)
{
  Handle(Geom_Curve) tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->UIso(U);
  return gcnew OCGeom_Curve(&tmp);
}

OCGeom_Curve^ OCShapeAnalysis_Surface::VIso(Standard_Real V)
{
  Handle(Geom_Curve) tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->VIso(V);
  return gcnew OCGeom_Curve(&tmp);
}

 System::Boolean OCShapeAnalysis_Surface::IsUClosed(Standard_Real preci)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Surface*)nativeHandle))->IsUClosed(preci));
}

 System::Boolean OCShapeAnalysis_Surface::IsVClosed(Standard_Real preci)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ShapeAnalysis_Surface*)nativeHandle))->IsVClosed(preci));
}

OCgp_Pnt2d^ OCShapeAnalysis_Surface::ValueOfUV(OCNaroWrappers::OCgp_Pnt^ P3D, Standard_Real preci)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->ValueOfUV(*((gp_Pnt*)P3D->Handle), preci);
  return gcnew OCgp_Pnt2d(tmp);
}

OCgp_Pnt2d^ OCShapeAnalysis_Surface::NextValueOfUV(OCNaroWrappers::OCgp_Pnt2d^ p2dPrev, OCNaroWrappers::OCgp_Pnt^ P3D, Standard_Real preci, Standard_Real maxpreci)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->NextValueOfUV(*((gp_Pnt2d*)p2dPrev->Handle), *((gp_Pnt*)P3D->Handle), preci, maxpreci);
  return gcnew OCgp_Pnt2d(tmp);
}

 Standard_Real OCShapeAnalysis_Surface::UVFromIso(OCNaroWrappers::OCgp_Pnt^ P3D, Standard_Real preci, Standard_Real& U, Standard_Real& V)
{
  return (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->UVFromIso(*((gp_Pnt*)P3D->Handle), preci, U, V);
}

 Standard_Real OCShapeAnalysis_Surface::UCloseVal()
{
  return (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->UCloseVal();
}

 Standard_Real OCShapeAnalysis_Surface::VCloseVal()
{
  return (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->VCloseVal();
}

OCBnd_Box^ OCShapeAnalysis_Surface::GetBoxUF()
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->GetBoxUF();
  return gcnew OCBnd_Box(tmp);
}

OCBnd_Box^ OCShapeAnalysis_Surface::GetBoxUL()
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->GetBoxUL();
  return gcnew OCBnd_Box(tmp);
}

OCBnd_Box^ OCShapeAnalysis_Surface::GetBoxVF()
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->GetBoxVF();
  return gcnew OCBnd_Box(tmp);
}

OCBnd_Box^ OCShapeAnalysis_Surface::GetBoxVL()
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = (*((Handle_ShapeAnalysis_Surface*)nativeHandle))->GetBoxVL();
  return gcnew OCBnd_Box(tmp);
}


