// File generated by CPPExt (MPV)
//
#ifndef _MFT_ListOfFontHandle_OCWrappers_HeaderFile
#define _MFT_ListOfFontHandle_OCWrappers_HeaderFile

// include native header
#include <MFT_ListOfFontHandle.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BaseSequence.h"

#include "../TCollection/TCollection_BaseSequence.h"


namespace OCNaroWrappers
{

ref class OCMFT_SequenceNodeOfListOfFontHandle;



public ref class OCMFT_ListOfFontHandle  : public OCTCollection_BaseSequence {

protected:
  // dummy constructor;
  OCMFT_ListOfFontHandle(OCDummy^) : OCTCollection_BaseSequence((OCDummy^)nullptr) {};

public:

// constructor from native
OCMFT_ListOfFontHandle(MFT_ListOfFontHandle* nativeHandle);

// Methods PUBLIC


OCMFT_ListOfFontHandle();


 /*instead*/  OCMFT_ListOfFontHandle^ Assign(OCNaroWrappers::OCMFT_ListOfFontHandle^ Other) ;


 /*instead*/  void Append(MFT_FileHandle T) ;


 /*instead*/  void Append(OCNaroWrappers::OCMFT_ListOfFontHandle^ S) ;


 /*instead*/  void Prepend(MFT_FileHandle T) ;


 /*instead*/  void Prepend(OCNaroWrappers::OCMFT_ListOfFontHandle^ S) ;


 /*instead*/  void InsertBefore(Standard_Integer Index, MFT_FileHandle T) ;


 /*instead*/  void InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMFT_ListOfFontHandle^ S) ;


 /*instead*/  void InsertAfter(Standard_Integer Index, MFT_FileHandle T) ;


 /*instead*/  void InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMFT_ListOfFontHandle^ S) ;


 /*instead*/  MFT_FileHandle First() ;


 /*instead*/  MFT_FileHandle Last() ;


 /*instead*/  void Split(Standard_Integer Index, OCNaroWrappers::OCMFT_ListOfFontHandle^ Sub) ;


 /*instead*/  MFT_FileHandle Value(Standard_Integer Index) ;


 /*instead*/  void SetValue(Standard_Integer Index, MFT_FileHandle I) ;


 /*instead*/  MFT_FileHandle ChangeValue(Standard_Integer Index) ;


 /*instead*/  void Remove(Standard_Integer Index) ;


 /*instead*/  void Remove(Standard_Integer FromIndex, Standard_Integer ToIndex) ;

~OCMFT_ListOfFontHandle()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
