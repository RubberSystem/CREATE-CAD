// File generated by CPPExt (CPP file)
//

#include "MFT_ListOfFontHandle.h"
#include "../Converter.h"
#include "MFT_SequenceNodeOfListOfFontHandle.h"


using namespace OCNaroWrappers;

OCMFT_ListOfFontHandle::OCMFT_ListOfFontHandle(MFT_ListOfFontHandle* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMFT_ListOfFontHandle::OCMFT_ListOfFontHandle() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new MFT_ListOfFontHandle();
}

OCMFT_ListOfFontHandle^ OCMFT_ListOfFontHandle::Assign(OCNaroWrappers::OCMFT_ListOfFontHandle^ Other)
{
  MFT_ListOfFontHandle* tmp = new MFT_ListOfFontHandle();
  *tmp = ((MFT_ListOfFontHandle*)nativeHandle)->Assign(*((MFT_ListOfFontHandle*)Other->Handle));
  return gcnew OCMFT_ListOfFontHandle(tmp);
}

 void OCMFT_ListOfFontHandle::Append(MFT_FileHandle T)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->Append(T);
}

 void OCMFT_ListOfFontHandle::Append(OCNaroWrappers::OCMFT_ListOfFontHandle^ S)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->Append(*((MFT_ListOfFontHandle*)S->Handle));
}

 void OCMFT_ListOfFontHandle::Prepend(MFT_FileHandle T)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->Prepend(T);
}

 void OCMFT_ListOfFontHandle::Prepend(OCNaroWrappers::OCMFT_ListOfFontHandle^ S)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->Prepend(*((MFT_ListOfFontHandle*)S->Handle));
}

 void OCMFT_ListOfFontHandle::InsertBefore(Standard_Integer Index, MFT_FileHandle T)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->InsertBefore(Index, T);
}

 void OCMFT_ListOfFontHandle::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMFT_ListOfFontHandle^ S)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->InsertBefore(Index, *((MFT_ListOfFontHandle*)S->Handle));
}

 void OCMFT_ListOfFontHandle::InsertAfter(Standard_Integer Index, MFT_FileHandle T)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->InsertAfter(Index, T);
}

 void OCMFT_ListOfFontHandle::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMFT_ListOfFontHandle^ S)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->InsertAfter(Index, *((MFT_ListOfFontHandle*)S->Handle));
}

 MFT_FileHandle OCMFT_ListOfFontHandle::First()
{
  return ((MFT_ListOfFontHandle*)nativeHandle)->First();
}

 MFT_FileHandle OCMFT_ListOfFontHandle::Last()
{
  return ((MFT_ListOfFontHandle*)nativeHandle)->Last();
}

 void OCMFT_ListOfFontHandle::Split(Standard_Integer Index, OCNaroWrappers::OCMFT_ListOfFontHandle^ Sub)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->Split(Index, *((MFT_ListOfFontHandle*)Sub->Handle));
}

 MFT_FileHandle OCMFT_ListOfFontHandle::Value(Standard_Integer Index)
{
  return ((MFT_ListOfFontHandle*)nativeHandle)->Value(Index);
}

 void OCMFT_ListOfFontHandle::SetValue(Standard_Integer Index, MFT_FileHandle I)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->SetValue(Index, I);
}

 MFT_FileHandle OCMFT_ListOfFontHandle::ChangeValue(Standard_Integer Index)
{
  return ((MFT_ListOfFontHandle*)nativeHandle)->ChangeValue(Index);
}

 void OCMFT_ListOfFontHandle::Remove(Standard_Integer Index)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->Remove(Index);
}

 void OCMFT_ListOfFontHandle::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((MFT_ListOfFontHandle*)nativeHandle)->Remove(FromIndex, ToIndex);
}


