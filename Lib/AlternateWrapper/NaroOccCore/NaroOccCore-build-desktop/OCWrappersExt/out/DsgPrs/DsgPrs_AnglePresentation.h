// File generated by CPPExt (MPV)
//
#ifndef _DsgPrs_AnglePresentation_OCWrappers_HeaderFile
#define _DsgPrs_AnglePresentation_OCWrappers_HeaderFile

// include native header
#include <DsgPrs_AnglePresentation.hxx>
#include "../Converter.h"


#include "DsgPrs_ArrowSide.h"


namespace OCNaroWrappers
{

ref class OCPrs3d_Presentation;
ref class OCPrs3d_Drawer;
ref class OCTCollection_ExtendedString;
ref class OCgp_Circ;
ref class OCgp_Pnt;
ref class OCgp_Dir;
ref class OCgp_Ax1;


//! A framework for displaying angles. <br>
public ref class OCDsgPrs_AnglePresentation  {

protected:
  DsgPrs_AnglePresentation* nativeHandle;
  OCDsgPrs_AnglePresentation(OCDummy^) {};

public:
  property DsgPrs_AnglePresentation* Handle
  {
    DsgPrs_AnglePresentation* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCDsgPrs_AnglePresentation(DsgPrs_AnglePresentation* nativeHandle);

// Methods PUBLIC

//! Draws the presenation of the full angle of a cone. <br>
//!          VminCircle - a circle at V parameter = Vmin <br>
//!          VmaxCircle - a circle at V parameter = Vmax <br>
//!          aCircle - a circle at V parameter from projection of aPosition to axis of the cone <br>
static /*instead*/  void Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real aVal, OCNaroWrappers::OCTCollection_ExtendedString^ aText, OCNaroWrappers::OCgp_Circ^ aCircle, OCNaroWrappers::OCgp_Pnt^ aPosition, OCNaroWrappers::OCgp_Pnt^ Apex, OCNaroWrappers::OCgp_Circ^ VminCircle, OCNaroWrappers::OCgp_Circ^ VmaxCircle, Standard_Real aArrowSize) ;

//! Draws the representation of the angle <br>
//!          defined by dir1 and dir2, centered on <br>
//!          CenterPoint, using the offset point OffsetPoint. <br>
//!          Lines are drawn to points AttachmentPoint1 and AttachmentPoint2 <br>
static /*instead*/  void Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real theval, OCNaroWrappers::OCgp_Pnt^ CenterPoint, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint1, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint2, OCNaroWrappers::OCgp_Dir^ dir1, OCNaroWrappers::OCgp_Dir^ dir2, OCNaroWrappers::OCgp_Pnt^ OffsetPoint) ;

//! Same  as above, but <thevalstring> contains conversion <br>
//!          in Session units.... <br>
static /*instead*/  void Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real theval, OCNaroWrappers::OCTCollection_ExtendedString^ thevalstring, OCNaroWrappers::OCgp_Pnt^ CenterPoint, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint1, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint2, OCNaroWrappers::OCgp_Dir^ dir1, OCNaroWrappers::OCgp_Dir^ dir2, OCNaroWrappers::OCgp_Pnt^ OffsetPoint) ;

//! Same  as above, may add one  or <br>
//! two Arrows  according to  <ArrowSide>  value <br>
static /*instead*/  void Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real theval, OCNaroWrappers::OCTCollection_ExtendedString^ thevalstring, OCNaroWrappers::OCgp_Pnt^ CenterPoint, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint1, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint2, OCNaroWrappers::OCgp_Dir^ dir1, OCNaroWrappers::OCgp_Dir^ dir2, OCNaroWrappers::OCgp_Pnt^ OffsetPoint, OCDsgPrs_ArrowSide ArrowSide) ;

//! Same  as above, but axisdir contains the axis direction <br>
//!          useful for Revol that can be opened with 180 degrees <br>
static /*instead*/  void Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real theval, OCNaroWrappers::OCTCollection_ExtendedString^ thevalstring, OCNaroWrappers::OCgp_Pnt^ CenterPoint, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint1, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint2, OCNaroWrappers::OCgp_Dir^ dir1, OCNaroWrappers::OCgp_Dir^ dir2, OCNaroWrappers::OCgp_Dir^ axisdir, OCNaroWrappers::OCgp_Pnt^ OffsetPoint) ;

//! Same  as above,may add one  or <br>
//! two Arrows  according to  <ArrowSide>  value <br>
static /*instead*/  void Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real theval, OCNaroWrappers::OCTCollection_ExtendedString^ thevalstring, OCNaroWrappers::OCgp_Pnt^ CenterPoint, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint1, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint2, OCNaroWrappers::OCgp_Dir^ dir1, OCNaroWrappers::OCgp_Dir^ dir2, OCNaroWrappers::OCgp_Dir^ axisdir, System::Boolean isPlane, OCNaroWrappers::OCgp_Ax1^ AxisOfSurf, OCNaroWrappers::OCgp_Pnt^ OffsetPoint, OCDsgPrs_ArrowSide ArrowSide) ;

//! simple representation of a poor lonesome angle dimension <br>
//!          Draw a line from <theCenter>   to <AttachmentPoint1>, then operates <br>
//!          a rotation around the perpmay add one  or <br>
//!          two Arrows  according to  <ArrowSide>  value.  The <br>
//!          attributes (color,arrowsize,...) are driven by the Drawer. <br>
static /*instead*/  void Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real theval, OCNaroWrappers::OCgp_Pnt^ theCenter, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint1, OCNaroWrappers::OCgp_Ax1^ theAxe, OCDsgPrs_ArrowSide ArrowSide) ;

~OCDsgPrs_AnglePresentation()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
