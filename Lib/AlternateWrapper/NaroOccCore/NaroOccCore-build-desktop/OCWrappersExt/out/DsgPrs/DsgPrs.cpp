// File generated by CPPExt (CPP file)
//

#include "DsgPrs.h"
#include "../Converter.h"


using namespace OCNaroWrappers;



 void OCDsgPrs::ComputeSymbol(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_AngleAspect^ anAspect, OCNaroWrappers::OCgp_Pnt^ pt1, OCNaroWrappers::OCgp_Pnt^ pt2, OCNaroWrappers::OCgp_Dir^ dir1, OCNaroWrappers::OCgp_Dir^ dir2, OCDsgPrs_ArrowSide ArrowSide)
{
  DsgPrs::ComputeSymbol(*((Handle_Prs3d_Presentation*)aPresentation->Handle), *((Handle_Prs3d_AngleAspect*)anAspect->Handle), *((gp_Pnt*)pt1->Handle), *((gp_Pnt*)pt2->Handle), *((gp_Dir*)dir1->Handle), *((gp_Dir*)dir2->Handle), (DsgPrs_ArrowSide)ArrowSide);
}

 void OCDsgPrs::ComputeSymbol(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_LengthAspect^ anAspect, OCNaroWrappers::OCgp_Pnt^ pt1, OCNaroWrappers::OCgp_Pnt^ pt2, OCNaroWrappers::OCgp_Dir^ dir1, OCNaroWrappers::OCgp_Dir^ dir2, OCDsgPrs_ArrowSide ArrowSide, System::Boolean drawFromCenter)
{
  DsgPrs::ComputeSymbol(*((Handle_Prs3d_Presentation*)aPresentation->Handle), *((Handle_Prs3d_LengthAspect*)anAspect->Handle), *((gp_Pnt*)pt1->Handle), *((gp_Pnt*)pt2->Handle), *((gp_Dir*)dir1->Handle), *((gp_Dir*)dir2->Handle), (DsgPrs_ArrowSide)ArrowSide, OCConverter::BooleanToStandardBoolean(drawFromCenter));
}

 void OCDsgPrs::ComputePlanarFacesLengthPresentation(Standard_Real FirstArrowLength, Standard_Real SecondArrowLength, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint1, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint2, OCNaroWrappers::OCgp_Dir^ DirAttach, OCNaroWrappers::OCgp_Pnt^ OffsetPoint, OCNaroWrappers::OCgp_Pln^ PlaneOfFaces, OCNaroWrappers::OCgp_Pnt^ EndOfArrow1, OCNaroWrappers::OCgp_Pnt^ EndOfArrow2, OCNaroWrappers::OCgp_Dir^ DirOfArrow1)
{
  DsgPrs::ComputePlanarFacesLengthPresentation(FirstArrowLength, SecondArrowLength, *((gp_Pnt*)AttachmentPoint1->Handle), *((gp_Pnt*)AttachmentPoint2->Handle), *((gp_Dir*)DirAttach->Handle), *((gp_Pnt*)OffsetPoint->Handle), *((gp_Pln*)PlaneOfFaces->Handle), *((gp_Pnt*)EndOfArrow1->Handle), *((gp_Pnt*)EndOfArrow2->Handle), *((gp_Dir*)DirOfArrow1->Handle));
}

 void OCDsgPrs::ComputeCurvilinearFacesLengthPresentation(Standard_Real FirstArrowLength, Standard_Real SecondArrowLength, OCNaroWrappers::OCGeom_Surface^ SecondSurf, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint1, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint2, OCNaroWrappers::OCgp_Dir^ DirAttach, OCNaroWrappers::OCgp_Pnt^ EndOfArrow2, OCNaroWrappers::OCgp_Dir^ DirOfArrow1, OCNaroWrappers::OCGeom_Curve^ VCurve, OCNaroWrappers::OCGeom_Curve^ UCurve, Standard_Real& FirstU, Standard_Real& deltaU, Standard_Real& FirstV, Standard_Real& deltaV)
{
  DsgPrs::ComputeCurvilinearFacesLengthPresentation(FirstArrowLength, SecondArrowLength, *((Handle_Geom_Surface*)SecondSurf->Handle), *((gp_Pnt*)AttachmentPoint1->Handle), *((gp_Pnt*)AttachmentPoint2->Handle), *((gp_Dir*)DirAttach->Handle), *((gp_Pnt*)EndOfArrow2->Handle), *((gp_Dir*)DirOfArrow1->Handle), *((Handle_Geom_Curve*)VCurve->Handle), *((Handle_Geom_Curve*)UCurve->Handle), FirstU, deltaU, FirstV, deltaV);
}

 void OCDsgPrs::ComputeFacesAnglePresentation(Standard_Real ArrowLength, Standard_Real Value, OCNaroWrappers::OCgp_Pnt^ CenterPoint, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint1, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint2, OCNaroWrappers::OCgp_Dir^ dir1, OCNaroWrappers::OCgp_Dir^ dir2, OCNaroWrappers::OCgp_Dir^ axisdir, System::Boolean isPlane, OCNaroWrappers::OCgp_Ax1^ AxisOfSurf, OCNaroWrappers::OCgp_Pnt^ OffsetPoint, OCNaroWrappers::OCgp_Circ^ AngleCirc, Standard_Real& FirstParAngleCirc, Standard_Real& LastParAngleCirc, OCNaroWrappers::OCgp_Pnt^ EndOfArrow1, OCNaroWrappers::OCgp_Pnt^ EndOfArrow2, OCNaroWrappers::OCgp_Dir^ DirOfArrow1, OCNaroWrappers::OCgp_Dir^ DirOfArrow2, OCNaroWrappers::OCgp_Pnt^ ProjAttachPoint2, OCNaroWrappers::OCgp_Circ^ AttachCirc, Standard_Real& FirstParAttachCirc, Standard_Real& LastParAttachCirc)
{
  DsgPrs::ComputeFacesAnglePresentation(ArrowLength, Value, *((gp_Pnt*)CenterPoint->Handle), *((gp_Pnt*)AttachmentPoint1->Handle), *((gp_Pnt*)AttachmentPoint2->Handle), *((gp_Dir*)dir1->Handle), *((gp_Dir*)dir2->Handle), *((gp_Dir*)axisdir->Handle), OCConverter::BooleanToStandardBoolean(isPlane), *((gp_Ax1*)AxisOfSurf->Handle), *((gp_Pnt*)OffsetPoint->Handle), *((gp_Circ*)AngleCirc->Handle), FirstParAngleCirc, LastParAngleCirc, *((gp_Pnt*)EndOfArrow1->Handle), *((gp_Pnt*)EndOfArrow2->Handle), *((gp_Dir*)DirOfArrow1->Handle), *((gp_Dir*)DirOfArrow2->Handle), *((gp_Pnt*)ProjAttachPoint2->Handle), *((gp_Circ*)AttachCirc->Handle), FirstParAttachCirc, LastParAttachCirc);
}

 void OCDsgPrs::ComputeRadiusLine(OCNaroWrappers::OCgp_Pnt^ aCenter, OCNaroWrappers::OCgp_Pnt^ anEndOfArrow, OCNaroWrappers::OCgp_Pnt^ aPosition, System::Boolean drawFromCenter, OCNaroWrappers::OCgp_Pnt^ aRadLineOrign, OCNaroWrappers::OCgp_Pnt^ aRadLineEnd)
{
  DsgPrs::ComputeRadiusLine(*((gp_Pnt*)aCenter->Handle), *((gp_Pnt*)anEndOfArrow->Handle), *((gp_Pnt*)aPosition->Handle), OCConverter::BooleanToStandardBoolean(drawFromCenter), *((gp_Pnt*)aRadLineOrign->Handle), *((gp_Pnt*)aRadLineEnd->Handle));
}

 void OCDsgPrs::ComputeFilletRadiusPresentation(Standard_Real ArrowLength, Standard_Real Value, OCNaroWrappers::OCgp_Pnt^ Position, OCNaroWrappers::OCgp_Dir^ NormalDir, OCNaroWrappers::OCgp_Pnt^ FirstPoint, OCNaroWrappers::OCgp_Pnt^ SecondPoint, OCNaroWrappers::OCgp_Pnt^ Center, OCNaroWrappers::OCgp_Pnt^ BasePnt, System::Boolean drawRevers, System::Boolean& SpecCase, OCNaroWrappers::OCgp_Circ^ FilletCirc, Standard_Real& FirstParCirc, Standard_Real& LastParCirc, OCNaroWrappers::OCgp_Pnt^ EndOfArrow, OCNaroWrappers::OCgp_Dir^ DirOfArrow, OCNaroWrappers::OCgp_Pnt^ DrawPosition)
{
  DsgPrs::ComputeFilletRadiusPresentation(ArrowLength, Value, *((gp_Pnt*)Position->Handle), *((gp_Dir*)NormalDir->Handle), *((gp_Pnt*)FirstPoint->Handle), *((gp_Pnt*)SecondPoint->Handle), *((gp_Pnt*)Center->Handle), *((gp_Pnt*)BasePnt->Handle), OCConverter::BooleanToStandardBoolean(drawRevers), (Standard_Boolean&)(SpecCase), *((gp_Circ*)FilletCirc->Handle), FirstParCirc, LastParCirc, *((gp_Pnt*)EndOfArrow->Handle), *((gp_Dir*)DirOfArrow->Handle), *((gp_Pnt*)DrawPosition->Handle));
}

 Standard_Real OCDsgPrs::DistanceFromApex(OCNaroWrappers::OCgp_Elips^ elips, OCNaroWrappers::OCgp_Pnt^ Apex, Standard_Real par)
{
  return DsgPrs::DistanceFromApex(*((gp_Elips*)elips->Handle), *((gp_Pnt*)Apex->Handle), par);
}


