// File generated by CPPExt (CPP file)
//

#include "DsgPrs_EllipseRadiusPresentation.h"
#include "../Converter.h"
#include "../Prs3d/Prs3d_Presentation.h"
#include "../Prs3d/Prs3d_Drawer.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Elips.h"
#include "../Geom/Geom_OffsetCurve.h"


using namespace OCNaroWrappers;

OCDsgPrs_EllipseRadiusPresentation::OCDsgPrs_EllipseRadiusPresentation(DsgPrs_EllipseRadiusPresentation* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 void OCDsgPrs_EllipseRadiusPresentation::Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real theval, OCNaroWrappers::OCTCollection_ExtendedString^ aText, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint, OCNaroWrappers::OCgp_Pnt^ anEndOfArrow, OCNaroWrappers::OCgp_Pnt^ aCenter, System::Boolean IsMaxRadius, OCDsgPrs_ArrowSide ArrowSide)
{
  DsgPrs_EllipseRadiusPresentation::Add(*((Handle_Prs3d_Presentation*)aPresentation->Handle), *((Handle_Prs3d_Drawer*)aDrawer->Handle), theval, *((TCollection_ExtendedString*)aText->Handle), *((gp_Pnt*)AttachmentPoint->Handle), *((gp_Pnt*)anEndOfArrow->Handle), *((gp_Pnt*)aCenter->Handle), OCConverter::BooleanToStandardBoolean(IsMaxRadius), (DsgPrs_ArrowSide)ArrowSide);
}

 void OCDsgPrs_EllipseRadiusPresentation::Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real theval, OCNaroWrappers::OCTCollection_ExtendedString^ aText, OCNaroWrappers::OCgp_Elips^ anEllipse, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint, OCNaroWrappers::OCgp_Pnt^ anEndOfArrow, OCNaroWrappers::OCgp_Pnt^ aCenter, Standard_Real uFirst, System::Boolean IsInDomain, System::Boolean IsMaxRadius, OCDsgPrs_ArrowSide ArrowSide)
{
  DsgPrs_EllipseRadiusPresentation::Add(*((Handle_Prs3d_Presentation*)aPresentation->Handle), *((Handle_Prs3d_Drawer*)aDrawer->Handle), theval, *((TCollection_ExtendedString*)aText->Handle), *((gp_Elips*)anEllipse->Handle), *((gp_Pnt*)AttachmentPoint->Handle), *((gp_Pnt*)anEndOfArrow->Handle), *((gp_Pnt*)aCenter->Handle), uFirst, OCConverter::BooleanToStandardBoolean(IsInDomain), OCConverter::BooleanToStandardBoolean(IsMaxRadius), (DsgPrs_ArrowSide)ArrowSide);
}

 void OCDsgPrs_EllipseRadiusPresentation::Add(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, Standard_Real theval, OCNaroWrappers::OCTCollection_ExtendedString^ aText, OCNaroWrappers::OCGeom_OffsetCurve^ aCurve, OCNaroWrappers::OCgp_Pnt^ AttachmentPoint, OCNaroWrappers::OCgp_Pnt^ anEndOfArrow, OCNaroWrappers::OCgp_Pnt^ aCenter, Standard_Real uFirst, System::Boolean IsInDomain, System::Boolean IsMaxRadius, OCDsgPrs_ArrowSide ArrowSide)
{
  DsgPrs_EllipseRadiusPresentation::Add(*((Handle_Prs3d_Presentation*)aPresentation->Handle), *((Handle_Prs3d_Drawer*)aDrawer->Handle), theval, *((TCollection_ExtendedString*)aText->Handle), *((Handle_Geom_OffsetCurve*)aCurve->Handle), *((gp_Pnt*)AttachmentPoint->Handle), *((gp_Pnt*)anEndOfArrow->Handle), *((gp_Pnt*)aCenter->Handle), uFirst, OCConverter::BooleanToStandardBoolean(IsInDomain), OCConverter::BooleanToStandardBoolean(IsMaxRadius), (DsgPrs_ArrowSide)ArrowSide);
}


