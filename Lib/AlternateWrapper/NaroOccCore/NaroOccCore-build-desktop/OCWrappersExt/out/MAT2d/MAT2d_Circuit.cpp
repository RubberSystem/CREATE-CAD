// File generated by CPPExt (CPP file)
//

#include "MAT2d_Circuit.h"
#include "../Converter.h"
#include "MAT2d_SequenceOfSequenceOfGeometry.h"
#include "../TColStd/TColStd_SequenceOfBoolean.h"
#include "MAT2d_Connexion.h"
#include "../TColGeom2d/TColGeom2d_SequenceOfGeometry.h"
#include "MAT2d_BiInt.h"
#include "MAT2d_SequenceOfConnexion.h"
#include "MAT2d_MiniPath.h"
#include "../Geom2d/Geom2d_Geometry.h"
#include "../TColStd/TColStd_SequenceOfInteger.h"


using namespace OCNaroWrappers;

OCMAT2d_Circuit::OCMAT2d_Circuit(Handle(MAT2d_Circuit)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MAT2d_Circuit(*nativeHandle);
}

OCMAT2d_Circuit::OCMAT2d_Circuit() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MAT2d_Circuit(new MAT2d_Circuit());
}

 void OCMAT2d_Circuit::Perform(OCNaroWrappers::OCMAT2d_SequenceOfSequenceOfGeometry^ aFigure, OCNaroWrappers::OCTColStd_SequenceOfBoolean^ IsClosed, Standard_Integer IndRefLine, System::Boolean Trigo)
{
  (*((Handle_MAT2d_Circuit*)nativeHandle))->Perform(*((MAT2d_SequenceOfSequenceOfGeometry*)aFigure->Handle), *((TColStd_SequenceOfBoolean*)IsClosed->Handle), IndRefLine, OCConverter::BooleanToStandardBoolean(Trigo));
}

 Standard_Integer OCMAT2d_Circuit::NumberOfItems()
{
  return (*((Handle_MAT2d_Circuit*)nativeHandle))->NumberOfItems();
}

OCGeom2d_Geometry^ OCMAT2d_Circuit::Value(Standard_Integer Index)
{
  Handle(Geom2d_Geometry) tmp = (*((Handle_MAT2d_Circuit*)nativeHandle))->Value(Index);
  return gcnew OCGeom2d_Geometry(&tmp);
}

 Standard_Integer OCMAT2d_Circuit::LineLength(Standard_Integer IndexLine)
{
  return (*((Handle_MAT2d_Circuit*)nativeHandle))->LineLength(IndexLine);
}

OCTColStd_SequenceOfInteger^ OCMAT2d_Circuit::RefToEqui(Standard_Integer IndLine, Standard_Integer IndCurve)
{
  TColStd_SequenceOfInteger* tmp = new TColStd_SequenceOfInteger();
  *tmp = (*((Handle_MAT2d_Circuit*)nativeHandle))->RefToEqui(IndLine, IndCurve);
  return gcnew OCTColStd_SequenceOfInteger(tmp);
}

OCMAT2d_Connexion^ OCMAT2d_Circuit::Connexion(Standard_Integer Index)
{
  Handle(MAT2d_Connexion) tmp = (*((Handle_MAT2d_Circuit*)nativeHandle))->Connexion(Index);
  return gcnew OCMAT2d_Connexion(&tmp);
}

 System::Boolean OCMAT2d_Circuit::ConnexionOn(Standard_Integer Index)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MAT2d_Circuit*)nativeHandle))->ConnexionOn(Index));
}


