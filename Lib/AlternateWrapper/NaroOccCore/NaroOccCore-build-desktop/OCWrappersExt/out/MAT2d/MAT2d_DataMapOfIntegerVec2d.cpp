// File generated by CPPExt (CPP file)
//

#include "MAT2d_DataMapOfIntegerVec2d.h"
#include "../Converter.h"
#include "../gp/gp_Vec2d.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MAT2d_DataMapNodeOfDataMapOfIntegerVec2d.h"
#include "MAT2d_DataMapIteratorOfDataMapOfIntegerVec2d.h"


using namespace OCNaroWrappers;

OCMAT2d_DataMapOfIntegerVec2d::OCMAT2d_DataMapOfIntegerVec2d(MAT2d_DataMapOfIntegerVec2d* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMAT2d_DataMapOfIntegerVec2d::OCMAT2d_DataMapOfIntegerVec2d(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MAT2d_DataMapOfIntegerVec2d(NbBuckets);
}

OCMAT2d_DataMapOfIntegerVec2d^ OCMAT2d_DataMapOfIntegerVec2d::Assign(OCNaroWrappers::OCMAT2d_DataMapOfIntegerVec2d^ Other)
{
  MAT2d_DataMapOfIntegerVec2d* tmp = new MAT2d_DataMapOfIntegerVec2d(0);
  *tmp = ((MAT2d_DataMapOfIntegerVec2d*)nativeHandle)->Assign(*((MAT2d_DataMapOfIntegerVec2d*)Other->Handle));
  return gcnew OCMAT2d_DataMapOfIntegerVec2d(tmp);
}

 void OCMAT2d_DataMapOfIntegerVec2d::ReSize(Standard_Integer NbBuckets)
{
  ((MAT2d_DataMapOfIntegerVec2d*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMAT2d_DataMapOfIntegerVec2d::Bind(Standard_Integer K, OCNaroWrappers::OCgp_Vec2d^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_DataMapOfIntegerVec2d*)nativeHandle)->Bind(K, *((gp_Vec2d*)I->Handle)));
}

 System::Boolean OCMAT2d_DataMapOfIntegerVec2d::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_DataMapOfIntegerVec2d*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMAT2d_DataMapOfIntegerVec2d::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_DataMapOfIntegerVec2d*)nativeHandle)->UnBind(K));
}

OCgp_Vec2d^ OCMAT2d_DataMapOfIntegerVec2d::Find(Standard_Integer K)
{
  gp_Vec2d* tmp = new gp_Vec2d();
  *tmp = ((MAT2d_DataMapOfIntegerVec2d*)nativeHandle)->Find(K);
  return gcnew OCgp_Vec2d(tmp);
}

OCgp_Vec2d^ OCMAT2d_DataMapOfIntegerVec2d::ChangeFind(Standard_Integer K)
{
  gp_Vec2d* tmp = new gp_Vec2d();
  *tmp = ((MAT2d_DataMapOfIntegerVec2d*)nativeHandle)->ChangeFind(K);
  return gcnew OCgp_Vec2d(tmp);
}

 Standard_Address OCMAT2d_DataMapOfIntegerVec2d::Find1(Standard_Integer K)
{
  return ((MAT2d_DataMapOfIntegerVec2d*)nativeHandle)->Find1(K);
}

 Standard_Address OCMAT2d_DataMapOfIntegerVec2d::ChangeFind1(Standard_Integer K)
{
  return ((MAT2d_DataMapOfIntegerVec2d*)nativeHandle)->ChangeFind1(K);
}


