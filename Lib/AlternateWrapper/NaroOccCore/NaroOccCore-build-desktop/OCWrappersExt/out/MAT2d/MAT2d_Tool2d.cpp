// File generated by CPPExt (CPP file)
//

#include "MAT2d_Tool2d.h"
#include "../Converter.h"
#include "MAT2d_Circuit.h"
#include "../MAT/MAT_Bisector.h"
#include "../Bisector/Bisector_Bisec.h"
#include "../Geom2d/Geom2d_Geometry.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Vec2d.h"


using namespace OCNaroWrappers;

OCMAT2d_Tool2d::OCMAT2d_Tool2d(MAT2d_Tool2d* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCMAT2d_Tool2d::OCMAT2d_Tool2d() 
{
  nativeHandle = new MAT2d_Tool2d();
}

 void OCMAT2d_Tool2d::Sense(OCMAT_Side aside)
{
  ((MAT2d_Tool2d*)nativeHandle)->Sense((MAT_Side)aside);
}

 void OCMAT2d_Tool2d::InitItems(OCNaroWrappers::OCMAT2d_Circuit^ aCircuit)
{
  ((MAT2d_Tool2d*)nativeHandle)->InitItems(*((Handle_MAT2d_Circuit*)aCircuit->Handle));
}

 Standard_Integer OCMAT2d_Tool2d::NumberOfItems()
{
  return ((MAT2d_Tool2d*)nativeHandle)->NumberOfItems();
}

 Standard_Real OCMAT2d_Tool2d::ToleranceOfConfusion()
{
  return ((MAT2d_Tool2d*)nativeHandle)->ToleranceOfConfusion();
}

 Standard_Integer OCMAT2d_Tool2d::FirstPoint(Standard_Integer anitem, Standard_Real& dist)
{
  return ((MAT2d_Tool2d*)nativeHandle)->FirstPoint(anitem, dist);
}

 Standard_Integer OCMAT2d_Tool2d::TangentBefore(Standard_Integer anitem)
{
  return ((MAT2d_Tool2d*)nativeHandle)->TangentBefore(anitem);
}

 Standard_Integer OCMAT2d_Tool2d::TangentAfter(Standard_Integer anitem)
{
  return ((MAT2d_Tool2d*)nativeHandle)->TangentAfter(anitem);
}

 Standard_Integer OCMAT2d_Tool2d::Tangent(Standard_Integer bisector)
{
  return ((MAT2d_Tool2d*)nativeHandle)->Tangent(bisector);
}

 void OCMAT2d_Tool2d::CreateBisector(OCNaroWrappers::OCMAT_Bisector^ abisector)
{
  ((MAT2d_Tool2d*)nativeHandle)->CreateBisector(*((Handle_MAT_Bisector*)abisector->Handle));
}

 System::Boolean OCMAT2d_Tool2d::TrimBisector(OCNaroWrappers::OCMAT_Bisector^ abisector)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_Tool2d*)nativeHandle)->TrimBisector(*((Handle_MAT_Bisector*)abisector->Handle)));
}

 System::Boolean OCMAT2d_Tool2d::TrimBisector(OCNaroWrappers::OCMAT_Bisector^ abisector, Standard_Integer apoint)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_Tool2d*)nativeHandle)->TrimBisector(*((Handle_MAT_Bisector*)abisector->Handle), apoint));
}

 Standard_Real OCMAT2d_Tool2d::IntersectBisector(OCNaroWrappers::OCMAT_Bisector^ bisectorone, OCNaroWrappers::OCMAT_Bisector^ bisectortwo, Standard_Integer& intpnt)
{
  return ((MAT2d_Tool2d*)nativeHandle)->IntersectBisector(*((Handle_MAT_Bisector*)bisectorone->Handle), *((Handle_MAT_Bisector*)bisectortwo->Handle), intpnt);
}

 Standard_Real OCMAT2d_Tool2d::Distance(OCNaroWrappers::OCMAT_Bisector^ abisector, Standard_Real param1, Standard_Real param2)
{
  return ((MAT2d_Tool2d*)nativeHandle)->Distance(*((Handle_MAT_Bisector*)abisector->Handle), param1, param2);
}

 void OCMAT2d_Tool2d::Dump(Standard_Integer bisector, Standard_Integer erease)
{
  ((MAT2d_Tool2d*)nativeHandle)->Dump(bisector, erease);
}

OCBisector_Bisec^ OCMAT2d_Tool2d::GeomBis(Standard_Integer Index)
{
  Bisector_Bisec* tmp = new Bisector_Bisec();
  *tmp = ((MAT2d_Tool2d*)nativeHandle)->GeomBis(Index);
  return gcnew OCBisector_Bisec(tmp);
}

OCGeom2d_Geometry^ OCMAT2d_Tool2d::GeomElt(Standard_Integer Index)
{
  Handle(Geom2d_Geometry) tmp = ((MAT2d_Tool2d*)nativeHandle)->GeomElt(Index);
  return gcnew OCGeom2d_Geometry(&tmp);
}

OCgp_Pnt2d^ OCMAT2d_Tool2d::GeomPnt(Standard_Integer Index)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = ((MAT2d_Tool2d*)nativeHandle)->GeomPnt(Index);
  return gcnew OCgp_Pnt2d(tmp);
}

OCgp_Vec2d^ OCMAT2d_Tool2d::GeomVec(Standard_Integer Index)
{
  gp_Vec2d* tmp = new gp_Vec2d();
  *tmp = ((MAT2d_Tool2d*)nativeHandle)->GeomVec(Index);
  return gcnew OCgp_Vec2d(tmp);
}

OCMAT2d_Circuit^ OCMAT2d_Tool2d::Circuit()
{
  Handle(MAT2d_Circuit) tmp = ((MAT2d_Tool2d*)nativeHandle)->Circuit();
  return gcnew OCMAT2d_Circuit(&tmp);
}

 void OCMAT2d_Tool2d::BisecFusion(Standard_Integer Index1, Standard_Integer Index2)
{
  ((MAT2d_Tool2d*)nativeHandle)->BisecFusion(Index1, Index2);
}

OCBisector_Bisec^ OCMAT2d_Tool2d::ChangeGeomBis(Standard_Integer Index)
{
  Bisector_Bisec* tmp = new Bisector_Bisec();
  *tmp = ((MAT2d_Tool2d*)nativeHandle)->ChangeGeomBis(Index);
  return gcnew OCBisector_Bisec(tmp);
}


