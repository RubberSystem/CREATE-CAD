// File generated by CPPExt (CPP file)
//

#include "MAT2d_SequenceOfConnexion.h"
#include "../Converter.h"
#include "MAT2d_Connexion.h"
#include "MAT2d_SequenceNodeOfSequenceOfConnexion.h"


using namespace OCNaroWrappers;

OCMAT2d_SequenceOfConnexion::OCMAT2d_SequenceOfConnexion(MAT2d_SequenceOfConnexion* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMAT2d_SequenceOfConnexion::OCMAT2d_SequenceOfConnexion() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new MAT2d_SequenceOfConnexion();
}

OCMAT2d_SequenceOfConnexion^ OCMAT2d_SequenceOfConnexion::Assign(OCNaroWrappers::OCMAT2d_SequenceOfConnexion^ Other)
{
  MAT2d_SequenceOfConnexion* tmp = new MAT2d_SequenceOfConnexion();
  *tmp = ((MAT2d_SequenceOfConnexion*)nativeHandle)->Assign(*((MAT2d_SequenceOfConnexion*)Other->Handle));
  return gcnew OCMAT2d_SequenceOfConnexion(tmp);
}

 void OCMAT2d_SequenceOfConnexion::Append(OCNaroWrappers::OCMAT2d_Connexion^ T)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->Append(*((Handle_MAT2d_Connexion*)T->Handle));
}

 void OCMAT2d_SequenceOfConnexion::Append(OCNaroWrappers::OCMAT2d_SequenceOfConnexion^ S)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->Append(*((MAT2d_SequenceOfConnexion*)S->Handle));
}

 void OCMAT2d_SequenceOfConnexion::Prepend(OCNaroWrappers::OCMAT2d_Connexion^ T)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->Prepend(*((Handle_MAT2d_Connexion*)T->Handle));
}

 void OCMAT2d_SequenceOfConnexion::Prepend(OCNaroWrappers::OCMAT2d_SequenceOfConnexion^ S)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->Prepend(*((MAT2d_SequenceOfConnexion*)S->Handle));
}

 void OCMAT2d_SequenceOfConnexion::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMAT2d_Connexion^ T)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->InsertBefore(Index, *((Handle_MAT2d_Connexion*)T->Handle));
}

 void OCMAT2d_SequenceOfConnexion::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCMAT2d_SequenceOfConnexion^ S)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->InsertBefore(Index, *((MAT2d_SequenceOfConnexion*)S->Handle));
}

 void OCMAT2d_SequenceOfConnexion::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMAT2d_Connexion^ T)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->InsertAfter(Index, *((Handle_MAT2d_Connexion*)T->Handle));
}

 void OCMAT2d_SequenceOfConnexion::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCMAT2d_SequenceOfConnexion^ S)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->InsertAfter(Index, *((MAT2d_SequenceOfConnexion*)S->Handle));
}

OCMAT2d_Connexion^ OCMAT2d_SequenceOfConnexion::First()
{
  Handle(MAT2d_Connexion) tmp = ((MAT2d_SequenceOfConnexion*)nativeHandle)->First();
  return gcnew OCMAT2d_Connexion(&tmp);
}

OCMAT2d_Connexion^ OCMAT2d_SequenceOfConnexion::Last()
{
  Handle(MAT2d_Connexion) tmp = ((MAT2d_SequenceOfConnexion*)nativeHandle)->Last();
  return gcnew OCMAT2d_Connexion(&tmp);
}

 void OCMAT2d_SequenceOfConnexion::Split(Standard_Integer Index, OCNaroWrappers::OCMAT2d_SequenceOfConnexion^ Sub)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->Split(Index, *((MAT2d_SequenceOfConnexion*)Sub->Handle));
}

OCMAT2d_Connexion^ OCMAT2d_SequenceOfConnexion::Value(Standard_Integer Index)
{
  Handle(MAT2d_Connexion) tmp = ((MAT2d_SequenceOfConnexion*)nativeHandle)->Value(Index);
  return gcnew OCMAT2d_Connexion(&tmp);
}

 void OCMAT2d_SequenceOfConnexion::SetValue(Standard_Integer Index, OCNaroWrappers::OCMAT2d_Connexion^ I)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->SetValue(Index, *((Handle_MAT2d_Connexion*)I->Handle));
}

OCMAT2d_Connexion^ OCMAT2d_SequenceOfConnexion::ChangeValue(Standard_Integer Index)
{
  Handle(MAT2d_Connexion) tmp = ((MAT2d_SequenceOfConnexion*)nativeHandle)->ChangeValue(Index);
  return gcnew OCMAT2d_Connexion(&tmp);
}

 void OCMAT2d_SequenceOfConnexion::Remove(Standard_Integer Index)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->Remove(Index);
}

 void OCMAT2d_SequenceOfConnexion::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((MAT2d_SequenceOfConnexion*)nativeHandle)->Remove(FromIndex, ToIndex);
}


