// File generated by CPPExt (CPP file)
//

#include "MAT2d_DataMapOfIntegerSequenceOfConnexion.h"
#include "../Converter.h"
#include "MAT2d_SequenceOfConnexion.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MAT2d_DataMapNodeOfDataMapOfIntegerSequenceOfConnexion.h"
#include "MAT2d_DataMapIteratorOfDataMapOfIntegerSequenceOfConnexion.h"


using namespace OCNaroWrappers;

OCMAT2d_DataMapOfIntegerSequenceOfConnexion::OCMAT2d_DataMapOfIntegerSequenceOfConnexion(MAT2d_DataMapOfIntegerSequenceOfConnexion* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMAT2d_DataMapOfIntegerSequenceOfConnexion::OCMAT2d_DataMapOfIntegerSequenceOfConnexion(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MAT2d_DataMapOfIntegerSequenceOfConnexion(NbBuckets);
}

OCMAT2d_DataMapOfIntegerSequenceOfConnexion^ OCMAT2d_DataMapOfIntegerSequenceOfConnexion::Assign(OCNaroWrappers::OCMAT2d_DataMapOfIntegerSequenceOfConnexion^ Other)
{
  MAT2d_DataMapOfIntegerSequenceOfConnexion* tmp = new MAT2d_DataMapOfIntegerSequenceOfConnexion(0);
  *tmp = ((MAT2d_DataMapOfIntegerSequenceOfConnexion*)nativeHandle)->Assign(*((MAT2d_DataMapOfIntegerSequenceOfConnexion*)Other->Handle));
  return gcnew OCMAT2d_DataMapOfIntegerSequenceOfConnexion(tmp);
}

 void OCMAT2d_DataMapOfIntegerSequenceOfConnexion::ReSize(Standard_Integer NbBuckets)
{
  ((MAT2d_DataMapOfIntegerSequenceOfConnexion*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMAT2d_DataMapOfIntegerSequenceOfConnexion::Bind(Standard_Integer K, OCNaroWrappers::OCMAT2d_SequenceOfConnexion^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_DataMapOfIntegerSequenceOfConnexion*)nativeHandle)->Bind(K, *((MAT2d_SequenceOfConnexion*)I->Handle)));
}

 System::Boolean OCMAT2d_DataMapOfIntegerSequenceOfConnexion::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_DataMapOfIntegerSequenceOfConnexion*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMAT2d_DataMapOfIntegerSequenceOfConnexion::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_DataMapOfIntegerSequenceOfConnexion*)nativeHandle)->UnBind(K));
}

OCMAT2d_SequenceOfConnexion^ OCMAT2d_DataMapOfIntegerSequenceOfConnexion::Find(Standard_Integer K)
{
  MAT2d_SequenceOfConnexion* tmp = new MAT2d_SequenceOfConnexion();
  *tmp = ((MAT2d_DataMapOfIntegerSequenceOfConnexion*)nativeHandle)->Find(K);
  return gcnew OCMAT2d_SequenceOfConnexion(tmp);
}

OCMAT2d_SequenceOfConnexion^ OCMAT2d_DataMapOfIntegerSequenceOfConnexion::ChangeFind(Standard_Integer K)
{
  MAT2d_SequenceOfConnexion* tmp = new MAT2d_SequenceOfConnexion();
  *tmp = ((MAT2d_DataMapOfIntegerSequenceOfConnexion*)nativeHandle)->ChangeFind(K);
  return gcnew OCMAT2d_SequenceOfConnexion(tmp);
}

 Standard_Address OCMAT2d_DataMapOfIntegerSequenceOfConnexion::Find1(Standard_Integer K)
{
  return ((MAT2d_DataMapOfIntegerSequenceOfConnexion*)nativeHandle)->Find1(K);
}

 Standard_Address OCMAT2d_DataMapOfIntegerSequenceOfConnexion::ChangeFind1(Standard_Integer K)
{
  return ((MAT2d_DataMapOfIntegerSequenceOfConnexion*)nativeHandle)->ChangeFind1(K);
}


