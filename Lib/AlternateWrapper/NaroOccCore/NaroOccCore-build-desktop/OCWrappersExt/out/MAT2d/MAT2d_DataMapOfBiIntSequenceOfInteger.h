// File generated by CPPExt (MPV)
//
#ifndef _MAT2d_DataMapOfBiIntSequenceOfInteger_OCWrappers_HeaderFile
#define _MAT2d_DataMapOfBiIntSequenceOfInteger_OCWrappers_HeaderFile

// include native header
#include <MAT2d_DataMapOfBiIntSequenceOfInteger.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCMAT2d_BiInt;
ref class OCTColStd_SequenceOfInteger;
ref class OCMAT2d_MapBiIntHasher;
ref class OCMAT2d_DataMapNodeOfDataMapOfBiIntSequenceOfInteger;
ref class OCMAT2d_DataMapIteratorOfDataMapOfBiIntSequenceOfInteger;



public ref class OCMAT2d_DataMapOfBiIntSequenceOfInteger  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCMAT2d_DataMapOfBiIntSequenceOfInteger(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCMAT2d_DataMapOfBiIntSequenceOfInteger(MAT2d_DataMapOfBiIntSequenceOfInteger* nativeHandle);

// Methods PUBLIC


OCMAT2d_DataMapOfBiIntSequenceOfInteger(Standard_Integer NbBuckets);


 /*instead*/  OCMAT2d_DataMapOfBiIntSequenceOfInteger^ Assign(OCNaroWrappers::OCMAT2d_DataMapOfBiIntSequenceOfInteger^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(OCNaroWrappers::OCMAT2d_BiInt^ K, OCNaroWrappers::OCTColStd_SequenceOfInteger^ I) ;


 /*instead*/  System::Boolean IsBound(OCNaroWrappers::OCMAT2d_BiInt^ K) ;


 /*instead*/  System::Boolean UnBind(OCNaroWrappers::OCMAT2d_BiInt^ K) ;


 /*instead*/  OCTColStd_SequenceOfInteger^ Find(OCNaroWrappers::OCMAT2d_BiInt^ K) ;


 /*instead*/  OCTColStd_SequenceOfInteger^ ChangeFind(OCNaroWrappers::OCMAT2d_BiInt^ K) ;


 /*instead*/  Standard_Address Find1(OCNaroWrappers::OCMAT2d_BiInt^ K) ;


 /*instead*/  Standard_Address ChangeFind1(OCNaroWrappers::OCMAT2d_BiInt^ K) ;

~OCMAT2d_DataMapOfBiIntSequenceOfInteger()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
