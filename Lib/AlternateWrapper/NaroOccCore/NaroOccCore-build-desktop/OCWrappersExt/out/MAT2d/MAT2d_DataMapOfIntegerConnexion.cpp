// File generated by CPPExt (CPP file)
//

#include "MAT2d_DataMapOfIntegerConnexion.h"
#include "../Converter.h"
#include "MAT2d_Connexion.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MAT2d_DataMapNodeOfDataMapOfIntegerConnexion.h"
#include "MAT2d_DataMapIteratorOfDataMapOfIntegerConnexion.h"


using namespace OCNaroWrappers;

OCMAT2d_DataMapOfIntegerConnexion::OCMAT2d_DataMapOfIntegerConnexion(MAT2d_DataMapOfIntegerConnexion* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMAT2d_DataMapOfIntegerConnexion::OCMAT2d_DataMapOfIntegerConnexion(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MAT2d_DataMapOfIntegerConnexion(NbBuckets);
}

OCMAT2d_DataMapOfIntegerConnexion^ OCMAT2d_DataMapOfIntegerConnexion::Assign(OCNaroWrappers::OCMAT2d_DataMapOfIntegerConnexion^ Other)
{
  MAT2d_DataMapOfIntegerConnexion* tmp = new MAT2d_DataMapOfIntegerConnexion(0);
  *tmp = ((MAT2d_DataMapOfIntegerConnexion*)nativeHandle)->Assign(*((MAT2d_DataMapOfIntegerConnexion*)Other->Handle));
  return gcnew OCMAT2d_DataMapOfIntegerConnexion(tmp);
}

 void OCMAT2d_DataMapOfIntegerConnexion::ReSize(Standard_Integer NbBuckets)
{
  ((MAT2d_DataMapOfIntegerConnexion*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMAT2d_DataMapOfIntegerConnexion::Bind(Standard_Integer K, OCNaroWrappers::OCMAT2d_Connexion^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_DataMapOfIntegerConnexion*)nativeHandle)->Bind(K, *((Handle_MAT2d_Connexion*)I->Handle)));
}

 System::Boolean OCMAT2d_DataMapOfIntegerConnexion::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_DataMapOfIntegerConnexion*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMAT2d_DataMapOfIntegerConnexion::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MAT2d_DataMapOfIntegerConnexion*)nativeHandle)->UnBind(K));
}

OCMAT2d_Connexion^ OCMAT2d_DataMapOfIntegerConnexion::Find(Standard_Integer K)
{
  Handle(MAT2d_Connexion) tmp = ((MAT2d_DataMapOfIntegerConnexion*)nativeHandle)->Find(K);
  return gcnew OCMAT2d_Connexion(&tmp);
}

OCMAT2d_Connexion^ OCMAT2d_DataMapOfIntegerConnexion::ChangeFind(Standard_Integer K)
{
  Handle(MAT2d_Connexion) tmp = ((MAT2d_DataMapOfIntegerConnexion*)nativeHandle)->ChangeFind(K);
  return gcnew OCMAT2d_Connexion(&tmp);
}

 Standard_Address OCMAT2d_DataMapOfIntegerConnexion::Find1(Standard_Integer K)
{
  return ((MAT2d_DataMapOfIntegerConnexion*)nativeHandle)->Find1(K);
}

 Standard_Address OCMAT2d_DataMapOfIntegerConnexion::ChangeFind1(Standard_Integer K)
{
  return ((MAT2d_DataMapOfIntegerConnexion*)nativeHandle)->ChangeFind1(K);
}


