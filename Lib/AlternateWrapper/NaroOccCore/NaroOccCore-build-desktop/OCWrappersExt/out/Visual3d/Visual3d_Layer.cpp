// File generated by CPPExt (CPP file)
//

#include "Visual3d_Layer.h"
#include "../Converter.h"
#include "../Graphic3d/Graphic3d_GraphicDriver.h"
#include "Visual3d_ViewManager.h"
#include "../Quantity/Quantity_Color.h"
#include "Visual3d_LayerItem.h"


using namespace OCNaroWrappers;

OCVisual3d_Layer::OCVisual3d_Layer(Handle(Visual3d_Layer)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Visual3d_Layer(*nativeHandle);
}

OCVisual3d_Layer::OCVisual3d_Layer(OCNaroWrappers::OCVisual3d_ViewManager^ AViewer, OCAspect_TypeOfLayer AType, System::Boolean AFlag) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Visual3d_Layer(new Visual3d_Layer(*((Handle_Visual3d_ViewManager*)AViewer->Handle), (Aspect_TypeOfLayer)AType, OCConverter::BooleanToStandardBoolean(AFlag)));
}

 void OCVisual3d_Layer::Begin()
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->Begin();
}

 void OCVisual3d_Layer::End()
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->End();
}

 void OCVisual3d_Layer::Clear()
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->Clear();
}

 void OCVisual3d_Layer::BeginPolyline()
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->BeginPolyline();
}

 void OCVisual3d_Layer::BeginPolygon()
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->BeginPolygon();
}

 void OCVisual3d_Layer::AddVertex(Standard_Real X, Standard_Real Y, System::Boolean AFlag)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->AddVertex(X, Y, OCConverter::BooleanToStandardBoolean(AFlag));
}

 void OCVisual3d_Layer::ClosePrimitive()
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->ClosePrimitive();
}

 void OCVisual3d_Layer::DrawRectangle(Standard_Real X, Standard_Real Y, Standard_Real Width, Standard_Real Height)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->DrawRectangle(X, Y, Width, Height);
}

 void OCVisual3d_Layer::DrawText(System::String^ AText, Standard_Real X, Standard_Real Y, Standard_Real AHeight)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->DrawText(OCConverter::StringToStandardCString(AText), X, Y, AHeight);
}

 void OCVisual3d_Layer::TextSize(System::String^ AText, Standard_Real AHeight, Standard_Real& AWidth, Standard_Real& AnAscent, Standard_Real& ADescent)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->TextSize(OCConverter::StringToStandardCString(AText), AHeight, AWidth, AnAscent, ADescent);
}

 void OCVisual3d_Layer::SetColor(OCNaroWrappers::OCQuantity_Color^ AColor)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->SetColor(*((Quantity_Color*)AColor->Handle));
}

 void OCVisual3d_Layer::SetTransparency(Standard_ShortReal ATransparency)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->SetTransparency(ATransparency);
}

 void OCVisual3d_Layer::UnsetTransparency()
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->UnsetTransparency();
}

 void OCVisual3d_Layer::SetLineAttributes(OCAspect_TypeOfLine AType, Standard_Real AWidth)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->SetLineAttributes((Aspect_TypeOfLine)AType, AWidth);
}

 void OCVisual3d_Layer::SetTextAttributes(System::String^ AFont, OCAspect_TypeOfDisplayText AType, OCNaroWrappers::OCQuantity_Color^ AColor)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->SetTextAttributes(OCConverter::StringToStandardCString(AFont), (Aspect_TypeOfDisplayText)AType, *((Quantity_Color*)AColor->Handle));
}

 void OCVisual3d_Layer::SetOrtho(Standard_Real Left, Standard_Real Right, Standard_Real Bottom, Standard_Real Top, OCAspect_TypeOfConstraint Attach)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->SetOrtho(Left, Right, Bottom, Top, (Aspect_TypeOfConstraint)Attach);
}

 void OCVisual3d_Layer::SetViewport(Standard_Integer Width, Standard_Integer Height)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->SetViewport(Width, Height);
}

 Aspect_CLayer2d OCVisual3d_Layer::CLayer()
{
  return (*((Handle_Visual3d_Layer*)nativeHandle))->CLayer();
}

 OCAspect_TypeOfLayer OCVisual3d_Layer::Type()
{
  return (OCAspect_TypeOfLayer)((*((Handle_Visual3d_Layer*)nativeHandle))->Type());
}

 void OCVisual3d_Layer::AddLayerItem(OCNaroWrappers::OCVisual3d_LayerItem^ Item)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->AddLayerItem(*((Handle_Visual3d_LayerItem*)Item->Handle));
}

 void OCVisual3d_Layer::RemoveLayerItem(OCNaroWrappers::OCVisual3d_LayerItem^ Item)
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->RemoveLayerItem(*((Handle_Visual3d_LayerItem*)Item->Handle));
}

 void OCVisual3d_Layer::RemoveAllLayerItems()
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->RemoveAllLayerItems();
}

 Visual3d_NListOfLayerItem& OCVisual3d_Layer::GetLayerItemList()
{
  return (*((Handle_Visual3d_Layer*)nativeHandle))->GetLayerItemList();
}

 void OCVisual3d_Layer::RenderLayerItems()
{
  (*((Handle_Visual3d_Layer*)nativeHandle))->RenderLayerItems();
}


