// File generated by CPPExt (CPP file)
//

#include "Visual3d_HSetOfLight.h"
#include "../Converter.h"
#include "Visual3d_Light.h"
#include "Visual3d_SetOfLight.h"


using namespace OCNaroWrappers;

OCVisual3d_HSetOfLight::OCVisual3d_HSetOfLight(Handle(Visual3d_HSetOfLight)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Visual3d_HSetOfLight(*nativeHandle);
}

OCVisual3d_HSetOfLight::OCVisual3d_HSetOfLight() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Visual3d_HSetOfLight(new Visual3d_HSetOfLight());
}

 Standard_Integer OCVisual3d_HSetOfLight::Extent()
{
  return (*((Handle_Visual3d_HSetOfLight*)nativeHandle))->Extent();
}

 System::Boolean OCVisual3d_HSetOfLight::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfLight*)nativeHandle))->IsEmpty());
}

 void OCVisual3d_HSetOfLight::Clear()
{
  (*((Handle_Visual3d_HSetOfLight*)nativeHandle))->Clear();
}

 System::Boolean OCVisual3d_HSetOfLight::Add(OCNaroWrappers::OCVisual3d_Light^ T)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfLight*)nativeHandle))->Add(*((Handle_Visual3d_Light*)T->Handle)));
}

 System::Boolean OCVisual3d_HSetOfLight::Remove(OCNaroWrappers::OCVisual3d_Light^ T)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfLight*)nativeHandle))->Remove(*((Handle_Visual3d_Light*)T->Handle)));
}

OCVisual3d_HSetOfLight^ OCVisual3d_HSetOfLight::Union(OCNaroWrappers::OCVisual3d_HSetOfLight^ B)
{
  Handle(Visual3d_HSetOfLight) tmp = (*((Handle_Visual3d_HSetOfLight*)nativeHandle))->Union(*((Handle_Visual3d_HSetOfLight*)B->Handle));
  return gcnew OCVisual3d_HSetOfLight(&tmp);
}

OCVisual3d_HSetOfLight^ OCVisual3d_HSetOfLight::Intersection(OCNaroWrappers::OCVisual3d_HSetOfLight^ B)
{
  Handle(Visual3d_HSetOfLight) tmp = (*((Handle_Visual3d_HSetOfLight*)nativeHandle))->Intersection(*((Handle_Visual3d_HSetOfLight*)B->Handle));
  return gcnew OCVisual3d_HSetOfLight(&tmp);
}

OCVisual3d_HSetOfLight^ OCVisual3d_HSetOfLight::Difference(OCNaroWrappers::OCVisual3d_HSetOfLight^ B)
{
  Handle(Visual3d_HSetOfLight) tmp = (*((Handle_Visual3d_HSetOfLight*)nativeHandle))->Difference(*((Handle_Visual3d_HSetOfLight*)B->Handle));
  return gcnew OCVisual3d_HSetOfLight(&tmp);
}

 System::Boolean OCVisual3d_HSetOfLight::Contains(OCNaroWrappers::OCVisual3d_Light^ T)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfLight*)nativeHandle))->Contains(*((Handle_Visual3d_Light*)T->Handle)));
}

 System::Boolean OCVisual3d_HSetOfLight::IsASubset(OCNaroWrappers::OCVisual3d_HSetOfLight^ S)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfLight*)nativeHandle))->IsASubset(*((Handle_Visual3d_HSetOfLight*)S->Handle)));
}

 System::Boolean OCVisual3d_HSetOfLight::IsAProperSubset(OCNaroWrappers::OCVisual3d_HSetOfLight^ S)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfLight*)nativeHandle))->IsAProperSubset(*((Handle_Visual3d_HSetOfLight*)S->Handle)));
}

OCVisual3d_HSetOfLight^ OCVisual3d_HSetOfLight::ShallowCopy()
{
  Handle(Visual3d_HSetOfLight) tmp = (*((Handle_Visual3d_HSetOfLight*)nativeHandle))->ShallowCopy();
  return gcnew OCVisual3d_HSetOfLight(&tmp);
}

OCVisual3d_SetOfLight^ OCVisual3d_HSetOfLight::Set()
{
  Visual3d_SetOfLight* tmp = new Visual3d_SetOfLight();
  *tmp = (*((Handle_Visual3d_HSetOfLight*)nativeHandle))->Set();
  return gcnew OCVisual3d_SetOfLight(tmp);
}

OCVisual3d_SetOfLight^ OCVisual3d_HSetOfLight::ChangeSet()
{
  Visual3d_SetOfLight* tmp = new Visual3d_SetOfLight();
  *tmp = (*((Handle_Visual3d_HSetOfLight*)nativeHandle))->ChangeSet();
  return gcnew OCVisual3d_SetOfLight(tmp);
}


