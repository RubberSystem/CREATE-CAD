// File generated by CPPExt (Transient)
//
#ifndef _Visual3d_Light_OCWrappers_HeaderFile
#define _Visual3d_Light_OCWrappers_HeaderFile

// include the wrapped class
#include <Visual3d_Light.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "Visual3d_TypeOfLightSource.h"


namespace OCNaroWrappers
{

ref class OCVisual3d_View;
ref class OCQuantity_Color;
ref class OCGraphic3d_Vector;
ref class OCGraphic3d_Vertex;


//! This class defines and updates light sources. <br>
//!	    There is no limit to the number of light sources defined. <br>
//!	    Only the number of active sources is limited. <br>
public ref class OCVisual3d_Light : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCVisual3d_Light(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCVisual3d_Light(Handle(Visual3d_Light)* nativeHandle);

// Methods PUBLIC

//! Creates a light from default values. <br>
//!	    Light sources are created in a visualiser <br>
//!	    and are activated in one of its views. <br>
OCVisual3d_Light();

//! Creates an AMBIENT light source. <br>
//!	    Light sources are created in a visualiser <br>
//!	    and are activated in one of its views. <br>
OCVisual3d_Light(OCNaroWrappers::OCQuantity_Color^ Color);

//! Creates a DIRECTIONAL light source. <br>
//!	    Light sources are created in a visualiser <br>
//!	    and are activated in one of its views. <br>
//!  Warning: Raises LightDefinitionError if <Direction> is null. <br>
OCVisual3d_Light(OCNaroWrappers::OCQuantity_Color^ Color, OCNaroWrappers::OCGraphic3d_Vector^ Direction, System::Boolean Headlight);

//! Creates a POSITIONAL light source. <br>
//!	    Light sources are created in a visualiser <br>
//!	    and are activated in one of its views. <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if <Fact1> and <Fact2> are null. <br>
//!	    if <Fact1> is a negative value or greater than 1.0. <br>
//!	    if <Fact2> is a negative value or greater than 1.0. <br>
OCVisual3d_Light(OCNaroWrappers::OCQuantity_Color^ Color, OCNaroWrappers::OCGraphic3d_Vertex^ Position, Standard_Real Fact1, Standard_Real Fact2);

//! Creates a SPOT light source. <br>
//!	    Light sources are created in a visualiser <br>
//!	    and are activated in one of its views. <br>
//!	    <Concentration> specifies the intensity distribution of <br>
//!	    the light. <br>
//!	    <AngleCone> specifies the angle (radians) of the cone <br>
//!	    created by the spot. <br>
//! 	    the global attenuation is equal : <br>
//!	    1 / (Fact1 + Fact2 * (norm(ObjectPosition - LightPosition))) <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if <Direction> is null. <br>
//!	    if <Concentration> is a negative value or greater than 1.0. <br>
//!	    if <Fact1> and <Fact2> are null. <br>
//!	    if <Fact1> is a negative value or greater than 1.0. <br>
//!	    if <Fact2> is a negative value or greater than 1.0. <br>
//!	    if <AngleCone> is a negative value or greater than PI/2. <br>
OCVisual3d_Light(OCNaroWrappers::OCQuantity_Color^ Color, OCNaroWrappers::OCGraphic3d_Vertex^ Position, OCNaroWrappers::OCGraphic3d_Vector^ Direction, Standard_Real Concentration, Standard_Real Fact1, Standard_Real Fact2, Standard_Real AngleCone);

//! Modifies the angle (radians) of the cone created by the spot. <br>
//!	    Works only on TOLS_SPOT lights. <br>
//!  Category: Methods to modify the class definition <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_SPOT. <br>
//!	    if <AngleCone> is a negative value or greater than PI/2. <br>
 /*instead*/  void SetAngle(Standard_Real AngleCone) ;

//! Modifies the attenuation factor of the light. <br>
//!	    Works only on the TOLS_POSITIONAL and TOLS_SPOT lights. <br>
//!  Category: Methods to modify the class definition <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_SPOT or TOLS_POSITIONAL. <br>
//!	    if <Fact1> is a negative value or greater than 1.0. <br>
 /*instead*/  void SetAttenuation1(Standard_Real Fact1) ;

//! Modifies the attenuation factor of the light. <br>
//!	    Works only on the TOLS_POSITIONAL and TOLS_SPOT lights. <br>
//!  Category: Methods to modify the class definition <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_POSITIONAL or TOLS_SPOT. <br>
//!	    if <Fact2> is a negative value or greater than 1.0.. <br>
 /*instead*/  void SetAttenuation2(Standard_Real Fact2) ;

//! Modifies the colour of the light. <br>
 /*instead*/  void SetColor(OCNaroWrappers::OCQuantity_Color^ Color) ;

//! Modifies the intensity distribution of the light. <br>
//!	    Works only on the TOLS_SPOT lights. <br>
//!  Category: Methods to modify the class definition <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_SPOT. <br>
//!	    if <Concentration> is a negative value or greater than 1.0. <br>
 /*instead*/  void SetConcentration(Standard_Real Concentration) ;

//! Modifies the light direction. <br>
//!	    Works only on the TOLS_DIRECTIONAL and TOLS_SPOT lights. <br>
//!	    Default z <br>
//!  Category: Methods to modify the class definition <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_DIRECTIONAL <br>
//!	    or TOLS_SPOT. <br>
//!	    if <Direction> is null. <br>
 /*instead*/  void SetDirection(OCNaroWrappers::OCGraphic3d_Vector^ Direction) ;

//! Modifies the position of the light. <br>
//!	    Works only on the TOLS_POSITIONAL and TOLS_SPOT lights. <br>
//!  Category: Methods to modify the class definition <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_POSITIONAL or TOLS_SPOT. <br>
 /*instead*/  void SetPosition(OCNaroWrappers::OCGraphic3d_Vertex^ Position) ;

//!  Returns the headlight  state of the light <me> <br>
 /*instead*/  System::Boolean Headlight() ;

//! Returns the colour of the light <me>. <br>
 /*instead*/  OCQuantity_Color^ Color() ;

//! Returns the light type of <me>. <br>
 /*instead*/  OCVisual3d_TypeOfLightSource LightType() ;

//! Returns the definition of <me> if <me> is <br>
//!	    a light source of the TOLS_AMBIENT type. <br>
//!  Category: Inquire methods <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_AMBIENT. <br>
 /*instead*/  void Values(OCNaroWrappers::OCQuantity_Color^ Color) ;

//! Returns the definition of <me> if <me> is <br>
//!	    a light source of the TOLS_DIRECTIONAL type. <br>
//!  Category: Inquire methods <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_DIRECTIONAL. <br>
 /*instead*/  void Values(OCNaroWrappers::OCQuantity_Color^ Color, OCNaroWrappers::OCGraphic3d_Vector^ Direction) ;

//! Returns the definition of <me> if <me> is <br>
//!	    a light source of the TOLS_POSITIONAL type. <br>
//!  Category: Inquire methods <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_POSITIONAL. <br>
 /*instead*/  void Values(OCNaroWrappers::OCQuantity_Color^ Color, OCNaroWrappers::OCGraphic3d_Vertex^ Position, Standard_Real& Fact1, Standard_Real& Fact2) ;

//! Returns the definition of <me> if <me> is <br>
//!	    a light source of the TOLS_SPOT type. <br>
//!  Category: Inquire methods <br>
//!  Warning: Raises LightDefinitionError <br>
//!	    if the type of the light is not TOLS_SPOT. <br>
 /*instead*/  void Values(OCNaroWrappers::OCQuantity_Color^ Color, OCNaroWrappers::OCGraphic3d_Vertex^ Position, OCNaroWrappers::OCGraphic3d_Vector^ Direction, Standard_Real& Concentration, Standard_Real& Fact1, Standard_Real& Fact2, Standard_Real& AngleCone) ;

//! Maximum number of activatable light sources. <br>
static /*instead*/  Standard_Integer Limit() ;

~OCVisual3d_Light()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
