// File generated by CPPExt (CPP file)
//

#include "Visual3d_HSetOfClipPlane.h"
#include "../Converter.h"
#include "Visual3d_ClipPlane.h"
#include "Visual3d_SetOfClipPlane.h"


using namespace OCNaroWrappers;

OCVisual3d_HSetOfClipPlane::OCVisual3d_HSetOfClipPlane(Handle(Visual3d_HSetOfClipPlane)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Visual3d_HSetOfClipPlane(*nativeHandle);
}

OCVisual3d_HSetOfClipPlane::OCVisual3d_HSetOfClipPlane() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Visual3d_HSetOfClipPlane(new Visual3d_HSetOfClipPlane());
}

 Standard_Integer OCVisual3d_HSetOfClipPlane::Extent()
{
  return (*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->Extent();
}

 System::Boolean OCVisual3d_HSetOfClipPlane::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->IsEmpty());
}

 void OCVisual3d_HSetOfClipPlane::Clear()
{
  (*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->Clear();
}

 System::Boolean OCVisual3d_HSetOfClipPlane::Add(OCNaroWrappers::OCVisual3d_ClipPlane^ T)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->Add(*((Handle_Visual3d_ClipPlane*)T->Handle)));
}

 System::Boolean OCVisual3d_HSetOfClipPlane::Remove(OCNaroWrappers::OCVisual3d_ClipPlane^ T)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->Remove(*((Handle_Visual3d_ClipPlane*)T->Handle)));
}

OCVisual3d_HSetOfClipPlane^ OCVisual3d_HSetOfClipPlane::Union(OCNaroWrappers::OCVisual3d_HSetOfClipPlane^ B)
{
  Handle(Visual3d_HSetOfClipPlane) tmp = (*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->Union(*((Handle_Visual3d_HSetOfClipPlane*)B->Handle));
  return gcnew OCVisual3d_HSetOfClipPlane(&tmp);
}

OCVisual3d_HSetOfClipPlane^ OCVisual3d_HSetOfClipPlane::Intersection(OCNaroWrappers::OCVisual3d_HSetOfClipPlane^ B)
{
  Handle(Visual3d_HSetOfClipPlane) tmp = (*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->Intersection(*((Handle_Visual3d_HSetOfClipPlane*)B->Handle));
  return gcnew OCVisual3d_HSetOfClipPlane(&tmp);
}

OCVisual3d_HSetOfClipPlane^ OCVisual3d_HSetOfClipPlane::Difference(OCNaroWrappers::OCVisual3d_HSetOfClipPlane^ B)
{
  Handle(Visual3d_HSetOfClipPlane) tmp = (*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->Difference(*((Handle_Visual3d_HSetOfClipPlane*)B->Handle));
  return gcnew OCVisual3d_HSetOfClipPlane(&tmp);
}

 System::Boolean OCVisual3d_HSetOfClipPlane::Contains(OCNaroWrappers::OCVisual3d_ClipPlane^ T)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->Contains(*((Handle_Visual3d_ClipPlane*)T->Handle)));
}

 System::Boolean OCVisual3d_HSetOfClipPlane::IsASubset(OCNaroWrappers::OCVisual3d_HSetOfClipPlane^ S)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->IsASubset(*((Handle_Visual3d_HSetOfClipPlane*)S->Handle)));
}

 System::Boolean OCVisual3d_HSetOfClipPlane::IsAProperSubset(OCNaroWrappers::OCVisual3d_HSetOfClipPlane^ S)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->IsAProperSubset(*((Handle_Visual3d_HSetOfClipPlane*)S->Handle)));
}

OCVisual3d_HSetOfClipPlane^ OCVisual3d_HSetOfClipPlane::ShallowCopy()
{
  Handle(Visual3d_HSetOfClipPlane) tmp = (*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->ShallowCopy();
  return gcnew OCVisual3d_HSetOfClipPlane(&tmp);
}

OCVisual3d_SetOfClipPlane^ OCVisual3d_HSetOfClipPlane::Set()
{
  Visual3d_SetOfClipPlane* tmp = new Visual3d_SetOfClipPlane();
  *tmp = (*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->Set();
  return gcnew OCVisual3d_SetOfClipPlane(tmp);
}

OCVisual3d_SetOfClipPlane^ OCVisual3d_HSetOfClipPlane::ChangeSet()
{
  Visual3d_SetOfClipPlane* tmp = new Visual3d_SetOfClipPlane();
  *tmp = (*((Handle_Visual3d_HSetOfClipPlane*)nativeHandle))->ChangeSet();
  return gcnew OCVisual3d_SetOfClipPlane(tmp);
}


