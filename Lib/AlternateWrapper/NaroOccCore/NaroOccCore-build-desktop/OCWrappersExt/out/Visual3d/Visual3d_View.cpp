// File generated by CPPExt (CPP file)
//

#include "Visual3d_View.h"
#include "../Converter.h"
#include "../Aspect/Aspect_Window.h"
#include "../Graphic3d/Graphic3d_GraphicDriver.h"
#include "Visual3d_ViewManager.h"
#include "Visual3d_ViewOrientation.h"
#include "Visual3d_ViewMapping.h"
#include "Visual3d_ContextView.h"
#include "Visual3d_Layer.h"
#include "../Aspect/Aspect_Background.h"
#include "../Aspect/Aspect_GradientBackground.h"
#include "../TColStd/TColStd_Array2OfReal.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "../Quantity/Quantity_Color.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../Graphic3d/Graphic3d_MapOfStructure.h"
#include "../Graphic3d/Graphic3d_Structure.h"
#include "../Aspect/Aspect_GraphicDriver.h"
#include "../Graphic3d/Graphic3d_Plotter.h"


using namespace OCNaroWrappers;

OCVisual3d_View::OCVisual3d_View(Handle(Visual3d_View)* nativeHandle) : OCGraphic3d_DataStructureManager((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Visual3d_View(*nativeHandle);
}

OCVisual3d_View::OCVisual3d_View(OCNaroWrappers::OCVisual3d_ViewManager^ AManager) : OCGraphic3d_DataStructureManager((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Visual3d_View(new Visual3d_View(*((Handle_Visual3d_ViewManager*)AManager->Handle)));
}

OCVisual3d_View::OCVisual3d_View(OCNaroWrappers::OCVisual3d_ViewManager^ AManager, OCNaroWrappers::OCVisual3d_ViewOrientation^ VO, OCNaroWrappers::OCVisual3d_ViewMapping^ VM, OCNaroWrappers::OCVisual3d_ContextView^ CTX) : OCGraphic3d_DataStructureManager((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Visual3d_View(new Visual3d_View(*((Handle_Visual3d_ViewManager*)AManager->Handle), *((Visual3d_ViewOrientation*)VO->Handle), *((Visual3d_ViewMapping*)VM->Handle), *((Visual3d_ContextView*)CTX->Handle)));
}

 void OCVisual3d_View::Activate()
{
  (*((Handle_Visual3d_View*)nativeHandle))->Activate();
}

 void OCVisual3d_View::Deactivate()
{
  (*((Handle_Visual3d_View*)nativeHandle))->Deactivate();
}

 void OCVisual3d_View::Redraw()
{
  (*((Handle_Visual3d_View*)nativeHandle))->Redraw();
}

 void OCVisual3d_View::Redraw(Standard_Integer x, Standard_Integer y, Standard_Integer width, Standard_Integer height)
{
  (*((Handle_Visual3d_View*)nativeHandle))->Redraw(x, y, width, height);
}

 void OCVisual3d_View::Redraw(OCNaroWrappers::OCVisual3d_Layer^ AnUnderLayer, OCNaroWrappers::OCVisual3d_Layer^ AnOverLayer)
{
  (*((Handle_Visual3d_View*)nativeHandle))->Redraw(*((Handle_Visual3d_Layer*)AnUnderLayer->Handle), *((Handle_Visual3d_Layer*)AnOverLayer->Handle));
}

 void OCVisual3d_View::Redraw(OCNaroWrappers::OCVisual3d_Layer^ AnUnderLayer, OCNaroWrappers::OCVisual3d_Layer^ AnOverLayer, Standard_Integer x, Standard_Integer y, Standard_Integer width, Standard_Integer height)
{
  (*((Handle_Visual3d_View*)nativeHandle))->Redraw(*((Handle_Visual3d_Layer*)AnUnderLayer->Handle), *((Handle_Visual3d_Layer*)AnOverLayer->Handle), x, y, width, height);
}

 void OCVisual3d_View::Remove()
{
  (*((Handle_Visual3d_View*)nativeHandle))->Remove();
}

 void OCVisual3d_View::Resized()
{
  (*((Handle_Visual3d_View*)nativeHandle))->Resized();
}

 void OCVisual3d_View::SetBackground(OCNaroWrappers::OCAspect_Background^ ABack)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetBackground(*((Aspect_Background*)ABack->Handle));
}

 void OCVisual3d_View::SetBackgroundImage(System::String^ FileName, OCAspect_FillMethod FillStyle, System::Boolean update)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetBackgroundImage(OCConverter::StringToStandardCString(FileName), (Aspect_FillMethod)FillStyle, OCConverter::BooleanToStandardBoolean(update));
}

 void OCVisual3d_View::SetBgImageStyle(OCAspect_FillMethod FillStyle, System::Boolean update)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetBgImageStyle((Aspect_FillMethod)FillStyle, OCConverter::BooleanToStandardBoolean(update));
}

 void OCVisual3d_View::SetGradientBackground(OCNaroWrappers::OCAspect_GradientBackground^ ABack, System::Boolean update)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetGradientBackground(*((Aspect_GradientBackground*)ABack->Handle), OCConverter::BooleanToStandardBoolean(update));
}

 void OCVisual3d_View::SetBgGradientStyle(OCAspect_GradientFillMethod FillStyle, System::Boolean update)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetBgGradientStyle((Aspect_GradientFillMethod)FillStyle, OCConverter::BooleanToStandardBoolean(update));
}

 void OCVisual3d_View::SetBackFacingModel(OCVisual3d_TypeOfBackfacingModel aModel)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetBackFacingModel((Visual3d_TypeOfBackfacingModel)aModel);
}

 OCVisual3d_TypeOfBackfacingModel OCVisual3d_View::BackFacingModel()
{
  return (OCVisual3d_TypeOfBackfacingModel)((*((Handle_Visual3d_View*)nativeHandle))->BackFacingModel());
}

 void OCVisual3d_View::SetContext(OCNaroWrappers::OCVisual3d_ContextView^ CTX)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetContext(*((Visual3d_ContextView*)CTX->Handle));
}

 void OCVisual3d_View::SetTransform(OCNaroWrappers::OCTColStd_Array2OfReal^ AMatrix)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetTransform(*((TColStd_Array2OfReal*)AMatrix->Handle));
}

 void OCVisual3d_View::SetViewMapping(OCNaroWrappers::OCVisual3d_ViewMapping^ VM)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetViewMapping(*((Visual3d_ViewMapping*)VM->Handle));
}

 void OCVisual3d_View::SetViewMappingDefault()
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetViewMappingDefault();
}

 void OCVisual3d_View::SetViewOrientation(OCNaroWrappers::OCVisual3d_ViewOrientation^ VO)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetViewOrientation(*((Visual3d_ViewOrientation*)VO->Handle));
}

 void OCVisual3d_View::SetViewOrientationDefault()
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetViewOrientationDefault();
}

 void OCVisual3d_View::SetWindow(OCNaroWrappers::OCAspect_Window^ AWindow)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetWindow(*((Handle_Aspect_Window*)AWindow->Handle));
}

 void OCVisual3d_View::SetWindow(OCNaroWrappers::OCAspect_Window^ AWindow, Aspect_RenderingContext AContext, Aspect_GraphicCallbackProc ADisplayCB, Standard_Address AClientData)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetWindow(*((Handle_Aspect_Window*)AWindow->Handle), AContext, ADisplayCB, AClientData);
}

 void OCVisual3d_View::Update()
{
  (*((Handle_Visual3d_View*)nativeHandle))->Update();
}

 void OCVisual3d_View::Update(OCNaroWrappers::OCVisual3d_Layer^ AnUnderLayer, OCNaroWrappers::OCVisual3d_Layer^ AnOverLayer)
{
  (*((Handle_Visual3d_View*)nativeHandle))->Update(*((Handle_Visual3d_Layer*)AnUnderLayer->Handle), *((Handle_Visual3d_Layer*)AnOverLayer->Handle));
}

 void OCVisual3d_View::ViewMappingReset()
{
  (*((Handle_Visual3d_View*)nativeHandle))->ViewMappingReset();
}

 void OCVisual3d_View::ViewOrientationReset()
{
  (*((Handle_Visual3d_View*)nativeHandle))->ViewOrientationReset();
}

 void OCVisual3d_View::SetAnimationModeOn(System::Boolean degenerate)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetAnimationModeOn(OCConverter::BooleanToStandardBoolean(degenerate));
}

 void OCVisual3d_View::SetAnimationModeOff()
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetAnimationModeOff();
}

 System::Boolean OCVisual3d_View::AnimationModeIsOn()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->AnimationModeIsOn());
}

 System::Boolean OCVisual3d_View::DegenerateModeIsOn()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->DegenerateModeIsOn());
}

 void OCVisual3d_View::SetComputedMode(System::Boolean aMode)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetComputedMode(OCConverter::BooleanToStandardBoolean(aMode));
}

 System::Boolean OCVisual3d_View::ComputedMode()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->ComputedMode());
}

 void OCVisual3d_View::ZBufferTriedronSetup(OCQuantity_NameOfColor XColor, OCQuantity_NameOfColor YColor, OCQuantity_NameOfColor ZColor, Standard_Real SizeRatio, Standard_Real AxisDiametr, Standard_Integer NbFacettes)
{
  (*((Handle_Visual3d_View*)nativeHandle))->ZBufferTriedronSetup((Quantity_NameOfColor)XColor, (Quantity_NameOfColor)YColor, (Quantity_NameOfColor)ZColor, SizeRatio, AxisDiametr, NbFacettes);
}

 void OCVisual3d_View::TriedronDisplay(OCAspect_TypeOfTriedronPosition APosition, OCQuantity_NameOfColor AColor, Standard_Real AScale, System::Boolean AsWireframe)
{
  (*((Handle_Visual3d_View*)nativeHandle))->TriedronDisplay((Aspect_TypeOfTriedronPosition)APosition, (Quantity_NameOfColor)AColor, AScale, OCConverter::BooleanToStandardBoolean(AsWireframe));
}

 void OCVisual3d_View::TriedronErase()
{
  (*((Handle_Visual3d_View*)nativeHandle))->TriedronErase();
}

 void OCVisual3d_View::TriedronEcho(OCAspect_TypeOfTriedronEcho AType)
{
  (*((Handle_Visual3d_View*)nativeHandle))->TriedronEcho((Aspect_TypeOfTriedronEcho)AType);
}

 System::Boolean OCVisual3d_View::GetGraduatedTrihedron(OCNaroWrappers::OCTCollection_ExtendedString^ xname, OCNaroWrappers::OCTCollection_ExtendedString^ yname, OCNaroWrappers::OCTCollection_ExtendedString^ zname, System::Boolean& xdrawname, System::Boolean& ydrawname, System::Boolean& zdrawname, System::Boolean& xdrawvalues, System::Boolean& ydrawvalues, System::Boolean& zdrawvalues, System::Boolean& drawgrid, System::Boolean& drawaxes, Standard_Integer& nbx, Standard_Integer& nby, Standard_Integer& nbz, Standard_Integer& xoffset, Standard_Integer& yoffset, Standard_Integer& zoffset, Standard_Integer& xaxisoffset, Standard_Integer& yaxisoffset, Standard_Integer& zaxisoffset, System::Boolean& xdrawtickmarks, System::Boolean& ydrawtickmarks, System::Boolean& zdrawtickmarks, Standard_Integer& xtickmarklength, Standard_Integer& ytickmarklength, Standard_Integer& ztickmarklength, OCNaroWrappers::OCQuantity_Color^ gridcolor, OCNaroWrappers::OCQuantity_Color^ xnamecolor, OCNaroWrappers::OCQuantity_Color^ ynamecolor, OCNaroWrappers::OCQuantity_Color^ znamecolor, OCNaroWrappers::OCQuantity_Color^ xcolor, OCNaroWrappers::OCQuantity_Color^ ycolor, OCNaroWrappers::OCQuantity_Color^ zcolor, OCNaroWrappers::OCTCollection_AsciiString^ fontOfNames, OCFont_FontAspect& styleOfNames, Standard_Integer& sizeOfNames, OCNaroWrappers::OCTCollection_AsciiString^ fontOfValues, OCFont_FontAspect& styleOfValues, Standard_Integer& sizeOfValues)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->GetGraduatedTrihedron(*((TCollection_ExtendedString*)xname->Handle), *((TCollection_ExtendedString*)yname->Handle), *((TCollection_ExtendedString*)zname->Handle), (Standard_Boolean&)(xdrawname), (Standard_Boolean&)(ydrawname), (Standard_Boolean&)(zdrawname), (Standard_Boolean&)(xdrawvalues), (Standard_Boolean&)(ydrawvalues), (Standard_Boolean&)(zdrawvalues), (Standard_Boolean&)(drawgrid), (Standard_Boolean&)(drawaxes), nbx, nby, nbz, xoffset, yoffset, zoffset, xaxisoffset, yaxisoffset, zaxisoffset, (Standard_Boolean&)(xdrawtickmarks), (Standard_Boolean&)(ydrawtickmarks), (Standard_Boolean&)(zdrawtickmarks), xtickmarklength, ytickmarklength, ztickmarklength, *((Quantity_Color*)gridcolor->Handle), *((Quantity_Color*)xnamecolor->Handle), *((Quantity_Color*)ynamecolor->Handle), *((Quantity_Color*)znamecolor->Handle), *((Quantity_Color*)xcolor->Handle), *((Quantity_Color*)ycolor->Handle), *((Quantity_Color*)zcolor->Handle), *((TCollection_AsciiString*)fontOfNames->Handle), (Font_FontAspect&)styleOfNames, sizeOfNames, *((TCollection_AsciiString*)fontOfValues->Handle), (Font_FontAspect&)styleOfValues, sizeOfValues));
}

 void OCVisual3d_View::GraduatedTrihedronDisplay(OCNaroWrappers::OCTCollection_ExtendedString^ xname, OCNaroWrappers::OCTCollection_ExtendedString^ yname, OCNaroWrappers::OCTCollection_ExtendedString^ zname, System::Boolean xdrawname, System::Boolean ydrawname, System::Boolean zdrawname, System::Boolean xdrawvalues, System::Boolean ydrawvalues, System::Boolean zdrawvalues, System::Boolean drawgrid, System::Boolean drawaxes, Standard_Integer nbx, Standard_Integer nby, Standard_Integer nbz, Standard_Integer xoffset, Standard_Integer yoffset, Standard_Integer zoffset, Standard_Integer xaxisoffset, Standard_Integer yaxisoffset, Standard_Integer zaxisoffset, System::Boolean xdrawtickmarks, System::Boolean ydrawtickmarks, System::Boolean zdrawtickmarks, Standard_Integer xtickmarklength, Standard_Integer ytickmarklength, Standard_Integer ztickmarklength, OCNaroWrappers::OCQuantity_Color^ gridcolor, OCNaroWrappers::OCQuantity_Color^ xnamecolor, OCNaroWrappers::OCQuantity_Color^ ynamecolor, OCNaroWrappers::OCQuantity_Color^ znamecolor, OCNaroWrappers::OCQuantity_Color^ xcolor, OCNaroWrappers::OCQuantity_Color^ ycolor, OCNaroWrappers::OCQuantity_Color^ zcolor, OCNaroWrappers::OCTCollection_AsciiString^ fontOfNames, OCFont_FontAspect styleOfNames, Standard_Integer sizeOfNames, OCNaroWrappers::OCTCollection_AsciiString^ fontOfValues, OCFont_FontAspect styleOfValues, Standard_Integer sizeOfValues)
{
  (*((Handle_Visual3d_View*)nativeHandle))->GraduatedTrihedronDisplay(*((TCollection_ExtendedString*)xname->Handle), *((TCollection_ExtendedString*)yname->Handle), *((TCollection_ExtendedString*)zname->Handle), OCConverter::BooleanToStandardBoolean(xdrawname), OCConverter::BooleanToStandardBoolean(ydrawname), OCConverter::BooleanToStandardBoolean(zdrawname), OCConverter::BooleanToStandardBoolean(xdrawvalues), OCConverter::BooleanToStandardBoolean(ydrawvalues), OCConverter::BooleanToStandardBoolean(zdrawvalues), OCConverter::BooleanToStandardBoolean(drawgrid), OCConverter::BooleanToStandardBoolean(drawaxes), nbx, nby, nbz, xoffset, yoffset, zoffset, xaxisoffset, yaxisoffset, zaxisoffset, OCConverter::BooleanToStandardBoolean(xdrawtickmarks), OCConverter::BooleanToStandardBoolean(ydrawtickmarks), OCConverter::BooleanToStandardBoolean(zdrawtickmarks), xtickmarklength, ytickmarklength, ztickmarklength, *((Quantity_Color*)gridcolor->Handle), *((Quantity_Color*)xnamecolor->Handle), *((Quantity_Color*)ynamecolor->Handle), *((Quantity_Color*)znamecolor->Handle), *((Quantity_Color*)xcolor->Handle), *((Quantity_Color*)ycolor->Handle), *((Quantity_Color*)zcolor->Handle), *((TCollection_AsciiString*)fontOfNames->Handle), (Font_FontAspect)styleOfNames, sizeOfNames, *((TCollection_AsciiString*)fontOfValues->Handle), (Font_FontAspect)styleOfValues, sizeOfValues);
}

 void OCVisual3d_View::GraduatedTrihedronErase()
{
  (*((Handle_Visual3d_View*)nativeHandle))->GraduatedTrihedronErase();
}

OCAspect_Background^ OCVisual3d_View::Background()
{
  Aspect_Background* tmp = new Aspect_Background();
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->Background();
  return gcnew OCAspect_Background(tmp);
}

OCAspect_GradientBackground^ OCVisual3d_View::GradientBackground()
{
  Aspect_GradientBackground* tmp = new Aspect_GradientBackground();
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->GradientBackground();
  return gcnew OCAspect_GradientBackground(tmp);
}

 System::Boolean OCVisual3d_View::ContainsFacet()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->ContainsFacet());
}

 System::Boolean OCVisual3d_View::ContainsFacet(OCNaroWrappers::OCGraphic3d_MapOfStructure^ ASet)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->ContainsFacet(*((Graphic3d_MapOfStructure*)ASet->Handle)));
}

OCVisual3d_ContextView^ OCVisual3d_View::Context()
{
  Visual3d_ContextView* tmp = new Visual3d_ContextView();
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->Context();
  return gcnew OCVisual3d_ContextView(tmp);
}

 void OCVisual3d_View::DisplayedStructures(OCNaroWrappers::OCGraphic3d_MapOfStructure^ SG)
{
  (*((Handle_Visual3d_View*)nativeHandle))->DisplayedStructures(*((Graphic3d_MapOfStructure*)SG->Handle));
}

 System::Boolean OCVisual3d_View::IsActive()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->IsActive());
}

 System::Boolean OCVisual3d_View::IsDefined()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->IsDefined());
}

 System::Boolean OCVisual3d_View::IsDeleted()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->IsDeleted());
}

 void OCVisual3d_View::MinMaxValues(Standard_Real& XMin, Standard_Real& YMin, Standard_Real& ZMin, Standard_Real& XMax, Standard_Real& YMax, Standard_Real& ZMax)
{
  (*((Handle_Visual3d_View*)nativeHandle))->MinMaxValues(XMin, YMin, ZMin, XMax, YMax, ZMax);
}

 void OCVisual3d_View::MinMaxValues(OCNaroWrappers::OCGraphic3d_MapOfStructure^ ASet, Standard_Real& XMin, Standard_Real& YMin, Standard_Real& ZMin, Standard_Real& XMax, Standard_Real& YMax, Standard_Real& ZMax)
{
  (*((Handle_Visual3d_View*)nativeHandle))->MinMaxValues(*((Graphic3d_MapOfStructure*)ASet->Handle), XMin, YMin, ZMin, XMax, YMax, ZMax);
}

 void OCVisual3d_View::MinMaxValues(Standard_Real& XMin, Standard_Real& YMin, Standard_Real& XMax, Standard_Real& YMax)
{
  (*((Handle_Visual3d_View*)nativeHandle))->MinMaxValues(XMin, YMin, XMax, YMax);
}

 void OCVisual3d_View::MinMaxValues(OCNaroWrappers::OCGraphic3d_MapOfStructure^ ASet, Standard_Real& XMin, Standard_Real& YMin, Standard_Real& XMax, Standard_Real& YMax)
{
  (*((Handle_Visual3d_View*)nativeHandle))->MinMaxValues(*((Graphic3d_MapOfStructure*)ASet->Handle), XMin, YMin, XMax, YMax);
}

 Standard_Integer OCVisual3d_View::NumberOfDisplayedStructures()
{
  return (*((Handle_Visual3d_View*)nativeHandle))->NumberOfDisplayedStructures();
}

 void OCVisual3d_View::Projects(Standard_Real AX, Standard_Real AY, Standard_Real AZ, Standard_Real& APX, Standard_Real& APY, Standard_Real& APZ)
{
  (*((Handle_Visual3d_View*)nativeHandle))->Projects(AX, AY, AZ, APX, APY, APZ);
}

OCTColStd_Array2OfReal^ OCVisual3d_View::Transform()
{
  TColStd_Array2OfReal* tmp = new TColStd_Array2OfReal(0, 0, 0, 0);
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->Transform();
  return gcnew OCTColStd_Array2OfReal(tmp);
}

OCVisual3d_ViewMapping^ OCVisual3d_View::ViewMapping()
{
  Visual3d_ViewMapping* tmp = new Visual3d_ViewMapping();
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->ViewMapping();
  return gcnew OCVisual3d_ViewMapping(tmp);
}

OCVisual3d_ViewMapping^ OCVisual3d_View::ViewMappingDefault()
{
  Visual3d_ViewMapping* tmp = new Visual3d_ViewMapping();
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->ViewMappingDefault();
  return gcnew OCVisual3d_ViewMapping(tmp);
}

OCVisual3d_ViewOrientation^ OCVisual3d_View::ViewOrientation()
{
  Visual3d_ViewOrientation* tmp = new Visual3d_ViewOrientation();
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->ViewOrientation();
  return gcnew OCVisual3d_ViewOrientation(tmp);
}

OCVisual3d_ViewOrientation^ OCVisual3d_View::ViewOrientationDefault()
{
  Visual3d_ViewOrientation* tmp = new Visual3d_ViewOrientation();
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->ViewOrientationDefault();
  return gcnew OCVisual3d_ViewOrientation(tmp);
}

OCAspect_Window^ OCVisual3d_View::Window()
{
  Handle(Aspect_Window) tmp = (*((Handle_Visual3d_View*)nativeHandle))->Window();
  return gcnew OCAspect_Window(&tmp);
}

 Standard_Integer OCVisual3d_View::LightLimit()
{
  return (*((Handle_Visual3d_View*)nativeHandle))->LightLimit();
}

 Standard_Integer OCVisual3d_View::PlaneLimit()
{
  return (*((Handle_Visual3d_View*)nativeHandle))->PlaneLimit();
}

OCVisual3d_ViewManager^ OCVisual3d_View::ViewManager()
{
  Handle(Visual3d_ViewManager) tmp = (*((Handle_Visual3d_View*)nativeHandle))->ViewManager();
  return gcnew OCVisual3d_ViewManager(&tmp);
}

 void OCVisual3d_View::ReCompute(OCNaroWrappers::OCGraphic3d_Structure^ AStructure)
{
  (*((Handle_Visual3d_View*)nativeHandle))->ReCompute(*((Handle_Graphic3d_Structure*)AStructure->Handle));
}

 Standard_Integer OCVisual3d_View::Identification()
{
  return (*((Handle_Visual3d_View*)nativeHandle))->Identification();
}

OCTColStd_Array2OfReal^ OCVisual3d_View::MatrixOfMapping()
{
  TColStd_Array2OfReal* tmp = new TColStd_Array2OfReal(0, 0, 0, 0);
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->MatrixOfMapping();
  return gcnew OCTColStd_Array2OfReal(tmp);
}

OCTColStd_Array2OfReal^ OCVisual3d_View::MatrixOfOrientation()
{
  TColStd_Array2OfReal* tmp = new TColStd_Array2OfReal(0, 0, 0, 0);
  *tmp = (*((Handle_Visual3d_View*)nativeHandle))->MatrixOfOrientation();
  return gcnew OCTColStd_Array2OfReal(tmp);
}

 Standard_Address OCVisual3d_View::CView()
{
  return (*((Handle_Visual3d_View*)nativeHandle))->CView();
}

OCAspect_GraphicDriver^ OCVisual3d_View::GraphicDriver()
{
  Handle(Aspect_GraphicDriver) tmp = (*((Handle_Visual3d_View*)nativeHandle))->GraphicDriver();
  return gcnew OCAspect_GraphicDriver(&tmp);
}

 void OCVisual3d_View::Plot(OCNaroWrappers::OCGraphic3d_Plotter^ APlotter)
{
  (*((Handle_Visual3d_View*)nativeHandle))->Plot(*((Handle_Graphic3d_Plotter*)APlotter->Handle));
}

 System::Boolean OCVisual3d_View::Print(OCNaroWrappers::OCVisual3d_Layer^ AnUnderLayer, OCNaroWrappers::OCVisual3d_Layer^ AnOverLayer, System::IntPtr hPrnDC, System::Boolean showBackground, System::String^ filename, OCAspect_PrintAlgo printAlgorithm, Standard_Real theScaleFactor)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->Print(*((Handle_Visual3d_Layer*)AnUnderLayer->Handle), *((Handle_Visual3d_Layer*)AnOverLayer->Handle), hPrnDC.ToPointer(), OCConverter::BooleanToStandardBoolean(showBackground), OCConverter::StringToStandardCString(filename), (Aspect_PrintAlgo)printAlgorithm, theScaleFactor));
}

 System::Boolean OCVisual3d_View::Print(System::IntPtr hPrnDC, System::Boolean showBackground, System::String^ filename, OCAspect_PrintAlgo printAlgorithm, Standard_Real theScaleFactor)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->Print(hPrnDC.ToPointer(), OCConverter::BooleanToStandardBoolean(showBackground), OCConverter::StringToStandardCString(filename), (Aspect_PrintAlgo)printAlgorithm, theScaleFactor));
}

 void OCVisual3d_View::SetTransparency(System::Boolean AFlag)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetTransparency(OCConverter::BooleanToStandardBoolean(AFlag));
}

 System::Boolean OCVisual3d_View::ZBufferIsActivated()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->ZBufferIsActivated());
}

 void OCVisual3d_View::SetZBufferActivity(Standard_Integer AnActivity)
{
  (*((Handle_Visual3d_View*)nativeHandle))->SetZBufferActivity(AnActivity);
}

OCVisual3d_Layer^ OCVisual3d_View::UnderLayer()
{
  Handle(Visual3d_Layer) tmp = (*((Handle_Visual3d_View*)nativeHandle))->UnderLayer();
  return gcnew OCVisual3d_Layer(&tmp);
}

OCVisual3d_Layer^ OCVisual3d_View::OverLayer()
{
  Handle(Visual3d_Layer) tmp = (*((Handle_Visual3d_View*)nativeHandle))->OverLayer();
  return gcnew OCVisual3d_Layer(&tmp);
}

 void OCVisual3d_View::EnableDepthTest(System::Boolean enable)
{
  (*((Handle_Visual3d_View*)nativeHandle))->EnableDepthTest(OCConverter::BooleanToStandardBoolean(enable));
}

 System::Boolean OCVisual3d_View::IsDepthTestEnabled()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->IsDepthTestEnabled());
}

 void OCVisual3d_View::ReadDepths(Standard_Integer x, Standard_Integer y, Standard_Integer width, Standard_Integer height, Standard_Address buffer)
{
  (*((Handle_Visual3d_View*)nativeHandle))->ReadDepths(x, y, width, height, buffer);
}

 Graphic3d_PtrFrameBuffer OCVisual3d_View::FBOCreate(Standard_Integer width, Standard_Integer height)
{
  return (*((Handle_Visual3d_View*)nativeHandle))->FBOCreate(width, height);
}

 void OCVisual3d_View::FBORelease(Graphic3d_PtrFrameBuffer& fboPtr)
{
  (*((Handle_Visual3d_View*)nativeHandle))->FBORelease(fboPtr);
}

 void OCVisual3d_View::FBOGetDimensions(Graphic3d_PtrFrameBuffer fboPtr, Standard_Integer& width, Standard_Integer& height, Standard_Integer& widthMax, Standard_Integer& heightMax)
{
  (*((Handle_Visual3d_View*)nativeHandle))->FBOGetDimensions(fboPtr, width, height, widthMax, heightMax);
}

 void OCVisual3d_View::FBOChangeViewport(Graphic3d_PtrFrameBuffer& fboPtr, Standard_Integer width, Standard_Integer height)
{
  (*((Handle_Visual3d_View*)nativeHandle))->FBOChangeViewport(fboPtr, width, height);
}

 System::Boolean OCVisual3d_View::BufferDump(Image_PixMap& theImage, Graphic3d_BufferType theBufferType)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->BufferDump(theImage, theBufferType));
}

 void OCVisual3d_View::EnableGLLight(System::Boolean enable)
{
  (*((Handle_Visual3d_View*)nativeHandle))->EnableGLLight(OCConverter::BooleanToStandardBoolean(enable));
}

 System::Boolean OCVisual3d_View::IsGLLightEnabled()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->IsGLLightEnabled());
}

 System::Boolean OCVisual3d_View::Export(System::String^ theFileName, OCGraphic3d_ExportFormat theFormat, OCGraphic3d_SortType theSortType, Standard_Real thePrecision, Standard_Address theProgressBarFunc, Standard_Address theProgressObject)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Visual3d_View*)nativeHandle))->Export(OCConverter::StringToStandardCString(theFileName), (Graphic3d_ExportFormat)theFormat, (Graphic3d_SortType)theSortType, thePrecision, theProgressBarFunc, theProgressObject));
}


