// File generated by CPPExt (MPV)
//
#ifndef _OSD_DirectoryIterator_OCWrappers_HeaderFile
#define _OSD_DirectoryIterator_OCWrappers_HeaderFile

// include native header
#include <OSD_DirectoryIterator.hxx>
#include "../Converter.h"


#include "OSD_Directory.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "OSD_Error.h"


namespace OCNaroWrappers
{

ref class OCOSD_Path;
ref class OCTCollection_AsciiString;
ref class OCOSD_Directory;


//! Manages a breadth-only search for sub-directories in the specified <br>
//!          Path. <br>
//!          There is no specific order of results. <br>
public ref class OCOSD_DirectoryIterator  {

protected:
  OSD_DirectoryIterator* nativeHandle;
  OCOSD_DirectoryIterator(OCDummy^) {};

public:
  property OSD_DirectoryIterator* Handle
  {
    OSD_DirectoryIterator* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCOSD_DirectoryIterator(OSD_DirectoryIterator* nativeHandle);

// Methods PUBLIC

//! Instantiates Object as empty Iterator; <br>
OCOSD_DirectoryIterator();

//! Instantiates Object as Iterator. <br>
//!          Wild-card "*" can be used in Mask the same way it <br>
//!          is used by unix shell for file names <br>
OCOSD_DirectoryIterator(OCNaroWrappers::OCOSD_Path^ where, OCNaroWrappers::OCTCollection_AsciiString^ Mask);

//! Initializes the current File Directory <br>
 /*instead*/  void Initialize(OCNaroWrappers::OCOSD_Path^ where, OCNaroWrappers::OCTCollection_AsciiString^ Mask) ;

//! Returns TRUE if other items are found while <br>
//!          using the 'Tree' method. <br>
 /*instead*/  System::Boolean More() ;

//! Sets the iterator to the next item. <br>
//!          Returns the item value corresponding to the current <br>
//!          position of the iterator. <br>
 /*instead*/  void Next() ;

//! Returns the next item found . <br>
 /*instead*/  OCOSD_Directory^ Values() ;

//! Returns TRUE if an error occurs <br>
 /*instead*/  System::Boolean Failed() ;

//! Resets error counter to zero <br>
 /*instead*/  void Reset() ;

//! Raises OSD_Error <br>
 /*instead*/  void Perror() ;

//! Returns error number if 'Failed' is TRUE. <br>
 /*instead*/  Standard_Integer Error() ;

~OCOSD_DirectoryIterator()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
