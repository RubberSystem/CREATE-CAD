// File generated by CPPExt (MPV)
//
#ifndef _OSD_Chronometer_OCWrappers_HeaderFile
#define _OSD_Chronometer_OCWrappers_HeaderFile

// include native header
#include <OSD_Chronometer.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{



//! This class measures CPU time (both user and system) consumed <br>
//!          by current process or thread. The chronometer can be started <br>
//!          and stopped multiple times, and measures cumulative time. <br>
public ref class OCOSD_Chronometer  {

protected:
  OSD_Chronometer* nativeHandle;
  OCOSD_Chronometer(OCDummy^) {};

public:
  property OSD_Chronometer* Handle
  {
    OSD_Chronometer* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCOSD_Chronometer(OSD_Chronometer* nativeHandle);

// Methods PUBLIC

//! Initializes a stopped Chronometer. <br>
OCOSD_Chronometer(System::Boolean ThisThreadOnly);

//! Stops and Reinitializes the Chronometer. <br>
virtual /*instead*/  void Reset() ;

//! Stops the Chronometer. <br>
virtual /*instead*/  void Stop() ;

//! Starts (after Create or Reset) or restarts (after Stop) <br>
//!          the chronometer. <br>
virtual /*instead*/  void Start() ;

//! Shows the current CPU user and system time on the <br>
//!          standard output stream <cout>. <br>
//!          The chronometer can be running (laps Time) or stopped. <br>
virtual /*instead*/  void Show() ;

//! Shows the current CPU user and system time on the output <br>
//!          stream <os>. <br>
//!          The chronometer can be running (laps Time) or stopped. <br>
virtual /*instead*/  void Show(Standard_OStream& os) ;

//! Returns the current CPU user time in a variable. <br>
//!          The chronometer can be running (laps Time) or stopped. <br>
 /*instead*/  void Show(Standard_Real& UserSeconds) ;

//! Returns the current CPU user and system time in variables. <br>
//!          The chronometer can be running (laps Time) or stopped. <br>
 /*instead*/  void Show(Standard_Real& UserSeconds, Standard_Real& SystemSeconds) ;

//! Returns CPU time (user and system) consumed by the current <br>
//!          process since its start, in seconds. The actual precision of <br>
//!          the measurement depends on granularity provided by the system, <br>
//!          and is platform-specific. <br>
static /*instead*/  void GetProcessCPU(Standard_Real& UserSeconds, Standard_Real& SystemSeconds) ;

//! Returns CPU time (user and system) consumed by the current <br>
//!          thread since its start. Note that this measurement is <br>
//!          platform-specific, as threads are implemented and managed <br>
//!          differently on different platforms and CPUs. <br>
static /*instead*/  void GetThreadCPU(Standard_Real& UserSeconds, Standard_Real& SystemSeconds) ;

~OCOSD_Chronometer()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
