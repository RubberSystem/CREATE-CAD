// File generated by CPPExt (MPV)
//
#ifndef _OSD_Directory_OCWrappers_HeaderFile
#define _OSD_Directory_OCWrappers_HeaderFile

// include native header
#include <OSD_Directory.hxx>
#include "../Converter.h"

#include "OSD_FileNode.h"

#include "OSD_FileNode.h"


namespace OCNaroWrappers
{

ref class OCOSD_Path;
ref class OCOSD_Protection;


//! Management of directories <br>
public ref class OCOSD_Directory  : public OCOSD_FileNode {

protected:
  // dummy constructor;
  OCOSD_Directory(OCDummy^) : OCOSD_FileNode((OCDummy^)nullptr) {};

public:

// constructor from native
OCOSD_Directory(OSD_Directory* nativeHandle);

// Methods PUBLIC

//! Creates Directory object. <br>
//!          It is initiliazed to an empty name. <br>
OCOSD_Directory();

//! Creates Directory object initialized with Name. <br>
OCOSD_Directory(OCNaroWrappers::OCOSD_Path^ Name);

//! Creates (physically) a directory. <br>
//!          When a directory of the same name already exists, no error is <br>
//!          returned, and only <Protect> is applied to the existing directory. <br>
 /*instead*/  void Build(OCNaroWrappers::OCOSD_Protection^ Protect) ;

//! Creates a temporary Directory in current directory. <br>
//!          This directory is automatically removed when object dies. <br>
static /*instead*/  OCOSD_Directory^ BuildTemporary() ;

~OCOSD_Directory()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
