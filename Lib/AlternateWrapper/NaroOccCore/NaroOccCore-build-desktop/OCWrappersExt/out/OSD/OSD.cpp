// File generated by CPPExt (CPP file)
//

#include "OSD.h"
#include "../Converter.h"


using namespace OCNaroWrappers;



 void OCOSD::SetSignal(System::Boolean aFloatingSignal)
{
  OSD::SetSignal(OCConverter::BooleanToStandardBoolean(aFloatingSignal));
}

 Standard_Integer OCOSD::AvailableMemory()
{
  return OSD::AvailableMemory();
}

 void OCOSD::SecSleep(Standard_Integer aDelay)
{
  OSD::SecSleep(aDelay);
}

 void OCOSD::MilliSecSleep(Standard_Integer aDelay)
{
  OSD::MilliSecSleep(aDelay);
}

 System::Boolean OCOSD::RealToCString(Standard_Real aReal, Standard_PCharacter& aString)
{
  return OCConverter::StandardBooleanToBoolean(OSD::RealToCString(aReal, aString));
}

 System::Boolean OCOSD::CStringToReal(System::String^ aString, Standard_Real& aReal)
{
  return OCConverter::StandardBooleanToBoolean(OSD::CStringToReal(OCConverter::StringToStandardCString(aString), aReal));
}

 System::Boolean OCOSD::IsDivisible(Standard_Real aDividend, Standard_Real aDivisor)
{
  return OCConverter::StandardBooleanToBoolean(OSD::IsDivisible(aDividend, aDivisor));
}

 Standard_Integer OCOSD::GetExponent(Standard_Real aReal)
{
  return OSD::GetExponent(aReal);
}

 Standard_Real OCOSD::GetMantissa(Standard_Real aReal)
{
  return OSD::GetMantissa(aReal);
}

 void OCOSD::ControlBreak()
{
  OSD::ControlBreak();
}

 void OCOSD::UseSETranslator(System::Boolean useSE)
{
  OSD::UseSETranslator(OCConverter::BooleanToStandardBoolean(useSE));
}

 System::Boolean OCOSD::UseSETranslator()
{
  return OCConverter::StandardBooleanToBoolean(OSD::UseSETranslator());
}


