// File generated by CPPExt (MPV)
//
#ifndef _OSD_Disk_OCWrappers_HeaderFile
#define _OSD_Disk_OCWrappers_HeaderFile

// include native header
#include <OSD_Disk.hxx>
#include "../Converter.h"


#include "../TCollection/TCollection_AsciiString.h"
#include "OSD_Error.h"


namespace OCNaroWrappers
{

ref class OCOSD_Path;


//! Disk management <br>
public ref class OCOSD_Disk  {

protected:
  OSD_Disk* nativeHandle;
  OCOSD_Disk(OCDummy^) {};

public:
  property OSD_Disk* Handle
  {
    OSD_Disk* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCOSD_Disk(OSD_Disk* nativeHandle);

// Methods PUBLIC

//! Creates a disk object. <br>
//!          This is used only when a class contains a Disk field. <br>
//!          By default, its name is initialized to current working disk. <br>
OCOSD_Disk();

//! Initializes the object Disk with the disk name <br>
//!          associated to the OSD_Path. <br>
OCOSD_Disk(OCNaroWrappers::OCOSD_Path^ Name);

//! Initializes the object Disk with <PathName>. <br>
//!          <PathName> specifies any file within the mounted <br>
//!          file system. <br>
//!          Example : OSD_Disk myDisk ("/tmp") <br>
//!                    Initializes a disk object with the mounted <br>
//!                    file associated to /tmp. <br>
OCOSD_Disk(System::String^ PathName);

//! Returns disk name of <me>. <br>
 /*instead*/  OCOSD_Path^ Name() ;

//! Instantiates <me> with <Name>. <br>
 /*instead*/  void SetName(OCNaroWrappers::OCOSD_Path^ Name) ;

//! Returns total disk capacity in 512 bytes blocks. <br>
 /*instead*/  Standard_Integer DiskSize() ;

//! Returns free available 512 bytes blocks on disk. <br>
 /*instead*/  Standard_Integer DiskFree() ;

//! Returns user's disk quota (in Bytes). <br>
 /*instead*/  Standard_Integer DiskQuota() ;

//! Sets user's disk quota (in Bytes). <br>
//!  Warning: Needs system administrator privilege. <br>
 /*instead*/  void SetDiskQuota(Standard_Integer QuotaSize) ;

//! Activates user's disk quota <br>
//!  Warning: Needs system administrator privilege. <br>
 /*instead*/  void SetQuotaOn() ;

//! Deactivates user's disk quota <br>
//!  Warning: Needs system administrator privilege. <br>
 /*instead*/  void SetQuotaOff() ;

//! Returns TRUE if an error occurs <br>
 /*instead*/  System::Boolean Failed() ;

//! Resets error counter to zero <br>
 /*instead*/  void Reset() ;

//! Raises OSD_Error <br>
 /*instead*/  void Perror() ;

//! Returns error number if 'Failed' is TRUE. <br>
 /*instead*/  Standard_Integer Error() ;

~OCOSD_Disk()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
