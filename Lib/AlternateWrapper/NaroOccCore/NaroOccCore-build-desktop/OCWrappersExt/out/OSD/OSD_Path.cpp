// File generated by CPPExt (CPP file)
//

#include "OSD_Path.h"
#include "../Converter.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCOSD_Path::OCOSD_Path(OSD_Path* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCOSD_Path::OCOSD_Path() 
{
  nativeHandle = new OSD_Path();
}

OCOSD_Path::OCOSD_Path(OCNaroWrappers::OCTCollection_AsciiString^ aDependentName, OCOSD_SysType aSysType) 
{
  nativeHandle = new OSD_Path(*((TCollection_AsciiString*)aDependentName->Handle), (OSD_SysType)aSysType);
}

OCOSD_Path::OCOSD_Path(OCNaroWrappers::OCTCollection_AsciiString^ aNode, OCNaroWrappers::OCTCollection_AsciiString^ aUsername, OCNaroWrappers::OCTCollection_AsciiString^ aPassword, OCNaroWrappers::OCTCollection_AsciiString^ aDisk, OCNaroWrappers::OCTCollection_AsciiString^ aTrek, OCNaroWrappers::OCTCollection_AsciiString^ aName, OCNaroWrappers::OCTCollection_AsciiString^ anExtension) 
{
  nativeHandle = new OSD_Path(*((TCollection_AsciiString*)aNode->Handle), *((TCollection_AsciiString*)aUsername->Handle), *((TCollection_AsciiString*)aPassword->Handle), *((TCollection_AsciiString*)aDisk->Handle), *((TCollection_AsciiString*)aTrek->Handle), *((TCollection_AsciiString*)aName->Handle), *((TCollection_AsciiString*)anExtension->Handle));
}

 void OCOSD_Path::Values(OCNaroWrappers::OCTCollection_AsciiString^ aNode, OCNaroWrappers::OCTCollection_AsciiString^ aUsername, OCNaroWrappers::OCTCollection_AsciiString^ aPassword, OCNaroWrappers::OCTCollection_AsciiString^ aDisk, OCNaroWrappers::OCTCollection_AsciiString^ aTrek, OCNaroWrappers::OCTCollection_AsciiString^ aName, OCNaroWrappers::OCTCollection_AsciiString^ anExtension)
{
  ((OSD_Path*)nativeHandle)->Values(*((TCollection_AsciiString*)aNode->Handle), *((TCollection_AsciiString*)aUsername->Handle), *((TCollection_AsciiString*)aPassword->Handle), *((TCollection_AsciiString*)aDisk->Handle), *((TCollection_AsciiString*)aTrek->Handle), *((TCollection_AsciiString*)aName->Handle), *((TCollection_AsciiString*)anExtension->Handle));
}

 void OCOSD_Path::SetValues(OCNaroWrappers::OCTCollection_AsciiString^ aNode, OCNaroWrappers::OCTCollection_AsciiString^ aUsername, OCNaroWrappers::OCTCollection_AsciiString^ aPassword, OCNaroWrappers::OCTCollection_AsciiString^ aDisk, OCNaroWrappers::OCTCollection_AsciiString^ aTrek, OCNaroWrappers::OCTCollection_AsciiString^ aName, OCNaroWrappers::OCTCollection_AsciiString^ anExtension)
{
  ((OSD_Path*)nativeHandle)->SetValues(*((TCollection_AsciiString*)aNode->Handle), *((TCollection_AsciiString*)aUsername->Handle), *((TCollection_AsciiString*)aPassword->Handle), *((TCollection_AsciiString*)aDisk->Handle), *((TCollection_AsciiString*)aTrek->Handle), *((TCollection_AsciiString*)aName->Handle), *((TCollection_AsciiString*)anExtension->Handle));
}

 void OCOSD_Path::SystemName(OCNaroWrappers::OCTCollection_AsciiString^ FullName, OCOSD_SysType aType)
{
  ((OSD_Path*)nativeHandle)->SystemName(*((TCollection_AsciiString*)FullName->Handle), (OSD_SysType)aType);
}

 void OCOSD_Path::ExpandedName(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->ExpandedName(*((TCollection_AsciiString*)aName->Handle));
}

 System::Boolean OCOSD_Path::IsValid(OCNaroWrappers::OCTCollection_AsciiString^ aDependentName, OCOSD_SysType aSysType)
{
  return OCConverter::StandardBooleanToBoolean(((OSD_Path*)nativeHandle)->IsValid(*((TCollection_AsciiString*)aDependentName->Handle), (OSD_SysType)aSysType));
}

 void OCOSD_Path::UpTrek()
{
  ((OSD_Path*)nativeHandle)->UpTrek();
}

 void OCOSD_Path::DownTrek(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->DownTrek(*((TCollection_AsciiString*)aName->Handle));
}

 Standard_Integer OCOSD_Path::TrekLength()
{
  return ((OSD_Path*)nativeHandle)->TrekLength();
}

 void OCOSD_Path::RemoveATrek(Standard_Integer where)
{
  ((OSD_Path*)nativeHandle)->RemoveATrek(where);
}

 void OCOSD_Path::RemoveATrek(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->RemoveATrek(*((TCollection_AsciiString*)aName->Handle));
}

OCTCollection_AsciiString^ OCOSD_Path::TrekValue(Standard_Integer where)
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Path*)nativeHandle)->TrekValue(where);
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCOSD_Path::InsertATrek(OCNaroWrappers::OCTCollection_AsciiString^ aName, Standard_Integer where)
{
  ((OSD_Path*)nativeHandle)->InsertATrek(*((TCollection_AsciiString*)aName->Handle), where);
}

OCTCollection_AsciiString^ OCOSD_Path::Node()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Path*)nativeHandle)->Node();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCOSD_Path::UserName()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Path*)nativeHandle)->UserName();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCOSD_Path::Password()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Path*)nativeHandle)->Password();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCOSD_Path::Disk()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Path*)nativeHandle)->Disk();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCOSD_Path::Trek()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Path*)nativeHandle)->Trek();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCOSD_Path::Name()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Path*)nativeHandle)->Name();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCOSD_Path::Extension()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Path*)nativeHandle)->Extension();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCOSD_Path::SetNode(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->SetNode(*((TCollection_AsciiString*)aName->Handle));
}

 void OCOSD_Path::SetUserName(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->SetUserName(*((TCollection_AsciiString*)aName->Handle));
}

 void OCOSD_Path::SetPassword(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->SetPassword(*((TCollection_AsciiString*)aName->Handle));
}

 void OCOSD_Path::SetDisk(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->SetDisk(*((TCollection_AsciiString*)aName->Handle));
}

 void OCOSD_Path::SetTrek(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->SetTrek(*((TCollection_AsciiString*)aName->Handle));
}

 void OCOSD_Path::SetName(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->SetName(*((TCollection_AsciiString*)aName->Handle));
}

 void OCOSD_Path::SetExtension(OCNaroWrappers::OCTCollection_AsciiString^ aName)
{
  ((OSD_Path*)nativeHandle)->SetExtension(*((TCollection_AsciiString*)aName->Handle));
}

 System::Boolean OCOSD_Path::LocateExecFile(OCNaroWrappers::OCOSD_Path^ aPath)
{
  return OCConverter::StandardBooleanToBoolean(((OSD_Path*)nativeHandle)->LocateExecFile(*((OSD_Path*)aPath->Handle)));
}

OCTCollection_AsciiString^ OCOSD_Path::RelativePath(OCNaroWrappers::OCTCollection_AsciiString^ DirPath, OCNaroWrappers::OCTCollection_AsciiString^ AbsFilePath)
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = OSD_Path::RelativePath(*((TCollection_AsciiString*)DirPath->Handle), *((TCollection_AsciiString*)AbsFilePath->Handle));
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCOSD_Path::AbsolutePath(OCNaroWrappers::OCTCollection_AsciiString^ DirPath, OCNaroWrappers::OCTCollection_AsciiString^ RelFilePath)
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = OSD_Path::AbsolutePath(*((TCollection_AsciiString*)DirPath->Handle), *((TCollection_AsciiString*)RelFilePath->Handle));
  return gcnew OCTCollection_AsciiString(tmp);
}


