// File generated by CPPExt (MPV)
//
#ifndef _OSD_EnvironmentIterator_OCWrappers_HeaderFile
#define _OSD_EnvironmentIterator_OCWrappers_HeaderFile

// include native header
#include <OSD_EnvironmentIterator.hxx>
#include "../Converter.h"


#include "OSD_Error.h"


namespace OCNaroWrappers
{

ref class OCOSD_Environment;


//! This allows consultation of every environment variable. <br>
//!          There is no specific order of results. <br>
public ref class OCOSD_EnvironmentIterator  {

protected:
  OSD_EnvironmentIterator* nativeHandle;
  OCOSD_EnvironmentIterator(OCDummy^) {};

public:
  property OSD_EnvironmentIterator* Handle
  {
    OSD_EnvironmentIterator* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCOSD_EnvironmentIterator(OSD_EnvironmentIterator* nativeHandle);

// Methods PUBLIC

//! Instantiates Object as Iterator; <br>
OCOSD_EnvironmentIterator();

//! Returns TRUE if there are other environment variables. <br>
 /*instead*/  System::Boolean More() ;

//! Sets the iterator to the next item. <br>
//!          Returns the item value corresponding to the current <br>
//!          position of the iterator. <br>
 /*instead*/  void Next() ;

//! Returns the next environment variable found. <br>
 /*instead*/  OCOSD_Environment^ Values() ;

//! Returns TRUE if an error occurs <br>
 /*instead*/  System::Boolean Failed() ;

//! Resets error counter to zero <br>
 /*instead*/  void Reset() ;

//! Raises OSD_Error <br>
 /*instead*/  void Perror() ;

//! Returns error number if 'Failed' is TRUE. <br>
 /*instead*/  Standard_Integer Error() ;

~OCOSD_EnvironmentIterator()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
