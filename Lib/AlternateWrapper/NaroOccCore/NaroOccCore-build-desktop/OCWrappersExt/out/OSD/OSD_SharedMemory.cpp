// File generated by CPPExt (CPP file)
//

#include "OSD_SharedMemory.h"
#include "../Converter.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCOSD_SharedMemory::OCOSD_SharedMemory(OSD_SharedMemory* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCOSD_SharedMemory::OCOSD_SharedMemory() 
{
  nativeHandle = new OSD_SharedMemory();
}

OCOSD_SharedMemory::OCOSD_SharedMemory(OCNaroWrappers::OCTCollection_AsciiString^ Name, Standard_Integer size) 
{
  nativeHandle = new OSD_SharedMemory(*((TCollection_AsciiString*)Name->Handle), size);
}

 void OCOSD_SharedMemory::Build()
{
  ((OSD_SharedMemory*)nativeHandle)->Build();
}

 void OCOSD_SharedMemory::Open(OCNaroWrappers::OCTCollection_AsciiString^ Name, Standard_Integer size)
{
  ((OSD_SharedMemory*)nativeHandle)->Open(*((TCollection_AsciiString*)Name->Handle), size);
}

 void OCOSD_SharedMemory::Delete()
{
  ((OSD_SharedMemory*)nativeHandle)->Delete();
}

 Standard_Address OCOSD_SharedMemory::GiveAddress()
{
  return ((OSD_SharedMemory*)nativeHandle)->GiveAddress();
}

 System::Boolean OCOSD_SharedMemory::Failed()
{
  return OCConverter::StandardBooleanToBoolean(((OSD_SharedMemory*)nativeHandle)->Failed());
}

 void OCOSD_SharedMemory::Reset()
{
  ((OSD_SharedMemory*)nativeHandle)->Reset();
}

 void OCOSD_SharedMemory::Perror()
{
  ((OSD_SharedMemory*)nativeHandle)->Perror();
}

 Standard_Integer OCOSD_SharedMemory::Error()
{
  return ((OSD_SharedMemory*)nativeHandle)->Error();
}


