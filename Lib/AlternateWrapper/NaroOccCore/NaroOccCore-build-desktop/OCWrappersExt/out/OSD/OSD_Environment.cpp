// File generated by CPPExt (CPP file)
//

#include "OSD_Environment.h"
#include "../Converter.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCOSD_Environment::OCOSD_Environment(OSD_Environment* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCOSD_Environment::OCOSD_Environment() 
{
  nativeHandle = new OSD_Environment();
}

OCOSD_Environment::OCOSD_Environment(OCNaroWrappers::OCTCollection_AsciiString^ Name) 
{
  nativeHandle = new OSD_Environment(*((TCollection_AsciiString*)Name->Handle));
}

OCOSD_Environment::OCOSD_Environment(OCNaroWrappers::OCTCollection_AsciiString^ Name, OCNaroWrappers::OCTCollection_AsciiString^ Value) 
{
  nativeHandle = new OSD_Environment(*((TCollection_AsciiString*)Name->Handle), *((TCollection_AsciiString*)Value->Handle));
}

 void OCOSD_Environment::SetValue(OCNaroWrappers::OCTCollection_AsciiString^ Value)
{
  ((OSD_Environment*)nativeHandle)->SetValue(*((TCollection_AsciiString*)Value->Handle));
}

OCTCollection_AsciiString^ OCOSD_Environment::Value()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Environment*)nativeHandle)->Value();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCOSD_Environment::SetName(OCNaroWrappers::OCTCollection_AsciiString^ name)
{
  ((OSD_Environment*)nativeHandle)->SetName(*((TCollection_AsciiString*)name->Handle));
}

OCTCollection_AsciiString^ OCOSD_Environment::Name()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((OSD_Environment*)nativeHandle)->Name();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCOSD_Environment::Build()
{
  ((OSD_Environment*)nativeHandle)->Build();
}

 void OCOSD_Environment::Remove()
{
  ((OSD_Environment*)nativeHandle)->Remove();
}

 System::Boolean OCOSD_Environment::Failed()
{
  return OCConverter::StandardBooleanToBoolean(((OSD_Environment*)nativeHandle)->Failed());
}

 void OCOSD_Environment::Reset()
{
  ((OSD_Environment*)nativeHandle)->Reset();
}

 void OCOSD_Environment::Perror()
{
  ((OSD_Environment*)nativeHandle)->Perror();
}

 Standard_Integer OCOSD_Environment::Error()
{
  return ((OSD_Environment*)nativeHandle)->Error();
}


