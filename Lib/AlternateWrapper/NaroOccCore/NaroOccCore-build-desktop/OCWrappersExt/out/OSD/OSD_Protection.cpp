// File generated by CPPExt (CPP file)
//

#include "OSD_Protection.h"
#include "../Converter.h"
#include "OSD_FileNode.h"
#include "OSD_File.h"
#include "OSD_Directory.h"


using namespace OCNaroWrappers;

OCOSD_Protection::OCOSD_Protection(OSD_Protection* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCOSD_Protection::OCOSD_Protection() 
{
  nativeHandle = new OSD_Protection();
}

OCOSD_Protection::OCOSD_Protection(OCOSD_SingleProtection System, OCOSD_SingleProtection User, OCOSD_SingleProtection Group, OCOSD_SingleProtection World) 
{
  nativeHandle = new OSD_Protection((OSD_SingleProtection)System, (OSD_SingleProtection)User, (OSD_SingleProtection)Group, (OSD_SingleProtection)World);
}

 void OCOSD_Protection::Values(OCOSD_SingleProtection& System, OCOSD_SingleProtection& User, OCOSD_SingleProtection& Group, OCOSD_SingleProtection& World)
{
  ((OSD_Protection*)nativeHandle)->Values((OSD_SingleProtection&)System, (OSD_SingleProtection&)User, (OSD_SingleProtection&)Group, (OSD_SingleProtection&)World);
}

 void OCOSD_Protection::SetValues(OCOSD_SingleProtection System, OCOSD_SingleProtection User, OCOSD_SingleProtection Group, OCOSD_SingleProtection World)
{
  ((OSD_Protection*)nativeHandle)->SetValues((OSD_SingleProtection)System, (OSD_SingleProtection)User, (OSD_SingleProtection)Group, (OSD_SingleProtection)World);
}

 void OCOSD_Protection::SetSystem(OCOSD_SingleProtection priv)
{
  ((OSD_Protection*)nativeHandle)->SetSystem((OSD_SingleProtection)priv);
}

 void OCOSD_Protection::SetUser(OCOSD_SingleProtection priv)
{
  ((OSD_Protection*)nativeHandle)->SetUser((OSD_SingleProtection)priv);
}

 void OCOSD_Protection::SetGroup(OCOSD_SingleProtection priv)
{
  ((OSD_Protection*)nativeHandle)->SetGroup((OSD_SingleProtection)priv);
}

 void OCOSD_Protection::SetWorld(OCOSD_SingleProtection priv)
{
  ((OSD_Protection*)nativeHandle)->SetWorld((OSD_SingleProtection)priv);
}

 OCOSD_SingleProtection OCOSD_Protection::System()
{
  return (OCOSD_SingleProtection)(((OSD_Protection*)nativeHandle)->System());
}

 OCOSD_SingleProtection OCOSD_Protection::User()
{
  return (OCOSD_SingleProtection)(((OSD_Protection*)nativeHandle)->User());
}

 OCOSD_SingleProtection OCOSD_Protection::Group()
{
  return (OCOSD_SingleProtection)(((OSD_Protection*)nativeHandle)->Group());
}

 OCOSD_SingleProtection OCOSD_Protection::World()
{
  return (OCOSD_SingleProtection)(((OSD_Protection*)nativeHandle)->World());
}

 void OCOSD_Protection::Add(OCOSD_SingleProtection& aProt, OCOSD_SingleProtection aRight)
{
  ((OSD_Protection*)nativeHandle)->Add((OSD_SingleProtection&)aProt, (OSD_SingleProtection)aRight);
}

 void OCOSD_Protection::Sub(OCOSD_SingleProtection& aProt, OCOSD_SingleProtection aRight)
{
  ((OSD_Protection*)nativeHandle)->Sub((OSD_SingleProtection&)aProt, (OSD_SingleProtection)aRight);
}


