// File generated by CPPExt (CPP file)
//

#include "StepBasic_IdentificationAssignment.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "StepBasic_IdentificationRole.h"


using namespace OCNaroWrappers;

OCStepBasic_IdentificationAssignment::OCStepBasic_IdentificationAssignment(Handle(StepBasic_IdentificationAssignment)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepBasic_IdentificationAssignment(*nativeHandle);
}

OCStepBasic_IdentificationAssignment::OCStepBasic_IdentificationAssignment() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepBasic_IdentificationAssignment(new StepBasic_IdentificationAssignment());
}

 void OCStepBasic_IdentificationAssignment::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aAssignedId, OCNaroWrappers::OCStepBasic_IdentificationRole^ aRole)
{
  (*((Handle_StepBasic_IdentificationAssignment*)nativeHandle))->Init(*((Handle_TCollection_HAsciiString*)aAssignedId->Handle), *((Handle_StepBasic_IdentificationRole*)aRole->Handle));
}

OCTCollection_HAsciiString^ OCStepBasic_IdentificationAssignment::AssignedId()
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_StepBasic_IdentificationAssignment*)nativeHandle))->AssignedId();
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCStepBasic_IdentificationAssignment::SetAssignedId(OCNaroWrappers::OCTCollection_HAsciiString^ AssignedId)
{
  (*((Handle_StepBasic_IdentificationAssignment*)nativeHandle))->SetAssignedId(*((Handle_TCollection_HAsciiString*)AssignedId->Handle));
}

OCStepBasic_IdentificationRole^ OCStepBasic_IdentificationAssignment::Role()
{
  Handle(StepBasic_IdentificationRole) tmp = (*((Handle_StepBasic_IdentificationAssignment*)nativeHandle))->Role();
  return gcnew OCStepBasic_IdentificationRole(&tmp);
}

 void OCStepBasic_IdentificationAssignment::SetRole(OCNaroWrappers::OCStepBasic_IdentificationRole^ Role)
{
  (*((Handle_StepBasic_IdentificationAssignment*)nativeHandle))->SetRole(*((Handle_StepBasic_IdentificationRole*)Role->Handle));
}


