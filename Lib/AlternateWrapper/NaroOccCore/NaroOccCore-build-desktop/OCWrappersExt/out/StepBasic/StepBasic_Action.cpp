// File generated by CPPExt (CPP file)
//

#include "StepBasic_Action.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "StepBasic_ActionMethod.h"


using namespace OCNaroWrappers;

OCStepBasic_Action::OCStepBasic_Action(Handle(StepBasic_Action)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepBasic_Action(*nativeHandle);
}

OCStepBasic_Action::OCStepBasic_Action() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepBasic_Action(new StepBasic_Action());
}

 void OCStepBasic_Action::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, System::Boolean hasDescription, OCNaroWrappers::OCTCollection_HAsciiString^ aDescription, OCNaroWrappers::OCStepBasic_ActionMethod^ aChosenMethod)
{
  (*((Handle_StepBasic_Action*)nativeHandle))->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), OCConverter::BooleanToStandardBoolean(hasDescription), *((Handle_TCollection_HAsciiString*)aDescription->Handle), *((Handle_StepBasic_ActionMethod*)aChosenMethod->Handle));
}

OCTCollection_HAsciiString^ OCStepBasic_Action::Name()
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_StepBasic_Action*)nativeHandle))->Name();
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCStepBasic_Action::SetName(OCNaroWrappers::OCTCollection_HAsciiString^ Name)
{
  (*((Handle_StepBasic_Action*)nativeHandle))->SetName(*((Handle_TCollection_HAsciiString*)Name->Handle));
}

OCTCollection_HAsciiString^ OCStepBasic_Action::Description()
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_StepBasic_Action*)nativeHandle))->Description();
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCStepBasic_Action::SetDescription(OCNaroWrappers::OCTCollection_HAsciiString^ Description)
{
  (*((Handle_StepBasic_Action*)nativeHandle))->SetDescription(*((Handle_TCollection_HAsciiString*)Description->Handle));
}

 System::Boolean OCStepBasic_Action::HasDescription()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepBasic_Action*)nativeHandle))->HasDescription());
}

OCStepBasic_ActionMethod^ OCStepBasic_Action::ChosenMethod()
{
  Handle(StepBasic_ActionMethod) tmp = (*((Handle_StepBasic_Action*)nativeHandle))->ChosenMethod();
  return gcnew OCStepBasic_ActionMethod(&tmp);
}

 void OCStepBasic_Action::SetChosenMethod(OCNaroWrappers::OCStepBasic_ActionMethod^ ChosenMethod)
{
  (*((Handle_StepBasic_Action*)nativeHandle))->SetChosenMethod(*((Handle_StepBasic_ActionMethod*)ChosenMethod->Handle));
}


