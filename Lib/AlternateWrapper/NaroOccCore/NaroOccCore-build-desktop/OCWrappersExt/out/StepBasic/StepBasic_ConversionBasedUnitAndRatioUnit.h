// File generated by CPPExt (Transient)
//
#ifndef _StepBasic_ConversionBasedUnitAndRatioUnit_OCWrappers_HeaderFile
#define _StepBasic_ConversionBasedUnitAndRatioUnit_OCWrappers_HeaderFile

// include the wrapped class
#include <StepBasic_ConversionBasedUnitAndRatioUnit.hxx>
#include "../Converter.h"

#include "StepBasic_ConversionBasedUnit.h"



namespace OCNaroWrappers
{

ref class OCStepBasic_RatioUnit;
ref class OCStepBasic_DimensionalExponents;
ref class OCTCollection_HAsciiString;
ref class OCStepBasic_MeasureWithUnit;



public ref class OCStepBasic_ConversionBasedUnitAndRatioUnit : OCStepBasic_ConversionBasedUnit {

protected:
  // dummy constructor;
  OCStepBasic_ConversionBasedUnitAndRatioUnit(OCDummy^) : OCStepBasic_ConversionBasedUnit((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepBasic_ConversionBasedUnitAndRatioUnit(Handle(StepBasic_ConversionBasedUnitAndRatioUnit)* nativeHandle);

// Methods PUBLIC

//! Returns a ConversionBasedUnitAndRatioUnit <br>
OCStepBasic_ConversionBasedUnitAndRatioUnit();


virtual /*instead*/  void Init(OCNaroWrappers::OCStepBasic_DimensionalExponents^ aDimensions) override;


virtual /*instead*/  void Init(OCNaroWrappers::OCStepBasic_DimensionalExponents^ aDimensions, OCNaroWrappers::OCTCollection_HAsciiString^ aName, OCNaroWrappers::OCStepBasic_MeasureWithUnit^ aConversionFactor) override;


 /*instead*/  void SetRatioUnit(OCNaroWrappers::OCStepBasic_RatioUnit^ aRatioUnit) ;


 /*instead*/  OCStepBasic_RatioUnit^ RatioUnit() ;

~OCStepBasic_ConversionBasedUnitAndRatioUnit()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
