// File generated by CPPExt (Transient)
//
#ifndef _StepBasic_CoordinatedUniversalTimeOffset_OCWrappers_HeaderFile
#define _StepBasic_CoordinatedUniversalTimeOffset_OCWrappers_HeaderFile

// include the wrapped class
#include <StepBasic_CoordinatedUniversalTimeOffset.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "StepBasic_AheadOrBehind.h"


namespace OCNaroWrappers
{




public ref class OCStepBasic_CoordinatedUniversalTimeOffset : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCStepBasic_CoordinatedUniversalTimeOffset(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepBasic_CoordinatedUniversalTimeOffset(Handle(StepBasic_CoordinatedUniversalTimeOffset)* nativeHandle);

// Methods PUBLIC

//! Returns a CoordinatedUniversalTimeOffset <br>
OCStepBasic_CoordinatedUniversalTimeOffset();


virtual /*instead*/  void Init(Standard_Integer aHourOffset, System::Boolean hasAminuteOffset, Standard_Integer aMinuteOffset, OCStepBasic_AheadOrBehind aSense) ;


 /*instead*/  void SetHourOffset(Standard_Integer aHourOffset) ;


 /*instead*/  Standard_Integer HourOffset() ;


 /*instead*/  void SetMinuteOffset(Standard_Integer aMinuteOffset) ;


 /*instead*/  void UnSetMinuteOffset() ;


 /*instead*/  Standard_Integer MinuteOffset() ;


 /*instead*/  System::Boolean HasMinuteOffset() ;


 /*instead*/  void SetSense(OCStepBasic_AheadOrBehind aSense) ;


 /*instead*/  OCStepBasic_AheadOrBehind Sense() ;

~OCStepBasic_CoordinatedUniversalTimeOffset()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
