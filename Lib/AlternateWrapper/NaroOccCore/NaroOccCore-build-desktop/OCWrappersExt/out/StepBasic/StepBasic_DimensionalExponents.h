// File generated by CPPExt (Transient)
//
#ifndef _StepBasic_DimensionalExponents_OCWrappers_HeaderFile
#define _StepBasic_DimensionalExponents_OCWrappers_HeaderFile

// include the wrapped class
#include <StepBasic_DimensionalExponents.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{




public ref class OCStepBasic_DimensionalExponents : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCStepBasic_DimensionalExponents(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepBasic_DimensionalExponents(Handle(StepBasic_DimensionalExponents)* nativeHandle);

// Methods PUBLIC

//! Returns a DimensionalExponents <br>
OCStepBasic_DimensionalExponents();


virtual /*instead*/  void Init(Standard_Real aLengthExponent, Standard_Real aMassExponent, Standard_Real aTimeExponent, Standard_Real aElectricCurrentExponent, Standard_Real aThermodynamicTemperatureExponent, Standard_Real aAmountOfSubstanceExponent, Standard_Real aLuminousIntensityExponent) ;


 /*instead*/  void SetLengthExponent(Standard_Real aLengthExponent) ;


 /*instead*/  Standard_Real LengthExponent() ;


 /*instead*/  void SetMassExponent(Standard_Real aMassExponent) ;


 /*instead*/  Standard_Real MassExponent() ;


 /*instead*/  void SetTimeExponent(Standard_Real aTimeExponent) ;


 /*instead*/  Standard_Real TimeExponent() ;


 /*instead*/  void SetElectricCurrentExponent(Standard_Real aElectricCurrentExponent) ;


 /*instead*/  Standard_Real ElectricCurrentExponent() ;


 /*instead*/  void SetThermodynamicTemperatureExponent(Standard_Real aThermodynamicTemperatureExponent) ;


 /*instead*/  Standard_Real ThermodynamicTemperatureExponent() ;


 /*instead*/  void SetAmountOfSubstanceExponent(Standard_Real aAmountOfSubstanceExponent) ;


 /*instead*/  Standard_Real AmountOfSubstanceExponent() ;


 /*instead*/  void SetLuminousIntensityExponent(Standard_Real aLuminousIntensityExponent) ;


 /*instead*/  Standard_Real LuminousIntensityExponent() ;

~OCStepBasic_DimensionalExponents()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
