// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepTool_CORRISO.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../GeomAdaptor/GeomAdaptor_Surface.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopTools/TopTools_DataMapOfOrientedShapeInteger.h"
#include "TopOpeBRepTool_C2DF.h"
#include "../TopoDS/TopoDS_Vertex.h"


using namespace OCNaroWrappers;

OCTopOpeBRepTool_CORRISO::OCTopOpeBRepTool_CORRISO(TopOpeBRepTool_CORRISO* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepTool_CORRISO::OCTopOpeBRepTool_CORRISO() 
{
  nativeHandle = new TopOpeBRepTool_CORRISO();
}

OCTopOpeBRepTool_CORRISO::OCTopOpeBRepTool_CORRISO(OCNaroWrappers::OCTopoDS_Face^ FRef) 
{
  nativeHandle = new TopOpeBRepTool_CORRISO(*((TopoDS_Face*)FRef->Handle));
}

OCTopoDS_Face^ OCTopOpeBRepTool_CORRISO::Fref()
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = ((TopOpeBRepTool_CORRISO*)nativeHandle)->Fref();
  return gcnew OCTopoDS_Face(tmp);
}

OCGeomAdaptor_Surface^ OCTopOpeBRepTool_CORRISO::GASref()
{
  GeomAdaptor_Surface* tmp = new GeomAdaptor_Surface();
  *tmp = ((TopOpeBRepTool_CORRISO*)nativeHandle)->GASref();
  return gcnew OCGeomAdaptor_Surface(tmp);
}

 System::Boolean OCTopOpeBRepTool_CORRISO::Refclosed(Standard_Integer x, Standard_Real& xperiod)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->Refclosed(x, xperiod));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::Init(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->Init(*((TopoDS_Shape*)S->Handle)));
}

OCTopoDS_Shape^ OCTopOpeBRepTool_CORRISO::S()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRepTool_CORRISO*)nativeHandle)->S();
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopTools_ListOfShape^ OCTopOpeBRepTool_CORRISO::Eds()
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((TopOpeBRepTool_CORRISO*)nativeHandle)->Eds();
  return gcnew OCTopTools_ListOfShape(tmp);
}

 System::Boolean OCTopOpeBRepTool_CORRISO::UVClosed()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->UVClosed());
}

 Standard_Real OCTopOpeBRepTool_CORRISO::Tol(Standard_Integer I, Standard_Real tol3d)
{
  return ((TopOpeBRepTool_CORRISO*)nativeHandle)->Tol(I, tol3d);
}

 System::Boolean OCTopOpeBRepTool_CORRISO::PurgeFyClosingE(OCNaroWrappers::OCTopTools_ListOfShape^ ClEds, OCNaroWrappers::OCTopTools_ListOfShape^ fyClEds)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->PurgeFyClosingE(*((TopTools_ListOfShape*)ClEds->Handle), *((TopTools_ListOfShape*)fyClEds->Handle)));
}

 Standard_Integer OCTopOpeBRepTool_CORRISO::EdgeOUTofBoundsUV(OCNaroWrappers::OCTopoDS_Edge^ E, System::Boolean onU, Standard_Real tolx, Standard_Real& parspE)
{
  return ((TopOpeBRepTool_CORRISO*)nativeHandle)->EdgeOUTofBoundsUV(*((TopoDS_Edge*)E->Handle), OCConverter::BooleanToStandardBoolean(onU), tolx, parspE);
}

 System::Boolean OCTopOpeBRepTool_CORRISO::EdgesOUTofBoundsUV(OCNaroWrappers::OCTopTools_ListOfShape^ EdsToCheck, System::Boolean onU, Standard_Real tolx, OCNaroWrappers::OCTopTools_DataMapOfOrientedShapeInteger^ FyEds)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->EdgesOUTofBoundsUV(*((TopTools_ListOfShape*)EdsToCheck->Handle), OCConverter::BooleanToStandardBoolean(onU), tolx, *((TopTools_DataMapOfOrientedShapeInteger*)FyEds->Handle)));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::EdgeWithFaultyUV(OCNaroWrappers::OCTopoDS_Edge^ E, Standard_Integer& Ivfaulty)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->EdgeWithFaultyUV(*((TopoDS_Edge*)E->Handle), Ivfaulty));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::EdgesWithFaultyUV(OCNaroWrappers::OCTopTools_ListOfShape^ EdsToCheck, Standard_Integer nfybounds, OCNaroWrappers::OCTopTools_DataMapOfOrientedShapeInteger^ FyEds, System::Boolean stopatfirst)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->EdgesWithFaultyUV(*((TopTools_ListOfShape*)EdsToCheck->Handle), nfybounds, *((TopTools_DataMapOfOrientedShapeInteger*)FyEds->Handle), OCConverter::BooleanToStandardBoolean(stopatfirst)));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::EdgeWithFaultyUV(OCNaroWrappers::OCTopTools_ListOfShape^ EdsToCheck, Standard_Integer nfybounds, OCNaroWrappers::OCTopoDS_Shape^ fyE, Standard_Integer& Ifaulty)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->EdgeWithFaultyUV(*((TopTools_ListOfShape*)EdsToCheck->Handle), nfybounds, *((TopoDS_Shape*)fyE->Handle), Ifaulty));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::TrslUV(System::Boolean onU, OCNaroWrappers::OCTopTools_DataMapOfOrientedShapeInteger^ FyEds)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->TrslUV(OCConverter::BooleanToStandardBoolean(onU), *((TopTools_DataMapOfOrientedShapeInteger*)FyEds->Handle)));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::GetnewS(OCNaroWrappers::OCTopoDS_Face^ newS)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->GetnewS(*((TopoDS_Face*)newS->Handle)));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::UVRep(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopOpeBRepTool_C2DF^ C2DF)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->UVRep(*((TopoDS_Edge*)E->Handle), *((TopOpeBRepTool_C2DF*)C2DF->Handle)));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::SetUVRep(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopOpeBRepTool_C2DF^ C2DF)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->SetUVRep(*((TopoDS_Edge*)E->Handle), *((TopOpeBRepTool_C2DF*)C2DF->Handle)));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::Connexity(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopTools_ListOfShape^ Eds)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->Connexity(*((TopoDS_Vertex*)V->Handle), *((TopTools_ListOfShape*)Eds->Handle)));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::SetConnexity(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopTools_ListOfShape^ Eds)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->SetConnexity(*((TopoDS_Vertex*)V->Handle), *((TopTools_ListOfShape*)Eds->Handle)));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::AddNewConnexity(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->AddNewConnexity(*((TopoDS_Vertex*)V->Handle), *((TopoDS_Edge*)E->Handle)));
}

 System::Boolean OCTopOpeBRepTool_CORRISO::RemoveOldConnexity(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepTool_CORRISO*)nativeHandle)->RemoveOldConnexity(*((TopoDS_Vertex*)V->Handle), *((TopoDS_Edge*)E->Handle)));
}


