// File generated by CPPExt (MPV)
//
#ifndef _TopOpeBRepTool_PurgeInternalEdges_OCWrappers_HeaderFile
#define _TopOpeBRepTool_PurgeInternalEdges_OCWrappers_HeaderFile

// include native header
#include <TopOpeBRepTool_PurgeInternalEdges.hxx>
#include "../Converter.h"


#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_DataMapOfShapeListOfShape.h"
#include "../TopTools/TopTools_IndexedDataMapOfShapeListOfShape.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopTools_DataMapOfShapeListOfShape;


//! remove from  a shape, the  internal edges that are <br>
//!          not  connected to any face in  the shape.   We can <br>
//!             get  the    list   of      the    edges  as   a <br>
//!          DataMapOfShapeListOfShape with a Face of the Shape <br>
//!          as  the key and  a  list of internal  edges as the <br>
//!           value.  The list   of internal edges  means edges <br>
//!          that are  not connected to any  face in the shape. <br>
//! <br>
//!          Example of use          : <br>
//!               TopTools_DataMapOfShapeListOfShape     mymap; <br>
//!               TopOpeBRepTool_PurgeInternalEdges <br>
//!               mypurgealgo(mysolid); mypurgealgo.GetFaces(mymap); <br>
//! <br>
public ref class OCTopOpeBRepTool_PurgeInternalEdges  {

protected:
  TopOpeBRepTool_PurgeInternalEdges* nativeHandle;
  OCTopOpeBRepTool_PurgeInternalEdges(OCDummy^) {};

public:
  property TopOpeBRepTool_PurgeInternalEdges* Handle
  {
    TopOpeBRepTool_PurgeInternalEdges* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopOpeBRepTool_PurgeInternalEdges(TopOpeBRepTool_PurgeInternalEdges* nativeHandle);

// Methods PUBLIC

//! Initialize   members and  begin  exploration   of  shape <br>
//!          depending of the value of PerformNow <br>
OCTopOpeBRepTool_PurgeInternalEdges(OCNaroWrappers::OCTopoDS_Shape^ theShape, System::Boolean PerformNow);

//! returns  the list  internal edges associated  with <br>
//!          the faces of the  myShape. If PerformNow was False <br>
//!          when created, then call the private Perform method <br>
//!          that do the main job. <br>
 /*instead*/  void Faces(OCNaroWrappers::OCTopTools_DataMapOfShapeListOfShape^ theMapFacLstEdg) ;

//! returns myShape modified with the list of internal <br>
//!          edges removed from it. <br>
 /*instead*/  OCTopoDS_Shape^ Shape() ;

//! returns the number of edges candidate to be removed <br>
 /*instead*/  Standard_Integer NbEdges() ;

//! returns False  if the list  of internal  edges has <br>
//!          not been extracted <br>
 /*instead*/  System::Boolean IsDone() ;

//!  Using   the list  of internal edge    from each face, <br>
//!           rebuild myShape by removing thoses edges. <br>
//! <br>
 /*instead*/  void Perform() ;

~OCTopOpeBRepTool_PurgeInternalEdges()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
