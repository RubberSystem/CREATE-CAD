// File generated by CPPExt (CPP file)
//

#include "StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "StepGeom_HArray1OfCartesianPoint.h"
#include "StepGeom_BSplineCurveWithKnots.h"
#include "StepGeom_RationalBSplineCurve.h"
#include "../TColStd/TColStd_HArray1OfInteger.h"
#include "../TColStd/TColStd_HArray1OfReal.h"


using namespace OCNaroWrappers;

OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve(StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve* nativeHandle) : OCStepGeom_BSplineCurve((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve() : OCStepGeom_BSplineCurve((OCDummy^)nullptr)

{
  nativeHandle = new StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve();
}

 void OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, Standard_Integer aDegree, OCNaroWrappers::OCStepGeom_HArray1OfCartesianPoint^ aControlPointsList, OCStepGeom_BSplineCurveForm aCurveForm, OCStepData_Logical aClosedCurve, OCStepData_Logical aSelfIntersect)
{
  ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), aDegree, *((Handle_StepGeom_HArray1OfCartesianPoint*)aControlPointsList->Handle), (StepGeom_BSplineCurveForm)aCurveForm, (StepData_Logical)aClosedCurve, (StepData_Logical)aSelfIntersect);
}

 void OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, Standard_Integer aDegree, OCNaroWrappers::OCStepGeom_HArray1OfCartesianPoint^ aControlPointsList, OCStepGeom_BSplineCurveForm aCurveForm, OCStepData_Logical aClosedCurve, OCStepData_Logical aSelfIntersect, OCNaroWrappers::OCStepGeom_BSplineCurveWithKnots^ aBSplineCurveWithKnots, OCNaroWrappers::OCStepGeom_RationalBSplineCurve^ aRationalBSplineCurve)
{
  ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), aDegree, *((Handle_StepGeom_HArray1OfCartesianPoint*)aControlPointsList->Handle), (StepGeom_BSplineCurveForm)aCurveForm, (StepData_Logical)aClosedCurve, (StepData_Logical)aSelfIntersect, *((StepGeom_BSplineCurveWithKnots*)aBSplineCurveWithKnots->Handle), *((StepGeom_RationalBSplineCurve*)aRationalBSplineCurve->Handle));
}

 void OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, Standard_Integer aDegree, OCNaroWrappers::OCStepGeom_HArray1OfCartesianPoint^ aControlPointsList, OCStepGeom_BSplineCurveForm aCurveForm, OCStepData_Logical aClosedCurve, OCStepData_Logical aSelfIntersect, OCNaroWrappers::OCTColStd_HArray1OfInteger^ aKnotMultiplicities, OCNaroWrappers::OCTColStd_HArray1OfReal^ aKnots, OCStepGeom_KnotType aKnotSpec, OCNaroWrappers::OCTColStd_HArray1OfReal^ aWeightsData)
{
  ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), aDegree, *((Handle_StepGeom_HArray1OfCartesianPoint*)aControlPointsList->Handle), (StepGeom_BSplineCurveForm)aCurveForm, (StepData_Logical)aClosedCurve, (StepData_Logical)aSelfIntersect, *((Handle_TColStd_HArray1OfInteger*)aKnotMultiplicities->Handle), *((Handle_TColStd_HArray1OfReal*)aKnots->Handle), (StepGeom_KnotType)aKnotSpec, *((Handle_TColStd_HArray1OfReal*)aWeightsData->Handle));
}

 void OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::SetBSplineCurveWithKnots(OCNaroWrappers::OCStepGeom_BSplineCurveWithKnots^ aBSplineCurveWithKnots)
{
  ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->SetBSplineCurveWithKnots(*((StepGeom_BSplineCurveWithKnots*)aBSplineCurveWithKnots->Handle));
}

OCStepGeom_BSplineCurveWithKnots^ OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::BSplineCurveWithKnots()
{
  StepGeom_BSplineCurveWithKnots* tmp = new StepGeom_BSplineCurveWithKnots();
  *tmp = ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->BSplineCurveWithKnots();
  return gcnew OCStepGeom_BSplineCurveWithKnots(tmp);
}

 void OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::SetRationalBSplineCurve(OCNaroWrappers::OCStepGeom_RationalBSplineCurve^ aRationalBSplineCurve)
{
  ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->SetRationalBSplineCurve(*((StepGeom_RationalBSplineCurve*)aRationalBSplineCurve->Handle));
}

OCStepGeom_RationalBSplineCurve^ OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::RationalBSplineCurve()
{
  StepGeom_RationalBSplineCurve* tmp = new StepGeom_RationalBSplineCurve();
  *tmp = ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->RationalBSplineCurve();
  return gcnew OCStepGeom_RationalBSplineCurve(tmp);
}

 void OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::SetKnotMultiplicities(OCNaroWrappers::OCTColStd_HArray1OfInteger^ aKnotMultiplicities)
{
  ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->SetKnotMultiplicities(*((Handle_TColStd_HArray1OfInteger*)aKnotMultiplicities->Handle));
}

OCTColStd_HArray1OfInteger^ OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::KnotMultiplicities()
{
  Handle(TColStd_HArray1OfInteger) tmp = ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->KnotMultiplicities();
  return gcnew OCTColStd_HArray1OfInteger(&tmp);
}

 Standard_Integer OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::KnotMultiplicitiesValue(Standard_Integer num)
{
  return ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->KnotMultiplicitiesValue(num);
}

 Standard_Integer OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::NbKnotMultiplicities()
{
  return ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->NbKnotMultiplicities();
}

 void OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::SetKnots(OCNaroWrappers::OCTColStd_HArray1OfReal^ aKnots)
{
  ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->SetKnots(*((Handle_TColStd_HArray1OfReal*)aKnots->Handle));
}

OCTColStd_HArray1OfReal^ OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::Knots()
{
  Handle(TColStd_HArray1OfReal) tmp = ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->Knots();
  return gcnew OCTColStd_HArray1OfReal(&tmp);
}

 Standard_Real OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::KnotsValue(Standard_Integer num)
{
  return ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->KnotsValue(num);
}

 Standard_Integer OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::NbKnots()
{
  return ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->NbKnots();
}

 void OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::SetKnotSpec(OCStepGeom_KnotType aKnotSpec)
{
  ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->SetKnotSpec((StepGeom_KnotType)aKnotSpec);
}

 OCStepGeom_KnotType OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::KnotSpec()
{
  return (OCStepGeom_KnotType)(((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->KnotSpec());
}

 void OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::SetWeightsData(OCNaroWrappers::OCTColStd_HArray1OfReal^ aWeightsData)
{
  ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->SetWeightsData(*((Handle_TColStd_HArray1OfReal*)aWeightsData->Handle));
}

OCTColStd_HArray1OfReal^ OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::WeightsData()
{
  Handle(TColStd_HArray1OfReal) tmp = ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->WeightsData();
  return gcnew OCTColStd_HArray1OfReal(&tmp);
}

 Standard_Real OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::WeightsDataValue(Standard_Integer num)
{
  return ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->WeightsDataValue(num);
}

 Standard_Integer OCStepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve::NbWeightsData()
{
  return ((StepGeom_BSplineCurveWithKnotsAndRationalBSplineCurve*)nativeHandle)->NbWeightsData();
}


