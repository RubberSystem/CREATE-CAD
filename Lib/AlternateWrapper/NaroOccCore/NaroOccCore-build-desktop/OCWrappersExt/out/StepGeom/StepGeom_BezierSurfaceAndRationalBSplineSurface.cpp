// File generated by CPPExt (CPP file)
//

#include "StepGeom_BezierSurfaceAndRationalBSplineSurface.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "StepGeom_HArray2OfCartesianPoint.h"
#include "StepGeom_BezierSurface.h"
#include "StepGeom_RationalBSplineSurface.h"
#include "../TColStd/TColStd_HArray2OfReal.h"


using namespace OCNaroWrappers;

OCStepGeom_BezierSurfaceAndRationalBSplineSurface::OCStepGeom_BezierSurfaceAndRationalBSplineSurface(StepGeom_BezierSurfaceAndRationalBSplineSurface* nativeHandle) : OCStepGeom_BSplineSurface((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCStepGeom_BezierSurfaceAndRationalBSplineSurface::OCStepGeom_BezierSurfaceAndRationalBSplineSurface() : OCStepGeom_BSplineSurface((OCDummy^)nullptr)

{
  nativeHandle = new StepGeom_BezierSurfaceAndRationalBSplineSurface();
}

 void OCStepGeom_BezierSurfaceAndRationalBSplineSurface::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, Standard_Integer aUDegree, Standard_Integer aVDegree, OCNaroWrappers::OCStepGeom_HArray2OfCartesianPoint^ aControlPointsList, OCStepGeom_BSplineSurfaceForm aSurfaceForm, OCStepData_Logical aUClosed, OCStepData_Logical aVClosed, OCStepData_Logical aSelfIntersect)
{
  ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), aUDegree, aVDegree, *((Handle_StepGeom_HArray2OfCartesianPoint*)aControlPointsList->Handle), (StepGeom_BSplineSurfaceForm)aSurfaceForm, (StepData_Logical)aUClosed, (StepData_Logical)aVClosed, (StepData_Logical)aSelfIntersect);
}

 void OCStepGeom_BezierSurfaceAndRationalBSplineSurface::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, Standard_Integer aUDegree, Standard_Integer aVDegree, OCNaroWrappers::OCStepGeom_HArray2OfCartesianPoint^ aControlPointsList, OCStepGeom_BSplineSurfaceForm aSurfaceForm, OCStepData_Logical aUClosed, OCStepData_Logical aVClosed, OCStepData_Logical aSelfIntersect, OCNaroWrappers::OCStepGeom_BezierSurface^ aBezierSurface, OCNaroWrappers::OCStepGeom_RationalBSplineSurface^ aRationalBSplineSurface)
{
  ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), aUDegree, aVDegree, *((Handle_StepGeom_HArray2OfCartesianPoint*)aControlPointsList->Handle), (StepGeom_BSplineSurfaceForm)aSurfaceForm, (StepData_Logical)aUClosed, (StepData_Logical)aVClosed, (StepData_Logical)aSelfIntersect, *((StepGeom_BezierSurface*)aBezierSurface->Handle), *((StepGeom_RationalBSplineSurface*)aRationalBSplineSurface->Handle));
}

 void OCStepGeom_BezierSurfaceAndRationalBSplineSurface::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, Standard_Integer aUDegree, Standard_Integer aVDegree, OCNaroWrappers::OCStepGeom_HArray2OfCartesianPoint^ aControlPointsList, OCStepGeom_BSplineSurfaceForm aSurfaceForm, OCStepData_Logical aUClosed, OCStepData_Logical aVClosed, OCStepData_Logical aSelfIntersect, OCNaroWrappers::OCTColStd_HArray2OfReal^ aWeightsData)
{
  ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), aUDegree, aVDegree, *((Handle_StepGeom_HArray2OfCartesianPoint*)aControlPointsList->Handle), (StepGeom_BSplineSurfaceForm)aSurfaceForm, (StepData_Logical)aUClosed, (StepData_Logical)aVClosed, (StepData_Logical)aSelfIntersect, *((Handle_TColStd_HArray2OfReal*)aWeightsData->Handle));
}

 void OCStepGeom_BezierSurfaceAndRationalBSplineSurface::SetBezierSurface(OCNaroWrappers::OCStepGeom_BezierSurface^ aBezierSurface)
{
  ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->SetBezierSurface(*((StepGeom_BezierSurface*)aBezierSurface->Handle));
}

OCStepGeom_BezierSurface^ OCStepGeom_BezierSurfaceAndRationalBSplineSurface::BezierSurface()
{
  StepGeom_BezierSurface* tmp = new StepGeom_BezierSurface();
  *tmp = ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->BezierSurface();
  return gcnew OCStepGeom_BezierSurface(tmp);
}

 void OCStepGeom_BezierSurfaceAndRationalBSplineSurface::SetRationalBSplineSurface(OCNaroWrappers::OCStepGeom_RationalBSplineSurface^ aRationalBSplineSurface)
{
  ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->SetRationalBSplineSurface(*((StepGeom_RationalBSplineSurface*)aRationalBSplineSurface->Handle));
}

OCStepGeom_RationalBSplineSurface^ OCStepGeom_BezierSurfaceAndRationalBSplineSurface::RationalBSplineSurface()
{
  StepGeom_RationalBSplineSurface* tmp = new StepGeom_RationalBSplineSurface();
  *tmp = ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->RationalBSplineSurface();
  return gcnew OCStepGeom_RationalBSplineSurface(tmp);
}

 void OCStepGeom_BezierSurfaceAndRationalBSplineSurface::SetWeightsData(OCNaroWrappers::OCTColStd_HArray2OfReal^ aWeightsData)
{
  ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->SetWeightsData(*((Handle_TColStd_HArray2OfReal*)aWeightsData->Handle));
}

OCTColStd_HArray2OfReal^ OCStepGeom_BezierSurfaceAndRationalBSplineSurface::WeightsData()
{
  Handle(TColStd_HArray2OfReal) tmp = ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->WeightsData();
  return gcnew OCTColStd_HArray2OfReal(&tmp);
}

 Standard_Real OCStepGeom_BezierSurfaceAndRationalBSplineSurface::WeightsDataValue(Standard_Integer num1, Standard_Integer num2)
{
  return ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->WeightsDataValue(num1, num2);
}

 Standard_Integer OCStepGeom_BezierSurfaceAndRationalBSplineSurface::NbWeightsDataI()
{
  return ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->NbWeightsDataI();
}

 Standard_Integer OCStepGeom_BezierSurfaceAndRationalBSplineSurface::NbWeightsDataJ()
{
  return ((StepGeom_BezierSurfaceAndRationalBSplineSurface*)nativeHandle)->NbWeightsDataJ();
}


