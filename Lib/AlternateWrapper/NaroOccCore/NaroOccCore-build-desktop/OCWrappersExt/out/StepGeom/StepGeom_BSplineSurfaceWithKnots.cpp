// File generated by CPPExt (CPP file)
//

#include "StepGeom_BSplineSurfaceWithKnots.h"
#include "../Converter.h"
#include "../TColStd/TColStd_HArray1OfInteger.h"
#include "../TColStd/TColStd_HArray1OfReal.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "StepGeom_HArray2OfCartesianPoint.h"


using namespace OCNaroWrappers;

OCStepGeom_BSplineSurfaceWithKnots::OCStepGeom_BSplineSurfaceWithKnots(StepGeom_BSplineSurfaceWithKnots* nativeHandle) : OCStepGeom_BSplineSurface((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCStepGeom_BSplineSurfaceWithKnots::OCStepGeom_BSplineSurfaceWithKnots() : OCStepGeom_BSplineSurface((OCDummy^)nullptr)

{
  nativeHandle = new StepGeom_BSplineSurfaceWithKnots();
}

 void OCStepGeom_BSplineSurfaceWithKnots::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, Standard_Integer aUDegree, Standard_Integer aVDegree, OCNaroWrappers::OCStepGeom_HArray2OfCartesianPoint^ aControlPointsList, OCStepGeom_BSplineSurfaceForm aSurfaceForm, OCStepData_Logical aUClosed, OCStepData_Logical aVClosed, OCStepData_Logical aSelfIntersect)
{
  ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), aUDegree, aVDegree, *((Handle_StepGeom_HArray2OfCartesianPoint*)aControlPointsList->Handle), (StepGeom_BSplineSurfaceForm)aSurfaceForm, (StepData_Logical)aUClosed, (StepData_Logical)aVClosed, (StepData_Logical)aSelfIntersect);
}

 void OCStepGeom_BSplineSurfaceWithKnots::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, Standard_Integer aUDegree, Standard_Integer aVDegree, OCNaroWrappers::OCStepGeom_HArray2OfCartesianPoint^ aControlPointsList, OCStepGeom_BSplineSurfaceForm aSurfaceForm, OCStepData_Logical aUClosed, OCStepData_Logical aVClosed, OCStepData_Logical aSelfIntersect, OCNaroWrappers::OCTColStd_HArray1OfInteger^ aUMultiplicities, OCNaroWrappers::OCTColStd_HArray1OfInteger^ aVMultiplicities, OCNaroWrappers::OCTColStd_HArray1OfReal^ aUKnots, OCNaroWrappers::OCTColStd_HArray1OfReal^ aVKnots, OCStepGeom_KnotType aKnotSpec)
{
  ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), aUDegree, aVDegree, *((Handle_StepGeom_HArray2OfCartesianPoint*)aControlPointsList->Handle), (StepGeom_BSplineSurfaceForm)aSurfaceForm, (StepData_Logical)aUClosed, (StepData_Logical)aVClosed, (StepData_Logical)aSelfIntersect, *((Handle_TColStd_HArray1OfInteger*)aUMultiplicities->Handle), *((Handle_TColStd_HArray1OfInteger*)aVMultiplicities->Handle), *((Handle_TColStd_HArray1OfReal*)aUKnots->Handle), *((Handle_TColStd_HArray1OfReal*)aVKnots->Handle), (StepGeom_KnotType)aKnotSpec);
}

 void OCStepGeom_BSplineSurfaceWithKnots::SetUMultiplicities(OCNaroWrappers::OCTColStd_HArray1OfInteger^ aUMultiplicities)
{
  ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->SetUMultiplicities(*((Handle_TColStd_HArray1OfInteger*)aUMultiplicities->Handle));
}

OCTColStd_HArray1OfInteger^ OCStepGeom_BSplineSurfaceWithKnots::UMultiplicities()
{
  Handle(TColStd_HArray1OfInteger) tmp = ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->UMultiplicities();
  return gcnew OCTColStd_HArray1OfInteger(&tmp);
}

 Standard_Integer OCStepGeom_BSplineSurfaceWithKnots::UMultiplicitiesValue(Standard_Integer num)
{
  return ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->UMultiplicitiesValue(num);
}

 Standard_Integer OCStepGeom_BSplineSurfaceWithKnots::NbUMultiplicities()
{
  return ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->NbUMultiplicities();
}

 void OCStepGeom_BSplineSurfaceWithKnots::SetVMultiplicities(OCNaroWrappers::OCTColStd_HArray1OfInteger^ aVMultiplicities)
{
  ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->SetVMultiplicities(*((Handle_TColStd_HArray1OfInteger*)aVMultiplicities->Handle));
}

OCTColStd_HArray1OfInteger^ OCStepGeom_BSplineSurfaceWithKnots::VMultiplicities()
{
  Handle(TColStd_HArray1OfInteger) tmp = ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->VMultiplicities();
  return gcnew OCTColStd_HArray1OfInteger(&tmp);
}

 Standard_Integer OCStepGeom_BSplineSurfaceWithKnots::VMultiplicitiesValue(Standard_Integer num)
{
  return ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->VMultiplicitiesValue(num);
}

 Standard_Integer OCStepGeom_BSplineSurfaceWithKnots::NbVMultiplicities()
{
  return ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->NbVMultiplicities();
}

 void OCStepGeom_BSplineSurfaceWithKnots::SetUKnots(OCNaroWrappers::OCTColStd_HArray1OfReal^ aUKnots)
{
  ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->SetUKnots(*((Handle_TColStd_HArray1OfReal*)aUKnots->Handle));
}

OCTColStd_HArray1OfReal^ OCStepGeom_BSplineSurfaceWithKnots::UKnots()
{
  Handle(TColStd_HArray1OfReal) tmp = ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->UKnots();
  return gcnew OCTColStd_HArray1OfReal(&tmp);
}

 Standard_Real OCStepGeom_BSplineSurfaceWithKnots::UKnotsValue(Standard_Integer num)
{
  return ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->UKnotsValue(num);
}

 Standard_Integer OCStepGeom_BSplineSurfaceWithKnots::NbUKnots()
{
  return ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->NbUKnots();
}

 void OCStepGeom_BSplineSurfaceWithKnots::SetVKnots(OCNaroWrappers::OCTColStd_HArray1OfReal^ aVKnots)
{
  ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->SetVKnots(*((Handle_TColStd_HArray1OfReal*)aVKnots->Handle));
}

OCTColStd_HArray1OfReal^ OCStepGeom_BSplineSurfaceWithKnots::VKnots()
{
  Handle(TColStd_HArray1OfReal) tmp = ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->VKnots();
  return gcnew OCTColStd_HArray1OfReal(&tmp);
}

 Standard_Real OCStepGeom_BSplineSurfaceWithKnots::VKnotsValue(Standard_Integer num)
{
  return ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->VKnotsValue(num);
}

 Standard_Integer OCStepGeom_BSplineSurfaceWithKnots::NbVKnots()
{
  return ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->NbVKnots();
}

 void OCStepGeom_BSplineSurfaceWithKnots::SetKnotSpec(OCStepGeom_KnotType aKnotSpec)
{
  ((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->SetKnotSpec((StepGeom_KnotType)aKnotSpec);
}

 OCStepGeom_KnotType OCStepGeom_BSplineSurfaceWithKnots::KnotSpec()
{
  return (OCStepGeom_KnotType)(((StepGeom_BSplineSurfaceWithKnots*)nativeHandle)->KnotSpec());
}


