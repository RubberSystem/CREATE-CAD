// File generated by CPPExt (MPV)
//
#ifndef _BndLib_AddSurface_OCWrappers_HeaderFile
#define _BndLib_AddSurface_OCWrappers_HeaderFile

// include native header
#include <BndLib_AddSurface.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCAdaptor3d_Surface;
ref class OCBnd_Box;


//! computes the box from a surface <br>
//! Functions to add a surface to a bounding box. <br>
//!  The surface is defined from a Geom surface. <br>
public ref class OCBndLib_AddSurface  {

protected:
  BndLib_AddSurface* nativeHandle;
  OCBndLib_AddSurface(OCDummy^) {};

public:
  property BndLib_AddSurface* Handle
  {
    BndLib_AddSurface* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBndLib_AddSurface(BndLib_AddSurface* nativeHandle);

// Methods PUBLIC

//! Adds to the bounding box B the surface S <br>
//! B is then enlarged by the tolerance value Tol. <br>
//! Note: depending on the type of curve, one of the following <br>
//! representations of the surface S is used to include it in the bounding box B: <br>
//! -   an exact representation if S is built from a plane, a <br>
//!   cylinder, a cone, a sphere or a torus, <br>
//! -   the poles of the surface if S is built from a Bezier <br>
//!   surface or a BSpline surface, <br>
//! -   the points of an approximation of the surface S in <br>
//!   cases other than offset surfaces; <br>
//! -   in the case of an offset surface, the basis surface is first <br>
//!   included according to the previous rules; then the <br>
//!   bounding box is enlarged by the offset value. <br>
//!   Warning <br>
//! Do not use these functions to add a non-finite surface to <br>
//! the bounding box B. <br>
//! If UMin, UMax, VMin or VMax is an infinite value B will become WholeSpace. <br>
//! S is an adapted surface, that is, an object which is an interface between: <br>
//! -   the services provided by a surface from the package Geom <br>
//! -   and those required of the surface by the computation algorithm. <br>
//!   The adapted surface is created in the following way: <br>
//!    Handle(Geom_Surface) mysurface = ... ; <br>
//!    GeomAdaptor_Surface S(mysurface); <br>
//! The bounding box B is then enlarged by adding this surface: <br>
//!    Bnd_Box B; <br>
//! // ... <br>
//!    Standard_Real Tol = ... ; <br>
//!    AddSurface::Add ( S, Tol, B ); <br>
static /*instead*/  void Add(OCNaroWrappers::OCAdaptor3d_Surface^ S, Standard_Real Tol, OCNaroWrappers::OCBnd_Box^ B) ;

//! Adds to the bounding box B the surface S <br>
//! the patch of the surface S limited in the u parametric <br>
//!   direction by the two parameter values UMin, UMax, and <br>
//!   in the v parametric direction by the two parameter <br>
//!   values VMin, VMax. <br>
//! Note: depending on the type of curve, one of the following <br>
//! representations of the surface S is used to include it in the bounding box B: <br>
//! -   an exact representation if S is built from a plane, a <br>
//!   cylinder, a cone, a sphere or a torus, <br>
//! -   the poles of the surface if S is built from a Bezier <br>
//!   surface or a BSpline surface, <br>
//! -   the points of an approximation of the surface S in <br>
//!   cases other than offset surfaces; <br>
//! -   in the case of an offset surface, the basis surface is first <br>
//!   included according to the previous rules; then the <br>
//!   bounding box is enlarged by the offset value. <br>
//!   Warning <br>
//! Do not use these functions to add a non-finite surface to <br>
//! the bounding box B. <br>
//! If UMin, UMax, VMin or VMax is an infinite value B will become WholeSpace. <br>
//! S is an adapted surface, that is, an object which is an interface between: <br>
//! -   the services provided by a surface from the package Geom <br>
//! -   and those required of the surface by the computation algorithm. <br>
//!   The adapted surface is created in the following way: <br>
//!    Handle(Geom_Surface) mysurface = ... ; <br>
//!    GeomAdaptor_Surface S(mysurface); <br>
//! The bounding box B is then enlarged by adding this surface: <br>
//!    Bnd_Box B; <br>
//! // ... <br>
//!    Standard_Real Tol = ... ; <br>
//!    AddSurface::Add ( S, Tol, B ); <br>
static /*instead*/  void Add(OCNaroWrappers::OCAdaptor3d_Surface^ S, Standard_Real UMin, Standard_Real UMax, Standard_Real VMin, Standard_Real VMax, Standard_Real Tol, OCNaroWrappers::OCBnd_Box^ B) ;

~OCBndLib_AddSurface()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
