// File generated by CPPExt (MPV)
//
#ifndef _BndLib_Add3dCurve_OCWrappers_HeaderFile
#define _BndLib_Add3dCurve_OCWrappers_HeaderFile

// include native header
#include <BndLib_Add3dCurve.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCAdaptor3d_Curve;
ref class OCBnd_Box;


//! Computes the bounding box for a curve in 3d. <br>
//! Functions to add a 3D curve to a bounding box. <br>
//! The 3D curve is defined from a Geom curve. <br>
public ref class OCBndLib_Add3dCurve  {

protected:
  BndLib_Add3dCurve* nativeHandle;
  OCBndLib_Add3dCurve(OCDummy^) {};

public:
  property BndLib_Add3dCurve* Handle
  {
    BndLib_Add3dCurve* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBndLib_Add3dCurve(BndLib_Add3dCurve* nativeHandle);

// Methods PUBLIC

//! Adds to the bounding box B the curve C <br>
//! B is then enlarged by the tolerance value Tol. <br>
//! Note: depending on the type of curve, one of the following <br>
//! representations of the curve C is used to include it in the bounding box B: <br>
//! -   an exact representation if C is built from a line, a circle   or a conic curve, <br>
//! -   the poles of the curve if C is built from a Bezier curve or   a BSpline curve, <br>
//!   if not, the points of an approximation of the curve C. <br>
//! Warning <br>
//! C is an adapted curve, that is, an object which is an interface between: <br>
//! -   the services provided by a 3D curve from the package   Geom <br>
//! -   and those required of the curve by the computation algorithm. <br>
//!  The adapted curve is created in the following way: <br>
//!    Handle(Geom_Curve) mycurve = ... ; <br>
//!    GeomAdaptor_Curve C(mycurve); <br>
//! The bounding box B is then enlarged by adding it: <br>
//!    Bnd_Box B; <br>
//! // ... <br>
//!    Standard_Real Tol = ... ; <br>
//!    Add3dCurve::Add ( C, Tol, B ); <br>
//! Exceptions <br>
//! Standard_Failure if the curve is built from: <br>
//! -   a Geom_Line, or <br>
//! -   a Geom_Parabola, or <br>
//! -   a Geom_Hyperbola, <br>
//! and P1 and P2 are either two negative infinite real <br>
//! numbers, or two positive infinite real numbers. <br>
static /*instead*/  void Add(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Tol, OCNaroWrappers::OCBnd_Box^ B) ;

//! Adds to the bounding box B the curve C <br>
//! the arc of the curve C limited by the two parameter values P1 and P2. <br>
//! Note: depending on the type of curve, one of the following <br>
//! representations of the curve C is used to include it in the bounding box B: <br>
//! -   an exact representation if C is built from a line, a circle   or a conic curve, <br>
//! -   the poles of the curve if C is built from a Bezier curve or   a BSpline curve, <br>
//!   if not, the points of an approximation of the curve C. <br>
//! Warning <br>
//! C is an adapted curve, that is, an object which is an interface between: <br>
//! -   the services provided by a 3D curve from the package   Geom <br>
//! -   and those required of the curve by the computation algorithm. <br>
//!  The adapted curve is created in the following way: <br>
//!    Handle(Geom_Curve) mycurve = ... ; <br>
//!    GeomAdaptor_Curve C(mycurve); <br>
//! The bounding box B is then enlarged by adding it: <br>
//!    Bnd_Box B; <br>
//! // ... <br>
//!    Standard_Real Tol = ... ; <br>
//!    Add3dCurve::Add ( C, Tol, B ); <br>
//! Exceptions <br>
//! Standard_Failure if the curve is built from: <br>
//! -   a Geom_Line, or <br>
//! -   a Geom_Parabola, or <br>
//! -   a Geom_Hyperbola, <br>
//! and P1 and P2 are either two negative infinite real <br>
//! numbers, or two positive infinite real numbers. <br>
static /*instead*/  void Add(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U1, Standard_Real U2, Standard_Real Tol, OCNaroWrappers::OCBnd_Box^ B) ;

~OCBndLib_Add3dCurve()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
