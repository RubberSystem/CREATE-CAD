// File generated by CPPExt (MPV)
//
#ifndef _BndLib_Add2dCurve_OCWrappers_HeaderFile
#define _BndLib_Add2dCurve_OCWrappers_HeaderFile

// include native header
#include <BndLib_Add2dCurve.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCAdaptor2d_Curve2d;
ref class OCBnd_Box2d;


//! Computes the bounding box for a curve in 2d . <br>
//! Functions to add a 2D curve to a bounding box. <br>
//! The 2D curve is defined from a Geom2d curve. <br>
public ref class OCBndLib_Add2dCurve  {

protected:
  BndLib_Add2dCurve* nativeHandle;
  OCBndLib_Add2dCurve(OCDummy^) {};

public:
  property BndLib_Add2dCurve* Handle
  {
    BndLib_Add2dCurve* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBndLib_Add2dCurve(BndLib_Add2dCurve* nativeHandle);

// Methods PUBLIC

//! Adds to the bounding box B the curve C <br>
//!  B is then enlarged by the tolerance value Tol. <br>
//! Note: depending on the type of curve, one of the following <br>
//! representations of the curve C is used to include it in the bounding box B: <br>
//! -   an exact representation if C is built from a line, a circle   or a conic curve, <br>
//! -   the poles of the curve if C is built from a Bezier curve or   a BSpline curve, <br>
//! -   if not, the points of an approximation of the curve C. <br>
//! Warning <br>
//! C is an adapted curve, that is, an object which is an interface between: <br>
//! -   the services provided by a 2D curve from the package Geom2d <br>
//! -   and those required of the curve by the computation algorithm. <br>
//!  The adapted curve is created in the following way: <br>
//!    Handle(Geom2d_Curve) mycurve = ... <br>
//! ; <br>
//!    Geom2dAdaptor_Curve C(mycurve); <br>
//! The bounding box B is then enlarged by adding it: <br>
//!    Bnd_Box2d B; <br>
//! // ... <br>
//!    Standard_Real Tol = ... ; <br>
//!    Add2dCurve::Add ( C, Tol, B ); <br>
//! Exceptions <br>
//! Standard_Failure if the curve is built from: <br>
//! -   a Geom_Line, or <br>
//! -   a Geom_Parabola, or <br>
//! -   a Geom_Hyperbola, <br>
//! and P1 and P2 are either two negative infinite real <br>
//! numbers, or two positive infinite real numbers. <br>
static /*instead*/  void Add(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Tol, OCNaroWrappers::OCBnd_Box2d^ B) ;

//! Adds to the bounding box Bthe arc of the curve C limited by the two parameter <br>
//!  values P1 and P2. <br>
//!  B is then enlarged by the tolerance value Tol. <br>
//! Note: depending on the type of curve, one of the following <br>
//! representations of the curve C is used to include it in the bounding box B: <br>
//! -   an exact representation if C is built from a line, a circle   or a conic curve, <br>
//! -   the poles of the curve if C is built from a Bezier curve or   a BSpline curve, <br>
//! -   if not, the points of an approximation of the curve C. <br>
//! Warning <br>
//! C is an adapted curve, that is, an object which is an interface between: <br>
//! -   the services provided by a 2D curve from the package Geom2d <br>
//! -   and those required of the curve by the computation algorithm. <br>
//!  The adapted curve is created in the following way: <br>
//!    Handle(Geom2d_Curve) mycurve = ... <br>
//! ; <br>
//!    Geom2dAdaptor_Curve C(mycurve); <br>
//! The bounding box B is then enlarged by adding it: <br>
//!    Bnd_Box2d B; <br>
//! // ... <br>
//!    Standard_Real Tol = ... ; <br>
//!    Add2dCurve::Add ( C, Tol, B ); <br>
//! Exceptions <br>
//! Standard_Failure if the curve is built from: <br>
//! -   a Geom_Line, or <br>
//! -   a Geom_Parabola, or <br>
//! -   a Geom_Hyperbola, <br>
//! and P1 and P2 are either two negative infinite real <br>
//! numbers, or two positive infinite real numbers. <br>
static /*instead*/  void Add(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real U1, Standard_Real U2, Standard_Real Tol, OCNaroWrappers::OCBnd_Box2d^ B) ;

~OCBndLib_Add2dCurve()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
