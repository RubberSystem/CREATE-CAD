// File generated by CPPExt (MPV)
//
#ifndef _TFunction_Iterator_OCWrappers_HeaderFile
#define _TFunction_Iterator_OCWrappers_HeaderFile

// include native header
#include <TFunction_Iterator.hxx>
#include "../Converter.h"


#include "../TDF/TDF_LabelList.h"
#include "../TDF/TDF_LabelMap.h"
#include "TFunction_ExecutionStatus.h"


namespace OCNaroWrappers
{

ref class OCTFunction_Scope;
ref class OCTDF_Label;
ref class OCTDF_LabelList;


//! Iterator of the graph of functions <br>
public ref class OCTFunction_Iterator  {

protected:
  TFunction_Iterator* nativeHandle;
  OCTFunction_Iterator(OCDummy^) {};

public:
  property TFunction_Iterator* Handle
  {
    TFunction_Iterator* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTFunction_Iterator(TFunction_Iterator* nativeHandle);

// Methods PUBLIC

//! An empty constructor. <br>
OCTFunction_Iterator();

//! A constructor. <br>
//!          Initializes the iterator. <br>
OCTFunction_Iterator(OCNaroWrappers::OCTDF_Label^ Access);

//! Initializes the Iterator. <br>
virtual /*instead*/  void Init(OCNaroWrappers::OCTDF_Label^ Access) ;

//! Defines the mode of iteration - usage or not of the execution status. <br>
//!          If the iterator takes into account the execution status, <br>
//!          the method ::Current() returns only "not executed" functions <br>
//!          while their status is not changed. <br>
//!          If the iterator ignores the execution status, <br>
//!          the method ::Current() returns the functions <br>
//!          following their dependencies and ignoring the execution status. <br>
 /*instead*/  void SetUsageOfExecutionStatus(System::Boolean usage) ;

//! Returns usage of execution status by the iterator. <br>
 /*instead*/  System::Boolean GetUsageOfExecutionStatus() ;

//! Analyses the graph of dependencies and returns <br>
//!          maximum number of threads may be used to calculate the model. <br>
virtual /*instead*/  Standard_Integer GetMaxNbThreads() ;

//! Returns the current list of functions. <br>
//!          If the iterator uses the execution status, <br>
//!          the returned list contains only the functions <br>
//!          with "not executed" status. <br>
virtual /*instead*/  OCTDF_LabelList^ Current() ;

//! Returns false if the graph of functions is fully iterated. <br>
virtual /*instead*/  System::Boolean More() ;

//! Switches the iterator to the next list of current functions. <br>
virtual /*instead*/  void Next() ;

//! A help-function aimed to help the user to check the status of retrurned function. <br>
//!          It calls TFunction_GraphNode::GetStatus() inside. <br>
 /*instead*/  OCTFunction_ExecutionStatus GetStatus(OCNaroWrappers::OCTDF_Label^ func) ;

//! A help-function aimed to help the user to change the execution status of a function. <br>
//!          It calls TFunction_GraphNode::SetStatus() inside. <br>
 /*instead*/  void SetStatus(OCNaroWrappers::OCTDF_Label^ func, OCTFunction_ExecutionStatus status) ;


 /*instead*/  Standard_OStream& Dump(Standard_OStream& OS) ;

~OCTFunction_Iterator()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
