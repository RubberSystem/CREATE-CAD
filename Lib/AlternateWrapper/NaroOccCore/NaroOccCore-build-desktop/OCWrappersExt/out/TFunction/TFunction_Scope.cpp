// File generated by CPPExt (CPP file)
//

#include "TFunction_Scope.h"
#include "../Converter.h"
#include "../TDF/TDF_Label.h"
#include "../Standard/Standard_GUID.h"
#include "TFunction_Logbook.h"
#include "../TDF/TDF_Attribute.h"
#include "../TDF/TDF_RelocationTable.h"
#include "TFunction_DoubleMapOfIntegerLabel.h"


using namespace OCNaroWrappers;

OCTFunction_Scope::OCTFunction_Scope(Handle(TFunction_Scope)* nativeHandle) : OCTDF_Attribute((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TFunction_Scope(*nativeHandle);
}

OCTFunction_Scope^ OCTFunction_Scope::Set(OCNaroWrappers::OCTDF_Label^ Access)
{
  Handle(TFunction_Scope) tmp = TFunction_Scope::Set(*((TDF_Label*)Access->Handle));
  return gcnew OCTFunction_Scope(&tmp);
}

OCStandard_GUID^ OCTFunction_Scope::GetID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = TFunction_Scope::GetID();
  return gcnew OCStandard_GUID(tmp);
}

OCTFunction_Scope::OCTFunction_Scope() : OCTDF_Attribute((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TFunction_Scope(new TFunction_Scope());
}

 System::Boolean OCTFunction_Scope::AddFunction(OCNaroWrappers::OCTDF_Label^ L)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TFunction_Scope*)nativeHandle))->AddFunction(*((TDF_Label*)L->Handle)));
}

 System::Boolean OCTFunction_Scope::RemoveFunction(OCNaroWrappers::OCTDF_Label^ L)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TFunction_Scope*)nativeHandle))->RemoveFunction(*((TDF_Label*)L->Handle)));
}

 System::Boolean OCTFunction_Scope::RemoveFunction(Standard_Integer ID)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TFunction_Scope*)nativeHandle))->RemoveFunction(ID));
}

 void OCTFunction_Scope::RemoveAllFunctions()
{
  (*((Handle_TFunction_Scope*)nativeHandle))->RemoveAllFunctions();
}

 System::Boolean OCTFunction_Scope::HasFunction(Standard_Integer ID)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TFunction_Scope*)nativeHandle))->HasFunction(ID));
}

 System::Boolean OCTFunction_Scope::HasFunction(OCNaroWrappers::OCTDF_Label^ L)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TFunction_Scope*)nativeHandle))->HasFunction(*((TDF_Label*)L->Handle)));
}

 Standard_Integer OCTFunction_Scope::GetFunction(OCNaroWrappers::OCTDF_Label^ L)
{
  return (*((Handle_TFunction_Scope*)nativeHandle))->GetFunction(*((TDF_Label*)L->Handle));
}

OCTDF_Label^ OCTFunction_Scope::GetFunction(Standard_Integer ID)
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = (*((Handle_TFunction_Scope*)nativeHandle))->GetFunction(ID);
  return gcnew OCTDF_Label(tmp);
}

OCTFunction_Logbook^ OCTFunction_Scope::GetLogbook()
{
  TFunction_Logbook* tmp = new TFunction_Logbook();
  *tmp = (*((Handle_TFunction_Scope*)nativeHandle))->GetLogbook();
  return gcnew OCTFunction_Logbook(tmp);
}

OCStandard_GUID^ OCTFunction_Scope::ID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = (*((Handle_TFunction_Scope*)nativeHandle))->ID();
  return gcnew OCStandard_GUID(tmp);
}

 void OCTFunction_Scope::Restore(OCNaroWrappers::OCTDF_Attribute^ with)
{
  (*((Handle_TFunction_Scope*)nativeHandle))->Restore(*((Handle_TDF_Attribute*)with->Handle));
}

 void OCTFunction_Scope::Paste(OCNaroWrappers::OCTDF_Attribute^ into, OCNaroWrappers::OCTDF_RelocationTable^ RT)
{
  (*((Handle_TFunction_Scope*)nativeHandle))->Paste(*((Handle_TDF_Attribute*)into->Handle), *((Handle_TDF_RelocationTable*)RT->Handle));
}

OCTDF_Attribute^ OCTFunction_Scope::NewEmpty()
{
  Handle(TDF_Attribute) tmp = (*((Handle_TFunction_Scope*)nativeHandle))->NewEmpty();
  return gcnew OCTDF_Attribute(&tmp);
}

 Standard_OStream& OCTFunction_Scope::Dump(Standard_OStream& anOS)
{
  return (*((Handle_TFunction_Scope*)nativeHandle))->Dump(anOS);
}

OCTFunction_DoubleMapOfIntegerLabel^ OCTFunction_Scope::GetFunctions()
{
  TFunction_DoubleMapOfIntegerLabel* tmp = new TFunction_DoubleMapOfIntegerLabel(0);
  *tmp = (*((Handle_TFunction_Scope*)nativeHandle))->GetFunctions();
  return gcnew OCTFunction_DoubleMapOfIntegerLabel(tmp);
}

OCTFunction_DoubleMapOfIntegerLabel^ OCTFunction_Scope::ChangeFunctions()
{
  TFunction_DoubleMapOfIntegerLabel* tmp = new TFunction_DoubleMapOfIntegerLabel(0);
  *tmp = (*((Handle_TFunction_Scope*)nativeHandle))->ChangeFunctions();
  return gcnew OCTFunction_DoubleMapOfIntegerLabel(tmp);
}

 void OCTFunction_Scope::SetFreeID(Standard_Integer ID)
{
  (*((Handle_TFunction_Scope*)nativeHandle))->SetFreeID(ID);
}

 Standard_Integer OCTFunction_Scope::GetFreeID()
{
  return (*((Handle_TFunction_Scope*)nativeHandle))->GetFreeID();
}


