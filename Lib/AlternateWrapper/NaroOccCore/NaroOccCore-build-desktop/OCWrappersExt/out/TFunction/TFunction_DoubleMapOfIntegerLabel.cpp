// File generated by CPPExt (CPP file)
//

#include "TFunction_DoubleMapOfIntegerLabel.h"
#include "../Converter.h"
#include "../TDF/TDF_Label.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "../TDF/TDF_LabelMapHasher.h"
#include "TFunction_DoubleMapNodeOfDoubleMapOfIntegerLabel.h"
#include "TFunction_DoubleMapIteratorOfDoubleMapOfIntegerLabel.h"


using namespace OCNaroWrappers;

OCTFunction_DoubleMapOfIntegerLabel::OCTFunction_DoubleMapOfIntegerLabel(TFunction_DoubleMapOfIntegerLabel* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTFunction_DoubleMapOfIntegerLabel::OCTFunction_DoubleMapOfIntegerLabel(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TFunction_DoubleMapOfIntegerLabel(NbBuckets);
}

OCTFunction_DoubleMapOfIntegerLabel^ OCTFunction_DoubleMapOfIntegerLabel::Assign(OCNaroWrappers::OCTFunction_DoubleMapOfIntegerLabel^ Other)
{
  TFunction_DoubleMapOfIntegerLabel* tmp = new TFunction_DoubleMapOfIntegerLabel(0);
  *tmp = ((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->Assign(*((TFunction_DoubleMapOfIntegerLabel*)Other->Handle));
  return gcnew OCTFunction_DoubleMapOfIntegerLabel(tmp);
}

 void OCTFunction_DoubleMapOfIntegerLabel::ReSize(Standard_Integer NbBuckets)
{
  ((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->ReSize(NbBuckets);
}

 void OCTFunction_DoubleMapOfIntegerLabel::Bind(Standard_Integer K1, OCNaroWrappers::OCTDF_Label^ K2)
{
  ((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->Bind(K1, *((TDF_Label*)K2->Handle));
}

 System::Boolean OCTFunction_DoubleMapOfIntegerLabel::AreBound(Standard_Integer K1, OCNaroWrappers::OCTDF_Label^ K2)
{
  return OCConverter::StandardBooleanToBoolean(((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->AreBound(K1, *((TDF_Label*)K2->Handle)));
}

 System::Boolean OCTFunction_DoubleMapOfIntegerLabel::IsBound1(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->IsBound1(K));
}

 System::Boolean OCTFunction_DoubleMapOfIntegerLabel::IsBound2(OCNaroWrappers::OCTDF_Label^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->IsBound2(*((TDF_Label*)K->Handle)));
}

OCTDF_Label^ OCTFunction_DoubleMapOfIntegerLabel::Find1(Standard_Integer K)
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->Find1(K);
  return gcnew OCTDF_Label(tmp);
}

 Standard_Integer OCTFunction_DoubleMapOfIntegerLabel::Find2(OCNaroWrappers::OCTDF_Label^ K)
{
  return ((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->Find2(*((TDF_Label*)K->Handle));
}

 System::Boolean OCTFunction_DoubleMapOfIntegerLabel::UnBind1(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->UnBind1(K));
}

 System::Boolean OCTFunction_DoubleMapOfIntegerLabel::UnBind2(OCNaroWrappers::OCTDF_Label^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TFunction_DoubleMapOfIntegerLabel*)nativeHandle)->UnBind2(*((TDF_Label*)K->Handle)));
}


