// File generated by CPPExt (Transient)
//
#ifndef _TFunction_Function_OCWrappers_HeaderFile
#define _TFunction_Function_OCWrappers_HeaderFile

// include the wrapped class
#include <TFunction_Function.hxx>
#include "../Converter.h"

#include "../TDF/TDF_Attribute.h"

#include "../Standard/Standard_GUID.h"


namespace OCNaroWrappers
{

ref class OCTDF_Label;
ref class OCStandard_GUID;
ref class OCTDF_Attribute;
ref class OCTDF_RelocationTable;
ref class OCTDF_DataSet;


//! Provides the following two services <br>
//! -   a link to an evaluation driver <br>
//! -   the means of providing a link between a <br>
//!   function and an evaluation driver. <br>
public ref class OCTFunction_Function : OCTDF_Attribute {

protected:
  // dummy constructor;
  OCTFunction_Function(OCDummy^) : OCTDF_Attribute((OCDummy^)nullptr) {};

public:

// constructor from native
OCTFunction_Function(Handle(TFunction_Function)* nativeHandle);

// Methods PUBLIC

//! Static methods: <br>
//!          ============== <br>//! Finds or Creates a function attribute on the label <L>. <br>
//!          Returns the function attribute. <br>
static /*instead*/  OCTFunction_Function^ Set(OCNaroWrappers::OCTDF_Label^ L) ;

//! Finds or Creates a function attribute on the label <L>. <br>
//!          Sets a driver ID to the function. <br>
//!          Returns the function attribute. <br>
static /*instead*/  OCTFunction_Function^ Set(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCStandard_GUID^ DriverID) ;

//! Returns the GUID for functions. <br>//! Returns a function found on the label. <br>//! Instance methods: <br>
//!          ================ <br>
static /*instead*/  OCStandard_GUID^ GetID() ;


OCTFunction_Function();

//! Returns the GUID for this function's driver. <br>
 /*instead*/  OCStandard_GUID^ GetDriverGUID() ;

//! Sets the driver for this function as that <br>
//! indentified by the GUID guid. <br>
 /*instead*/  void SetDriverGUID(OCNaroWrappers::OCStandard_GUID^ guid) ;

//! Returns true if the execution failed <br>
 /*instead*/  System::Boolean Failed() ;

//! Sets the failed index. <br>
 /*instead*/  void SetFailure(Standard_Integer mode) ;


//! Returns an index of failure if the execution of this function failed. <br>
//! If this integer value is 0, no failure has occurred. <br>//! Implementation of Attribute methods: <br>
//!          =================================== <br>
 /*instead*/  Standard_Integer GetFailure() ;


 /*instead*/  OCStandard_GUID^ ID() ;


virtual /*instead*/  void Restore(OCNaroWrappers::OCTDF_Attribute^ with) ;


virtual /*instead*/  void Paste(OCNaroWrappers::OCTDF_Attribute^ into, OCNaroWrappers::OCTDF_RelocationTable^ RT) ;


virtual /*instead*/  OCTDF_Attribute^ NewEmpty() ;


virtual /*instead*/  void References(OCNaroWrappers::OCTDF_DataSet^ aDataSet) override;


virtual /*instead*/  Standard_OStream& Dump(Standard_OStream& anOS) override;

~OCTFunction_Function()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
