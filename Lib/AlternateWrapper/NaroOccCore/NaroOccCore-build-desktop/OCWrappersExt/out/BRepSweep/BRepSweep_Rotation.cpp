// File generated by CPPExt (CPP file)
//

#include "BRepSweep_Rotation.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../Sweep/Sweep_NumShape.h"
#include "../TopLoc/TopLoc_Location.h"
#include "../gp/gp_Ax1.h"


using namespace OCNaroWrappers;

OCBRepSweep_Rotation::OCBRepSweep_Rotation(BRepSweep_Rotation* nativeHandle) : OCBRepSweep_Trsf((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepSweep_Rotation::OCBRepSweep_Rotation(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCSweep_NumShape^ N, OCNaroWrappers::OCTopLoc_Location^ L, OCNaroWrappers::OCgp_Ax1^ A, Quantity_PlaneAngle D, System::Boolean C) : OCBRepSweep_Trsf((OCDummy^)nullptr)

{
  nativeHandle = new BRepSweep_Rotation(*((TopoDS_Shape*)S->Handle), *((Sweep_NumShape*)N->Handle), *((TopLoc_Location*)L->Handle), *((gp_Ax1*)A->Handle), D, OCConverter::BooleanToStandardBoolean(C));
}

OCTopoDS_Shape^ OCBRepSweep_Rotation::MakeEmptyVertex(OCNaroWrappers::OCTopoDS_Shape^ aGenV, OCNaroWrappers::OCSweep_NumShape^ aDirV)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepSweep_Rotation*)nativeHandle)->MakeEmptyVertex(*((TopoDS_Shape*)aGenV->Handle), *((Sweep_NumShape*)aDirV->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCBRepSweep_Rotation::MakeEmptyDirectingEdge(OCNaroWrappers::OCTopoDS_Shape^ aGenV, OCNaroWrappers::OCSweep_NumShape^ aDirE)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepSweep_Rotation*)nativeHandle)->MakeEmptyDirectingEdge(*((TopoDS_Shape*)aGenV->Handle), *((Sweep_NumShape*)aDirE->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCBRepSweep_Rotation::MakeEmptyGeneratingEdge(OCNaroWrappers::OCTopoDS_Shape^ aGenE, OCNaroWrappers::OCSweep_NumShape^ aDirV)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepSweep_Rotation*)nativeHandle)->MakeEmptyGeneratingEdge(*((TopoDS_Shape*)aGenE->Handle), *((Sweep_NumShape*)aDirV->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

 void OCBRepSweep_Rotation::SetParameters(OCNaroWrappers::OCTopoDS_Shape^ aNewFace, OCNaroWrappers::OCTopoDS_Shape^ aNewVertex, OCNaroWrappers::OCTopoDS_Shape^ aGenF, OCNaroWrappers::OCTopoDS_Shape^ aGenV, OCNaroWrappers::OCSweep_NumShape^ aDirV)
{
  ((BRepSweep_Rotation*)nativeHandle)->SetParameters(*((TopoDS_Shape*)aNewFace->Handle), *((TopoDS_Shape*)aNewVertex->Handle), *((TopoDS_Shape*)aGenF->Handle), *((TopoDS_Shape*)aGenV->Handle), *((Sweep_NumShape*)aDirV->Handle));
}

 void OCBRepSweep_Rotation::SetDirectingParameter(OCNaroWrappers::OCTopoDS_Shape^ aNewEdge, OCNaroWrappers::OCTopoDS_Shape^ aNewVertex, OCNaroWrappers::OCTopoDS_Shape^ aGenV, OCNaroWrappers::OCSweep_NumShape^ aDirE, OCNaroWrappers::OCSweep_NumShape^ aDirV)
{
  ((BRepSweep_Rotation*)nativeHandle)->SetDirectingParameter(*((TopoDS_Shape*)aNewEdge->Handle), *((TopoDS_Shape*)aNewVertex->Handle), *((TopoDS_Shape*)aGenV->Handle), *((Sweep_NumShape*)aDirE->Handle), *((Sweep_NumShape*)aDirV->Handle));
}

 void OCBRepSweep_Rotation::SetGeneratingParameter(OCNaroWrappers::OCTopoDS_Shape^ aNewEdge, OCNaroWrappers::OCTopoDS_Shape^ aNewVertex, OCNaroWrappers::OCTopoDS_Shape^ aGenE, OCNaroWrappers::OCTopoDS_Shape^ aGenV, OCNaroWrappers::OCSweep_NumShape^ aDirV)
{
  ((BRepSweep_Rotation*)nativeHandle)->SetGeneratingParameter(*((TopoDS_Shape*)aNewEdge->Handle), *((TopoDS_Shape*)aNewVertex->Handle), *((TopoDS_Shape*)aGenE->Handle), *((TopoDS_Shape*)aGenV->Handle), *((Sweep_NumShape*)aDirV->Handle));
}

OCTopoDS_Shape^ OCBRepSweep_Rotation::MakeEmptyFace(OCNaroWrappers::OCTopoDS_Shape^ aGenS, OCNaroWrappers::OCSweep_NumShape^ aDirS)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepSweep_Rotation*)nativeHandle)->MakeEmptyFace(*((TopoDS_Shape*)aGenS->Handle), *((Sweep_NumShape*)aDirS->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

 void OCBRepSweep_Rotation::SetPCurve(OCNaroWrappers::OCTopoDS_Shape^ aNewFace, OCNaroWrappers::OCTopoDS_Shape^ aNewEdge, OCNaroWrappers::OCTopoDS_Shape^ aGenF, OCNaroWrappers::OCTopoDS_Shape^ aGenE, OCNaroWrappers::OCSweep_NumShape^ aDirV, OCTopAbs_Orientation orien)
{
  ((BRepSweep_Rotation*)nativeHandle)->SetPCurve(*((TopoDS_Shape*)aNewFace->Handle), *((TopoDS_Shape*)aNewEdge->Handle), *((TopoDS_Shape*)aGenF->Handle), *((TopoDS_Shape*)aGenE->Handle), *((Sweep_NumShape*)aDirV->Handle), (TopAbs_Orientation)orien);
}

 void OCBRepSweep_Rotation::SetGeneratingPCurve(OCNaroWrappers::OCTopoDS_Shape^ aNewFace, OCNaroWrappers::OCTopoDS_Shape^ aNewEdge, OCNaroWrappers::OCTopoDS_Shape^ aGenE, OCNaroWrappers::OCSweep_NumShape^ aDirE, OCNaroWrappers::OCSweep_NumShape^ aDirV, OCTopAbs_Orientation orien)
{
  ((BRepSweep_Rotation*)nativeHandle)->SetGeneratingPCurve(*((TopoDS_Shape*)aNewFace->Handle), *((TopoDS_Shape*)aNewEdge->Handle), *((TopoDS_Shape*)aGenE->Handle), *((Sweep_NumShape*)aDirE->Handle), *((Sweep_NumShape*)aDirV->Handle), (TopAbs_Orientation)orien);
}

 void OCBRepSweep_Rotation::SetDirectingPCurve(OCNaroWrappers::OCTopoDS_Shape^ aNewFace, OCNaroWrappers::OCTopoDS_Shape^ aNewEdge, OCNaroWrappers::OCTopoDS_Shape^ aGenE, OCNaroWrappers::OCTopoDS_Shape^ aGenV, OCNaroWrappers::OCSweep_NumShape^ aDirE, OCTopAbs_Orientation orien)
{
  ((BRepSweep_Rotation*)nativeHandle)->SetDirectingPCurve(*((TopoDS_Shape*)aNewFace->Handle), *((TopoDS_Shape*)aNewEdge->Handle), *((TopoDS_Shape*)aGenE->Handle), *((TopoDS_Shape*)aGenV->Handle), *((Sweep_NumShape*)aDirE->Handle), (TopAbs_Orientation)orien);
}

 OCTopAbs_Orientation OCBRepSweep_Rotation::DirectSolid(OCNaroWrappers::OCTopoDS_Shape^ aGenS, OCNaroWrappers::OCSweep_NumShape^ aDirS)
{
  return (OCTopAbs_Orientation)(((BRepSweep_Rotation*)nativeHandle)->DirectSolid(*((TopoDS_Shape*)aGenS->Handle), *((Sweep_NumShape*)aDirS->Handle)));
}

 System::Boolean OCBRepSweep_Rotation::GGDShapeIsToAdd(OCNaroWrappers::OCTopoDS_Shape^ aNewShape, OCNaroWrappers::OCTopoDS_Shape^ aNewSubShape, OCNaroWrappers::OCTopoDS_Shape^ aGenS, OCNaroWrappers::OCTopoDS_Shape^ aSubGenS, OCNaroWrappers::OCSweep_NumShape^ aDirS)
{
  return OCConverter::StandardBooleanToBoolean(((BRepSweep_Rotation*)nativeHandle)->GGDShapeIsToAdd(*((TopoDS_Shape*)aNewShape->Handle), *((TopoDS_Shape*)aNewSubShape->Handle), *((TopoDS_Shape*)aGenS->Handle), *((TopoDS_Shape*)aSubGenS->Handle), *((Sweep_NumShape*)aDirS->Handle)));
}

 System::Boolean OCBRepSweep_Rotation::GDDShapeIsToAdd(OCNaroWrappers::OCTopoDS_Shape^ aNewShape, OCNaroWrappers::OCTopoDS_Shape^ aNewSubShape, OCNaroWrappers::OCTopoDS_Shape^ aGenS, OCNaroWrappers::OCSweep_NumShape^ aDirS, OCNaroWrappers::OCSweep_NumShape^ aSubDirS)
{
  return OCConverter::StandardBooleanToBoolean(((BRepSweep_Rotation*)nativeHandle)->GDDShapeIsToAdd(*((TopoDS_Shape*)aNewShape->Handle), *((TopoDS_Shape*)aNewSubShape->Handle), *((TopoDS_Shape*)aGenS->Handle), *((Sweep_NumShape*)aDirS->Handle), *((Sweep_NumShape*)aSubDirS->Handle)));
}

 System::Boolean OCBRepSweep_Rotation::SeparatedWires(OCNaroWrappers::OCTopoDS_Shape^ aNewShape, OCNaroWrappers::OCTopoDS_Shape^ aNewSubShape, OCNaroWrappers::OCTopoDS_Shape^ aGenS, OCNaroWrappers::OCTopoDS_Shape^ aSubGenS, OCNaroWrappers::OCSweep_NumShape^ aDirS)
{
  return OCConverter::StandardBooleanToBoolean(((BRepSweep_Rotation*)nativeHandle)->SeparatedWires(*((TopoDS_Shape*)aNewShape->Handle), *((TopoDS_Shape*)aNewSubShape->Handle), *((TopoDS_Shape*)aGenS->Handle), *((TopoDS_Shape*)aSubGenS->Handle), *((Sweep_NumShape*)aDirS->Handle)));
}

OCTopoDS_Shape^ OCBRepSweep_Rotation::SplitShell(OCNaroWrappers::OCTopoDS_Shape^ aNewShape)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepSweep_Rotation*)nativeHandle)->SplitShell(*((TopoDS_Shape*)aNewShape->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

 System::Boolean OCBRepSweep_Rotation::HasShape(OCNaroWrappers::OCTopoDS_Shape^ aGenS, OCNaroWrappers::OCSweep_NumShape^ aDirS)
{
  return OCConverter::StandardBooleanToBoolean(((BRepSweep_Rotation*)nativeHandle)->HasShape(*((TopoDS_Shape*)aGenS->Handle), *((Sweep_NumShape*)aDirS->Handle)));
}

 System::Boolean OCBRepSweep_Rotation::IsInvariant(OCNaroWrappers::OCTopoDS_Shape^ aGenS)
{
  return OCConverter::StandardBooleanToBoolean(((BRepSweep_Rotation*)nativeHandle)->IsInvariant(*((TopoDS_Shape*)aGenS->Handle)));
}

OCgp_Ax1^ OCBRepSweep_Rotation::Axe()
{
  gp_Ax1* tmp = new gp_Ax1();
  *tmp = ((BRepSweep_Rotation*)nativeHandle)->Axe();
  return gcnew OCgp_Ax1(tmp);
}

 Quantity_PlaneAngle OCBRepSweep_Rotation::Angle()
{
  return ((BRepSweep_Rotation*)nativeHandle)->Angle();
}


