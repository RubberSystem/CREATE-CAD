// File generated by CPPExt (Package)
//

#ifndef _GeomTools_OCWrappers_HeaderFile
#define _GeomTools_OCWrappers_HeaderFile

// Include the wrapped header
#include <GeomTools.hxx>

#include "GeomTools_UndefinedTypeHandler.h"
#include "GeomTools_SurfaceSet.h"
#include "GeomTools_CurveSet.h"
#include "GeomTools_Curve2dSet.h"


namespace OCNaroWrappers
{
//! The GeomTools package provides  utilities for Geometry. <br>
//! <br>
//!          *  SurfaceSet,  CurveSet, Curve2dSet  : Tools used <br>
//!          for dumping, writing and reading. <br>
//! <br>
//!          * Methods to dump, write, read curves and surfaces. <br>
public ref class OCGeomTools abstract sealed
{

public:
// Methods

//! Dumps the surface on the stream. <br>
static /*instead*/  void Dump(OCNaroWrappers::OCGeom_Surface^ S, Standard_OStream& OS) ;

//! Writes the surface on the stream. <br>
static /*instead*/  void Write(OCNaroWrappers::OCGeom_Surface^ S, Standard_OStream& OS) ;

//! Reads the surface from the stream. <br>
static /*instead*/  void Read(OCNaroWrappers::OCGeom_Surface^ S, Standard_IStream& IS) ;

//! Dumps the Curve on the stream. <br>
static /*instead*/  void Dump(OCNaroWrappers::OCGeom_Curve^ C, Standard_OStream& OS) ;

//! Writes the Curve on the stream. <br>
static /*instead*/  void Write(OCNaroWrappers::OCGeom_Curve^ C, Standard_OStream& OS) ;

//! Reads the Curve from the stream. <br>
static /*instead*/  void Read(OCNaroWrappers::OCGeom_Curve^ C, Standard_IStream& IS) ;

//! Dumps the Curve on the stream. <br>
static /*instead*/  void Dump(OCNaroWrappers::OCGeom2d_Curve^ C, Standard_OStream& OS) ;

//! Writes the Curve on the stream. <br>
static /*instead*/  void Write(OCNaroWrappers::OCGeom2d_Curve^ C, Standard_OStream& OS) ;

//! Reads the Curve from the stream. <br>
static /*instead*/  void Read(OCNaroWrappers::OCGeom2d_Curve^ C, Standard_IStream& IS) ;


static /*instead*/  void SetUndefinedTypeHandler(OCNaroWrappers::OCGeomTools_UndefinedTypeHandler^ aHandler) ;


static /*instead*/  OCGeomTools_UndefinedTypeHandler^ GetUndefinedTypeHandler() ;


};

}; // OCNaroWrappers

#endif
