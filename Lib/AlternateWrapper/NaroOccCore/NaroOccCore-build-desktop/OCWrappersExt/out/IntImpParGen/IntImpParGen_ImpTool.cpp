// File generated by CPPExt (CPP file)
//

#include "IntImpParGen_ImpTool.h"
#include "../Converter.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Vec2d.h"


using namespace OCNaroWrappers;

OCIntImpParGen_ImpTool::OCIntImpParGen_ImpTool(IntImpParGen_ImpTool* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCgp_Pnt2d^ OCIntImpParGen_ImpTool::Value(Standard_Real U)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = ((IntImpParGen_ImpTool*)nativeHandle)->Value(U);
  return gcnew OCgp_Pnt2d(tmp);
}

 void OCIntImpParGen_ImpTool::D1(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ T)
{
  ((IntImpParGen_ImpTool*)nativeHandle)->D1(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)T->Handle));
}

 void OCIntImpParGen_ImpTool::D2(Standard_Real U, OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Vec2d^ T, OCNaroWrappers::OCgp_Vec2d^ N)
{
  ((IntImpParGen_ImpTool*)nativeHandle)->D2(U, *((gp_Pnt2d*)P->Handle), *((gp_Vec2d*)T->Handle), *((gp_Vec2d*)N->Handle));
}

 Standard_Real OCIntImpParGen_ImpTool::Distance(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  return ((IntImpParGen_ImpTool*)nativeHandle)->Distance(*((gp_Pnt2d*)P->Handle));
}

OCgp_Vec2d^ OCIntImpParGen_ImpTool::GradDistance(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  gp_Vec2d* tmp = new gp_Vec2d();
  *tmp = ((IntImpParGen_ImpTool*)nativeHandle)->GradDistance(*((gp_Pnt2d*)P->Handle));
  return gcnew OCgp_Vec2d(tmp);
}

 Standard_Real OCIntImpParGen_ImpTool::FindParameter(OCNaroWrappers::OCgp_Pnt2d^ P)
{
  return ((IntImpParGen_ImpTool*)nativeHandle)->FindParameter(*((gp_Pnt2d*)P->Handle));
}


