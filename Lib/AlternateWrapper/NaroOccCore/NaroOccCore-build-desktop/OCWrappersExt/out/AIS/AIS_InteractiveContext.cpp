// File generated by CPPExt (CPP file)
//

#include "AIS_InteractiveContext.h"
#include "../Converter.h"
#include "../SelectMgr/SelectMgr_SelectionManager.h"
#include "../PrsMgr/PrsMgr_PresentationManager3d.h"
#include "../V3d/V3d_Viewer.h"
#include "../StdSelect/StdSelect_ViewerSelector3d.h"
#include "AIS_InteractiveObject.h"
#include "../SelectMgr/SelectMgr_OrFilter.h"
#include "../Prs3d/Prs3d_Drawer.h"
#include "../V3d/V3d_View.h"
#include "AIS_LocalContext.h"
#include "../TopLoc/TopLoc_Location.h"
#include "../Quantity/Quantity_Color.h"
#include "AIS_Drawer.h"
#include "../TColStd/TColStd_ListOfInteger.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "../Prs3d/Prs3d_LineAspect.h"
#include "../Prs3d/Prs3d_BasicAspect.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../SelectMgr/SelectMgr_EntityOwner.h"
#include "../SelectMgr/SelectMgr_IndexedMapOfOwner.h"
#include "../Standard/Standard_Transient.h"
#include "../Geom/Geom_Transformation.h"
#include "../SelectMgr/SelectMgr_Filter.h"
#include "../SelectMgr/SelectMgr_ListOfFilter.h"
#include "AIS_ListOfInteractive.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCAIS_InteractiveContext::OCAIS_InteractiveContext(Handle(AIS_InteractiveContext)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AIS_InteractiveContext(*nativeHandle);
}

OCAIS_InteractiveContext::OCAIS_InteractiveContext(OCNaroWrappers::OCV3d_Viewer^ MainViewer) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_InteractiveContext(new AIS_InteractiveContext(*((Handle_V3d_Viewer*)MainViewer->Handle)));
}

OCAIS_InteractiveContext::OCAIS_InteractiveContext(OCNaroWrappers::OCV3d_Viewer^ MainViewer, OCNaroWrappers::OCV3d_Viewer^ Collector) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_InteractiveContext(new AIS_InteractiveContext(*((Handle_V3d_Viewer*)MainViewer->Handle), *((Handle_V3d_Viewer*)Collector->Handle)));
}

 void OCAIS_InteractiveContext::Delete()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Delete();
}

 System::Boolean OCAIS_InteractiveContext::IsCollectorClosed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsCollectorClosed());
}

 void OCAIS_InteractiveContext::CloseCollector()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->CloseCollector();
}

 void OCAIS_InteractiveContext::OpenCollector()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->OpenCollector();
}

 void OCAIS_InteractiveContext::SetAutoActivateSelection(System::Boolean Auto)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetAutoActivateSelection(OCConverter::BooleanToStandardBoolean(Auto));
}

 System::Boolean OCAIS_InteractiveContext::GetAutoActivateSelection()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->GetAutoActivateSelection());
}

 void OCAIS_InteractiveContext::Display(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Display(*((Handle_AIS_InteractiveObject*)anIobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::Display(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, Standard_Integer amode, Standard_Integer aSelectionMode, System::Boolean updateviewer, System::Boolean allowdecomposition)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Display(*((Handle_AIS_InteractiveObject*)anIobj->Handle), amode, aSelectionMode, OCConverter::BooleanToStandardBoolean(updateviewer), OCConverter::BooleanToStandardBoolean(allowdecomposition));
}

 void OCAIS_InteractiveContext::Load(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Integer SelectionMode, System::Boolean AllowDecomp)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Load(*((Handle_AIS_InteractiveObject*)aniobj->Handle), SelectionMode, OCConverter::BooleanToStandardBoolean(AllowDecomp));
}

 void OCAIS_InteractiveContext::Erase(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer, System::Boolean PutInCollector)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Erase(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer), OCConverter::BooleanToStandardBoolean(PutInCollector));
}

 void OCAIS_InteractiveContext::EraseMode(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Integer aMode, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->EraseMode(*((Handle_AIS_InteractiveObject*)aniobj->Handle), aMode, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::EraseAll(System::Boolean PutInCollector, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->EraseAll(OCConverter::BooleanToStandardBoolean(PutInCollector), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::DisplayAll(System::Boolean OnlyFromCollector, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayAll(OCConverter::BooleanToStandardBoolean(OnlyFromCollector), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::DisplayFromCollector(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayFromCollector(*((Handle_AIS_InteractiveObject*)anIObj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::EraseSelected(System::Boolean PutInCollector, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->EraseSelected(OCConverter::BooleanToStandardBoolean(PutInCollector), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::DisplaySelected(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplaySelected(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 System::Boolean OCAIS_InteractiveContext::KeepTemporary(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj, Standard_Integer InWhichLocal)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->KeepTemporary(*((Handle_AIS_InteractiveObject*)anIObj->Handle), InWhichLocal));
}

 void OCAIS_InteractiveContext::Clear(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Clear(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::ClearPrs(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Integer aMode, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ClearPrs(*((Handle_AIS_InteractiveObject*)aniobj->Handle), aMode, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::Remove(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Remove(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::RemoveAll(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->RemoveAll(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::Hilight(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Hilight(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::HilightWithColor(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, OCQuantity_NameOfColor aCol, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->HilightWithColor(*((Handle_AIS_InteractiveObject*)aniobj->Handle), (Quantity_NameOfColor)aCol, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::Unhilight(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Unhilight(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetDisplayPriority(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, Standard_Integer aPriority)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetDisplayPriority(*((Handle_AIS_InteractiveObject*)anIobj->Handle), aPriority);
}

 void OCAIS_InteractiveContext::SetZLayer(OCNaroWrappers::OCAIS_InteractiveObject^ theIObj, Standard_Integer theLayerId)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetZLayer(*((Handle_AIS_InteractiveObject*)theIObj->Handle), theLayerId);
}

 Standard_Integer OCAIS_InteractiveContext::GetZLayer(OCNaroWrappers::OCAIS_InteractiveObject^ theIObj)
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->GetZLayer(*((Handle_AIS_InteractiveObject*)theIObj->Handle));
}

 void OCAIS_InteractiveContext::Redisplay(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer, System::Boolean allmodes)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Redisplay(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer), OCConverter::BooleanToStandardBoolean(allmodes));
}

 void OCAIS_InteractiveContext::Redisplay(OCAIS_KindOfInteractive aTypeOfObject, Standard_Integer Signature, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Redisplay((AIS_KindOfInteractive)aTypeOfObject, Signature, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::RecomputePrsOnly(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, System::Boolean updateviewer, System::Boolean allmodes)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->RecomputePrsOnly(*((Handle_AIS_InteractiveObject*)anIobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer), OCConverter::BooleanToStandardBoolean(allmodes));
}

 void OCAIS_InteractiveContext::RecomputeSelectionOnly(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->RecomputeSelectionOnly(*((Handle_AIS_InteractiveObject*)anIObj->Handle));
}

 void OCAIS_InteractiveContext::Update(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Update(*((Handle_AIS_InteractiveObject*)anIobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetDisplayMode(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Integer aMode, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetDisplayMode(*((Handle_AIS_InteractiveObject*)aniobj->Handle), aMode, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::UnsetDisplayMode(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UnsetDisplayMode(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetSelectionMode(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Integer aMode)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetSelectionMode(*((Handle_AIS_InteractiveObject*)aniobj->Handle), aMode);
}

 void OCAIS_InteractiveContext::UnsetSelectionMode(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UnsetSelectionMode(*((Handle_AIS_InteractiveObject*)aniobj->Handle));
}

 void OCAIS_InteractiveContext::SetSensitivityMode(OCStdSelect_SensitivityMode aMode)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetSensitivityMode((StdSelect_SensitivityMode)aMode);
}

 OCStdSelect_SensitivityMode OCAIS_InteractiveContext::SensitivityMode()
{
  return (OCStdSelect_SensitivityMode)((*((Handle_AIS_InteractiveContext*)nativeHandle))->SensitivityMode());
}

 void OCAIS_InteractiveContext::SetSensitivity(Standard_Real aPrecision)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetSensitivity(aPrecision);
}

 Standard_Real OCAIS_InteractiveContext::Sensitivity()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->Sensitivity();
}

 void OCAIS_InteractiveContext::SetPixelTolerance(Standard_Integer aPrecision)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetPixelTolerance(aPrecision);
}

 Standard_Integer OCAIS_InteractiveContext::PixelTolerance()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->PixelTolerance();
}

 void OCAIS_InteractiveContext::SetLocation(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, OCNaroWrappers::OCTopLoc_Location^ aLocation)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetLocation(*((Handle_AIS_InteractiveObject*)aniobj->Handle), *((TopLoc_Location*)aLocation->Handle));
}

 void OCAIS_InteractiveContext::ResetLocation(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ResetLocation(*((Handle_AIS_InteractiveObject*)aniobj->Handle));
}

 System::Boolean OCAIS_InteractiveContext::HasLocation(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->HasLocation(*((Handle_AIS_InteractiveObject*)aniobj->Handle)));
}

OCTopLoc_Location^ OCAIS_InteractiveContext::Location(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  TopLoc_Location* tmp = new TopLoc_Location();
  *tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->Location(*((Handle_AIS_InteractiveObject*)aniobj->Handle));
  return gcnew OCTopLoc_Location(tmp);
}

 void OCAIS_InteractiveContext::SetCurrentFacingModel(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, OCAspect_TypeOfFacingModel aModel)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetCurrentFacingModel(*((Handle_AIS_InteractiveObject*)aniobj->Handle), (Aspect_TypeOfFacingModel)aModel);
}

 void OCAIS_InteractiveContext::SetColor(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, OCQuantity_NameOfColor aColor, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetColor(*((Handle_AIS_InteractiveObject*)aniobj->Handle), (Quantity_NameOfColor)aColor, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetColor(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, OCNaroWrappers::OCQuantity_Color^ aColor, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetColor(*((Handle_AIS_InteractiveObject*)aniobj->Handle), *((Quantity_Color*)aColor->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::UnsetColor(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UnsetColor(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetWidth(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Real aValue, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetWidth(*((Handle_AIS_InteractiveObject*)aniobj->Handle), aValue, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::UnsetWidth(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UnsetWidth(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetMaterial(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, OCGraphic3d_NameOfMaterial aName, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetMaterial(*((Handle_AIS_InteractiveObject*)aniobj->Handle), (Graphic3d_NameOfMaterial)aName, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::UnsetMaterial(OCNaroWrappers::OCAIS_InteractiveObject^ anObj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UnsetMaterial(*((Handle_AIS_InteractiveObject*)anObj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetTransparency(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Real aValue, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetTransparency(*((Handle_AIS_InteractiveObject*)aniobj->Handle), aValue, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::UnsetTransparency(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UnsetTransparency(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetDegenerateModel(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, OCAspect_TypeOfDegenerateModel aModel, Quantity_Ratio aRatio)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetDegenerateModel(*((Handle_AIS_InteractiveObject*)aniobj->Handle), (Aspect_TypeOfDegenerateModel)aModel, aRatio);
}

 void OCAIS_InteractiveContext::SetDegenerateModel(OCAspect_TypeOfDegenerateModel aModel, Quantity_Ratio aSkipRatio)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetDegenerateModel((Aspect_TypeOfDegenerateModel)aModel, aSkipRatio);
}

 void OCAIS_InteractiveContext::SetLocalAttributes(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, OCNaroWrappers::OCAIS_Drawer^ aDrawer, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetLocalAttributes(*((Handle_AIS_InteractiveObject*)aniobj->Handle), *((Handle_AIS_Drawer*)aDrawer->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::UnsetLocalAttributes(OCNaroWrappers::OCAIS_InteractiveObject^ anObj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UnsetLocalAttributes(*((Handle_AIS_InteractiveObject*)anObj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetPolygonOffsets(OCNaroWrappers::OCAIS_InteractiveObject^ anObj, Standard_Integer aMode, Standard_ShortReal aFactor, Standard_ShortReal aUnits, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetPolygonOffsets(*((Handle_AIS_InteractiveObject*)anObj->Handle), aMode, aFactor, aUnits, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 System::Boolean OCAIS_InteractiveContext::HasPolygonOffsets(OCNaroWrappers::OCAIS_InteractiveObject^ anObj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->HasPolygonOffsets(*((Handle_AIS_InteractiveObject*)anObj->Handle)));
}

 void OCAIS_InteractiveContext::PolygonOffsets(OCNaroWrappers::OCAIS_InteractiveObject^ anObj, Standard_Integer& aMode, Standard_ShortReal& aFactor, Standard_ShortReal& aUnits)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->PolygonOffsets(*((Handle_AIS_InteractiveObject*)anObj->Handle), aMode, aFactor, aUnits);
}

 void OCAIS_InteractiveContext::SetTrihedronSize(Standard_Real aSize, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetTrihedronSize(aSize, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 Standard_Real OCAIS_InteractiveContext::TrihedronSize()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->TrihedronSize();
}

 void OCAIS_InteractiveContext::SetPlaneSize(Standard_Real aSizeX, Standard_Real aSizeY, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetPlaneSize(aSizeX, aSizeY, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetPlaneSize(Standard_Real aSize, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetPlaneSize(aSize, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 System::Boolean OCAIS_InteractiveContext::PlaneSize(Standard_Real& XSize, Standard_Real& YSize)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->PlaneSize(XSize, YSize));
}

 OCAIS_DisplayStatus OCAIS_InteractiveContext::DisplayStatus(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj)
{
  return (OCAIS_DisplayStatus)((*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayStatus(*((Handle_AIS_InteractiveObject*)anIobj->Handle)));
}

OCTColStd_ListOfInteger^ OCAIS_InteractiveContext::DisplayedModes(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  TColStd_ListOfInteger* tmp = new TColStd_ListOfInteger();
  *tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayedModes(*((Handle_AIS_InteractiveObject*)aniobj->Handle));
  return gcnew OCTColStd_ListOfInteger(tmp);
}

 System::Boolean OCAIS_InteractiveContext::IsDisplayed(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsDisplayed(*((Handle_AIS_InteractiveObject*)anIobj->Handle)));
}

 System::Boolean OCAIS_InteractiveContext::IsDisplayed(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Integer aMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsDisplayed(*((Handle_AIS_InteractiveObject*)aniobj->Handle), aMode));
}

 System::Boolean OCAIS_InteractiveContext::IsHilighted(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsHilighted(*((Handle_AIS_InteractiveObject*)aniobj->Handle)));
}

 System::Boolean OCAIS_InteractiveContext::IsHilighted(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, System::Boolean& WithColor, OCQuantity_NameOfColor& theHiCol)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsHilighted(*((Handle_AIS_InteractiveObject*)anIobj->Handle), (Standard_Boolean&)(WithColor), (Quantity_NameOfColor&)theHiCol));
}

 System::Boolean OCAIS_InteractiveContext::IsInCollector(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsInCollector(*((Handle_AIS_InteractiveObject*)anIObj->Handle)));
}

 Standard_Integer OCAIS_InteractiveContext::DisplayPriority(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj)
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayPriority(*((Handle_AIS_InteractiveObject*)anIobj->Handle));
}

 System::Boolean OCAIS_InteractiveContext::HasColor(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->HasColor(*((Handle_AIS_InteractiveObject*)aniobj->Handle)));
}

 OCQuantity_NameOfColor OCAIS_InteractiveContext::Color(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  return (OCQuantity_NameOfColor)((*((Handle_AIS_InteractiveContext*)nativeHandle))->Color(*((Handle_AIS_InteractiveObject*)aniobj->Handle)));
}

 void OCAIS_InteractiveContext::Color(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, OCNaroWrappers::OCQuantity_Color^ acolor)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Color(*((Handle_AIS_InteractiveObject*)aniobj->Handle), *((Quantity_Color*)acolor->Handle));
}

 Standard_Real OCAIS_InteractiveContext::Width(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->Width(*((Handle_AIS_InteractiveObject*)aniobj->Handle));
}

 void OCAIS_InteractiveContext::Status(OCNaroWrappers::OCAIS_InteractiveObject^ anObj, OCNaroWrappers::OCTCollection_ExtendedString^ astatus)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Status(*((Handle_AIS_InteractiveObject*)anObj->Handle), *((TCollection_ExtendedString*)astatus->Handle));
}

 void OCAIS_InteractiveContext::UpdateCurrentViewer()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UpdateCurrentViewer();
}

 void OCAIS_InteractiveContext::UpdateCollector()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UpdateCollector();
}

 Standard_Integer OCAIS_InteractiveContext::DisplayMode()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayMode();
}

 OCQuantity_NameOfColor OCAIS_InteractiveContext::HilightColor()
{
  return (OCQuantity_NameOfColor)((*((Handle_AIS_InteractiveContext*)nativeHandle))->HilightColor());
}

 OCQuantity_NameOfColor OCAIS_InteractiveContext::SelectionColor()
{
  return (OCQuantity_NameOfColor)((*((Handle_AIS_InteractiveContext*)nativeHandle))->SelectionColor());
}

 OCQuantity_NameOfColor OCAIS_InteractiveContext::PreSelectionColor()
{
  return (OCQuantity_NameOfColor)((*((Handle_AIS_InteractiveContext*)nativeHandle))->PreSelectionColor());
}

 OCQuantity_NameOfColor OCAIS_InteractiveContext::DefaultColor()
{
  return (OCQuantity_NameOfColor)((*((Handle_AIS_InteractiveContext*)nativeHandle))->DefaultColor());
}

 OCQuantity_NameOfColor OCAIS_InteractiveContext::SubIntensityColor()
{
  return (OCQuantity_NameOfColor)((*((Handle_AIS_InteractiveContext*)nativeHandle))->SubIntensityColor());
}

 void OCAIS_InteractiveContext::SetHilightColor(OCQuantity_NameOfColor aHiCol)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetHilightColor((Quantity_NameOfColor)aHiCol);
}

 void OCAIS_InteractiveContext::SelectionColor(OCQuantity_NameOfColor aCol)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SelectionColor((Quantity_NameOfColor)aCol);
}

 void OCAIS_InteractiveContext::SetPreselectionColor(OCQuantity_NameOfColor aCol)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetPreselectionColor((Quantity_NameOfColor)aCol);
}

 void OCAIS_InteractiveContext::SetSubIntensityColor(OCQuantity_NameOfColor aCol)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetSubIntensityColor((Quantity_NameOfColor)aCol);
}

 void OCAIS_InteractiveContext::SetDisplayMode(OCAIS_DisplayMode AMode, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetDisplayMode((AIS_DisplayMode)AMode, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetDeviationCoefficient(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Real aCoefficient, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetDeviationCoefficient(*((Handle_AIS_InteractiveObject*)aniobj->Handle), aCoefficient, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetDeviationAngle(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Real anAngle, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetDeviationAngle(*((Handle_AIS_InteractiveObject*)aniobj->Handle), anAngle, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetAngleAndDeviation(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Real anAngle, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetAngleAndDeviation(*((Handle_AIS_InteractiveObject*)aniobj->Handle), anAngle, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetHLRDeviationCoefficient(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Real aCoefficient, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetHLRDeviationCoefficient(*((Handle_AIS_InteractiveObject*)aniobj->Handle), aCoefficient, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetHLRDeviationAngle(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Real anAngle, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetHLRDeviationAngle(*((Handle_AIS_InteractiveObject*)aniobj->Handle), anAngle, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetHLRAngleAndDeviation(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, Standard_Real anAngle, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetHLRAngleAndDeviation(*((Handle_AIS_InteractiveObject*)aniobj->Handle), anAngle, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetDeviationCoefficient(Standard_Real aCoefficient)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetDeviationCoefficient(aCoefficient);
}

 Standard_Real OCAIS_InteractiveContext::DeviationCoefficient()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->DeviationCoefficient();
}

 void OCAIS_InteractiveContext::SetDeviationAngle(Standard_Real anAngle)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetDeviationAngle(anAngle);
}

 Standard_Real OCAIS_InteractiveContext::DeviationAngle()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->DeviationAngle();
}

 void OCAIS_InteractiveContext::SetHLRDeviationCoefficient(Standard_Real aCoefficient)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetHLRDeviationCoefficient(aCoefficient);
}

 Standard_Real OCAIS_InteractiveContext::HLRDeviationCoefficient()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->HLRDeviationCoefficient();
}

 void OCAIS_InteractiveContext::SetHLRAngle(Standard_Real anAngle)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetHLRAngle(anAngle);
}

 Standard_Real OCAIS_InteractiveContext::HLRAngle()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->HLRAngle();
}

 void OCAIS_InteractiveContext::SetHLRAngleAndDeviation(Standard_Real anAngle)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetHLRAngleAndDeviation(anAngle);
}

OCPrs3d_LineAspect^ OCAIS_InteractiveContext::HiddenLineAspect()
{
  Handle(Prs3d_LineAspect) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->HiddenLineAspect();
  return gcnew OCPrs3d_LineAspect(&tmp);
}

 void OCAIS_InteractiveContext::SetHiddenLineAspect(OCNaroWrappers::OCPrs3d_LineAspect^ anAspect)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetHiddenLineAspect(*((Handle_Prs3d_LineAspect*)anAspect->Handle));
}

 System::Boolean OCAIS_InteractiveContext::DrawHiddenLine()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->DrawHiddenLine());
}

 void OCAIS_InteractiveContext::EnableDrawHiddenLine()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->EnableDrawHiddenLine();
}

 void OCAIS_InteractiveContext::DisableDrawHiddenLine()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisableDrawHiddenLine();
}

 void OCAIS_InteractiveContext::SetIsoNumber(Standard_Integer NbIsos, OCAIS_TypeOfIso WhichIsos)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetIsoNumber(NbIsos, (AIS_TypeOfIso)WhichIsos);
}

 Standard_Integer OCAIS_InteractiveContext::IsoNumber(OCAIS_TypeOfIso WhichIsos)
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->IsoNumber((AIS_TypeOfIso)WhichIsos);
}

 void OCAIS_InteractiveContext::IsoOnPlane(System::Boolean SwitchOn)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->IsoOnPlane(OCConverter::BooleanToStandardBoolean(SwitchOn));
}

 System::Boolean OCAIS_InteractiveContext::IsoOnPlane()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsoOnPlane());
}

 void OCAIS_InteractiveContext::SetSelectedAspect(OCNaroWrappers::OCPrs3d_BasicAspect^ anAspect, System::Boolean globalChange, System::Boolean updateViewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetSelectedAspect(*((Handle_Prs3d_BasicAspect*)anAspect->Handle), OCConverter::BooleanToStandardBoolean(globalChange), OCConverter::BooleanToStandardBoolean(updateViewer));
}

 OCAIS_StatusOfDetection OCAIS_InteractiveContext::MoveTo(Standard_Integer XPix, Standard_Integer YPix, OCNaroWrappers::OCV3d_View^ aView)
{
  return (OCAIS_StatusOfDetection)((*((Handle_AIS_InteractiveContext*)nativeHandle))->MoveTo(XPix, YPix, *((Handle_V3d_View*)aView->Handle)));
}

 System::Boolean OCAIS_InteractiveContext::HasNextDetected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->HasNextDetected());
}

 Standard_Integer OCAIS_InteractiveContext::HilightNextDetected(OCNaroWrappers::OCV3d_View^ aView)
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->HilightNextDetected(*((Handle_V3d_View*)aView->Handle));
}

 Standard_Integer OCAIS_InteractiveContext::HilightPreviousDetected(OCNaroWrappers::OCV3d_View^ aView)
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->HilightPreviousDetected(*((Handle_V3d_View*)aView->Handle));
}

 OCAIS_StatusOfPick OCAIS_InteractiveContext::Select(Standard_Integer XPMin, Standard_Integer YPMin, Standard_Integer XPMax, Standard_Integer YPMax, OCNaroWrappers::OCV3d_View^ aView, System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_InteractiveContext*)nativeHandle))->Select(XPMin, YPMin, XPMax, YPMax, *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_InteractiveContext::Select(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCV3d_View^ aView, System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_InteractiveContext*)nativeHandle))->Select(*((TColgp_Array1OfPnt2d*)Polyline->Handle), *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_InteractiveContext::Select(System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_InteractiveContext*)nativeHandle))->Select(OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_InteractiveContext::ShiftSelect(System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_InteractiveContext*)nativeHandle))->ShiftSelect(OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_InteractiveContext::ShiftSelect(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCV3d_View^ aView, System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_InteractiveContext*)nativeHandle))->ShiftSelect(*((TColgp_Array1OfPnt2d*)Polyline->Handle), *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_InteractiveContext::ShiftSelect(Standard_Integer XPMin, Standard_Integer YPMin, Standard_Integer XPMax, Standard_Integer YPMax, OCNaroWrappers::OCV3d_View^ aView, System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_InteractiveContext*)nativeHandle))->ShiftSelect(XPMin, YPMin, XPMax, YPMax, *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 void OCAIS_InteractiveContext::SetToHilightSelected(System::Boolean toHilight)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetToHilightSelected(OCConverter::BooleanToStandardBoolean(toHilight));
}

 System::Boolean OCAIS_InteractiveContext::ToHilightSelected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->ToHilightSelected());
}

 void OCAIS_InteractiveContext::SetCurrentObject(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetCurrentObject(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::AddOrRemoveCurrentObject(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->AddOrRemoveCurrentObject(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::UpdateCurrent()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UpdateCurrent();
}

 System::Boolean OCAIS_InteractiveContext::WasCurrentTouched()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->WasCurrentTouched());
}

 void OCAIS_InteractiveContext::SetOkCurrent()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetOkCurrent();
}

 System::Boolean OCAIS_InteractiveContext::IsCurrent(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsCurrent(*((Handle_AIS_InteractiveObject*)aniobj->Handle)));
}

 void OCAIS_InteractiveContext::InitCurrent()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->InitCurrent();
}

 System::Boolean OCAIS_InteractiveContext::MoreCurrent()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->MoreCurrent());
}

 void OCAIS_InteractiveContext::NextCurrent()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->NextCurrent();
}

OCAIS_InteractiveObject^ OCAIS_InteractiveContext::Current()
{
  Handle(AIS_InteractiveObject) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->Current();
  return gcnew OCAIS_InteractiveObject(&tmp);
}

 Standard_Integer OCAIS_InteractiveContext::NbCurrents()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->NbCurrents();
}

OCAIS_InteractiveObject^ OCAIS_InteractiveContext::FirstCurrentObject()
{
  Handle(AIS_InteractiveObject) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->FirstCurrentObject();
  return gcnew OCAIS_InteractiveObject(&tmp);
}

 void OCAIS_InteractiveContext::HilightCurrents(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->HilightCurrents(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::UnhilightCurrents(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UnhilightCurrents(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::ClearCurrents(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ClearCurrents(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetSelected(OCNaroWrappers::OCAIS_InteractiveObject^ aniObj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetSelected(*((Handle_AIS_InteractiveObject*)aniObj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SetSelectedCurrent()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetSelectedCurrent();
}

 void OCAIS_InteractiveContext::UpdateSelected(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UpdateSelected(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::AddOrRemoveSelected(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->AddOrRemoveSelected(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::HilightSelected(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->HilightSelected(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::UnhilightSelected(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UnhilightSelected(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::ClearSelected(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ClearSelected(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::AddOrRemoveSelected(OCNaroWrappers::OCTopoDS_Shape^ aShape, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->AddOrRemoveSelected(*((TopoDS_Shape*)aShape->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::AddOrRemoveSelected(OCNaroWrappers::OCSelectMgr_EntityOwner^ anOwner, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->AddOrRemoveSelected(*((Handle_SelectMgr_EntityOwner*)anOwner->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 System::Boolean OCAIS_InteractiveContext::IsSelected(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsSelected(*((Handle_AIS_InteractiveObject*)aniobj->Handle)));
}

 void OCAIS_InteractiveContext::InitSelected()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->InitSelected();
}

 System::Boolean OCAIS_InteractiveContext::MoreSelected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->MoreSelected());
}

 void OCAIS_InteractiveContext::NextSelected()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->NextSelected();
}

 Standard_Integer OCAIS_InteractiveContext::NbSelected()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->NbSelected();
}

 System::Boolean OCAIS_InteractiveContext::HasSelectedShape()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->HasSelectedShape());
}

OCTopoDS_Shape^ OCAIS_InteractiveContext::SelectedShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->SelectedShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCSelectMgr_EntityOwner^ OCAIS_InteractiveContext::SelectedOwner()
{
  Handle(SelectMgr_EntityOwner) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->SelectedOwner();
  return gcnew OCSelectMgr_EntityOwner(&tmp);
}

 void OCAIS_InteractiveContext::EntityOwners(OCNaroWrappers::OCSelectMgr_IndexedMapOfOwner^ theOwners, OCNaroWrappers::OCAIS_InteractiveObject^ theIObj, Standard_Integer theMode)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->EntityOwners(*((SelectMgr_IndexedMapOfOwner*)theOwners->Handle), *((Handle_AIS_InteractiveObject*)theIObj->Handle), theMode);
}

OCAIS_InteractiveObject^ OCAIS_InteractiveContext::Interactive()
{
  Handle(AIS_InteractiveObject) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->Interactive();
  return gcnew OCAIS_InteractiveObject(&tmp);
}

OCAIS_InteractiveObject^ OCAIS_InteractiveContext::SelectedInteractive()
{
  Handle(AIS_InteractiveObject) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->SelectedInteractive();
  return gcnew OCAIS_InteractiveObject(&tmp);
}

 System::Boolean OCAIS_InteractiveContext::HasApplicative()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->HasApplicative());
}

OCStandard_Transient^ OCAIS_InteractiveContext::Applicative()
{
  Handle(Standard_Transient) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->Applicative();
  return gcnew OCStandard_Transient(&tmp);
}

 System::Boolean OCAIS_InteractiveContext::HasDetected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->HasDetected());
}

 System::Boolean OCAIS_InteractiveContext::HasDetectedShape()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->HasDetectedShape());
}

OCTopoDS_Shape^ OCAIS_InteractiveContext::DetectedShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->DetectedShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCAIS_InteractiveObject^ OCAIS_InteractiveContext::DetectedInteractive()
{
  Handle(AIS_InteractiveObject) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->DetectedInteractive();
  return gcnew OCAIS_InteractiveObject(&tmp);
}

OCSelectMgr_EntityOwner^ OCAIS_InteractiveContext::DetectedOwner()
{
  Handle(SelectMgr_EntityOwner) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->DetectedOwner();
  return gcnew OCSelectMgr_EntityOwner(&tmp);
}

 void OCAIS_InteractiveContext::InitDetected()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->InitDetected();
}

 System::Boolean OCAIS_InteractiveContext::MoreDetected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->MoreDetected());
}

 void OCAIS_InteractiveContext::NextDetected()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->NextDetected();
}

OCTopoDS_Shape^ OCAIS_InteractiveContext::DetectedCurrentShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->DetectedCurrentShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCAIS_InteractiveObject^ OCAIS_InteractiveContext::DetectedCurrentObject()
{
  Handle(AIS_InteractiveObject) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->DetectedCurrentObject();
  return gcnew OCAIS_InteractiveObject(&tmp);
}

 Standard_Integer OCAIS_InteractiveContext::OpenLocalContext(System::Boolean UseDisplayedObjects, System::Boolean AllowShapeDecomposition, System::Boolean AcceptEraseOfObjects, System::Boolean BothViewers)
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->OpenLocalContext(OCConverter::BooleanToStandardBoolean(UseDisplayedObjects), OCConverter::BooleanToStandardBoolean(AllowShapeDecomposition), OCConverter::BooleanToStandardBoolean(AcceptEraseOfObjects), OCConverter::BooleanToStandardBoolean(BothViewers));
}

 void OCAIS_InteractiveContext::CloseLocalContext(Standard_Integer Index, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->CloseLocalContext(Index, OCConverter::BooleanToStandardBoolean(updateviewer));
}

 Standard_Integer OCAIS_InteractiveContext::IndexOfCurrentLocal()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->IndexOfCurrentLocal();
}

 void OCAIS_InteractiveContext::CloseAllContexts(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->CloseAllContexts(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::ResetOriginalState(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ResetOriginalState(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::ClearLocalContext(OCAIS_ClearMode TheMode)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ClearLocalContext((AIS_ClearMode)TheMode);
}

 void OCAIS_InteractiveContext::UseDisplayedObjects()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->UseDisplayedObjects();
}

 void OCAIS_InteractiveContext::NotUseDisplayedObjects()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->NotUseDisplayedObjects();
}

 System::Boolean OCAIS_InteractiveContext::BeginImmediateDraw()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->BeginImmediateDraw());
}

 System::Boolean OCAIS_InteractiveContext::ImmediateAdd(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj, Standard_Integer aMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->ImmediateAdd(*((Handle_AIS_InteractiveObject*)anIObj->Handle), aMode));
}

 System::Boolean OCAIS_InteractiveContext::ImmediateRemove(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj, Standard_Integer aMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->ImmediateRemove(*((Handle_AIS_InteractiveObject*)anIObj->Handle), aMode));
}

 System::Boolean OCAIS_InteractiveContext::EndImmediateDraw(OCNaroWrappers::OCV3d_View^ aView, System::Boolean DoubleBuf)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->EndImmediateDraw(*((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(DoubleBuf)));
}

 System::Boolean OCAIS_InteractiveContext::EndImmediateDraw(System::Boolean DoubleBuf)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->EndImmediateDraw(OCConverter::BooleanToStandardBoolean(DoubleBuf)));
}

 System::Boolean OCAIS_InteractiveContext::IsImmediateModeOn()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsImmediateModeOn());
}

 void OCAIS_InteractiveContext::Drag(OCNaroWrappers::OCV3d_View^ aView, OCNaroWrappers::OCAIS_InteractiveObject^ anObject, OCNaroWrappers::OCGeom_Transformation^ aTranformation, System::Boolean postConcatenate, System::Boolean update, System::Boolean zBuffer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Drag(*((Handle_V3d_View*)aView->Handle), *((Handle_AIS_InteractiveObject*)anObject->Handle), *((Handle_Geom_Transformation*)aTranformation->Handle), OCConverter::BooleanToStandardBoolean(postConcatenate), OCConverter::BooleanToStandardBoolean(update), OCConverter::BooleanToStandardBoolean(zBuffer));
}

 void OCAIS_InteractiveContext::SetAutomaticHilight(System::Boolean aStatus)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetAutomaticHilight(OCConverter::BooleanToStandardBoolean(aStatus));
}

 System::Boolean OCAIS_InteractiveContext::AutomaticHilight()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->AutomaticHilight());
}

 void OCAIS_InteractiveContext::SetZDetection(System::Boolean aStatus)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetZDetection(OCConverter::BooleanToStandardBoolean(aStatus));
}

 System::Boolean OCAIS_InteractiveContext::ZDetection()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->ZDetection());
}

 void OCAIS_InteractiveContext::Activate(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, Standard_Integer aMode)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Activate(*((Handle_AIS_InteractiveObject*)anIobj->Handle), aMode);
}

 void OCAIS_InteractiveContext::Deactivate(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Deactivate(*((Handle_AIS_InteractiveObject*)anIObj->Handle));
}

 void OCAIS_InteractiveContext::Deactivate(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, Standard_Integer aMode)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->Deactivate(*((Handle_AIS_InteractiveObject*)anIobj->Handle), aMode);
}

 void OCAIS_InteractiveContext::ActivatedModes(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, OCNaroWrappers::OCTColStd_ListOfInteger^ theList)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ActivatedModes(*((Handle_AIS_InteractiveObject*)anIobj->Handle), *((TColStd_ListOfInteger*)theList->Handle));
}

 void OCAIS_InteractiveContext::SetShapeDecomposition(OCNaroWrappers::OCAIS_InteractiveObject^ anIobj, System::Boolean aStatus)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetShapeDecomposition(*((Handle_AIS_InteractiveObject*)anIobj->Handle), OCConverter::BooleanToStandardBoolean(aStatus));
}

 void OCAIS_InteractiveContext::SetTemporaryAttributes(OCNaroWrappers::OCAIS_InteractiveObject^ anObj, OCNaroWrappers::OCPrs3d_Drawer^ aDrawer, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SetTemporaryAttributes(*((Handle_AIS_InteractiveObject*)anObj->Handle), *((Handle_Prs3d_Drawer*)aDrawer->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SubIntensityOn(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SubIntensityOn(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SubIntensityOff(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SubIntensityOff(*((Handle_AIS_InteractiveObject*)aniobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SubIntensityOn(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SubIntensityOn(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::SubIntensityOff(System::Boolean updateviewer)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->SubIntensityOff(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_InteractiveContext::AddFilter(OCNaroWrappers::OCSelectMgr_Filter^ aFilter)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->AddFilter(*((Handle_SelectMgr_Filter*)aFilter->Handle));
}

 void OCAIS_InteractiveContext::RemoveFilter(OCNaroWrappers::OCSelectMgr_Filter^ aFilter)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->RemoveFilter(*((Handle_SelectMgr_Filter*)aFilter->Handle));
}

 void OCAIS_InteractiveContext::RemoveFilters()
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->RemoveFilters();
}

 void OCAIS_InteractiveContext::ActivateStandardMode(OCTopAbs_ShapeEnum aStandardActivation)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ActivateStandardMode((TopAbs_ShapeEnum)aStandardActivation);
}

 void OCAIS_InteractiveContext::DeactivateStandardMode(OCTopAbs_ShapeEnum aStandardActivation)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DeactivateStandardMode((TopAbs_ShapeEnum)aStandardActivation);
}

OCTColStd_ListOfInteger^ OCAIS_InteractiveContext::ActivatedStandardModes()
{
  TColStd_ListOfInteger* tmp = new TColStd_ListOfInteger();
  *tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->ActivatedStandardModes();
  return gcnew OCTColStd_ListOfInteger(tmp);
}

OCSelectMgr_ListOfFilter^ OCAIS_InteractiveContext::Filters()
{
  SelectMgr_ListOfFilter* tmp = new SelectMgr_ListOfFilter();
  *tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->Filters();
  return gcnew OCSelectMgr_ListOfFilter(tmp);
}

OCPrs3d_Drawer^ OCAIS_InteractiveContext::DefaultDrawer()
{
  Handle(Prs3d_Drawer) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->DefaultDrawer();
  return gcnew OCPrs3d_Drawer(&tmp);
}

OCV3d_Viewer^ OCAIS_InteractiveContext::CurrentViewer()
{
  Handle(V3d_Viewer) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->CurrentViewer();
  return gcnew OCV3d_Viewer(&tmp);
}

 void OCAIS_InteractiveContext::DisplayedObjects(OCNaroWrappers::OCAIS_ListOfInteractive^ aListOfIO, System::Boolean OnlyFromNeutral)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayedObjects(*((AIS_ListOfInteractive*)aListOfIO->Handle), OCConverter::BooleanToStandardBoolean(OnlyFromNeutral));
}

 void OCAIS_InteractiveContext::DisplayedObjects(OCAIS_KindOfInteractive WhichKind, Standard_Integer WhichSignature, OCNaroWrappers::OCAIS_ListOfInteractive^ aListOfIO, System::Boolean OnlyFromNeutral)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayedObjects((AIS_KindOfInteractive)WhichKind, WhichSignature, *((AIS_ListOfInteractive*)aListOfIO->Handle), OCConverter::BooleanToStandardBoolean(OnlyFromNeutral));
}

OCV3d_Viewer^ OCAIS_InteractiveContext::Collector()
{
  Handle(V3d_Viewer) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->Collector();
  return gcnew OCV3d_Viewer(&tmp);
}

 void OCAIS_InteractiveContext::ObjectsInCollector(OCNaroWrappers::OCAIS_ListOfInteractive^ aListOfIO)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ObjectsInCollector(*((AIS_ListOfInteractive*)aListOfIO->Handle));
}

 void OCAIS_InteractiveContext::ObjectsInCollector(OCAIS_KindOfInteractive WhichKind, Standard_Integer WhichSignature, OCNaroWrappers::OCAIS_ListOfInteractive^ aListOfIO)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ObjectsInCollector((AIS_KindOfInteractive)WhichKind, WhichSignature, *((AIS_ListOfInteractive*)aListOfIO->Handle));
}

 void OCAIS_InteractiveContext::ErasedObjects(OCNaroWrappers::OCAIS_ListOfInteractive^ theListOfIO)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ErasedObjects(*((AIS_ListOfInteractive*)theListOfIO->Handle));
}

 void OCAIS_InteractiveContext::ErasedObjects(OCAIS_KindOfInteractive WhichKind, Standard_Integer WhichSignature, OCNaroWrappers::OCAIS_ListOfInteractive^ theListOfIO)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ErasedObjects((AIS_KindOfInteractive)WhichKind, WhichSignature, *((AIS_ListOfInteractive*)theListOfIO->Handle));
}

 void OCAIS_InteractiveContext::ObjectsByDisplayStatus(OCAIS_DisplayStatus theStatus, OCNaroWrappers::OCAIS_ListOfInteractive^ theListOfIO)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ObjectsByDisplayStatus((AIS_DisplayStatus)theStatus, *((AIS_ListOfInteractive*)theListOfIO->Handle));
}

 void OCAIS_InteractiveContext::ObjectsByDisplayStatus(OCAIS_KindOfInteractive WhichKind, Standard_Integer WhichSignature, OCAIS_DisplayStatus theStatus, OCNaroWrappers::OCAIS_ListOfInteractive^ theListOfIO)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ObjectsByDisplayStatus((AIS_KindOfInteractive)WhichKind, WhichSignature, (AIS_DisplayStatus)theStatus, *((AIS_ListOfInteractive*)theListOfIO->Handle));
}

 void OCAIS_InteractiveContext::ObjectsInside(OCNaroWrappers::OCAIS_ListOfInteractive^ aListOfIO, OCAIS_KindOfInteractive WhichKind, Standard_Integer WhichSignature)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ObjectsInside(*((AIS_ListOfInteractive*)aListOfIO->Handle), (AIS_KindOfInteractive)WhichKind, WhichSignature);
}

 System::Boolean OCAIS_InteractiveContext::HasOpenedContext()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->HasOpenedContext());
}

OCTCollection_AsciiString^ OCAIS_InteractiveContext::CurrentName()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->CurrentName();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCAIS_InteractiveContext::SelectionName()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->SelectionName();
  return gcnew OCTCollection_AsciiString(tmp);
}

 System::String^ OCAIS_InteractiveContext::DomainOfMainViewer()
{
  return OCConverter::StandardCStringToString((*((Handle_AIS_InteractiveContext*)nativeHandle))->DomainOfMainViewer());
}

 System::String^ OCAIS_InteractiveContext::DomainOfCollector()
{
  return OCConverter::StandardCStringToString((*((Handle_AIS_InteractiveContext*)nativeHandle))->DomainOfCollector());
}

OCAIS_LocalContext^ OCAIS_InteractiveContext::LocalContext()
{
  Handle(AIS_LocalContext) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->LocalContext();
  return gcnew OCAIS_LocalContext(&tmp);
}

OCSelectMgr_SelectionManager^ OCAIS_InteractiveContext::SelectionManager()
{
  Handle(SelectMgr_SelectionManager) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->SelectionManager();
  return gcnew OCSelectMgr_SelectionManager(&tmp);
}

OCPrsMgr_PresentationManager3d^ OCAIS_InteractiveContext::MainPrsMgr()
{
  Handle(PrsMgr_PresentationManager3d) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->MainPrsMgr();
  return gcnew OCPrsMgr_PresentationManager3d(&tmp);
}

OCPrsMgr_PresentationManager3d^ OCAIS_InteractiveContext::CollectorPrsMgr()
{
  Handle(PrsMgr_PresentationManager3d) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->CollectorPrsMgr();
  return gcnew OCPrsMgr_PresentationManager3d(&tmp);
}

OCStdSelect_ViewerSelector3d^ OCAIS_InteractiveContext::MainSelector()
{
  Handle(StdSelect_ViewerSelector3d) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->MainSelector();
  return gcnew OCStdSelect_ViewerSelector3d(&tmp);
}

OCStdSelect_ViewerSelector3d^ OCAIS_InteractiveContext::LocalSelector()
{
  Handle(StdSelect_ViewerSelector3d) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->LocalSelector();
  return gcnew OCStdSelect_ViewerSelector3d(&tmp);
}

OCStdSelect_ViewerSelector3d^ OCAIS_InteractiveContext::CollectorSelector()
{
  Handle(StdSelect_ViewerSelector3d) tmp = (*((Handle_AIS_InteractiveContext*)nativeHandle))->CollectorSelector();
  return gcnew OCStdSelect_ViewerSelector3d(&tmp);
}

 Standard_Integer OCAIS_InteractiveContext::PurgeDisplay(System::Boolean CollectorToo)
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->PurgeDisplay(OCConverter::BooleanToStandardBoolean(CollectorToo));
}

 Standard_Integer OCAIS_InteractiveContext::HighestIndex()
{
  return (*((Handle_AIS_InteractiveContext*)nativeHandle))->HighestIndex();
}

 void OCAIS_InteractiveContext::DisplayActiveAreas(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayActiveAreas(*((Handle_V3d_View*)aView->Handle));
}

 void OCAIS_InteractiveContext::ClearActiveAreas(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ClearActiveAreas(*((Handle_V3d_View*)aView->Handle));
}

 void OCAIS_InteractiveContext::DisplayActiveSensitive(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayActiveSensitive(*((Handle_V3d_View*)aView->Handle));
}

 void OCAIS_InteractiveContext::ClearActiveSensitive(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->ClearActiveSensitive(*((Handle_V3d_View*)aView->Handle));
}

 void OCAIS_InteractiveContext::DisplayActiveSensitive(OCNaroWrappers::OCAIS_InteractiveObject^ anObject, OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayActiveSensitive(*((Handle_AIS_InteractiveObject*)anObject->Handle), *((Handle_V3d_View*)aView->Handle));
}

 void OCAIS_InteractiveContext::DisplayActiveAreas(OCNaroWrappers::OCAIS_InteractiveObject^ anObject, OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_AIS_InteractiveContext*)nativeHandle))->DisplayActiveAreas(*((Handle_AIS_InteractiveObject*)anObject->Handle), *((Handle_V3d_View*)aView->Handle));
}

 System::Boolean OCAIS_InteractiveContext::IsInLocal(OCNaroWrappers::OCAIS_InteractiveObject^ anObject, Standard_Integer& TheIndex)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_InteractiveContext*)nativeHandle))->IsInLocal(*((Handle_AIS_InteractiveObject*)anObject->Handle), TheIndex));
}


