// File generated by CPPExt (Transient)
//
#ifndef _AIS_Selection_OCWrappers_HeaderFile
#define _AIS_Selection_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS_Selection.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../TCollection/TCollection_AsciiString.h"
#include "AIS_SelectStatus.h"


namespace OCNaroWrappers
{

ref class OCStandard_Transient;



public ref class OCAIS_Selection : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCAIS_Selection(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_Selection(Handle(AIS_Selection)* nativeHandle);

// Methods PUBLIC

//! creates a new selection and make it current in the session. <br>
//!          the selection will be accessible later through its name <br>
//!          to make it again current. <br>
//! <br>
//!          Note that if a session has been created, a session with <br>
//!          the name  "default" is created. <br>
//! <br>
//!          In this case, the is always a current selection which <br>
//!          is the last one created  until SetCurrentSelection is used. <br>
//! <br>
//!          The class methods deals with the current selection. <br>
//! <br>
//!          Warning : Better Call AIS_Selection::CreateSelection. <br>
//! <br>
OCAIS_Selection(System::String^ aName);


static /*instead*/  void Remove(System::String^ aName) ;

//! returns True if a selection having this name exsits. <br>
static /*instead*/  System::Boolean Find(System::String^ aName) ;

//! calls the private constructor and puts the new Selection <br>
//!          in the list of existing selections. <br>
//!          returns False if the selection exists. <br>
static /*instead*/  System::Boolean CreateSelection(System::String^ aName) ;


static /*instead*/  OCAIS_Selection^ Selection(System::String^ aName) ;

//! returns False if There is no selection of name <aName> <br>
static /*instead*/  System::Boolean SetCurrentSelection(System::String^ aName) ;


static /*instead*/  OCAIS_Selection^ CurrentSelection() ;

//! removes all the object of the currentselection. <br>
static /*instead*/  void Select() ;

//!  if the object is not yet in the current selection, it will be added. <br>
//!           if the object is already in the current selection, it will be removed. <br>
static /*instead*/  OCAIS_SelectStatus Select(OCNaroWrappers::OCStandard_Transient^ anObject) ;

//!  the object is always add int the selection. <br>
//!           faster when the number of objects selected is great. <br>
static /*instead*/  OCAIS_SelectStatus AddSelect(OCNaroWrappers::OCStandard_Transient^ anObject) ;

//! clears the selection and adds the object in the selection. <br>
static /*instead*/  void ClearAndSelect(OCNaroWrappers::OCStandard_Transient^ anObject) ;


static /*instead*/  System::Boolean IsSelected(OCNaroWrappers::OCStandard_Transient^ anObject) ;

//! returns the number of objects selected. <br>
static /*instead*/  Standard_Integer Extent() ;

//! returns the single object selected. <br>
//!  Warning: raises TypeMismatch from Standard if Extent is not equal to 1. <br>
static /*instead*/  OCStandard_Transient^ Single() ;


 /*instead*/  void Init() ;


 /*instead*/  System::Boolean More() ;


 /*instead*/  void Next() ;


 /*instead*/  OCStandard_Transient^ Value() ;


 /*instead*/  Standard_Integer NbStored() ;


 /*instead*/  AIS_NListTransient& Objects() ;


static /*instead*/  Standard_Integer Index(System::String^ aName) ;

~OCAIS_Selection()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
