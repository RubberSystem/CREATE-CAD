// File generated by CPPExt (CPP file)
//

#include "AIS_LocalContext.h"
#include "../Converter.h"
#include "AIS_InteractiveContext.h"
#include "../SelectMgr/SelectMgr_SelectionManager.h"
#include "../StdSelect/StdSelect_ViewerSelector3d.h"
#include "../PrsMgr/PrsMgr_PresentationManager3d.h"
#include "../SelectMgr/SelectMgr_OrFilter.h"
#include "../SelectMgr/SelectMgr_Filter.h"
#include "AIS_InteractiveObject.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../Select3D/Select3D_Projector.h"
#include "../TColStd/TColStd_ListOfInteger.h"
#include "../SelectMgr/SelectMgr_ListOfFilter.h"
#include "../V3d/V3d_View.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../SelectMgr/SelectMgr_EntityOwner.h"
#include "../Standard/Standard_Transient.h"
#include "../TColStd/TColStd_MapOfTransient.h"
#include "AIS_LocalStatus.h"
#include "../SelectMgr/SelectMgr_SelectableObject.h"


using namespace OCNaroWrappers;

OCAIS_LocalContext::OCAIS_LocalContext(Handle(AIS_LocalContext)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AIS_LocalContext(*nativeHandle);
}

OCAIS_LocalContext::OCAIS_LocalContext() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_LocalContext(new AIS_LocalContext());
}

OCAIS_LocalContext::OCAIS_LocalContext(OCNaroWrappers::OCAIS_InteractiveContext^ aCtx, Standard_Integer anIndex, System::Boolean LoadDisplayed, System::Boolean AcceptStandardModes, System::Boolean AcceptErase, System::Boolean UseBothViewers) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_LocalContext(new AIS_LocalContext(*((Handle_AIS_InteractiveContext*)aCtx->Handle), anIndex, OCConverter::BooleanToStandardBoolean(LoadDisplayed), OCConverter::BooleanToStandardBoolean(AcceptStandardModes), OCConverter::BooleanToStandardBoolean(AcceptErase), OCConverter::BooleanToStandardBoolean(UseBothViewers)));
}

 void OCAIS_LocalContext::AcceptErase(System::Boolean aStatus)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->AcceptErase(OCConverter::BooleanToStandardBoolean(aStatus));
}

 System::Boolean OCAIS_LocalContext::AcceptErase()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->AcceptErase());
}

 void OCAIS_LocalContext::SetContext(OCNaroWrappers::OCAIS_InteractiveContext^ aCtx)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SetContext(*((Handle_AIS_InteractiveContext*)aCtx->Handle));
}

OCTCollection_AsciiString^ OCAIS_LocalContext::SelectionName()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->SelectionName();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCAIS_LocalContext::Terminate(System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->Terminate(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 System::Boolean OCAIS_LocalContext::HasSameProjector(OCNaroWrappers::OCSelect3D_Projector^ aPrj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->HasSameProjector(*((Handle_Select3D_Projector*)aPrj->Handle)));
}

 void OCAIS_LocalContext::Reactivate()
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->Reactivate();
}

 System::Boolean OCAIS_LocalContext::Display(OCNaroWrappers::OCAIS_InteractiveObject^ anInteractive, Standard_Integer DisplayMode, System::Boolean AllowShapeDecomposition, Standard_Integer ActivationMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->Display(*((Handle_AIS_InteractiveObject*)anInteractive->Handle), DisplayMode, OCConverter::BooleanToStandardBoolean(AllowShapeDecomposition), ActivationMode));
}

 System::Boolean OCAIS_LocalContext::Load(OCNaroWrappers::OCAIS_InteractiveObject^ anInteractive, System::Boolean AllowShapeDecomposition, Standard_Integer ActivationMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->Load(*((Handle_AIS_InteractiveObject*)anInteractive->Handle), OCConverter::BooleanToStandardBoolean(AllowShapeDecomposition), ActivationMode));
}

 System::Boolean OCAIS_LocalContext::Erase(OCNaroWrappers::OCAIS_InteractiveObject^ anInteractive)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->Erase(*((Handle_AIS_InteractiveObject*)anInteractive->Handle)));
}

 System::Boolean OCAIS_LocalContext::Remove(OCNaroWrappers::OCAIS_InteractiveObject^ aSelectable)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->Remove(*((Handle_AIS_InteractiveObject*)aSelectable->Handle)));
}

 System::Boolean OCAIS_LocalContext::ClearPrs(OCNaroWrappers::OCAIS_InteractiveObject^ anInteractive, Standard_Integer aMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->ClearPrs(*((Handle_AIS_InteractiveObject*)anInteractive->Handle), aMode));
}

 void OCAIS_LocalContext::SetShapeDecomposition(OCNaroWrappers::OCAIS_InteractiveObject^ aStoredObject, System::Boolean aStatus)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SetShapeDecomposition(*((Handle_AIS_InteractiveObject*)aStoredObject->Handle), OCConverter::BooleanToStandardBoolean(aStatus));
}

 void OCAIS_LocalContext::Clear(OCAIS_ClearMode atype)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->Clear((AIS_ClearMode)atype);
}

 void OCAIS_LocalContext::ActivateMode(OCNaroWrappers::OCAIS_InteractiveObject^ aSelectable, Standard_Integer aMode)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->ActivateMode(*((Handle_AIS_InteractiveObject*)aSelectable->Handle), aMode);
}

 void OCAIS_LocalContext::DeactivateMode(OCNaroWrappers::OCAIS_InteractiveObject^ aSelectable, Standard_Integer aMode)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->DeactivateMode(*((Handle_AIS_InteractiveObject*)aSelectable->Handle), aMode);
}

 void OCAIS_LocalContext::Deactivate(OCNaroWrappers::OCAIS_InteractiveObject^ aSelectable)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->Deactivate(*((Handle_AIS_InteractiveObject*)aSelectable->Handle));
}

 void OCAIS_LocalContext::ActivateStandardMode(OCTopAbs_ShapeEnum aType)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->ActivateStandardMode((TopAbs_ShapeEnum)aType);
}

 void OCAIS_LocalContext::DeactivateStandardMode(OCTopAbs_ShapeEnum aType)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->DeactivateStandardMode((TopAbs_ShapeEnum)aType);
}

OCTColStd_ListOfInteger^ OCAIS_LocalContext::StandardModes()
{
  TColStd_ListOfInteger* tmp = new TColStd_ListOfInteger();
  *tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->StandardModes();
  return gcnew OCTColStd_ListOfInteger(tmp);
}

 void OCAIS_LocalContext::AddFilter(OCNaroWrappers::OCSelectMgr_Filter^ aFilter)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->AddFilter(*((Handle_SelectMgr_Filter*)aFilter->Handle));
}

 void OCAIS_LocalContext::RemoveFilter(OCNaroWrappers::OCSelectMgr_Filter^ aFilter)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->RemoveFilter(*((Handle_SelectMgr_Filter*)aFilter->Handle));
}

OCSelectMgr_ListOfFilter^ OCAIS_LocalContext::ListOfFilter()
{
  SelectMgr_ListOfFilter* tmp = new SelectMgr_ListOfFilter();
  *tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->ListOfFilter();
  return gcnew OCSelectMgr_ListOfFilter(tmp);
}

OCSelectMgr_OrFilter^ OCAIS_LocalContext::Filter()
{
  Handle(SelectMgr_OrFilter) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->Filter();
  return gcnew OCSelectMgr_OrFilter(&tmp);
}

 void OCAIS_LocalContext::SetAutomaticHilight(System::Boolean aStatus)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SetAutomaticHilight(OCConverter::BooleanToStandardBoolean(aStatus));
}

 System::Boolean OCAIS_LocalContext::AutomaticHilight()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->AutomaticHilight());
}

 OCAIS_StatusOfDetection OCAIS_LocalContext::MoveTo(Standard_Integer Xpix, Standard_Integer Ypix, OCNaroWrappers::OCV3d_View^ aview)
{
  return (OCAIS_StatusOfDetection)((*((Handle_AIS_LocalContext*)nativeHandle))->MoveTo(Xpix, Ypix, *((Handle_V3d_View*)aview->Handle)));
}

 System::Boolean OCAIS_LocalContext::HasNextDetected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->HasNextDetected());
}

 Standard_Integer OCAIS_LocalContext::HilightNextDetected(OCNaroWrappers::OCV3d_View^ aView)
{
  return (*((Handle_AIS_LocalContext*)nativeHandle))->HilightNextDetected(*((Handle_V3d_View*)aView->Handle));
}

 Standard_Integer OCAIS_LocalContext::HilightPreviousDetected(OCNaroWrappers::OCV3d_View^ aView)
{
  return (*((Handle_AIS_LocalContext*)nativeHandle))->HilightPreviousDetected(*((Handle_V3d_View*)aView->Handle));
}

 System::Boolean OCAIS_LocalContext::UnhilightLastDetected(OCNaroWrappers::OCV3d_View^ aView)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->UnhilightLastDetected(*((Handle_V3d_View*)aView->Handle)));
}

 OCAIS_StatusOfPick OCAIS_LocalContext::Select(System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_LocalContext*)nativeHandle))->Select(OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_LocalContext::ShiftSelect(System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_LocalContext*)nativeHandle))->ShiftSelect(OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_LocalContext::Select(Standard_Integer XPMin, Standard_Integer YPMin, Standard_Integer XPMax, Standard_Integer YPMax, OCNaroWrappers::OCV3d_View^ aView, System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_LocalContext*)nativeHandle))->Select(XPMin, YPMin, XPMax, YPMax, *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_LocalContext::ShiftSelect(Standard_Integer XPMin, Standard_Integer YPMin, Standard_Integer XPMax, Standard_Integer YPMax, OCNaroWrappers::OCV3d_View^ aView, System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_LocalContext*)nativeHandle))->ShiftSelect(XPMin, YPMin, XPMax, YPMax, *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_LocalContext::Select(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCV3d_View^ aView, System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_LocalContext*)nativeHandle))->Select(*((TColgp_Array1OfPnt2d*)Polyline->Handle), *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 OCAIS_StatusOfPick OCAIS_LocalContext::ShiftSelect(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCV3d_View^ aView, System::Boolean updateviewer)
{
  return (OCAIS_StatusOfPick)((*((Handle_AIS_LocalContext*)nativeHandle))->ShiftSelect(*((TColgp_Array1OfPnt2d*)Polyline->Handle), *((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(updateviewer)));
}

 void OCAIS_LocalContext::HilightPicked(System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->HilightPicked(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_LocalContext::UnhilightPicked(System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->UnhilightPicked(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_LocalContext::UpdateSelected(System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->UpdateSelected(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_LocalContext::UpdateSelected(OCNaroWrappers::OCAIS_InteractiveObject^ anobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->UpdateSelected(*((Handle_AIS_InteractiveObject*)anobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_LocalContext::SetSelected(OCNaroWrappers::OCAIS_InteractiveObject^ anobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SetSelected(*((Handle_AIS_InteractiveObject*)anobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_LocalContext::AddOrRemoveSelected(OCNaroWrappers::OCAIS_InteractiveObject^ anobj, System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->AddOrRemoveSelected(*((Handle_AIS_InteractiveObject*)anobj->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_LocalContext::AddOrRemoveSelected(OCNaroWrappers::OCTopoDS_Shape^ aShape, System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->AddOrRemoveSelected(*((TopoDS_Shape*)aShape->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_LocalContext::AddOrRemoveSelected(OCNaroWrappers::OCSelectMgr_EntityOwner^ Ownr, System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->AddOrRemoveSelected(*((Handle_SelectMgr_EntityOwner*)Ownr->Handle), OCConverter::BooleanToStandardBoolean(updateviewer));
}

 void OCAIS_LocalContext::ClearSelected(System::Boolean updateviewer)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->ClearSelected(OCConverter::BooleanToStandardBoolean(updateviewer));
}

 System::Boolean OCAIS_LocalContext::HasDetected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->HasDetected());
}

 void OCAIS_LocalContext::InitDetected()
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->InitDetected();
}

 System::Boolean OCAIS_LocalContext::MoreDetected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->MoreDetected());
}

 void OCAIS_LocalContext::NextDetected()
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->NextDetected();
}

OCTopoDS_Shape^ OCAIS_LocalContext::DetectedCurrentShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->DetectedCurrentShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCAIS_InteractiveObject^ OCAIS_LocalContext::DetectedCurrentObject()
{
  Handle(AIS_InteractiveObject) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->DetectedCurrentObject();
  return gcnew OCAIS_InteractiveObject(&tmp);
}

 System::Boolean OCAIS_LocalContext::HasDetectedShape()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->HasDetectedShape());
}

OCTopoDS_Shape^ OCAIS_LocalContext::DetectedShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->DetectedShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCAIS_InteractiveObject^ OCAIS_LocalContext::DetectedInteractive()
{
  Handle(AIS_InteractiveObject) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->DetectedInteractive();
  return gcnew OCAIS_InteractiveObject(&tmp);
}

OCSelectMgr_EntityOwner^ OCAIS_LocalContext::DetectedOwner()
{
  Handle(SelectMgr_EntityOwner) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->DetectedOwner();
  return gcnew OCSelectMgr_EntityOwner(&tmp);
}

 void OCAIS_LocalContext::InitSelected()
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->InitSelected();
}

 System::Boolean OCAIS_LocalContext::MoreSelected()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->MoreSelected());
}

 void OCAIS_LocalContext::NextSelected()
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->NextSelected();
}

 System::Boolean OCAIS_LocalContext::HasShape()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->HasShape());
}

OCTopoDS_Shape^ OCAIS_LocalContext::SelectedShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->SelectedShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCSelectMgr_EntityOwner^ OCAIS_LocalContext::SelectedOwner()
{
  Handle(SelectMgr_EntityOwner) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->SelectedOwner();
  return gcnew OCSelectMgr_EntityOwner(&tmp);
}

 System::Boolean OCAIS_LocalContext::IsSelected(OCNaroWrappers::OCAIS_InteractiveObject^ aniobj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->IsSelected(*((Handle_AIS_InteractiveObject*)aniobj->Handle)));
}

 System::Boolean OCAIS_LocalContext::IsSelected(OCNaroWrappers::OCSelectMgr_EntityOwner^ anOwner)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->IsSelected(*((Handle_SelectMgr_EntityOwner*)anOwner->Handle)));
}

OCAIS_InteractiveObject^ OCAIS_LocalContext::SelectedInteractive()
{
  Handle(AIS_InteractiveObject) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->SelectedInteractive();
  return gcnew OCAIS_InteractiveObject(&tmp);
}

 System::Boolean OCAIS_LocalContext::HasApplicative()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->HasApplicative());
}

OCStandard_Transient^ OCAIS_LocalContext::SelectedApplicative()
{
  Handle(Standard_Transient) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->SelectedApplicative();
  return gcnew OCStandard_Transient(&tmp);
}

 void OCAIS_LocalContext::SetDisplayPriority(OCNaroWrappers::OCAIS_InteractiveObject^ anObject, Standard_Integer Prior)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SetDisplayPriority(*((Handle_AIS_InteractiveObject*)anObject->Handle), Prior);
}

 void OCAIS_LocalContext::SetZLayer(OCNaroWrappers::OCAIS_InteractiveObject^ theIObj, Standard_Integer theLayerId)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SetZLayer(*((Handle_AIS_InteractiveObject*)theIObj->Handle), theLayerId);
}

 Standard_Integer OCAIS_LocalContext::GetZLayer(OCNaroWrappers::OCAIS_InteractiveObject^ theIObj)
{
  return (*((Handle_AIS_LocalContext*)nativeHandle))->GetZLayer(*((Handle_AIS_InteractiveObject*)theIObj->Handle));
}

 Standard_Integer OCAIS_LocalContext::DisplayedObjects(OCNaroWrappers::OCTColStd_MapOfTransient^ theMapToFill)
{
  return (*((Handle_AIS_LocalContext*)nativeHandle))->DisplayedObjects(*((TColStd_MapOfTransient*)theMapToFill->Handle));
}

 System::Boolean OCAIS_LocalContext::IsIn(OCNaroWrappers::OCAIS_InteractiveObject^ anObject)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->IsIn(*((Handle_AIS_InteractiveObject*)anObject->Handle)));
}

 System::Boolean OCAIS_LocalContext::IsDisplayed(OCNaroWrappers::OCAIS_InteractiveObject^ anObject)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->IsDisplayed(*((Handle_AIS_InteractiveObject*)anObject->Handle)));
}

 System::Boolean OCAIS_LocalContext::IsDisplayed(OCNaroWrappers::OCAIS_InteractiveObject^ anObject, Standard_Integer aMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->IsDisplayed(*((Handle_AIS_InteractiveObject*)anObject->Handle), aMode));
}

OCTColStd_ListOfInteger^ OCAIS_LocalContext::SelectionModes(OCNaroWrappers::OCAIS_InteractiveObject^ anObject)
{
  TColStd_ListOfInteger* tmp = new TColStd_ListOfInteger();
  *tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->SelectionModes(*((Handle_AIS_InteractiveObject*)anObject->Handle));
  return gcnew OCTColStd_ListOfInteger(tmp);
}

 void OCAIS_LocalContext::SubIntensityOn(OCNaroWrappers::OCAIS_InteractiveObject^ anObject)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SubIntensityOn(*((Handle_AIS_InteractiveObject*)anObject->Handle));
}

 void OCAIS_LocalContext::SubIntensityOff(OCNaroWrappers::OCAIS_InteractiveObject^ anObject)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SubIntensityOff(*((Handle_AIS_InteractiveObject*)anObject->Handle));
}

 void OCAIS_LocalContext::Hilight(OCNaroWrappers::OCAIS_InteractiveObject^ anObject)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->Hilight(*((Handle_AIS_InteractiveObject*)anObject->Handle));
}

 void OCAIS_LocalContext::Hilight(OCNaroWrappers::OCAIS_InteractiveObject^ anObject, OCQuantity_NameOfColor aCol)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->Hilight(*((Handle_AIS_InteractiveObject*)anObject->Handle), (Quantity_NameOfColor)aCol);
}

 void OCAIS_LocalContext::Unhilight(OCNaroWrappers::OCAIS_InteractiveObject^ anObject)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->Unhilight(*((Handle_AIS_InteractiveObject*)anObject->Handle));
}

 System::Boolean OCAIS_LocalContext::IsHilighted(OCNaroWrappers::OCAIS_InteractiveObject^ anObject)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->IsHilighted(*((Handle_AIS_InteractiveObject*)anObject->Handle)));
}

 System::Boolean OCAIS_LocalContext::IsHilighted(OCNaroWrappers::OCAIS_InteractiveObject^ anObject, System::Boolean& WithColor, OCQuantity_NameOfColor& HiCol)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->IsHilighted(*((Handle_AIS_InteractiveObject*)anObject->Handle), (Standard_Boolean&)(WithColor), (Quantity_NameOfColor&)HiCol));
}

 void OCAIS_LocalContext::SetSensitivityMode(OCStdSelect_SensitivityMode aMode)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SetSensitivityMode((StdSelect_SensitivityMode)aMode);
}

 OCStdSelect_SensitivityMode OCAIS_LocalContext::SensitivityMode()
{
  return (OCStdSelect_SensitivityMode)((*((Handle_AIS_LocalContext*)nativeHandle))->SensitivityMode());
}

 void OCAIS_LocalContext::SetSensitivity(Standard_Real aPrecision)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SetSensitivity(aPrecision);
}

 Standard_Real OCAIS_LocalContext::Sensitivity()
{
  return (*((Handle_AIS_LocalContext*)nativeHandle))->Sensitivity();
}

 void OCAIS_LocalContext::SetPixelTolerance(Standard_Integer aPrecision)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->SetPixelTolerance(aPrecision);
}

 Standard_Integer OCAIS_LocalContext::PixelTolerance()
{
  return (*((Handle_AIS_LocalContext*)nativeHandle))->PixelTolerance();
}

 System::Boolean OCAIS_LocalContext::BeginImmediateDraw()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->BeginImmediateDraw());
}

 System::Boolean OCAIS_LocalContext::ImmediateAdd(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj, Standard_Integer aMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->ImmediateAdd(*((Handle_AIS_InteractiveObject*)anIObj->Handle), aMode));
}

 System::Boolean OCAIS_LocalContext::ImmediateRemove(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj, Standard_Integer aMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->ImmediateRemove(*((Handle_AIS_InteractiveObject*)anIObj->Handle), aMode));
}

 System::Boolean OCAIS_LocalContext::EndImmediateDraw(OCNaroWrappers::OCV3d_View^ aView, System::Boolean DoubleBuf)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->EndImmediateDraw(*((Handle_V3d_View*)aView->Handle), OCConverter::BooleanToStandardBoolean(DoubleBuf)));
}

 System::Boolean OCAIS_LocalContext::IsImmediateModeOn()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_LocalContext*)nativeHandle))->IsImmediateModeOn());
}

 void OCAIS_LocalContext::UpdateConversion()
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->UpdateConversion();
}

 void OCAIS_LocalContext::UpdateSort()
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->UpdateSort();
}

 void OCAIS_LocalContext::LoadContextObjects()
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->LoadContextObjects();
}

 void OCAIS_LocalContext::UnloadContextObjects()
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->UnloadContextObjects();
}

 void OCAIS_LocalContext::DisplayAreas(OCNaroWrappers::OCV3d_View^ aviou)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->DisplayAreas(*((Handle_V3d_View*)aviou->Handle));
}

 void OCAIS_LocalContext::ClearAreas(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->ClearAreas(*((Handle_V3d_View*)aView->Handle));
}

 void OCAIS_LocalContext::DisplaySensitive(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->DisplaySensitive(*((Handle_V3d_View*)aView->Handle));
}

 void OCAIS_LocalContext::ClearSensitive(OCNaroWrappers::OCV3d_View^ aView)
{
  (*((Handle_AIS_LocalContext*)nativeHandle))->ClearSensitive(*((Handle_V3d_View*)aView->Handle));
}

OCStdSelect_ViewerSelector3d^ OCAIS_LocalContext::MainSelector()
{
  Handle(StdSelect_ViewerSelector3d) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->MainSelector();
  return gcnew OCStdSelect_ViewerSelector3d(&tmp);
}

OCSelectMgr_EntityOwner^ OCAIS_LocalContext::FindSelectedOwnerFromIO(OCNaroWrappers::OCAIS_InteractiveObject^ anIObj)
{
  Handle(SelectMgr_EntityOwner) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->FindSelectedOwnerFromIO(*((Handle_AIS_InteractiveObject*)anIObj->Handle));
  return gcnew OCSelectMgr_EntityOwner(&tmp);
}

OCSelectMgr_EntityOwner^ OCAIS_LocalContext::FindSelectedOwnerFromShape(OCNaroWrappers::OCTopoDS_Shape^ aShape)
{
  Handle(SelectMgr_EntityOwner) tmp = (*((Handle_AIS_LocalContext*)nativeHandle))->FindSelectedOwnerFromShape(*((TopoDS_Shape*)aShape->Handle));
  return gcnew OCSelectMgr_EntityOwner(&tmp);
}


