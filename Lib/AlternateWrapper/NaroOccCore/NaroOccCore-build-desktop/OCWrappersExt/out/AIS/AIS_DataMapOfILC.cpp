// File generated by CPPExt (CPP file)
//

#include "AIS_DataMapOfILC.h"
#include "../Converter.h"
#include "AIS_LocalContext.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "AIS_DataMapNodeOfDataMapOfILC.h"
#include "AIS_DataMapIteratorOfDataMapOfILC.h"


using namespace OCNaroWrappers;

OCAIS_DataMapOfILC::OCAIS_DataMapOfILC(AIS_DataMapOfILC* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCAIS_DataMapOfILC::OCAIS_DataMapOfILC(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new AIS_DataMapOfILC(NbBuckets);
}

OCAIS_DataMapOfILC^ OCAIS_DataMapOfILC::Assign(OCNaroWrappers::OCAIS_DataMapOfILC^ Other)
{
  AIS_DataMapOfILC* tmp = new AIS_DataMapOfILC(0);
  *tmp = ((AIS_DataMapOfILC*)nativeHandle)->Assign(*((AIS_DataMapOfILC*)Other->Handle));
  return gcnew OCAIS_DataMapOfILC(tmp);
}

 void OCAIS_DataMapOfILC::ReSize(Standard_Integer NbBuckets)
{
  ((AIS_DataMapOfILC*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCAIS_DataMapOfILC::Bind(Standard_Integer K, OCNaroWrappers::OCAIS_LocalContext^ I)
{
  return OCConverter::StandardBooleanToBoolean(((AIS_DataMapOfILC*)nativeHandle)->Bind(K, *((Handle_AIS_LocalContext*)I->Handle)));
}

 System::Boolean OCAIS_DataMapOfILC::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((AIS_DataMapOfILC*)nativeHandle)->IsBound(K));
}

 System::Boolean OCAIS_DataMapOfILC::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((AIS_DataMapOfILC*)nativeHandle)->UnBind(K));
}

OCAIS_LocalContext^ OCAIS_DataMapOfILC::Find(Standard_Integer K)
{
  Handle(AIS_LocalContext) tmp = ((AIS_DataMapOfILC*)nativeHandle)->Find(K);
  return gcnew OCAIS_LocalContext(&tmp);
}

OCAIS_LocalContext^ OCAIS_DataMapOfILC::ChangeFind(Standard_Integer K)
{
  Handle(AIS_LocalContext) tmp = ((AIS_DataMapOfILC*)nativeHandle)->ChangeFind(K);
  return gcnew OCAIS_LocalContext(&tmp);
}

 Standard_Address OCAIS_DataMapOfILC::Find1(Standard_Integer K)
{
  return ((AIS_DataMapOfILC*)nativeHandle)->Find1(K);
}

 Standard_Address OCAIS_DataMapOfILC::ChangeFind1(Standard_Integer K)
{
  return ((AIS_DataMapOfILC*)nativeHandle)->ChangeFind1(K);
}


