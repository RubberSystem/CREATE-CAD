// File generated by CPPExt (Transient)
//
#ifndef _AIS_SignatureFilter_OCWrappers_HeaderFile
#define _AIS_SignatureFilter_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS_SignatureFilter.hxx>
#include "../Converter.h"

#include "AIS_TypeFilter.h"

#include "AIS_KindOfInteractive.h"


namespace OCNaroWrappers
{

ref class OCSelectMgr_EntityOwner;


//! Selects Interactive Objects through their signatures <br>
//! and types. The signature provides an <br>
//! additional   characterization of an object's type, and <br>
//! takes the form of an index. The filter questions each <br>
//! Interactive Object in local context to determine <br>
//! whether it has an non-null owner, and if so, whether <br>
//! it has the desired signature. If the object returns true <br>
//! in each case, it is kept. If not, it is rejected. <br>
//! By default, the   interactive object has a None   type <br>
//! and a signature of 0. If you want to give a particular <br>
//! type and signature to your Interactive Object, you <br>
//! must redefine two virtual methods:   Type and Signature. <br>
//! This filter is only used in an open local contexts. <br>
//! In the Collector viewer, you can only locate <br>
//! Interactive Objects which answer positively to the <br>
//! positioned filters when a local context is open. <br>
//! Warning <br>
//! Some signatures have already been used by standard <br>
//! objects delivered in AIS. These include: <br>
//! -   signature 0 - Shape <br>
//! -   signature 1 - Point <br>
//! -   signature 2 - Axis <br>
//! -   signature 3 - Trihedron <br>
//! -   signature 4 - PlaneTrihedron <br>
//! -   signature 5 - Line <br>
//! -   signature 6 - Circle <br>
//! -   signature 7 - Plane <br>
public ref class OCAIS_SignatureFilter : OCAIS_TypeFilter {

protected:
  // dummy constructor;
  OCAIS_SignatureFilter(OCDummy^) : OCAIS_TypeFilter((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_SignatureFilter(Handle(AIS_SignatureFilter)* nativeHandle);

// Methods PUBLIC

//! Initializes the signature filter, adding the signature <br>
//! specification, aGivenSignature, to that for type, <br>
//! aGivenKind, in AIS_TypeFilter. <br>
OCAIS_SignatureFilter(OCAIS_KindOfInteractive aGivenKind, Standard_Integer aGivenSignature);

//! Returns False if the transient is not an AIS_InteractiveObject. <br>
//!          Returns False if the signature of InteractiveObject <br>
//!          is not the same as the stored one in the filter... <br>
virtual /*instead*/  System::Boolean IsOk(OCNaroWrappers::OCSelectMgr_EntityOwner^ anobj) override;

~OCAIS_SignatureFilter()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
