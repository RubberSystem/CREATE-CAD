// File generated by CPPExt (MPV)
//
#ifndef _AIS_DataMapOfILC_OCWrappers_HeaderFile
#define _AIS_DataMapOfILC_OCWrappers_HeaderFile

// include native header
#include <AIS_DataMapOfILC.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCAIS_LocalContext;
ref class OCTColStd_MapIntegerHasher;
ref class OCAIS_DataMapNodeOfDataMapOfILC;
ref class OCAIS_DataMapIteratorOfDataMapOfILC;



public ref class OCAIS_DataMapOfILC  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCAIS_DataMapOfILC(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_DataMapOfILC(AIS_DataMapOfILC* nativeHandle);

// Methods PUBLIC


OCAIS_DataMapOfILC(Standard_Integer NbBuckets);


 /*instead*/  OCAIS_DataMapOfILC^ Assign(OCNaroWrappers::OCAIS_DataMapOfILC^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(Standard_Integer K, OCNaroWrappers::OCAIS_LocalContext^ I) ;


 /*instead*/  System::Boolean IsBound(Standard_Integer K) ;


 /*instead*/  System::Boolean UnBind(Standard_Integer K) ;


 /*instead*/  OCAIS_LocalContext^ Find(Standard_Integer K) ;


 /*instead*/  OCAIS_LocalContext^ ChangeFind(Standard_Integer K) ;


 /*instead*/  Standard_Address Find1(Standard_Integer K) ;


 /*instead*/  Standard_Address ChangeFind1(Standard_Integer K) ;

~OCAIS_DataMapOfILC()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
