// File generated by CPPExt (CPP file)
//

#include "AIS_EqualDistanceRelation.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../Geom/Geom_Plane.h"
#include "../PrsMgr/PrsMgr_PresentationManager3d.h"
#include "../Prs3d/Prs3d_Presentation.h"
#include "../Prs3d/Prs3d_Projector.h"
#include "../PrsMgr/PrsMgr_PresentationManager2d.h"
#include "../Graphic2d/Graphic2d_GraphicObject.h"
#include "../Geom/Geom_Transformation.h"
#include "../SelectMgr/SelectMgr_Selection.h"
#include "AIS_Drawer.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../Bnd/Bnd_Box.h"
#include "../gp/gp_Pnt.h"
#include "../TopoDS/TopoDS_Vertex.h"


using namespace OCNaroWrappers;

OCAIS_EqualDistanceRelation::OCAIS_EqualDistanceRelation(Handle(AIS_EqualDistanceRelation)* nativeHandle) : OCAIS_Relation((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AIS_EqualDistanceRelation(*nativeHandle);
}

OCAIS_EqualDistanceRelation::OCAIS_EqualDistanceRelation(OCNaroWrappers::OCTopoDS_Shape^ aShape1, OCNaroWrappers::OCTopoDS_Shape^ aShape2, OCNaroWrappers::OCTopoDS_Shape^ aShape3, OCNaroWrappers::OCTopoDS_Shape^ aShape4, OCNaroWrappers::OCGeom_Plane^ aPlane) : OCAIS_Relation((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_EqualDistanceRelation(new AIS_EqualDistanceRelation(*((TopoDS_Shape*)aShape1->Handle), *((TopoDS_Shape*)aShape2->Handle), *((TopoDS_Shape*)aShape3->Handle), *((TopoDS_Shape*)aShape4->Handle), *((Handle_Geom_Plane*)aPlane->Handle)));
}

 void OCAIS_EqualDistanceRelation::SetShape3(OCNaroWrappers::OCTopoDS_Shape^ aShape)
{
  (*((Handle_AIS_EqualDistanceRelation*)nativeHandle))->SetShape3(*((TopoDS_Shape*)aShape->Handle));
}

OCTopoDS_Shape^ OCAIS_EqualDistanceRelation::Shape3()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_AIS_EqualDistanceRelation*)nativeHandle))->Shape3();
  return gcnew OCTopoDS_Shape(tmp);
}

 void OCAIS_EqualDistanceRelation::SetShape4(OCNaroWrappers::OCTopoDS_Shape^ aShape)
{
  (*((Handle_AIS_EqualDistanceRelation*)nativeHandle))->SetShape4(*((TopoDS_Shape*)aShape->Handle));
}

OCTopoDS_Shape^ OCAIS_EqualDistanceRelation::Shape4()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_AIS_EqualDistanceRelation*)nativeHandle))->Shape4();
  return gcnew OCTopoDS_Shape(tmp);
}

 void OCAIS_EqualDistanceRelation::Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCGeom_Transformation^ aTrsf, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation)
{
  (*((Handle_AIS_EqualDistanceRelation*)nativeHandle))->Compute(*((Handle_Prs3d_Projector*)aProjector->Handle), *((Handle_Geom_Transformation*)aTrsf->Handle), *((Handle_Prs3d_Presentation*)aPresentation->Handle));
}

 void OCAIS_EqualDistanceRelation::ComputeTwoEdgesLength(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCAIS_Drawer^ aDrawer, Standard_Real ArrowSize, OCNaroWrappers::OCTopoDS_Edge^ FirstEdge, OCNaroWrappers::OCTopoDS_Edge^ SecondEdge, OCNaroWrappers::OCGeom_Plane^ Plane, System::Boolean AutomaticPos, System::Boolean IsSetBndBox, OCNaroWrappers::OCBnd_Box^ BndBox, OCNaroWrappers::OCgp_Pnt^ Position, OCNaroWrappers::OCgp_Pnt^ FirstAttach, OCNaroWrappers::OCgp_Pnt^ SecondAttach, OCNaroWrappers::OCgp_Pnt^ FirstExtreme, OCNaroWrappers::OCgp_Pnt^ SecondExtreme, OCDsgPrs_ArrowSide& SymbolPrs)
{
  AIS_EqualDistanceRelation::ComputeTwoEdgesLength(*((Handle_Prs3d_Presentation*)aPresentation->Handle), *((Handle_AIS_Drawer*)aDrawer->Handle), ArrowSize, *((TopoDS_Edge*)FirstEdge->Handle), *((TopoDS_Edge*)SecondEdge->Handle), *((Handle_Geom_Plane*)Plane->Handle), OCConverter::BooleanToStandardBoolean(AutomaticPos), OCConverter::BooleanToStandardBoolean(IsSetBndBox), *((Bnd_Box*)BndBox->Handle), *((gp_Pnt*)Position->Handle), *((gp_Pnt*)FirstAttach->Handle), *((gp_Pnt*)SecondAttach->Handle), *((gp_Pnt*)FirstExtreme->Handle), *((gp_Pnt*)SecondExtreme->Handle), (DsgPrs_ArrowSide&)SymbolPrs);
}

 void OCAIS_EqualDistanceRelation::ComputeTwoVerticesLength(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCAIS_Drawer^ aDrawer, Standard_Real ArrowSize, OCNaroWrappers::OCTopoDS_Vertex^ FirstVertex, OCNaroWrappers::OCTopoDS_Vertex^ SecondVertex, OCNaroWrappers::OCGeom_Plane^ Plane, System::Boolean AutomaticPos, System::Boolean IsSetBndBox, OCNaroWrappers::OCBnd_Box^ BndBox, OCAIS_TypeOfDist TypeDist, OCNaroWrappers::OCgp_Pnt^ Position, OCNaroWrappers::OCgp_Pnt^ FirstAttach, OCNaroWrappers::OCgp_Pnt^ SecondAttach, OCNaroWrappers::OCgp_Pnt^ FirstExtreme, OCNaroWrappers::OCgp_Pnt^ SecondExtreme, OCDsgPrs_ArrowSide& SymbolPrs)
{
  AIS_EqualDistanceRelation::ComputeTwoVerticesLength(*((Handle_Prs3d_Presentation*)aPresentation->Handle), *((Handle_AIS_Drawer*)aDrawer->Handle), ArrowSize, *((TopoDS_Vertex*)FirstVertex->Handle), *((TopoDS_Vertex*)SecondVertex->Handle), *((Handle_Geom_Plane*)Plane->Handle), OCConverter::BooleanToStandardBoolean(AutomaticPos), OCConverter::BooleanToStandardBoolean(IsSetBndBox), *((Bnd_Box*)BndBox->Handle), (AIS_TypeOfDist)TypeDist, *((gp_Pnt*)Position->Handle), *((gp_Pnt*)FirstAttach->Handle), *((gp_Pnt*)SecondAttach->Handle), *((gp_Pnt*)FirstExtreme->Handle), *((gp_Pnt*)SecondExtreme->Handle), (DsgPrs_ArrowSide&)SymbolPrs);
}

 void OCAIS_EqualDistanceRelation::ComputeOneEdgeOneVertexLength(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCAIS_Drawer^ aDrawer, Standard_Real ArrowSize, OCNaroWrappers::OCTopoDS_Shape^ FirstShape, OCNaroWrappers::OCTopoDS_Shape^ SecondShape, OCNaroWrappers::OCGeom_Plane^ Plane, System::Boolean AutomaticPos, System::Boolean IsSetBndBox, OCNaroWrappers::OCBnd_Box^ BndBox, OCNaroWrappers::OCgp_Pnt^ Position, OCNaroWrappers::OCgp_Pnt^ FirstAttach, OCNaroWrappers::OCgp_Pnt^ SecondAttach, OCNaroWrappers::OCgp_Pnt^ FirstExtreme, OCNaroWrappers::OCgp_Pnt^ SecondExtreme, OCDsgPrs_ArrowSide& SymbolPrs)
{
  AIS_EqualDistanceRelation::ComputeOneEdgeOneVertexLength(*((Handle_Prs3d_Presentation*)aPresentation->Handle), *((Handle_AIS_Drawer*)aDrawer->Handle), ArrowSize, *((TopoDS_Shape*)FirstShape->Handle), *((TopoDS_Shape*)SecondShape->Handle), *((Handle_Geom_Plane*)Plane->Handle), OCConverter::BooleanToStandardBoolean(AutomaticPos), OCConverter::BooleanToStandardBoolean(IsSetBndBox), *((Bnd_Box*)BndBox->Handle), *((gp_Pnt*)Position->Handle), *((gp_Pnt*)FirstAttach->Handle), *((gp_Pnt*)SecondAttach->Handle), *((gp_Pnt*)FirstExtreme->Handle), *((gp_Pnt*)SecondExtreme->Handle), (DsgPrs_ArrowSide&)SymbolPrs);
}


