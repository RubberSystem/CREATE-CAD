// File generated by CPPExt (Transient)
//
#ifndef _AIS_DimensionOwner_OCWrappers_HeaderFile
#define _AIS_DimensionOwner_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS_DimensionOwner.hxx>
#include "../Converter.h"

#include "../SelectMgr/SelectMgr_EntityOwner.h"

#include "../TopoDS/TopoDS_Shape.h"


namespace OCNaroWrappers
{

ref class OCSelectMgr_SelectableObject;
ref class OCTopoDS_Shape;


//! The owner is the entity which makes it possible to link <br>
//! the sensitive primitives and the reference shapes that <br>
//! you want to detect. It stocks the various pieces of <br>
//! information which make it possible to find objects. An <br>
//! owner has a priority which you can modulate, so as to <br>
//! make one entity more selectable than another. You <br>
//! might want to make edges more selectable than <br>
//! faces, for example. In that case, you could attribute sa <br>
//! higher priority to the one compared to the other. An <br>
//! edge, could have priority 5, for example, and a face, <br>
//! priority 4. The default priority is 5. <br>
public ref class OCAIS_DimensionOwner : OCSelectMgr_EntityOwner {

protected:
  // dummy constructor;
  OCAIS_DimensionOwner(OCDummy^) : OCSelectMgr_EntityOwner((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_DimensionOwner(Handle(AIS_DimensionOwner)* nativeHandle);

// Methods PUBLIC


//! Initializes the dimension owner, aSO, and attributes it <br>
//! the priority, aPriority. <br>
OCAIS_DimensionOwner(OCNaroWrappers::OCSelectMgr_SelectableObject^ aSO, Standard_Integer aPriority);


//! Constructs the reference shape owner aShape for <br>
//! presentation primitives. <br>
 /*instead*/  void SetShape(OCNaroWrappers::OCTopoDS_Shape^ aShape) ;


//! Returns the owner shape whose primitives we are concerned with. <br>
 /*instead*/  OCTopoDS_Shape^ FixedShape() ;

~OCAIS_DimensionOwner()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
