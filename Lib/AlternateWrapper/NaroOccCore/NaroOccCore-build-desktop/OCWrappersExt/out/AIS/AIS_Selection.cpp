// File generated by CPPExt (CPP file)
//

#include "AIS_Selection.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"


using namespace OCNaroWrappers;

OCAIS_Selection::OCAIS_Selection(Handle(AIS_Selection)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AIS_Selection(*nativeHandle);
}

OCAIS_Selection::OCAIS_Selection(System::String^ aName) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_Selection(new AIS_Selection(OCConverter::StringToStandardCString(aName)));
}

 void OCAIS_Selection::Remove(System::String^ aName)
{
  AIS_Selection::Remove(OCConverter::StringToStandardCString(aName));
}

 System::Boolean OCAIS_Selection::Find(System::String^ aName)
{
  return OCConverter::StandardBooleanToBoolean(AIS_Selection::Find(OCConverter::StringToStandardCString(aName)));
}

 System::Boolean OCAIS_Selection::CreateSelection(System::String^ aName)
{
  return OCConverter::StandardBooleanToBoolean(AIS_Selection::CreateSelection(OCConverter::StringToStandardCString(aName)));
}

OCAIS_Selection^ OCAIS_Selection::Selection(System::String^ aName)
{
  Handle(AIS_Selection) tmp = AIS_Selection::Selection(OCConverter::StringToStandardCString(aName));
  return gcnew OCAIS_Selection(&tmp);
}

 System::Boolean OCAIS_Selection::SetCurrentSelection(System::String^ aName)
{
  return OCConverter::StandardBooleanToBoolean(AIS_Selection::SetCurrentSelection(OCConverter::StringToStandardCString(aName)));
}

OCAIS_Selection^ OCAIS_Selection::CurrentSelection()
{
  Handle(AIS_Selection) tmp = AIS_Selection::CurrentSelection();
  return gcnew OCAIS_Selection(&tmp);
}

 void OCAIS_Selection::Select()
{
  AIS_Selection::Select();
}

 OCAIS_SelectStatus OCAIS_Selection::Select(OCNaroWrappers::OCStandard_Transient^ anObject)
{
  return (OCAIS_SelectStatus)(AIS_Selection::Select(*((Handle_Standard_Transient*)anObject->Handle)));
}

 OCAIS_SelectStatus OCAIS_Selection::AddSelect(OCNaroWrappers::OCStandard_Transient^ anObject)
{
  return (OCAIS_SelectStatus)(AIS_Selection::AddSelect(*((Handle_Standard_Transient*)anObject->Handle)));
}

 void OCAIS_Selection::ClearAndSelect(OCNaroWrappers::OCStandard_Transient^ anObject)
{
  AIS_Selection::ClearAndSelect(*((Handle_Standard_Transient*)anObject->Handle));
}

 System::Boolean OCAIS_Selection::IsSelected(OCNaroWrappers::OCStandard_Transient^ anObject)
{
  return OCConverter::StandardBooleanToBoolean(AIS_Selection::IsSelected(*((Handle_Standard_Transient*)anObject->Handle)));
}

 Standard_Integer OCAIS_Selection::Extent()
{
  return AIS_Selection::Extent();
}

OCStandard_Transient^ OCAIS_Selection::Single()
{
  Handle(Standard_Transient) tmp = AIS_Selection::Single();
  return gcnew OCStandard_Transient(&tmp);
}

 void OCAIS_Selection::Init()
{
  (*((Handle_AIS_Selection*)nativeHandle))->Init();
}

 System::Boolean OCAIS_Selection::More()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_Selection*)nativeHandle))->More());
}

 void OCAIS_Selection::Next()
{
  (*((Handle_AIS_Selection*)nativeHandle))->Next();
}

OCStandard_Transient^ OCAIS_Selection::Value()
{
  Handle(Standard_Transient) tmp = (*((Handle_AIS_Selection*)nativeHandle))->Value();
  return gcnew OCStandard_Transient(&tmp);
}

 Standard_Integer OCAIS_Selection::NbStored()
{
  return (*((Handle_AIS_Selection*)nativeHandle))->NbStored();
}

 AIS_NListTransient& OCAIS_Selection::Objects()
{
  return (*((Handle_AIS_Selection*)nativeHandle))->Objects();
}

 Standard_Integer OCAIS_Selection::Index(System::String^ aName)
{
  return AIS_Selection::Index(OCConverter::StringToStandardCString(aName));
}


