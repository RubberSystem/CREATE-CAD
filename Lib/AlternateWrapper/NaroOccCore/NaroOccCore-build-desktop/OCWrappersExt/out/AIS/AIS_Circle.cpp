// File generated by CPPExt (CPP file)
//

#include "AIS_Circle.h"
#include "../Converter.h"
#include "../Geom/Geom_Circle.h"
#include "../PrsMgr/PrsMgr_PresentationManager3d.h"
#include "../Prs3d/Prs3d_Presentation.h"
#include "../Prs3d/Prs3d_Projector.h"
#include "../PrsMgr/PrsMgr_PresentationManager2d.h"
#include "../Graphic2d/Graphic2d_GraphicObject.h"
#include "../Geom/Geom_Transformation.h"
#include "../SelectMgr/SelectMgr_Selection.h"
#include "../Quantity/Quantity_Color.h"


using namespace OCNaroWrappers;

OCAIS_Circle::OCAIS_Circle(Handle(AIS_Circle)* nativeHandle) : OCAIS_InteractiveObject((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AIS_Circle(*nativeHandle);
}

OCAIS_Circle::OCAIS_Circle(OCNaroWrappers::OCGeom_Circle^ aCircle) : OCAIS_InteractiveObject((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_Circle(new AIS_Circle(*((Handle_Geom_Circle*)aCircle->Handle)));
}

OCAIS_Circle::OCAIS_Circle(OCNaroWrappers::OCGeom_Circle^ aCircle, Standard_Real aUStart, Standard_Real aUEnd, System::Boolean aSens) : OCAIS_InteractiveObject((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_Circle(new AIS_Circle(*((Handle_Geom_Circle*)aCircle->Handle), aUStart, aUEnd, OCConverter::BooleanToStandardBoolean(aSens)));
}

 void OCAIS_Circle::Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCGeom_Transformation^ aTrsf, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation)
{
  (*((Handle_AIS_Circle*)nativeHandle))->Compute(*((Handle_Prs3d_Projector*)aProjector->Handle), *((Handle_Geom_Transformation*)aTrsf->Handle), *((Handle_Prs3d_Presentation*)aPresentation->Handle));
}

 Standard_Integer OCAIS_Circle::Signature()
{
  return (*((Handle_AIS_Circle*)nativeHandle))->Signature();
}

 OCAIS_KindOfInteractive OCAIS_Circle::Type()
{
  return (OCAIS_KindOfInteractive)((*((Handle_AIS_Circle*)nativeHandle))->Type());
}

OCGeom_Circle^ OCAIS_Circle::Circle()
{
  Handle(Geom_Circle) tmp = (*((Handle_AIS_Circle*)nativeHandle))->Circle();
  return gcnew OCGeom_Circle(&tmp);
}

 void OCAIS_Circle::Parameters(Standard_Real& u1, Standard_Real& u2)
{
  (*((Handle_AIS_Circle*)nativeHandle))->Parameters(u1, u2);
}

 void OCAIS_Circle::SetCircle(OCNaroWrappers::OCGeom_Circle^ aCircle)
{
  (*((Handle_AIS_Circle*)nativeHandle))->SetCircle(*((Handle_Geom_Circle*)aCircle->Handle));
}

 void OCAIS_Circle::SetFirstParam(Standard_Real u)
{
  (*((Handle_AIS_Circle*)nativeHandle))->SetFirstParam(u);
}

 void OCAIS_Circle::SetLastParam(Standard_Real u)
{
  (*((Handle_AIS_Circle*)nativeHandle))->SetLastParam(u);
}

 void OCAIS_Circle::SetColor(OCQuantity_NameOfColor aColor)
{
  (*((Handle_AIS_Circle*)nativeHandle))->SetColor((Quantity_NameOfColor)aColor);
}

 void OCAIS_Circle::SetColor(OCNaroWrappers::OCQuantity_Color^ aColor)
{
  (*((Handle_AIS_Circle*)nativeHandle))->SetColor(*((Quantity_Color*)aColor->Handle));
}

 void OCAIS_Circle::SetWidth(Standard_Real aValue)
{
  (*((Handle_AIS_Circle*)nativeHandle))->SetWidth(aValue);
}

 void OCAIS_Circle::UnsetColor()
{
  (*((Handle_AIS_Circle*)nativeHandle))->UnsetColor();
}

 void OCAIS_Circle::UnsetWidth()
{
  (*((Handle_AIS_Circle*)nativeHandle))->UnsetWidth();
}


