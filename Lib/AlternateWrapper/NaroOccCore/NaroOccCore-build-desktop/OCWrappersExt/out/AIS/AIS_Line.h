// File generated by CPPExt (Transient)
//
#ifndef _AIS_Line_OCWrappers_HeaderFile
#define _AIS_Line_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS_Line.hxx>
#include "../Converter.h"

#include "AIS_InteractiveObject.h"

#include "AIS_KindOfInteractive.h"
#include "../Quantity/Quantity_NameOfColor.h"


namespace OCNaroWrappers
{

ref class OCGeom_Line;
ref class OCGeom_Point;
ref class OCPrsMgr_PresentationManager3d;
ref class OCPrs3d_Presentation;
ref class OCPrs3d_Projector;
ref class OCPrsMgr_PresentationManager2d;
ref class OCGraphic2d_GraphicObject;
ref class OCGeom_Transformation;
ref class OCSelectMgr_Selection;
ref class OCQuantity_Color;


//! Constructs line datums to be used in construction of <br>
//! composite shapes. <br>
public ref class OCAIS_Line : OCAIS_InteractiveObject {

protected:
  // dummy constructor;
  OCAIS_Line(OCDummy^) : OCAIS_InteractiveObject((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_Line(Handle(AIS_Line)* nativeHandle);

// Methods PUBLIC

//! Initializes the line aLine. <br>
OCAIS_Line(OCNaroWrappers::OCGeom_Line^ aLine);

//! Initializes a starting point aStartPoint <br>
//!   and a finishing point aEndPoint for the line. <br>
OCAIS_Line(OCNaroWrappers::OCGeom_Point^ aStartPoint, OCNaroWrappers::OCGeom_Point^ aEndPoint);

//! computes the presentation according to a point of view <br>
//!          given by <aProjector>. <br>
//!          To be Used when the associated degenerated Presentations <br>
//!          have been transformed by <aTrsf> which is not a Pure <br>
//!          Translation. The HLR Prs can't be deducted automatically <br>
//!          WARNING :<aTrsf> must be applied <br>
//!           to the object to display before computation  !!! <br>
virtual /*instead*/  void Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCGeom_Transformation^ aTrsf, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation) override;

//! Returns the signature 5. <br>
virtual /*instead*/  Standard_Integer Signature() override;

//! Returns the type Datum. <br>
virtual /*instead*/  OCAIS_KindOfInteractive Type() override;

//! Constructs an infinite line. <br>
 /*instead*/  OCGeom_Line^ Line() ;

//! Returns the starting point PStart and the end point <br>
//! PEnd of the line set by SetPoints. <br>
 /*instead*/  void Points(OCNaroWrappers::OCGeom_Point^ PStart, OCNaroWrappers::OCGeom_Point^ PEnd) ;

//! instantiates an infinite line. <br>
 /*instead*/  void SetLine(OCNaroWrappers::OCGeom_Line^ L) ;


//! Sets the starting point P1 and ending point P2 of the <br>
//! infinite line to create a finite line segment. <br>
 /*instead*/  void SetPoints(OCNaroWrappers::OCGeom_Point^ P1, OCNaroWrappers::OCGeom_Point^ P2) ;

//! Provides a new color setting aColor for the line in the <br>
//! drawing tool, or "Drawer". <br>
virtual /*instead*/  void SetColor(OCQuantity_NameOfColor aColor) override;


virtual /*instead*/  void SetColor(OCNaroWrappers::OCQuantity_Color^ aColor) override;

//! Provides the new width setting aValue for the line in <br>
//! the drawing tool, or "Drawer". <br>
virtual /*instead*/  void SetWidth(Standard_Real aValue) override;

//! Removes the color setting and returns the original color. <br>
virtual /*instead*/  void UnsetColor() override;

//! Removes the width setting and returns the original width. <br>
virtual /*instead*/  void UnsetWidth() override;

~OCAIS_Line()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
