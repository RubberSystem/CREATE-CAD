// File generated by CPPExt (CPP file)
//

#include "AIS_Chamf2dDimension.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../Geom/Geom_Plane.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "../gp/gp_Pnt.h"
#include "../PrsMgr/PrsMgr_PresentationManager3d.h"
#include "../Prs3d/Prs3d_Presentation.h"
#include "../Prs3d/Prs3d_Projector.h"
#include "../PrsMgr/PrsMgr_PresentationManager2d.h"
#include "../Graphic2d/Graphic2d_GraphicObject.h"
#include "../Geom/Geom_Transformation.h"
#include "../SelectMgr/SelectMgr_Selection.h"


using namespace OCNaroWrappers;

OCAIS_Chamf2dDimension::OCAIS_Chamf2dDimension(Handle(AIS_Chamf2dDimension)* nativeHandle) : OCAIS_Relation((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AIS_Chamf2dDimension(*nativeHandle);
}

OCAIS_Chamf2dDimension::OCAIS_Chamf2dDimension(OCNaroWrappers::OCTopoDS_Shape^ aFShape, OCNaroWrappers::OCGeom_Plane^ aPlane, Standard_Real aVal, OCNaroWrappers::OCTCollection_ExtendedString^ aText) : OCAIS_Relation((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_Chamf2dDimension(new AIS_Chamf2dDimension(*((TopoDS_Shape*)aFShape->Handle), *((Handle_Geom_Plane*)aPlane->Handle), aVal, *((TCollection_ExtendedString*)aText->Handle)));
}

OCAIS_Chamf2dDimension::OCAIS_Chamf2dDimension(OCNaroWrappers::OCTopoDS_Shape^ aFShape, OCNaroWrappers::OCGeom_Plane^ aPlane, Standard_Real aVal, OCNaroWrappers::OCTCollection_ExtendedString^ aText, OCNaroWrappers::OCgp_Pnt^ aPosition, OCDsgPrs_ArrowSide aSymbolPrs, Standard_Real anArrowSize) : OCAIS_Relation((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_Chamf2dDimension(new AIS_Chamf2dDimension(*((TopoDS_Shape*)aFShape->Handle), *((Handle_Geom_Plane*)aPlane->Handle), aVal, *((TCollection_ExtendedString*)aText->Handle), *((gp_Pnt*)aPosition->Handle), (DsgPrs_ArrowSide)aSymbolPrs, anArrowSize));
}

 OCAIS_KindOfDimension OCAIS_Chamf2dDimension::KindOfDimension()
{
  return (OCAIS_KindOfDimension)((*((Handle_AIS_Chamf2dDimension*)nativeHandle))->KindOfDimension());
}

 System::Boolean OCAIS_Chamf2dDimension::IsMovable()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_Chamf2dDimension*)nativeHandle))->IsMovable());
}

 void OCAIS_Chamf2dDimension::Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCGeom_Transformation^ aTrsf, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation)
{
  (*((Handle_AIS_Chamf2dDimension*)nativeHandle))->Compute(*((Handle_Prs3d_Projector*)aProjector->Handle), *((Handle_Geom_Transformation*)aTrsf->Handle), *((Handle_Prs3d_Presentation*)aPresentation->Handle));
}


