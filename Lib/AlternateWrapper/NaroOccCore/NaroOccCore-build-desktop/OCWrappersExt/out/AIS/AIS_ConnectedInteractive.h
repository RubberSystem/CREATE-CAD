// File generated by CPPExt (Transient)
//
#ifndef _AIS_ConnectedInteractive_OCWrappers_HeaderFile
#define _AIS_ConnectedInteractive_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS_ConnectedInteractive.hxx>
#include "../Converter.h"

#include "AIS_InteractiveObject.h"

#include "../PrsMgr/PrsMgr_TypeOfPresentation3d.h"
#include "AIS_KindOfInteractive.h"


namespace OCNaroWrappers
{

ref class OCAIS_InteractiveObject;
ref class OCTopLoc_Location;
ref class OCPrsMgr_PresentationManager3d;
ref class OCPrs3d_Presentation;
ref class OCPrs3d_Projector;
ref class OCGeom_Transformation;
ref class OCPrsMgr_PresentationManager2d;
ref class OCGraphic2d_GraphicObject;
ref class OCSelectMgr_Selection;


//! Defines an Interactive Object through a connection to <br>
//! another Interactive   Object, which serves as a <br>
//! reference, and which is located elsewhere in the viewer. <br>
//! This allows you to use the Connected Interactive <br>
//! Object without having to recalculate presentation, <br>
//! selection or graphic structure. These are deduced <br>
//! from your reference object. <br>
//! The relation between the connected interactive object <br>
//! and its source is generally one of geometric transformation. <br>
//! AIS_ConnectedInteractive class doesn't support selection <br>
//! modes different from 0. Descendants should redefine ComputeSelection() <br>
//! method in order to handle other selection modes and generate connected <br>
//! sensitive entities properly. Refer to AIS_ConnectedShape class <br>
//! for exisiting implementation of a connected interactive object <br>
//! for AIS_Shape that supports all standard sub-shape selection modes. <br>
//! Warning <br>
//! An Interactive entity which is view (or projector) <br>
//! dependent requires recalculation of views in hidden <br>
//! parts mode depending on the position of the <br>
//! projector in each view. You should derive the entity's <br>
//! inheritance from ConnectedInteractive and redefine <br>
//! its compute method to enable this type of calculation. <br>
public ref class OCAIS_ConnectedInteractive : OCAIS_InteractiveObject {

protected:
  // dummy constructor;
  OCAIS_ConnectedInteractive(OCDummy^) : OCAIS_InteractiveObject((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_ConnectedInteractive(Handle(AIS_ConnectedInteractive)* nativeHandle);

// Methods PUBLIC


//! Disconnects the previous view and sets highlight <br>
//! mode to 0. This highlights the wireframe presentation <br>
//! aTypeOfPresentation3d. <br>
//! Top_AllView deactivates hidden line removal. <br>
OCAIS_ConnectedInteractive(OCPrsMgr_TypeOfPresentation3d aTypeOfPresentation3d);

//! Returns KOI_Object <br>
virtual /*instead*/  OCAIS_KindOfInteractive Type() override;

//! Returns 1 <br>
virtual /*instead*/  Standard_Integer Signature() override;

//! Establishes the connection between the Connected <br>
//! Interactive Object, anotherIobj, and its reference <br>
//! entity. If a previous connection with an Interactive <br>
//! Object already exists, it is removed by Disconnect. <br>
//! The second syntax also initiates the location of the <br>
//! Connected Interactive Object. <br>
virtual /*instead*/  void Connect(OCNaroWrappers::OCAIS_InteractiveObject^ anotherIObj) ;


virtual /*instead*/  void Connect(OCNaroWrappers::OCAIS_InteractiveObject^ anotherIobj, OCNaroWrappers::OCTopLoc_Location^ aLocation) ;


//! Returns true if there is a connection established <br>
//! between the presentation and its source reference. <br>
 /*instead*/  System::Boolean HasConnection() ;


//! Returns the connection with the reference Interactive Object. <br>
 /*instead*/  OCAIS_InteractiveObject^ ConnectedTo() ;

//! Clears the connection with a source reference. The <br>
//! presentation will no longer be displayed. <br>
//! Warning Must be done before deleting the presentation. <br>
 /*instead*/  void Disconnect() ;

//! Computes the presentation according to a point of view <br>
//!          given by <aProjector>. <br>
//!          To be Used when the associated degenerated Presentations <br>
//!          have been transformed by <aTrsf> which is not a Pure <br>
//!          Translation. The HLR Prs can't be deducted automatically <br>
//!          WARNING :<aTrsf> must be applied <br>
//!           to the object to display before computation  !!! <br>
virtual /*instead*/  void Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCGeom_Transformation^ aTrsf, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation) override;


virtual /*instead*/  void Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation) override;

//! this method should fill the presentation according to the <br>
//!          enumerated mode of the application and to the display parameter <br>
//!          of the application. <br>
virtual /*instead*/  void Compute(OCNaroWrappers::OCPrsMgr_PresentationManager2d^ aPresentationManager, OCNaroWrappers::OCGraphic2d_GraphicObject^ aPresentation, Standard_Integer aMode) override;


virtual /*instead*/  System::Boolean AcceptShapeDecomposition() override;


virtual /*instead*/  void UpdateLocation() override;

//! For this class, the  location effect is treated in the <br>
//!           compute   &     computeSelection  methods.  So     the <br>
//!        UpdateLocation Methods are redefined to do nothing else <br>
virtual /*instead*/  void UpdateLocation(OCNaroWrappers::OCSelectMgr_Selection^ aSel) override;

~OCAIS_ConnectedInteractive()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
