// File generated by CPPExt (CPP file)
//

#include "AIS.h"
#include "../Converter.h"


using namespace OCNaroWrappers;



OCgp_Pnt^ OCAIS::Nearest(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCgp_Pnt^ aPoint)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = AIS::Nearest(*((TopoDS_Shape*)aShape->Handle), *((gp_Pnt*)aPoint->Handle));
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCAIS::Farest(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCgp_Pnt^ aPoint)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = AIS::Farest(*((TopoDS_Shape*)aShape->Handle), *((gp_Pnt*)aPoint->Handle));
  return gcnew OCgp_Pnt(tmp);
}

 System::Boolean OCAIS::ComputeGeometry(OCNaroWrappers::OCTopoDS_Edge^ anEdge, OCNaroWrappers::OCGeom_Curve^ aCurve, OCNaroWrappers::OCgp_Pnt^ FirstPnt, OCNaroWrappers::OCgp_Pnt^ LastPnt)
{
  return OCConverter::StandardBooleanToBoolean(AIS::ComputeGeometry(*((TopoDS_Edge*)anEdge->Handle), *((Handle_Geom_Curve*)aCurve->Handle), *((gp_Pnt*)FirstPnt->Handle), *((gp_Pnt*)LastPnt->Handle)));
}

 System::Boolean OCAIS::ComputeGeometry(OCNaroWrappers::OCTopoDS_Edge^ anEdge, OCNaroWrappers::OCGeom_Curve^ aCurve, OCNaroWrappers::OCgp_Pnt^ FirstPnt, OCNaroWrappers::OCgp_Pnt^ LastPnt, OCNaroWrappers::OCGeom_Curve^ extCurve, System::Boolean& isinfinite, System::Boolean& isOnPlane, OCNaroWrappers::OCGeom_Plane^ aPlane)
{
  return OCConverter::StandardBooleanToBoolean(AIS::ComputeGeometry(*((TopoDS_Edge*)anEdge->Handle), *((Handle_Geom_Curve*)aCurve->Handle), *((gp_Pnt*)FirstPnt->Handle), *((gp_Pnt*)LastPnt->Handle), *((Handle_Geom_Curve*)extCurve->Handle), (Standard_Boolean&)(isinfinite), (Standard_Boolean&)(isOnPlane), *((Handle_Geom_Plane*)aPlane->Handle)));
}

 System::Boolean OCAIS::ComputeGeometry(OCNaroWrappers::OCTopoDS_Edge^ anEdge1, OCNaroWrappers::OCTopoDS_Edge^ anEdge2, OCNaroWrappers::OCGeom_Curve^ aCurve1, OCNaroWrappers::OCGeom_Curve^ aCurve2, OCNaroWrappers::OCgp_Pnt^ FirstPnt1, OCNaroWrappers::OCgp_Pnt^ LastPnt1, OCNaroWrappers::OCgp_Pnt^ FirstPnt2, OCNaroWrappers::OCgp_Pnt^ LastPnt2, OCNaroWrappers::OCGeom_Plane^ aPlane)
{
  return OCConverter::StandardBooleanToBoolean(AIS::ComputeGeometry(*((TopoDS_Edge*)anEdge1->Handle), *((TopoDS_Edge*)anEdge2->Handle), *((Handle_Geom_Curve*)aCurve1->Handle), *((Handle_Geom_Curve*)aCurve2->Handle), *((gp_Pnt*)FirstPnt1->Handle), *((gp_Pnt*)LastPnt1->Handle), *((gp_Pnt*)FirstPnt2->Handle), *((gp_Pnt*)LastPnt2->Handle), *((Handle_Geom_Plane*)aPlane->Handle)));
}

 System::Boolean OCAIS::ComputeGeometry(OCNaroWrappers::OCTopoDS_Edge^ anEdge1, OCNaroWrappers::OCTopoDS_Edge^ anEdge2, Standard_Integer& indexExt, OCNaroWrappers::OCGeom_Curve^ aCurve1, OCNaroWrappers::OCGeom_Curve^ aCurve2, OCNaroWrappers::OCgp_Pnt^ FirstPnt1, OCNaroWrappers::OCgp_Pnt^ LastPnt1, OCNaroWrappers::OCgp_Pnt^ FirstPnt2, OCNaroWrappers::OCgp_Pnt^ LastPnt2, OCNaroWrappers::OCGeom_Curve^ ExtCurve, System::Boolean& isinfinite1, System::Boolean& isinfinite2, OCNaroWrappers::OCGeom_Plane^ aPlane)
{
  return OCConverter::StandardBooleanToBoolean(AIS::ComputeGeometry(*((TopoDS_Edge*)anEdge1->Handle), *((TopoDS_Edge*)anEdge2->Handle), indexExt, *((Handle_Geom_Curve*)aCurve1->Handle), *((Handle_Geom_Curve*)aCurve2->Handle), *((gp_Pnt*)FirstPnt1->Handle), *((gp_Pnt*)LastPnt1->Handle), *((gp_Pnt*)FirstPnt2->Handle), *((gp_Pnt*)LastPnt2->Handle), *((Handle_Geom_Curve*)ExtCurve->Handle), (Standard_Boolean&)(isinfinite1), (Standard_Boolean&)(isinfinite2), *((Handle_Geom_Plane*)aPlane->Handle)));
}

 System::Boolean OCAIS::ComputeGeomCurve(OCNaroWrappers::OCGeom_Curve^ aCurve, Standard_Real first1, Standard_Real last1, OCNaroWrappers::OCgp_Pnt^ FirstPnt1, OCNaroWrappers::OCgp_Pnt^ LastPnt1, OCNaroWrappers::OCGeom_Plane^ aPlane, System::Boolean& isOnPlane)
{
  return OCConverter::StandardBooleanToBoolean(AIS::ComputeGeomCurve(*((Handle_Geom_Curve*)aCurve->Handle), first1, last1, *((gp_Pnt*)FirstPnt1->Handle), *((gp_Pnt*)LastPnt1->Handle), *((Handle_Geom_Plane*)aPlane->Handle), (Standard_Boolean&)(isOnPlane)));
}

 System::Boolean OCAIS::ComputeGeometry(OCNaroWrappers::OCTopoDS_Vertex^ aVertex, OCNaroWrappers::OCgp_Pnt^ point, OCNaroWrappers::OCGeom_Plane^ aPlane, System::Boolean& isOnPlane)
{
  return OCConverter::StandardBooleanToBoolean(AIS::ComputeGeometry(*((TopoDS_Vertex*)aVertex->Handle), *((gp_Pnt*)point->Handle), *((Handle_Geom_Plane*)aPlane->Handle), (Standard_Boolean&)(isOnPlane)));
}

 System::Boolean OCAIS::GetPlaneFromFace(OCNaroWrappers::OCTopoDS_Face^ aFace, OCNaroWrappers::OCgp_Pln^ aPlane, OCNaroWrappers::OCGeom_Surface^ aSurf, OCAIS_KindOfSurface& aSurfType, Standard_Real& Offset)
{
  return OCConverter::StandardBooleanToBoolean(AIS::GetPlaneFromFace(*((TopoDS_Face*)aFace->Handle), *((gp_Pln*)aPlane->Handle), *((Handle_Geom_Surface*)aSurf->Handle), (AIS_KindOfSurface&)aSurfType, Offset));
}

 void OCAIS::InitFaceLength(OCNaroWrappers::OCTopoDS_Face^ aFace, OCNaroWrappers::OCgp_Pln^ aPlane, OCNaroWrappers::OCGeom_Surface^ aSurface, OCAIS_KindOfSurface& aSurfaceType, Standard_Real& anOffset)
{
  AIS::InitFaceLength(*((TopoDS_Face*)aFace->Handle), *((gp_Pln*)aPlane->Handle), *((Handle_Geom_Surface*)aSurface->Handle), (AIS_KindOfSurface&)aSurfaceType, anOffset);
}

 void OCAIS::ComputeLengthBetweenPlanarFaces(OCNaroWrappers::OCTopoDS_Face^ FirstFace, OCNaroWrappers::OCTopoDS_Face^ SecondFace, OCNaroWrappers::OCgp_Pln^ Plane1, OCNaroWrappers::OCgp_Pln^ Plane2, Standard_Real& Value, OCNaroWrappers::OCgp_Pnt^ FirstAttach, OCNaroWrappers::OCgp_Pnt^ SecondAttach, OCNaroWrappers::OCgp_Dir^ DirAttach, System::Boolean AutomaticPos, OCNaroWrappers::OCgp_Pnt^ Position)
{
  AIS::ComputeLengthBetweenPlanarFaces(*((TopoDS_Face*)FirstFace->Handle), *((TopoDS_Face*)SecondFace->Handle), *((gp_Pln*)Plane1->Handle), *((gp_Pln*)Plane2->Handle), Value, *((gp_Pnt*)FirstAttach->Handle), *((gp_Pnt*)SecondAttach->Handle), *((gp_Dir*)DirAttach->Handle), OCConverter::BooleanToStandardBoolean(AutomaticPos), *((gp_Pnt*)Position->Handle));
}

 void OCAIS::ComputeLengthBetweenCurvilinearFaces(OCNaroWrappers::OCTopoDS_Face^ FirstFace, OCNaroWrappers::OCTopoDS_Face^ SecondFace, OCNaroWrappers::OCGeom_Surface^ FirstSurf, OCNaroWrappers::OCGeom_Surface^ SecondSurf, System::Boolean AutomaticPos, Standard_Real& Value, OCNaroWrappers::OCgp_Pnt^ Position, OCNaroWrappers::OCgp_Pnt^ FirstAttach, OCNaroWrappers::OCgp_Pnt^ SecondAttach, OCNaroWrappers::OCgp_Dir^ DirAttach)
{
  AIS::ComputeLengthBetweenCurvilinearFaces(*((TopoDS_Face*)FirstFace->Handle), *((TopoDS_Face*)SecondFace->Handle), *((Handle_Geom_Surface*)FirstSurf->Handle), *((Handle_Geom_Surface*)SecondSurf->Handle), OCConverter::BooleanToStandardBoolean(AutomaticPos), Value, *((gp_Pnt*)Position->Handle), *((gp_Pnt*)FirstAttach->Handle), *((gp_Pnt*)SecondAttach->Handle), *((gp_Dir*)DirAttach->Handle));
}

 void OCAIS::ComputeAngleBetweenPlanarFaces(OCNaroWrappers::OCTopoDS_Face^ FirstFace, OCNaroWrappers::OCTopoDS_Face^ SecondFace, OCNaroWrappers::OCGeom_Surface^ Surf2, OCNaroWrappers::OCgp_Ax1^ Axis, Standard_Real Value, System::Boolean AutomaticPos, OCNaroWrappers::OCgp_Pnt^ Position, OCNaroWrappers::OCgp_Pnt^ Center, OCNaroWrappers::OCgp_Pnt^ FirstAttach, OCNaroWrappers::OCgp_Pnt^ SecondAttach, OCNaroWrappers::OCgp_Dir^ FirstDir, OCNaroWrappers::OCgp_Dir^ SecondDir)
{
  AIS::ComputeAngleBetweenPlanarFaces(*((TopoDS_Face*)FirstFace->Handle), *((TopoDS_Face*)SecondFace->Handle), *((Handle_Geom_Surface*)Surf2->Handle), *((gp_Ax1*)Axis->Handle), Value, OCConverter::BooleanToStandardBoolean(AutomaticPos), *((gp_Pnt*)Position->Handle), *((gp_Pnt*)Center->Handle), *((gp_Pnt*)FirstAttach->Handle), *((gp_Pnt*)SecondAttach->Handle), *((gp_Dir*)FirstDir->Handle), *((gp_Dir*)SecondDir->Handle));
}

 void OCAIS::ComputeAngleBetweenCurvilinearFaces(OCNaroWrappers::OCTopoDS_Face^ FirstFace, OCNaroWrappers::OCTopoDS_Face^ SecondFace, OCNaroWrappers::OCGeom_Surface^ FirstSurf, OCNaroWrappers::OCGeom_Surface^ SecondSurf, OCAIS_KindOfSurface FirstSurfType, OCAIS_KindOfSurface SecondSurfType, OCNaroWrappers::OCgp_Ax1^ Axis, Standard_Real Value, System::Boolean AutomaticPos, OCNaroWrappers::OCgp_Pnt^ Position, OCNaroWrappers::OCgp_Pnt^ Center, OCNaroWrappers::OCgp_Pnt^ FirstAttach, OCNaroWrappers::OCgp_Pnt^ SecondAttach, OCNaroWrappers::OCgp_Dir^ FirstDir, OCNaroWrappers::OCgp_Dir^ SecondDir, OCNaroWrappers::OCGeom_Plane^ Plane)
{
  AIS::ComputeAngleBetweenCurvilinearFaces(*((TopoDS_Face*)FirstFace->Handle), *((TopoDS_Face*)SecondFace->Handle), *((Handle_Geom_Surface*)FirstSurf->Handle), *((Handle_Geom_Surface*)SecondSurf->Handle), (AIS_KindOfSurface)FirstSurfType, (AIS_KindOfSurface)SecondSurfType, *((gp_Ax1*)Axis->Handle), Value, OCConverter::BooleanToStandardBoolean(AutomaticPos), *((gp_Pnt*)Position->Handle), *((gp_Pnt*)Center->Handle), *((gp_Pnt*)FirstAttach->Handle), *((gp_Pnt*)SecondAttach->Handle), *((gp_Dir*)FirstDir->Handle), *((gp_Dir*)SecondDir->Handle), *((Handle_Geom_Plane*)Plane->Handle));
}

OCgp_Pnt^ OCAIS::ProjectPointOnPlane(OCNaroWrappers::OCgp_Pnt^ aPoint, OCNaroWrappers::OCgp_Pln^ aPlane)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = AIS::ProjectPointOnPlane(*((gp_Pnt*)aPoint->Handle), *((gp_Pln*)aPlane->Handle));
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCAIS::ProjectPointOnLine(OCNaroWrappers::OCgp_Pnt^ aPoint, OCNaroWrappers::OCgp_Lin^ aLine)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = AIS::ProjectPointOnLine(*((gp_Pnt*)aPoint->Handle), *((gp_Lin*)aLine->Handle));
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCAIS::TranslatePointToBound(OCNaroWrappers::OCgp_Pnt^ aPoint, OCNaroWrappers::OCgp_Dir^ aDir, OCNaroWrappers::OCBnd_Box^ aBndBox)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = AIS::TranslatePointToBound(*((gp_Pnt*)aPoint->Handle), *((gp_Dir*)aDir->Handle), *((Bnd_Box*)aBndBox->Handle));
  return gcnew OCgp_Pnt(tmp);
}

 System::Boolean OCAIS::InDomain(Standard_Real aFirstPar, Standard_Real aLastPar, Standard_Real anAttachPar)
{
  return OCConverter::StandardBooleanToBoolean(AIS::InDomain(aFirstPar, aLastPar, anAttachPar));
}

OCgp_Pnt^ OCAIS::NearestApex(OCNaroWrappers::OCgp_Elips^ elips, OCNaroWrappers::OCgp_Pnt^ pApex, OCNaroWrappers::OCgp_Pnt^ nApex, Standard_Real fpara, Standard_Real lpara, System::Boolean& IsInDomain)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = AIS::NearestApex(*((gp_Elips*)elips->Handle), *((gp_Pnt*)pApex->Handle), *((gp_Pnt*)nApex->Handle), fpara, lpara, (Standard_Boolean&)(IsInDomain));
  return gcnew OCgp_Pnt(tmp);
}

 Standard_Real OCAIS::DistanceFromApex(OCNaroWrappers::OCgp_Elips^ elips, OCNaroWrappers::OCgp_Pnt^ Apex, Standard_Real par)
{
  return AIS::DistanceFromApex(*((gp_Elips*)elips->Handle), *((gp_Pnt*)Apex->Handle), par);
}

 void OCAIS::ComputeProjEdgePresentation(OCNaroWrappers::OCPrs3d_Presentation^ aPres, OCNaroWrappers::OCAIS_Drawer^ aDrawer, OCNaroWrappers::OCTopoDS_Edge^ anEdge, OCNaroWrappers::OCGeom_Curve^ ProjCurve, OCNaroWrappers::OCgp_Pnt^ FirstP, OCNaroWrappers::OCgp_Pnt^ LastP, OCQuantity_NameOfColor aColor, Standard_Real aWidth, OCAspect_TypeOfLine aProjTOL, OCAspect_TypeOfLine aCallTOL)
{
  AIS::ComputeProjEdgePresentation(*((Handle_Prs3d_Presentation*)aPres->Handle), *((Handle_AIS_Drawer*)aDrawer->Handle), *((TopoDS_Edge*)anEdge->Handle), *((Handle_Geom_Curve*)ProjCurve->Handle), *((gp_Pnt*)FirstP->Handle), *((gp_Pnt*)LastP->Handle), (Quantity_NameOfColor)aColor, aWidth, (Aspect_TypeOfLine)aProjTOL, (Aspect_TypeOfLine)aCallTOL);
}

 void OCAIS::ComputeProjVertexPresentation(OCNaroWrappers::OCPrs3d_Presentation^ aPres, OCNaroWrappers::OCAIS_Drawer^ aDrawer, OCNaroWrappers::OCTopoDS_Vertex^ aVertex, OCNaroWrappers::OCgp_Pnt^ ProjPoint, OCQuantity_NameOfColor aColor, Standard_Real aWidth, OCAspect_TypeOfMarker aProjTOM, OCAspect_TypeOfLine aCallTOL)
{
  AIS::ComputeProjVertexPresentation(*((Handle_Prs3d_Presentation*)aPres->Handle), *((Handle_AIS_Drawer*)aDrawer->Handle), *((TopoDS_Vertex*)aVertex->Handle), *((gp_Pnt*)ProjPoint->Handle), (Quantity_NameOfColor)aColor, aWidth, (Aspect_TypeOfMarker)aProjTOM, (Aspect_TypeOfLine)aCallTOL);
}


