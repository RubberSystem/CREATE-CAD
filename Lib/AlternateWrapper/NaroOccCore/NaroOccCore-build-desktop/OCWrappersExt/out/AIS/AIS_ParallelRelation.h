// File generated by CPPExt (Transient)
//
#ifndef _AIS_ParallelRelation_OCWrappers_HeaderFile
#define _AIS_ParallelRelation_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS_ParallelRelation.hxx>
#include "../Converter.h"

#include "AIS_Relation.h"

#include "../gp/gp_Pnt.h"
#include "../gp/gp_Dir.h"
#include "../DsgPrs/DsgPrs_ArrowSide.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCGeom_Plane;
ref class OCgp_Pnt;
ref class OCPrsMgr_PresentationManager3d;
ref class OCPrs3d_Presentation;
ref class OCPrs3d_Projector;
ref class OCPrsMgr_PresentationManager2d;
ref class OCGraphic2d_GraphicObject;
ref class OCGeom_Transformation;
ref class OCSelectMgr_Selection;


//! A framework to display constraints of parallelism <br>
//! between two or more Interactive Objects. These <br>
//! entities can be faces or edges. <br>
public ref class OCAIS_ParallelRelation : OCAIS_Relation {

protected:
  // dummy constructor;
  OCAIS_ParallelRelation(OCDummy^) : OCAIS_Relation((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_ParallelRelation(Handle(AIS_ParallelRelation)* nativeHandle);

// Methods PUBLIC

//!  Constructs an object to display parallel constraints. <br>
//! This object is defined by the first shape aFShape and <br>
//! the second shape aSShape and the plane aPlane. <br>
OCAIS_ParallelRelation(OCNaroWrappers::OCTopoDS_Shape^ aFShape, OCNaroWrappers::OCTopoDS_Shape^ aSShape, OCNaroWrappers::OCGeom_Plane^ aPlane);

//! Constructs an object to display parallel constraints. <br>
//! This object is defined by the first shape aFShape and <br>
//! the second shape aSShape the plane aPlane, the <br>
//! position aPosition, the type of arrow, aSymbolPrs and <br>
//! its size anArrowSize. <br>
OCAIS_ParallelRelation(OCNaroWrappers::OCTopoDS_Shape^ aFShape, OCNaroWrappers::OCTopoDS_Shape^ aSShape, OCNaroWrappers::OCGeom_Plane^ aPlane, OCNaroWrappers::OCgp_Pnt^ aPosition, OCDsgPrs_ArrowSide aSymbolPrs, Standard_Real anArrowSize);

//! Returns true if the parallelism is movable. <br>
virtual /*instead*/  System::Boolean IsMovable() override;

//! computes the presentation according to a point of view <br>
//!          given by <aProjector>. <br>
//!          To be Used when the associated degenerated Presentations <br>
//!          have been transformed by <aTrsf> which is not a Pure <br>
//!          Translation. The HLR Prs can't be deducted automatically <br>
//!          WARNING :<aTrsf> must be applied <br>
//!           to the object to display before computation  !!! <br>
virtual /*instead*/  void Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCGeom_Transformation^ aTrsf, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation) override;

~OCAIS_ParallelRelation()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
