// File generated by CPPExt (Transient)
//
#ifndef _AIS_FixRelation_OCWrappers_HeaderFile
#define _AIS_FixRelation_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS_FixRelation.hxx>
#include "../Converter.h"

#include "AIS_Relation.h"

#include "../TopoDS/TopoDS_Wire.h"
#include "../gp/gp_Pnt.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCGeom_Plane;
ref class OCTopoDS_Wire;
ref class OCgp_Pnt;
ref class OCPrsMgr_PresentationManager3d;
ref class OCPrs3d_Presentation;
ref class OCPrs3d_Projector;
ref class OCPrsMgr_PresentationManager2d;
ref class OCGraphic2d_GraphicObject;
ref class OCGeom_Transformation;
ref class OCSelectMgr_Selection;
ref class OCTopoDS_Vertex;
ref class OCGeom_Curve;
ref class OCTopoDS_Edge;
ref class OCgp_Lin;
ref class OCgp_Circ;


//! Constructs and manages a constraint by a fixed <br>
//! relation between two or more interactive datums. This <br>
//! constraint is represented by a wire from a shape - <br>
//! point, vertex, or edge - in the first datum and a <br>
//! corresponding shape in the second. <br>
//! Warning: This relation is not bound with any kind of parametric <br>
//!          constraint : it represents the "status" of an parametric <br>
//!          object. <br>
public ref class OCAIS_FixRelation : OCAIS_Relation {

protected:
  // dummy constructor;
  OCAIS_FixRelation(OCDummy^) : OCAIS_Relation((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_FixRelation(Handle(AIS_FixRelation)* nativeHandle);

// Methods PUBLIC

//!  initializes the vertex aShape, the <br>
//!   plane aPlane and the wire aWire, which connects <br>
//!   the two vertices in a fixed relation. <br>
OCAIS_FixRelation(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCGeom_Plane^ aPlane, OCNaroWrappers::OCTopoDS_Wire^ aWire);

//!  initializes the vertex aShape, the <br>
//!   plane aPlane and the wire aWire, the position <br>
//!   aPosition, the arrow size anArrowSize and the <br>
//! wire aWire, which connects the two vertices in a fixed relation. <br>
OCAIS_FixRelation(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCGeom_Plane^ aPlane, OCNaroWrappers::OCTopoDS_Wire^ aWire, OCNaroWrappers::OCgp_Pnt^ aPosition, Standard_Real anArrowSize);

//!  initializes the edge aShape and the plane aPlane. <br>
OCAIS_FixRelation(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCGeom_Plane^ aPlane);

//! initializes the edge aShape, the <br>
//!   plane aPlane, the position aPosition and the arrow <br>
//!   size anArrowSize. <br>
OCAIS_FixRelation(OCNaroWrappers::OCTopoDS_Shape^ aShape, OCNaroWrappers::OCGeom_Plane^ aPlane, OCNaroWrappers::OCgp_Pnt^ aPosition, Standard_Real anArrowSize);

//! Returns the wire which connects vertices in a fixed relation. <br>
 /*instead*/  OCTopoDS_Wire^ Wire() ;

//! Constructs the wire aWire. This connects vertices <br>
//! which are in a fixed relation. <br>
 /*instead*/  void SetWire(OCNaroWrappers::OCTopoDS_Wire^ aWire) ;

//! Returns true if the Interactive Objects in the relation <br>
//! are movable. <br>
virtual /*instead*/  System::Boolean IsMovable() override;

//! computes the presentation according to a point of view <br>
//!          given by <aProjector>. <br>
//!          To be Used when the associated degenerated Presentations <br>
//!          have been transformed by <aTrsf> which is not a Pure <br>
//!          Translation. The HLR Prs can't be deducted automatically <br>
//!          WARNING :<aTrsf> must be applied <br>
//!           to the object to display before computation  !!! <br>
virtual /*instead*/  void Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCGeom_Transformation^ aTrsf, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation) override;

~OCAIS_FixRelation()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
