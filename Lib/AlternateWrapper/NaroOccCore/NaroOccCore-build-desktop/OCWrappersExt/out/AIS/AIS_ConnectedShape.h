// File generated by CPPExt (Transient)
//
#ifndef _AIS_ConnectedShape_OCWrappers_HeaderFile
#define _AIS_ConnectedShape_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS_ConnectedShape.hxx>
#include "../Converter.h"

#include "AIS_ConnectedInteractive.h"

#include "../TopoDS/TopoDS_Shape.h"
#include "../PrsMgr/PrsMgr_TypeOfPresentation3d.h"
#include "AIS_KindOfInteractive.h"


namespace OCNaroWrappers
{

ref class OCAIS_Shape;
ref class OCAIS_InteractiveObject;
ref class OCTopLoc_Location;
ref class OCPrs3d_Projector;
ref class OCPrs3d_Presentation;
ref class OCGeom_Transformation;
ref class OCPrsMgr_PresentationManager2d;
ref class OCGraphic2d_GraphicObject;
ref class OCSelectMgr_Selection;
ref class OCTopoDS_Shape;


//! Constructs a Connected Interactive Object with an <br>
//! AIS_Shape presentation as its reference Interactive Object. <br>
//! In topological decomposition of the shape, this class <br>
//! assigns the same owners to the sensitive primitives <br>
//! as those in AIS_Shape. Like AIS_Shape, it allows a <br>
//! presentation of hidden parts. These are calculated <br>
//! automatically from the shape of its reference entity. <br>
public ref class OCAIS_ConnectedShape : OCAIS_ConnectedInteractive {

protected:
  // dummy constructor;
  OCAIS_ConnectedShape(OCDummy^) : OCAIS_ConnectedInteractive((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_ConnectedShape(Handle(AIS_ConnectedShape)* nativeHandle);

// Methods PUBLIC

//! Initializes the type of 3d presentation aTypeOfPresentation <br>
OCAIS_ConnectedShape(OCPrsMgr_TypeOfPresentation3d aTypeOfPresentation);

//! Initializes the entity aInteractiveShape and the type of 3d presentation aTypeOfPresentation. <br>
OCAIS_ConnectedShape(OCNaroWrappers::OCAIS_Shape^ aInteractiveShape, OCPrsMgr_TypeOfPresentation3d aTypeOfPresentation);

//! Initializes the entity aConnectedShape and the type of 3d presentation aTypeOfPresentation. <br>
OCAIS_ConnectedShape(OCNaroWrappers::OCAIS_ConnectedShape^ aConnectedShape, OCPrsMgr_TypeOfPresentation3d aTypeOfPresentation);


virtual /*instead*/  OCAIS_KindOfInteractive Type() override;


virtual /*instead*/  Standard_Integer Signature() override;


virtual /*instead*/  System::Boolean AcceptShapeDecomposition() override;

//!  Establishes the connection between the Connected <br>
//! Interactive Object, anotherIobj, and its reference <br>
//! entity. If there is already a previous connection with <br>
//! an Interactive Object, this connection is removed. <br>
virtual /*instead*/  void Connect(OCNaroWrappers::OCAIS_InteractiveObject^ anotherIObj) override;

//! Establishes the connection between the Connected <br>
//! Interactive Object, anotherIobj, and its reference <br>
//! entity. If there is already a previous connection with <br>
//! an Interactive Object, this connection is removed. <br>
//! This syntax also initiates the location of the Connected Interactive Object. <br>
virtual /*instead*/  void Connect(OCNaroWrappers::OCAIS_InteractiveObject^ anotherIobj, OCNaroWrappers::OCTopLoc_Location^ aLocation) override;

//! this method should fill the presentation according to the <br>
//!          enumerated mode of the application and to the display parameter <br>
//!          of the application. <br>
virtual /*instead*/  void Compute(OCNaroWrappers::OCPrsMgr_PresentationManager2d^ aPresentationManager, OCNaroWrappers::OCGraphic2d_GraphicObject^ aPresentation, Standard_Integer aMode) override;

//! Returns the topological shape which is the reference <br>
//! for the connected shape. Sets hilight mode to index <br>
//! 0. This returns a wireframe presentation. <br>
 /*instead*/  OCTopoDS_Shape^ Shape() ;

~OCAIS_ConnectedShape()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
