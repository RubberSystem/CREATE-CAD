// File generated by CPPExt (CPP file)
//

#include "AIS_GlobalStatus.h"
#include "../Converter.h"
#include "../TColStd/TColStd_ListOfInteger.h"


using namespace OCNaroWrappers;

OCAIS_GlobalStatus::OCAIS_GlobalStatus(Handle(AIS_GlobalStatus)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AIS_GlobalStatus(*nativeHandle);
}

OCAIS_GlobalStatus::OCAIS_GlobalStatus() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_GlobalStatus(new AIS_GlobalStatus());
}

OCAIS_GlobalStatus::OCAIS_GlobalStatus(OCAIS_DisplayStatus aStat, Standard_Integer aDispMode, Standard_Integer aSelMode, System::Boolean ishilighted, OCQuantity_NameOfColor TheHiCol, Standard_Integer aLayerIndex) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AIS_GlobalStatus(new AIS_GlobalStatus((AIS_DisplayStatus)aStat, aDispMode, aSelMode, OCConverter::BooleanToStandardBoolean(ishilighted), (Quantity_NameOfColor)TheHiCol, aLayerIndex));
}

 void OCAIS_GlobalStatus::SetGraphicStatus(OCAIS_DisplayStatus aStat)
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->SetGraphicStatus((AIS_DisplayStatus)aStat);
}

 void OCAIS_GlobalStatus::AddDisplayMode(Standard_Integer aMode)
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->AddDisplayMode(aMode);
}

 void OCAIS_GlobalStatus::AddSelectionMode(Standard_Integer aMode)
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->AddSelectionMode(aMode);
}

 void OCAIS_GlobalStatus::SetLayerIndex(Standard_Integer AnIndex)
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->SetLayerIndex(AnIndex);
}

 void OCAIS_GlobalStatus::SetHilightStatus(System::Boolean aStat)
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->SetHilightStatus(OCConverter::BooleanToStandardBoolean(aStat));
}

 void OCAIS_GlobalStatus::SetHilightColor(OCQuantity_NameOfColor aHiCol)
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->SetHilightColor((Quantity_NameOfColor)aHiCol);
}

 System::Boolean OCAIS_GlobalStatus::IsSubIntensityOn()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_GlobalStatus*)nativeHandle))->IsSubIntensityOn());
}

 void OCAIS_GlobalStatus::SubIntensityOn()
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->SubIntensityOn();
}

 void OCAIS_GlobalStatus::SubIntensityOff()
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->SubIntensityOff();
}

 void OCAIS_GlobalStatus::RemoveDisplayMode(Standard_Integer aMode)
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->RemoveDisplayMode(aMode);
}

 void OCAIS_GlobalStatus::RemoveSelectionMode(Standard_Integer aMode)
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->RemoveSelectionMode(aMode);
}

 void OCAIS_GlobalStatus::ClearSelectionModes()
{
  (*((Handle_AIS_GlobalStatus*)nativeHandle))->ClearSelectionModes();
}

 OCAIS_DisplayStatus OCAIS_GlobalStatus::GraphicStatus()
{
  return (OCAIS_DisplayStatus)((*((Handle_AIS_GlobalStatus*)nativeHandle))->GraphicStatus());
}

OCTColStd_ListOfInteger^ OCAIS_GlobalStatus::DisplayedModes()
{
  TColStd_ListOfInteger* tmp = new TColStd_ListOfInteger();
  *tmp = (*((Handle_AIS_GlobalStatus*)nativeHandle))->DisplayedModes();
  return gcnew OCTColStd_ListOfInteger(tmp);
}

OCTColStd_ListOfInteger^ OCAIS_GlobalStatus::SelectionModes()
{
  TColStd_ListOfInteger* tmp = new TColStd_ListOfInteger();
  *tmp = (*((Handle_AIS_GlobalStatus*)nativeHandle))->SelectionModes();
  return gcnew OCTColStd_ListOfInteger(tmp);
}

 System::Boolean OCAIS_GlobalStatus::IsHilighted()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_GlobalStatus*)nativeHandle))->IsHilighted());
}

 OCQuantity_NameOfColor OCAIS_GlobalStatus::HilightColor()
{
  return (OCQuantity_NameOfColor)((*((Handle_AIS_GlobalStatus*)nativeHandle))->HilightColor());
}

 System::Boolean OCAIS_GlobalStatus::IsDModeIn(Standard_Integer aMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_GlobalStatus*)nativeHandle))->IsDModeIn(aMode));
}

 System::Boolean OCAIS_GlobalStatus::IsSModeIn(Standard_Integer aMode)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_AIS_GlobalStatus*)nativeHandle))->IsSModeIn(aMode));
}


