// File generated by CPPExt (Transient)
//
#ifndef _AIS_Point_OCWrappers_HeaderFile
#define _AIS_Point_OCWrappers_HeaderFile

// include the wrapped class
#include <AIS_Point.hxx>
#include "../Converter.h"

#include "AIS_InteractiveObject.h"

#include "../Aspect/Aspect_TypeOfMarker.h"
#include "AIS_KindOfInteractive.h"
#include "../Quantity/Quantity_NameOfColor.h"


namespace OCNaroWrappers
{

ref class OCGeom_Point;
ref class OCPrsMgr_PresentationManager3d;
ref class OCPrs3d_Presentation;
ref class OCPrs3d_Projector;
ref class OCPrsMgr_PresentationManager2d;
ref class OCGraphic2d_GraphicObject;
ref class OCGeom_Transformation;
ref class OCSelectMgr_Selection;
ref class OCQuantity_Color;
ref class OCTopoDS_Vertex;


//! Constructs point datums to be used in construction of <br>
//! composite shapes. The datum is displayed as the plus marker +. <br>
public ref class OCAIS_Point : OCAIS_InteractiveObject {

protected:
  // dummy constructor;
  OCAIS_Point(OCDummy^) : OCAIS_InteractiveObject((OCDummy^)nullptr) {};

public:

// constructor from native
OCAIS_Point(Handle(AIS_Point)* nativeHandle);

// Methods PUBLIC


//! Initializes the point aComponent from which the point <br>
//! datum will be built. <br>
OCAIS_Point(OCNaroWrappers::OCGeom_Point^ aComponent);

//! Returns index 1, the default index for a point. <br>
virtual /*instead*/  Standard_Integer Signature() override;

//! Indicates that a point is a datum. <br>
virtual /*instead*/  OCAIS_KindOfInteractive Type() override;

//! Returns the component specified in SetComponent. <br>
 /*instead*/  OCGeom_Point^ Component() ;

//! Constructs an instance of the point aComponent. <br>
 /*instead*/  void SetComponent(OCNaroWrappers::OCGeom_Point^ aComponent) ;

//! Returns true if the display mode selected is valid for point datums. <br>
virtual /*instead*/  System::Boolean AcceptDisplayMode(Standard_Integer aMode) override;

//! computes the presentation according to a point of view <br>
//!          given by <aProjector>. <br>
//!          To be Used when the associated degenerated Presentations <br>
//!          have been transformed by <aTrsf> which is not a Pure <br>
//!          Translation. The HLR Prs can't be deducted automatically <br>
//!          WARNING :<aTrsf> must be applied <br>
//!           to the object to display before computation  !!! <br>
virtual /*instead*/  void Compute(OCNaroWrappers::OCPrs3d_Projector^ aProjector, OCNaroWrappers::OCGeom_Transformation^ aTrsf, OCNaroWrappers::OCPrs3d_Presentation^ aPresentation) override;

//! Allows you to provide settings for the cp;pr aColor. <br>
virtual /*instead*/  void SetColor(OCQuantity_NameOfColor aColor) override;


virtual /*instead*/  void SetColor(OCNaroWrappers::OCQuantity_Color^ aColor) override;

//! Allows you to remove color settings. <br>
virtual /*instead*/  void UnsetColor() override;

//! Allows you to provide settings for a marker. These include <br>
//! -   type of marker, <br>
//! -   marker color, <br>
//! -   scale factor. <br>
 /*instead*/  void SetMarker(OCAspect_TypeOfMarker aType) ;

//! Removes the marker settings. <br>
 /*instead*/  void UnsetMarker() ;

//! Returns true if the point datum has a marker. <br>
 /*instead*/  System::Boolean HasMarker() ;

//! Converts a point into a vertex. <br>
 /*instead*/  OCTopoDS_Vertex^ Vertex() ;

~OCAIS_Point()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
