// File generated by CPPExt (CPP file)
//

#include "Geom_Direction.h"
#include "../Converter.h"
#include "../gp/gp_Dir.h"
#include "Geom_Vector.h"
#include "../gp/gp_Trsf.h"
#include "Geom_Geometry.h"


using namespace OCNaroWrappers;

OCGeom_Direction::OCGeom_Direction(Handle(Geom_Direction)* nativeHandle) : OCGeom_Vector((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Geom_Direction(*nativeHandle);
}

OCGeom_Direction::OCGeom_Direction(Standard_Real X, Standard_Real Y, Standard_Real Z) : OCGeom_Vector((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom_Direction(new Geom_Direction(X, Y, Z));
}

OCGeom_Direction::OCGeom_Direction(OCNaroWrappers::OCgp_Dir^ V) : OCGeom_Vector((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom_Direction(new Geom_Direction(*((gp_Dir*)V->Handle)));
}

 void OCGeom_Direction::SetCoord(Standard_Real X, Standard_Real Y, Standard_Real Z)
{
  (*((Handle_Geom_Direction*)nativeHandle))->SetCoord(X, Y, Z);
}

 void OCGeom_Direction::SetDir(OCNaroWrappers::OCgp_Dir^ V)
{
  (*((Handle_Geom_Direction*)nativeHandle))->SetDir(*((gp_Dir*)V->Handle));
}

 void OCGeom_Direction::SetX(Standard_Real X)
{
  (*((Handle_Geom_Direction*)nativeHandle))->SetX(X);
}

 void OCGeom_Direction::SetY(Standard_Real Y)
{
  (*((Handle_Geom_Direction*)nativeHandle))->SetY(Y);
}

 void OCGeom_Direction::SetZ(Standard_Real Z)
{
  (*((Handle_Geom_Direction*)nativeHandle))->SetZ(Z);
}

OCgp_Dir^ OCGeom_Direction::Dir()
{
  gp_Dir* tmp = new gp_Dir();
  *tmp = (*((Handle_Geom_Direction*)nativeHandle))->Dir();
  return gcnew OCgp_Dir(tmp);
}

 Standard_Real OCGeom_Direction::Magnitude()
{
  return (*((Handle_Geom_Direction*)nativeHandle))->Magnitude();
}

 Standard_Real OCGeom_Direction::SquareMagnitude()
{
  return (*((Handle_Geom_Direction*)nativeHandle))->SquareMagnitude();
}

 void OCGeom_Direction::Cross(OCNaroWrappers::OCGeom_Vector^ Other)
{
  (*((Handle_Geom_Direction*)nativeHandle))->Cross(*((Handle_Geom_Vector*)Other->Handle));
}

 void OCGeom_Direction::CrossCross(OCNaroWrappers::OCGeom_Vector^ V1, OCNaroWrappers::OCGeom_Vector^ V2)
{
  (*((Handle_Geom_Direction*)nativeHandle))->CrossCross(*((Handle_Geom_Vector*)V1->Handle), *((Handle_Geom_Vector*)V2->Handle));
}

OCGeom_Vector^ OCGeom_Direction::Crossed(OCNaroWrappers::OCGeom_Vector^ Other)
{
  Handle(Geom_Vector) tmp = (*((Handle_Geom_Direction*)nativeHandle))->Crossed(*((Handle_Geom_Vector*)Other->Handle));
  return gcnew OCGeom_Vector(&tmp);
}

OCGeom_Vector^ OCGeom_Direction::CrossCrossed(OCNaroWrappers::OCGeom_Vector^ V1, OCNaroWrappers::OCGeom_Vector^ V2)
{
  Handle(Geom_Vector) tmp = (*((Handle_Geom_Direction*)nativeHandle))->CrossCrossed(*((Handle_Geom_Vector*)V1->Handle), *((Handle_Geom_Vector*)V2->Handle));
  return gcnew OCGeom_Vector(&tmp);
}

 void OCGeom_Direction::Transform(OCNaroWrappers::OCgp_Trsf^ T)
{
  (*((Handle_Geom_Direction*)nativeHandle))->Transform(*((gp_Trsf*)T->Handle));
}

OCGeom_Geometry^ OCGeom_Direction::Copy()
{
  Handle(Geom_Geometry) tmp = (*((Handle_Geom_Direction*)nativeHandle))->Copy();
  return gcnew OCGeom_Geometry(&tmp);
}


