// File generated by CPPExt (Transient)
//
#ifndef _Geom_BoundedSurface_OCWrappers_HeaderFile
#define _Geom_BoundedSurface_OCWrappers_HeaderFile

// include the wrapped class
#include <Geom_BoundedSurface.hxx>
#include "../Converter.h"

#include "Geom_Surface.h"



namespace OCNaroWrappers
{



//! The root class for bounded surfaces in 3D space. A <br>
//! bounded surface is defined by a rectangle in its 2D parametric space, i.e. <br>
//! - its u parameter, which ranges between two finite <br>
//!   values u0 and u1, referred to as "First u <br>
//!   parameter" and "Last u parameter" respectively, and <br>
//! - its v parameter, which ranges between two finite <br>
//!   values v0 and v1, referred to as "First v <br>
//!   parameter" and the "Last v parameter" respectively. <br>
//!   The surface is limited by four curves which are the <br>
//! boundaries of the surface: <br>
//! - its u0 and u1 isoparametric curves in the u parametric direction, and <br>
//! - its v0 and v1 isoparametric curves in the v parametric direction. <br>
//! A bounded surface is finite. <br>
//! The common behavior of all bounded surfaces is <br>
//! described by the Geom_Surface class. <br>
//! The Geom package provides three concrete <br>
//! implementations of bounded surfaces: <br>
//! - Geom_BezierSurface, <br>
//! - Geom_BSplineSurface, and <br>
//! - Geom_RectangularTrimmedSurface. <br>
//!  The first two of these implement well known <br>
//! mathematical definitions of complex surfaces, the third <br>
//! trims a surface using four isoparametric curves, i.e. it <br>
//! limits the variation of its parameters to a rectangle in <br>
//! 2D parametric space. <br>
public ref class OCGeom_BoundedSurface : OCGeom_Surface {

protected:
  // dummy constructor;
  OCGeom_BoundedSurface(OCDummy^) : OCGeom_Surface((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom_BoundedSurface(Handle(Geom_BoundedSurface)* nativeHandle);

// Methods PUBLIC

~OCGeom_BoundedSurface()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
