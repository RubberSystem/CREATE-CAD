// File generated by CPPExt (Transient)
//
#ifndef _Geom_Axis1Placement_OCWrappers_HeaderFile
#define _Geom_Axis1Placement_OCWrappers_HeaderFile

// include the wrapped class
#include <Geom_Axis1Placement.hxx>
#include "../Converter.h"

#include "Geom_AxisPlacement.h"



namespace OCNaroWrappers
{

ref class OCgp_Ax1;
ref class OCgp_Pnt;
ref class OCgp_Dir;
ref class OCgp_Trsf;
ref class OCGeom_Geometry;


//! Describes an axis in 3D space. <br>
//! An axis is defined by: <br>
//! - its origin, also termed the "Location point" of the axis, <br>
//! - its unit vector, termed the "Direction" of the axis. <br>
//! Note: Geom_Axis1Placement axes provide the <br>
//! same kind of "geometric" services as gp_Ax1 axes <br>
//! but have more complex data structures. The <br>
//! geometric objects provided by the Geom package <br>
//! use gp_Ax1 objects to include axes in their data <br>
//! structures, or to define an axis of symmetry or axis of rotation. <br>
//! Geom_Axis1Placement axes are used in a context <br>
//! where they can be shared by several objects <br>
//! contained inside a common data structure. <br>
public ref class OCGeom_Axis1Placement : OCGeom_AxisPlacement {

protected:
  // dummy constructor;
  OCGeom_Axis1Placement(OCDummy^) : OCGeom_AxisPlacement((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom_Axis1Placement(Handle(Geom_Axis1Placement)* nativeHandle);

// Methods PUBLIC

//! Returns a transient copy of A1. <br>
OCGeom_Axis1Placement(OCNaroWrappers::OCgp_Ax1^ A1);


//!  P is the origin of the axis placement and V is the direction <br>
//!  of the axis placement. <br>
OCGeom_Axis1Placement(OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Dir^ V);

//! Returns a non transient copy of <me>. <br>
 /*instead*/  OCgp_Ax1^ Ax1() ;

//! Reverses the direction of the axis placement. <br>
 /*instead*/  void Reverse() ;

//!  Returns a copy of <me> reversed. <br>
 /*instead*/  OCGeom_Axis1Placement^ Reversed() ;

//! Assigns V to the unit vector of this axis. <br>
 /*instead*/  void SetDirection(OCNaroWrappers::OCgp_Dir^ V) ;

//! Applies the transformation T to this axis. <br>
 /*instead*/  void Transform(OCNaroWrappers::OCgp_Trsf^ T) ;

//! Creates a new object, which is a copy of this axis. <br>
 /*instead*/  OCGeom_Geometry^ Copy() ;

~OCGeom_Axis1Placement()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
