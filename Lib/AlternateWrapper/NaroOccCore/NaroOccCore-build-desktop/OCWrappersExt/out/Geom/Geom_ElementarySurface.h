// File generated by CPPExt (Transient)
//
#ifndef _Geom_ElementarySurface_OCWrappers_HeaderFile
#define _Geom_ElementarySurface_OCWrappers_HeaderFile

// include the wrapped class
#include <Geom_ElementarySurface.hxx>
#include "../Converter.h"

#include "Geom_Surface.h"

#include "../gp/gp_Ax3.h"
#include "../GeomAbs/GeomAbs_Shape.h"


namespace OCNaroWrappers
{

ref class OCgp_Ax1;
ref class OCgp_Pnt;
ref class OCgp_Ax3;


//! Describes the common behavior of surfaces which <br>
//! have a simple parametric equation in a local <br>
//! coordinate system. The Geom package provides <br>
//! several implementations of concrete elementary surfaces: <br>
//! - the plane, and <br>
//! - four simple surfaces of revolution: the cylinder, the <br>
//!   cone, the sphere and the torus. <br>
//! An elementary surface inherits the common behavior <br>
//! of Geom_Surface surfaces. Furthermore, it is located <br>
//! in 3D space by a coordinate system (a gp_Ax3 <br>
//! object) which is also its local coordinate system. <br>
//! Any elementary surface is oriented, i.e. the normal <br>
//! vector is always defined, and gives the same <br>
//! orientation to the surface, at any point on the surface. <br>
//! In topology this property is referred to as the "outside <br>
//! region of the surface". This orientation is related to <br>
//! the two parametric directions of the surface. <br>
//! Rotation of a surface around the "main Axis" of its <br>
//! coordinate system, in the trigonometric sense given <br>
//! by the "X Direction" and the "Y Direction" of the <br>
//! coordinate system, defines the u parametric direction <br>
//! of that elementary surface of revolution. This is the <br>
//! default construction mode. <br>
//! It is also possible, however, to change the orientation <br>
//! of a surface by reversing one of the two parametric <br>
//! directions: use the UReverse or VReverse functions <br>
//! to change the orientation of the normal at any point on the surface. <br>
//! Warning <br>
//! The local coordinate system of an elementary surface <br>
//! is not necessarily direct: <br>
//! - if it is direct, the trigonometric sense defined by its <br>
//! "main Direction" is the same as the trigonometric <br>
//!  sense defined by its two vectors "X Direction" and "Y Direction": <br>
//!   "main Direction" = "X Direction" ^ "Y Direction" <br>
//! - if it is indirect, the two definitions of trigonometric <br>
//!   sense are opposite: <br>
//! "main Direction" = - "X Direction" ^ "Y Direction" <br>
public ref class OCGeom_ElementarySurface : OCGeom_Surface {

protected:
  // dummy constructor;
  OCGeom_ElementarySurface(OCDummy^) : OCGeom_Surface((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom_ElementarySurface(Handle(Geom_ElementarySurface)* nativeHandle);

// Methods PUBLIC


//!  Changes the main axis (ZAxis) of the elementary surface. <br>
//!  Raised if the direction of A1 is parallel to the XAxis of the <br>
//!  coordinate system of the surface. <br>
 /*instead*/  void SetAxis(OCNaroWrappers::OCgp_Ax1^ A1) ;


//!  Changes the location of the local coordinates system of the <br>
//!  surface. <br>
 /*instead*/  void SetLocation(OCNaroWrappers::OCgp_Pnt^ Loc) ;


//!  Changes the local coordinates system of the surface. <br>
 /*instead*/  void SetPosition(OCNaroWrappers::OCgp_Ax3^ A3) ;


//!  Returns the main axis of the surface (ZAxis). <br>
 /*instead*/  OCgp_Ax1^ Axis() ;


//!  Returns the location point of the local coordinate system of the <br>
//!  surface. <br>
 /*instead*/  OCgp_Pnt^ Location() ;

//! Returns the local coordinates system of the surface. <br>
 /*instead*/  OCgp_Ax3^ Position() ;


//!  Reverses the U parametric direction of the surface. <br>
virtual /*instead*/  void UReverse() ;


//!  Reverses the V parametric direction of the surface. <br>
virtual /*instead*/  void VReverse() ;

//! Returns GeomAbs_CN, the global continuity of any elementary surface. <br>
 /*instead*/  OCGeomAbs_Shape Continuity() ;

//! Returns True. <br>
 /*instead*/  System::Boolean IsCNu(Standard_Integer N) ;

//! Returns True. <br>
 /*instead*/  System::Boolean IsCNv(Standard_Integer N) ;

~OCGeom_ElementarySurface()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
