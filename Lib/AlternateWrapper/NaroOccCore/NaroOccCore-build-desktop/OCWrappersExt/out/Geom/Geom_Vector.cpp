// File generated by CPPExt (CPP file)
//

#include "Geom_Vector.h"
#include "../Converter.h"
#include "../gp/gp_Vec.h"


using namespace OCNaroWrappers;

OCGeom_Vector::OCGeom_Vector(Handle(Geom_Vector)* nativeHandle) : OCGeom_Geometry((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Geom_Vector(*nativeHandle);
}

 void OCGeom_Vector::Reverse()
{
  (*((Handle_Geom_Vector*)nativeHandle))->Reverse();
}

OCGeom_Vector^ OCGeom_Vector::Reversed()
{
  Handle(Geom_Vector) tmp = (*((Handle_Geom_Vector*)nativeHandle))->Reversed();
  return gcnew OCGeom_Vector(&tmp);
}

 Standard_Real OCGeom_Vector::Angle(OCNaroWrappers::OCGeom_Vector^ Other)
{
  return (*((Handle_Geom_Vector*)nativeHandle))->Angle(*((Handle_Geom_Vector*)Other->Handle));
}

 Standard_Real OCGeom_Vector::AngleWithRef(OCNaroWrappers::OCGeom_Vector^ Other, OCNaroWrappers::OCGeom_Vector^ VRef)
{
  return (*((Handle_Geom_Vector*)nativeHandle))->AngleWithRef(*((Handle_Geom_Vector*)Other->Handle), *((Handle_Geom_Vector*)VRef->Handle));
}

 void OCGeom_Vector::Coord(Standard_Real& X, Standard_Real& Y, Standard_Real& Z)
{
  (*((Handle_Geom_Vector*)nativeHandle))->Coord(X, Y, Z);
}

 Standard_Real OCGeom_Vector::X()
{
  return (*((Handle_Geom_Vector*)nativeHandle))->X();
}

 Standard_Real OCGeom_Vector::Y()
{
  return (*((Handle_Geom_Vector*)nativeHandle))->Y();
}

 Standard_Real OCGeom_Vector::Z()
{
  return (*((Handle_Geom_Vector*)nativeHandle))->Z();
}

 Standard_Real OCGeom_Vector::Dot(OCNaroWrappers::OCGeom_Vector^ Other)
{
  return (*((Handle_Geom_Vector*)nativeHandle))->Dot(*((Handle_Geom_Vector*)Other->Handle));
}

 Standard_Real OCGeom_Vector::DotCross(OCNaroWrappers::OCGeom_Vector^ V1, OCNaroWrappers::OCGeom_Vector^ V2)
{
  return (*((Handle_Geom_Vector*)nativeHandle))->DotCross(*((Handle_Geom_Vector*)V1->Handle), *((Handle_Geom_Vector*)V2->Handle));
}

OCgp_Vec^ OCGeom_Vector::Vec()
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = (*((Handle_Geom_Vector*)nativeHandle))->Vec();
  return gcnew OCgp_Vec(tmp);
}


