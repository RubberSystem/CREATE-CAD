// File generated by CPPExt (CPP file)
//

#include "Geom_HSequenceOfBSplineSurface.h"
#include "../Converter.h"
#include "Geom_BSplineSurface.h"
#include "Geom_SequenceOfBSplineSurface.h"


using namespace OCNaroWrappers;

OCGeom_HSequenceOfBSplineSurface::OCGeom_HSequenceOfBSplineSurface(Handle(Geom_HSequenceOfBSplineSurface)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Geom_HSequenceOfBSplineSurface(*nativeHandle);
}

OCGeom_HSequenceOfBSplineSurface::OCGeom_HSequenceOfBSplineSurface() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom_HSequenceOfBSplineSurface(new Geom_HSequenceOfBSplineSurface());
}

 System::Boolean OCGeom_HSequenceOfBSplineSurface::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCGeom_HSequenceOfBSplineSurface::Length()
{
  return (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Length();
}

 void OCGeom_HSequenceOfBSplineSurface::Clear()
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Clear();
}

 void OCGeom_HSequenceOfBSplineSurface::Append(OCNaroWrappers::OCGeom_BSplineSurface^ anItem)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Append(*((Handle_Geom_BSplineSurface*)anItem->Handle));
}

 void OCGeom_HSequenceOfBSplineSurface::Append(OCNaroWrappers::OCGeom_HSequenceOfBSplineSurface^ aSequence)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Append(*((Handle_Geom_HSequenceOfBSplineSurface*)aSequence->Handle));
}

 void OCGeom_HSequenceOfBSplineSurface::Prepend(OCNaroWrappers::OCGeom_BSplineSurface^ anItem)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Prepend(*((Handle_Geom_BSplineSurface*)anItem->Handle));
}

 void OCGeom_HSequenceOfBSplineSurface::Prepend(OCNaroWrappers::OCGeom_HSequenceOfBSplineSurface^ aSequence)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Prepend(*((Handle_Geom_HSequenceOfBSplineSurface*)aSequence->Handle));
}

 void OCGeom_HSequenceOfBSplineSurface::Reverse()
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Reverse();
}

 void OCGeom_HSequenceOfBSplineSurface::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCGeom_BSplineSurface^ anItem)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->InsertBefore(anIndex, *((Handle_Geom_BSplineSurface*)anItem->Handle));
}

 void OCGeom_HSequenceOfBSplineSurface::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCGeom_HSequenceOfBSplineSurface^ aSequence)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->InsertBefore(anIndex, *((Handle_Geom_HSequenceOfBSplineSurface*)aSequence->Handle));
}

 void OCGeom_HSequenceOfBSplineSurface::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCGeom_BSplineSurface^ anItem)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->InsertAfter(anIndex, *((Handle_Geom_BSplineSurface*)anItem->Handle));
}

 void OCGeom_HSequenceOfBSplineSurface::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCGeom_HSequenceOfBSplineSurface^ aSequence)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->InsertAfter(anIndex, *((Handle_Geom_HSequenceOfBSplineSurface*)aSequence->Handle));
}

 void OCGeom_HSequenceOfBSplineSurface::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCGeom_HSequenceOfBSplineSurface^ OCGeom_HSequenceOfBSplineSurface::Split(Standard_Integer anIndex)
{
  Handle(Geom_HSequenceOfBSplineSurface) tmp = (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Split(anIndex);
  return gcnew OCGeom_HSequenceOfBSplineSurface(&tmp);
}

 void OCGeom_HSequenceOfBSplineSurface::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCGeom_BSplineSurface^ anItem)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->SetValue(anIndex, *((Handle_Geom_BSplineSurface*)anItem->Handle));
}

OCGeom_BSplineSurface^ OCGeom_HSequenceOfBSplineSurface::Value(Standard_Integer anIndex)
{
  Handle(Geom_BSplineSurface) tmp = (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Value(anIndex);
  return gcnew OCGeom_BSplineSurface(&tmp);
}

OCGeom_BSplineSurface^ OCGeom_HSequenceOfBSplineSurface::ChangeValue(Standard_Integer anIndex)
{
  Handle(Geom_BSplineSurface) tmp = (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCGeom_BSplineSurface(&tmp);
}

 void OCGeom_HSequenceOfBSplineSurface::Remove(Standard_Integer anIndex)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Remove(anIndex);
}

 void OCGeom_HSequenceOfBSplineSurface::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCGeom_SequenceOfBSplineSurface^ OCGeom_HSequenceOfBSplineSurface::Sequence()
{
  Geom_SequenceOfBSplineSurface* tmp = new Geom_SequenceOfBSplineSurface();
  *tmp = (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->Sequence();
  return gcnew OCGeom_SequenceOfBSplineSurface(tmp);
}

OCGeom_SequenceOfBSplineSurface^ OCGeom_HSequenceOfBSplineSurface::ChangeSequence()
{
  Geom_SequenceOfBSplineSurface* tmp = new Geom_SequenceOfBSplineSurface();
  *tmp = (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->ChangeSequence();
  return gcnew OCGeom_SequenceOfBSplineSurface(tmp);
}

OCGeom_HSequenceOfBSplineSurface^ OCGeom_HSequenceOfBSplineSurface::ShallowCopy()
{
  Handle(Geom_HSequenceOfBSplineSurface) tmp = (*((Handle_Geom_HSequenceOfBSplineSurface*)nativeHandle))->ShallowCopy();
  return gcnew OCGeom_HSequenceOfBSplineSurface(&tmp);
}


