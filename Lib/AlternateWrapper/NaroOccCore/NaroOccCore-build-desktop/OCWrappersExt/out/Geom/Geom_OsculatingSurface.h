// File generated by CPPExt (MPV)
//
#ifndef _Geom_OsculatingSurface_OCWrappers_HeaderFile
#define _Geom_OsculatingSurface_OCWrappers_HeaderFile

// include native header
#include <Geom_OsculatingSurface.hxx>
#include "../Converter.h"


#include "../TColStd/TColStd_Array1OfBoolean.h"
#include "../GeomAbs/GeomAbs_IsoType.h"


namespace OCNaroWrappers
{

ref class OCGeom_Surface;
ref class OCGeom_HSequenceOfBSplineSurface;
ref class OCTColStd_HSequenceOfInteger;
ref class OCGeom_BSplineSurface;
ref class OCGeom_SequenceOfBSplineSurface;



public ref class OCGeom_OsculatingSurface  {

protected:
  Geom_OsculatingSurface* nativeHandle;
  OCGeom_OsculatingSurface(OCDummy^) {};

public:
  property Geom_OsculatingSurface* Handle
  {
    Geom_OsculatingSurface* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeom_OsculatingSurface(Geom_OsculatingSurface* nativeHandle);

// Methods PUBLIC


OCGeom_OsculatingSurface();

//! detects if the  surface has punctual U  or  V <br>
//!  isoparametric  curve along on  the bounds of the surface <br>
//!  relativly to the tolerance Tol and Builds the corresponding <br>
//!  osculating surfaces. <br>
OCGeom_OsculatingSurface(OCNaroWrappers::OCGeom_Surface^ BS, Standard_Real Tol);


 /*instead*/  void Init(OCNaroWrappers::OCGeom_Surface^ BS, Standard_Real Tol) ;


 /*instead*/  OCGeom_Surface^ BasisSurface() ;


 /*instead*/  Standard_Real Tolerance() ;

//! if Standard_True, L is the local osculating surface <br>
//!          along U at the point U,V. <br>
 /*instead*/  System::Boolean UOscSurf(Standard_Real U, Standard_Real V, System::Boolean& t, OCNaroWrappers::OCGeom_BSplineSurface^ L) ;

//! if Standard_True, L is the local osculating surface <br>
//!          along V at the point U,V. <br>
 /*instead*/  System::Boolean VOscSurf(Standard_Real U, Standard_Real V, System::Boolean& t, OCNaroWrappers::OCGeom_BSplineSurface^ L) ;

~OCGeom_OsculatingSurface()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
