// File generated by CPPExt (CPP file)
//

#include "Geom_Line.h"
#include "../Converter.h"
#include "../gp/gp_Ax1.h"
#include "../gp/gp_Lin.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Dir.h"
#include "../gp/gp_Vec.h"
#include "../gp/gp_Trsf.h"
#include "Geom_Geometry.h"


using namespace OCNaroWrappers;

OCGeom_Line::OCGeom_Line(Handle(Geom_Line)* nativeHandle) : OCGeom_Curve((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Geom_Line(*nativeHandle);
}

OCGeom_Line::OCGeom_Line(OCNaroWrappers::OCgp_Ax1^ A1) : OCGeom_Curve((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom_Line(new Geom_Line(*((gp_Ax1*)A1->Handle)));
}

OCGeom_Line::OCGeom_Line(OCNaroWrappers::OCgp_Lin^ L) : OCGeom_Curve((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom_Line(new Geom_Line(*((gp_Lin*)L->Handle)));
}

OCGeom_Line::OCGeom_Line(OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Dir^ V) : OCGeom_Curve((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Geom_Line(new Geom_Line(*((gp_Pnt*)P->Handle), *((gp_Dir*)V->Handle)));
}

 void OCGeom_Line::SetLin(OCNaroWrappers::OCgp_Lin^ L)
{
  (*((Handle_Geom_Line*)nativeHandle))->SetLin(*((gp_Lin*)L->Handle));
}

 void OCGeom_Line::SetDirection(OCNaroWrappers::OCgp_Dir^ V)
{
  (*((Handle_Geom_Line*)nativeHandle))->SetDirection(*((gp_Dir*)V->Handle));
}

 void OCGeom_Line::SetLocation(OCNaroWrappers::OCgp_Pnt^ P)
{
  (*((Handle_Geom_Line*)nativeHandle))->SetLocation(*((gp_Pnt*)P->Handle));
}

 void OCGeom_Line::SetPosition(OCNaroWrappers::OCgp_Ax1^ A1)
{
  (*((Handle_Geom_Line*)nativeHandle))->SetPosition(*((gp_Ax1*)A1->Handle));
}

OCgp_Lin^ OCGeom_Line::Lin()
{
  gp_Lin* tmp = new gp_Lin();
  *tmp = (*((Handle_Geom_Line*)nativeHandle))->Lin();
  return gcnew OCgp_Lin(tmp);
}

OCgp_Ax1^ OCGeom_Line::Position()
{
  gp_Ax1* tmp = new gp_Ax1();
  *tmp = (*((Handle_Geom_Line*)nativeHandle))->Position();
  return gcnew OCgp_Ax1(tmp);
}

 void OCGeom_Line::Reverse()
{
  (*((Handle_Geom_Line*)nativeHandle))->Reverse();
}

 Standard_Real OCGeom_Line::ReversedParameter(Standard_Real U)
{
  return (*((Handle_Geom_Line*)nativeHandle))->ReversedParameter(U);
}

 Standard_Real OCGeom_Line::FirstParameter()
{
  return (*((Handle_Geom_Line*)nativeHandle))->FirstParameter();
}

 Standard_Real OCGeom_Line::LastParameter()
{
  return (*((Handle_Geom_Line*)nativeHandle))->LastParameter();
}

 System::Boolean OCGeom_Line::IsClosed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Geom_Line*)nativeHandle))->IsClosed());
}

 System::Boolean OCGeom_Line::IsPeriodic()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Geom_Line*)nativeHandle))->IsPeriodic());
}

 OCGeomAbs_Shape OCGeom_Line::Continuity()
{
  return (OCGeomAbs_Shape)((*((Handle_Geom_Line*)nativeHandle))->Continuity());
}

 System::Boolean OCGeom_Line::IsCN(Standard_Integer N)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Geom_Line*)nativeHandle))->IsCN(N));
}

 void OCGeom_Line::D0(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P)
{
  (*((Handle_Geom_Line*)nativeHandle))->D0(U, *((gp_Pnt*)P->Handle));
}

 void OCGeom_Line::D1(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1)
{
  (*((Handle_Geom_Line*)nativeHandle))->D1(U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V1->Handle));
}

 void OCGeom_Line::D2(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1, OCNaroWrappers::OCgp_Vec^ V2)
{
  (*((Handle_Geom_Line*)nativeHandle))->D2(U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V1->Handle), *((gp_Vec*)V2->Handle));
}

 void OCGeom_Line::D3(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1, OCNaroWrappers::OCgp_Vec^ V2, OCNaroWrappers::OCgp_Vec^ V3)
{
  (*((Handle_Geom_Line*)nativeHandle))->D3(U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V1->Handle), *((gp_Vec*)V2->Handle), *((gp_Vec*)V3->Handle));
}

OCgp_Vec^ OCGeom_Line::DN(Standard_Real U, Standard_Integer N)
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = (*((Handle_Geom_Line*)nativeHandle))->DN(U, N);
  return gcnew OCgp_Vec(tmp);
}

 void OCGeom_Line::Transform(OCNaroWrappers::OCgp_Trsf^ T)
{
  (*((Handle_Geom_Line*)nativeHandle))->Transform(*((gp_Trsf*)T->Handle));
}

 Standard_Real OCGeom_Line::TransformedParameter(Standard_Real U, OCNaroWrappers::OCgp_Trsf^ T)
{
  return (*((Handle_Geom_Line*)nativeHandle))->TransformedParameter(U, *((gp_Trsf*)T->Handle));
}

 Standard_Real OCGeom_Line::ParametricTransformation(OCNaroWrappers::OCgp_Trsf^ T)
{
  return (*((Handle_Geom_Line*)nativeHandle))->ParametricTransformation(*((gp_Trsf*)T->Handle));
}

OCGeom_Geometry^ OCGeom_Line::Copy()
{
  Handle(Geom_Geometry) tmp = (*((Handle_Geom_Line*)nativeHandle))->Copy();
  return gcnew OCGeom_Geometry(&tmp);
}


