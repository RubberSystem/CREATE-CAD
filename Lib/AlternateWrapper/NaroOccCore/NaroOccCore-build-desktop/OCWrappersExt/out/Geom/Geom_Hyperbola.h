// File generated by CPPExt (Transient)
//
#ifndef _Geom_Hyperbola_OCWrappers_HeaderFile
#define _Geom_Hyperbola_OCWrappers_HeaderFile

// include the wrapped class
#include <Geom_Hyperbola.hxx>
#include "../Converter.h"

#include "Geom_Conic.h"



namespace OCNaroWrappers
{

ref class OCgp_Hypr;
ref class OCgp_Ax2;
ref class OCgp_Ax1;
ref class OCgp_Pnt;
ref class OCgp_Vec;
ref class OCgp_Trsf;
ref class OCGeom_Geometry;


//! Describes a branch of a hyperbola in 3D space. <br>
//! A hyperbola is defined by its major and minor radii <br>
//! and, as with any conic curve, is positioned in space <br>
//! with a right-handed coordinate system (gp_Ax2 object) where: <br>
//! - the origin is the center of the hyperbola, <br>
//! - the "X Direction" defines the major axis, and <br>
//! - the "Y Direction" defines the minor axis. <br>
//! The origin, "X Direction" and "Y Direction" of this <br>
//! coordinate system define the plane of the hyperbola. <br>
//! The coordinate system is the local coordinate <br>
//! system of the hyperbola. <br>
//! The branch of the hyperbola described is the one <br>
//! located on the positive side of the major axis. <br>
//! The "main Direction" of the local coordinate system is <br>
//! a vector normal to the plane of the hyperbola. The <br>
//! axis, of which the origin and unit vector are <br>
//! respectively the origin and "main Direction" of the <br>
//! local coordinate system, is termed the "Axis" or "main <br>
//! Axis" of the hyperbola. <br>
//! The "main Direction" of the local coordinate system <br>
//! gives an explicit orientation to the hyperbola, <br>
//! determining the direction in which the parameter <br>
//! increases along the hyperbola. <br>
//! The Geom_Hyperbola hyperbola is parameterized as follows: <br>
//! P(U) = O + MajRad*Cosh(U)*XDir + MinRad*Sinh(U)*YDir, where: <br>
//! - P is the point of parameter U, <br>
//! - O, XDir and YDir are respectively the origin, "X <br>
//!   Direction" and "Y Direction" of its local coordinate system, <br>
//! - MajRad and MinRad are the major and minor radii of the hyperbola. <br>
//! The "X Axis" of the local coordinate system therefore <br>
//! defines the origin of the parameter of the hyperbola. <br>
//! The parameter range is ] -infinite, +infinite [. <br>
//! The following diagram illustrates the respective <br>
//! positions, in the plane of the hyperbola, of the three <br>
//! branches of hyperbolas constructed using the <br>
//! functions OtherBranch, ConjugateBranch1 and <br>
//! ConjugateBranch2: Defines the main branch of an hyperbola. <br>
//!                      ^YAxis <br>
//!                         | <br>
//!                  FirstConjugateBranch <br>
//!                         | <br>
//!        Other            |                Main <br>
//!   --------------------- C ------------------------------>XAxis <br>
//!        Branch           |                Branch <br>
//!                         | <br>
//!                   SecondConjugateBranch <br>
//!                         | <br>
//! Warning <br>
//! The value of the major radius (on the major axis) can <br>
//! be less than the value of the minor radius (on the minor axis). <br>
public ref class OCGeom_Hyperbola : OCGeom_Conic {

protected:
  // dummy constructor;
  OCGeom_Hyperbola(OCDummy^) : OCGeom_Conic((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeom_Hyperbola(Handle(Geom_Hyperbola)* nativeHandle);

// Methods PUBLIC

//! Constructs a hyperbola by conversion of the gp_Hypr hyperbola H. <br>
OCGeom_Hyperbola(OCNaroWrappers::OCgp_Hypr^ H);

//! Constructs a hyperbola defined by its major and <br>
//! minor radii, MajorRadius and MinorRadius, where A2 locates the <br>
//!   hyperbola and defines its orientation in 3D space such that: <br>
//!   - the center of the hyperbola is the origin of A2, <br>
//!   - the "X Direction" of A2 defines the major axis <br>
//!    of the hyperbola, i.e. the major radius <br>
//!    MajorRadius is measured along this axis, <br>
//!   - the "Y Direction" of A2 defines the minor axis <br>
//!    of the hyperbola, i.e. the minor radius <br>
//!    MinorRadius is measured along this axis, <br>
//!   - A2 is the local coordinate system of the   hyperbola. <br>
//! Exceptions <br>
//! Standard_ConstructionError if: <br>
//! - MajorRadius is less than 0.0, <br>
//! - MinorRadius is less than 0.0. <br>
OCGeom_Hyperbola(OCNaroWrappers::OCgp_Ax2^ A2, Standard_Real MajorRadius, Standard_Real MinorRadius);

//! Converts the gp_Hypr hyperbola H into this hyperbola. <br>
 /*instead*/  void SetHypr(OCNaroWrappers::OCgp_Hypr^ H) ;

//! Assigns a value to the major radius of this hyperbola. <br>
//! Exceptions <br>
//! Standard_ConstructionError if: <br>
//! - MajorRadius is less than 0.0, or <br>
//! - MinorRadius is less than 0.0.Raised if MajorRadius < 0.0 <br>
 /*instead*/  void SetMajorRadius(Standard_Real MajorRadius) ;

//! Assigns a value to the minor radius of this hyperbola. <br>
//! Exceptions <br>
//! Standard_ConstructionError if: <br>
//! - MajorRadius is less than 0.0, or <br>
//! - MinorRadius is less than 0.0.Raised if MajorRadius < 0.0 <br>
 /*instead*/  void SetMinorRadius(Standard_Real MinorRadius) ;


//!  returns the non transient parabola from gp with the same <br>
//!  geometric properties as <me>. <br>
 /*instead*/  OCgp_Hypr^ Hypr() ;

//! Computes the parameter on the reversed hyperbola, <br>
//! for the point of parameter U on this hyperbola. <br>
//! For a hyperbola, the returned value is: -U. <br>
virtual /*instead*/  Standard_Real ReversedParameter(Standard_Real U) ;

//! Returns RealFirst from Standard. <br>
virtual /*instead*/  Standard_Real FirstParameter() ;

//! returns RealLast from Standard. <br>
virtual /*instead*/  Standard_Real LastParameter() ;

//! Returns False. <br>
virtual /*instead*/  System::Boolean IsClosed() ;

//! return False for an hyperbola. <br>
virtual /*instead*/  System::Boolean IsPeriodic() ;


//!  In the local coordinate system of the hyperbola the equation of <br>
//!  the hyperbola is (X*X)/(A*A) - (Y*Y)/(B*B) = 1.0 and the <br>
//!  equation of the first asymptote is Y = (B/A)*X. <br>
//!  Raises ConstructionError if MajorRadius = 0.0 <br>
 /*instead*/  OCgp_Ax1^ Asymptote1() ;


//!  In the local coordinate system of the hyperbola the equation of <br>
//!  the hyperbola is (X*X)/(A*A) - (Y*Y)/(B*B) = 1.0 and the <br>
//!  equation of the first asymptote is Y = -(B/A)*X. <br>
//! Raises ConstructionError if MajorRadius = 0.0 <br>
 /*instead*/  OCgp_Ax1^ Asymptote2() ;


//!  This branch of hyperbola is on the positive side of the <br>
//!  YAxis of <me>. <br>
 /*instead*/  OCgp_Hypr^ ConjugateBranch1() ;


//!  This branch of hyperbola is on the negative side of the <br>
//!  YAxis of <me>. <br>
//! Note: The diagram given under the class purpose <br>
//! indicates where these two branches of hyperbola are <br>
//! positioned in relation to this branch of hyperbola. <br>
 /*instead*/  OCgp_Hypr^ ConjugateBranch2() ;


//!  This directrix is the line normal to the XAxis of the hyperbola <br>
//!  in the local plane (Z = 0) at a distance d = MajorRadius / e <br>
//!  from the center of the hyperbola, where e is the eccentricity of <br>
//!  the hyperbola. <br>
//!  This line is parallel to the YAxis. The intersection point between <br>
//!  directrix1 and the XAxis is the location point of the directrix1. <br>
//!  This point is on the positive side of the XAxis. <br>
 /*instead*/  OCgp_Ax1^ Directrix1() ;


//!  This line is obtained by the symmetrical transformation <br>
//!  of "directrix1" with respect to the YAxis of the hyperbola. <br>
 /*instead*/  OCgp_Ax1^ Directrix2() ;


//!  Returns the excentricity of the hyperbola (e > 1). <br>
//!  If f is the distance between the location of the hyperbola <br>
//!  and the Focus1 then the eccentricity e = f / MajorRadius. <br>//! raised if MajorRadius = 0.0 <br>
virtual /*instead*/  Standard_Real Eccentricity() ;


//!  Computes the focal distance. It is the distance between the <br>
//!  two focus of the hyperbola. <br>
 /*instead*/  Standard_Real Focal() ;


//!  Returns the first focus of the hyperbola. This focus is on the <br>
//!  positive side of the XAxis of the hyperbola. <br>
 /*instead*/  OCgp_Pnt^ Focus1() ;


//!  Returns the second focus of the hyperbola. This focus is on the <br>
//!  negative side of the XAxis of the hyperbola. <br>
 /*instead*/  OCgp_Pnt^ Focus2() ;

//! Returns the major or minor radius of this hyperbola. <br>
//! The major radius is also the distance between the <br>
//! center of the hyperbola and the apex of the main <br>
//! branch (located on the "X Axis" of the hyperbola). <br>
 /*instead*/  Standard_Real MajorRadius() ;

//! Returns the major or minor radius of this hyperbola. <br>
//! The minor radius is also the distance between the <br>
//! center of the hyperbola and the apex of a conjugate <br>
//! branch (located on the "Y Axis" of the hyperbola). <br>
 /*instead*/  Standard_Real MinorRadius() ;

//! Computes the "other" branch of this hyperbola. This <br>
//! is the symmetrical branch with respect to the center of this hyperbola. <br>
//! Note: The diagram given under the class purpose <br>
//! indicates where the "other" branch is positioned in <br>
//! relation to this branch of the hyperbola. <br>
 /*instead*/  OCgp_Hypr^ OtherBranch() ;


//!  Returns p = (e * e - 1) * MajorRadius where e is the <br>
//!  eccentricity of the hyperbola. <br>//! raised if MajorRadius = 0.0 <br>
 /*instead*/  Standard_Real Parameter() ;

//! Returns in P the point of parameter U. <br>
//!  P = C + MajorRadius * Cosh (U) * XDir + <br>
//!          MinorRadius * Sinh (U) * YDir <br>
//!  where C is the center of the hyperbola , XDir the XDirection and <br>
//!  YDir the YDirection of the hyperbola's local coordinate system. <br>
virtual /*instead*/  void D0(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P) ;


//!  Returns the point P of parameter U and the first derivative V1. <br>
virtual /*instead*/  void D1(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1) ;


//!  Returns the point P of parameter U, the first and second <br>
//!  derivatives V1 and V2. <br>
virtual /*instead*/  void D2(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1, OCNaroWrappers::OCgp_Vec^ V2) ;


//!  Returns the point P of parameter U, the first second and <br>
//!  third derivatives V1 V2 and V3. <br>
virtual /*instead*/  void D3(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1, OCNaroWrappers::OCgp_Vec^ V2, OCNaroWrappers::OCgp_Vec^ V3) ;


//!  The returned vector gives the value of the derivative for the <br>
//!  order of derivation N. <br>//! Raised if N < 1. <br>
virtual /*instead*/  OCgp_Vec^ DN(Standard_Real U, Standard_Integer N) ;

//! Applies the transformation T to this hyperbola. <br>
virtual /*instead*/  void Transform(OCNaroWrappers::OCgp_Trsf^ T) ;

//! Creates a new object which is a copy of this hyperbola. <br>
virtual /*instead*/  OCGeom_Geometry^ Copy() ;

~OCGeom_Hyperbola()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
