// File generated by CPPExt (CPP file)
//

#include "ChFiDS_SecArray1.h"
#include "../Converter.h"
#include "ChFiDS_CircSection.h"


using namespace OCNaroWrappers;

OCChFiDS_SecArray1::OCChFiDS_SecArray1(ChFiDS_SecArray1* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCChFiDS_SecArray1::OCChFiDS_SecArray1(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new ChFiDS_SecArray1(Low, Up);
}

OCChFiDS_SecArray1::OCChFiDS_SecArray1(OCNaroWrappers::OCChFiDS_CircSection^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new ChFiDS_SecArray1(*((ChFiDS_CircSection*)Item->Handle), Low, Up);
}

 void OCChFiDS_SecArray1::Init(OCNaroWrappers::OCChFiDS_CircSection^ V)
{
  ((ChFiDS_SecArray1*)nativeHandle)->Init(*((ChFiDS_CircSection*)V->Handle));
}

 System::Boolean OCChFiDS_SecArray1::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((ChFiDS_SecArray1*)nativeHandle)->IsAllocated());
}

OCChFiDS_SecArray1^ OCChFiDS_SecArray1::Assign(OCNaroWrappers::OCChFiDS_SecArray1^ Other)
{
  ChFiDS_SecArray1* tmp = new ChFiDS_SecArray1(0, 0);
  *tmp = ((ChFiDS_SecArray1*)nativeHandle)->Assign(*((ChFiDS_SecArray1*)Other->Handle));
  return gcnew OCChFiDS_SecArray1(tmp);
}

 Standard_Integer OCChFiDS_SecArray1::Length()
{
  return ((ChFiDS_SecArray1*)nativeHandle)->Length();
}

 Standard_Integer OCChFiDS_SecArray1::Lower()
{
  return ((ChFiDS_SecArray1*)nativeHandle)->Lower();
}

 Standard_Integer OCChFiDS_SecArray1::Upper()
{
  return ((ChFiDS_SecArray1*)nativeHandle)->Upper();
}

 void OCChFiDS_SecArray1::SetValue(Standard_Integer Index, OCNaroWrappers::OCChFiDS_CircSection^ Value)
{
  ((ChFiDS_SecArray1*)nativeHandle)->SetValue(Index, *((ChFiDS_CircSection*)Value->Handle));
}

OCChFiDS_CircSection^ OCChFiDS_SecArray1::Value(Standard_Integer Index)
{
  ChFiDS_CircSection* tmp = new ChFiDS_CircSection();
  *tmp = ((ChFiDS_SecArray1*)nativeHandle)->Value(Index);
  return gcnew OCChFiDS_CircSection(tmp);
}

OCChFiDS_CircSection^ OCChFiDS_SecArray1::ChangeValue(Standard_Integer Index)
{
  ChFiDS_CircSection* tmp = new ChFiDS_CircSection();
  *tmp = ((ChFiDS_SecArray1*)nativeHandle)->ChangeValue(Index);
  return gcnew OCChFiDS_CircSection(tmp);
}


