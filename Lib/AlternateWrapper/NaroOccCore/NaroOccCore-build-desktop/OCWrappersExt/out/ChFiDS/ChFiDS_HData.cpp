// File generated by CPPExt (CPP file)
//

#include "ChFiDS_HData.h"
#include "../Converter.h"
#include "ChFiDS_SurfData.h"
#include "ChFiDS_SequenceOfSurfData.h"


using namespace OCNaroWrappers;

OCChFiDS_HData::OCChFiDS_HData(Handle(ChFiDS_HData)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_ChFiDS_HData(*nativeHandle);
}

OCChFiDS_HData::OCChFiDS_HData() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ChFiDS_HData(new ChFiDS_HData());
}

 System::Boolean OCChFiDS_HData::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_ChFiDS_HData*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCChFiDS_HData::Length()
{
  return (*((Handle_ChFiDS_HData*)nativeHandle))->Length();
}

 void OCChFiDS_HData::Clear()
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->Clear();
}

 void OCChFiDS_HData::Append(OCNaroWrappers::OCChFiDS_SurfData^ anItem)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->Append(*((Handle_ChFiDS_SurfData*)anItem->Handle));
}

 void OCChFiDS_HData::Append(OCNaroWrappers::OCChFiDS_HData^ aSequence)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->Append(*((Handle_ChFiDS_HData*)aSequence->Handle));
}

 void OCChFiDS_HData::Prepend(OCNaroWrappers::OCChFiDS_SurfData^ anItem)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->Prepend(*((Handle_ChFiDS_SurfData*)anItem->Handle));
}

 void OCChFiDS_HData::Prepend(OCNaroWrappers::OCChFiDS_HData^ aSequence)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->Prepend(*((Handle_ChFiDS_HData*)aSequence->Handle));
}

 void OCChFiDS_HData::Reverse()
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->Reverse();
}

 void OCChFiDS_HData::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCChFiDS_SurfData^ anItem)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->InsertBefore(anIndex, *((Handle_ChFiDS_SurfData*)anItem->Handle));
}

 void OCChFiDS_HData::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCChFiDS_HData^ aSequence)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->InsertBefore(anIndex, *((Handle_ChFiDS_HData*)aSequence->Handle));
}

 void OCChFiDS_HData::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCChFiDS_SurfData^ anItem)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->InsertAfter(anIndex, *((Handle_ChFiDS_SurfData*)anItem->Handle));
}

 void OCChFiDS_HData::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCChFiDS_HData^ aSequence)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->InsertAfter(anIndex, *((Handle_ChFiDS_HData*)aSequence->Handle));
}

 void OCChFiDS_HData::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCChFiDS_HData^ OCChFiDS_HData::Split(Standard_Integer anIndex)
{
  Handle(ChFiDS_HData) tmp = (*((Handle_ChFiDS_HData*)nativeHandle))->Split(anIndex);
  return gcnew OCChFiDS_HData(&tmp);
}

 void OCChFiDS_HData::SetValue(Standard_Integer anIndex, OCNaroWrappers::OCChFiDS_SurfData^ anItem)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->SetValue(anIndex, *((Handle_ChFiDS_SurfData*)anItem->Handle));
}

OCChFiDS_SurfData^ OCChFiDS_HData::Value(Standard_Integer anIndex)
{
  Handle(ChFiDS_SurfData) tmp = (*((Handle_ChFiDS_HData*)nativeHandle))->Value(anIndex);
  return gcnew OCChFiDS_SurfData(&tmp);
}

OCChFiDS_SurfData^ OCChFiDS_HData::ChangeValue(Standard_Integer anIndex)
{
  Handle(ChFiDS_SurfData) tmp = (*((Handle_ChFiDS_HData*)nativeHandle))->ChangeValue(anIndex);
  return gcnew OCChFiDS_SurfData(&tmp);
}

 void OCChFiDS_HData::Remove(Standard_Integer anIndex)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->Remove(anIndex);
}

 void OCChFiDS_HData::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_ChFiDS_HData*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCChFiDS_SequenceOfSurfData^ OCChFiDS_HData::Sequence()
{
  ChFiDS_SequenceOfSurfData* tmp = new ChFiDS_SequenceOfSurfData();
  *tmp = (*((Handle_ChFiDS_HData*)nativeHandle))->Sequence();
  return gcnew OCChFiDS_SequenceOfSurfData(tmp);
}

OCChFiDS_SequenceOfSurfData^ OCChFiDS_HData::ChangeSequence()
{
  ChFiDS_SequenceOfSurfData* tmp = new ChFiDS_SequenceOfSurfData();
  *tmp = (*((Handle_ChFiDS_HData*)nativeHandle))->ChangeSequence();
  return gcnew OCChFiDS_SequenceOfSurfData(tmp);
}

OCChFiDS_HData^ OCChFiDS_HData::ShallowCopy()
{
  Handle(ChFiDS_HData) tmp = (*((Handle_ChFiDS_HData*)nativeHandle))->ShallowCopy();
  return gcnew OCChFiDS_HData(&tmp);
}


