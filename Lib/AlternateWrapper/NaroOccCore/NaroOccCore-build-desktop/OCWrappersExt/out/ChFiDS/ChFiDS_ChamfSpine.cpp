// File generated by CPPExt (CPP file)
//

#include "ChFiDS_ChamfSpine.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCChFiDS_ChamfSpine::OCChFiDS_ChamfSpine(Handle(ChFiDS_ChamfSpine)* nativeHandle) : OCChFiDS_Spine((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_ChFiDS_ChamfSpine(*nativeHandle);
}

OCChFiDS_ChamfSpine::OCChFiDS_ChamfSpine() : OCChFiDS_Spine((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ChFiDS_ChamfSpine(new ChFiDS_ChamfSpine());
}

OCChFiDS_ChamfSpine::OCChFiDS_ChamfSpine(Standard_Real Tol) : OCChFiDS_Spine((OCDummy^)nullptr)

{
  nativeHandle = new Handle_ChFiDS_ChamfSpine(new ChFiDS_ChamfSpine(Tol));
}

 void OCChFiDS_ChamfSpine::SetDist(Standard_Real Dis)
{
  (*((Handle_ChFiDS_ChamfSpine*)nativeHandle))->SetDist(Dis);
}

 void OCChFiDS_ChamfSpine::GetDist(Standard_Real& Dis)
{
  (*((Handle_ChFiDS_ChamfSpine*)nativeHandle))->GetDist(Dis);
}

 void OCChFiDS_ChamfSpine::SetDists(Standard_Real Dis1, Standard_Real Dis2)
{
  (*((Handle_ChFiDS_ChamfSpine*)nativeHandle))->SetDists(Dis1, Dis2);
}

 void OCChFiDS_ChamfSpine::Dists(Standard_Real& Dis1, Standard_Real& Dis2)
{
  (*((Handle_ChFiDS_ChamfSpine*)nativeHandle))->Dists(Dis1, Dis2);
}

 void OCChFiDS_ChamfSpine::GetDistAngle(Standard_Real& Dis, Standard_Real& Angle, System::Boolean& DisOnF1)
{
  (*((Handle_ChFiDS_ChamfSpine*)nativeHandle))->GetDistAngle(Dis, Angle, (Standard_Boolean&)(DisOnF1));
}

 void OCChFiDS_ChamfSpine::SetDistAngle(Standard_Real Dis, Standard_Real Angle, System::Boolean DisOnF1)
{
  (*((Handle_ChFiDS_ChamfSpine*)nativeHandle))->SetDistAngle(Dis, Angle, OCConverter::BooleanToStandardBoolean(DisOnF1));
}

 OCChFiDS_ChamfMethod OCChFiDS_ChamfSpine::IsChamfer()
{
  return (OCChFiDS_ChamfMethod)((*((Handle_ChFiDS_ChamfSpine*)nativeHandle))->IsChamfer());
}


