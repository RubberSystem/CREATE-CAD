// File generated by CPPExt (Transient)
//
#ifndef _ChFiDS_ChamfSpine_OCWrappers_HeaderFile
#define _ChFiDS_ChamfSpine_OCWrappers_HeaderFile

// include the wrapped class
#include <ChFiDS_ChamfSpine.hxx>
#include "../Converter.h"

#include "ChFiDS_Spine.h"

#include "ChFiDS_ChamfMethod.h"


namespace OCNaroWrappers
{



//!  Provides  data specific to chamfers <br>
//!         distances on  each  of faces. <br>
public ref class OCChFiDS_ChamfSpine : OCChFiDS_Spine {

protected:
  // dummy constructor;
  OCChFiDS_ChamfSpine(OCDummy^) : OCChFiDS_Spine((OCDummy^)nullptr) {};

public:

// constructor from native
OCChFiDS_ChamfSpine(Handle(ChFiDS_ChamfSpine)* nativeHandle);

// Methods PUBLIC


OCChFiDS_ChamfSpine();


OCChFiDS_ChamfSpine(Standard_Real Tol);


 /*instead*/  void SetDist(Standard_Real Dis) ;


 /*instead*/  void GetDist(Standard_Real& Dis) ;


 /*instead*/  void SetDists(Standard_Real Dis1, Standard_Real Dis2) ;


 /*instead*/  void Dists(Standard_Real& Dis1, Standard_Real& Dis2) ;


 /*instead*/  void GetDistAngle(Standard_Real& Dis, Standard_Real& Angle, System::Boolean& DisOnF1) ;


 /*instead*/  void SetDistAngle(Standard_Real Dis, Standard_Real Angle, System::Boolean DisOnF1) ;

//! Return the method of chamfers used <br>
 /*instead*/  OCChFiDS_ChamfMethod IsChamfer() ;

~OCChFiDS_ChamfSpine()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
