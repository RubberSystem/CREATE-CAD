// File generated by CPPExt (MPV)
//
#ifndef _ChFiDS_CommonPoint_OCWrappers_HeaderFile
#define _ChFiDS_CommonPoint_OCWrappers_HeaderFile

// include native header
#include <ChFiDS_CommonPoint.hxx>
#include "../Converter.h"


#include "../TopoDS/TopoDS_Edge.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Vec.h"
#include "../TopAbs/TopAbs_Orientation.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Vertex;
ref class OCTopoDS_Edge;
ref class OCgp_Pnt;
ref class OCgp_Vec;



public ref class OCChFiDS_CommonPoint  {

protected:
  ChFiDS_CommonPoint* nativeHandle;
  OCChFiDS_CommonPoint(OCDummy^) {};

public:
  property ChFiDS_CommonPoint* Handle
  {
    ChFiDS_CommonPoint* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCChFiDS_CommonPoint(ChFiDS_CommonPoint* nativeHandle);

// Methods PUBLIC

//! Empty constructor. <br>
OCChFiDS_CommonPoint();

//! default value for all fields <br>
 /*instead*/  void Reset() ;

//! Sets the values of a point which is a vertex on <br>
//!          the initial facet of restriction of one <br>
//!          of the surface. <br>
 /*instead*/  void SetVertex(OCNaroWrappers::OCTopoDS_Vertex^ V) ;

//! Sets the values of a point which is on the arc <br>
//!          A, at parameter Param. <br>
 /*instead*/  void SetArc(Standard_Real Tol, OCNaroWrappers::OCTopoDS_Edge^ A, Standard_Real Param, OCTopAbs_Orientation TArc) ;

//! Sets the value of the parameter on the spine <br>
 /*instead*/  void SetParameter(Standard_Real Param) ;

//! Set the 3d point for a commonpoint that is not <br>
//!          a vertex or on an arc. <br>
 /*instead*/  void SetPoint(OCNaroWrappers::OCgp_Pnt^ Point) ;

//! Set the output 3d  vector <br>
 /*instead*/  void SetVector(OCNaroWrappers::OCgp_Vec^ Vector) ;

//! This method set the fuzziness on the point. <br>
 /*instead*/  void SetTolerance(Standard_Real Tol) ;

//! This method returns the fuzziness on the point. <br>
 /*instead*/  Standard_Real Tolerance() ;

//! Returns TRUE if the point is a vertex on the initial <br>
//!          restriction facet of the surface. <br>
 /*instead*/  System::Boolean IsVertex() ;

//! Returns the information about the point when it is <br>
//!          on the domain of the first patch, i-e when the function <br>
//!          IsVertex returns True. <br>
//!          Otherwise, an exception is raised. <br>
 /*instead*/  OCTopoDS_Vertex^ Vertex() ;

//! Returns TRUE if the point is a on an edge of the initial <br>
//!          restriction facet of the surface. <br>
 /*instead*/  System::Boolean IsOnArc() ;

//! Returns the arc of restriction containing the <br>
//!          vertex. <br>
 /*instead*/  OCTopoDS_Edge^ Arc() ;

//! Returns the transition of the point on the arc <br>
//!          returned by Arc(). <br>
 /*instead*/  OCTopAbs_Orientation TransitionOnArc() ;

//! Returns the parameter of the point on the <br>
//!          arc returned by the method Arc(). <br>
 /*instead*/  Standard_Real ParameterOnArc() ;

//! Returns  the parameter the  paramter on the  spine <br>
 /*instead*/  Standard_Real Parameter() ;

//! Returns the 3d point <br>
 /*instead*/  OCgp_Pnt^ Point() ;

//! Returns TRUE if the output vector is  stored. <br>
 /*instead*/  System::Boolean HasVector() ;

//! Returns the output  3d vector <br>
 /*instead*/  OCgp_Vec^ Vector() ;

~OCChFiDS_CommonPoint()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
