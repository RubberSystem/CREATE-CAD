// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_AreaBuilder.h"
#include "../Converter.h"
#include "TopOpeBRepBuild_LoopSet.h"
#include "TopOpeBRepBuild_LoopClassifier.h"
#include "TopOpeBRepBuild_Loop.h"
#include "TopOpeBRepBuild_ListOfLoop.h"
#include "TopOpeBRepBuild_ListIteratorOfListOfLoop.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_AreaBuilder::OCTopOpeBRepBuild_AreaBuilder(TopOpeBRepBuild_AreaBuilder* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_AreaBuilder::OCTopOpeBRepBuild_AreaBuilder() 
{
  nativeHandle = new TopOpeBRepBuild_AreaBuilder();
}

OCTopOpeBRepBuild_AreaBuilder::OCTopOpeBRepBuild_AreaBuilder(OCNaroWrappers::OCTopOpeBRepBuild_LoopSet^ LS, OCNaroWrappers::OCTopOpeBRepBuild_LoopClassifier^ LC, System::Boolean ForceClass) 
{
  nativeHandle = new TopOpeBRepBuild_AreaBuilder(*((TopOpeBRepBuild_LoopSet*)LS->Handle), *((TopOpeBRepBuild_LoopClassifier*)LC->Handle), OCConverter::BooleanToStandardBoolean(ForceClass));
}

 void OCTopOpeBRepBuild_AreaBuilder::Delete()
{
  ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->Delete();
}

 void OCTopOpeBRepBuild_AreaBuilder::InitAreaBuilder(OCNaroWrappers::OCTopOpeBRepBuild_LoopSet^ LS, OCNaroWrappers::OCTopOpeBRepBuild_LoopClassifier^ LC, System::Boolean ForceClass)
{
  ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->InitAreaBuilder(*((TopOpeBRepBuild_LoopSet*)LS->Handle), *((TopOpeBRepBuild_LoopClassifier*)LC->Handle), OCConverter::BooleanToStandardBoolean(ForceClass));
}

 Standard_Integer OCTopOpeBRepBuild_AreaBuilder::InitArea()
{
  return ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->InitArea();
}

 System::Boolean OCTopOpeBRepBuild_AreaBuilder::MoreArea()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->MoreArea());
}

 void OCTopOpeBRepBuild_AreaBuilder::NextArea()
{
  ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->NextArea();
}

 Standard_Integer OCTopOpeBRepBuild_AreaBuilder::InitLoop()
{
  return ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->InitLoop();
}

 System::Boolean OCTopOpeBRepBuild_AreaBuilder::MoreLoop()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->MoreLoop());
}

 void OCTopOpeBRepBuild_AreaBuilder::NextLoop()
{
  ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->NextLoop();
}

OCTopOpeBRepBuild_Loop^ OCTopOpeBRepBuild_AreaBuilder::Loop()
{
  Handle(TopOpeBRepBuild_Loop) tmp = ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->Loop();
  return gcnew OCTopOpeBRepBuild_Loop(&tmp);
}

 void OCTopOpeBRepBuild_AreaBuilder::ADD_Loop_TO_LISTOFLoop(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ L, OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ LOL, Standard_Address s)
{
  ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->ADD_Loop_TO_LISTOFLoop(*((Handle_TopOpeBRepBuild_Loop*)L->Handle), *((TopOpeBRepBuild_ListOfLoop*)LOL->Handle), s);
}

 void OCTopOpeBRepBuild_AreaBuilder::REM_Loop_FROM_LISTOFLoop(OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfLoop^ ITLOL, OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ LOL, Standard_Address s)
{
  ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->REM_Loop_FROM_LISTOFLoop(*((TopOpeBRepBuild_ListIteratorOfListOfLoop*)ITLOL->Handle), *((TopOpeBRepBuild_ListOfLoop*)LOL->Handle), s);
}

 void OCTopOpeBRepBuild_AreaBuilder::ADD_LISTOFLoop_TO_LISTOFLoop(OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ LOL1, OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ LOL2, Standard_Address s, Standard_Address s1, Standard_Address s2)
{
  ((TopOpeBRepBuild_AreaBuilder*)nativeHandle)->ADD_LISTOFLoop_TO_LISTOFLoop(*((TopOpeBRepBuild_ListOfLoop*)LOL1->Handle), *((TopOpeBRepBuild_ListOfLoop*)LOL2->Handle), s, s1, s2);
}


