// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_GTopo.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_GTopo::OCTopOpeBRepBuild_GTopo(TopOpeBRepBuild_GTopo* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_GTopo::OCTopOpeBRepBuild_GTopo() 
{
  nativeHandle = new TopOpeBRepBuild_GTopo();
}

OCTopOpeBRepBuild_GTopo::OCTopOpeBRepBuild_GTopo(Standard_Integer II, Standard_Integer IN, Standard_Integer IO, Standard_Integer NI, Standard_Integer NN, Standard_Integer NO, Standard_Integer OI, Standard_Integer ON, Standard_Integer OO, OCTopAbs_ShapeEnum t1, OCTopAbs_ShapeEnum t2, OCTopOpeBRepDS_Config C1, OCTopOpeBRepDS_Config C2) 
{
  nativeHandle = new TopOpeBRepBuild_GTopo(II, IN, IO, NI, NN, NO, OI, ON, OO, (TopAbs_ShapeEnum)t1, (TopAbs_ShapeEnum)t2, (TopOpeBRepDS_Config)C1, (TopOpeBRepDS_Config)C2);
}

 void OCTopOpeBRepBuild_GTopo::Reset()
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->Reset();
}

 void OCTopOpeBRepBuild_GTopo::Set(System::Boolean II, System::Boolean IN, System::Boolean IO, System::Boolean NI, System::Boolean NN, System::Boolean NO, System::Boolean OI, System::Boolean ON, System::Boolean OO)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->Set(OCConverter::BooleanToStandardBoolean(II), OCConverter::BooleanToStandardBoolean(IN), OCConverter::BooleanToStandardBoolean(IO), OCConverter::BooleanToStandardBoolean(NI), OCConverter::BooleanToStandardBoolean(NN), OCConverter::BooleanToStandardBoolean(NO), OCConverter::BooleanToStandardBoolean(OI), OCConverter::BooleanToStandardBoolean(ON), OCConverter::BooleanToStandardBoolean(OO));
}

 void OCTopOpeBRepBuild_GTopo::Type(OCTopAbs_ShapeEnum& t1, OCTopAbs_ShapeEnum& t2)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->Type((TopAbs_ShapeEnum&)t1, (TopAbs_ShapeEnum&)t2);
}

 void OCTopOpeBRepBuild_GTopo::ChangeType(OCTopAbs_ShapeEnum t1, OCTopAbs_ShapeEnum t2)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->ChangeType((TopAbs_ShapeEnum)t1, (TopAbs_ShapeEnum)t2);
}

 OCTopOpeBRepDS_Config OCTopOpeBRepBuild_GTopo::Config1()
{
  return (OCTopOpeBRepDS_Config)(((TopOpeBRepBuild_GTopo*)nativeHandle)->Config1());
}

 OCTopOpeBRepDS_Config OCTopOpeBRepBuild_GTopo::Config2()
{
  return (OCTopOpeBRepDS_Config)(((TopOpeBRepBuild_GTopo*)nativeHandle)->Config2());
}

 void OCTopOpeBRepBuild_GTopo::ChangeConfig(OCTopOpeBRepDS_Config C1, OCTopOpeBRepDS_Config C2)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->ChangeConfig((TopOpeBRepDS_Config)C1, (TopOpeBRepDS_Config)C2);
}

 System::Boolean OCTopOpeBRepBuild_GTopo::Value(OCTopAbs_State s1, OCTopAbs_State s2)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_GTopo*)nativeHandle)->Value((TopAbs_State)s1, (TopAbs_State)s2));
}

 System::Boolean OCTopOpeBRepBuild_GTopo::Value(Standard_Integer I1, Standard_Integer I2)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_GTopo*)nativeHandle)->Value(I1, I2));
}

 System::Boolean OCTopOpeBRepBuild_GTopo::Value(Standard_Integer II)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_GTopo*)nativeHandle)->Value(II));
}

 void OCTopOpeBRepBuild_GTopo::ChangeValue(Standard_Integer i1, Standard_Integer i2, System::Boolean b)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->ChangeValue(i1, i2, OCConverter::BooleanToStandardBoolean(b));
}

 void OCTopOpeBRepBuild_GTopo::ChangeValue(OCTopAbs_State s1, OCTopAbs_State s2, System::Boolean b)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->ChangeValue((TopAbs_State)s1, (TopAbs_State)s2, OCConverter::BooleanToStandardBoolean(b));
}

 Standard_Integer OCTopOpeBRepBuild_GTopo::GIndex(OCTopAbs_State S)
{
  return ((TopOpeBRepBuild_GTopo*)nativeHandle)->GIndex((TopAbs_State)S);
}

 OCTopAbs_State OCTopOpeBRepBuild_GTopo::GState(Standard_Integer I)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_GTopo*)nativeHandle)->GState(I));
}

 void OCTopOpeBRepBuild_GTopo::Index(Standard_Integer II, Standard_Integer& i1, Standard_Integer& i2)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->Index(II, i1, i2);
}

 void OCTopOpeBRepBuild_GTopo::DumpVal(Standard_OStream& OS, OCTopAbs_State s1, OCTopAbs_State s2)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->DumpVal(OS, (TopAbs_State)s1, (TopAbs_State)s2);
}

 void OCTopOpeBRepBuild_GTopo::DumpType(Standard_OStream& OS)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->DumpType(OS);
}

 void OCTopOpeBRepBuild_GTopo::DumpSSB(Standard_OStream& OS, OCTopAbs_State s1, OCTopAbs_State s2, System::Boolean b)
{
  TopOpeBRepBuild_GTopo::DumpSSB(OS, (TopAbs_State)s1, (TopAbs_State)s2, OCConverter::BooleanToStandardBoolean(b));
}

 void OCTopOpeBRepBuild_GTopo::Dump(Standard_OStream& OS, Standard_Address s)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->Dump(OS, s);
}

 void OCTopOpeBRepBuild_GTopo::StatesON(OCTopAbs_State& s1, OCTopAbs_State& s2)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->StatesON((TopAbs_State&)s1, (TopAbs_State&)s2);
}

 System::Boolean OCTopOpeBRepBuild_GTopo::IsToReverse1()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_GTopo*)nativeHandle)->IsToReverse1());
}

 System::Boolean OCTopOpeBRepBuild_GTopo::IsToReverse2()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_GTopo*)nativeHandle)->IsToReverse2());
}

 void OCTopOpeBRepBuild_GTopo::SetReverse(System::Boolean rev)
{
  ((TopOpeBRepBuild_GTopo*)nativeHandle)->SetReverse(OCConverter::BooleanToStandardBoolean(rev));
}

 System::Boolean OCTopOpeBRepBuild_GTopo::Reverse()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_GTopo*)nativeHandle)->Reverse());
}

OCTopOpeBRepBuild_GTopo^ OCTopOpeBRepBuild_GTopo::CopyPermuted()
{
  TopOpeBRepBuild_GTopo* tmp = new TopOpeBRepBuild_GTopo();
  *tmp = ((TopOpeBRepBuild_GTopo*)nativeHandle)->CopyPermuted();
  return gcnew OCTopOpeBRepBuild_GTopo(tmp);
}


