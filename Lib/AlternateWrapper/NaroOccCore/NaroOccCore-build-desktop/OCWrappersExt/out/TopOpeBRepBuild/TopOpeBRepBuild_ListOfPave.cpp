// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_ListOfPave.h"
#include "../Converter.h"
#include "TopOpeBRepBuild_ListIteratorOfListOfPave.h"
#include "TopOpeBRepBuild_Pave.h"
#include "TopOpeBRepBuild_ListNodeOfListOfPave.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_ListOfPave::OCTopOpeBRepBuild_ListOfPave(TopOpeBRepBuild_ListOfPave* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_ListOfPave::OCTopOpeBRepBuild_ListOfPave() 
{
  nativeHandle = new TopOpeBRepBuild_ListOfPave();
}

 void OCTopOpeBRepBuild_ListOfPave::Assign(OCNaroWrappers::OCTopOpeBRepBuild_ListOfPave^ Other)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Assign(*((TopOpeBRepBuild_ListOfPave*)Other->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_ListOfPave::Extent()
{
  return ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Extent();
}

 System::Boolean OCTopOpeBRepBuild_ListOfPave::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_ListOfPave*)nativeHandle)->IsEmpty());
}

 void OCTopOpeBRepBuild_ListOfPave::Prepend(OCNaroWrappers::OCTopOpeBRepBuild_Pave^ I)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Prepend(*((Handle_TopOpeBRepBuild_Pave*)I->Handle));
}

 void OCTopOpeBRepBuild_ListOfPave::Prepend(OCNaroWrappers::OCTopOpeBRepBuild_Pave^ I, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfPave^ theIt)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Prepend(*((Handle_TopOpeBRepBuild_Pave*)I->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfPave*)theIt->Handle));
}

 void OCTopOpeBRepBuild_ListOfPave::Prepend(OCNaroWrappers::OCTopOpeBRepBuild_ListOfPave^ Other)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Prepend(*((TopOpeBRepBuild_ListOfPave*)Other->Handle));
}

 void OCTopOpeBRepBuild_ListOfPave::Append(OCNaroWrappers::OCTopOpeBRepBuild_Pave^ I)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Append(*((Handle_TopOpeBRepBuild_Pave*)I->Handle));
}

 void OCTopOpeBRepBuild_ListOfPave::Append(OCNaroWrappers::OCTopOpeBRepBuild_Pave^ I, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfPave^ theIt)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Append(*((Handle_TopOpeBRepBuild_Pave*)I->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfPave*)theIt->Handle));
}

 void OCTopOpeBRepBuild_ListOfPave::Append(OCNaroWrappers::OCTopOpeBRepBuild_ListOfPave^ Other)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Append(*((TopOpeBRepBuild_ListOfPave*)Other->Handle));
}

OCTopOpeBRepBuild_Pave^ OCTopOpeBRepBuild_ListOfPave::First()
{
  Handle(TopOpeBRepBuild_Pave) tmp = ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->First();
  return gcnew OCTopOpeBRepBuild_Pave(&tmp);
}

OCTopOpeBRepBuild_Pave^ OCTopOpeBRepBuild_ListOfPave::Last()
{
  Handle(TopOpeBRepBuild_Pave) tmp = ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Last();
  return gcnew OCTopOpeBRepBuild_Pave(&tmp);
}

 void OCTopOpeBRepBuild_ListOfPave::RemoveFirst()
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->RemoveFirst();
}

 void OCTopOpeBRepBuild_ListOfPave::Remove(OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfPave^ It)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->Remove(*((TopOpeBRepBuild_ListIteratorOfListOfPave*)It->Handle));
}

 void OCTopOpeBRepBuild_ListOfPave::InsertBefore(OCNaroWrappers::OCTopOpeBRepBuild_Pave^ I, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfPave^ It)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->InsertBefore(*((Handle_TopOpeBRepBuild_Pave*)I->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfPave*)It->Handle));
}

 void OCTopOpeBRepBuild_ListOfPave::InsertBefore(OCNaroWrappers::OCTopOpeBRepBuild_ListOfPave^ Other, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfPave^ It)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->InsertBefore(*((TopOpeBRepBuild_ListOfPave*)Other->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfPave*)It->Handle));
}

 void OCTopOpeBRepBuild_ListOfPave::InsertAfter(OCNaroWrappers::OCTopOpeBRepBuild_Pave^ I, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfPave^ It)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->InsertAfter(*((Handle_TopOpeBRepBuild_Pave*)I->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfPave*)It->Handle));
}

 void OCTopOpeBRepBuild_ListOfPave::InsertAfter(OCNaroWrappers::OCTopOpeBRepBuild_ListOfPave^ Other, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfPave^ It)
{
  ((TopOpeBRepBuild_ListOfPave*)nativeHandle)->InsertAfter(*((TopOpeBRepBuild_ListOfPave*)Other->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfPave*)It->Handle));
}


