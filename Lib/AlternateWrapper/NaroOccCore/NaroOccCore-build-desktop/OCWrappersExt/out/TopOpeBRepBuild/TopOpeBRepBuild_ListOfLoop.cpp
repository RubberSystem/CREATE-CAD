// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_ListOfLoop.h"
#include "../Converter.h"
#include "TopOpeBRepBuild_ListIteratorOfListOfLoop.h"
#include "TopOpeBRepBuild_Loop.h"
#include "TopOpeBRepBuild_ListNodeOfListOfLoop.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_ListOfLoop::OCTopOpeBRepBuild_ListOfLoop(TopOpeBRepBuild_ListOfLoop* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_ListOfLoop::OCTopOpeBRepBuild_ListOfLoop() 
{
  nativeHandle = new TopOpeBRepBuild_ListOfLoop();
}

 void OCTopOpeBRepBuild_ListOfLoop::Assign(OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ Other)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Assign(*((TopOpeBRepBuild_ListOfLoop*)Other->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_ListOfLoop::Extent()
{
  return ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Extent();
}

 System::Boolean OCTopOpeBRepBuild_ListOfLoop::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->IsEmpty());
}

 void OCTopOpeBRepBuild_ListOfLoop::Prepend(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ I)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Prepend(*((Handle_TopOpeBRepBuild_Loop*)I->Handle));
}

 void OCTopOpeBRepBuild_ListOfLoop::Prepend(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ I, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfLoop^ theIt)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Prepend(*((Handle_TopOpeBRepBuild_Loop*)I->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfLoop*)theIt->Handle));
}

 void OCTopOpeBRepBuild_ListOfLoop::Prepend(OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ Other)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Prepend(*((TopOpeBRepBuild_ListOfLoop*)Other->Handle));
}

 void OCTopOpeBRepBuild_ListOfLoop::Append(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ I)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Append(*((Handle_TopOpeBRepBuild_Loop*)I->Handle));
}

 void OCTopOpeBRepBuild_ListOfLoop::Append(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ I, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfLoop^ theIt)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Append(*((Handle_TopOpeBRepBuild_Loop*)I->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfLoop*)theIt->Handle));
}

 void OCTopOpeBRepBuild_ListOfLoop::Append(OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ Other)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Append(*((TopOpeBRepBuild_ListOfLoop*)Other->Handle));
}

OCTopOpeBRepBuild_Loop^ OCTopOpeBRepBuild_ListOfLoop::First()
{
  Handle(TopOpeBRepBuild_Loop) tmp = ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->First();
  return gcnew OCTopOpeBRepBuild_Loop(&tmp);
}

OCTopOpeBRepBuild_Loop^ OCTopOpeBRepBuild_ListOfLoop::Last()
{
  Handle(TopOpeBRepBuild_Loop) tmp = ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Last();
  return gcnew OCTopOpeBRepBuild_Loop(&tmp);
}

 void OCTopOpeBRepBuild_ListOfLoop::RemoveFirst()
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->RemoveFirst();
}

 void OCTopOpeBRepBuild_ListOfLoop::Remove(OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfLoop^ It)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->Remove(*((TopOpeBRepBuild_ListIteratorOfListOfLoop*)It->Handle));
}

 void OCTopOpeBRepBuild_ListOfLoop::InsertBefore(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ I, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfLoop^ It)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->InsertBefore(*((Handle_TopOpeBRepBuild_Loop*)I->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfLoop*)It->Handle));
}

 void OCTopOpeBRepBuild_ListOfLoop::InsertBefore(OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ Other, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfLoop^ It)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->InsertBefore(*((TopOpeBRepBuild_ListOfLoop*)Other->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfLoop*)It->Handle));
}

 void OCTopOpeBRepBuild_ListOfLoop::InsertAfter(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ I, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfLoop^ It)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->InsertAfter(*((Handle_TopOpeBRepBuild_Loop*)I->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfLoop*)It->Handle));
}

 void OCTopOpeBRepBuild_ListOfLoop::InsertAfter(OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ Other, OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfLoop^ It)
{
  ((TopOpeBRepBuild_ListOfLoop*)nativeHandle)->InsertAfter(*((TopOpeBRepBuild_ListOfLoop*)Other->Handle), *((TopOpeBRepBuild_ListIteratorOfListOfLoop*)It->Handle));
}


