// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_FaceBuilder.h"
#include "../Converter.h"
#include "TopOpeBRepBuild_WireEdgeSet.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_IndexedDataMapOfShapeShape.h"
#include "../TopTools/TopTools_IndexedMapOfShape.h"
#include "TopOpeBRepBuild_ShapeSet.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_FaceBuilder::OCTopOpeBRepBuild_FaceBuilder(TopOpeBRepBuild_FaceBuilder* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_FaceBuilder::OCTopOpeBRepBuild_FaceBuilder() 
{
  nativeHandle = new TopOpeBRepBuild_FaceBuilder();
}

OCTopOpeBRepBuild_FaceBuilder::OCTopOpeBRepBuild_FaceBuilder(OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ ES, OCNaroWrappers::OCTopoDS_Shape^ F, System::Boolean ForceClass) 
{
  nativeHandle = new TopOpeBRepBuild_FaceBuilder(*((TopOpeBRepBuild_WireEdgeSet*)ES->Handle), *((TopoDS_Shape*)F->Handle), OCConverter::BooleanToStandardBoolean(ForceClass));
}

 void OCTopOpeBRepBuild_FaceBuilder::InitFaceBuilder(OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ ES, OCNaroWrappers::OCTopoDS_Shape^ F, System::Boolean ForceClass)
{
  ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->InitFaceBuilder(*((TopOpeBRepBuild_WireEdgeSet*)ES->Handle), *((TopoDS_Shape*)F->Handle), OCConverter::BooleanToStandardBoolean(ForceClass));
}

 void OCTopOpeBRepBuild_FaceBuilder::DetectUnclosedWire(OCNaroWrappers::OCTopTools_IndexedDataMapOfShapeShape^ mapVVsameG, OCNaroWrappers::OCTopTools_IndexedDataMapOfShapeShape^ mapVon1Edge)
{
  ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->DetectUnclosedWire(*((TopTools_IndexedDataMapOfShapeShape*)mapVVsameG->Handle), *((TopTools_IndexedDataMapOfShapeShape*)mapVon1Edge->Handle));
}

 void OCTopOpeBRepBuild_FaceBuilder::CorrectGclosedWire(OCNaroWrappers::OCTopTools_IndexedDataMapOfShapeShape^ mapVVref, OCNaroWrappers::OCTopTools_IndexedDataMapOfShapeShape^ mapVon1Edge)
{
  ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->CorrectGclosedWire(*((TopTools_IndexedDataMapOfShapeShape*)mapVVref->Handle), *((TopTools_IndexedDataMapOfShapeShape*)mapVon1Edge->Handle));
}

 void OCTopOpeBRepBuild_FaceBuilder::DetectPseudoInternalEdge(OCNaroWrappers::OCTopTools_IndexedMapOfShape^ mapE)
{
  ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->DetectPseudoInternalEdge(*((TopTools_IndexedMapOfShape*)mapE->Handle));
}

OCTopoDS_Shape^ OCTopOpeBRepBuild_FaceBuilder::Face()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->Face();
  return gcnew OCTopoDS_Shape(tmp);
}

 Standard_Integer OCTopOpeBRepBuild_FaceBuilder::InitFace()
{
  return ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->InitFace();
}

 System::Boolean OCTopOpeBRepBuild_FaceBuilder::MoreFace()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->MoreFace());
}

 void OCTopOpeBRepBuild_FaceBuilder::NextFace()
{
  ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->NextFace();
}

 Standard_Integer OCTopOpeBRepBuild_FaceBuilder::InitWire()
{
  return ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->InitWire();
}

 System::Boolean OCTopOpeBRepBuild_FaceBuilder::MoreWire()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->MoreWire());
}

 void OCTopOpeBRepBuild_FaceBuilder::NextWire()
{
  ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->NextWire();
}

 System::Boolean OCTopOpeBRepBuild_FaceBuilder::IsOldWire()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->IsOldWire());
}

OCTopoDS_Shape^ OCTopOpeBRepBuild_FaceBuilder::OldWire()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->OldWire();
  return gcnew OCTopoDS_Shape(tmp);
}

 void OCTopOpeBRepBuild_FaceBuilder::FindNextValidElement()
{
  ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->FindNextValidElement();
}

 Standard_Integer OCTopOpeBRepBuild_FaceBuilder::InitEdge()
{
  return ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->InitEdge();
}

 System::Boolean OCTopOpeBRepBuild_FaceBuilder::MoreEdge()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->MoreEdge());
}

 void OCTopOpeBRepBuild_FaceBuilder::NextEdge()
{
  ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->NextEdge();
}

OCTopoDS_Shape^ OCTopOpeBRepBuild_FaceBuilder::Edge()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->Edge();
  return gcnew OCTopoDS_Shape(tmp);
}

 Standard_Integer OCTopOpeBRepBuild_FaceBuilder::EdgeConnexity(OCNaroWrappers::OCTopoDS_Shape^ E)
{
  return ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->EdgeConnexity(*((TopoDS_Shape*)E->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_FaceBuilder::AddEdgeWire(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopoDS_Shape^ W)
{
  return ((TopOpeBRepBuild_FaceBuilder*)nativeHandle)->AddEdgeWire(*((TopoDS_Shape*)E->Handle), *((TopoDS_Shape*)W->Handle));
}


