// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_WireEdgeClassifier.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TopOpeBRepBuild_BlockBuilder.h"
#include "TopOpeBRepBuild_Loop.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_WireEdgeClassifier::OCTopOpeBRepBuild_WireEdgeClassifier(TopOpeBRepBuild_WireEdgeClassifier* nativeHandle) : OCTopOpeBRepBuild_CompositeClassifier((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_WireEdgeClassifier::OCTopOpeBRepBuild_WireEdgeClassifier(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_BlockBuilder^ BB) : OCTopOpeBRepBuild_CompositeClassifier((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepBuild_WireEdgeClassifier(*((TopoDS_Shape*)F->Handle), *((TopOpeBRepBuild_BlockBuilder*)BB->Handle));
}

 OCTopAbs_State OCTopOpeBRepBuild_WireEdgeClassifier::Compare(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ L1, OCNaroWrappers::OCTopOpeBRepBuild_Loop^ L2)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_WireEdgeClassifier*)nativeHandle)->Compare(*((Handle_TopOpeBRepBuild_Loop*)L1->Handle), *((Handle_TopOpeBRepBuild_Loop*)L2->Handle)));
}

OCTopoDS_Shape^ OCTopOpeBRepBuild_WireEdgeClassifier::LoopToShape(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ L)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRepBuild_WireEdgeClassifier*)nativeHandle)->LoopToShape(*((Handle_TopOpeBRepBuild_Loop*)L->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

 OCTopAbs_State OCTopOpeBRepBuild_WireEdgeClassifier::CompareShapes(OCNaroWrappers::OCTopoDS_Shape^ B1, OCNaroWrappers::OCTopoDS_Shape^ B2)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_WireEdgeClassifier*)nativeHandle)->CompareShapes(*((TopoDS_Shape*)B1->Handle), *((TopoDS_Shape*)B2->Handle)));
}

 OCTopAbs_State OCTopOpeBRepBuild_WireEdgeClassifier::CompareElementToShape(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopoDS_Shape^ B)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_WireEdgeClassifier*)nativeHandle)->CompareElementToShape(*((TopoDS_Shape*)E->Handle), *((TopoDS_Shape*)B->Handle)));
}

 void OCTopOpeBRepBuild_WireEdgeClassifier::ResetShape(OCNaroWrappers::OCTopoDS_Shape^ B)
{
  ((TopOpeBRepBuild_WireEdgeClassifier*)nativeHandle)->ResetShape(*((TopoDS_Shape*)B->Handle));
}

 void OCTopOpeBRepBuild_WireEdgeClassifier::ResetElement(OCNaroWrappers::OCTopoDS_Shape^ E)
{
  ((TopOpeBRepBuild_WireEdgeClassifier*)nativeHandle)->ResetElement(*((TopoDS_Shape*)E->Handle));
}

 System::Boolean OCTopOpeBRepBuild_WireEdgeClassifier::CompareElement(OCNaroWrappers::OCTopoDS_Shape^ E)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_WireEdgeClassifier*)nativeHandle)->CompareElement(*((TopoDS_Shape*)E->Handle)));
}

 OCTopAbs_State OCTopOpeBRepBuild_WireEdgeClassifier::State()
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_WireEdgeClassifier*)nativeHandle)->State());
}


