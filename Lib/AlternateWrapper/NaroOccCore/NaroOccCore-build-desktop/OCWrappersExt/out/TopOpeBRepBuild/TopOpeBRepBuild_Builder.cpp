// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_Builder.h"
#include "../Converter.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_HDataStructure.h"
#include "../TopTools/TopTools_HArray1OfShape.h"
#include "../TopTools/TopTools_HArray1OfListOfShape.h"
#include "TopOpeBRepBuild_HBuilder.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_BuildTool.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "../TopTools/TopTools_MapOfShape.h"
#include "../TopTools/TopTools_DataMapOfShapeShape.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.h"
#include "../TopOpeBRepTool/TopOpeBRepTool_ShapeExplorer.h"
#include "TopOpeBRepBuild_ShapeSet.h"
#include "TopOpeBRepBuild_EdgeBuilder.h"
#include "TopOpeBRepBuild_FaceBuilder.h"
#include "TopOpeBRepBuild_SolidBuilder.h"
#include "TopOpeBRepBuild_WireEdgeSet.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_PointIterator.h"
#include "TopOpeBRepBuild_PaveSet.h"
#include "../TopTools/TopTools_DataMapOfIntegerListOfShape.h"
#include "../TopTools/TopTools_DataMapOfIntegerShape.h"
#include "TopOpeBRepBuild_GTopo.h"
#include "TopOpeBRepBuild_ShellFaceSet.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_SurfaceIterator.h"
#include "../TopTools/TopTools_IndexedMapOfOrientedShape.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_CurveIterator.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopTools/TopTools_DataMapOfShapeInteger.h"
#include "../gp/gp_Pnt.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_Builder::OCTopOpeBRepBuild_Builder(TopOpeBRepBuild_Builder* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_Builder::OCTopOpeBRepBuild_Builder(OCNaroWrappers::OCTopOpeBRepDS_BuildTool^ BT) 
{
  nativeHandle = new TopOpeBRepBuild_Builder(*((TopOpeBRepDS_BuildTool*)BT->Handle));
}

 void OCTopOpeBRepBuild_Builder::Destroy()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->Destroy();
}

OCTopOpeBRepDS_BuildTool^ OCTopOpeBRepBuild_Builder::ChangeBuildTool()
{
  TopOpeBRepDS_BuildTool* tmp = new TopOpeBRepDS_BuildTool();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->ChangeBuildTool();
  return gcnew OCTopOpeBRepDS_BuildTool(tmp);
}

OCTopOpeBRepDS_BuildTool^ OCTopOpeBRepBuild_Builder::BuildTool()
{
  TopOpeBRepDS_BuildTool* tmp = new TopOpeBRepDS_BuildTool();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->BuildTool();
  return gcnew OCTopOpeBRepDS_BuildTool(tmp);
}

 void OCTopOpeBRepBuild_Builder::Perform(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->Perform(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRepBuild_Builder::Perform(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS, OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->Perform(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle), *((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle));
}

OCTopOpeBRepDS_HDataStructure^ OCTopOpeBRepBuild_Builder::DataStructure()
{
  Handle(TopOpeBRepDS_HDataStructure) tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->DataStructure();
  return gcnew OCTopOpeBRepDS_HDataStructure(&tmp);
}

 void OCTopOpeBRepBuild_Builder::Clear()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->Clear();
}

 void OCTopOpeBRepBuild_Builder::MergeEdges(OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCTopAbs_State TB1, OCNaroWrappers::OCTopTools_ListOfShape^ L2, OCTopAbs_State TB2, System::Boolean onA, System::Boolean onB, System::Boolean onAB)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeEdges(*((TopTools_ListOfShape*)L1->Handle), (TopAbs_State)TB1, *((TopTools_ListOfShape*)L2->Handle), (TopAbs_State)TB2, OCConverter::BooleanToStandardBoolean(onA), OCConverter::BooleanToStandardBoolean(onB), OCConverter::BooleanToStandardBoolean(onAB));
}

 void OCTopOpeBRepBuild_Builder::MergeFaces(OCNaroWrappers::OCTopTools_ListOfShape^ S1, OCTopAbs_State TB1, OCNaroWrappers::OCTopTools_ListOfShape^ S2, OCTopAbs_State TB2, System::Boolean onA, System::Boolean onB, System::Boolean onAB)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeFaces(*((TopTools_ListOfShape*)S1->Handle), (TopAbs_State)TB1, *((TopTools_ListOfShape*)S2->Handle), (TopAbs_State)TB2, OCConverter::BooleanToStandardBoolean(onA), OCConverter::BooleanToStandardBoolean(onB), OCConverter::BooleanToStandardBoolean(onAB));
}

 void OCTopOpeBRepBuild_Builder::MergeSolids(OCNaroWrappers::OCTopoDS_Shape^ S1, OCTopAbs_State TB1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCTopAbs_State TB2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeSolids(*((TopoDS_Shape*)S1->Handle), (TopAbs_State)TB1, *((TopoDS_Shape*)S2->Handle), (TopAbs_State)TB2);
}

 void OCTopOpeBRepBuild_Builder::MergeShapes(OCNaroWrappers::OCTopoDS_Shape^ S1, OCTopAbs_State TB1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCTopAbs_State TB2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeShapes(*((TopoDS_Shape*)S1->Handle), (TopAbs_State)TB1, *((TopoDS_Shape*)S2->Handle), (TopAbs_State)TB2);
}

 void OCTopOpeBRepBuild_Builder::End()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->End();
}

 System::Boolean OCTopOpeBRepBuild_Builder::Classify()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->Classify());
}

 void OCTopOpeBRepBuild_Builder::ChangeClassify(System::Boolean B)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->ChangeClassify(OCConverter::BooleanToStandardBoolean(B));
}

 void OCTopOpeBRepBuild_Builder::MergeSolid(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeSolid(*((TopoDS_Shape*)S->Handle), (TopAbs_State)TB);
}

OCTopoDS_Shape^ OCTopOpeBRepBuild_Builder::NewVertex(Standard_Integer I)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->NewVertex(I);
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopTools_ListOfShape^ OCTopOpeBRepBuild_Builder::NewEdges(Standard_Integer I)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->NewEdges(I);
  return gcnew OCTopTools_ListOfShape(tmp);
}

OCTopTools_ListOfShape^ OCTopOpeBRepBuild_Builder::NewFaces(Standard_Integer I)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->NewFaces(I);
  return gcnew OCTopTools_ListOfShape(tmp);
}

 System::Boolean OCTopOpeBRepBuild_Builder::IsSplit(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->IsSplit(*((TopoDS_Shape*)S->Handle), (TopAbs_State)TB));
}

OCTopTools_ListOfShape^ OCTopOpeBRepBuild_Builder::Splits(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->Splits(*((TopoDS_Shape*)S->Handle), (TopAbs_State)TB);
  return gcnew OCTopTools_ListOfShape(tmp);
}

 System::Boolean OCTopOpeBRepBuild_Builder::IsMerged(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->IsMerged(*((TopoDS_Shape*)S->Handle), (TopAbs_State)TB));
}

OCTopTools_ListOfShape^ OCTopOpeBRepBuild_Builder::Merged(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->Merged(*((TopoDS_Shape*)S->Handle), (TopAbs_State)TB);
  return gcnew OCTopTools_ListOfShape(tmp);
}

 void OCTopOpeBRepBuild_Builder::InitSection()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->InitSection();
}

 void OCTopOpeBRepBuild_Builder::SplitSectionEdges()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->SplitSectionEdges();
}

 void OCTopOpeBRepBuild_Builder::SplitSectionEdge(OCNaroWrappers::OCTopoDS_Shape^ E)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->SplitSectionEdge(*((TopoDS_Shape*)E->Handle));
}

 void OCTopOpeBRepBuild_Builder::SectionCurves(OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->SectionCurves(*((TopTools_ListOfShape*)L->Handle));
}

 void OCTopOpeBRepBuild_Builder::SectionEdges(OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->SectionEdges(*((TopTools_ListOfShape*)L->Handle));
}

 void OCTopOpeBRepBuild_Builder::FillSecEdgeAncestorMap(Standard_Integer aShapeRank, OCNaroWrappers::OCTopTools_MapOfShape^ aMapON, OCNaroWrappers::OCTopTools_DataMapOfShapeShape^ anAncMap)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->FillSecEdgeAncestorMap(aShapeRank, *((TopTools_MapOfShape*)aMapON->Handle), *((TopTools_DataMapOfShapeShape*)anAncMap->Handle));
}

 void OCTopOpeBRepBuild_Builder::Section(OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->Section(*((TopTools_ListOfShape*)L->Handle));
}

OCTopTools_ListOfShape^ OCTopOpeBRepBuild_Builder::Section()
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->Section();
  return gcnew OCTopTools_ListOfShape(tmp);
}

 void OCTopOpeBRepBuild_Builder::BuildVertices(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ DS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->BuildVertices(*((Handle_TopOpeBRepDS_HDataStructure*)DS->Handle));
}

 void OCTopOpeBRepBuild_Builder::BuildEdges(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ DS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->BuildEdges(*((Handle_TopOpeBRepDS_HDataStructure*)DS->Handle));
}

OCTopOpeBRepDS_DataMapOfShapeListOfShapeOn1State^ OCTopOpeBRepBuild_Builder::MSplit(OCTopAbs_State s)
{
  TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State* tmp = new TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State(0);
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->MSplit((TopAbs_State)s);
  return gcnew OCTopOpeBRepDS_DataMapOfShapeListOfShapeOn1State(tmp);
}

OCTopOpeBRepDS_DataMapOfShapeListOfShapeOn1State^ OCTopOpeBRepBuild_Builder::ChangeMSplit(OCTopAbs_State s)
{
  TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State* tmp = new TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State(0);
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->ChangeMSplit((TopAbs_State)s);
  return gcnew OCTopOpeBRepDS_DataMapOfShapeListOfShapeOn1State(tmp);
}

 void OCTopOpeBRepBuild_Builder::MakeEdges(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepBuild_EdgeBuilder^ B, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MakeEdges(*((TopoDS_Shape*)E->Handle), *((TopOpeBRepBuild_EdgeBuilder*)B->Handle), *((TopTools_ListOfShape*)L->Handle));
}

 void OCTopOpeBRepBuild_Builder::MakeFaces(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_FaceBuilder^ B, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MakeFaces(*((TopoDS_Shape*)F->Handle), *((TopOpeBRepBuild_FaceBuilder*)B->Handle), *((TopTools_ListOfShape*)L->Handle));
}

 void OCTopOpeBRepBuild_Builder::MakeSolids(OCNaroWrappers::OCTopOpeBRepBuild_SolidBuilder^ B, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MakeSolids(*((TopOpeBRepBuild_SolidBuilder*)B->Handle), *((TopTools_ListOfShape*)L->Handle));
}

 void OCTopOpeBRepBuild_Builder::MakeShells(OCNaroWrappers::OCTopOpeBRepBuild_SolidBuilder^ B, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MakeShells(*((TopOpeBRepBuild_SolidBuilder*)B->Handle), *((TopTools_ListOfShape*)L->Handle));
}

OCTopTools_ListOfShape^ OCTopOpeBRepBuild_Builder::ChangeSplit(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->ChangeSplit(*((TopoDS_Shape*)S->Handle), (TopAbs_State)TB);
  return gcnew OCTopTools_ListOfShape(tmp);
}

 System::Boolean OCTopOpeBRepBuild_Builder::Opec12()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->Opec12());
}

 System::Boolean OCTopOpeBRepBuild_Builder::Opec21()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->Opec21());
}

 System::Boolean OCTopOpeBRepBuild_Builder::Opecom()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->Opecom());
}

 System::Boolean OCTopOpeBRepBuild_Builder::Opefus()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->Opefus());
}

 OCTopAbs_State OCTopOpeBRepBuild_Builder::ShapePosition(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LS)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_Builder*)nativeHandle)->ShapePosition(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)LS->Handle)));
}

 System::Boolean OCTopOpeBRepBuild_Builder::KeepShape(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LS, OCTopAbs_State T)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->KeepShape(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)LS->Handle), (TopAbs_State)T));
}

 OCTopAbs_ShapeEnum OCTopOpeBRepBuild_Builder::TopType(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return (OCTopAbs_ShapeEnum)(TopOpeBRepBuild_Builder::TopType(*((TopoDS_Shape*)S->Handle)));
}

 System::Boolean OCTopOpeBRepBuild_Builder::Reverse(OCTopAbs_State T1, OCTopAbs_State T2)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRepBuild_Builder::Reverse((TopAbs_State)T1, (TopAbs_State)T2));
}

 OCTopAbs_Orientation OCTopOpeBRepBuild_Builder::Orient(OCTopAbs_Orientation O, System::Boolean R)
{
  return (OCTopAbs_Orientation)(TopOpeBRepBuild_Builder::Orient((TopAbs_Orientation)O, OCConverter::BooleanToStandardBoolean(R)));
}

 void OCTopOpeBRepBuild_Builder::FindSameDomain(OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCNaroWrappers::OCTopTools_ListOfShape^ L2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->FindSameDomain(*((TopTools_ListOfShape*)L1->Handle), *((TopTools_ListOfShape*)L2->Handle));
}

 void OCTopOpeBRepBuild_Builder::FindSameDomainSameOrientation(OCNaroWrappers::OCTopTools_ListOfShape^ LSO, OCNaroWrappers::OCTopTools_ListOfShape^ LDO)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->FindSameDomainSameOrientation(*((TopTools_ListOfShape*)LSO->Handle), *((TopTools_ListOfShape*)LDO->Handle));
}

 void OCTopOpeBRepBuild_Builder::MapShapes(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MapShapes(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle));
}

 void OCTopOpeBRepBuild_Builder::ClearMaps()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->ClearMaps();
}

 void OCTopOpeBRepBuild_Builder::FindSameRank(OCNaroWrappers::OCTopTools_ListOfShape^ L1, Standard_Integer R, OCNaroWrappers::OCTopTools_ListOfShape^ L2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->FindSameRank(*((TopTools_ListOfShape*)L1->Handle), R, *((TopTools_ListOfShape*)L2->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_Builder::ShapeRank(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->ShapeRank(*((TopoDS_Shape*)S->Handle));
}

 System::Boolean OCTopOpeBRepBuild_Builder::IsShapeOf(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Integer I12)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->IsShapeOf(*((TopoDS_Shape*)S->Handle), I12));
}

 System::Boolean OCTopOpeBRepBuild_Builder::Contains(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRepBuild_Builder::Contains(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)L->Handle)));
}

 Standard_Integer OCTopOpeBRepBuild_Builder::FindIsKPart()
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->FindIsKPart();
}

 Standard_Integer OCTopOpeBRepBuild_Builder::IsKPart()
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->IsKPart();
}

 void OCTopOpeBRepBuild_Builder::MergeKPart()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeKPart();
}

 void OCTopOpeBRepBuild_Builder::MergeKPart(OCTopAbs_State TB1, OCTopAbs_State TB2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeKPart((TopAbs_State)TB1, (TopAbs_State)TB2);
}

 void OCTopOpeBRepBuild_Builder::MergeKPartiskole()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeKPartiskole();
}

 void OCTopOpeBRepBuild_Builder::MergeKPartiskoletge()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeKPartiskoletge();
}

 void OCTopOpeBRepBuild_Builder::MergeKPartisdisj()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeKPartisdisj();
}

 void OCTopOpeBRepBuild_Builder::MergeKPartisfafa()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeKPartisfafa();
}

 void OCTopOpeBRepBuild_Builder::MergeKPartissoso()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->MergeKPartissoso();
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPiskole()
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPiskole();
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPiskoletge()
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPiskoletge();
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPisdisj()
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPisdisj();
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPisfafa()
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPisfafa();
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPissoso()
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPissoso();
}

 void OCTopOpeBRepBuild_Builder::KPClearMaps()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->KPClearMaps();
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPlhg(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPlhg(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)T, *((TopTools_ListOfShape*)L->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPlhg(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T)
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPlhg(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)T);
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPlhsd(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPlhsd(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)T, *((TopTools_ListOfShape*)L->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPlhsd(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T)
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPlhsd(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)T);
}

 OCTopAbs_State OCTopOpeBRepBuild_Builder::KPclasSS(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopTools_ListOfShape^ exceptLS1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_Builder*)nativeHandle)->KPclasSS(*((TopoDS_Shape*)S1->Handle), *((TopTools_ListOfShape*)exceptLS1->Handle), *((TopoDS_Shape*)S2->Handle)));
}

 OCTopAbs_State OCTopOpeBRepBuild_Builder::KPclasSS(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ exceptS1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_Builder*)nativeHandle)->KPclasSS(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)exceptS1->Handle), *((TopoDS_Shape*)S2->Handle)));
}

 OCTopAbs_State OCTopOpeBRepBuild_Builder::KPclasSS(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_Builder*)nativeHandle)->KPclasSS(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle)));
}

 System::Boolean OCTopOpeBRepBuild_Builder::KPiskolesh(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LS, OCNaroWrappers::OCTopTools_ListOfShape^ LF)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->KPiskolesh(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)LS->Handle), *((TopTools_ListOfShape*)LF->Handle)));
}

 System::Boolean OCTopOpeBRepBuild_Builder::KPiskoletgesh(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LS, OCNaroWrappers::OCTopTools_ListOfShape^ LF)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->KPiskoletgesh(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)LS->Handle), *((TopTools_ListOfShape*)LF->Handle)));
}

 void OCTopOpeBRepBuild_Builder::KPSameDomain(OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCNaroWrappers::OCTopTools_ListOfShape^ L2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->KPSameDomain(*((TopTools_ListOfShape*)L1->Handle), *((TopTools_ListOfShape*)L2->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPisdisjsh(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPisdisjsh(*((TopoDS_Shape*)S->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPisfafash(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPisfafash(*((TopoDS_Shape*)S->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPissososh(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->KPissososh(*((TopoDS_Shape*)S->Handle));
}

 void OCTopOpeBRepBuild_Builder::KPiskoleanalyse(OCTopAbs_State FT1, OCTopAbs_State FT2, OCTopAbs_State ST1, OCTopAbs_State ST2, Standard_Integer& I, Standard_Integer& I1, Standard_Integer& I2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->KPiskoleanalyse((TopAbs_State)FT1, (TopAbs_State)FT2, (TopAbs_State)ST1, (TopAbs_State)ST2, I, I1, I2);
}

 void OCTopOpeBRepBuild_Builder::KPiskoletgeanalyse(OCTopOpeBRepDS_Config Conf, OCTopAbs_State ST1, OCTopAbs_State ST2, Standard_Integer& I)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->KPiskoletgeanalyse((TopOpeBRepDS_Config)Conf, (TopAbs_State)ST1, (TopAbs_State)ST2, I);
}

 void OCTopOpeBRepBuild_Builder::KPisdisjanalyse(OCTopAbs_State ST1, OCTopAbs_State ST2, Standard_Integer& I, Standard_Integer& IC1, Standard_Integer& IC2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->KPisdisjanalyse((TopAbs_State)ST1, (TopAbs_State)ST2, I, IC1, IC2);
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPls(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  return TopOpeBRepBuild_Builder::KPls(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)T, *((TopTools_ListOfShape*)L->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPls(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T)
{
  return TopOpeBRepBuild_Builder::KPls(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)T);
}

 OCTopAbs_State OCTopOpeBRepBuild_Builder::KPclassF(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopoDS_Shape^ F2)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_Builder*)nativeHandle)->KPclassF(*((TopoDS_Shape*)F1->Handle), *((TopoDS_Shape*)F2->Handle)));
}

 void OCTopOpeBRepBuild_Builder::KPclassFF(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopoDS_Shape^ F2, OCTopAbs_State& T1, OCTopAbs_State& T2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->KPclassFF(*((TopoDS_Shape*)F1->Handle), *((TopoDS_Shape*)F2->Handle), (TopAbs_State&)T1, (TopAbs_State&)T2);
}

 System::Boolean OCTopOpeBRepBuild_Builder::KPiskoleFF(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopoDS_Shape^ F2, OCTopAbs_State& T1, OCTopAbs_State& T2)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->KPiskoleFF(*((TopoDS_Shape*)F1->Handle), *((TopoDS_Shape*)F2->Handle), (TopAbs_State&)T1, (TopAbs_State&)T2));
}

 System::Boolean OCTopOpeBRepBuild_Builder::KPContains(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRepBuild_Builder::KPContains(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)L->Handle)));
}

OCTopoDS_Shape^ OCTopOpeBRepBuild_Builder::KPmakeface(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCTopAbs_State T1, OCTopAbs_State T2, System::Boolean R1, System::Boolean R2)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRepBuild_Builder*)nativeHandle)->KPmakeface(*((TopoDS_Shape*)F1->Handle), *((TopTools_ListOfShape*)LF2->Handle), (TopAbs_State)T1, (TopAbs_State)T2, OCConverter::BooleanToStandardBoolean(R1), OCConverter::BooleanToStandardBoolean(R2));
  return gcnew OCTopoDS_Shape(tmp);
}

 Standard_Integer OCTopOpeBRepBuild_Builder::KPreturn(Standard_Integer KP)
{
  return TopOpeBRepBuild_Builder::KPreturn(KP);
}

 void OCTopOpeBRepBuild_Builder::SplitEvisoONperiodicF()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->SplitEvisoONperiodicF();
}

 void OCTopOpeBRepBuild_Builder::GMergeSolids(OCNaroWrappers::OCTopTools_ListOfShape^ LSO1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GMergeSolids(*((TopTools_ListOfShape*)LSO1->Handle), *((TopTools_ListOfShape*)LSO2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillSolidsSFS(OCNaroWrappers::OCTopTools_ListOfShape^ LSO1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillSolidsSFS(*((TopTools_ListOfShape*)LSO1->Handle), *((TopTools_ListOfShape*)LSO2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillSolidSFS(OCNaroWrappers::OCTopoDS_Shape^ SO1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillSolidSFS(*((TopoDS_Shape*)SO1->Handle), *((TopTools_ListOfShape*)LSO2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillSurfaceTopologySFS(OCNaroWrappers::OCTopoDS_Shape^ SO1, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillSurfaceTopologySFS(*((TopoDS_Shape*)SO1->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillSurfaceTopologySFS(OCNaroWrappers::OCTopOpeBRepDS_SurfaceIterator^ IT, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillSurfaceTopologySFS(*((TopOpeBRepDS_SurfaceIterator*)IT->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillShellSFS(OCNaroWrappers::OCTopoDS_Shape^ SH1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillShellSFS(*((TopoDS_Shape*)SH1->Handle), *((TopTools_ListOfShape*)LSO2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillFaceSFS(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillFaceSFS(*((TopoDS_Shape*)F1->Handle), *((TopTools_ListOfShape*)LSO2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GSplitFaceSFS(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopTools_ListOfShape^ LSclass, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GSplitFaceSFS(*((TopoDS_Shape*)F1->Handle), *((TopTools_ListOfShape*)LSclass->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GMergeFaceSFS(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GMergeFaceSFS(*((TopoDS_Shape*)F->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GSplitFace(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopTools_ListOfShape^ LSclass)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GSplitFace(*((TopoDS_Shape*)F->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopTools_ListOfShape*)LSclass->Handle));
}

 void OCTopOpeBRepBuild_Builder::AddONPatchesSFS(OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->AddONPatchesSFS(*((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle));
}

 void OCTopOpeBRepBuild_Builder::FillOnPatches(OCNaroWrappers::OCTopTools_ListOfShape^ anEdgesON, OCNaroWrappers::OCTopoDS_Shape^ aBaseFace, OCNaroWrappers::OCTopTools_IndexedMapOfOrientedShape^ avoidMap)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->FillOnPatches(*((TopTools_ListOfShape*)anEdgesON->Handle), *((TopoDS_Shape*)aBaseFace->Handle), *((TopTools_IndexedMapOfOrientedShape*)avoidMap->Handle));
}

 void OCTopOpeBRepBuild_Builder::FindFacesTouchingEdge(OCNaroWrappers::OCTopoDS_Shape^ aFace, OCNaroWrappers::OCTopoDS_Shape^ anEdge, Standard_Integer aShRank, OCNaroWrappers::OCTopTools_ListOfShape^ aFaces)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->FindFacesTouchingEdge(*((TopoDS_Shape*)aFace->Handle), *((TopoDS_Shape*)anEdge->Handle), aShRank, *((TopTools_ListOfShape*)aFaces->Handle));
}

 void OCTopOpeBRepBuild_Builder::GMergeFaces(OCNaroWrappers::OCTopTools_ListOfShape^ LF1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GMergeFaces(*((TopTools_ListOfShape*)LF1->Handle), *((TopTools_ListOfShape*)LF2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillFacesWES(OCNaroWrappers::OCTopTools_ListOfShape^ LF1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillFacesWES(*((TopTools_ListOfShape*)LF1->Handle), *((TopTools_ListOfShape*)LF2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillFacesWESK(OCNaroWrappers::OCTopTools_ListOfShape^ LF1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES, Standard_Integer K)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillFacesWESK(*((TopTools_ListOfShape*)LF1->Handle), *((TopTools_ListOfShape*)LF2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle), K);
}

 void OCTopOpeBRepBuild_Builder::GFillFacesWESMakeFaces(OCNaroWrappers::OCTopTools_ListOfShape^ LF1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopTools_ListOfShape^ LSO, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillFacesWESMakeFaces(*((TopTools_ListOfShape*)LF1->Handle), *((TopTools_ListOfShape*)LF2->Handle), *((TopTools_ListOfShape*)LSO->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillFaceWES(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillFaceWES(*((TopoDS_Shape*)F->Handle), *((TopTools_ListOfShape*)LF2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillCurveTopologyWES(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillCurveTopologyWES(*((TopoDS_Shape*)F->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillCurveTopologyWES(OCNaroWrappers::OCTopOpeBRepDS_CurveIterator^ IT, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillCurveTopologyWES(*((TopOpeBRepDS_CurveIterator*)IT->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillONPartsWES(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopTools_ListOfShape^ LSclass, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillONPartsWES(*((TopoDS_Shape*)F->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopTools_ListOfShape*)LSclass->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillWireWES(OCNaroWrappers::OCTopoDS_Shape^ W, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillWireWES(*((TopoDS_Shape*)W->Handle), *((TopTools_ListOfShape*)LF2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillEdgeWES(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillEdgeWES(*((TopoDS_Shape*)E->Handle), *((TopTools_ListOfShape*)LF2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle));
}

 void OCTopOpeBRepBuild_Builder::GSplitEdgeWES(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GSplitEdgeWES(*((TopoDS_Shape*)E->Handle), *((TopTools_ListOfShape*)LF2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle));
}

 void OCTopOpeBRepBuild_Builder::GMergeEdgeWES(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GMergeEdgeWES(*((TopoDS_Shape*)E->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle));
}

 void OCTopOpeBRepBuild_Builder::GSplitEdge(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopTools_ListOfShape^ LSclass)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GSplitEdge(*((TopoDS_Shape*)E->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopTools_ListOfShape*)LSclass->Handle));
}

 void OCTopOpeBRepBuild_Builder::GMergeEdges(OCNaroWrappers::OCTopTools_ListOfShape^ LE1, OCNaroWrappers::OCTopTools_ListOfShape^ LE2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GMergeEdges(*((TopTools_ListOfShape*)LE1->Handle), *((TopTools_ListOfShape*)LE2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillEdgesPVS(OCNaroWrappers::OCTopTools_ListOfShape^ LE1, OCNaroWrappers::OCTopTools_ListOfShape^ LE2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillEdgesPVS(*((TopTools_ListOfShape*)LE1->Handle), *((TopTools_ListOfShape*)LE2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_PaveSet*)PVS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillEdgePVS(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopTools_ListOfShape^ LE2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillEdgePVS(*((TopoDS_Shape*)E->Handle), *((TopTools_ListOfShape*)LE2->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_PaveSet*)PVS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillPointTopologyPVS(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillPointTopologyPVS(*((TopoDS_Shape*)E->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_PaveSet*)PVS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFillPointTopologyPVS(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepDS_PointIterator^ IT, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFillPointTopologyPVS(*((TopoDS_Shape*)E->Handle), *((TopOpeBRepDS_PointIterator*)IT->Handle), *((TopOpeBRepBuild_GTopo*)G->Handle), *((TopOpeBRepBuild_PaveSet*)PVS->Handle));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GParamOnReference(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E, Standard_Real& P)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GParamOnReference(*((TopoDS_Vertex*)V->Handle), *((TopoDS_Edge*)E->Handle), P));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GKeepShape(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ Lref, OCTopAbs_State T)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GKeepShape(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)Lref->Handle), (TopAbs_State)T));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GKeepShape1(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ Lref, OCTopAbs_State T, OCTopAbs_State& pos)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GKeepShape1(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)Lref->Handle), (TopAbs_State)T, (TopAbs_State&)pos));
}

 void OCTopOpeBRepBuild_Builder::GKeepShapes(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ Lref, OCTopAbs_State T, OCNaroWrappers::OCTopTools_ListOfShape^ Lin, OCNaroWrappers::OCTopTools_ListOfShape^ Lou)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GKeepShapes(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)Lref->Handle), (TopAbs_State)T, *((TopTools_ListOfShape*)Lin->Handle), *((TopTools_ListOfShape*)Lou->Handle));
}

 void OCTopOpeBRepBuild_Builder::GSFSMakeSolids(OCNaroWrappers::OCTopoDS_Shape^ SOF, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS, OCNaroWrappers::OCTopTools_ListOfShape^ LOSO)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GSFSMakeSolids(*((TopoDS_Shape*)SOF->Handle), *((TopOpeBRepBuild_ShellFaceSet*)SFS->Handle), *((TopTools_ListOfShape*)LOSO->Handle));
}

 void OCTopOpeBRepBuild_Builder::GSOBUMakeSolids(OCNaroWrappers::OCTopoDS_Shape^ SOF, OCNaroWrappers::OCTopOpeBRepBuild_SolidBuilder^ SOBU, OCNaroWrappers::OCTopTools_ListOfShape^ LOSO)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GSOBUMakeSolids(*((TopoDS_Shape*)SOF->Handle), *((TopOpeBRepBuild_SolidBuilder*)SOBU->Handle), *((TopTools_ListOfShape*)LOSO->Handle));
}

 void OCTopOpeBRepBuild_Builder::GWESMakeFaces(OCNaroWrappers::OCTopoDS_Shape^ FF, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES, OCNaroWrappers::OCTopTools_ListOfShape^ LOF)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GWESMakeFaces(*((TopoDS_Shape*)FF->Handle), *((TopOpeBRepBuild_WireEdgeSet*)WES->Handle), *((TopTools_ListOfShape*)LOF->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFABUMakeFaces(OCNaroWrappers::OCTopoDS_Shape^ FF, OCNaroWrappers::OCTopOpeBRepBuild_FaceBuilder^ FABU, OCNaroWrappers::OCTopTools_ListOfShape^ LOF, OCNaroWrappers::OCTopTools_DataMapOfShapeInteger^ MWisOld)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFABUMakeFaces(*((TopoDS_Shape*)FF->Handle), *((TopOpeBRepBuild_FaceBuilder*)FABU->Handle), *((TopTools_ListOfShape*)LOF->Handle), *((TopTools_DataMapOfShapeInteger*)MWisOld->Handle));
}

 void OCTopOpeBRepBuild_Builder::RegularizeFaces(OCNaroWrappers::OCTopoDS_Shape^ FF, OCNaroWrappers::OCTopTools_ListOfShape^ lnewFace, OCNaroWrappers::OCTopTools_ListOfShape^ LOF)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->RegularizeFaces(*((TopoDS_Shape*)FF->Handle), *((TopTools_ListOfShape*)lnewFace->Handle), *((TopTools_ListOfShape*)LOF->Handle));
}

 void OCTopOpeBRepBuild_Builder::RegularizeFace(OCNaroWrappers::OCTopoDS_Shape^ FF, OCNaroWrappers::OCTopoDS_Shape^ newFace, OCNaroWrappers::OCTopTools_ListOfShape^ LOF)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->RegularizeFace(*((TopoDS_Shape*)FF->Handle), *((TopoDS_Shape*)newFace->Handle), *((TopTools_ListOfShape*)LOF->Handle));
}

 void OCTopOpeBRepBuild_Builder::RegularizeSolids(OCNaroWrappers::OCTopoDS_Shape^ SS, OCNaroWrappers::OCTopTools_ListOfShape^ lnewSolid, OCNaroWrappers::OCTopTools_ListOfShape^ LOS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->RegularizeSolids(*((TopoDS_Shape*)SS->Handle), *((TopTools_ListOfShape*)lnewSolid->Handle), *((TopTools_ListOfShape*)LOS->Handle));
}

 void OCTopOpeBRepBuild_Builder::RegularizeSolid(OCNaroWrappers::OCTopoDS_Shape^ SS, OCNaroWrappers::OCTopoDS_Shape^ newSolid, OCNaroWrappers::OCTopTools_ListOfShape^ LOS)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->RegularizeSolid(*((TopoDS_Shape*)SS->Handle), *((TopoDS_Shape*)newSolid->Handle), *((TopTools_ListOfShape*)LOS->Handle));
}

 void OCTopOpeBRepBuild_Builder::GPVSMakeEdges(OCNaroWrappers::OCTopoDS_Shape^ EF, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS, OCNaroWrappers::OCTopTools_ListOfShape^ LOE)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GPVSMakeEdges(*((TopoDS_Shape*)EF->Handle), *((TopOpeBRepBuild_PaveSet*)PVS->Handle), *((TopTools_ListOfShape*)LOE->Handle));
}

 void OCTopOpeBRepBuild_Builder::GEDBUMakeEdges(OCNaroWrappers::OCTopoDS_Shape^ EF, OCNaroWrappers::OCTopOpeBRepBuild_EdgeBuilder^ EDBU, OCNaroWrappers::OCTopTools_ListOfShape^ LOE)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GEDBUMakeEdges(*((TopoDS_Shape*)EF->Handle), *((TopOpeBRepBuild_EdgeBuilder*)EDBU->Handle), *((TopTools_ListOfShape*)LOE->Handle));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GToSplit(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GToSplit(*((TopoDS_Shape*)S->Handle), (TopAbs_State)TB));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GToMerge(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GToMerge(*((TopoDS_Shape*)S->Handle)));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GTakeCommonOfSame(OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRepBuild_Builder::GTakeCommonOfSame(*((TopOpeBRepBuild_GTopo*)G->Handle)));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GTakeCommonOfDiff(OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRepBuild_Builder::GTakeCommonOfDiff(*((TopOpeBRepBuild_GTopo*)G->Handle)));
}

 void OCTopOpeBRepBuild_Builder::GFindSamDom(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCNaroWrappers::OCTopTools_ListOfShape^ L2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFindSamDom(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)L1->Handle), *((TopTools_ListOfShape*)L2->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFindSamDom(OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCNaroWrappers::OCTopTools_ListOfShape^ L2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFindSamDom(*((TopTools_ListOfShape*)L1->Handle), *((TopTools_ListOfShape*)L2->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFindSamDomSODO(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LSO, OCNaroWrappers::OCTopTools_ListOfShape^ LDO)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFindSamDomSODO(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)LSO->Handle), *((TopTools_ListOfShape*)LDO->Handle));
}

 void OCTopOpeBRepBuild_Builder::GFindSamDomSODO(OCNaroWrappers::OCTopTools_ListOfShape^ LSO, OCNaroWrappers::OCTopTools_ListOfShape^ LDO)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFindSamDomSODO(*((TopTools_ListOfShape*)LSO->Handle), *((TopTools_ListOfShape*)LDO->Handle));
}

 void OCTopOpeBRepBuild_Builder::GMapShapes(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GMapShapes(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle));
}

 void OCTopOpeBRepBuild_Builder::GClearMaps()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GClearMaps();
}

 void OCTopOpeBRepBuild_Builder::GFindSameRank(OCNaroWrappers::OCTopTools_ListOfShape^ L1, Standard_Integer R, OCNaroWrappers::OCTopTools_ListOfShape^ L2)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GFindSameRank(*((TopTools_ListOfShape*)L1->Handle), R, *((TopTools_ListOfShape*)L2->Handle));
}

 Standard_Integer OCTopOpeBRepBuild_Builder::GShapeRank(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->GShapeRank(*((TopoDS_Shape*)S->Handle));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GIsShapeOf(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Integer I12)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GIsShapeOf(*((TopoDS_Shape*)S->Handle), I12));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GContains(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRepBuild_Builder::GContains(*((TopoDS_Shape*)S->Handle), *((TopTools_ListOfShape*)L->Handle)));
}

 void OCTopOpeBRepBuild_Builder::GCopyList(OCNaroWrappers::OCTopTools_ListOfShape^ Lin, Standard_Integer i1, Standard_Integer i2, OCNaroWrappers::OCTopTools_ListOfShape^ Lou)
{
  TopOpeBRepBuild_Builder::GCopyList(*((TopTools_ListOfShape*)Lin->Handle), i1, i2, *((TopTools_ListOfShape*)Lou->Handle));
}

 void OCTopOpeBRepBuild_Builder::GCopyList(OCNaroWrappers::OCTopTools_ListOfShape^ Lin, OCNaroWrappers::OCTopTools_ListOfShape^ Lou)
{
  TopOpeBRepBuild_Builder::GCopyList(*((TopTools_ListOfShape*)Lin->Handle), *((TopTools_ListOfShape*)Lou->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpLS(OCNaroWrappers::OCTopTools_ListOfShape^ L)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpLS(*((TopTools_ListOfShape*)L->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpPNT(OCNaroWrappers::OCgp_Pnt^ P)
{
  TopOpeBRepBuild_Builder::GdumpPNT(*((gp_Pnt*)P->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpORIPARPNT(OCTopAbs_Orientation o, Standard_Real p, OCNaroWrappers::OCgp_Pnt^ Pnt)
{
  TopOpeBRepBuild_Builder::GdumpORIPARPNT((TopAbs_Orientation)o, p, *((gp_Pnt*)Pnt->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpSHA(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Address str)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSHA(*((TopoDS_Shape*)S->Handle), str);
}

 void OCTopOpeBRepBuild_Builder::GdumpSHAORI(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Address str)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSHAORI(*((TopoDS_Shape*)S->Handle), str);
}

 void OCTopOpeBRepBuild_Builder::GdumpSHAORIGEO(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Address str)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSHAORIGEO(*((TopoDS_Shape*)S->Handle), str);
}

 void OCTopOpeBRepBuild_Builder::GdumpSHASTA(Standard_Integer iS, OCTopAbs_State T, OCNaroWrappers::OCTCollection_AsciiString^ a, OCNaroWrappers::OCTCollection_AsciiString^ b)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSHASTA(iS, (TopAbs_State)T, *((TCollection_AsciiString*)a->Handle), *((TCollection_AsciiString*)b->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpSHASTA(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State T, OCNaroWrappers::OCTCollection_AsciiString^ a, OCNaroWrappers::OCTCollection_AsciiString^ b)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSHASTA(*((TopoDS_Shape*)S->Handle), (TopAbs_State)T, *((TCollection_AsciiString*)a->Handle), *((TCollection_AsciiString*)b->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpSHASTA(Standard_Integer iS, OCTopAbs_State T, OCNaroWrappers::OCTopOpeBRepBuild_ShapeSet^ SS, OCNaroWrappers::OCTCollection_AsciiString^ a, OCNaroWrappers::OCTCollection_AsciiString^ b, OCNaroWrappers::OCTCollection_AsciiString^ c)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSHASTA(iS, (TopAbs_State)T, *((TopOpeBRepBuild_ShapeSet*)SS->Handle), *((TCollection_AsciiString*)a->Handle), *((TCollection_AsciiString*)b->Handle), *((TCollection_AsciiString*)c->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpEDG(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Address str)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpEDG(*((TopoDS_Shape*)S->Handle), str);
}

 void OCTopOpeBRepBuild_Builder::GdumpEDGVER(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopoDS_Shape^ V, Standard_Address str)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpEDGVER(*((TopoDS_Shape*)E->Handle), *((TopoDS_Shape*)V->Handle), str);
}

 void OCTopOpeBRepBuild_Builder::GdumpSAMDOM(OCNaroWrappers::OCTopTools_ListOfShape^ L, Standard_Address str)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSAMDOM(*((TopTools_ListOfShape*)L->Handle), str);
}

 void OCTopOpeBRepBuild_Builder::GdumpEXP(OCNaroWrappers::OCTopOpeBRepTool_ShapeExplorer^ E)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpEXP(*((TopOpeBRepTool_ShapeExplorer*)E->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpSOBU(OCNaroWrappers::OCTopOpeBRepBuild_SolidBuilder^ SB)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSOBU(*((TopOpeBRepBuild_SolidBuilder*)SB->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpFABU(OCNaroWrappers::OCTopOpeBRepBuild_FaceBuilder^ FB)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpFABU(*((TopOpeBRepBuild_FaceBuilder*)FB->Handle));
}

 void OCTopOpeBRepBuild_Builder::GdumpEDBU(OCNaroWrappers::OCTopOpeBRepBuild_EdgeBuilder^ EB)
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpEDBU(*((TopOpeBRepBuild_EdgeBuilder*)EB->Handle));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GtraceSPS(Standard_Integer iS)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GtraceSPS(iS));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GtraceSPS(Standard_Integer iS, Standard_Integer jS)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GtraceSPS(iS, jS));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GtraceSPS(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GtraceSPS(*((TopoDS_Shape*)S->Handle)));
}

 System::Boolean OCTopOpeBRepBuild_Builder::GtraceSPS(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Integer& IS)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_Builder*)nativeHandle)->GtraceSPS(*((TopoDS_Shape*)S->Handle), IS));
}

 void OCTopOpeBRepBuild_Builder::GdumpSHASETreset()
{
  ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSHASETreset();
}

 Standard_Integer OCTopOpeBRepBuild_Builder::GdumpSHASETindex()
{
  return ((TopOpeBRepBuild_Builder*)nativeHandle)->GdumpSHASETindex();
}

 void OCTopOpeBRepBuild_Builder::PrintGeo(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  TopOpeBRepBuild_Builder::PrintGeo(*((TopoDS_Shape*)S->Handle));
}

 void OCTopOpeBRepBuild_Builder::PrintSur(OCNaroWrappers::OCTopoDS_Face^ F)
{
  TopOpeBRepBuild_Builder::PrintSur(*((TopoDS_Face*)F->Handle));
}

 void OCTopOpeBRepBuild_Builder::PrintCur(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  TopOpeBRepBuild_Builder::PrintCur(*((TopoDS_Edge*)E->Handle));
}

 void OCTopOpeBRepBuild_Builder::PrintPnt(OCNaroWrappers::OCTopoDS_Vertex^ V)
{
  TopOpeBRepBuild_Builder::PrintPnt(*((TopoDS_Vertex*)V->Handle));
}

 void OCTopOpeBRepBuild_Builder::PrintOri(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  TopOpeBRepBuild_Builder::PrintOri(*((TopoDS_Shape*)S->Handle));
}

OCTCollection_AsciiString^ OCTopOpeBRepBuild_Builder::StringState(OCTopAbs_State S)
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = TopOpeBRepBuild_Builder::StringState((TopAbs_State)S);
  return gcnew OCTCollection_AsciiString(tmp);
}

 System::Boolean OCTopOpeBRepBuild_Builder::GcheckNBOUNDS(OCNaroWrappers::OCTopoDS_Shape^ E)
{
  return OCConverter::StandardBooleanToBoolean(TopOpeBRepBuild_Builder::GcheckNBOUNDS(*((TopoDS_Shape*)E->Handle)));
}


