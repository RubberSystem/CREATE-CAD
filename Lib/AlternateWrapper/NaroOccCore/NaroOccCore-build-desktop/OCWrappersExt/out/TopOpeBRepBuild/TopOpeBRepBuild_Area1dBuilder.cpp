// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_Area1dBuilder.h"
#include "../Converter.h"
#include "TopOpeBRepBuild_PaveSet.h"
#include "TopOpeBRepBuild_PaveClassifier.h"
#include "TopOpeBRepBuild_LoopSet.h"
#include "TopOpeBRepBuild_LoopClassifier.h"
#include "TopOpeBRepBuild_Loop.h"
#include "TopOpeBRepBuild_ListOfLoop.h"
#include "TopOpeBRepBuild_ListIteratorOfListOfLoop.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_Area1dBuilder::OCTopOpeBRepBuild_Area1dBuilder(TopOpeBRepBuild_Area1dBuilder* nativeHandle) : OCTopOpeBRepBuild_AreaBuilder((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_Area1dBuilder::OCTopOpeBRepBuild_Area1dBuilder() : OCTopOpeBRepBuild_AreaBuilder((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepBuild_Area1dBuilder();
}

OCTopOpeBRepBuild_Area1dBuilder::OCTopOpeBRepBuild_Area1dBuilder(OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ LS, OCNaroWrappers::OCTopOpeBRepBuild_PaveClassifier^ LC, System::Boolean ForceClass) : OCTopOpeBRepBuild_AreaBuilder((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepBuild_Area1dBuilder(*((TopOpeBRepBuild_PaveSet*)LS->Handle), *((TopOpeBRepBuild_PaveClassifier*)LC->Handle), OCConverter::BooleanToStandardBoolean(ForceClass));
}

 void OCTopOpeBRepBuild_Area1dBuilder::InitAreaBuilder(OCNaroWrappers::OCTopOpeBRepBuild_LoopSet^ LS, OCNaroWrappers::OCTopOpeBRepBuild_LoopClassifier^ LC, System::Boolean ForceClass)
{
  ((TopOpeBRepBuild_Area1dBuilder*)nativeHandle)->InitAreaBuilder(*((TopOpeBRepBuild_LoopSet*)LS->Handle), *((TopOpeBRepBuild_LoopClassifier*)LC->Handle), OCConverter::BooleanToStandardBoolean(ForceClass));
}

 void OCTopOpeBRepBuild_Area1dBuilder::ADD_Loop_TO_LISTOFLoop(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ L, OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ LOL, Standard_Address s)
{
  ((TopOpeBRepBuild_Area1dBuilder*)nativeHandle)->ADD_Loop_TO_LISTOFLoop(*((Handle_TopOpeBRepBuild_Loop*)L->Handle), *((TopOpeBRepBuild_ListOfLoop*)LOL->Handle), s);
}

 void OCTopOpeBRepBuild_Area1dBuilder::REM_Loop_FROM_LISTOFLoop(OCNaroWrappers::OCTopOpeBRepBuild_ListIteratorOfListOfLoop^ ITLOL, OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ LOL, Standard_Address s)
{
  ((TopOpeBRepBuild_Area1dBuilder*)nativeHandle)->REM_Loop_FROM_LISTOFLoop(*((TopOpeBRepBuild_ListIteratorOfListOfLoop*)ITLOL->Handle), *((TopOpeBRepBuild_ListOfLoop*)LOL->Handle), s);
}

 void OCTopOpeBRepBuild_Area1dBuilder::ADD_LISTOFLoop_TO_LISTOFLoop(OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ LOL1, OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ LOL2, Standard_Address s, Standard_Address s1, Standard_Address s2)
{
  ((TopOpeBRepBuild_Area1dBuilder*)nativeHandle)->ADD_LISTOFLoop_TO_LISTOFLoop(*((TopOpeBRepBuild_ListOfLoop*)LOL1->Handle), *((TopOpeBRepBuild_ListOfLoop*)LOL2->Handle), s, s1, s2);
}

 void OCTopOpeBRepBuild_Area1dBuilder::DumpList(OCNaroWrappers::OCTopOpeBRepBuild_ListOfLoop^ L)
{
  TopOpeBRepBuild_Area1dBuilder::DumpList(*((TopOpeBRepBuild_ListOfLoop*)L->Handle));
}


