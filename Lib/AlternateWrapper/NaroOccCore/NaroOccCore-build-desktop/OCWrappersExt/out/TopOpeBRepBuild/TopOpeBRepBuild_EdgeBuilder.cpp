// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_EdgeBuilder.h"
#include "../Converter.h"
#include "TopOpeBRepBuild_PaveSet.h"
#include "TopOpeBRepBuild_PaveClassifier.h"
#include "TopOpeBRepBuild_LoopSet.h"
#include "TopOpeBRepBuild_LoopClassifier.h"
#include "../TopoDS/TopoDS_Shape.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_EdgeBuilder::OCTopOpeBRepBuild_EdgeBuilder(TopOpeBRepBuild_EdgeBuilder* nativeHandle) : OCTopOpeBRepBuild_Area1dBuilder((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_EdgeBuilder::OCTopOpeBRepBuild_EdgeBuilder() : OCTopOpeBRepBuild_Area1dBuilder((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepBuild_EdgeBuilder();
}

OCTopOpeBRepBuild_EdgeBuilder::OCTopOpeBRepBuild_EdgeBuilder(OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ LS, OCNaroWrappers::OCTopOpeBRepBuild_PaveClassifier^ LC, System::Boolean ForceClass) : OCTopOpeBRepBuild_Area1dBuilder((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepBuild_EdgeBuilder(*((TopOpeBRepBuild_PaveSet*)LS->Handle), *((TopOpeBRepBuild_PaveClassifier*)LC->Handle), OCConverter::BooleanToStandardBoolean(ForceClass));
}

 void OCTopOpeBRepBuild_EdgeBuilder::InitEdgeBuilder(OCNaroWrappers::OCTopOpeBRepBuild_LoopSet^ LS, OCNaroWrappers::OCTopOpeBRepBuild_LoopClassifier^ LC, System::Boolean ForceClass)
{
  ((TopOpeBRepBuild_EdgeBuilder*)nativeHandle)->InitEdgeBuilder(*((TopOpeBRepBuild_LoopSet*)LS->Handle), *((TopOpeBRepBuild_LoopClassifier*)LC->Handle), OCConverter::BooleanToStandardBoolean(ForceClass));
}

 void OCTopOpeBRepBuild_EdgeBuilder::InitEdge()
{
  ((TopOpeBRepBuild_EdgeBuilder*)nativeHandle)->InitEdge();
}

 System::Boolean OCTopOpeBRepBuild_EdgeBuilder::MoreEdge()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_EdgeBuilder*)nativeHandle)->MoreEdge());
}

 void OCTopOpeBRepBuild_EdgeBuilder::NextEdge()
{
  ((TopOpeBRepBuild_EdgeBuilder*)nativeHandle)->NextEdge();
}

 void OCTopOpeBRepBuild_EdgeBuilder::InitVertex()
{
  ((TopOpeBRepBuild_EdgeBuilder*)nativeHandle)->InitVertex();
}

 System::Boolean OCTopOpeBRepBuild_EdgeBuilder::MoreVertex()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepBuild_EdgeBuilder*)nativeHandle)->MoreVertex());
}

 void OCTopOpeBRepBuild_EdgeBuilder::NextVertex()
{
  ((TopOpeBRepBuild_EdgeBuilder*)nativeHandle)->NextVertex();
}

OCTopoDS_Shape^ OCTopOpeBRepBuild_EdgeBuilder::Vertex()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRepBuild_EdgeBuilder*)nativeHandle)->Vertex();
  return gcnew OCTopoDS_Shape(tmp);
}

 Standard_Real OCTopOpeBRepBuild_EdgeBuilder::Parameter()
{
  return ((TopOpeBRepBuild_EdgeBuilder*)nativeHandle)->Parameter();
}


