// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepBuild_PaveClassifier.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TopOpeBRepBuild_Loop.h"


using namespace OCNaroWrappers;

OCTopOpeBRepBuild_PaveClassifier::OCTopOpeBRepBuild_PaveClassifier(TopOpeBRepBuild_PaveClassifier* nativeHandle) : OCTopOpeBRepBuild_LoopClassifier((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepBuild_PaveClassifier::OCTopOpeBRepBuild_PaveClassifier(OCNaroWrappers::OCTopoDS_Shape^ E) : OCTopOpeBRepBuild_LoopClassifier((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepBuild_PaveClassifier(*((TopoDS_Shape*)E->Handle));
}

 OCTopAbs_State OCTopOpeBRepBuild_PaveClassifier::Compare(OCNaroWrappers::OCTopOpeBRepBuild_Loop^ L1, OCNaroWrappers::OCTopOpeBRepBuild_Loop^ L2)
{
  return (OCTopAbs_State)(((TopOpeBRepBuild_PaveClassifier*)nativeHandle)->Compare(*((Handle_TopOpeBRepBuild_Loop*)L1->Handle), *((Handle_TopOpeBRepBuild_Loop*)L2->Handle)));
}

 void OCTopOpeBRepBuild_PaveClassifier::SetFirstParameter(Standard_Real P)
{
  ((TopOpeBRepBuild_PaveClassifier*)nativeHandle)->SetFirstParameter(P);
}

 void OCTopOpeBRepBuild_PaveClassifier::ClosedVertices(System::Boolean B)
{
  ((TopOpeBRepBuild_PaveClassifier*)nativeHandle)->ClosedVertices(OCConverter::BooleanToStandardBoolean(B));
}

 Standard_Real OCTopOpeBRepBuild_PaveClassifier::AdjustCase(Standard_Real p1, OCTopAbs_Orientation o, Standard_Real first, Standard_Real period, Standard_Real tol, Standard_Integer& cas)
{
  return TopOpeBRepBuild_PaveClassifier::AdjustCase(p1, (TopAbs_Orientation)o, first, period, tol, cas);
}


