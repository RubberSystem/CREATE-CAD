// File generated by CPPExt (MPV)
//
#ifndef _TopOpeBRepBuild_Builder_OCWrappers_HeaderFile
#define _TopOpeBRepBuild_Builder_OCWrappers_HeaderFile

// include native header
#include <TopOpeBRepBuild_Builder.hxx>
#include "../Converter.h"


#include "../TopAbs/TopAbs_State.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_BuildTool.h"
#include "../TopTools/TopTools_DataMapOfIntegerListOfShape.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_DataMapOfShapeListOfShapeOn1State.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "../TopTools/TopTools_DataMapOfShapeListOfShape.h"
#include "../TopoDS/TopoDS_Solid.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopTools/TopTools_IndexedMapOfShape.h"
#include "../TopOpeBRepTool/TopOpeBRepTool_ShapeClassifier.h"
#include "../TopTools/TopTools_MapOfShape.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../TopTools/TopTools_IndexedDataMapOfShapeShape.h"
#include "../TopTools/TopTools_IndexedMapOfOrientedShape.h"
#include "../TopAbs/TopAbs_ShapeEnum.h"
#include "../TopAbs/TopAbs_Orientation.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_Config.h"


namespace OCNaroWrappers
{

ref class OCTopOpeBRepDS_HDataStructure;
ref class OCTopTools_HArray1OfShape;
ref class OCTopTools_HArray1OfListOfShape;
ref class OCTopOpeBRepBuild_HBuilder;
ref class OCTopOpeBRepDS_BuildTool;
ref class OCTopoDS_Shape;
ref class OCTopTools_ListOfShape;
ref class OCTopTools_MapOfShape;
ref class OCTopTools_DataMapOfShapeShape;
ref class OCTopOpeBRepDS_DataMapOfShapeListOfShapeOn1State;
ref class OCTopOpeBRepTool_ShapeExplorer;
ref class OCTopOpeBRepBuild_ShapeSet;
ref class OCTopOpeBRepBuild_EdgeBuilder;
ref class OCTopOpeBRepBuild_FaceBuilder;
ref class OCTopOpeBRepBuild_SolidBuilder;
ref class OCTopOpeBRepBuild_WireEdgeSet;
ref class OCTopOpeBRepDS_PointIterator;
ref class OCTopOpeBRepBuild_PaveSet;
ref class OCTopTools_DataMapOfIntegerListOfShape;
ref class OCTopTools_DataMapOfIntegerShape;
ref class OCTopOpeBRepBuild_GTopo;
ref class OCTopOpeBRepBuild_ShellFaceSet;
ref class OCTopOpeBRepDS_SurfaceIterator;
ref class OCTopTools_IndexedMapOfOrientedShape;
ref class OCTopOpeBRepDS_CurveIterator;
ref class OCTopoDS_Vertex;
ref class OCTopoDS_Edge;
ref class OCTopTools_DataMapOfShapeInteger;
ref class OCgp_Pnt;
ref class OCTopoDS_Face;
ref class OCTCollection_AsciiString;


//! The Builder  algorithm    constructs   topological <br>
//!          objects  from   an    existing  topology  and  new <br>
//!          geometries attached to the topology. It is used to <br>
//!          construct the result of a topological operation; <br>
//!          the existing  topologies are the parts involved in <br>
//!          the  topological  operation and the new geometries <br>
//!          are the intersection lines and points. <br>
public ref class OCTopOpeBRepBuild_Builder  {

protected:
  TopOpeBRepBuild_Builder* nativeHandle;
  OCTopOpeBRepBuild_Builder(OCDummy^) {};

public:
  property TopOpeBRepBuild_Builder* Handle
  {
    TopOpeBRepBuild_Builder* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopOpeBRepBuild_Builder(TopOpeBRepBuild_Builder* nativeHandle);

// Methods PUBLIC


OCTopOpeBRepBuild_Builder(OCNaroWrappers::OCTopOpeBRepDS_BuildTool^ BT);


virtual /*instead*/  void Destroy() ;


 /*instead*/  OCTopOpeBRepDS_BuildTool^ ChangeBuildTool() ;


 /*instead*/  OCTopOpeBRepDS_BuildTool^ BuildTool() ;

//! Stores the data structure <HDS>, <br>
//! Create shapes from the new geometries. <br>
virtual /*instead*/  void Perform(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS) ;

//! Stores the data structure <HDS>, <br>
//! Create shapes from the new geometries, <br>
//! Evaluates if an operation performed on shapes S1,S2 <br>
//! is a particular case. <br>
virtual /*instead*/  void Perform(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS, OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;

//! returns the DS handled by this builder <br>
 /*instead*/  OCTopOpeBRepDS_HDataStructure^ DataStructure() ;

//! Removes all splits and merges already performed. <br>
//! Does NOT clear the handled DS. <br>
virtual /*instead*/  void Clear() ;

//! Merges  the two edges <S1> and <S2> keeping the <br>
//! parts in each edge of states <TB1> and <TB2>. <br>
//! Booleans onA, onB, onAB indicate wheter parts of edges <br>
//! found as state ON respectively on first, second, and both <br>
//! shapes must be (or not) built. <br>
 /*instead*/  void MergeEdges(OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCTopAbs_State TB1, OCNaroWrappers::OCTopTools_ListOfShape^ L2, OCTopAbs_State TB2, System::Boolean onA, System::Boolean onB, System::Boolean onAB) ;

//! Merges  the two faces <S1>   and <S2> keeping the <br>
//! parts in each face of states <TB1> and <TB2>. <br>
 /*instead*/  void MergeFaces(OCNaroWrappers::OCTopTools_ListOfShape^ S1, OCTopAbs_State TB1, OCNaroWrappers::OCTopTools_ListOfShape^ S2, OCTopAbs_State TB2, System::Boolean onA, System::Boolean onB, System::Boolean onAB) ;

//! Merges  the two solids <S1>   and <S2> keeping the <br>
//! parts in each solid of states <TB1> and <TB2>. <br>
 /*instead*/  void MergeSolids(OCNaroWrappers::OCTopoDS_Shape^ S1, OCTopAbs_State TB1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCTopAbs_State TB2) ;

//! Merges the two shapes <S1> and <S2> keeping the <br>
//! parts of states <TB1>,<TB2> in <S1>,<S2>. <br>
 /*instead*/  void MergeShapes(OCNaroWrappers::OCTopoDS_Shape^ S1, OCTopAbs_State TB1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCTopAbs_State TB2) ;


 /*instead*/  void End() ;


 /*instead*/  System::Boolean Classify() ;


 /*instead*/  void ChangeClassify(System::Boolean B) ;

//! Merges the solid <S>  keeping the <br>
//! parts of state <TB>. <br>
 /*instead*/  void MergeSolid(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB) ;

//! Returns the vertex created on point <I>. <br>
 /*instead*/  OCTopoDS_Shape^ NewVertex(Standard_Integer I) ;

//! Returns the edges created on curve <I>. <br>
 /*instead*/  OCTopTools_ListOfShape^ NewEdges(Standard_Integer I) ;

//! Returns the faces created on surface <I>. <br>
 /*instead*/  OCTopTools_ListOfShape^ NewFaces(Standard_Integer I) ;

//! Returns True if the shape <S> has been split. <br>
 /*instead*/  System::Boolean IsSplit(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB) ;

//! Returns the split parts <TB> of shape <S>. <br>
 /*instead*/  OCTopTools_ListOfShape^ Splits(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB) ;

//! Returns True if the shape <S> has been merged. <br>
 /*instead*/  System::Boolean IsMerged(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB) ;

//! Returns the merged parts <TB> of shape <S>. <br>
 /*instead*/  OCTopTools_ListOfShape^ Merged(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB) ;


 /*instead*/  void InitSection() ;

//! create parts ON solid of section edges <br>
 /*instead*/  void SplitSectionEdges() ;

//! create parts ON solid of section edges <br>
virtual /*instead*/  void SplitSectionEdge(OCNaroWrappers::OCTopoDS_Shape^ E) ;

//! return the section edges built on new curves. <br>
 /*instead*/  void SectionCurves(OCNaroWrappers::OCTopTools_ListOfShape^ L) ;

//! return the parts of edges found ON the boundary <br>
//! of the two arguments S1,S2 of Perform() <br>
 /*instead*/  void SectionEdges(OCNaroWrappers::OCTopTools_ListOfShape^ L) ;

//! Fills anAncMap with pairs (edge,ancestor edge) for each <br>
//!          split from the map aMapON for the shape object identified <br>
//!          by ShapeRank <br>
 /*instead*/  void FillSecEdgeAncestorMap(Standard_Integer aShapeRank, OCNaroWrappers::OCTopTools_MapOfShape^ aMapON, OCNaroWrappers::OCTopTools_DataMapOfShapeShape^ anAncMap) ;

//! return all section edges. <br>
 /*instead*/  void Section(OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


 /*instead*/  OCTopTools_ListOfShape^ Section() ;

//! update the DS by creating new geometries. <br>
//!          create vertices on DS points. <br>
 /*instead*/  void BuildVertices(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ DS) ;

//! update the DS by creating new geometries. <br>
//!          create shapes from the new geometries. <br>
 /*instead*/  void BuildEdges(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ DS) ;


 /*instead*/  OCTopOpeBRepDS_DataMapOfShapeListOfShapeOn1State^ MSplit(OCTopAbs_State s) ;


 /*instead*/  OCTopOpeBRepDS_DataMapOfShapeListOfShapeOn1State^ ChangeMSplit(OCTopAbs_State s) ;


 /*instead*/  void MakeEdges(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepBuild_EdgeBuilder^ B, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


 /*instead*/  void MakeFaces(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_FaceBuilder^ B, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


 /*instead*/  void MakeSolids(OCNaroWrappers::OCTopOpeBRepBuild_SolidBuilder^ B, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


 /*instead*/  void MakeShells(OCNaroWrappers::OCTopOpeBRepBuild_SolidBuilder^ B, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;

//! Returns a ref.on the list of shapes connected to <S> as <br>
//! <TB> split parts of <S>. <br>
//! Mark <S> as split in <TB> parts. <br>
 /*instead*/  OCTopTools_ListOfShape^ ChangeSplit(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB) ;


 /*instead*/  System::Boolean Opec12() ;


 /*instead*/  System::Boolean Opec21() ;


 /*instead*/  System::Boolean Opecom() ;


 /*instead*/  System::Boolean Opefus() ;


 /*instead*/  OCTopAbs_State ShapePosition(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LS) ;


 /*instead*/  System::Boolean KeepShape(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LS, OCTopAbs_State T) ;


static /*instead*/  OCTopAbs_ShapeEnum TopType(OCNaroWrappers::OCTopoDS_Shape^ S) ;


static /*instead*/  System::Boolean Reverse(OCTopAbs_State T1, OCTopAbs_State T2) ;


static /*instead*/  OCTopAbs_Orientation Orient(OCTopAbs_Orientation O, System::Boolean R) ;


 /*instead*/  void FindSameDomain(OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCNaroWrappers::OCTopTools_ListOfShape^ L2) ;


 /*instead*/  void FindSameDomainSameOrientation(OCNaroWrappers::OCTopTools_ListOfShape^ LSO, OCNaroWrappers::OCTopTools_ListOfShape^ LDO) ;


 /*instead*/  void MapShapes(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;


 /*instead*/  void ClearMaps() ;


 /*instead*/  void FindSameRank(OCNaroWrappers::OCTopTools_ListOfShape^ L1, Standard_Integer R, OCNaroWrappers::OCTopTools_ListOfShape^ L2) ;


 /*instead*/  Standard_Integer ShapeRank(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  System::Boolean IsShapeOf(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Integer I12) ;


static /*instead*/  System::Boolean Contains(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


 /*instead*/  Standard_Integer FindIsKPart() ;


 /*instead*/  Standard_Integer IsKPart() ;


virtual /*instead*/  void MergeKPart() ;


virtual /*instead*/  void MergeKPart(OCTopAbs_State TB1, OCTopAbs_State TB2) ;


 /*instead*/  void MergeKPartiskole() ;


 /*instead*/  void MergeKPartiskoletge() ;


 /*instead*/  void MergeKPartisdisj() ;


 /*instead*/  void MergeKPartisfafa() ;


 /*instead*/  void MergeKPartissoso() ;


 /*instead*/  Standard_Integer KPiskole() ;


 /*instead*/  Standard_Integer KPiskoletge() ;


 /*instead*/  Standard_Integer KPisdisj() ;


 /*instead*/  Standard_Integer KPisfafa() ;


 /*instead*/  Standard_Integer KPissoso() ;


 /*instead*/  void KPClearMaps() ;


 /*instead*/  Standard_Integer KPlhg(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


 /*instead*/  Standard_Integer KPlhg(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T) ;


 /*instead*/  Standard_Integer KPlhsd(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


 /*instead*/  Standard_Integer KPlhsd(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T) ;


 /*instead*/  OCTopAbs_State KPclasSS(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopTools_ListOfShape^ exceptLS1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;


 /*instead*/  OCTopAbs_State KPclasSS(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ exceptS1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;


 /*instead*/  OCTopAbs_State KPclasSS(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;


 /*instead*/  System::Boolean KPiskolesh(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LS, OCNaroWrappers::OCTopTools_ListOfShape^ LF) ;


 /*instead*/  System::Boolean KPiskoletgesh(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LS, OCNaroWrappers::OCTopTools_ListOfShape^ LF) ;


 /*instead*/  void KPSameDomain(OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCNaroWrappers::OCTopTools_ListOfShape^ L2) ;


 /*instead*/  Standard_Integer KPisdisjsh(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  Standard_Integer KPisfafash(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  Standard_Integer KPissososh(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  void KPiskoleanalyse(OCTopAbs_State FT1, OCTopAbs_State FT2, OCTopAbs_State ST1, OCTopAbs_State ST2, Standard_Integer& I, Standard_Integer& I1, Standard_Integer& I2) ;


 /*instead*/  void KPiskoletgeanalyse(OCTopOpeBRepDS_Config Conf, OCTopAbs_State ST1, OCTopAbs_State ST2, Standard_Integer& I) ;


 /*instead*/  void KPisdisjanalyse(OCTopAbs_State ST1, OCTopAbs_State ST2, Standard_Integer& I, Standard_Integer& IC1, Standard_Integer& IC2) ;


static /*instead*/  Standard_Integer KPls(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


static /*instead*/  Standard_Integer KPls(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T) ;


 /*instead*/  OCTopAbs_State KPclassF(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopoDS_Shape^ F2) ;


 /*instead*/  void KPclassFF(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopoDS_Shape^ F2, OCTopAbs_State& T1, OCTopAbs_State& T2) ;


 /*instead*/  System::Boolean KPiskoleFF(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopoDS_Shape^ F2, OCTopAbs_State& T1, OCTopAbs_State& T2) ;


static /*instead*/  System::Boolean KPContains(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


 /*instead*/  OCTopoDS_Shape^ KPmakeface(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCTopAbs_State T1, OCTopAbs_State T2, System::Boolean R1, System::Boolean R2) ;


static /*instead*/  Standard_Integer KPreturn(Standard_Integer KP) ;


 /*instead*/  void SplitEvisoONperiodicF() ;


 /*instead*/  void GMergeSolids(OCNaroWrappers::OCTopTools_ListOfShape^ LSO1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G) ;


 /*instead*/  void GFillSolidsSFS(OCNaroWrappers::OCTopTools_ListOfShape^ LSO1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS) ;


virtual /*instead*/  void GFillSolidSFS(OCNaroWrappers::OCTopoDS_Shape^ SO1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS) ;


 /*instead*/  void GFillSurfaceTopologySFS(OCNaroWrappers::OCTopoDS_Shape^ SO1, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS) ;


 /*instead*/  void GFillSurfaceTopologySFS(OCNaroWrappers::OCTopOpeBRepDS_SurfaceIterator^ IT, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS) ;


virtual /*instead*/  void GFillShellSFS(OCNaroWrappers::OCTopoDS_Shape^ SH1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS) ;


 /*instead*/  void GFillFaceSFS(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopTools_ListOfShape^ LSO2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS) ;


 /*instead*/  void GSplitFaceSFS(OCNaroWrappers::OCTopoDS_Shape^ F1, OCNaroWrappers::OCTopTools_ListOfShape^ LSclass, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS) ;


 /*instead*/  void GMergeFaceSFS(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS) ;


 /*instead*/  void GSplitFace(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopTools_ListOfShape^ LSclass) ;


 /*instead*/  void AddONPatchesSFS(OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS) ;


 /*instead*/  void FillOnPatches(OCNaroWrappers::OCTopTools_ListOfShape^ anEdgesON, OCNaroWrappers::OCTopoDS_Shape^ aBaseFace, OCNaroWrappers::OCTopTools_IndexedMapOfOrientedShape^ avoidMap) ;


 /*instead*/  void FindFacesTouchingEdge(OCNaroWrappers::OCTopoDS_Shape^ aFace, OCNaroWrappers::OCTopoDS_Shape^ anEdge, Standard_Integer aShRank, OCNaroWrappers::OCTopTools_ListOfShape^ aFaces) ;


 /*instead*/  void GMergeFaces(OCNaroWrappers::OCTopTools_ListOfShape^ LF1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G) ;


 /*instead*/  void GFillFacesWES(OCNaroWrappers::OCTopTools_ListOfShape^ LF1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES) ;


 /*instead*/  void GFillFacesWESK(OCNaroWrappers::OCTopTools_ListOfShape^ LF1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES, Standard_Integer K) ;


 /*instead*/  void GFillFacesWESMakeFaces(OCNaroWrappers::OCTopTools_ListOfShape^ LF1, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopTools_ListOfShape^ LSO, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G) ;


 /*instead*/  void GFillFaceWES(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES) ;


 /*instead*/  void GFillCurveTopologyWES(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES) ;


 /*instead*/  void GFillCurveTopologyWES(OCNaroWrappers::OCTopOpeBRepDS_CurveIterator^ IT, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES) ;


 /*instead*/  void GFillONPartsWES(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopTools_ListOfShape^ LSclass, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES) ;


 /*instead*/  void GFillWireWES(OCNaroWrappers::OCTopoDS_Shape^ W, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES) ;


 /*instead*/  void GFillEdgeWES(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES) ;


 /*instead*/  void GSplitEdgeWES(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopTools_ListOfShape^ LF2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES) ;


 /*instead*/  void GMergeEdgeWES(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES) ;


 /*instead*/  void GSplitEdge(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopTools_ListOfShape^ LSclass) ;


 /*instead*/  void GMergeEdges(OCNaroWrappers::OCTopTools_ListOfShape^ LE1, OCNaroWrappers::OCTopTools_ListOfShape^ LE2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G) ;


 /*instead*/  void GFillEdgesPVS(OCNaroWrappers::OCTopTools_ListOfShape^ LE1, OCNaroWrappers::OCTopTools_ListOfShape^ LE2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS) ;


 /*instead*/  void GFillEdgePVS(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopTools_ListOfShape^ LE2, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS) ;


 /*instead*/  void GFillPointTopologyPVS(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS) ;


 /*instead*/  void GFillPointTopologyPVS(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepDS_PointIterator^ IT, OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS) ;


 /*instead*/  System::Boolean GParamOnReference(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCTopoDS_Edge^ E, Standard_Real& P) ;


 /*instead*/  System::Boolean GKeepShape(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ Lref, OCTopAbs_State T) ;

//! return True if S is classified <T> / Lref shapes <br>
 /*instead*/  System::Boolean GKeepShape1(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ Lref, OCTopAbs_State T, OCTopAbs_State& pos) ;

//! add to Lou the shapes of Lin classified <T> / Lref shapes. <br>
//! Lou is not cleared. (S is a dummy trace argument) <br>
 /*instead*/  void GKeepShapes(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ Lref, OCTopAbs_State T, OCNaroWrappers::OCTopTools_ListOfShape^ Lin, OCNaroWrappers::OCTopTools_ListOfShape^ Lou) ;


 /*instead*/  void GSFSMakeSolids(OCNaroWrappers::OCTopoDS_Shape^ SOF, OCNaroWrappers::OCTopOpeBRepBuild_ShellFaceSet^ SFS, OCNaroWrappers::OCTopTools_ListOfShape^ LOSO) ;


 /*instead*/  void GSOBUMakeSolids(OCNaroWrappers::OCTopoDS_Shape^ SOF, OCNaroWrappers::OCTopOpeBRepBuild_SolidBuilder^ SOBU, OCNaroWrappers::OCTopTools_ListOfShape^ LOSO) ;


virtual /*instead*/  void GWESMakeFaces(OCNaroWrappers::OCTopoDS_Shape^ FF, OCNaroWrappers::OCTopOpeBRepBuild_WireEdgeSet^ WES, OCNaroWrappers::OCTopTools_ListOfShape^ LOF) ;


 /*instead*/  void GFABUMakeFaces(OCNaroWrappers::OCTopoDS_Shape^ FF, OCNaroWrappers::OCTopOpeBRepBuild_FaceBuilder^ FABU, OCNaroWrappers::OCTopTools_ListOfShape^ LOF, OCNaroWrappers::OCTopTools_DataMapOfShapeInteger^ MWisOld) ;


 /*instead*/  void RegularizeFaces(OCNaroWrappers::OCTopoDS_Shape^ FF, OCNaroWrappers::OCTopTools_ListOfShape^ lnewFace, OCNaroWrappers::OCTopTools_ListOfShape^ LOF) ;


 /*instead*/  void RegularizeFace(OCNaroWrappers::OCTopoDS_Shape^ FF, OCNaroWrappers::OCTopoDS_Shape^ newFace, OCNaroWrappers::OCTopTools_ListOfShape^ LOF) ;


 /*instead*/  void RegularizeSolids(OCNaroWrappers::OCTopoDS_Shape^ SS, OCNaroWrappers::OCTopTools_ListOfShape^ lnewSolid, OCNaroWrappers::OCTopTools_ListOfShape^ LOS) ;


 /*instead*/  void RegularizeSolid(OCNaroWrappers::OCTopoDS_Shape^ SS, OCNaroWrappers::OCTopoDS_Shape^ newSolid, OCNaroWrappers::OCTopTools_ListOfShape^ LOS) ;


 /*instead*/  void GPVSMakeEdges(OCNaroWrappers::OCTopoDS_Shape^ EF, OCNaroWrappers::OCTopOpeBRepBuild_PaveSet^ PVS, OCNaroWrappers::OCTopTools_ListOfShape^ LOE) ;


 /*instead*/  void GEDBUMakeEdges(OCNaroWrappers::OCTopoDS_Shape^ EF, OCNaroWrappers::OCTopOpeBRepBuild_EdgeBuilder^ EDBU, OCNaroWrappers::OCTopTools_ListOfShape^ LOE) ;


 /*instead*/  System::Boolean GToSplit(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State TB) ;


 /*instead*/  System::Boolean GToMerge(OCNaroWrappers::OCTopoDS_Shape^ S) ;


static /*instead*/  System::Boolean GTakeCommonOfSame(OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G) ;


static /*instead*/  System::Boolean GTakeCommonOfDiff(OCNaroWrappers::OCTopOpeBRepBuild_GTopo^ G) ;


 /*instead*/  void GFindSamDom(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCNaroWrappers::OCTopTools_ListOfShape^ L2) ;


 /*instead*/  void GFindSamDom(OCNaroWrappers::OCTopTools_ListOfShape^ L1, OCNaroWrappers::OCTopTools_ListOfShape^ L2) ;


 /*instead*/  void GFindSamDomSODO(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ LSO, OCNaroWrappers::OCTopTools_ListOfShape^ LDO) ;


 /*instead*/  void GFindSamDomSODO(OCNaroWrappers::OCTopTools_ListOfShape^ LSO, OCNaroWrappers::OCTopTools_ListOfShape^ LDO) ;


 /*instead*/  void GMapShapes(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;


 /*instead*/  void GClearMaps() ;


 /*instead*/  void GFindSameRank(OCNaroWrappers::OCTopTools_ListOfShape^ L1, Standard_Integer R, OCNaroWrappers::OCTopTools_ListOfShape^ L2) ;


 /*instead*/  Standard_Integer GShapeRank(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  System::Boolean GIsShapeOf(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Integer I12) ;


static /*instead*/  System::Boolean GContains(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


static /*instead*/  void GCopyList(OCNaroWrappers::OCTopTools_ListOfShape^ Lin, Standard_Integer i1, Standard_Integer i2, OCNaroWrappers::OCTopTools_ListOfShape^ Lou) ;


static /*instead*/  void GCopyList(OCNaroWrappers::OCTopTools_ListOfShape^ Lin, OCNaroWrappers::OCTopTools_ListOfShape^ Lou) ;


 /*instead*/  void GdumpLS(OCNaroWrappers::OCTopTools_ListOfShape^ L) ;


static /*instead*/  void GdumpPNT(OCNaroWrappers::OCgp_Pnt^ P) ;


static /*instead*/  void GdumpORIPARPNT(OCTopAbs_Orientation o, Standard_Real p, OCNaroWrappers::OCgp_Pnt^ Pnt) ;


 /*instead*/  void GdumpSHA(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Address str) ;


 /*instead*/  void GdumpSHAORI(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Address str) ;


 /*instead*/  void GdumpSHAORIGEO(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Address str) ;


 /*instead*/  void GdumpSHASTA(Standard_Integer iS, OCTopAbs_State T, OCNaroWrappers::OCTCollection_AsciiString^ a, OCNaroWrappers::OCTCollection_AsciiString^ b) ;


 /*instead*/  void GdumpSHASTA(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_State T, OCNaroWrappers::OCTCollection_AsciiString^ a, OCNaroWrappers::OCTCollection_AsciiString^ b) ;


 /*instead*/  void GdumpSHASTA(Standard_Integer iS, OCTopAbs_State T, OCNaroWrappers::OCTopOpeBRepBuild_ShapeSet^ SS, OCNaroWrappers::OCTCollection_AsciiString^ a, OCNaroWrappers::OCTCollection_AsciiString^ b, OCNaroWrappers::OCTCollection_AsciiString^ c) ;


 /*instead*/  void GdumpEDG(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Address str) ;


 /*instead*/  void GdumpEDGVER(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopoDS_Shape^ V, Standard_Address str) ;


 /*instead*/  void GdumpSAMDOM(OCNaroWrappers::OCTopTools_ListOfShape^ L, Standard_Address str) ;


 /*instead*/  void GdumpEXP(OCNaroWrappers::OCTopOpeBRepTool_ShapeExplorer^ E) ;


 /*instead*/  void GdumpSOBU(OCNaroWrappers::OCTopOpeBRepBuild_SolidBuilder^ SB) ;


 /*instead*/  void GdumpFABU(OCNaroWrappers::OCTopOpeBRepBuild_FaceBuilder^ FB) ;


 /*instead*/  void GdumpEDBU(OCNaroWrappers::OCTopOpeBRepBuild_EdgeBuilder^ EB) ;


 /*instead*/  System::Boolean GtraceSPS(Standard_Integer iS) ;


 /*instead*/  System::Boolean GtraceSPS(Standard_Integer iS, Standard_Integer jS) ;


 /*instead*/  System::Boolean GtraceSPS(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  System::Boolean GtraceSPS(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Integer& IS) ;


 /*instead*/  void GdumpSHASETreset() ;


 /*instead*/  Standard_Integer GdumpSHASETindex() ;


static /*instead*/  void PrintGeo(OCNaroWrappers::OCTopoDS_Shape^ S) ;


static /*instead*/  void PrintSur(OCNaroWrappers::OCTopoDS_Face^ F) ;


static /*instead*/  void PrintCur(OCNaroWrappers::OCTopoDS_Edge^ E) ;


static /*instead*/  void PrintPnt(OCNaroWrappers::OCTopoDS_Vertex^ V) ;


static /*instead*/  void PrintOri(OCNaroWrappers::OCTopoDS_Shape^ S) ;


static /*instead*/  OCTCollection_AsciiString^ StringState(OCTopAbs_State S) ;


static /*instead*/  System::Boolean GcheckNBOUNDS(OCNaroWrappers::OCTopoDS_Shape^ E) ;

~OCTopOpeBRepBuild_Builder()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
