// File generated by CPPExt (CPP file)
//

#include "Prs3d_PlaneSet.h"
#include "../Converter.h"
#include "../gp/gp_Pln.h"


using namespace OCNaroWrappers;

OCPrs3d_PlaneSet::OCPrs3d_PlaneSet(Handle(Prs3d_PlaneSet)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Prs3d_PlaneSet(*nativeHandle);
}

OCPrs3d_PlaneSet::OCPrs3d_PlaneSet(Standard_Real Xdir, Standard_Real Ydir, Standard_Real Zdir, Quantity_Length Xloc, Quantity_Length Yloc, Quantity_Length Zloc, Quantity_Length anOffset) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Prs3d_PlaneSet(new Prs3d_PlaneSet(Xdir, Ydir, Zdir, Xloc, Yloc, Zloc, anOffset));
}

 void OCPrs3d_PlaneSet::SetDirection(Standard_Real X, Standard_Real Y, Standard_Real Z)
{
  (*((Handle_Prs3d_PlaneSet*)nativeHandle))->SetDirection(X, Y, Z);
}

 void OCPrs3d_PlaneSet::SetLocation(Quantity_Length X, Quantity_Length Y, Quantity_Length Z)
{
  (*((Handle_Prs3d_PlaneSet*)nativeHandle))->SetLocation(X, Y, Z);
}

 void OCPrs3d_PlaneSet::SetOffset(Quantity_Length anOffset)
{
  (*((Handle_Prs3d_PlaneSet*)nativeHandle))->SetOffset(anOffset);
}

OCgp_Pln^ OCPrs3d_PlaneSet::Plane()
{
  gp_Pln* tmp = new gp_Pln();
  *tmp = (*((Handle_Prs3d_PlaneSet*)nativeHandle))->Plane();
  return gcnew OCgp_Pln(tmp);
}

 Quantity_Length OCPrs3d_PlaneSet::Offset()
{
  return (*((Handle_Prs3d_PlaneSet*)nativeHandle))->Offset();
}

 void OCPrs3d_PlaneSet::Location(Quantity_Length& X, Quantity_Length& Y, Quantity_Length& Z)
{
  (*((Handle_Prs3d_PlaneSet*)nativeHandle))->Location(X, Y, Z);
}

 void OCPrs3d_PlaneSet::Direction(Quantity_Length& X, Quantity_Length& Y, Quantity_Length& Z)
{
  (*((Handle_Prs3d_PlaneSet*)nativeHandle))->Direction(X, Y, Z);
}


