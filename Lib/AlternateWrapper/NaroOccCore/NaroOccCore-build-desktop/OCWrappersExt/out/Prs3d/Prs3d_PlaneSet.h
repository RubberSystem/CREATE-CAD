// File generated by CPPExt (Transient)
//
#ifndef _Prs3d_PlaneSet_OCWrappers_HeaderFile
#define _Prs3d_PlaneSet_OCWrappers_HeaderFile

// include the wrapped class
#include <Prs3d_PlaneSet.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../gp/gp_Pln.h"


namespace OCNaroWrappers
{

ref class OCgp_Pln;



public ref class OCPrs3d_PlaneSet : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCPrs3d_PlaneSet(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCPrs3d_PlaneSet(Handle(Prs3d_PlaneSet)* nativeHandle);

// Methods PUBLIC


OCPrs3d_PlaneSet(Standard_Real Xdir, Standard_Real Ydir, Standard_Real Zdir, Quantity_Length Xloc, Quantity_Length Yloc, Quantity_Length Zloc, Quantity_Length anOffset);


 /*instead*/  void SetDirection(Standard_Real X, Standard_Real Y, Standard_Real Z) ;


 /*instead*/  void SetLocation(Quantity_Length X, Quantity_Length Y, Quantity_Length Z) ;


 /*instead*/  void SetOffset(Quantity_Length anOffset) ;


 /*instead*/  OCgp_Pln^ Plane() ;


 /*instead*/  Quantity_Length Offset() ;


 /*instead*/  void Location(Quantity_Length& X, Quantity_Length& Y, Quantity_Length& Z) ;


 /*instead*/  void Direction(Quantity_Length& X, Quantity_Length& Y, Quantity_Length& Z) ;

~OCPrs3d_PlaneSet()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
