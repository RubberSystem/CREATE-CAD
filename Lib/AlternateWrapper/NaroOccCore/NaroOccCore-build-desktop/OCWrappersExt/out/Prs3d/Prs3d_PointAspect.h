// File generated by CPPExt (Transient)
//
#ifndef _Prs3d_PointAspect_OCWrappers_HeaderFile
#define _Prs3d_PointAspect_OCWrappers_HeaderFile

// include the wrapped class
#include <Prs3d_PointAspect.hxx>
#include "../Converter.h"

#include "Prs3d_BasicAspect.h"

#include "../Aspect/Aspect_TypeOfMarker.h"
#include "../Quantity/Quantity_NameOfColor.h"


namespace OCNaroWrappers
{

ref class OCGraphic3d_AspectMarker3d;
ref class OCQuantity_Color;
ref class OCTColStd_HArray1OfByte;


//! This  class  defines  attributes for the points <br>
//!  The points are drawn using markers, whose size does not depend on <br>
//!  the zoom value of the views. <br>
public ref class OCPrs3d_PointAspect : OCPrs3d_BasicAspect {

protected:
  // dummy constructor;
  OCPrs3d_PointAspect(OCDummy^) : OCPrs3d_BasicAspect((OCDummy^)nullptr) {};

public:

// constructor from native
OCPrs3d_PointAspect(Handle(Prs3d_PointAspect)* nativeHandle);

// Methods PUBLIC


OCPrs3d_PointAspect(OCAspect_TypeOfMarker aType, OCNaroWrappers::OCQuantity_Color^ aColor, Standard_Real aScale);


OCPrs3d_PointAspect(OCAspect_TypeOfMarker aType, OCQuantity_NameOfColor aColor, Standard_Real aScale);

//! defines only the urer defined marker point. <br>
OCPrs3d_PointAspect(OCNaroWrappers::OCQuantity_Color^ AColor, Standard_Real AnId, Standard_Integer AWidth, Standard_Integer AHeight, OCNaroWrappers::OCTColStd_HArray1OfByte^ ATexture);


 /*instead*/  void SetColor(OCNaroWrappers::OCQuantity_Color^ aColor) ;

//! defines the color to be used when drawing a point. <br>
//!          Default value: Quantity_NOC_YELLOW <br>
 /*instead*/  void SetColor(OCQuantity_NameOfColor aColor) ;

//! defines the type of representation to be used when drawing a point. <br>
//!          Default value: Aspect_TOM_PLUS <br>
 /*instead*/  void SetTypeOfMarker(OCAspect_TypeOfMarker aType) ;

//! defines the size of the marker used when drawing a point. <br>
//!          Default value: 1. <br>
 /*instead*/  void SetScale(Standard_Real aScale) ;


 /*instead*/  OCGraphic3d_AspectMarker3d^ Aspect() ;

//! Returns marker's texture size. <br>
 /*instead*/  void GetTextureSize(Standard_Integer& AWidth, Standard_Integer& AHeight) ;

//! Returns marker's texture. <br>
 /*instead*/  OCTColStd_HArray1OfByte^ GetTexture() ;

~OCPrs3d_PointAspect()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
