// File generated by CPPExt (CPP file)
//

#include "Prs3d_ShadingAspect.h"
#include "../Converter.h"
#include "../Graphic3d/Graphic3d_AspectFillArea3d.h"
#include "../Quantity/Quantity_Color.h"
#include "../Graphic3d/Graphic3d_MaterialAspect.h"


using namespace OCNaroWrappers;

OCPrs3d_ShadingAspect::OCPrs3d_ShadingAspect(Handle(Prs3d_ShadingAspect)* nativeHandle) : OCPrs3d_BasicAspect((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Prs3d_ShadingAspect(*nativeHandle);
}

OCPrs3d_ShadingAspect::OCPrs3d_ShadingAspect() : OCPrs3d_BasicAspect((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Prs3d_ShadingAspect(new Prs3d_ShadingAspect());
}

 void OCPrs3d_ShadingAspect::SetColor(OCNaroWrappers::OCQuantity_Color^ aColor, OCAspect_TypeOfFacingModel aModel)
{
  (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->SetColor(*((Quantity_Color*)aColor->Handle), (Aspect_TypeOfFacingModel)aModel);
}

 void OCPrs3d_ShadingAspect::SetColor(OCQuantity_NameOfColor aColor, OCAspect_TypeOfFacingModel aModel)
{
  (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->SetColor((Quantity_NameOfColor)aColor, (Aspect_TypeOfFacingModel)aModel);
}

 void OCPrs3d_ShadingAspect::SetMaterial(OCNaroWrappers::OCGraphic3d_MaterialAspect^ aMaterial, OCAspect_TypeOfFacingModel aModel)
{
  (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->SetMaterial(*((Graphic3d_MaterialAspect*)aMaterial->Handle), (Aspect_TypeOfFacingModel)aModel);
}

 void OCPrs3d_ShadingAspect::SetMaterial(OCGraphic3d_NameOfMaterial aMaterial, OCAspect_TypeOfFacingModel aModel)
{
  (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->SetMaterial((Graphic3d_NameOfMaterial)aMaterial, (Aspect_TypeOfFacingModel)aModel);
}

 void OCPrs3d_ShadingAspect::SetTransparency(Standard_Real aValue, OCAspect_TypeOfFacingModel aModel)
{
  (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->SetTransparency(aValue, (Aspect_TypeOfFacingModel)aModel);
}

 void OCPrs3d_ShadingAspect::SetAspect(OCNaroWrappers::OCGraphic3d_AspectFillArea3d^ Asp)
{
  (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->SetAspect(*((Handle_Graphic3d_AspectFillArea3d*)Asp->Handle));
}

OCQuantity_Color^ OCPrs3d_ShadingAspect::Color(OCAspect_TypeOfFacingModel aModel)
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->Color((Aspect_TypeOfFacingModel)aModel);
  return gcnew OCQuantity_Color(tmp);
}

OCGraphic3d_MaterialAspect^ OCPrs3d_ShadingAspect::Material(OCAspect_TypeOfFacingModel aModel)
{
  Graphic3d_MaterialAspect* tmp = new Graphic3d_MaterialAspect();
  *tmp = (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->Material((Aspect_TypeOfFacingModel)aModel);
  return gcnew OCGraphic3d_MaterialAspect(tmp);
}

 Standard_Real OCPrs3d_ShadingAspect::Transparency(OCAspect_TypeOfFacingModel aModel)
{
  return (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->Transparency((Aspect_TypeOfFacingModel)aModel);
}

OCGraphic3d_AspectFillArea3d^ OCPrs3d_ShadingAspect::Aspect()
{
  Handle(Graphic3d_AspectFillArea3d) tmp = (*((Handle_Prs3d_ShadingAspect*)nativeHandle))->Aspect();
  return gcnew OCGraphic3d_AspectFillArea3d(&tmp);
}


