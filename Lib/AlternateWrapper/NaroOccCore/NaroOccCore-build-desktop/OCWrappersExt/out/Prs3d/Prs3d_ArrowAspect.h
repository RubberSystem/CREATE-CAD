// File generated by CPPExt (Transient)
//
#ifndef _Prs3d_ArrowAspect_OCWrappers_HeaderFile
#define _Prs3d_ArrowAspect_OCWrappers_HeaderFile

// include the wrapped class
#include <Prs3d_ArrowAspect.hxx>
#include "../Converter.h"

#include "Prs3d_CompositeAspect.h"

#include "../Quantity/Quantity_NameOfColor.h"


namespace OCNaroWrappers
{

ref class OCGraphic3d_AspectLine3d;
ref class OCQuantity_Color;


//! A framework for displaying arrows in representations <br>
//! of dimensions and relations. <br>
public ref class OCPrs3d_ArrowAspect : OCPrs3d_CompositeAspect {

protected:
  // dummy constructor;
  OCPrs3d_ArrowAspect(OCDummy^) : OCPrs3d_CompositeAspect((OCDummy^)nullptr) {};

public:

// constructor from native
OCPrs3d_ArrowAspect(Handle(Prs3d_ArrowAspect)* nativeHandle);

// Methods PUBLIC

//! Constructs an empty framework for displaying arrows <br>
//! in representations of lengths. The lengths displayed <br>
//! are either on their own or in chamfers, fillets, <br>
//! diameters and radii. <br>
OCPrs3d_ArrowAspect();

//! Constructs a framework to display an arrow with a <br>
//! shaft of the length aLength and having a head with <br>
//! sides at the angle anAngle from each other. <br>
OCPrs3d_ArrowAspect(Quantity_PlaneAngle anAngle, Quantity_Length aLength);

//! defines the angle of the arrows. <br>
 /*instead*/  void SetAngle(Quantity_PlaneAngle anAngle) ;

//! returns the current value of the angle used when drawing an arrow. <br>
 /*instead*/  Quantity_PlaneAngle Angle() ;

//! defines the length of the arrows. <br>
 /*instead*/  void SetLength(Quantity_Length aLength) ;

//! returns the current value of the length used when drawing an arrow. <br>
 /*instead*/  Quantity_Length Length() ;


 /*instead*/  void SetColor(OCNaroWrappers::OCQuantity_Color^ aColor) ;


 /*instead*/  void SetColor(OCQuantity_NameOfColor aColor) ;


 /*instead*/  OCGraphic3d_AspectLine3d^ Aspect() ;

~OCPrs3d_ArrowAspect()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
