// File generated by CPPExt (MPV)
//
#ifndef _Prs3d_Arrow_OCWrappers_HeaderFile
#define _Prs3d_Arrow_OCWrappers_HeaderFile

// include native header
#include <Prs3d_Arrow.hxx>
#include "../Converter.h"

#include "Prs3d_Root.h"

#include "Prs3d_Root.h"


namespace OCNaroWrappers
{

ref class OCPrs3d_Presentation;
ref class OCgp_Pnt;
ref class OCgp_Dir;


//! provides class methods to draw an arrow at a given <br>
//!          location, along a given direction and using a given <br>
//!          angle. <br>
public ref class OCPrs3d_Arrow  : public OCPrs3d_Root {

protected:
  // dummy constructor;
  OCPrs3d_Arrow(OCDummy^) : OCPrs3d_Root((OCDummy^)nullptr) {};

public:

// constructor from native
OCPrs3d_Arrow(Prs3d_Arrow* nativeHandle);

// Methods PUBLIC

//! Defines the representation of the arrow defined by <br>
//! the location point aLocation, the direction <br>
//! aDirection and the length aLength. <br>
//! The angle anAngle defines the angle of opening of the arrow head. <br>
//! The presentation object aPresentation stores the <br>
//! information defined in this framework. <br>
static /*instead*/  void Draw(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCgp_Pnt^ aLocation, OCNaroWrappers::OCgp_Dir^ aDirection, Quantity_PlaneAngle anAngle, Quantity_Length aLength) ;

//! Defines the representation of the arrow defined by <br>
//! the location point aLocation, the direction vector <br>
//! aDirection and the length aLength. <br>
//! The angle anAngle defines the angle of opening of <br>
//! the arrow head, and the drawer aDrawer specifies <br>
//! the display attributes which arrows will have. <br>
//!  With this syntax, no presentation object is created. <br>
static /*instead*/  void Fill(OCNaroWrappers::OCPrs3d_Presentation^ aPresentation, OCNaroWrappers::OCgp_Pnt^ aLocation, OCNaroWrappers::OCgp_Dir^ aDirection, Quantity_PlaneAngle anAngle, Quantity_Length aLength) ;

~OCPrs3d_Arrow()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
