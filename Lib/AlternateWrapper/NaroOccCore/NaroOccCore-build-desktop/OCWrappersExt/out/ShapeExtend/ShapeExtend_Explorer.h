// File generated by CPPExt (MPV)
//
#ifndef _ShapeExtend_Explorer_OCWrappers_HeaderFile
#define _ShapeExtend_Explorer_OCWrappers_HeaderFile

// include native header
#include <ShapeExtend_Explorer.hxx>
#include "../Converter.h"


#include "../TopAbs/TopAbs_ShapeEnum.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopTools_HSequenceOfShape;
ref class OCTopTools_ListOfShape;


//! This class is intended to <br>
//! explore shapes and convert different representations <br>
//! (list, sequence, compound) of complex shapes. It provides tools for: <br>
//! - obtaining type of the shapes in context of TopoDS_Compound, <br>
//! - exploring shapes in context of  TopoDS_Compound, <br>
//! - converting different representations of shapes (list, sequence, compound). <br>
public ref class OCShapeExtend_Explorer  {

protected:
  ShapeExtend_Explorer* nativeHandle;
  OCShapeExtend_Explorer(OCDummy^) {};

public:
  property ShapeExtend_Explorer* Handle
  {
    ShapeExtend_Explorer* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCShapeExtend_Explorer(ShapeExtend_Explorer* nativeHandle);

// Methods PUBLIC

//! Creates an object Explorer <br>
OCShapeExtend_Explorer();

//! Converts a sequence of Shapes to a Compound <br>
 /*instead*/  OCTopoDS_Shape^ CompoundFromSeq(OCNaroWrappers::OCTopTools_HSequenceOfShape^ seqval) ;

//! Converts a Compound to a list of Shapes <br>
//!          if <comp> is not a compound, the list contains only <comp> <br>
//!          if <comp> is Null, the list is empty <br>
//!          if <comp> is a Compound, its sub-shapes are put into the list <br>
//!          then if <expcomp> is True, if a sub-shape is a Compound, it <br>
//!          is not put to the list but its sub-shapes are (recursive) <br>
 /*instead*/  OCTopTools_HSequenceOfShape^ SeqFromCompound(OCNaroWrappers::OCTopoDS_Shape^ comp, System::Boolean expcomp) ;

//! Converts a Sequence of Shapes to a List of Shapes <br>
//!          <clear> if True (D), commands the list to start from scratch <br>
//!          else, the list is cumulated <br>
 /*instead*/  void ListFromSeq(OCNaroWrappers::OCTopTools_HSequenceOfShape^ seqval, OCNaroWrappers::OCTopTools_ListOfShape^ lisval, System::Boolean clear) ;

//! Converts a List of Shapes to a Sequence of Shapes <br>
 /*instead*/  OCTopTools_HSequenceOfShape^ SeqFromList(OCNaroWrappers::OCTopTools_ListOfShape^ lisval) ;

//! Returns the type of a Shape: true type if <compound> is False <br>
//!          If <compound> is True and <shape> is a Compound, iterates on <br>
//!          its items. If all are of the same type, returns this type. <br>
//!          Else, returns COMPOUND. If it is empty, returns SHAPE <br>
//!          For a Null Shape, returns SHAPE <br>
 /*instead*/  OCTopAbs_ShapeEnum ShapeType(OCNaroWrappers::OCTopoDS_Shape^ shape, System::Boolean compound) ;

//! Builds a COMPOUND from the given shape. <br>
//!          It explores the shape level by level, according to the <br>
//!          <explore> argument. If <explore> is False, only COMPOUND <br>
//!          items are explored, else all items are. <br>
//!          The following shapes are added to resulting compound: <br>
//!        - shapes which comply to <type> <br>
//!        - if <type> is WIRE, considers also free edges (and makes wires) <br>
//!        - if <type> is SHELL, considers also free faces (and makes shells) <br>
//!          If <compound> is True, gathers items in compounds which <br>
//!          correspond to starting COMPOUND,SOLID or SHELL containers, or <br>
//!          items directly contained in a Compound <br>
 /*instead*/  OCTopoDS_Shape^ SortedCompound(OCNaroWrappers::OCTopoDS_Shape^ shape, OCTopAbs_ShapeEnum type, System::Boolean explore, System::Boolean compound) ;

//! Dispatches starting list of shapes according to their type, <br>
//!          to the appropriate resulting lists <br>
//!          For each of these lists, if it is null, it is firstly created <br>
//!          else, new items are appended to the already existing ones <br>
 /*instead*/  void DispatchList(OCNaroWrappers::OCTopTools_HSequenceOfShape^ list, OCNaroWrappers::OCTopTools_HSequenceOfShape^ vertices, OCNaroWrappers::OCTopTools_HSequenceOfShape^ edges, OCNaroWrappers::OCTopTools_HSequenceOfShape^ wires, OCNaroWrappers::OCTopTools_HSequenceOfShape^ faces, OCNaroWrappers::OCTopTools_HSequenceOfShape^ shells, OCNaroWrappers::OCTopTools_HSequenceOfShape^ solids, OCNaroWrappers::OCTopTools_HSequenceOfShape^ compsols, OCNaroWrappers::OCTopTools_HSequenceOfShape^ compounds) ;

~OCShapeExtend_Explorer()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
