// File generated by CPPExt (MPV)
//
#ifndef _TPrsStd_DataMapOfGUIDDriver_OCWrappers_HeaderFile
#define _TPrsStd_DataMapOfGUIDDriver_OCWrappers_HeaderFile

// include native header
#include <TPrsStd_DataMapOfGUIDDriver.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCStandard_GUID;
ref class OCTPrsStd_Driver;
ref class OCTPrsStd_DataMapNodeOfDataMapOfGUIDDriver;
ref class OCTPrsStd_DataMapIteratorOfDataMapOfGUIDDriver;



public ref class OCTPrsStd_DataMapOfGUIDDriver  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCTPrsStd_DataMapOfGUIDDriver(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCTPrsStd_DataMapOfGUIDDriver(TPrsStd_DataMapOfGUIDDriver* nativeHandle);

// Methods PUBLIC


OCTPrsStd_DataMapOfGUIDDriver(Standard_Integer NbBuckets);


 /*instead*/  OCTPrsStd_DataMapOfGUIDDriver^ Assign(OCNaroWrappers::OCTPrsStd_DataMapOfGUIDDriver^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(OCNaroWrappers::OCStandard_GUID^ K, OCNaroWrappers::OCTPrsStd_Driver^ I) ;


 /*instead*/  System::Boolean IsBound(OCNaroWrappers::OCStandard_GUID^ K) ;


 /*instead*/  System::Boolean UnBind(OCNaroWrappers::OCStandard_GUID^ K) ;


 /*instead*/  OCTPrsStd_Driver^ Find(OCNaroWrappers::OCStandard_GUID^ K) ;


 /*instead*/  OCTPrsStd_Driver^ ChangeFind(OCNaroWrappers::OCStandard_GUID^ K) ;


 /*instead*/  Standard_Address Find1(OCNaroWrappers::OCStandard_GUID^ K) ;


 /*instead*/  Standard_Address ChangeFind1(OCNaroWrappers::OCStandard_GUID^ K) ;

~OCTPrsStd_DataMapOfGUIDDriver()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
