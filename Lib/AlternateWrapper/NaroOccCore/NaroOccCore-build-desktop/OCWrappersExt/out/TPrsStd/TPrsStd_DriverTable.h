// File generated by CPPExt (Transient)
//
#ifndef _TPrsStd_DriverTable_OCWrappers_HeaderFile
#define _TPrsStd_DriverTable_OCWrappers_HeaderFile

// include the wrapped class
#include <TPrsStd_DriverTable.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "TPrsStd_DataMapOfGUIDDriver.h"


namespace OCNaroWrappers
{

ref class OCStandard_GUID;
ref class OCTPrsStd_Driver;


//!   This class is   a  container to record  (AddDriver) <br>
//!          binding between  GUID and  TPrsStd_Driver. <br>
//! You create a new instance of TPrsStd_Driver <br>
//! and use the method AddDriver to load it into the driver table. the method <br>
public ref class OCTPrsStd_DriverTable : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCTPrsStd_DriverTable(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCTPrsStd_DriverTable(Handle(TPrsStd_DriverTable)* nativeHandle);

// Methods PUBLIC

//! Returns the static table. <br>
//!          If it does not exist, creates it and fills it with standard drivers. <br>
static /*instead*/  OCTPrsStd_DriverTable^ Get() ;

//! Default constructor <br>
OCTPrsStd_DriverTable();

//! Fills the table with standard drivers <br>
 /*instead*/  void InitStandardDrivers() ;

//! Returns true if the driver has been added successfully to the driver table. <br>
 /*instead*/  System::Boolean AddDriver(OCNaroWrappers::OCStandard_GUID^ guid, OCNaroWrappers::OCTPrsStd_Driver^ driver) ;

//! Returns true if the driver was found. <br>
 /*instead*/  System::Boolean FindDriver(OCNaroWrappers::OCStandard_GUID^ guid, OCNaroWrappers::OCTPrsStd_Driver^ driver) ;


//! Removes a driver with the given GUID. <br>
//!      Returns true if the driver has been removed successfully. <br>
 /*instead*/  System::Boolean RemoveDriver(OCNaroWrappers::OCStandard_GUID^ guid) ;

//! Removes all drivers. Returns <br>
//! true if the driver has been removed successfully. <br>
//! If this method is used, the InitStandardDrivers method should be <br>
//! called to fill the table with standard drivers. <br>
 /*instead*/  void Clear() ;

~OCTPrsStd_DriverTable()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
