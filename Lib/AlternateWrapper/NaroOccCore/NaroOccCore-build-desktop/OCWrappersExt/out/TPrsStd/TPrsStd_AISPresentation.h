// File generated by CPPExt (Transient)
//
#ifndef _TPrsStd_AISPresentation_OCWrappers_HeaderFile
#define _TPrsStd_AISPresentation_OCWrappers_HeaderFile

// include the wrapped class
#include <TPrsStd_AISPresentation.hxx>
#include "../Converter.h"

#include "../TDF/TDF_Attribute.h"

#include "../Standard/Standard_GUID.h"
#include "../Quantity/Quantity_NameOfColor.h"
#include "../Graphic3d/Graphic3d_NameOfMaterial.h"


namespace OCNaroWrappers
{

ref class OCAIS_InteractiveObject;
ref class OCStandard_GUID;
ref class OCTDF_Label;
ref class OCTDF_Attribute;
ref class OCTDF_RelocationTable;
ref class OCTDF_AttributeDelta;


//! An attribute to associate an <br>
//! AIS_InteractiveObject to a label in an AIS viewer. <br>
//! This attribute works in collaboration with TPrsStd_AISViewer. <br>
//! Note that all the Set... and Unset... attribute <br>
//! methods as well as the query methods for <br>
//! visualization attributes and the HasOwn... test <br>
//! methods are shortcuts to the respective <br>
//! AIS_InteractiveObject settings. <br>
public ref class OCTPrsStd_AISPresentation : OCTDF_Attribute {

protected:
  // dummy constructor;
  OCTPrsStd_AISPresentation(OCDummy^) : OCTDF_Attribute((OCDummy^)nullptr) {};

public:

// constructor from native
OCTPrsStd_AISPresentation(Handle(TPrsStd_AISPresentation)* nativeHandle);

// Methods PUBLIC

//! Returns the GUID for TPrsStd_AISPresentation attributes. <br>
static /*instead*/  OCStandard_GUID^ GetID() ;

//! Creates or retrieves the presentation attribute on <br>
//! the label L, and sets the GUID driver. <br>
static /*instead*/  OCTPrsStd_AISPresentation^ Set(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCStandard_GUID^ driver) ;

//! Delete (if exist) the presentation attribute associated to the label <L>. <br>
static /*instead*/  void Unset(OCNaroWrappers::OCTDF_Label^ L) ;

//!  Creates or retrieves the AISPresentation <br>
//! attribute attached to master. <br>
//! The GUID of the driver will be the GUID of master. <br>
//! master is the attribute you want to display. <br>
static /*instead*/  OCTPrsStd_AISPresentation^ Set(OCNaroWrappers::OCTDF_Attribute^ master) ;


OCTPrsStd_AISPresentation();


 /*instead*/  void SetDisplayed(System::Boolean B) ;

//! Display presentation of object in AIS viewer. <br>
//!          If <update> = True then AISObject is recomputed and all <br>
//!          the visualization settings are applied <br>
 /*instead*/  void Display(System::Boolean update) ;

//! Removes the presentation of this AIS <br>
//! presentation attribute from the TPrsStd_AISViewer. <br>
//! If remove is true, this AIS presentation attribute <br>
//! is removed from the interactive context. <br>
 /*instead*/  void Erase(System::Boolean remove) ;

//! Recompute presentation of object and apply the visualization settings <br>
 /*instead*/  void Update() ;


 /*instead*/  OCStandard_GUID^ GetDriverGUID() ;


 /*instead*/  void SetDriverGUID(OCNaroWrappers::OCStandard_GUID^ guid) ;


//! Returns true if this AIS presentation attribute is displayed. <br>
 /*instead*/  System::Boolean IsDisplayed() ;

//! Returns AIS_InteractiveObject stored in the presentation attribute <br>
 /*instead*/  OCAIS_InteractiveObject^ GetAIS() ;


//! Returns the material setting for this presentation attribute. <br>
 /*instead*/  OCGraphic3d_NameOfMaterial Material() ;

//!        Sets the material aName for this presentation  attribute. <br>
 /*instead*/  void SetMaterial(OCGraphic3d_NameOfMaterial aName) ;

//! Returns true if this presentation attribute already has a material setting. <br>
 /*instead*/  System::Boolean HasOwnMaterial() ;

//! Removes the material setting from this presentation attribute. <br>
 /*instead*/  void UnsetMaterial() ;


//! Sets the transparency value aValue for this <br>
//! presentation attribute. <br>
//! This value is 0.6 by default. <br>
 /*instead*/  void SetTransparency(Standard_Real aValue) ;


 /*instead*/  Standard_Real Transparency() ;

//! Returns true if this presentation attribute already has a transparency setting. <br>
 /*instead*/  System::Boolean HasOwnTransparency() ;

//! Removes the transparency setting from this presentation attribute. <br>
 /*instead*/  void UnsetTransparency() ;


 /*instead*/  OCQuantity_NameOfColor Color() ;

//! Sets the color aColor for this presentation attribute. <br>
 /*instead*/  void SetColor(OCQuantity_NameOfColor aColor) ;

//! Returns true if this presentation attribute already has a color setting. <br>
 /*instead*/  System::Boolean HasOwnColor() ;

//! Removes the color setting from this presentation attribute. <br>
 /*instead*/  void UnsetColor() ;


 /*instead*/  Standard_Real Width() ;

//! Sets the width aWidth for this presentation attribute. <br>
 /*instead*/  void SetWidth(Standard_Real aWidth) ;

//! Returns true if this presentation attribute already has a width setting. <br>
 /*instead*/  System::Boolean HasOwnWidth() ;

//! Removes the width setting from this presentation attribute. <br>
 /*instead*/  void UnsetWidth() ;


 /*instead*/  Standard_Integer Mode() ;


 /*instead*/  void SetMode(Standard_Integer theMode) ;


 /*instead*/  System::Boolean HasOwnMode() ;


 /*instead*/  void UnsetMode() ;


 /*instead*/  Standard_Integer SelectionMode() ;


 /*instead*/  void SetSelectionMode(Standard_Integer theSelectionMode) ;


 /*instead*/  System::Boolean HasOwnSelectionMode() ;


 /*instead*/  void UnsetSelectionMode() ;


 /*instead*/  OCStandard_GUID^ ID() ;


 /*instead*/  OCTDF_Attribute^ NewEmpty() ;


 /*instead*/  void Restore(OCNaroWrappers::OCTDF_Attribute^ with) ;


 /*instead*/  void Paste(OCNaroWrappers::OCTDF_Attribute^ into, OCNaroWrappers::OCTDF_RelocationTable^ RT) ;


virtual /*instead*/  OCTDF_Attribute^ BackupCopy() override;


virtual /*instead*/  void AfterAddition() override;


virtual /*instead*/  void BeforeRemoval() override;


virtual /*instead*/  void BeforeForget() override;


virtual /*instead*/  void AfterResume() override;


virtual /*instead*/  System::Boolean BeforeUndo(OCNaroWrappers::OCTDF_AttributeDelta^ anAttDelta, System::Boolean forceIt) override;

//! update AIS viewer according to delta <br>
virtual /*instead*/  System::Boolean AfterUndo(OCNaroWrappers::OCTDF_AttributeDelta^ anAttDelta, System::Boolean forceIt) override;

~OCTPrsStd_AISPresentation()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
