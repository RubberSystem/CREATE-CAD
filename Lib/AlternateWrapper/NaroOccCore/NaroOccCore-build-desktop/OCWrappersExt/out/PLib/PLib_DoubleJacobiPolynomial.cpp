// File generated by CPPExt (CPP file)
//

#include "PLib_DoubleJacobiPolynomial.h"
#include "../Converter.h"
#include "PLib_JacobiPolynomial.h"
#include "../TColStd/TColStd_HArray1OfReal.h"
#include "../TColStd/TColStd_Array1OfReal.h"


using namespace OCNaroWrappers;

OCPLib_DoubleJacobiPolynomial::OCPLib_DoubleJacobiPolynomial(PLib_DoubleJacobiPolynomial* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCPLib_DoubleJacobiPolynomial::OCPLib_DoubleJacobiPolynomial() 
{
  nativeHandle = new PLib_DoubleJacobiPolynomial();
}

OCPLib_DoubleJacobiPolynomial::OCPLib_DoubleJacobiPolynomial(OCNaroWrappers::OCPLib_JacobiPolynomial^ JacPolU, OCNaroWrappers::OCPLib_JacobiPolynomial^ JacPolV) 
{
  nativeHandle = new PLib_DoubleJacobiPolynomial(*((Handle_PLib_JacobiPolynomial*)JacPolU->Handle), *((Handle_PLib_JacobiPolynomial*)JacPolV->Handle));
}

 Standard_Real OCPLib_DoubleJacobiPolynomial::MaxErrorU(Standard_Integer Dimension, Standard_Integer DegreeU, Standard_Integer DegreeV, Standard_Integer dJacCoeff, OCNaroWrappers::OCTColStd_Array1OfReal^ JacCoeff)
{
  return ((PLib_DoubleJacobiPolynomial*)nativeHandle)->MaxErrorU(Dimension, DegreeU, DegreeV, dJacCoeff, *((TColStd_Array1OfReal*)JacCoeff->Handle));
}

 Standard_Real OCPLib_DoubleJacobiPolynomial::MaxErrorV(Standard_Integer Dimension, Standard_Integer DegreeU, Standard_Integer DegreeV, Standard_Integer dJacCoeff, OCNaroWrappers::OCTColStd_Array1OfReal^ JacCoeff)
{
  return ((PLib_DoubleJacobiPolynomial*)nativeHandle)->MaxErrorV(Dimension, DegreeU, DegreeV, dJacCoeff, *((TColStd_Array1OfReal*)JacCoeff->Handle));
}

 Standard_Real OCPLib_DoubleJacobiPolynomial::MaxError(Standard_Integer Dimension, Standard_Integer MinDegreeU, Standard_Integer MaxDegreeU, Standard_Integer MinDegreeV, Standard_Integer MaxDegreeV, Standard_Integer dJacCoeff, OCNaroWrappers::OCTColStd_Array1OfReal^ JacCoeff, Standard_Real Error)
{
  return ((PLib_DoubleJacobiPolynomial*)nativeHandle)->MaxError(Dimension, MinDegreeU, MaxDegreeU, MinDegreeV, MaxDegreeV, dJacCoeff, *((TColStd_Array1OfReal*)JacCoeff->Handle), Error);
}

 void OCPLib_DoubleJacobiPolynomial::ReduceDegree(Standard_Integer Dimension, Standard_Integer MinDegreeU, Standard_Integer MaxDegreeU, Standard_Integer MinDegreeV, Standard_Integer MaxDegreeV, Standard_Integer dJacCoeff, OCNaroWrappers::OCTColStd_Array1OfReal^ JacCoeff, Standard_Real EpmsCut, Standard_Real& MaxError, Standard_Integer& NewDegreeU, Standard_Integer& NewDegreeV)
{
  ((PLib_DoubleJacobiPolynomial*)nativeHandle)->ReduceDegree(Dimension, MinDegreeU, MaxDegreeU, MinDegreeV, MaxDegreeV, dJacCoeff, *((TColStd_Array1OfReal*)JacCoeff->Handle), EpmsCut, MaxError, NewDegreeU, NewDegreeV);
}

 Standard_Real OCPLib_DoubleJacobiPolynomial::AverageError(Standard_Integer Dimension, Standard_Integer DegreeU, Standard_Integer DegreeV, Standard_Integer dJacCoeff, OCNaroWrappers::OCTColStd_Array1OfReal^ JacCoeff)
{
  return ((PLib_DoubleJacobiPolynomial*)nativeHandle)->AverageError(Dimension, DegreeU, DegreeV, dJacCoeff, *((TColStd_Array1OfReal*)JacCoeff->Handle));
}

 void OCPLib_DoubleJacobiPolynomial::WDoubleJacobiToCoefficients(Standard_Integer Dimension, Standard_Integer DegreeU, Standard_Integer DegreeV, OCNaroWrappers::OCTColStd_Array1OfReal^ JacCoeff, OCNaroWrappers::OCTColStd_Array1OfReal^ Coefficients)
{
  ((PLib_DoubleJacobiPolynomial*)nativeHandle)->WDoubleJacobiToCoefficients(Dimension, DegreeU, DegreeV, *((TColStd_Array1OfReal*)JacCoeff->Handle), *((TColStd_Array1OfReal*)Coefficients->Handle));
}

OCPLib_JacobiPolynomial^ OCPLib_DoubleJacobiPolynomial::U()
{
  Handle(PLib_JacobiPolynomial) tmp = ((PLib_DoubleJacobiPolynomial*)nativeHandle)->U();
  return gcnew OCPLib_JacobiPolynomial(&tmp);
}

OCPLib_JacobiPolynomial^ OCPLib_DoubleJacobiPolynomial::V()
{
  Handle(PLib_JacobiPolynomial) tmp = ((PLib_DoubleJacobiPolynomial*)nativeHandle)->V();
  return gcnew OCPLib_JacobiPolynomial(&tmp);
}

OCTColStd_HArray1OfReal^ OCPLib_DoubleJacobiPolynomial::TabMaxU()
{
  Handle(TColStd_HArray1OfReal) tmp = ((PLib_DoubleJacobiPolynomial*)nativeHandle)->TabMaxU();
  return gcnew OCTColStd_HArray1OfReal(&tmp);
}

OCTColStd_HArray1OfReal^ OCPLib_DoubleJacobiPolynomial::TabMaxV()
{
  Handle(TColStd_HArray1OfReal) tmp = ((PLib_DoubleJacobiPolynomial*)nativeHandle)->TabMaxV();
  return gcnew OCTColStd_HArray1OfReal(&tmp);
}


