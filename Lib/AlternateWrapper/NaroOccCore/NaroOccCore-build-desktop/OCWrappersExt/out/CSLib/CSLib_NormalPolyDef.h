// File generated by CPPExt (MPV)
//
#ifndef _CSLib_NormalPolyDef_OCWrappers_HeaderFile
#define _CSLib_NormalPolyDef_OCWrappers_HeaderFile

// include native header
#include <CSLib_NormalPolyDef.hxx>
#include "../Converter.h"

#include "../math/math_FunctionWithDerivative.h"

#include "../TColStd/TColStd_Array1OfReal.h"
#include "../math/math_FunctionWithDerivative.h"


namespace OCNaroWrappers
{

ref class OCTColStd_Array1OfReal;



public ref class OCCSLib_NormalPolyDef  : public OCmath_FunctionWithDerivative {

protected:
  // dummy constructor;
  OCCSLib_NormalPolyDef(OCDummy^) : OCmath_FunctionWithDerivative((OCDummy^)nullptr) {};

public:

// constructor from native
OCCSLib_NormalPolyDef(CSLib_NormalPolyDef* nativeHandle);

// Methods PUBLIC


OCCSLib_NormalPolyDef(Standard_Integer k0, OCNaroWrappers::OCTColStd_Array1OfReal^ li);

//! computes the value <F>of the function for the variable <X>. <br>
//!          Returns True if the calculation were successfully done, <br>
//!          False otherwise. <br>
 /*instead*/  System::Boolean Value(Standard_Real X, Standard_Real& F) ;

//! computes the derivative <D> of the function <br>
//!          for the variable <X>. <br>
//!           Returns True if the calculation were successfully done, <br>
//!           False otherwise. <br>
 /*instead*/  System::Boolean Derivative(Standard_Real X, Standard_Real& D) ;

//! computes the value <F> and the derivative <D> of the <br>
//!          function for the variable <X>. <br>
//!          Returns True if the calculation were successfully done, <br>
//!          False otherwise. <br>
 /*instead*/  System::Boolean Values(Standard_Real X, Standard_Real& F, Standard_Real& D) ;

~OCCSLib_NormalPolyDef()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
