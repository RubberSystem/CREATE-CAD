// File generated by CPPExt (CPP file)
//

#include "BOP_IndexedDataMapOfEdgeListFaceInfo.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "BOP_ListOfFaceInfo.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "BOP_IndexedDataMapNodeOfIndexedDataMapOfEdgeListFaceInfo.h"


using namespace OCNaroWrappers;

OCBOP_IndexedDataMapOfEdgeListFaceInfo::OCBOP_IndexedDataMapOfEdgeListFaceInfo(BOP_IndexedDataMapOfEdgeListFaceInfo* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBOP_IndexedDataMapOfEdgeListFaceInfo::OCBOP_IndexedDataMapOfEdgeListFaceInfo(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BOP_IndexedDataMapOfEdgeListFaceInfo(NbBuckets);
}

OCBOP_IndexedDataMapOfEdgeListFaceInfo^ OCBOP_IndexedDataMapOfEdgeListFaceInfo::Assign(OCNaroWrappers::OCBOP_IndexedDataMapOfEdgeListFaceInfo^ Other)
{
  BOP_IndexedDataMapOfEdgeListFaceInfo* tmp = new BOP_IndexedDataMapOfEdgeListFaceInfo(0);
  *tmp = ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->Assign(*((BOP_IndexedDataMapOfEdgeListFaceInfo*)Other->Handle));
  return gcnew OCBOP_IndexedDataMapOfEdgeListFaceInfo(tmp);
}

 void OCBOP_IndexedDataMapOfEdgeListFaceInfo::ReSize(Standard_Integer NbBuckets)
{
  ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCBOP_IndexedDataMapOfEdgeListFaceInfo::Add(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCBOP_ListOfFaceInfo^ I)
{
  return ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->Add(*((TopoDS_Shape*)K->Handle), *((BOP_ListOfFaceInfo*)I->Handle));
}

 void OCBOP_IndexedDataMapOfEdgeListFaceInfo::Substitute(Standard_Integer I, OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCBOP_ListOfFaceInfo^ T)
{
  ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->Substitute(I, *((TopoDS_Shape*)K->Handle), *((BOP_ListOfFaceInfo*)T->Handle));
}

 void OCBOP_IndexedDataMapOfEdgeListFaceInfo::RemoveLast()
{
  ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->RemoveLast();
}

 System::Boolean OCBOP_IndexedDataMapOfEdgeListFaceInfo::Contains(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->Contains(*((TopoDS_Shape*)K->Handle)));
}

OCTopoDS_Shape^ OCBOP_IndexedDataMapOfEdgeListFaceInfo::FindKey(Standard_Integer I)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->FindKey(I);
  return gcnew OCTopoDS_Shape(tmp);
}

OCBOP_ListOfFaceInfo^ OCBOP_IndexedDataMapOfEdgeListFaceInfo::FindFromIndex(Standard_Integer I)
{
  BOP_ListOfFaceInfo* tmp = new BOP_ListOfFaceInfo();
  *tmp = ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->FindFromIndex(I);
  return gcnew OCBOP_ListOfFaceInfo(tmp);
}

OCBOP_ListOfFaceInfo^ OCBOP_IndexedDataMapOfEdgeListFaceInfo::ChangeFromIndex(Standard_Integer I)
{
  BOP_ListOfFaceInfo* tmp = new BOP_ListOfFaceInfo();
  *tmp = ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->ChangeFromIndex(I);
  return gcnew OCBOP_ListOfFaceInfo(tmp);
}

 Standard_Integer OCBOP_IndexedDataMapOfEdgeListFaceInfo::FindIndex(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->FindIndex(*((TopoDS_Shape*)K->Handle));
}

OCBOP_ListOfFaceInfo^ OCBOP_IndexedDataMapOfEdgeListFaceInfo::FindFromKey(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BOP_ListOfFaceInfo* tmp = new BOP_ListOfFaceInfo();
  *tmp = ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->FindFromKey(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBOP_ListOfFaceInfo(tmp);
}

OCBOP_ListOfFaceInfo^ OCBOP_IndexedDataMapOfEdgeListFaceInfo::ChangeFromKey(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BOP_ListOfFaceInfo* tmp = new BOP_ListOfFaceInfo();
  *tmp = ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->ChangeFromKey(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBOP_ListOfFaceInfo(tmp);
}

 Standard_Address OCBOP_IndexedDataMapOfEdgeListFaceInfo::FindFromKey1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->FindFromKey1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCBOP_IndexedDataMapOfEdgeListFaceInfo::ChangeFromKey1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BOP_IndexedDataMapOfEdgeListFaceInfo*)nativeHandle)->ChangeFromKey1(*((TopoDS_Shape*)K->Handle));
}


