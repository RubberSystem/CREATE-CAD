// File generated by CPPExt (CPP file)
//

#include "BOP_IndexedDataMapOfVertexListEdgeInfo.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "BOP_ListOfEdgeInfo.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "BOP_IndexedDataMapNodeOfIndexedDataMapOfVertexListEdgeInfo.h"


using namespace OCNaroWrappers;

OCBOP_IndexedDataMapOfVertexListEdgeInfo::OCBOP_IndexedDataMapOfVertexListEdgeInfo(BOP_IndexedDataMapOfVertexListEdgeInfo* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBOP_IndexedDataMapOfVertexListEdgeInfo::OCBOP_IndexedDataMapOfVertexListEdgeInfo(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BOP_IndexedDataMapOfVertexListEdgeInfo(NbBuckets);
}

OCBOP_IndexedDataMapOfVertexListEdgeInfo^ OCBOP_IndexedDataMapOfVertexListEdgeInfo::Assign(OCNaroWrappers::OCBOP_IndexedDataMapOfVertexListEdgeInfo^ Other)
{
  BOP_IndexedDataMapOfVertexListEdgeInfo* tmp = new BOP_IndexedDataMapOfVertexListEdgeInfo(0);
  *tmp = ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->Assign(*((BOP_IndexedDataMapOfVertexListEdgeInfo*)Other->Handle));
  return gcnew OCBOP_IndexedDataMapOfVertexListEdgeInfo(tmp);
}

 void OCBOP_IndexedDataMapOfVertexListEdgeInfo::ReSize(Standard_Integer NbBuckets)
{
  ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCBOP_IndexedDataMapOfVertexListEdgeInfo::Add(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCBOP_ListOfEdgeInfo^ I)
{
  return ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->Add(*((TopoDS_Shape*)K->Handle), *((BOP_ListOfEdgeInfo*)I->Handle));
}

 void OCBOP_IndexedDataMapOfVertexListEdgeInfo::Substitute(Standard_Integer I, OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCBOP_ListOfEdgeInfo^ T)
{
  ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->Substitute(I, *((TopoDS_Shape*)K->Handle), *((BOP_ListOfEdgeInfo*)T->Handle));
}

 void OCBOP_IndexedDataMapOfVertexListEdgeInfo::RemoveLast()
{
  ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->RemoveLast();
}

 System::Boolean OCBOP_IndexedDataMapOfVertexListEdgeInfo::Contains(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->Contains(*((TopoDS_Shape*)K->Handle)));
}

OCTopoDS_Shape^ OCBOP_IndexedDataMapOfVertexListEdgeInfo::FindKey(Standard_Integer I)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->FindKey(I);
  return gcnew OCTopoDS_Shape(tmp);
}

OCBOP_ListOfEdgeInfo^ OCBOP_IndexedDataMapOfVertexListEdgeInfo::FindFromIndex(Standard_Integer I)
{
  BOP_ListOfEdgeInfo* tmp = new BOP_ListOfEdgeInfo();
  *tmp = ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->FindFromIndex(I);
  return gcnew OCBOP_ListOfEdgeInfo(tmp);
}

OCBOP_ListOfEdgeInfo^ OCBOP_IndexedDataMapOfVertexListEdgeInfo::ChangeFromIndex(Standard_Integer I)
{
  BOP_ListOfEdgeInfo* tmp = new BOP_ListOfEdgeInfo();
  *tmp = ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->ChangeFromIndex(I);
  return gcnew OCBOP_ListOfEdgeInfo(tmp);
}

 Standard_Integer OCBOP_IndexedDataMapOfVertexListEdgeInfo::FindIndex(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->FindIndex(*((TopoDS_Shape*)K->Handle));
}

OCBOP_ListOfEdgeInfo^ OCBOP_IndexedDataMapOfVertexListEdgeInfo::FindFromKey(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BOP_ListOfEdgeInfo* tmp = new BOP_ListOfEdgeInfo();
  *tmp = ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->FindFromKey(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBOP_ListOfEdgeInfo(tmp);
}

OCBOP_ListOfEdgeInfo^ OCBOP_IndexedDataMapOfVertexListEdgeInfo::ChangeFromKey(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BOP_ListOfEdgeInfo* tmp = new BOP_ListOfEdgeInfo();
  *tmp = ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->ChangeFromKey(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBOP_ListOfEdgeInfo(tmp);
}

 Standard_Address OCBOP_IndexedDataMapOfVertexListEdgeInfo::FindFromKey1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->FindFromKey1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCBOP_IndexedDataMapOfVertexListEdgeInfo::ChangeFromKey1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BOP_IndexedDataMapOfVertexListEdgeInfo*)nativeHandle)->ChangeFromKey1(*((TopoDS_Shape*)K->Handle));
}


