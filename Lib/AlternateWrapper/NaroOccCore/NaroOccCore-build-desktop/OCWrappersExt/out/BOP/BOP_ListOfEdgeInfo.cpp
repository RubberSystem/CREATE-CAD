// File generated by CPPExt (CPP file)
//

#include "BOP_ListOfEdgeInfo.h"
#include "../Converter.h"
#include "BOP_ListIteratorOfListOfEdgeInfo.h"
#include "BOP_EdgeInfo.h"
#include "BOP_ListNodeOfListOfEdgeInfo.h"


using namespace OCNaroWrappers;

OCBOP_ListOfEdgeInfo::OCBOP_ListOfEdgeInfo(BOP_ListOfEdgeInfo* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBOP_ListOfEdgeInfo::OCBOP_ListOfEdgeInfo() 
{
  nativeHandle = new BOP_ListOfEdgeInfo();
}

 void OCBOP_ListOfEdgeInfo::Assign(OCNaroWrappers::OCBOP_ListOfEdgeInfo^ Other)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->Assign(*((BOP_ListOfEdgeInfo*)Other->Handle));
}

 Standard_Integer OCBOP_ListOfEdgeInfo::Extent()
{
  return ((BOP_ListOfEdgeInfo*)nativeHandle)->Extent();
}

 System::Boolean OCBOP_ListOfEdgeInfo::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ListOfEdgeInfo*)nativeHandle)->IsEmpty());
}

 void OCBOP_ListOfEdgeInfo::Prepend(OCNaroWrappers::OCBOP_EdgeInfo^ I)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->Prepend(*((BOP_EdgeInfo*)I->Handle));
}

 void OCBOP_ListOfEdgeInfo::Prepend(OCNaroWrappers::OCBOP_EdgeInfo^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfEdgeInfo^ theIt)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->Prepend(*((BOP_EdgeInfo*)I->Handle), *((BOP_ListIteratorOfListOfEdgeInfo*)theIt->Handle));
}

 void OCBOP_ListOfEdgeInfo::Prepend(OCNaroWrappers::OCBOP_ListOfEdgeInfo^ Other)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->Prepend(*((BOP_ListOfEdgeInfo*)Other->Handle));
}

 void OCBOP_ListOfEdgeInfo::Append(OCNaroWrappers::OCBOP_EdgeInfo^ I)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->Append(*((BOP_EdgeInfo*)I->Handle));
}

 void OCBOP_ListOfEdgeInfo::Append(OCNaroWrappers::OCBOP_EdgeInfo^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfEdgeInfo^ theIt)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->Append(*((BOP_EdgeInfo*)I->Handle), *((BOP_ListIteratorOfListOfEdgeInfo*)theIt->Handle));
}

 void OCBOP_ListOfEdgeInfo::Append(OCNaroWrappers::OCBOP_ListOfEdgeInfo^ Other)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->Append(*((BOP_ListOfEdgeInfo*)Other->Handle));
}

OCBOP_EdgeInfo^ OCBOP_ListOfEdgeInfo::First()
{
  BOP_EdgeInfo* tmp = new BOP_EdgeInfo();
  *tmp = ((BOP_ListOfEdgeInfo*)nativeHandle)->First();
  return gcnew OCBOP_EdgeInfo(tmp);
}

OCBOP_EdgeInfo^ OCBOP_ListOfEdgeInfo::Last()
{
  BOP_EdgeInfo* tmp = new BOP_EdgeInfo();
  *tmp = ((BOP_ListOfEdgeInfo*)nativeHandle)->Last();
  return gcnew OCBOP_EdgeInfo(tmp);
}

 void OCBOP_ListOfEdgeInfo::RemoveFirst()
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->RemoveFirst();
}

 void OCBOP_ListOfEdgeInfo::Remove(OCNaroWrappers::OCBOP_ListIteratorOfListOfEdgeInfo^ It)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->Remove(*((BOP_ListIteratorOfListOfEdgeInfo*)It->Handle));
}

 void OCBOP_ListOfEdgeInfo::InsertBefore(OCNaroWrappers::OCBOP_EdgeInfo^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfEdgeInfo^ It)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->InsertBefore(*((BOP_EdgeInfo*)I->Handle), *((BOP_ListIteratorOfListOfEdgeInfo*)It->Handle));
}

 void OCBOP_ListOfEdgeInfo::InsertBefore(OCNaroWrappers::OCBOP_ListOfEdgeInfo^ Other, OCNaroWrappers::OCBOP_ListIteratorOfListOfEdgeInfo^ It)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->InsertBefore(*((BOP_ListOfEdgeInfo*)Other->Handle), *((BOP_ListIteratorOfListOfEdgeInfo*)It->Handle));
}

 void OCBOP_ListOfEdgeInfo::InsertAfter(OCNaroWrappers::OCBOP_EdgeInfo^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfEdgeInfo^ It)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->InsertAfter(*((BOP_EdgeInfo*)I->Handle), *((BOP_ListIteratorOfListOfEdgeInfo*)It->Handle));
}

 void OCBOP_ListOfEdgeInfo::InsertAfter(OCNaroWrappers::OCBOP_ListOfEdgeInfo^ Other, OCNaroWrappers::OCBOP_ListIteratorOfListOfEdgeInfo^ It)
{
  ((BOP_ListOfEdgeInfo*)nativeHandle)->InsertAfter(*((BOP_ListOfEdgeInfo*)Other->Handle), *((BOP_ListIteratorOfListOfEdgeInfo*)It->Handle));
}


