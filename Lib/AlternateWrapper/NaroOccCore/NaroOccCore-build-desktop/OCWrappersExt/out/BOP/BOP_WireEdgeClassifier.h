// File generated by CPPExt (MPV)
//
#ifndef _BOP_WireEdgeClassifier_OCWrappers_HeaderFile
#define _BOP_WireEdgeClassifier_OCWrappers_HeaderFile

// include native header
#include <BOP_WireEdgeClassifier.hxx>
#include "../Converter.h"

#include "BOP_CompositeClassifier.h"

#include "../gp/gp_Pnt2d.h"
#include "../BRepClass/BRepClass_Edge.h"
#include "../BRepClass/BRepClass_FacePassiveClassifier.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "BOP_CompositeClassifier.h"
#include "../TopAbs/TopAbs_State.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Face;
ref class OCBOP_BlockBuilder;
ref class OCBOP_Loop;
ref class OCTopoDS_Shape;



//! The  algorithm is to classify loops that <br>
//! shapes are Wires, Element are Edge. <br>
public ref class OCBOP_WireEdgeClassifier  : public OCBOP_CompositeClassifier {

protected:
  // dummy constructor;
  OCBOP_WireEdgeClassifier(OCDummy^) : OCBOP_CompositeClassifier((OCDummy^)nullptr) {};

public:

// constructor from native
OCBOP_WireEdgeClassifier(BOP_WireEdgeClassifier* nativeHandle);

// Methods PUBLIC


//! Creates a classifier on edge <F>. <br>
//! Used to compare edges and wires on the edge <F>. <br>
OCBOP_WireEdgeClassifier(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCBOP_BlockBuilder^ BB);


//! Classify loop <L1> with  <L2> <br>
virtual /*instead*/  OCTopAbs_State Compare(OCNaroWrappers::OCBOP_Loop^ L1, OCNaroWrappers::OCBOP_Loop^ L2) override;


//! Internal usage <br>
 /*instead*/  OCTopoDS_Shape^ LoopToShape(OCNaroWrappers::OCBOP_Loop^ L) ;


//! Classify wire <B1> with wire <B2> <br>
 /*instead*/  OCTopAbs_State CompareShapes(OCNaroWrappers::OCTopoDS_Shape^ B1, OCNaroWrappers::OCTopoDS_Shape^ B2) ;


//! Classify edge <E> with wire <W> <br>
 /*instead*/  OCTopAbs_State CompareElementToShape(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopoDS_Shape^ W) ;


//! Prepare classification involving wire <B> <br>
//! calls ResetElement on first edge of <B> <br>
 /*instead*/  void ResetShape(OCNaroWrappers::OCTopoDS_Shape^ B) ;


//! Prepare classification involving edge <E> <br>
//! define 2D point (later used in Compare()) <br>
//! on first vertex of edge <E>. <br>
 /*instead*/  void ResetElement(OCNaroWrappers::OCTopoDS_Shape^ E) ;


//! Add the edge <E> in the set of edges used in 2D point <br>
//! classification. <br>
 /*instead*/  void CompareElement(OCNaroWrappers::OCTopoDS_Shape^ E) ;


//! Returns state of classification of 2D point, defined by <br>
//! ResetElement, with the current set of edges, defined by Compare. <br>
 /*instead*/  OCTopAbs_State State() ;

~OCBOP_WireEdgeClassifier()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
