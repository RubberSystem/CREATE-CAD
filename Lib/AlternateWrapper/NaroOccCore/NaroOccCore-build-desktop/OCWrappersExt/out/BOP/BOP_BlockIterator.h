// File generated by CPPExt (MPV)
//
#ifndef _BOP_BlockIterator_OCWrappers_HeaderFile
#define _BOP_BlockIterator_OCWrappers_HeaderFile

// include native header
#include <BOP_BlockIterator.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{




public ref class OCBOP_BlockIterator  {

protected:
  BOP_BlockIterator* nativeHandle;
  OCBOP_BlockIterator(OCDummy^) {};

public:
  property BOP_BlockIterator* Handle
  {
    BOP_BlockIterator* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBOP_BlockIterator(BOP_BlockIterator* nativeHandle);

// Methods PUBLIC


//! Empty  Constructor <br>
OCBOP_BlockIterator();


//! Creates an object with initial range <br>
//! of  [Lower,Upper] <br>
OCBOP_BlockIterator(Standard_Integer Lower, Standard_Integer Upper);


//! Initialize an object with initial range <br>
//! of  [Lower,Upper] <br>
 /*instead*/  void Initialize() ;


//! Support of Iteration <br>
 /*instead*/  System::Boolean More() ;


//! Support of Iteration <br>
 /*instead*/  void Next() ;


//! Support of Iteration <br>
 /*instead*/  Standard_Integer Value() ;


//! Returns the extension=myUpper - myLower + 1; <br>
 /*instead*/  Standard_Integer Extent() ;

~OCBOP_BlockIterator()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
