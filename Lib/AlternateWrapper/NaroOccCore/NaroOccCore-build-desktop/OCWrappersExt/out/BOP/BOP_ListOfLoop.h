// File generated by CPPExt (MPV)
//
#ifndef _BOP_ListOfLoop_OCWrappers_HeaderFile
#define _BOP_ListOfLoop_OCWrappers_HeaderFile

// include native header
#include <BOP_ListOfLoop.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCBOP_ListIteratorOfListOfLoop;
ref class OCBOP_Loop;
ref class OCBOP_ListNodeOfListOfLoop;



public ref class OCBOP_ListOfLoop  {

protected:
  BOP_ListOfLoop* nativeHandle;
  OCBOP_ListOfLoop(OCDummy^) {};

public:
  property BOP_ListOfLoop* Handle
  {
    BOP_ListOfLoop* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBOP_ListOfLoop(BOP_ListOfLoop* nativeHandle);

// Methods PUBLIC


OCBOP_ListOfLoop();


 /*instead*/  void Assign(OCNaroWrappers::OCBOP_ListOfLoop^ Other) ;


 /*instead*/  Standard_Integer Extent() ;


 /*instead*/  System::Boolean IsEmpty() ;


 /*instead*/  void Prepend(OCNaroWrappers::OCBOP_Loop^ I) ;


 /*instead*/  void Prepend(OCNaroWrappers::OCBOP_Loop^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ theIt) ;


 /*instead*/  void Prepend(OCNaroWrappers::OCBOP_ListOfLoop^ Other) ;


 /*instead*/  void Append(OCNaroWrappers::OCBOP_Loop^ I) ;


 /*instead*/  void Append(OCNaroWrappers::OCBOP_Loop^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ theIt) ;


 /*instead*/  void Append(OCNaroWrappers::OCBOP_ListOfLoop^ Other) ;


 /*instead*/  OCBOP_Loop^ First() ;


 /*instead*/  OCBOP_Loop^ Last() ;


 /*instead*/  void RemoveFirst() ;


 /*instead*/  void Remove(OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It) ;


 /*instead*/  void InsertBefore(OCNaroWrappers::OCBOP_Loop^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It) ;


 /*instead*/  void InsertBefore(OCNaroWrappers::OCBOP_ListOfLoop^ Other, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It) ;


 /*instead*/  void InsertAfter(OCNaroWrappers::OCBOP_Loop^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It) ;


 /*instead*/  void InsertAfter(OCNaroWrappers::OCBOP_ListOfLoop^ Other, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It) ;

~OCBOP_ListOfLoop()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
