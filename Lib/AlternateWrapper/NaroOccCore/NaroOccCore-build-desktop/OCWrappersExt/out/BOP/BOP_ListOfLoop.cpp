// File generated by CPPExt (CPP file)
//

#include "BOP_ListOfLoop.h"
#include "../Converter.h"
#include "BOP_ListIteratorOfListOfLoop.h"
#include "BOP_Loop.h"
#include "BOP_ListNodeOfListOfLoop.h"


using namespace OCNaroWrappers;

OCBOP_ListOfLoop::OCBOP_ListOfLoop(BOP_ListOfLoop* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBOP_ListOfLoop::OCBOP_ListOfLoop() 
{
  nativeHandle = new BOP_ListOfLoop();
}

 void OCBOP_ListOfLoop::Assign(OCNaroWrappers::OCBOP_ListOfLoop^ Other)
{
  ((BOP_ListOfLoop*)nativeHandle)->Assign(*((BOP_ListOfLoop*)Other->Handle));
}

 Standard_Integer OCBOP_ListOfLoop::Extent()
{
  return ((BOP_ListOfLoop*)nativeHandle)->Extent();
}

 System::Boolean OCBOP_ListOfLoop::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ListOfLoop*)nativeHandle)->IsEmpty());
}

 void OCBOP_ListOfLoop::Prepend(OCNaroWrappers::OCBOP_Loop^ I)
{
  ((BOP_ListOfLoop*)nativeHandle)->Prepend(*((Handle_BOP_Loop*)I->Handle));
}

 void OCBOP_ListOfLoop::Prepend(OCNaroWrappers::OCBOP_Loop^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ theIt)
{
  ((BOP_ListOfLoop*)nativeHandle)->Prepend(*((Handle_BOP_Loop*)I->Handle), *((BOP_ListIteratorOfListOfLoop*)theIt->Handle));
}

 void OCBOP_ListOfLoop::Prepend(OCNaroWrappers::OCBOP_ListOfLoop^ Other)
{
  ((BOP_ListOfLoop*)nativeHandle)->Prepend(*((BOP_ListOfLoop*)Other->Handle));
}

 void OCBOP_ListOfLoop::Append(OCNaroWrappers::OCBOP_Loop^ I)
{
  ((BOP_ListOfLoop*)nativeHandle)->Append(*((Handle_BOP_Loop*)I->Handle));
}

 void OCBOP_ListOfLoop::Append(OCNaroWrappers::OCBOP_Loop^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ theIt)
{
  ((BOP_ListOfLoop*)nativeHandle)->Append(*((Handle_BOP_Loop*)I->Handle), *((BOP_ListIteratorOfListOfLoop*)theIt->Handle));
}

 void OCBOP_ListOfLoop::Append(OCNaroWrappers::OCBOP_ListOfLoop^ Other)
{
  ((BOP_ListOfLoop*)nativeHandle)->Append(*((BOP_ListOfLoop*)Other->Handle));
}

OCBOP_Loop^ OCBOP_ListOfLoop::First()
{
  Handle(BOP_Loop) tmp = ((BOP_ListOfLoop*)nativeHandle)->First();
  return gcnew OCBOP_Loop(&tmp);
}

OCBOP_Loop^ OCBOP_ListOfLoop::Last()
{
  Handle(BOP_Loop) tmp = ((BOP_ListOfLoop*)nativeHandle)->Last();
  return gcnew OCBOP_Loop(&tmp);
}

 void OCBOP_ListOfLoop::RemoveFirst()
{
  ((BOP_ListOfLoop*)nativeHandle)->RemoveFirst();
}

 void OCBOP_ListOfLoop::Remove(OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It)
{
  ((BOP_ListOfLoop*)nativeHandle)->Remove(*((BOP_ListIteratorOfListOfLoop*)It->Handle));
}

 void OCBOP_ListOfLoop::InsertBefore(OCNaroWrappers::OCBOP_Loop^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It)
{
  ((BOP_ListOfLoop*)nativeHandle)->InsertBefore(*((Handle_BOP_Loop*)I->Handle), *((BOP_ListIteratorOfListOfLoop*)It->Handle));
}

 void OCBOP_ListOfLoop::InsertBefore(OCNaroWrappers::OCBOP_ListOfLoop^ Other, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It)
{
  ((BOP_ListOfLoop*)nativeHandle)->InsertBefore(*((BOP_ListOfLoop*)Other->Handle), *((BOP_ListIteratorOfListOfLoop*)It->Handle));
}

 void OCBOP_ListOfLoop::InsertAfter(OCNaroWrappers::OCBOP_Loop^ I, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It)
{
  ((BOP_ListOfLoop*)nativeHandle)->InsertAfter(*((Handle_BOP_Loop*)I->Handle), *((BOP_ListIteratorOfListOfLoop*)It->Handle));
}

 void OCBOP_ListOfLoop::InsertAfter(OCNaroWrappers::OCBOP_ListOfLoop^ Other, OCNaroWrappers::OCBOP_ListIteratorOfListOfLoop^ It)
{
  ((BOP_ListOfLoop*)nativeHandle)->InsertAfter(*((BOP_ListOfLoop*)Other->Handle), *((BOP_ListIteratorOfListOfLoop*)It->Handle));
}


