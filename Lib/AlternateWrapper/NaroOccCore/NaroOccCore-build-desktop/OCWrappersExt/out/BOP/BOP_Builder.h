// File generated by CPPExt (MPV)
//
#ifndef _BOP_Builder_OCWrappers_HeaderFile
#define _BOP_Builder_OCWrappers_HeaderFile

// include native header
#include <BOP_Builder.hxx>
#include "../Converter.h"


#include "../TopoDS/TopoDS_Shape.h"
#include "BOP_Operation.h"
#include "../TopTools/TopTools_IndexedMapOfShape.h"
#include "../TopTools/TopTools_IndexedDataMapOfShapeListOfShape.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "../TopAbs/TopAbs_ShapeEnum.h"


namespace OCNaroWrappers
{

ref class OCBOP_HistoryCollector;
ref class OCTopoDS_Shape;
ref class OCBOPTools_DSFiller;
ref class OCTopTools_ListOfShape;



public ref class OCBOP_Builder  {

protected:
  BOP_Builder* nativeHandle;
  OCBOP_Builder(OCDummy^) {};

public:
  property BOP_Builder* Handle
  {
    BOP_Builder* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBOP_Builder(BOP_Builder* nativeHandle);

// Methods PUBLIC


//! Empty constructor; <br>
//! <br>
OCBOP_Builder();


//!  Set shapes (arguments) to perform BO <br>
 /*instead*/  void SetShapes(OCNaroWrappers::OCTopoDS_Shape^ aS1, OCNaroWrappers::OCTopoDS_Shape^ aS2) ;


//!  Set type of the BO to perform <br>
//! <br>
 /*instead*/  void SetOperation(OCBOP_Operation anOp) ;

//! Set the flag to allow the result <br>
//!          be manifold or non-manifold (not used) <br>
 /*instead*/  void SetManifoldFlag(System::Boolean aFlag) ;


//!  Selector <br>
 /*instead*/  OCTopoDS_Shape^ Shape1() ;


//!  Selector <br>
 /*instead*/  OCTopoDS_Shape^ Shape2() ;


//!  Selector <br>
//! <br>
 /*instead*/  OCBOP_Operation Operation() ;


//!  Selector <br>
//! <br>
 /*instead*/  System::Boolean ManifoldFlag() ;


//!	Selector <br>
//! <br>
 /*instead*/  System::Boolean IsDone() ;


//!  Selector <br>
 /*instead*/  Standard_Integer ErrorStatus() ;


//!  Returns the result of the BO <br>
//! <br>
 /*instead*/  OCTopoDS_Shape^ Result() ;


//!           Does the BO from the beggining to the end, <br>
//!           i.e.  create new DataStructure, DSFiller, <br>
//!           compute all  interferences, compute states, <br>
//!           build result etc <br>
virtual /*instead*/  void Do() ;


//!  Does the BO using existing Filler to the end <br>
//! <br>
virtual /*instead*/  void DoWithFiller(OCNaroWrappers::OCBOPTools_DSFiller^ aDSF) ;


//!  Constructs the final result of the BO <br>
//! <br>
virtual /*instead*/  void BuildResult() ;


//!  Destructor <br>
//! <br>
virtual /*instead*/  void Destroy() ;


//!  Sort types of shapes as integers in increasing order <br>
//! <br>
static /*instead*/  void SortTypes(OCTopAbs_ShapeEnum& aType1, OCTopAbs_ShapeEnum& aType2) ;


//! Returns the list  of shapes modified from the shape aS <br>
//! <br>
 /*instead*/  OCTopTools_ListOfShape^ Modified(OCNaroWrappers::OCTopoDS_Shape^ aS) ;


//! Returns TRUE if the result does  not contain the shape aS <br>
//! <br>
 /*instead*/  System::Boolean IsDeleted(OCNaroWrappers::OCTopoDS_Shape^ aS) ;


//! Returns the list of shapes that are parts of BO "Section" <br>
//! for  given arguments. <br>
//! For Internal usage <br>
//! <br>
 /*instead*/  OCTopTools_ListOfShape^ SectionEdges() ;


virtual /*instead*/  void SetHistoryCollector(OCNaroWrappers::OCBOP_HistoryCollector^ theHistory) ;


 /*instead*/  OCBOP_HistoryCollector^ GetHistoryCollector() ;

~OCBOP_Builder()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
