// File generated by CPPExt (CPP file)
//

#include "BOP_ArgumentAnalyzer.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "BOP_ListOfCheckResult.h"


using namespace OCNaroWrappers;

OCBOP_ArgumentAnalyzer::OCBOP_ArgumentAnalyzer(BOP_ArgumentAnalyzer* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBOP_ArgumentAnalyzer::OCBOP_ArgumentAnalyzer() 
{
  nativeHandle = new BOP_ArgumentAnalyzer();
}

 void OCBOP_ArgumentAnalyzer::SetShape1(OCNaroWrappers::OCTopoDS_Shape^ TheShape)
{
  ((BOP_ArgumentAnalyzer*)nativeHandle)->SetShape1(*((TopoDS_Shape*)TheShape->Handle));
}

 void OCBOP_ArgumentAnalyzer::SetShape2(OCNaroWrappers::OCTopoDS_Shape^ TheShape)
{
  ((BOP_ArgumentAnalyzer*)nativeHandle)->SetShape2(*((TopoDS_Shape*)TheShape->Handle));
}

OCTopoDS_Shape^ OCBOP_ArgumentAnalyzer::GetShape1()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BOP_ArgumentAnalyzer*)nativeHandle)->GetShape1();
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCBOP_ArgumentAnalyzer::GetShape2()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BOP_ArgumentAnalyzer*)nativeHandle)->GetShape2();
  return gcnew OCTopoDS_Shape(tmp);
}

 OCBOP_Operation OCBOP_ArgumentAnalyzer::OperationType()
{
  return (OCBOP_Operation)(((BOP_ArgumentAnalyzer*)nativeHandle)->OperationType());
}

 System::Boolean OCBOP_ArgumentAnalyzer::StopOnFirstFaulty()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ArgumentAnalyzer*)nativeHandle)->StopOnFirstFaulty());
}

 System::Boolean OCBOP_ArgumentAnalyzer::ArgumentTypeMode()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ArgumentAnalyzer*)nativeHandle)->ArgumentTypeMode());
}

 System::Boolean OCBOP_ArgumentAnalyzer::SelfInterMode()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ArgumentAnalyzer*)nativeHandle)->SelfInterMode());
}

 System::Boolean OCBOP_ArgumentAnalyzer::SmallEdgeMode()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ArgumentAnalyzer*)nativeHandle)->SmallEdgeMode());
}

 System::Boolean OCBOP_ArgumentAnalyzer::RebuildFaceMode()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ArgumentAnalyzer*)nativeHandle)->RebuildFaceMode());
}

 System::Boolean OCBOP_ArgumentAnalyzer::TangentMode()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ArgumentAnalyzer*)nativeHandle)->TangentMode());
}

 System::Boolean OCBOP_ArgumentAnalyzer::MergeVertexMode()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ArgumentAnalyzer*)nativeHandle)->MergeVertexMode());
}

 System::Boolean OCBOP_ArgumentAnalyzer::MergeEdgeMode()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ArgumentAnalyzer*)nativeHandle)->MergeEdgeMode());
}

 void OCBOP_ArgumentAnalyzer::Perform()
{
  ((BOP_ArgumentAnalyzer*)nativeHandle)->Perform();
}

 System::Boolean OCBOP_ArgumentAnalyzer::HasFaulty()
{
  return OCConverter::StandardBooleanToBoolean(((BOP_ArgumentAnalyzer*)nativeHandle)->HasFaulty());
}

OCBOP_ListOfCheckResult^ OCBOP_ArgumentAnalyzer::GetCheckResult()
{
  BOP_ListOfCheckResult* tmp = new BOP_ListOfCheckResult();
  *tmp = ((BOP_ArgumentAnalyzer*)nativeHandle)->GetCheckResult();
  return gcnew OCBOP_ListOfCheckResult(tmp);
}


