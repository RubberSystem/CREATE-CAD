// File generated by CPPExt (CPP file)
//

#include "MeshVS_DataSource3D.h"
#include "../Converter.h"
#include "MeshVS_HArray1OfSequenceOfInteger.h"


using namespace OCNaroWrappers;

OCMeshVS_DataSource3D::OCMeshVS_DataSource3D(Handle(MeshVS_DataSource3D)* nativeHandle) : OCMeshVS_DataSource((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MeshVS_DataSource3D(*nativeHandle);
}

OCMeshVS_HArray1OfSequenceOfInteger^ OCMeshVS_DataSource3D::GetPrismTopology(Standard_Integer BasePoints)
{
  Handle(MeshVS_HArray1OfSequenceOfInteger) tmp = (*((Handle_MeshVS_DataSource3D*)nativeHandle))->GetPrismTopology(BasePoints);
  return gcnew OCMeshVS_HArray1OfSequenceOfInteger(&tmp);
}

OCMeshVS_HArray1OfSequenceOfInteger^ OCMeshVS_DataSource3D::GetPyramidTopology(Standard_Integer BasePoints)
{
  Handle(MeshVS_HArray1OfSequenceOfInteger) tmp = (*((Handle_MeshVS_DataSource3D*)nativeHandle))->GetPyramidTopology(BasePoints);
  return gcnew OCMeshVS_HArray1OfSequenceOfInteger(&tmp);
}

OCMeshVS_HArray1OfSequenceOfInteger^ OCMeshVS_DataSource3D::CreatePrismTopology(Standard_Integer BasePoints)
{
  Handle(MeshVS_HArray1OfSequenceOfInteger) tmp = MeshVS_DataSource3D::CreatePrismTopology(BasePoints);
  return gcnew OCMeshVS_HArray1OfSequenceOfInteger(&tmp);
}

OCMeshVS_HArray1OfSequenceOfInteger^ OCMeshVS_DataSource3D::CreatePyramidTopology(Standard_Integer BasePoints)
{
  Handle(MeshVS_HArray1OfSequenceOfInteger) tmp = MeshVS_DataSource3D::CreatePyramidTopology(BasePoints);
  return gcnew OCMeshVS_HArray1OfSequenceOfInteger(&tmp);
}


