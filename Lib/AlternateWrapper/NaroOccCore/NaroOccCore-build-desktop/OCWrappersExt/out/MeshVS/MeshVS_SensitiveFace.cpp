// File generated by CPPExt (CPP file)
//

#include "MeshVS_SensitiveFace.h"
#include "../Converter.h"
#include "../SelectBasics/SelectBasics_EntityOwner.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../Select3D/Select3D_Projector.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../Bnd/Bnd_Box2d.h"


using namespace OCNaroWrappers;

OCMeshVS_SensitiveFace::OCMeshVS_SensitiveFace(Handle(MeshVS_SensitiveFace)* nativeHandle) : OCSelect3D_SensitiveFace((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MeshVS_SensitiveFace(*nativeHandle);
}

OCMeshVS_SensitiveFace::OCMeshVS_SensitiveFace(OCNaroWrappers::OCSelectBasics_EntityOwner^ theOwner, OCNaroWrappers::OCTColgp_Array1OfPnt^ thePoints, OCSelect3D_TypeOfSensitivity theSensType) : OCSelect3D_SensitiveFace((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MeshVS_SensitiveFace(new MeshVS_SensitiveFace(*((Handle_SelectBasics_EntityOwner*)theOwner->Handle), *((TColgp_Array1OfPnt*)thePoints->Handle), (Select3D_TypeOfSensitivity)theSensType));
}

 void OCMeshVS_SensitiveFace::Project(OCNaroWrappers::OCSelect3D_Projector^ aProjector)
{
  (*((Handle_MeshVS_SensitiveFace*)nativeHandle))->Project(*((Handle_Select3D_Projector*)aProjector->Handle));
}

 System::Boolean OCMeshVS_SensitiveFace::Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MeshVS_SensitiveFace*)nativeHandle))->Matches(XMin, YMin, XMax, YMax, aTol));
}

 System::Boolean OCMeshVS_SensitiveFace::Matches(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCBnd_Box2d^ aBox, Standard_Real aTol)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MeshVS_SensitiveFace*)nativeHandle))->Matches(*((TColgp_Array1OfPnt2d*)Polyline->Handle), *((Bnd_Box2d*)aBox->Handle), aTol));
}


