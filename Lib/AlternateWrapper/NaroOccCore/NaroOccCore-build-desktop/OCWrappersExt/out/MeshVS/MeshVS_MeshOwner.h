// File generated by CPPExt (Transient)
//
#ifndef _MeshVS_MeshOwner_OCWrappers_HeaderFile
#define _MeshVS_MeshOwner_OCWrappers_HeaderFile

// include the wrapped class
#include <MeshVS_MeshOwner.hxx>
#include "../Converter.h"

#include "../SelectMgr/SelectMgr_EntityOwner.h"

#include "../Quantity/Quantity_NameOfColor.h"


namespace OCNaroWrappers
{

ref class OCMeshVS_DataSource;
ref class OCTColStd_HPackedMapOfInteger;
ref class OCPrsMgr_PresentationManager3d;
ref class OCPrsMgr_PresentationManager;


//! The custom mesh owner used for advanced mesh selection. This class provides methods to store information: <br>
//! 1) IDs of hilighted mesh nodes and elements <br>
//! 2) IDs of mesh nodes and elements selected on the mesh <br>
public ref class OCMeshVS_MeshOwner : OCSelectMgr_EntityOwner {

protected:
  // dummy constructor;
  OCMeshVS_MeshOwner(OCDummy^) : OCSelectMgr_EntityOwner((OCDummy^)nullptr) {};

public:

// constructor from native
OCMeshVS_MeshOwner(Handle(MeshVS_MeshOwner)* nativeHandle);

// Methods PUBLIC


OCMeshVS_MeshOwner(SelectMgr_SOPtr theSelObj, OCNaroWrappers::OCMeshVS_DataSource^ theDS, Standard_Integer thePriority);


 /*instead*/  OCMeshVS_DataSource^ GetDataSource() ;

//! Returns ids of selected mesh nodes <br>
 /*instead*/  OCTColStd_HPackedMapOfInteger^ GetSelectedNodes() ;

//! Returns ids of selected mesh elements <br>
 /*instead*/  OCTColStd_HPackedMapOfInteger^ GetSelectedElements() ;

//! Saves ids of selected mesh entities <br>
virtual /*instead*/  void AddSelectedEntities(OCNaroWrappers::OCTColStd_HPackedMapOfInteger^ Nodes, OCNaroWrappers::OCTColStd_HPackedMapOfInteger^ Elems) ;

//! Clears ids of selected mesh entities <br>
virtual /*instead*/  void ClearSelectedEntities() ;

//! Returns ids of hilighted mesh nodes <br>
 /*instead*/  OCTColStd_HPackedMapOfInteger^ GetDetectedNodes() ;

//! Returns ids of hilighted mesh elements <br>
 /*instead*/  OCTColStd_HPackedMapOfInteger^ GetDetectedElements() ;

//! Saves ids of hilighted mesh entities <br>
 /*instead*/  void SetDetectedEntities(OCNaroWrappers::OCTColStd_HPackedMapOfInteger^ Nodes, OCNaroWrappers::OCTColStd_HPackedMapOfInteger^ Elems) ;


virtual /*instead*/  void HilightWithColor(OCNaroWrappers::OCPrsMgr_PresentationManager3d^ PM, OCQuantity_NameOfColor theColor, Standard_Integer Mode) override;


virtual /*instead*/  void Unhilight(OCNaroWrappers::OCPrsMgr_PresentationManager^ PM, Standard_Integer Mode) override;


virtual /*instead*/  System::Boolean IsForcedHilight() override;

~OCMeshVS_MeshOwner()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
