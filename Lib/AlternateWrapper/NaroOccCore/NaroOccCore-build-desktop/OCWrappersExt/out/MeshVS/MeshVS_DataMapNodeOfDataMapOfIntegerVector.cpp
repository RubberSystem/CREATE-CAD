// File generated by CPPExt (CPP file)
//

#include "MeshVS_DataMapNodeOfDataMapOfIntegerVector.h"
#include "../Converter.h"
#include "../gp/gp_Vec.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MeshVS_DataMapOfIntegerVector.h"
#include "MeshVS_DataMapIteratorOfDataMapOfIntegerVector.h"


using namespace OCNaroWrappers;

OCMeshVS_DataMapNodeOfDataMapOfIntegerVector::OCMeshVS_DataMapNodeOfDataMapOfIntegerVector(Handle(MeshVS_DataMapNodeOfDataMapOfIntegerVector)* nativeHandle) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MeshVS_DataMapNodeOfDataMapOfIntegerVector(*nativeHandle);
}

OCMeshVS_DataMapNodeOfDataMapOfIntegerVector::OCMeshVS_DataMapNodeOfDataMapOfIntegerVector(Standard_Integer K, OCNaroWrappers::OCgp_Vec^ I, TCollection_MapNodePtr n) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MeshVS_DataMapNodeOfDataMapOfIntegerVector(new MeshVS_DataMapNodeOfDataMapOfIntegerVector(K, *((gp_Vec*)I->Handle), n));
}

 Standard_Integer OCMeshVS_DataMapNodeOfDataMapOfIntegerVector::Key()
{
  return (*((Handle_MeshVS_DataMapNodeOfDataMapOfIntegerVector*)nativeHandle))->Key();
}

OCgp_Vec^ OCMeshVS_DataMapNodeOfDataMapOfIntegerVector::Value()
{
  gp_Vec* tmp = new gp_Vec();
  *tmp = (*((Handle_MeshVS_DataMapNodeOfDataMapOfIntegerVector*)nativeHandle))->Value();
  return gcnew OCgp_Vec(tmp);
}


