// File generated by CPPExt (CPP file)
//

#include "MeshVS_DataMapOfIntegerMaterial.h"
#include "../Converter.h"
#include "../Graphic3d/Graphic3d_MaterialAspect.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MeshVS_DataMapNodeOfDataMapOfIntegerMaterial.h"
#include "MeshVS_DataMapIteratorOfDataMapOfIntegerMaterial.h"


using namespace OCNaroWrappers;

OCMeshVS_DataMapOfIntegerMaterial::OCMeshVS_DataMapOfIntegerMaterial(MeshVS_DataMapOfIntegerMaterial* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMeshVS_DataMapOfIntegerMaterial::OCMeshVS_DataMapOfIntegerMaterial(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MeshVS_DataMapOfIntegerMaterial(NbBuckets);
}

OCMeshVS_DataMapOfIntegerMaterial^ OCMeshVS_DataMapOfIntegerMaterial::Assign(OCNaroWrappers::OCMeshVS_DataMapOfIntegerMaterial^ Other)
{
  MeshVS_DataMapOfIntegerMaterial* tmp = new MeshVS_DataMapOfIntegerMaterial(0);
  *tmp = ((MeshVS_DataMapOfIntegerMaterial*)nativeHandle)->Assign(*((MeshVS_DataMapOfIntegerMaterial*)Other->Handle));
  return gcnew OCMeshVS_DataMapOfIntegerMaterial(tmp);
}

 void OCMeshVS_DataMapOfIntegerMaterial::ReSize(Standard_Integer NbBuckets)
{
  ((MeshVS_DataMapOfIntegerMaterial*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMeshVS_DataMapOfIntegerMaterial::Bind(Standard_Integer K, OCNaroWrappers::OCGraphic3d_MaterialAspect^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfIntegerMaterial*)nativeHandle)->Bind(K, *((Graphic3d_MaterialAspect*)I->Handle)));
}

 System::Boolean OCMeshVS_DataMapOfIntegerMaterial::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfIntegerMaterial*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMeshVS_DataMapOfIntegerMaterial::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfIntegerMaterial*)nativeHandle)->UnBind(K));
}

OCGraphic3d_MaterialAspect^ OCMeshVS_DataMapOfIntegerMaterial::Find(Standard_Integer K)
{
  Graphic3d_MaterialAspect* tmp = new Graphic3d_MaterialAspect();
  *tmp = ((MeshVS_DataMapOfIntegerMaterial*)nativeHandle)->Find(K);
  return gcnew OCGraphic3d_MaterialAspect(tmp);
}

OCGraphic3d_MaterialAspect^ OCMeshVS_DataMapOfIntegerMaterial::ChangeFind(Standard_Integer K)
{
  Graphic3d_MaterialAspect* tmp = new Graphic3d_MaterialAspect();
  *tmp = ((MeshVS_DataMapOfIntegerMaterial*)nativeHandle)->ChangeFind(K);
  return gcnew OCGraphic3d_MaterialAspect(tmp);
}

 Standard_Address OCMeshVS_DataMapOfIntegerMaterial::Find1(Standard_Integer K)
{
  return ((MeshVS_DataMapOfIntegerMaterial*)nativeHandle)->Find1(K);
}

 Standard_Address OCMeshVS_DataMapOfIntegerMaterial::ChangeFind1(Standard_Integer K)
{
  return ((MeshVS_DataMapOfIntegerMaterial*)nativeHandle)->ChangeFind1(K);
}


