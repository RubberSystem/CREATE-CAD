// File generated by CPPExt (MPV)
//
#ifndef _MeshVS_DataMapOfIntegerTwoColors_OCWrappers_HeaderFile
#define _MeshVS_DataMapOfIntegerTwoColors_OCWrappers_HeaderFile

// include native header
#include <MeshVS_DataMapOfIntegerTwoColors.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTColStd_MapIntegerHasher;
ref class OCMeshVS_DataMapNodeOfDataMapOfIntegerTwoColors;
ref class OCMeshVS_DataMapIteratorOfDataMapOfIntegerTwoColors;



public ref class OCMeshVS_DataMapOfIntegerTwoColors  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCMeshVS_DataMapOfIntegerTwoColors(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCMeshVS_DataMapOfIntegerTwoColors(MeshVS_DataMapOfIntegerTwoColors* nativeHandle);

// Methods PUBLIC


OCMeshVS_DataMapOfIntegerTwoColors(Standard_Integer NbBuckets);


 /*instead*/  OCMeshVS_DataMapOfIntegerTwoColors^ Assign(OCNaroWrappers::OCMeshVS_DataMapOfIntegerTwoColors^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(Standard_Integer K, MeshVS_TwoColors I) ;


 /*instead*/  System::Boolean IsBound(Standard_Integer K) ;


 /*instead*/  System::Boolean UnBind(Standard_Integer K) ;


 /*instead*/  MeshVS_TwoColors& Find(Standard_Integer K) ;


 /*instead*/  MeshVS_TwoColors& ChangeFind(Standard_Integer K) ;


 /*instead*/  Standard_Address Find1(Standard_Integer K) ;


 /*instead*/  Standard_Address ChangeFind1(Standard_Integer K) ;

~OCMeshVS_DataMapOfIntegerTwoColors()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
