// File generated by CPPExt (Transient)
//
#ifndef _MeshVS_SensitiveFace_OCWrappers_HeaderFile
#define _MeshVS_SensitiveFace_OCWrappers_HeaderFile

// include the wrapped class
#include <MeshVS_SensitiveFace.hxx>
#include "../Converter.h"

#include "../Select3D/Select3D_SensitiveFace.h"

#include "../gp/gp_Pnt.h"
#include "../gp/gp_Pnt2d.h"
#include "../Select3D/Select3D_TypeOfSensitivity.h"


namespace OCNaroWrappers
{

ref class OCSelectBasics_EntityOwner;
ref class OCTColgp_Array1OfPnt;
ref class OCSelect3D_Projector;
ref class OCTColgp_Array1OfPnt2d;
ref class OCBnd_Box2d;


//! This class provides custom sensitive face, which will be selected if it center is in rectangle. <br>
public ref class OCMeshVS_SensitiveFace : OCSelect3D_SensitiveFace {

protected:
  // dummy constructor;
  OCMeshVS_SensitiveFace(OCDummy^) : OCSelect3D_SensitiveFace((OCDummy^)nullptr) {};

public:

// constructor from native
OCMeshVS_SensitiveFace(Handle(MeshVS_SensitiveFace)* nativeHandle);

// Methods PUBLIC


OCMeshVS_SensitiveFace(OCNaroWrappers::OCSelectBasics_EntityOwner^ theOwner, OCNaroWrappers::OCTColgp_Array1OfPnt^ thePoints, OCSelect3D_TypeOfSensitivity theSensType);


virtual /*instead*/  void Project(OCNaroWrappers::OCSelect3D_Projector^ aProjector) override;


virtual /*instead*/  System::Boolean Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol) override;


virtual /*instead*/  System::Boolean Matches(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCBnd_Box2d^ aBox, Standard_Real aTol) override;

~OCMeshVS_SensitiveFace()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
