// File generated by CPPExt (Transient)
//
#ifndef _MeshVS_SensitiveMesh_OCWrappers_HeaderFile
#define _MeshVS_SensitiveMesh_OCWrappers_HeaderFile

// include the wrapped class
#include <MeshVS_SensitiveMesh.hxx>
#include "../Converter.h"

#include "../Select3D/Select3D_SensitiveEntity.h"

#include "../Bnd/Bnd_Box.h"
#include "../Bnd/Bnd_Box2d.h"


namespace OCNaroWrappers
{

ref class OCSelectBasics_EntityOwner;
ref class OCSelect3D_SensitiveEntity;
ref class OCTopLoc_Location;
ref class OCgp_Lin;
ref class OCTColgp_Array1OfPnt2d;
ref class OCBnd_Box2d;
ref class OCSelect3D_Projector;
ref class OCSelectBasics_ListOfBox2d;


//! This class provides custom mesh sensitive entity used in advanced mesh selection. <br>
public ref class OCMeshVS_SensitiveMesh : OCSelect3D_SensitiveEntity {

protected:
  // dummy constructor;
  OCMeshVS_SensitiveMesh(OCDummy^) : OCSelect3D_SensitiveEntity((OCDummy^)nullptr) {};

public:

// constructor from native
OCMeshVS_SensitiveMesh(Handle(MeshVS_SensitiveMesh)* nativeHandle);

// Methods PUBLIC


OCMeshVS_SensitiveMesh(OCNaroWrappers::OCSelectBasics_EntityOwner^ theOwner, Standard_Integer theMode);


 /*instead*/  Standard_Integer GetMode() ;


virtual /*instead*/  OCSelect3D_SensitiveEntity^ GetConnected(OCNaroWrappers::OCTopLoc_Location^ aLocation) override;


virtual /*instead*/  Standard_Real ComputeDepth(OCNaroWrappers::OCgp_Lin^ EyeLine) ;


virtual /*instead*/  System::Boolean Matches(Standard_Real X, Standard_Real Y, Standard_Real aTol, Standard_Real& DMin) override;


virtual /*instead*/  System::Boolean Matches(Standard_Real XMin, Standard_Real YMin, Standard_Real XMax, Standard_Real YMax, Standard_Real aTol) override;


virtual /*instead*/  System::Boolean Matches(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Polyline, OCNaroWrappers::OCBnd_Box2d^ aBox, Standard_Real aTol) override;


virtual /*instead*/  void Project(OCNaroWrappers::OCSelect3D_Projector^ aProjector) override;


virtual /*instead*/  void Areas(OCNaroWrappers::OCSelectBasics_ListOfBox2d^ boxes) ;

~OCMeshVS_SensitiveMesh()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
