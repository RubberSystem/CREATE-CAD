// File generated by CPPExt (CPP file)
//

#include "MeshVS_VectorPrsBuilder.h"
#include "../Converter.h"
#include "MeshVS_Mesh.h"
#include "../Quantity/Quantity_Color.h"
#include "MeshVS_DataSource.h"
#include "../Prs3d/Prs3d_Presentation.h"
#include "../gp/gp_Trsf.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../Graphic3d/Graphic3d_ArrayOfPrimitives.h"
#include "MeshVS_DataMapOfIntegerVector.h"
#include "../gp/gp_Vec.h"


using namespace OCNaroWrappers;

OCMeshVS_VectorPrsBuilder::OCMeshVS_VectorPrsBuilder(Handle(MeshVS_VectorPrsBuilder)* nativeHandle) : OCMeshVS_PrsBuilder((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MeshVS_VectorPrsBuilder(*nativeHandle);
}

OCMeshVS_VectorPrsBuilder::OCMeshVS_VectorPrsBuilder(OCNaroWrappers::OCMeshVS_Mesh^ Parent, Standard_Real MaxLength, OCNaroWrappers::OCQuantity_Color^ VectorColor, MeshVS_DisplayModeFlags Flags, OCNaroWrappers::OCMeshVS_DataSource^ DS, Standard_Integer Id, MeshVS_BuilderPriority Priority, System::Boolean IsSimplePrs) : OCMeshVS_PrsBuilder((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MeshVS_VectorPrsBuilder(new MeshVS_VectorPrsBuilder(*((Handle_MeshVS_Mesh*)Parent->Handle), MaxLength, *((Quantity_Color*)VectorColor->Handle), Flags, *((Handle_MeshVS_DataSource*)DS->Handle), Id, Priority, OCConverter::BooleanToStandardBoolean(IsSimplePrs)));
}

 void OCMeshVS_VectorPrsBuilder::Build(OCNaroWrappers::OCPrs3d_Presentation^ Prs, TColStd_PackedMapOfInteger IDs, TColStd_PackedMapOfInteger& IDsToExclude, System::Boolean IsElement, Standard_Integer theDisplayMode)
{
  (*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->Build(*((Handle_Prs3d_Presentation*)Prs->Handle), IDs, IDsToExclude, OCConverter::BooleanToStandardBoolean(IsElement), theDisplayMode);
}

 void OCMeshVS_VectorPrsBuilder::DrawVector(OCNaroWrappers::OCgp_Trsf^ theTrsf, Standard_Real Length, Standard_Real MaxLength, OCNaroWrappers::OCTColgp_Array1OfPnt^ ArrowPoints, OCNaroWrappers::OCGraphic3d_ArrayOfPrimitives^ Lines, OCNaroWrappers::OCGraphic3d_ArrayOfPrimitives^ ArrowLines, OCNaroWrappers::OCGraphic3d_ArrayOfPrimitives^ Triangles)
{
  (*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->DrawVector(*((gp_Trsf*)theTrsf->Handle), Length, MaxLength, *((TColgp_Array1OfPnt*)ArrowPoints->Handle), *((Handle_Graphic3d_ArrayOfPrimitives*)Lines->Handle), *((Handle_Graphic3d_ArrayOfPrimitives*)ArrowLines->Handle), *((Handle_Graphic3d_ArrayOfPrimitives*)Triangles->Handle));
}

 Standard_Real OCMeshVS_VectorPrsBuilder::calculateArrow(OCNaroWrappers::OCTColgp_Array1OfPnt^ Points, Standard_Real Length, Standard_Real ArrowPart)
{
  return MeshVS_VectorPrsBuilder::calculateArrow(*((TColgp_Array1OfPnt*)Points->Handle), Length, ArrowPart);
}

OCMeshVS_DataMapOfIntegerVector^ OCMeshVS_VectorPrsBuilder::GetVectors(System::Boolean IsElement)
{
  MeshVS_DataMapOfIntegerVector* tmp = new MeshVS_DataMapOfIntegerVector(0);
  *tmp = (*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->GetVectors(OCConverter::BooleanToStandardBoolean(IsElement));
  return gcnew OCMeshVS_DataMapOfIntegerVector(tmp);
}

 void OCMeshVS_VectorPrsBuilder::SetVectors(System::Boolean IsElement, OCNaroWrappers::OCMeshVS_DataMapOfIntegerVector^ Map)
{
  (*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->SetVectors(OCConverter::BooleanToStandardBoolean(IsElement), *((MeshVS_DataMapOfIntegerVector*)Map->Handle));
}

 System::Boolean OCMeshVS_VectorPrsBuilder::HasVectors(System::Boolean IsElement)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->HasVectors(OCConverter::BooleanToStandardBoolean(IsElement)));
}

 System::Boolean OCMeshVS_VectorPrsBuilder::GetVector(System::Boolean IsElement, Standard_Integer ID, OCNaroWrappers::OCgp_Vec^ Vect)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->GetVector(OCConverter::BooleanToStandardBoolean(IsElement), ID, *((gp_Vec*)Vect->Handle)));
}

 void OCMeshVS_VectorPrsBuilder::SetVector(System::Boolean IsElement, Standard_Integer ID, OCNaroWrappers::OCgp_Vec^ Vect)
{
  (*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->SetVector(OCConverter::BooleanToStandardBoolean(IsElement), ID, *((gp_Vec*)Vect->Handle));
}

 void OCMeshVS_VectorPrsBuilder::GetMinMaxVectorValue(System::Boolean IsElement, Standard_Real& MinValue, Standard_Real& MaxValue)
{
  (*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->GetMinMaxVectorValue(OCConverter::BooleanToStandardBoolean(IsElement), MinValue, MaxValue);
}

 void OCMeshVS_VectorPrsBuilder::SetSimplePrsMode(System::Boolean IsSimpleArrow)
{
  (*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->SetSimplePrsMode(OCConverter::BooleanToStandardBoolean(IsSimpleArrow));
}

 void OCMeshVS_VectorPrsBuilder::SetSimplePrsParams(Standard_Real theLineWidthParam, Standard_Real theStartParam, Standard_Real theEndParam)
{
  (*((Handle_MeshVS_VectorPrsBuilder*)nativeHandle))->SetSimplePrsParams(theLineWidthParam, theStartParam, theEndParam);
}


