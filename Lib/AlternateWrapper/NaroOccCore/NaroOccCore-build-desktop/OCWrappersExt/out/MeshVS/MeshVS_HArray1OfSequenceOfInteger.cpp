// File generated by CPPExt (CPP file)
//

#include "MeshVS_HArray1OfSequenceOfInteger.h"
#include "../Converter.h"
#include "../TColStd/TColStd_SequenceOfInteger.h"
#include "MeshVS_Array1OfSequenceOfInteger.h"


using namespace OCNaroWrappers;

OCMeshVS_HArray1OfSequenceOfInteger::OCMeshVS_HArray1OfSequenceOfInteger(Handle(MeshVS_HArray1OfSequenceOfInteger)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MeshVS_HArray1OfSequenceOfInteger(*nativeHandle);
}

OCMeshVS_HArray1OfSequenceOfInteger::OCMeshVS_HArray1OfSequenceOfInteger(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MeshVS_HArray1OfSequenceOfInteger(new MeshVS_HArray1OfSequenceOfInteger(Low, Up));
}

OCMeshVS_HArray1OfSequenceOfInteger::OCMeshVS_HArray1OfSequenceOfInteger(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCTColStd_SequenceOfInteger^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MeshVS_HArray1OfSequenceOfInteger(new MeshVS_HArray1OfSequenceOfInteger(Low, Up, *((TColStd_SequenceOfInteger*)V->Handle)));
}

 void OCMeshVS_HArray1OfSequenceOfInteger::Init(OCNaroWrappers::OCTColStd_SequenceOfInteger^ V)
{
  (*((Handle_MeshVS_HArray1OfSequenceOfInteger*)nativeHandle))->Init(*((TColStd_SequenceOfInteger*)V->Handle));
}

 Standard_Integer OCMeshVS_HArray1OfSequenceOfInteger::Length()
{
  return (*((Handle_MeshVS_HArray1OfSequenceOfInteger*)nativeHandle))->Length();
}

 Standard_Integer OCMeshVS_HArray1OfSequenceOfInteger::Lower()
{
  return (*((Handle_MeshVS_HArray1OfSequenceOfInteger*)nativeHandle))->Lower();
}

 Standard_Integer OCMeshVS_HArray1OfSequenceOfInteger::Upper()
{
  return (*((Handle_MeshVS_HArray1OfSequenceOfInteger*)nativeHandle))->Upper();
}

 void OCMeshVS_HArray1OfSequenceOfInteger::SetValue(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfInteger^ Value)
{
  (*((Handle_MeshVS_HArray1OfSequenceOfInteger*)nativeHandle))->SetValue(Index, *((TColStd_SequenceOfInteger*)Value->Handle));
}

OCTColStd_SequenceOfInteger^ OCMeshVS_HArray1OfSequenceOfInteger::Value(Standard_Integer Index)
{
  TColStd_SequenceOfInteger* tmp = new TColStd_SequenceOfInteger();
  *tmp = (*((Handle_MeshVS_HArray1OfSequenceOfInteger*)nativeHandle))->Value(Index);
  return gcnew OCTColStd_SequenceOfInteger(tmp);
}

OCTColStd_SequenceOfInteger^ OCMeshVS_HArray1OfSequenceOfInteger::ChangeValue(Standard_Integer Index)
{
  TColStd_SequenceOfInteger* tmp = new TColStd_SequenceOfInteger();
  *tmp = (*((Handle_MeshVS_HArray1OfSequenceOfInteger*)nativeHandle))->ChangeValue(Index);
  return gcnew OCTColStd_SequenceOfInteger(tmp);
}

OCMeshVS_Array1OfSequenceOfInteger^ OCMeshVS_HArray1OfSequenceOfInteger::Array1()
{
  MeshVS_Array1OfSequenceOfInteger* tmp = new MeshVS_Array1OfSequenceOfInteger(0, 0);
  *tmp = (*((Handle_MeshVS_HArray1OfSequenceOfInteger*)nativeHandle))->Array1();
  return gcnew OCMeshVS_Array1OfSequenceOfInteger(tmp);
}

OCMeshVS_Array1OfSequenceOfInteger^ OCMeshVS_HArray1OfSequenceOfInteger::ChangeArray1()
{
  MeshVS_Array1OfSequenceOfInteger* tmp = new MeshVS_Array1OfSequenceOfInteger(0, 0);
  *tmp = (*((Handle_MeshVS_HArray1OfSequenceOfInteger*)nativeHandle))->ChangeArray1();
  return gcnew OCMeshVS_Array1OfSequenceOfInteger(tmp);
}


