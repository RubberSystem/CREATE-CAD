// File generated by CPPExt (CPP file)
//

#include "MeshVS_MeshPrsBuilder.h"
#include "../Converter.h"
#include "MeshVS_Mesh.h"
#include "MeshVS_DataSource.h"
#include "../Prs3d/Prs3d_Presentation.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "../Graphic3d/Graphic3d_ArrayOfPolylines.h"
#include "../Graphic3d/Graphic3d_ArrayOfPolygons.h"
#include "MeshVS_HArray1OfSequenceOfInteger.h"
#include "../Graphic3d/Graphic3d_ArrayOfPrimitives.h"
#include "../Graphic3d/Graphic3d_AspectFillArea3d.h"
#include "../Graphic3d/Graphic3d_AspectLine3d.h"


using namespace OCNaroWrappers;

OCMeshVS_MeshPrsBuilder::OCMeshVS_MeshPrsBuilder(Handle(MeshVS_MeshPrsBuilder)* nativeHandle) : OCMeshVS_PrsBuilder((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MeshVS_MeshPrsBuilder(*nativeHandle);
}

OCMeshVS_MeshPrsBuilder::OCMeshVS_MeshPrsBuilder(OCNaroWrappers::OCMeshVS_Mesh^ Parent, MeshVS_DisplayModeFlags Flags, OCNaroWrappers::OCMeshVS_DataSource^ DS, Standard_Integer Id, MeshVS_BuilderPriority Priority) : OCMeshVS_PrsBuilder((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MeshVS_MeshPrsBuilder(new MeshVS_MeshPrsBuilder(*((Handle_MeshVS_Mesh*)Parent->Handle), Flags, *((Handle_MeshVS_DataSource*)DS->Handle), Id, Priority));
}

 void OCMeshVS_MeshPrsBuilder::Build(OCNaroWrappers::OCPrs3d_Presentation^ Prs, TColStd_PackedMapOfInteger IDs, TColStd_PackedMapOfInteger& IDsToExclude, System::Boolean IsElement, Standard_Integer DisplayMode)
{
  (*((Handle_MeshVS_MeshPrsBuilder*)nativeHandle))->Build(*((Handle_Prs3d_Presentation*)Prs->Handle), IDs, IDsToExclude, OCConverter::BooleanToStandardBoolean(IsElement), DisplayMode);
}

 void OCMeshVS_MeshPrsBuilder::BuildNodes(OCNaroWrappers::OCPrs3d_Presentation^ Prs, TColStd_PackedMapOfInteger IDs, TColStd_PackedMapOfInteger& IDsToExclude, Standard_Integer DisplayMode)
{
  (*((Handle_MeshVS_MeshPrsBuilder*)nativeHandle))->BuildNodes(*((Handle_Prs3d_Presentation*)Prs->Handle), IDs, IDsToExclude, DisplayMode);
}

 void OCMeshVS_MeshPrsBuilder::BuildElements(OCNaroWrappers::OCPrs3d_Presentation^ Prs, TColStd_PackedMapOfInteger IDs, TColStd_PackedMapOfInteger& IDsToExclude, Standard_Integer DisplayMode)
{
  (*((Handle_MeshVS_MeshPrsBuilder*)nativeHandle))->BuildElements(*((Handle_Prs3d_Presentation*)Prs->Handle), IDs, IDsToExclude, DisplayMode);
}

 void OCMeshVS_MeshPrsBuilder::BuildHilightPrs(OCNaroWrappers::OCPrs3d_Presentation^ Prs, TColStd_PackedMapOfInteger IDs, System::Boolean IsElement)
{
  (*((Handle_MeshVS_MeshPrsBuilder*)nativeHandle))->BuildHilightPrs(*((Handle_Prs3d_Presentation*)Prs->Handle), IDs, OCConverter::BooleanToStandardBoolean(IsElement));
}

 void OCMeshVS_MeshPrsBuilder::AddVolumePrs(OCNaroWrappers::OCMeshVS_HArray1OfSequenceOfInteger^ Topo, OCNaroWrappers::OCTColStd_Array1OfReal^ Nodes, Standard_Integer NbNodes, OCNaroWrappers::OCGraphic3d_ArrayOfPrimitives^ Array, System::Boolean IsReflected, System::Boolean IsShrinked, System::Boolean IsSelect, Standard_Real ShrinkCoef)
{
  MeshVS_MeshPrsBuilder::AddVolumePrs(*((Handle_MeshVS_HArray1OfSequenceOfInteger*)Topo->Handle), *((TColStd_Array1OfReal*)Nodes->Handle), NbNodes, *((Handle_Graphic3d_ArrayOfPrimitives*)Array->Handle), OCConverter::BooleanToStandardBoolean(IsReflected), OCConverter::BooleanToStandardBoolean(IsShrinked), OCConverter::BooleanToStandardBoolean(IsSelect), ShrinkCoef);
}

 void OCMeshVS_MeshPrsBuilder::HowManyPrimitives(OCNaroWrappers::OCMeshVS_HArray1OfSequenceOfInteger^ Topo, System::Boolean AsPolygons, System::Boolean IsSelect, Standard_Integer NbNodes, Standard_Integer& Vertices, Standard_Integer& Bounds)
{
  MeshVS_MeshPrsBuilder::HowManyPrimitives(*((Handle_MeshVS_HArray1OfSequenceOfInteger*)Topo->Handle), OCConverter::BooleanToStandardBoolean(AsPolygons), OCConverter::BooleanToStandardBoolean(IsSelect), NbNodes, Vertices, Bounds);
}


