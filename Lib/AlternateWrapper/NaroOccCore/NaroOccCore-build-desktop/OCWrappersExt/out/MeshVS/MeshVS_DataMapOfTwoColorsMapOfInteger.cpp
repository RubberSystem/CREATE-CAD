// File generated by CPPExt (CPP file)
//

#include "MeshVS_DataMapOfTwoColorsMapOfInteger.h"
#include "../Converter.h"
#include "../TColStd/TColStd_MapOfInteger.h"
#include "MeshVS_TwoColorsHasher.h"
#include "MeshVS_DataMapNodeOfDataMapOfTwoColorsMapOfInteger.h"
#include "MeshVS_DataMapIteratorOfDataMapOfTwoColorsMapOfInteger.h"


using namespace OCNaroWrappers;

OCMeshVS_DataMapOfTwoColorsMapOfInteger::OCMeshVS_DataMapOfTwoColorsMapOfInteger(MeshVS_DataMapOfTwoColorsMapOfInteger* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMeshVS_DataMapOfTwoColorsMapOfInteger::OCMeshVS_DataMapOfTwoColorsMapOfInteger(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MeshVS_DataMapOfTwoColorsMapOfInteger(NbBuckets);
}

OCMeshVS_DataMapOfTwoColorsMapOfInteger^ OCMeshVS_DataMapOfTwoColorsMapOfInteger::Assign(OCNaroWrappers::OCMeshVS_DataMapOfTwoColorsMapOfInteger^ Other)
{
  MeshVS_DataMapOfTwoColorsMapOfInteger* tmp = new MeshVS_DataMapOfTwoColorsMapOfInteger(0);
  *tmp = ((MeshVS_DataMapOfTwoColorsMapOfInteger*)nativeHandle)->Assign(*((MeshVS_DataMapOfTwoColorsMapOfInteger*)Other->Handle));
  return gcnew OCMeshVS_DataMapOfTwoColorsMapOfInteger(tmp);
}

 void OCMeshVS_DataMapOfTwoColorsMapOfInteger::ReSize(Standard_Integer NbBuckets)
{
  ((MeshVS_DataMapOfTwoColorsMapOfInteger*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMeshVS_DataMapOfTwoColorsMapOfInteger::Bind(MeshVS_TwoColors K, OCNaroWrappers::OCTColStd_MapOfInteger^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfTwoColorsMapOfInteger*)nativeHandle)->Bind(K, *((TColStd_MapOfInteger*)I->Handle)));
}

 System::Boolean OCMeshVS_DataMapOfTwoColorsMapOfInteger::IsBound(MeshVS_TwoColors K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfTwoColorsMapOfInteger*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMeshVS_DataMapOfTwoColorsMapOfInteger::UnBind(MeshVS_TwoColors K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfTwoColorsMapOfInteger*)nativeHandle)->UnBind(K));
}

OCTColStd_MapOfInteger^ OCMeshVS_DataMapOfTwoColorsMapOfInteger::Find(MeshVS_TwoColors K)
{
  TColStd_MapOfInteger* tmp = new TColStd_MapOfInteger(0);
  *tmp = ((MeshVS_DataMapOfTwoColorsMapOfInteger*)nativeHandle)->Find(K);
  return gcnew OCTColStd_MapOfInteger(tmp);
}

OCTColStd_MapOfInteger^ OCMeshVS_DataMapOfTwoColorsMapOfInteger::ChangeFind(MeshVS_TwoColors K)
{
  TColStd_MapOfInteger* tmp = new TColStd_MapOfInteger(0);
  *tmp = ((MeshVS_DataMapOfTwoColorsMapOfInteger*)nativeHandle)->ChangeFind(K);
  return gcnew OCTColStd_MapOfInteger(tmp);
}

 Standard_Address OCMeshVS_DataMapOfTwoColorsMapOfInteger::Find1(MeshVS_TwoColors K)
{
  return ((MeshVS_DataMapOfTwoColorsMapOfInteger*)nativeHandle)->Find1(K);
}

 Standard_Address OCMeshVS_DataMapOfTwoColorsMapOfInteger::ChangeFind1(MeshVS_TwoColors K)
{
  return ((MeshVS_DataMapOfTwoColorsMapOfInteger*)nativeHandle)->ChangeFind1(K);
}


