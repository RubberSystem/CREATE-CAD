// File generated by CPPExt (CPP file)
//

#include "MeshVS_DataMapOfColorMapOfInteger.h"
#include "../Converter.h"
#include "../Quantity/Quantity_Color.h"
#include "../TColStd/TColStd_MapOfInteger.h"
#include "MeshVS_ColorHasher.h"
#include "MeshVS_DataMapNodeOfDataMapOfColorMapOfInteger.h"
#include "MeshVS_DataMapIteratorOfDataMapOfColorMapOfInteger.h"


using namespace OCNaroWrappers;

OCMeshVS_DataMapOfColorMapOfInteger::OCMeshVS_DataMapOfColorMapOfInteger(MeshVS_DataMapOfColorMapOfInteger* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMeshVS_DataMapOfColorMapOfInteger::OCMeshVS_DataMapOfColorMapOfInteger(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MeshVS_DataMapOfColorMapOfInteger(NbBuckets);
}

OCMeshVS_DataMapOfColorMapOfInteger^ OCMeshVS_DataMapOfColorMapOfInteger::Assign(OCNaroWrappers::OCMeshVS_DataMapOfColorMapOfInteger^ Other)
{
  MeshVS_DataMapOfColorMapOfInteger* tmp = new MeshVS_DataMapOfColorMapOfInteger(0);
  *tmp = ((MeshVS_DataMapOfColorMapOfInteger*)nativeHandle)->Assign(*((MeshVS_DataMapOfColorMapOfInteger*)Other->Handle));
  return gcnew OCMeshVS_DataMapOfColorMapOfInteger(tmp);
}

 void OCMeshVS_DataMapOfColorMapOfInteger::ReSize(Standard_Integer NbBuckets)
{
  ((MeshVS_DataMapOfColorMapOfInteger*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMeshVS_DataMapOfColorMapOfInteger::Bind(OCNaroWrappers::OCQuantity_Color^ K, OCNaroWrappers::OCTColStd_MapOfInteger^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfColorMapOfInteger*)nativeHandle)->Bind(*((Quantity_Color*)K->Handle), *((TColStd_MapOfInteger*)I->Handle)));
}

 System::Boolean OCMeshVS_DataMapOfColorMapOfInteger::IsBound(OCNaroWrappers::OCQuantity_Color^ K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfColorMapOfInteger*)nativeHandle)->IsBound(*((Quantity_Color*)K->Handle)));
}

 System::Boolean OCMeshVS_DataMapOfColorMapOfInteger::UnBind(OCNaroWrappers::OCQuantity_Color^ K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfColorMapOfInteger*)nativeHandle)->UnBind(*((Quantity_Color*)K->Handle)));
}

OCTColStd_MapOfInteger^ OCMeshVS_DataMapOfColorMapOfInteger::Find(OCNaroWrappers::OCQuantity_Color^ K)
{
  TColStd_MapOfInteger* tmp = new TColStd_MapOfInteger(0);
  *tmp = ((MeshVS_DataMapOfColorMapOfInteger*)nativeHandle)->Find(*((Quantity_Color*)K->Handle));
  return gcnew OCTColStd_MapOfInteger(tmp);
}

OCTColStd_MapOfInteger^ OCMeshVS_DataMapOfColorMapOfInteger::ChangeFind(OCNaroWrappers::OCQuantity_Color^ K)
{
  TColStd_MapOfInteger* tmp = new TColStd_MapOfInteger(0);
  *tmp = ((MeshVS_DataMapOfColorMapOfInteger*)nativeHandle)->ChangeFind(*((Quantity_Color*)K->Handle));
  return gcnew OCTColStd_MapOfInteger(tmp);
}

 Standard_Address OCMeshVS_DataMapOfColorMapOfInteger::Find1(OCNaroWrappers::OCQuantity_Color^ K)
{
  return ((MeshVS_DataMapOfColorMapOfInteger*)nativeHandle)->Find1(*((Quantity_Color*)K->Handle));
}

 Standard_Address OCMeshVS_DataMapOfColorMapOfInteger::ChangeFind1(OCNaroWrappers::OCQuantity_Color^ K)
{
  return ((MeshVS_DataMapOfColorMapOfInteger*)nativeHandle)->ChangeFind1(*((Quantity_Color*)K->Handle));
}


