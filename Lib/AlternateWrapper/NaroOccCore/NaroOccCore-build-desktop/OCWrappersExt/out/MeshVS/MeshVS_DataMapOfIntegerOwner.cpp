// File generated by CPPExt (CPP file)
//

#include "MeshVS_DataMapOfIntegerOwner.h"
#include "../Converter.h"
#include "../SelectMgr/SelectMgr_EntityOwner.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MeshVS_DataMapNodeOfDataMapOfIntegerOwner.h"
#include "MeshVS_DataMapIteratorOfDataMapOfIntegerOwner.h"


using namespace OCNaroWrappers;

OCMeshVS_DataMapOfIntegerOwner::OCMeshVS_DataMapOfIntegerOwner(MeshVS_DataMapOfIntegerOwner* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMeshVS_DataMapOfIntegerOwner::OCMeshVS_DataMapOfIntegerOwner(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MeshVS_DataMapOfIntegerOwner(NbBuckets);
}

OCMeshVS_DataMapOfIntegerOwner^ OCMeshVS_DataMapOfIntegerOwner::Assign(OCNaroWrappers::OCMeshVS_DataMapOfIntegerOwner^ Other)
{
  MeshVS_DataMapOfIntegerOwner* tmp = new MeshVS_DataMapOfIntegerOwner(0);
  *tmp = ((MeshVS_DataMapOfIntegerOwner*)nativeHandle)->Assign(*((MeshVS_DataMapOfIntegerOwner*)Other->Handle));
  return gcnew OCMeshVS_DataMapOfIntegerOwner(tmp);
}

 void OCMeshVS_DataMapOfIntegerOwner::ReSize(Standard_Integer NbBuckets)
{
  ((MeshVS_DataMapOfIntegerOwner*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMeshVS_DataMapOfIntegerOwner::Bind(Standard_Integer K, OCNaroWrappers::OCSelectMgr_EntityOwner^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfIntegerOwner*)nativeHandle)->Bind(K, *((Handle_SelectMgr_EntityOwner*)I->Handle)));
}

 System::Boolean OCMeshVS_DataMapOfIntegerOwner::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfIntegerOwner*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMeshVS_DataMapOfIntegerOwner::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfIntegerOwner*)nativeHandle)->UnBind(K));
}

OCSelectMgr_EntityOwner^ OCMeshVS_DataMapOfIntegerOwner::Find(Standard_Integer K)
{
  Handle(SelectMgr_EntityOwner) tmp = ((MeshVS_DataMapOfIntegerOwner*)nativeHandle)->Find(K);
  return gcnew OCSelectMgr_EntityOwner(&tmp);
}

OCSelectMgr_EntityOwner^ OCMeshVS_DataMapOfIntegerOwner::ChangeFind(Standard_Integer K)
{
  Handle(SelectMgr_EntityOwner) tmp = ((MeshVS_DataMapOfIntegerOwner*)nativeHandle)->ChangeFind(K);
  return gcnew OCSelectMgr_EntityOwner(&tmp);
}

 Standard_Address OCMeshVS_DataMapOfIntegerOwner::Find1(Standard_Integer K)
{
  return ((MeshVS_DataMapOfIntegerOwner*)nativeHandle)->Find1(K);
}

 Standard_Address OCMeshVS_DataMapOfIntegerOwner::ChangeFind1(Standard_Integer K)
{
  return ((MeshVS_DataMapOfIntegerOwner*)nativeHandle)->ChangeFind1(K);
}


