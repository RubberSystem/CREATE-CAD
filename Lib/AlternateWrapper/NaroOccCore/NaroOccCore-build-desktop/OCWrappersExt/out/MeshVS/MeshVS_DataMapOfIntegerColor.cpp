// File generated by CPPExt (CPP file)
//

#include "MeshVS_DataMapOfIntegerColor.h"
#include "../Converter.h"
#include "../Quantity/Quantity_Color.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MeshVS_DataMapNodeOfDataMapOfIntegerColor.h"
#include "MeshVS_DataMapIteratorOfDataMapOfIntegerColor.h"


using namespace OCNaroWrappers;

OCMeshVS_DataMapOfIntegerColor::OCMeshVS_DataMapOfIntegerColor(MeshVS_DataMapOfIntegerColor* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMeshVS_DataMapOfIntegerColor::OCMeshVS_DataMapOfIntegerColor(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MeshVS_DataMapOfIntegerColor(NbBuckets);
}

OCMeshVS_DataMapOfIntegerColor^ OCMeshVS_DataMapOfIntegerColor::Assign(OCNaroWrappers::OCMeshVS_DataMapOfIntegerColor^ Other)
{
  MeshVS_DataMapOfIntegerColor* tmp = new MeshVS_DataMapOfIntegerColor(0);
  *tmp = ((MeshVS_DataMapOfIntegerColor*)nativeHandle)->Assign(*((MeshVS_DataMapOfIntegerColor*)Other->Handle));
  return gcnew OCMeshVS_DataMapOfIntegerColor(tmp);
}

 void OCMeshVS_DataMapOfIntegerColor::ReSize(Standard_Integer NbBuckets)
{
  ((MeshVS_DataMapOfIntegerColor*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMeshVS_DataMapOfIntegerColor::Bind(Standard_Integer K, OCNaroWrappers::OCQuantity_Color^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfIntegerColor*)nativeHandle)->Bind(K, *((Quantity_Color*)I->Handle)));
}

 System::Boolean OCMeshVS_DataMapOfIntegerColor::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfIntegerColor*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMeshVS_DataMapOfIntegerColor::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshVS_DataMapOfIntegerColor*)nativeHandle)->UnBind(K));
}

OCQuantity_Color^ OCMeshVS_DataMapOfIntegerColor::Find(Standard_Integer K)
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = ((MeshVS_DataMapOfIntegerColor*)nativeHandle)->Find(K);
  return gcnew OCQuantity_Color(tmp);
}

OCQuantity_Color^ OCMeshVS_DataMapOfIntegerColor::ChangeFind(Standard_Integer K)
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = ((MeshVS_DataMapOfIntegerColor*)nativeHandle)->ChangeFind(K);
  return gcnew OCQuantity_Color(tmp);
}

 Standard_Address OCMeshVS_DataMapOfIntegerColor::Find1(Standard_Integer K)
{
  return ((MeshVS_DataMapOfIntegerColor*)nativeHandle)->Find1(K);
}

 Standard_Address OCMeshVS_DataMapOfIntegerColor::ChangeFind1(Standard_Integer K)
{
  return ((MeshVS_DataMapOfIntegerColor*)nativeHandle)->ChangeFind1(K);
}


