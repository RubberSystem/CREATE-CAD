// File generated by CPPExt (CPP file)
//

#include "MeshVS_DataMapNodeOfDataMapOfIntegerColor.h"
#include "../Converter.h"
#include "../Quantity/Quantity_Color.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MeshVS_DataMapOfIntegerColor.h"
#include "MeshVS_DataMapIteratorOfDataMapOfIntegerColor.h"


using namespace OCNaroWrappers;

OCMeshVS_DataMapNodeOfDataMapOfIntegerColor::OCMeshVS_DataMapNodeOfDataMapOfIntegerColor(Handle(MeshVS_DataMapNodeOfDataMapOfIntegerColor)* nativeHandle) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_MeshVS_DataMapNodeOfDataMapOfIntegerColor(*nativeHandle);
}

OCMeshVS_DataMapNodeOfDataMapOfIntegerColor::OCMeshVS_DataMapNodeOfDataMapOfIntegerColor(Standard_Integer K, OCNaroWrappers::OCQuantity_Color^ I, TCollection_MapNodePtr n) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  nativeHandle = new Handle_MeshVS_DataMapNodeOfDataMapOfIntegerColor(new MeshVS_DataMapNodeOfDataMapOfIntegerColor(K, *((Quantity_Color*)I->Handle), n));
}

 Standard_Integer OCMeshVS_DataMapNodeOfDataMapOfIntegerColor::Key()
{
  return (*((Handle_MeshVS_DataMapNodeOfDataMapOfIntegerColor*)nativeHandle))->Key();
}

OCQuantity_Color^ OCMeshVS_DataMapNodeOfDataMapOfIntegerColor::Value()
{
  Quantity_Color* tmp = new Quantity_Color();
  *tmp = (*((Handle_MeshVS_DataMapNodeOfDataMapOfIntegerColor*)nativeHandle))->Value();
  return gcnew OCQuantity_Color(tmp);
}


