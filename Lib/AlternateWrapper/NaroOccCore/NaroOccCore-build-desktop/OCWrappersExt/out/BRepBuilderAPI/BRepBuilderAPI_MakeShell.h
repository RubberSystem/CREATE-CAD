// File generated by CPPExt (MPV)
//
#ifndef _BRepBuilderAPI_MakeShell_OCWrappers_HeaderFile
#define _BRepBuilderAPI_MakeShell_OCWrappers_HeaderFile

// include native header
#include <BRepBuilderAPI_MakeShell.hxx>
#include "../Converter.h"

#include "BRepBuilderAPI_MakeShape.h"

#include "../BRepLib/BRepLib_MakeShell.h"
#include "BRepBuilderAPI_MakeShape.h"
#include "BRepBuilderAPI_ShellError.h"


namespace OCNaroWrappers
{

ref class OCGeom_Surface;
ref class OCTopoDS_Shell;


//! Describes functions to build a <br>
//! shape corresponding to the skin of a surface. <br>
//! Note that the term shell in the class name has the same definition <br>
//! as that of a shell in STEP, in other words the skin of a shape, <br>
//! and not a solid model defined by surface and thickness. If you want <br>
//! to build the second sort of shell, you must use <br>
//! BRepOffsetAPI_MakeOffsetShape. A shell is made of a series of <br>
//! faces connected by their common edges. <br>
//! If the underlying surface of a face is not C2 continuous and <br>
//! the flag Segment is True, MakeShell breaks the surface down into <br>
//! several faces which are all C2 continuous and which are <br>
//! connected along the non-regular curves on the surface. <br>
//! The resulting shell contains all these faces. <br>
//! Construction of a Shell from a non-C2 continuous Surface <br>
//! A MakeShell object provides a framework for: <br>
//! -      defining the construction of a shell, <br>
//! -      implementing the construction algorithm, and <br>
//! -      consulting the result. <br>
//! Warning <br>
//! The connected C2 faces in the shell resulting from a decomposition of <br>
//! the surface are not sewn. For a sewn result, you need to use <br>
//! BRepOffsetAPI_Sewing. For a shell with thickness, you need to use <br>
//! BRepOffsetAPI_MakeOffsetShape. <br>
public ref class OCBRepBuilderAPI_MakeShell  : public OCBRepBuilderAPI_MakeShape {

protected:
  // dummy constructor;
  OCBRepBuilderAPI_MakeShell(OCDummy^) : OCBRepBuilderAPI_MakeShape((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepBuilderAPI_MakeShell(BRepBuilderAPI_MakeShell* nativeHandle);

// Methods PUBLIC

//! Constructs an empty shell framework. The Init <br>
//! function is used to define the construction arguments. <br>
//! Warning <br>
//! The function Error will return <br>
//! BRepBuilderAPI_EmptyShell if it is called before the function Init. <br>
OCBRepBuilderAPI_MakeShell();

//! Constructs a shell from the surface S. <br>
OCBRepBuilderAPI_MakeShell(OCNaroWrappers::OCGeom_Surface^ S, System::Boolean Segment);

//! Constructs a shell from the surface S, <br>
//!      limited in the u parametric direction by the two <br>
//!      parameter values UMin and UMax, and limited in the v <br>
//!      parametric direction by the two parameter values VMin and VMax. <br>
OCBRepBuilderAPI_MakeShell(OCNaroWrappers::OCGeom_Surface^ S, Standard_Real UMin, Standard_Real UMax, Standard_Real VMin, Standard_Real VMax, System::Boolean Segment);

//! Defines or redefines the arguments <br>
//! for the construction of a shell. The construction is initialized <br>
//! with the surface S, limited in the u parametric direction by the <br>
//! two parameter values UMin and UMax, and in the v parametric <br>
//! direction by the two parameter values VMin and VMax. <br>
//! Warning <br>
//! The function Error returns: <br>
//! -      BRepBuilderAPI_ShellParametersOutOfRange <br>
//!    when the given parameters are outside the bounds of the <br>
//!    surface or the basis surface if S is trimmed <br>
 /*instead*/  void Init(OCNaroWrappers::OCGeom_Surface^ S, Standard_Real UMin, Standard_Real UMax, Standard_Real VMin, Standard_Real VMax, System::Boolean Segment) ;

//! Returns true if the shell is built. <br>
virtual /*instead*/  System::Boolean IsDone() override;

//! Returns the construction status: <br>
//! -   BRepBuilderAPI_ShellDone if the shell is built, or <br>
//! -   another value of the BRepBuilderAPI_ShellError <br>
//!   enumeration indicating why the construction failed. <br>
//!   This is frequently BRepBuilderAPI_ShellParametersOutOfRange <br>
//! indicating that the given parameters are outside the bounds of the surface. <br>
 /*instead*/  OCBRepBuilderAPI_ShellError Error() ;

//! Returns the new Shell. <br>
//! <br>
 /*instead*/  OCTopoDS_Shell^ Shell() ;

~OCBRepBuilderAPI_MakeShell()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
