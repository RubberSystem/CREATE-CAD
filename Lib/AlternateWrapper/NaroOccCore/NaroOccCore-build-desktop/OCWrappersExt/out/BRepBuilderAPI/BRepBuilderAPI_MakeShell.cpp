// File generated by CPPExt (CPP file)
//

#include "BRepBuilderAPI_MakeShell.h"
#include "../Converter.h"
#include "../Geom/Geom_Surface.h"
#include "../TopoDS/TopoDS_Shell.h"


using namespace OCNaroWrappers;

OCBRepBuilderAPI_MakeShell::OCBRepBuilderAPI_MakeShell(BRepBuilderAPI_MakeShell* nativeHandle) : OCBRepBuilderAPI_MakeShape((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepBuilderAPI_MakeShell::OCBRepBuilderAPI_MakeShell() : OCBRepBuilderAPI_MakeShape((OCDummy^)nullptr)

{
  nativeHandle = new BRepBuilderAPI_MakeShell();
}

OCBRepBuilderAPI_MakeShell::OCBRepBuilderAPI_MakeShell(OCNaroWrappers::OCGeom_Surface^ S, System::Boolean Segment) : OCBRepBuilderAPI_MakeShape((OCDummy^)nullptr)

{
  nativeHandle = new BRepBuilderAPI_MakeShell(*((Handle_Geom_Surface*)S->Handle), OCConverter::BooleanToStandardBoolean(Segment));
}

OCBRepBuilderAPI_MakeShell::OCBRepBuilderAPI_MakeShell(OCNaroWrappers::OCGeom_Surface^ S, Standard_Real UMin, Standard_Real UMax, Standard_Real VMin, Standard_Real VMax, System::Boolean Segment) : OCBRepBuilderAPI_MakeShape((OCDummy^)nullptr)

{
  nativeHandle = new BRepBuilderAPI_MakeShell(*((Handle_Geom_Surface*)S->Handle), UMin, UMax, VMin, VMax, OCConverter::BooleanToStandardBoolean(Segment));
}

 void OCBRepBuilderAPI_MakeShell::Init(OCNaroWrappers::OCGeom_Surface^ S, Standard_Real UMin, Standard_Real UMax, Standard_Real VMin, Standard_Real VMax, System::Boolean Segment)
{
  ((BRepBuilderAPI_MakeShell*)nativeHandle)->Init(*((Handle_Geom_Surface*)S->Handle), UMin, UMax, VMin, VMax, OCConverter::BooleanToStandardBoolean(Segment));
}

 System::Boolean OCBRepBuilderAPI_MakeShell::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((BRepBuilderAPI_MakeShell*)nativeHandle)->IsDone());
}

 OCBRepBuilderAPI_ShellError OCBRepBuilderAPI_MakeShell::Error()
{
  return (OCBRepBuilderAPI_ShellError)(((BRepBuilderAPI_MakeShell*)nativeHandle)->Error());
}

OCTopoDS_Shell^ OCBRepBuilderAPI_MakeShell::Shell()
{
  TopoDS_Shell* tmp = new TopoDS_Shell();
  *tmp = ((BRepBuilderAPI_MakeShell*)nativeHandle)->Shell();
  return gcnew OCTopoDS_Shell(tmp);
}


