// File generated by CPPExt (CPP file)
//

#include "BRepClass3d_Intersector3d.h"
#include "../Converter.h"
#include "../gp/gp_Lin.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCBRepClass3d_Intersector3d::OCBRepClass3d_Intersector3d(BRepClass3d_Intersector3d* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepClass3d_Intersector3d::OCBRepClass3d_Intersector3d() 
{
  nativeHandle = new BRepClass3d_Intersector3d();
}

 void OCBRepClass3d_Intersector3d::Perform(OCNaroWrappers::OCgp_Lin^ L, Standard_Real Prm, Standard_Real Tol, OCNaroWrappers::OCTopoDS_Face^ F)
{
  ((BRepClass3d_Intersector3d*)nativeHandle)->Perform(*((gp_Lin*)L->Handle), Prm, Tol, *((TopoDS_Face*)F->Handle));
}

 System::Boolean OCBRepClass3d_Intersector3d::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((BRepClass3d_Intersector3d*)nativeHandle)->IsDone());
}

 System::Boolean OCBRepClass3d_Intersector3d::HasAPoint()
{
  return OCConverter::StandardBooleanToBoolean(((BRepClass3d_Intersector3d*)nativeHandle)->HasAPoint());
}

 Standard_Real OCBRepClass3d_Intersector3d::UParameter()
{
  return ((BRepClass3d_Intersector3d*)nativeHandle)->UParameter();
}

 Standard_Real OCBRepClass3d_Intersector3d::VParameter()
{
  return ((BRepClass3d_Intersector3d*)nativeHandle)->VParameter();
}

 Standard_Real OCBRepClass3d_Intersector3d::WParameter()
{
  return ((BRepClass3d_Intersector3d*)nativeHandle)->WParameter();
}

OCgp_Pnt^ OCBRepClass3d_Intersector3d::Pnt()
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((BRepClass3d_Intersector3d*)nativeHandle)->Pnt();
  return gcnew OCgp_Pnt(tmp);
}

 OCIntCurveSurface_TransitionOnCurve OCBRepClass3d_Intersector3d::Transition()
{
  return (OCIntCurveSurface_TransitionOnCurve)(((BRepClass3d_Intersector3d*)nativeHandle)->Transition());
}

 OCTopAbs_State OCBRepClass3d_Intersector3d::State()
{
  return (OCTopAbs_State)(((BRepClass3d_Intersector3d*)nativeHandle)->State());
}

OCTopoDS_Face^ OCBRepClass3d_Intersector3d::Face()
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = ((BRepClass3d_Intersector3d*)nativeHandle)->Face();
  return gcnew OCTopoDS_Face(tmp);
}


