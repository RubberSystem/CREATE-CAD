// File generated by CPPExt (CPP file)
//

#include "TransferBRep_ShapeMapper.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "TransferBRep_ShapeInfo.h"
#include "../Transfer/Transfer_Finder.h"
#include "../Standard/Standard_Type.h"


using namespace OCNaroWrappers;

OCTransferBRep_ShapeMapper::OCTransferBRep_ShapeMapper(Handle(TransferBRep_ShapeMapper)* nativeHandle) : OCTransfer_Finder((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TransferBRep_ShapeMapper(*nativeHandle);
}

OCTransferBRep_ShapeMapper::OCTransferBRep_ShapeMapper(OCNaroWrappers::OCTopoDS_Shape^ akey) : OCTransfer_Finder((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TransferBRep_ShapeMapper(new TransferBRep_ShapeMapper(*((TopoDS_Shape*)akey->Handle)));
}

OCTopoDS_Shape^ OCTransferBRep_ShapeMapper::Value()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_TransferBRep_ShapeMapper*)nativeHandle))->Value();
  return gcnew OCTopoDS_Shape(tmp);
}

 System::Boolean OCTransferBRep_ShapeMapper::Equates(OCNaroWrappers::OCTransfer_Finder^ other)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TransferBRep_ShapeMapper*)nativeHandle))->Equates(*((Handle_Transfer_Finder*)other->Handle)));
}

OCStandard_Type^ OCTransferBRep_ShapeMapper::ValueType()
{
  Handle(Standard_Type) tmp = (*((Handle_TransferBRep_ShapeMapper*)nativeHandle))->ValueType();
  return gcnew OCStandard_Type(&tmp);
}

 System::String^ OCTransferBRep_ShapeMapper::ValueTypeName()
{
  return OCConverter::StandardCStringToString((*((Handle_TransferBRep_ShapeMapper*)nativeHandle))->ValueTypeName());
}


