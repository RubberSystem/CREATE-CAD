// File generated by CPPExt (CPP file)
//

#include "BRepLib_FuseEdges.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_IndexedMapOfShape.h"
#include "../TopTools/TopTools_DataMapOfIntegerListOfShape.h"
#include "../TopTools/TopTools_DataMapOfIntegerShape.h"
#include "../TopTools/TopTools_DataMapOfShapeShape.h"
#include "../TopTools/TopTools_IndexedDataMapOfShapeListOfShape.h"
#include "../TopTools/TopTools_MapOfShape.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "../TopoDS/TopoDS_Edge.h"


using namespace OCNaroWrappers;

OCBRepLib_FuseEdges::OCBRepLib_FuseEdges(BRepLib_FuseEdges* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepLib_FuseEdges::OCBRepLib_FuseEdges(OCNaroWrappers::OCTopoDS_Shape^ theShape, System::Boolean PerformNow) 
{
  nativeHandle = new BRepLib_FuseEdges(*((TopoDS_Shape*)theShape->Handle), OCConverter::BooleanToStandardBoolean(PerformNow));
}

 void OCBRepLib_FuseEdges::AvoidEdges(OCNaroWrappers::OCTopTools_IndexedMapOfShape^ theMapEdg)
{
  ((BRepLib_FuseEdges*)nativeHandle)->AvoidEdges(*((TopTools_IndexedMapOfShape*)theMapEdg->Handle));
}

 void OCBRepLib_FuseEdges::SetConcatBSpl(System::Boolean theConcatBSpl)
{
  ((BRepLib_FuseEdges*)nativeHandle)->SetConcatBSpl(OCConverter::BooleanToStandardBoolean(theConcatBSpl));
}

 void OCBRepLib_FuseEdges::Edges(OCNaroWrappers::OCTopTools_DataMapOfIntegerListOfShape^ theMapLstEdg)
{
  ((BRepLib_FuseEdges*)nativeHandle)->Edges(*((TopTools_DataMapOfIntegerListOfShape*)theMapLstEdg->Handle));
}

 void OCBRepLib_FuseEdges::ResultEdges(OCNaroWrappers::OCTopTools_DataMapOfIntegerShape^ theMapEdg)
{
  ((BRepLib_FuseEdges*)nativeHandle)->ResultEdges(*((TopTools_DataMapOfIntegerShape*)theMapEdg->Handle));
}

 void OCBRepLib_FuseEdges::Faces(OCNaroWrappers::OCTopTools_DataMapOfShapeShape^ theMapFac)
{
  ((BRepLib_FuseEdges*)nativeHandle)->Faces(*((TopTools_DataMapOfShapeShape*)theMapFac->Handle));
}

OCTopoDS_Shape^ OCBRepLib_FuseEdges::Shape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepLib_FuseEdges*)nativeHandle)->Shape();
  return gcnew OCTopoDS_Shape(tmp);
}

 Standard_Integer OCBRepLib_FuseEdges::NbVertices()
{
  return ((BRepLib_FuseEdges*)nativeHandle)->NbVertices();
}

 void OCBRepLib_FuseEdges::Perform()
{
  ((BRepLib_FuseEdges*)nativeHandle)->Perform();
}


