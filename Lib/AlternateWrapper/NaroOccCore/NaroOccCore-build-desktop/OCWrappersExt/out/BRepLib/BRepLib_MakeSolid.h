// File generated by CPPExt (MPV)
//
#ifndef _BRepLib_MakeSolid_OCWrappers_HeaderFile
#define _BRepLib_MakeSolid_OCWrappers_HeaderFile

// include native header
#include <BRepLib_MakeSolid.hxx>
#include "../Converter.h"

#include "BRepLib_MakeShape.h"

#include "../TopTools/TopTools_ListOfShape.h"
#include "BRepLib_MakeShape.h"
#include "BRepLib_ShapeModification.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_CompSolid;
ref class OCTopoDS_Shell;
ref class OCTopoDS_Solid;
ref class OCTopoDS_Face;


//! Makes a solid from compsolid  or  shells. <br>
public ref class OCBRepLib_MakeSolid  : public OCBRepLib_MakeShape {

protected:
  // dummy constructor;
  OCBRepLib_MakeSolid(OCDummy^) : OCBRepLib_MakeShape((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepLib_MakeSolid(BRepLib_MakeSolid* nativeHandle);

// Methods PUBLIC

//! Solid covers whole space. <br>
OCBRepLib_MakeSolid();

//! Make a solid from a CompSolid. <br>
OCBRepLib_MakeSolid(OCNaroWrappers::OCTopoDS_CompSolid^ S);

//! Make a solid from a shell. <br>
OCBRepLib_MakeSolid(OCNaroWrappers::OCTopoDS_Shell^ S);

//! Make a solid from two shells. <br>
OCBRepLib_MakeSolid(OCNaroWrappers::OCTopoDS_Shell^ S1, OCNaroWrappers::OCTopoDS_Shell^ S2);

//! Make a solid from three shells. <br>
OCBRepLib_MakeSolid(OCNaroWrappers::OCTopoDS_Shell^ S1, OCNaroWrappers::OCTopoDS_Shell^ S2, OCNaroWrappers::OCTopoDS_Shell^ S3);

//! Make a solid from a solid. Usefull for adding later. <br>
OCBRepLib_MakeSolid(OCNaroWrappers::OCTopoDS_Solid^ So);

//! Add a shell to a solid. <br>
OCBRepLib_MakeSolid(OCNaroWrappers::OCTopoDS_Solid^ So, OCNaroWrappers::OCTopoDS_Shell^ S);

//! Add the shell to the current solid. <br>
 /*instead*/  void Add(OCNaroWrappers::OCTopoDS_Shell^ S) ;

//! Returns the new Solid. <br>
//! <br>
 /*instead*/  OCTopoDS_Solid^ Solid() ;

//! returns the status of the Face after <br>
//!          the shape creation. <br>
virtual /*instead*/  OCBRepLib_ShapeModification FaceStatus(OCNaroWrappers::OCTopoDS_Face^ F) override;

~OCBRepLib_MakeSolid()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
