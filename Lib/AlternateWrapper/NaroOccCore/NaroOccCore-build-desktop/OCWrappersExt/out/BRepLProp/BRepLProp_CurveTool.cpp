// File generated by CPPExt (CPP file)
//

#include "BRepLProp_CurveTool.h"
#include "../Converter.h"
#include "../BRepAdaptor/BRepAdaptor_Curve.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Vec.h"


using namespace OCNaroWrappers;

OCBRepLProp_CurveTool::OCBRepLProp_CurveTool(BRepLProp_CurveTool* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 void OCBRepLProp_CurveTool::Value(OCNaroWrappers::OCBRepAdaptor_Curve^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P)
{
  BRepLProp_CurveTool::Value(*((BRepAdaptor_Curve*)C->Handle), U, *((gp_Pnt*)P->Handle));
}

 void OCBRepLProp_CurveTool::D1(OCNaroWrappers::OCBRepAdaptor_Curve^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1)
{
  BRepLProp_CurveTool::D1(*((BRepAdaptor_Curve*)C->Handle), U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V1->Handle));
}

 void OCBRepLProp_CurveTool::D2(OCNaroWrappers::OCBRepAdaptor_Curve^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1, OCNaroWrappers::OCgp_Vec^ V2)
{
  BRepLProp_CurveTool::D2(*((BRepAdaptor_Curve*)C->Handle), U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V1->Handle), *((gp_Vec*)V2->Handle));
}

 void OCBRepLProp_CurveTool::D3(OCNaroWrappers::OCBRepAdaptor_Curve^ C, Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V1, OCNaroWrappers::OCgp_Vec^ V2, OCNaroWrappers::OCgp_Vec^ V3)
{
  BRepLProp_CurveTool::D3(*((BRepAdaptor_Curve*)C->Handle), U, *((gp_Pnt*)P->Handle), *((gp_Vec*)V1->Handle), *((gp_Vec*)V2->Handle), *((gp_Vec*)V3->Handle));
}

 Standard_Integer OCBRepLProp_CurveTool::Continuity(OCNaroWrappers::OCBRepAdaptor_Curve^ C)
{
  return BRepLProp_CurveTool::Continuity(*((BRepAdaptor_Curve*)C->Handle));
}

 Standard_Real OCBRepLProp_CurveTool::FirstParameter(OCNaroWrappers::OCBRepAdaptor_Curve^ C)
{
  return BRepLProp_CurveTool::FirstParameter(*((BRepAdaptor_Curve*)C->Handle));
}

 Standard_Real OCBRepLProp_CurveTool::LastParameter(OCNaroWrappers::OCBRepAdaptor_Curve^ C)
{
  return BRepLProp_CurveTool::LastParameter(*((BRepAdaptor_Curve*)C->Handle));
}


