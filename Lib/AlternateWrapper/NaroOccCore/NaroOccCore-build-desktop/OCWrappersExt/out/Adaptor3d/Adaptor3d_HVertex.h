// File generated by CPPExt (Transient)
//
#ifndef _Adaptor3d_HVertex_OCWrappers_HeaderFile
#define _Adaptor3d_HVertex_OCWrappers_HeaderFile

// include the wrapped class
#include <Adaptor3d_HVertex.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../gp/gp_Pnt2d.h"
#include "../TopAbs/TopAbs_Orientation.h"


namespace OCNaroWrappers
{

ref class OCgp_Pnt2d;
ref class OCAdaptor2d_HCurve2d;



public ref class OCAdaptor3d_HVertex : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCAdaptor3d_HVertex(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCAdaptor3d_HVertex(Handle(Adaptor3d_HVertex)* nativeHandle);

// Methods PUBLIC


OCAdaptor3d_HVertex();


OCAdaptor3d_HVertex(OCNaroWrappers::OCgp_Pnt2d^ P, OCTopAbs_Orientation Ori, Standard_Real Resolution);


virtual /*instead*/  OCgp_Pnt2d^ Value() ;


virtual /*instead*/  Standard_Real Parameter(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C) ;

//! Parametric resolution (2d). <br>
virtual /*instead*/  Standard_Real Resolution(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C) ;


virtual /*instead*/  OCTopAbs_Orientation Orientation() ;


virtual /*instead*/  System::Boolean IsSame(OCNaroWrappers::OCAdaptor3d_HVertex^ Other) ;

~OCAdaptor3d_HVertex()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
