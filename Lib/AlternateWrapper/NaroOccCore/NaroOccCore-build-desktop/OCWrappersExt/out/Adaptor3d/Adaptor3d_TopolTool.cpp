// File generated by CPPExt (CPP file)
//

#include "Adaptor3d_TopolTool.h"
#include "../Converter.h"
#include "../Adaptor2d/Adaptor2d_HLine2d.h"
#include "Adaptor3d_HVertex.h"
#include "Adaptor3d_HSurface.h"
#include "../TColStd/TColStd_HArray1OfReal.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Pnt.h"
#include "../TColStd/TColStd_Array1OfReal.h"


using namespace OCNaroWrappers;

OCAdaptor3d_TopolTool::OCAdaptor3d_TopolTool(Handle(Adaptor3d_TopolTool)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Adaptor3d_TopolTool(*nativeHandle);
}

OCAdaptor3d_TopolTool::OCAdaptor3d_TopolTool() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Adaptor3d_TopolTool(new Adaptor3d_TopolTool());
}

OCAdaptor3d_TopolTool::OCAdaptor3d_TopolTool(OCNaroWrappers::OCAdaptor3d_HSurface^ Surface) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Adaptor3d_TopolTool(new Adaptor3d_TopolTool(*((Handle_Adaptor3d_HSurface*)Surface->Handle)));
}

 void OCAdaptor3d_TopolTool::Initialize()
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Initialize();
}

 void OCAdaptor3d_TopolTool::Initialize(OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Initialize(*((Handle_Adaptor3d_HSurface*)S->Handle));
}

 void OCAdaptor3d_TopolTool::Initialize(OCNaroWrappers::OCAdaptor2d_HCurve2d^ Curve)
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Initialize(*((Handle_Adaptor2d_HCurve2d*)Curve->Handle));
}

 void OCAdaptor3d_TopolTool::Init()
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Init();
}

 System::Boolean OCAdaptor3d_TopolTool::More()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->More());
}

OCAdaptor2d_HCurve2d^ OCAdaptor3d_TopolTool::Value()
{
  Handle(Adaptor2d_HCurve2d) tmp = (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Value();
  return gcnew OCAdaptor2d_HCurve2d(&tmp);
}

 void OCAdaptor3d_TopolTool::Next()
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Next();
}

 void OCAdaptor3d_TopolTool::InitVertexIterator()
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->InitVertexIterator();
}

 System::Boolean OCAdaptor3d_TopolTool::MoreVertex()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->MoreVertex());
}

OCAdaptor3d_HVertex^ OCAdaptor3d_TopolTool::Vertex()
{
  Handle(Adaptor3d_HVertex) tmp = (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Vertex();
  return gcnew OCAdaptor3d_HVertex(&tmp);
}

 void OCAdaptor3d_TopolTool::NextVertex()
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->NextVertex();
}

 OCTopAbs_State OCAdaptor3d_TopolTool::Classify(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real Tol, System::Boolean ReacdreOnPeriodic)
{
  return (OCTopAbs_State)((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Classify(*((gp_Pnt2d*)P->Handle), Tol, OCConverter::BooleanToStandardBoolean(ReacdreOnPeriodic)));
}

 System::Boolean OCAdaptor3d_TopolTool::IsThePointOn(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real Tol, System::Boolean ReacdreOnPeriodic)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->IsThePointOn(*((gp_Pnt2d*)P->Handle), Tol, OCConverter::BooleanToStandardBoolean(ReacdreOnPeriodic)));
}

 OCTopAbs_Orientation OCAdaptor3d_TopolTool::Orientation(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C)
{
  return (OCTopAbs_Orientation)((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Orientation(*((Handle_Adaptor2d_HCurve2d*)C->Handle)));
}

 OCTopAbs_Orientation OCAdaptor3d_TopolTool::Orientation(OCNaroWrappers::OCAdaptor3d_HVertex^ V)
{
  return (OCTopAbs_Orientation)((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Orientation(*((Handle_Adaptor3d_HVertex*)V->Handle)));
}

 System::Boolean OCAdaptor3d_TopolTool::Identical(OCNaroWrappers::OCAdaptor3d_HVertex^ V1, OCNaroWrappers::OCAdaptor3d_HVertex^ V2)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Identical(*((Handle_Adaptor3d_HVertex*)V1->Handle), *((Handle_Adaptor3d_HVertex*)V2->Handle)));
}

 System::Boolean OCAdaptor3d_TopolTool::Has3d()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Has3d());
}

 Standard_Real OCAdaptor3d_TopolTool::Tol3d(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C)
{
  return (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Tol3d(*((Handle_Adaptor2d_HCurve2d*)C->Handle));
}

 Standard_Real OCAdaptor3d_TopolTool::Tol3d(OCNaroWrappers::OCAdaptor3d_HVertex^ V)
{
  return (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Tol3d(*((Handle_Adaptor3d_HVertex*)V->Handle));
}

OCgp_Pnt^ OCAdaptor3d_TopolTool::Pnt(OCNaroWrappers::OCAdaptor3d_HVertex^ V)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Pnt(*((Handle_Adaptor3d_HVertex*)V->Handle));
  return gcnew OCgp_Pnt(tmp);
}

 void OCAdaptor3d_TopolTool::ComputeSamplePoints()
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->ComputeSamplePoints();
}

 Standard_Integer OCAdaptor3d_TopolTool::NbSamplesU()
{
  return (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->NbSamplesU();
}

 Standard_Integer OCAdaptor3d_TopolTool::NbSamplesV()
{
  return (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->NbSamplesV();
}

 Standard_Integer OCAdaptor3d_TopolTool::NbSamples()
{
  return (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->NbSamples();
}

 void OCAdaptor3d_TopolTool::UParameters(OCNaroWrappers::OCTColStd_Array1OfReal^ theArray)
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->UParameters(*((TColStd_Array1OfReal*)theArray->Handle));
}

 void OCAdaptor3d_TopolTool::VParameters(OCNaroWrappers::OCTColStd_Array1OfReal^ theArray)
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->VParameters(*((TColStd_Array1OfReal*)theArray->Handle));
}

 void OCAdaptor3d_TopolTool::SamplePoint(Standard_Integer Index, OCNaroWrappers::OCgp_Pnt2d^ P2d, OCNaroWrappers::OCgp_Pnt^ P3d)
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->SamplePoint(Index, *((gp_Pnt2d*)P2d->Handle), *((gp_Pnt*)P3d->Handle));
}

 System::Boolean OCAdaptor3d_TopolTool::DomainIsInfinite()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->DomainIsInfinite());
}

 Standard_Address OCAdaptor3d_TopolTool::Edge()
{
  return (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->Edge();
}

 void OCAdaptor3d_TopolTool::SamplePnts(Standard_Real theDefl, Standard_Integer theNUmin, Standard_Integer theNVmin)
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->SamplePnts(theDefl, theNUmin, theNVmin);
}

 void OCAdaptor3d_TopolTool::BSplSamplePnts(Standard_Real theDefl, Standard_Integer theNUmin, Standard_Integer theNVmin)
{
  (*((Handle_Adaptor3d_TopolTool*)nativeHandle))->BSplSamplePnts(theDefl, theNUmin, theNVmin);
}

 System::Boolean OCAdaptor3d_TopolTool::IsUniformSampling()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Adaptor3d_TopolTool*)nativeHandle))->IsUniformSampling());
}


