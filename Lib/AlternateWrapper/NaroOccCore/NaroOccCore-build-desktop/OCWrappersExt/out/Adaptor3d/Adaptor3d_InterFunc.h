// File generated by CPPExt (MPV)
//
#ifndef _Adaptor3d_InterFunc_OCWrappers_HeaderFile
#define _Adaptor3d_InterFunc_OCWrappers_HeaderFile

// include native header
#include <Adaptor3d_InterFunc.hxx>
#include "../Converter.h"

#include "../math/math_FunctionWithDerivative.h"

#include "../math/math_FunctionWithDerivative.h"


namespace OCNaroWrappers
{

ref class OCAdaptor2d_HCurve2d;


//! Used to find the points U(t) = U0 or V(t) = V0 in <br>
//!          order to determine the  Cn discontinuities of  an <br>
//!               Adpator_CurveOnSurface  relativly  to    the <br>
//!          discontinuities of the surface. <br>
public ref class OCAdaptor3d_InterFunc  : public OCmath_FunctionWithDerivative {

protected:
  // dummy constructor;
  OCAdaptor3d_InterFunc(OCDummy^) : OCmath_FunctionWithDerivative((OCDummy^)nullptr) {};

public:

// constructor from native
OCAdaptor3d_InterFunc(Adaptor3d_InterFunc* nativeHandle);

// Methods PUBLIC

//!   build the function  U(t)=FixVal   if Fix =1 or <br>
//!            V(t)=FixVal if Fix=2 <br>
OCAdaptor3d_InterFunc(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C, Standard_Real FixVal, Standard_Integer Fix);

//! computes the value <F>of the function for the variable <X>. <br>
//!         Returns True if the calculation were successfully done, <br>
//!          False otherwise. <br>
 /*instead*/  System::Boolean Value(Standard_Real X, Standard_Real& F) ;

//! computes the derivative <D> of the function <br>
//!          for the variable <X>. <br>
//!           Returns True if the calculation were successfully done, <br>
//!           False otherwise. <br>
 /*instead*/  System::Boolean Derivative(Standard_Real X, Standard_Real& D) ;

//! computes the value <F> and the derivative <D> of the <br>
//!          function for the variable <X>. <br>
//!          Returns True if the calculation were successfully done, <br>
//!          False otherwise. <br>
 /*instead*/  System::Boolean Values(Standard_Real X, Standard_Real& F, Standard_Real& D) ;

~OCAdaptor3d_InterFunc()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
