// File generated by CPPExt (Transient)
//
#ifndef _WNT_HFontTable_OCWrappers_HeaderFile
#define _WNT_HFontTable_OCWrappers_HeaderFile

// include the wrapped class
#include <WNT_HFontTable.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "WNT_FontTable.h"


namespace OCNaroWrappers
{

ref class OCWNT_FontMapEntry;
ref class OCWNT_FontTable;



public ref class OCWNT_HFontTable : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCWNT_HFontTable(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCWNT_HFontTable(Handle(WNT_HFontTable)* nativeHandle);

// Methods PUBLIC


OCWNT_HFontTable(Standard_Integer Low, Standard_Integer Up);


OCWNT_HFontTable(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCWNT_FontMapEntry^ V);


 /*instead*/  void Init(OCNaroWrappers::OCWNT_FontMapEntry^ V) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCWNT_FontMapEntry^ Value) ;


 /*instead*/  OCWNT_FontMapEntry^ Value(Standard_Integer Index) ;


 /*instead*/  OCWNT_FontMapEntry^ ChangeValue(Standard_Integer Index) ;


 /*instead*/  OCWNT_FontTable^ Array1() ;


 /*instead*/  OCWNT_FontTable^ ChangeArray1() ;

~OCWNT_HFontTable()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
