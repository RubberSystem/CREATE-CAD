// File generated by CPPExt (CPP file)
//

#include "WNT_FontTable.h"
#include "../Converter.h"
#include "WNT_FontMapEntry.h"


using namespace OCNaroWrappers;

OCWNT_FontTable::OCWNT_FontTable(WNT_FontTable* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCWNT_FontTable::OCWNT_FontTable(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new WNT_FontTable(Low, Up);
}

OCWNT_FontTable::OCWNT_FontTable(OCNaroWrappers::OCWNT_FontMapEntry^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new WNT_FontTable(*((Handle_WNT_FontMapEntry*)Item->Handle), Low, Up);
}

 void OCWNT_FontTable::Init(OCNaroWrappers::OCWNT_FontMapEntry^ V)
{
  ((WNT_FontTable*)nativeHandle)->Init(*((Handle_WNT_FontMapEntry*)V->Handle));
}

 System::Boolean OCWNT_FontTable::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((WNT_FontTable*)nativeHandle)->IsAllocated());
}

OCWNT_FontTable^ OCWNT_FontTable::Assign(OCNaroWrappers::OCWNT_FontTable^ Other)
{
  WNT_FontTable* tmp = new WNT_FontTable(0, 0);
  *tmp = ((WNT_FontTable*)nativeHandle)->Assign(*((WNT_FontTable*)Other->Handle));
  return gcnew OCWNT_FontTable(tmp);
}

 Standard_Integer OCWNT_FontTable::Length()
{
  return ((WNT_FontTable*)nativeHandle)->Length();
}

 Standard_Integer OCWNT_FontTable::Lower()
{
  return ((WNT_FontTable*)nativeHandle)->Lower();
}

 Standard_Integer OCWNT_FontTable::Upper()
{
  return ((WNT_FontTable*)nativeHandle)->Upper();
}

 void OCWNT_FontTable::SetValue(Standard_Integer Index, OCNaroWrappers::OCWNT_FontMapEntry^ Value)
{
  ((WNT_FontTable*)nativeHandle)->SetValue(Index, *((Handle_WNT_FontMapEntry*)Value->Handle));
}

OCWNT_FontMapEntry^ OCWNT_FontTable::Value(Standard_Integer Index)
{
  Handle(WNT_FontMapEntry) tmp = ((WNT_FontTable*)nativeHandle)->Value(Index);
  return gcnew OCWNT_FontMapEntry(&tmp);
}

OCWNT_FontMapEntry^ OCWNT_FontTable::ChangeValue(Standard_Integer Index)
{
  Handle(WNT_FontMapEntry) tmp = ((WNT_FontTable*)nativeHandle)->ChangeValue(Index);
  return gcnew OCWNT_FontMapEntry(&tmp);
}


