// File generated by CPPExt (Transient)
//
#ifndef _WNT_IconBox_OCWrappers_HeaderFile
#define _WNT_IconBox_OCWrappers_HeaderFile

// include the wrapped class
#include <WNT_IconBox.hxx>
#include "../Converter.h"

#include "WNT_Window.h"

#include "../Quantity/Quantity_NameOfColor.h"


namespace OCNaroWrappers
{

ref class OCWNT_GraphicDevice;
ref class OCWNT_Window;


//! This class defines a Windows NT icon box <br>
public ref class OCWNT_IconBox : OCWNT_Window {

protected:
  // dummy constructor;
  OCWNT_IconBox(OCDummy^) : OCWNT_Window((OCDummy^)nullptr) {};

public:

// constructor from native
OCWNT_IconBox(Handle(WNT_IconBox)* nativeHandle);

// Methods PUBLIC

//! Creates an IconBox defined by his Center in DSU. <br>
//!	    ALL Icons are loaded from the Icon File Directory Name: <br>
//!	    "[$SYMBOL]xxxxxxx[.ifd]" <br>
//!  Warning: Raises if the Position is out of the Screen Space <br>
//!	    or the Icon File Directory Name don't exist <br>
OCWNT_IconBox(OCNaroWrappers::OCWNT_GraphicDevice^ aDevice, System::String^ aName, WNT_Dword aStyle, Standard_Real Xc, Standard_Real Yc, OCQuantity_NameOfColor aBkColor);

//! Loads Icon Box from an Other Icon File Directory Name <br>
//!          and returns the loaded icons number. <br>
//!  Warning: The Icons previously loaded are NOT cleared. <br>
 /*instead*/  Standard_Integer LoadIcons(System::String^ Name) ;

//! Shows Icon Box to the screen <br>
//!  Warning: The Icon Box is displayed at the centered position <br>
//!	    specified at the creation time and the size depend <br>
//!	    of the Icon number really loaded inside. <br>
 /*instead*/  void Show() ;

//! Unloads All previously loaded Icons in the IconBox <br>
//!          and returns the unloaded icons number. <br>
 /*instead*/  Standard_Integer UnloadIcons(System::String^ Name) ;

//! Adds an Icon of Size aWidth,aHeight given in PIXEL <br>
//!          to the Icon Box from a FULL Existing Window <br>
//!  NOTE that if aWidth or aHeight is 0 the default icon size is taken. <br>
 /*instead*/  void AddIcon(OCNaroWrappers::OCWNT_Window^ W, System::String^ Name, Standard_Integer aWidth, Standard_Integer aHeight) ;

//!  Save all new created Icons as iconname.xwd file in the user <br>
//!      directory and returns the saved icons number. <br>
 /*instead*/  Standard_Integer SaveIcons() ;

//! Sets dimensions for icons which are visible in the box. <br>
 /*instead*/  void SetDim(Standard_Integer aWidth, Standard_Integer aHeight) ;

//! Returns the Number of Icons loaded in the Icon Box. <br>
 /*instead*/  Standard_Integer IconNumber() ;

//! Returns the Name of the N ime Icon <br>
//!  Warning: Raises if Index if out of range depending of the <br>
//!	    Number of Loaded Icons. <br>
 /*instead*/  System::String^ IconName(Standard_Integer Index) ;

//! Returns the Pixmap Size attached to the Icon Name <br>
//!  Warning: May return FALSE if Icon doesn't exist in the IconBox. <br>
 /*instead*/  System::Boolean IconSize(System::String^ Name, Standard_Integer& Width, Standard_Integer& Height) ;

//! Returns the Pixmap attached to the Icon Name <br>
//!  Warning: May return 0 if Icon doesn't exist in the IconBox. <br>
 /*instead*/  System::IntPtr IconPixmap(System::String^ Name) ;

//! Returns the Centered part of the Pixmap of required Size <br>
//!	    attached to the Icon Name <br>
//!  Warning: May return 0 if Icon doesn't exist in the IconBox. <br>
 /*instead*/  System::IntPtr IconPixmap(System::String^ Name, Standard_Integer Width, Standard_Integer Height) ;

//! routine to process events sent to the icon box <br>
 /*instead*/  WNT_Long HandleEvent(System::IntPtr hwnd, WNT_Uint uMsg, WNT_Dword wParam, WNT_Dword lParam) ;

~OCWNT_IconBox()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
