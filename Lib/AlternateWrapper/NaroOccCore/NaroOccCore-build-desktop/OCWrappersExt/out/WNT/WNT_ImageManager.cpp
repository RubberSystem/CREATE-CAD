// File generated by CPPExt (CPP file)
//

#include "WNT_ImageManager.h"
#include "../Converter.h"
#include "WNT_Image.h"
#include "WNT_WDriver.h"
#include "WNT_Window.h"


using namespace OCNaroWrappers;

OCWNT_ImageManager::OCWNT_ImageManager(Handle(WNT_ImageManager)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_WNT_ImageManager(*nativeHandle);
}

OCWNT_ImageManager::OCWNT_ImageManager(WNT_WindowPtr aWindow) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_WNT_ImageManager(new WNT_ImageManager(aWindow));
}

 void OCWNT_ImageManager::SetFormat(OCWNT_TypeOfImage aFormat)
{
  (*((Handle_WNT_ImageManager*)nativeHandle))->SetFormat((WNT_TypeOfImage)aFormat);
}

 void OCWNT_ImageManager::Add(OCNaroWrappers::OCWNT_Image^ anImage)
{
  (*((Handle_WNT_ImageManager*)nativeHandle))->Add(*((Handle_WNT_Image*)anImage->Handle));
}

OCWNT_Image^ OCWNT_ImageManager::Image(Standard_Integer anIndex)
{
  Handle(WNT_Image) tmp = (*((Handle_WNT_ImageManager*)nativeHandle))->Image(anIndex);
  return gcnew OCWNT_Image(&tmp);
}

 Standard_Integer OCWNT_ImageManager::Load(System::String^ aFileName)
{
  return (*((Handle_WNT_ImageManager*)nativeHandle))->Load(OCConverter::StringToStandardCString(aFileName));
}

 System::Boolean OCWNT_ImageManager::Save(System::String^ aFileName, Standard_Integer aX, Standard_Integer aY, Standard_Integer aWidth, Standard_Integer aHeight)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_WNT_ImageManager*)nativeHandle))->Save(OCConverter::StringToStandardCString(aFileName), aX, aY, aWidth, aHeight));
}

 System::Boolean OCWNT_ImageManager::SaveBuffer(System::String^ aFileName, Standard_Integer aX, Standard_Integer aY, Standard_Integer aWidth, Standard_Integer aHeight)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_WNT_ImageManager*)nativeHandle))->SaveBuffer(OCConverter::StringToStandardCString(aFileName), aX, aY, aWidth, aHeight));
}

 void OCWNT_ImageManager::Draw(Standard_Integer anIndex, Standard_Integer Xc, Standard_Integer Yc, Standard_Integer aWidth, Standard_Integer aHeight, Standard_Real anAngle)
{
  (*((Handle_WNT_ImageManager*)nativeHandle))->Draw(anIndex, Xc, Yc, aWidth, aHeight, anAngle);
}

 void OCWNT_ImageManager::Delete(Standard_Integer anIndex)
{
  (*((Handle_WNT_ImageManager*)nativeHandle))->Delete(anIndex);
}

 void OCWNT_ImageManager::Discard(Standard_Integer anIndex)
{
  (*((Handle_WNT_ImageManager*)nativeHandle))->Discard(anIndex);
}

 System::IntPtr OCWNT_ImageManager::Scale(Standard_Integer anIndex, Standard_Real aScaleX, Standard_Real aScaleY, System::Boolean aReplace)
{
  return System::IntPtr((*((Handle_WNT_ImageManager*)nativeHandle))->Scale(anIndex, aScaleX, aScaleY, OCConverter::BooleanToStandardBoolean(aReplace)));
}

 Standard_Integer OCWNT_ImageManager::Size()
{
  return (*((Handle_WNT_ImageManager*)nativeHandle))->Size();
}

 System::IntPtr OCWNT_ImageManager::ImageHandle(Standard_Integer anIndex)
{
  return System::IntPtr((*((Handle_WNT_ImageManager*)nativeHandle))->ImageHandle(anIndex));
}

 void OCWNT_ImageManager::Dim(Standard_Integer anIndex, Standard_Integer& aWidth, Standard_Integer& aHeight)
{
  (*((Handle_WNT_ImageManager*)nativeHandle))->Dim(anIndex, aWidth, aHeight);
}

 Standard_Integer OCWNT_ImageManager::HashCode(Standard_Integer anIndex)
{
  return (*((Handle_WNT_ImageManager*)nativeHandle))->HashCode(anIndex);
}

 Standard_Integer OCWNT_ImageManager::Index(Standard_Integer aHashCode)
{
  return (*((Handle_WNT_ImageManager*)nativeHandle))->Index(aHashCode);
}

 Standard_Integer OCWNT_ImageManager::StringHashCode(System::String^ aString)
{
  return (*((Handle_WNT_ImageManager*)nativeHandle))->StringHashCode(OCConverter::StringToStandardCString(aString));
}

 Standard_Integer OCWNT_ImageManager::Open(System::IntPtr aDC, Standard_Integer aWidth, Standard_Integer aHeight, Standard_Integer aHashCode)
{
  return (*((Handle_WNT_ImageManager*)nativeHandle))->Open(aDC.ToPointer(), aWidth, aHeight, aHashCode);
}


