// File generated by CPPExt (CPP file)
//

#include "WNT_ListOfMFTFonts.h"
#include "../Converter.h"
#include "../MFT/MFT_FontManager.h"


using namespace OCNaroWrappers;

OCWNT_ListOfMFTFonts::OCWNT_ListOfMFTFonts(WNT_ListOfMFTFonts* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCWNT_ListOfMFTFonts::OCWNT_ListOfMFTFonts(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new WNT_ListOfMFTFonts(Low, Up);
}

OCWNT_ListOfMFTFonts::OCWNT_ListOfMFTFonts(OCNaroWrappers::OCMFT_FontManager^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new WNT_ListOfMFTFonts(*((Handle_MFT_FontManager*)Item->Handle), Low, Up);
}

 void OCWNT_ListOfMFTFonts::Init(OCNaroWrappers::OCMFT_FontManager^ V)
{
  ((WNT_ListOfMFTFonts*)nativeHandle)->Init(*((Handle_MFT_FontManager*)V->Handle));
}

 System::Boolean OCWNT_ListOfMFTFonts::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((WNT_ListOfMFTFonts*)nativeHandle)->IsAllocated());
}

OCWNT_ListOfMFTFonts^ OCWNT_ListOfMFTFonts::Assign(OCNaroWrappers::OCWNT_ListOfMFTFonts^ Other)
{
  WNT_ListOfMFTFonts* tmp = new WNT_ListOfMFTFonts(0, 0);
  *tmp = ((WNT_ListOfMFTFonts*)nativeHandle)->Assign(*((WNT_ListOfMFTFonts*)Other->Handle));
  return gcnew OCWNT_ListOfMFTFonts(tmp);
}

 Standard_Integer OCWNT_ListOfMFTFonts::Length()
{
  return ((WNT_ListOfMFTFonts*)nativeHandle)->Length();
}

 Standard_Integer OCWNT_ListOfMFTFonts::Lower()
{
  return ((WNT_ListOfMFTFonts*)nativeHandle)->Lower();
}

 Standard_Integer OCWNT_ListOfMFTFonts::Upper()
{
  return ((WNT_ListOfMFTFonts*)nativeHandle)->Upper();
}

 void OCWNT_ListOfMFTFonts::SetValue(Standard_Integer Index, OCNaroWrappers::OCMFT_FontManager^ Value)
{
  ((WNT_ListOfMFTFonts*)nativeHandle)->SetValue(Index, *((Handle_MFT_FontManager*)Value->Handle));
}

OCMFT_FontManager^ OCWNT_ListOfMFTFonts::Value(Standard_Integer Index)
{
  Handle(MFT_FontManager) tmp = ((WNT_ListOfMFTFonts*)nativeHandle)->Value(Index);
  return gcnew OCMFT_FontManager(&tmp);
}

OCMFT_FontManager^ OCWNT_ListOfMFTFonts::ChangeValue(Standard_Integer Index)
{
  Handle(MFT_FontManager) tmp = ((WNT_ListOfMFTFonts*)nativeHandle)->ChangeValue(Index);
  return gcnew OCMFT_FontManager(&tmp);
}


