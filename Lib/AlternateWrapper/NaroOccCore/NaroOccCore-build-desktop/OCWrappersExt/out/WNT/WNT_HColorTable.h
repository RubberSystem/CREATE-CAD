// File generated by CPPExt (Transient)
//
#ifndef _WNT_HColorTable_OCWrappers_HeaderFile
#define _WNT_HColorTable_OCWrappers_HeaderFile

// include the wrapped class
#include <WNT_HColorTable.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "WNT_ColorTable.h"


namespace OCNaroWrappers
{

ref class OCWNT_ColorTable;



public ref class OCWNT_HColorTable : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCWNT_HColorTable(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCWNT_HColorTable(Handle(WNT_HColorTable)* nativeHandle);

// Methods PUBLIC


OCWNT_HColorTable(Standard_Integer Low, Standard_Integer Up);


OCWNT_HColorTable(Standard_Integer Low, Standard_Integer Up, WNT_ColorRef V);


 /*instead*/  void Init(WNT_ColorRef V) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, WNT_ColorRef Value) ;


 /*instead*/  WNT_ColorRef Value(Standard_Integer Index) ;


 /*instead*/  WNT_ColorRef ChangeValue(Standard_Integer Index) ;


 /*instead*/  OCWNT_ColorTable^ Array1() ;


 /*instead*/  OCWNT_ColorTable^ ChangeArray1() ;

~OCWNT_HColorTable()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
