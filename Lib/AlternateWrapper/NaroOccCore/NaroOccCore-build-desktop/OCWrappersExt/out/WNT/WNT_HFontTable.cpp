// File generated by CPPExt (CPP file)
//

#include "WNT_HFontTable.h"
#include "../Converter.h"
#include "WNT_FontMapEntry.h"
#include "WNT_FontTable.h"


using namespace OCNaroWrappers;

OCWNT_HFontTable::OCWNT_HFontTable(Handle(WNT_HFontTable)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_WNT_HFontTable(*nativeHandle);
}

OCWNT_HFontTable::OCWNT_HFontTable(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_WNT_HFontTable(new WNT_HFontTable(Low, Up));
}

OCWNT_HFontTable::OCWNT_HFontTable(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCWNT_FontMapEntry^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_WNT_HFontTable(new WNT_HFontTable(Low, Up, *((Handle_WNT_FontMapEntry*)V->Handle)));
}

 void OCWNT_HFontTable::Init(OCNaroWrappers::OCWNT_FontMapEntry^ V)
{
  (*((Handle_WNT_HFontTable*)nativeHandle))->Init(*((Handle_WNT_FontMapEntry*)V->Handle));
}

 Standard_Integer OCWNT_HFontTable::Length()
{
  return (*((Handle_WNT_HFontTable*)nativeHandle))->Length();
}

 Standard_Integer OCWNT_HFontTable::Lower()
{
  return (*((Handle_WNT_HFontTable*)nativeHandle))->Lower();
}

 Standard_Integer OCWNT_HFontTable::Upper()
{
  return (*((Handle_WNT_HFontTable*)nativeHandle))->Upper();
}

 void OCWNT_HFontTable::SetValue(Standard_Integer Index, OCNaroWrappers::OCWNT_FontMapEntry^ Value)
{
  (*((Handle_WNT_HFontTable*)nativeHandle))->SetValue(Index, *((Handle_WNT_FontMapEntry*)Value->Handle));
}

OCWNT_FontMapEntry^ OCWNT_HFontTable::Value(Standard_Integer Index)
{
  Handle(WNT_FontMapEntry) tmp = (*((Handle_WNT_HFontTable*)nativeHandle))->Value(Index);
  return gcnew OCWNT_FontMapEntry(&tmp);
}

OCWNT_FontMapEntry^ OCWNT_HFontTable::ChangeValue(Standard_Integer Index)
{
  Handle(WNT_FontMapEntry) tmp = (*((Handle_WNT_HFontTable*)nativeHandle))->ChangeValue(Index);
  return gcnew OCWNT_FontMapEntry(&tmp);
}

OCWNT_FontTable^ OCWNT_HFontTable::Array1()
{
  WNT_FontTable* tmp = new WNT_FontTable(0, 0);
  *tmp = (*((Handle_WNT_HFontTable*)nativeHandle))->Array1();
  return gcnew OCWNT_FontTable(tmp);
}

OCWNT_FontTable^ OCWNT_HFontTable::ChangeArray1()
{
  WNT_FontTable* tmp = new WNT_FontTable(0, 0);
  *tmp = (*((Handle_WNT_HFontTable*)nativeHandle))->ChangeArray1();
  return gcnew OCWNT_FontTable(tmp);
}


