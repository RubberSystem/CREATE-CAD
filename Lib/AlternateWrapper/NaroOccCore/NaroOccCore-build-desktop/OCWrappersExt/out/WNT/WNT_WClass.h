// File generated by CPPExt (Transient)
//
#ifndef _WNT_WClass_OCWrappers_HeaderFile
#define _WNT_WClass_OCWrappers_HeaderFile

// include the wrapped class
#include <WNT_WClass.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCWNT_Window;


//! This class defines a Windows NT window class. <br>
//!          A window in Windows NT is always created based on a <br>
//!          window class. The window class identifies the window <br>
//!          procedure that processes messages to the window. Each <br>
//!          window class has unique name ( character string ). More <br>
//!          than one window can be created based on a single window <br>
//!          class. For example, all button windows in Windows NT <br>
//!          are created based on the same window class. The window <br>
//!          class defines the window procedure and some other <br>
//!          characteristics ( background, mouse cursor shape etc. ) <br>
//!          of the windows that are created based on that class. <br>
//!          When we create a window, we define additional <br>
//!          characteristics of the window that are unique to that <br>
//!          window. So, we have to create and register window <br>
//!          class before creation of any window. Of course, it's possible <br>
//!          to create a new window class for each window inside <br>
//!          the Window class and do not use the WClass at all. <br>
//!          We implemented this class for sake of flexibility of <br>
//!          event processing. <br>
public ref class OCWNT_WClass : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCWNT_WClass(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCWNT_WClass(Handle(WNT_WClass)* nativeHandle);

// Methods PUBLIC

//! Creates a Windows NT window class and registers it. <br>
OCWNT_WClass(System::String^ aClassName, Standard_Address aWndProc, WNT_Uint aStyle, Standard_Integer aClassExtra, Standard_Integer aWindowExtra, System::IntPtr aCursor, System::IntPtr anIcon, System::String^ aMenuName);

//! Returns address of window procedure. <br>
 /*instead*/  Standard_Address WndProc() ;

//! Returns a class name. <br>
 /*instead*/  System::String^ Name() ;

//! Returns a program instance handle. <br>
 /*instead*/  System::IntPtr Instance() ;

~OCWNT_WClass()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
