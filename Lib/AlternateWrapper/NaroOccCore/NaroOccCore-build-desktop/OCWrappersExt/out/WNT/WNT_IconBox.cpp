// File generated by CPPExt (CPP file)
//

#include "WNT_IconBox.h"
#include "../Converter.h"
#include "WNT_GraphicDevice.h"
#include "WNT_Window.h"


using namespace OCNaroWrappers;

OCWNT_IconBox::OCWNT_IconBox(Handle(WNT_IconBox)* nativeHandle) : OCWNT_Window((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_WNT_IconBox(*nativeHandle);
}

OCWNT_IconBox::OCWNT_IconBox(OCNaroWrappers::OCWNT_GraphicDevice^ aDevice, System::String^ aName, WNT_Dword aStyle, Standard_Real Xc, Standard_Real Yc, OCQuantity_NameOfColor aBkColor) : OCWNT_Window((OCDummy^)nullptr)

{
  nativeHandle = new Handle_WNT_IconBox(new WNT_IconBox(*((Handle_WNT_GraphicDevice*)aDevice->Handle), OCConverter::StringToStandardCString(aName), aStyle, Xc, Yc, (Quantity_NameOfColor)aBkColor));
}

 Standard_Integer OCWNT_IconBox::LoadIcons(System::String^ Name)
{
  return (*((Handle_WNT_IconBox*)nativeHandle))->LoadIcons(OCConverter::StringToStandardCString(Name));
}

 void OCWNT_IconBox::Show()
{
  (*((Handle_WNT_IconBox*)nativeHandle))->Show();
}

 Standard_Integer OCWNT_IconBox::UnloadIcons(System::String^ Name)
{
  return (*((Handle_WNT_IconBox*)nativeHandle))->UnloadIcons(OCConverter::StringToStandardCString(Name));
}

 void OCWNT_IconBox::AddIcon(OCNaroWrappers::OCWNT_Window^ W, System::String^ Name, Standard_Integer aWidth, Standard_Integer aHeight)
{
  (*((Handle_WNT_IconBox*)nativeHandle))->AddIcon(*((Handle_WNT_Window*)W->Handle), OCConverter::StringToStandardCString(Name), aWidth, aHeight);
}

 Standard_Integer OCWNT_IconBox::SaveIcons()
{
  return (*((Handle_WNT_IconBox*)nativeHandle))->SaveIcons();
}

 void OCWNT_IconBox::SetDim(Standard_Integer aWidth, Standard_Integer aHeight)
{
  (*((Handle_WNT_IconBox*)nativeHandle))->SetDim(aWidth, aHeight);
}

 Standard_Integer OCWNT_IconBox::IconNumber()
{
  return (*((Handle_WNT_IconBox*)nativeHandle))->IconNumber();
}

 System::String^ OCWNT_IconBox::IconName(Standard_Integer Index)
{
  return OCConverter::StandardCStringToString((*((Handle_WNT_IconBox*)nativeHandle))->IconName(Index));
}

 System::Boolean OCWNT_IconBox::IconSize(System::String^ Name, Standard_Integer& Width, Standard_Integer& Height)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_WNT_IconBox*)nativeHandle))->IconSize(OCConverter::StringToStandardCString(Name), Width, Height));
}

 System::IntPtr OCWNT_IconBox::IconPixmap(System::String^ Name)
{
  return System::IntPtr((*((Handle_WNT_IconBox*)nativeHandle))->IconPixmap(OCConverter::StringToStandardCString(Name)));
}

 System::IntPtr OCWNT_IconBox::IconPixmap(System::String^ Name, Standard_Integer Width, Standard_Integer Height)
{
  return System::IntPtr((*((Handle_WNT_IconBox*)nativeHandle))->IconPixmap(OCConverter::StringToStandardCString(Name), Width, Height));
}

 WNT_Long OCWNT_IconBox::HandleEvent(System::IntPtr hwnd, WNT_Uint uMsg, WNT_Dword wParam, WNT_Dword lParam)
{
  return (*((Handle_WNT_IconBox*)nativeHandle))->HandleEvent(hwnd.ToPointer(), uMsg, wParam, lParam);
}


