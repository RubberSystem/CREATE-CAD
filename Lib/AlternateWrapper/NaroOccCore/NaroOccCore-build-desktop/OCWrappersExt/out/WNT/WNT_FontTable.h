// File generated by CPPExt (MPV)
//
#ifndef _WNT_FontTable_OCWrappers_HeaderFile
#define _WNT_FontTable_OCWrappers_HeaderFile

// include native header
#include <WNT_FontTable.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCWNT_FontMapEntry;



public ref class OCWNT_FontTable  {

protected:
  WNT_FontTable* nativeHandle;
  OCWNT_FontTable(OCDummy^) {};

public:
  property WNT_FontTable* Handle
  {
    WNT_FontTable* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCWNT_FontTable(WNT_FontTable* nativeHandle);

// Methods PUBLIC


OCWNT_FontTable(Standard_Integer Low, Standard_Integer Up);


OCWNT_FontTable(OCNaroWrappers::OCWNT_FontMapEntry^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCWNT_FontMapEntry^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCWNT_FontTable^ Assign(OCNaroWrappers::OCWNT_FontTable^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCWNT_FontMapEntry^ Value) ;


 /*instead*/  OCWNT_FontMapEntry^ Value(Standard_Integer Index) ;


 /*instead*/  OCWNT_FontMapEntry^ ChangeValue(Standard_Integer Index) ;

~OCWNT_FontTable()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
