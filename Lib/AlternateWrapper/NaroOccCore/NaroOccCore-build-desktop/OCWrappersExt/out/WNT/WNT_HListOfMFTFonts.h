// File generated by CPPExt (Transient)
//
#ifndef _WNT_HListOfMFTFonts_OCWrappers_HeaderFile
#define _WNT_HListOfMFTFonts_OCWrappers_HeaderFile

// include the wrapped class
#include <WNT_HListOfMFTFonts.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "WNT_ListOfMFTFonts.h"


namespace OCNaroWrappers
{

ref class OCMFT_FontManager;
ref class OCWNT_ListOfMFTFonts;



public ref class OCWNT_HListOfMFTFonts : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCWNT_HListOfMFTFonts(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCWNT_HListOfMFTFonts(Handle(WNT_HListOfMFTFonts)* nativeHandle);

// Methods PUBLIC


OCWNT_HListOfMFTFonts(Standard_Integer Low, Standard_Integer Up);


OCWNT_HListOfMFTFonts(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCMFT_FontManager^ V);


 /*instead*/  void Init(OCNaroWrappers::OCMFT_FontManager^ V) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCMFT_FontManager^ Value) ;


 /*instead*/  OCMFT_FontManager^ Value(Standard_Integer Index) ;


 /*instead*/  OCMFT_FontManager^ ChangeValue(Standard_Integer Index) ;


 /*instead*/  OCWNT_ListOfMFTFonts^ Array1() ;


 /*instead*/  OCWNT_ListOfMFTFonts^ ChangeArray1() ;

~OCWNT_HListOfMFTFonts()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
