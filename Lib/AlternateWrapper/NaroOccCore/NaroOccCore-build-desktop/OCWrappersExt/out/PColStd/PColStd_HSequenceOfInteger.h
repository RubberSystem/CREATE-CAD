// File generated by CPPExt (Transient)
//
#ifndef _PColStd_HSequenceOfInteger_OCWrappers_HeaderFile
#define _PColStd_HSequenceOfInteger_OCWrappers_HeaderFile

// include the wrapped class
#include <PColStd_HSequenceOfInteger.hxx>
#include "../Converter.h"

#include "../Standard/Standard_Persistent.h"



namespace OCNaroWrappers
{

ref class OCPColStd_SeqNodeOfHSequenceOfInteger;
ref class OCPColStd_SeqExplorerOfHSequenceOfInteger;
ref class OCStandard_Persistent;



public ref class OCPColStd_HSequenceOfInteger : OCStandard_Persistent {

protected:
  // dummy constructor;
  OCPColStd_HSequenceOfInteger(OCDummy^) : OCStandard_Persistent((OCDummy^)nullptr) {};

public:

// constructor from native
OCPColStd_HSequenceOfInteger(Handle(PColStd_HSequenceOfInteger)* nativeHandle);

// Methods PUBLIC


OCPColStd_HSequenceOfInteger();


 /*instead*/  System::Boolean IsEmpty() ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer First() ;


 /*instead*/  Standard_Integer Last() ;


 /*instead*/  void Clear() ;


 /*instead*/  void Append(Standard_Integer T) ;


 /*instead*/  void Append(OCNaroWrappers::OCPColStd_HSequenceOfInteger^ S) ;


 /*instead*/  void Prepend(Standard_Integer T) ;


 /*instead*/  void Prepend(OCNaroWrappers::OCPColStd_HSequenceOfInteger^ S) ;


 /*instead*/  void Reverse() ;


 /*instead*/  void InsertBefore(Standard_Integer Index, Standard_Integer T) ;


 /*instead*/  void InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPColStd_HSequenceOfInteger^ S) ;


 /*instead*/  void InsertAfter(Standard_Integer Index, Standard_Integer T) ;


 /*instead*/  void InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPColStd_HSequenceOfInteger^ S) ;


 /*instead*/  void Exchange(Standard_Integer I, Standard_Integer J) ;


 /*instead*/  OCPColStd_HSequenceOfInteger^ SubSequence(Standard_Integer FromIndex, Standard_Integer ToIndex) ;


 /*instead*/  OCPColStd_HSequenceOfInteger^ Split(Standard_Integer Index) ;


 /*instead*/  void SetValue(Standard_Integer Index, Standard_Integer T) ;


 /*instead*/  Standard_Integer Value(Standard_Integer Index) ;


 /*instead*/  System::Boolean Contains(Standard_Integer T) ;


 /*instead*/  Standard_Integer Location(Standard_Integer N, Standard_Integer T, Standard_Integer FromIndex, Standard_Integer ToIndex) ;


 /*instead*/  Standard_Integer Location(Standard_Integer N, Standard_Integer T) ;


 /*instead*/  void Remove(Standard_Integer Index) ;


 /*instead*/  void Remove(Standard_Integer FromIndex, Standard_Integer ToIndex) ;


virtual /*instead*/  OCStandard_Persistent^ ShallowCopy() ;


virtual /*instead*/  void ShallowDump(Standard_OStream& s) override;

~OCPColStd_HSequenceOfInteger()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
