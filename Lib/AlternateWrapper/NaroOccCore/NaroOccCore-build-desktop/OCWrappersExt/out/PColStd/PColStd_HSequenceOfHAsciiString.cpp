// File generated by CPPExt (CPP file)
//

#include "PColStd_HSequenceOfHAsciiString.h"
#include "../Converter.h"
#include "PColStd_SeqNodeOfHSequenceOfHAsciiString.h"
#include "PColStd_SeqExplorerOfHSequenceOfHAsciiString.h"
#include "../PCollection/PCollection_HAsciiString.h"
#include "../Standard/Standard_Persistent.h"


using namespace OCNaroWrappers;

OCPColStd_HSequenceOfHAsciiString::OCPColStd_HSequenceOfHAsciiString(Handle(PColStd_HSequenceOfHAsciiString)* nativeHandle) : OCStandard_Persistent((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_PColStd_HSequenceOfHAsciiString(*nativeHandle);
}

OCPColStd_HSequenceOfHAsciiString::OCPColStd_HSequenceOfHAsciiString() : OCStandard_Persistent((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PColStd_HSequenceOfHAsciiString(new PColStd_HSequenceOfHAsciiString());
}

 System::Boolean OCPColStd_HSequenceOfHAsciiString::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCPColStd_HSequenceOfHAsciiString::Length()
{
  return (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Length();
}

OCPCollection_HAsciiString^ OCPColStd_HSequenceOfHAsciiString::First()
{
  Handle(PCollection_HAsciiString) tmp = (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->First();
  return gcnew OCPCollection_HAsciiString(&tmp);
}

OCPCollection_HAsciiString^ OCPColStd_HSequenceOfHAsciiString::Last()
{
  Handle(PCollection_HAsciiString) tmp = (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Last();
  return gcnew OCPCollection_HAsciiString(&tmp);
}

 void OCPColStd_HSequenceOfHAsciiString::Clear()
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Clear();
}

 void OCPColStd_HSequenceOfHAsciiString::Append(OCNaroWrappers::OCPCollection_HAsciiString^ T)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Append(*((Handle_PCollection_HAsciiString*)T->Handle));
}

 void OCPColStd_HSequenceOfHAsciiString::Append(OCNaroWrappers::OCPColStd_HSequenceOfHAsciiString^ S)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Append(*((Handle_PColStd_HSequenceOfHAsciiString*)S->Handle));
}

 void OCPColStd_HSequenceOfHAsciiString::Prepend(OCNaroWrappers::OCPCollection_HAsciiString^ T)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Prepend(*((Handle_PCollection_HAsciiString*)T->Handle));
}

 void OCPColStd_HSequenceOfHAsciiString::Prepend(OCNaroWrappers::OCPColStd_HSequenceOfHAsciiString^ S)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Prepend(*((Handle_PColStd_HSequenceOfHAsciiString*)S->Handle));
}

 void OCPColStd_HSequenceOfHAsciiString::Reverse()
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Reverse();
}

 void OCPColStd_HSequenceOfHAsciiString::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPCollection_HAsciiString^ T)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->InsertBefore(Index, *((Handle_PCollection_HAsciiString*)T->Handle));
}

 void OCPColStd_HSequenceOfHAsciiString::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCPColStd_HSequenceOfHAsciiString^ S)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->InsertBefore(Index, *((Handle_PColStd_HSequenceOfHAsciiString*)S->Handle));
}

 void OCPColStd_HSequenceOfHAsciiString::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPCollection_HAsciiString^ T)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->InsertAfter(Index, *((Handle_PCollection_HAsciiString*)T->Handle));
}

 void OCPColStd_HSequenceOfHAsciiString::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCPColStd_HSequenceOfHAsciiString^ S)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->InsertAfter(Index, *((Handle_PColStd_HSequenceOfHAsciiString*)S->Handle));
}

 void OCPColStd_HSequenceOfHAsciiString::Exchange(Standard_Integer I, Standard_Integer J)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Exchange(I, J);
}

OCPColStd_HSequenceOfHAsciiString^ OCPColStd_HSequenceOfHAsciiString::SubSequence(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  Handle(PColStd_HSequenceOfHAsciiString) tmp = (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->SubSequence(FromIndex, ToIndex);
  return gcnew OCPColStd_HSequenceOfHAsciiString(&tmp);
}

OCPColStd_HSequenceOfHAsciiString^ OCPColStd_HSequenceOfHAsciiString::Split(Standard_Integer Index)
{
  Handle(PColStd_HSequenceOfHAsciiString) tmp = (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Split(Index);
  return gcnew OCPColStd_HSequenceOfHAsciiString(&tmp);
}

 void OCPColStd_HSequenceOfHAsciiString::SetValue(Standard_Integer Index, OCNaroWrappers::OCPCollection_HAsciiString^ T)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->SetValue(Index, *((Handle_PCollection_HAsciiString*)T->Handle));
}

OCPCollection_HAsciiString^ OCPColStd_HSequenceOfHAsciiString::Value(Standard_Integer Index)
{
  Handle(PCollection_HAsciiString) tmp = (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Value(Index);
  return gcnew OCPCollection_HAsciiString(&tmp);
}

 System::Boolean OCPColStd_HSequenceOfHAsciiString::Contains(OCNaroWrappers::OCPCollection_HAsciiString^ T)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Contains(*((Handle_PCollection_HAsciiString*)T->Handle)));
}

 Standard_Integer OCPColStd_HSequenceOfHAsciiString::Location(Standard_Integer N, OCNaroWrappers::OCPCollection_HAsciiString^ T, Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  return (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Location(N, *((Handle_PCollection_HAsciiString*)T->Handle), FromIndex, ToIndex);
}

 Standard_Integer OCPColStd_HSequenceOfHAsciiString::Location(Standard_Integer N, OCNaroWrappers::OCPCollection_HAsciiString^ T)
{
  return (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Location(N, *((Handle_PCollection_HAsciiString*)T->Handle));
}

 void OCPColStd_HSequenceOfHAsciiString::Remove(Standard_Integer Index)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Remove(Index);
}

 void OCPColStd_HSequenceOfHAsciiString::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->Remove(FromIndex, ToIndex);
}

OCStandard_Persistent^ OCPColStd_HSequenceOfHAsciiString::ShallowCopy()
{
  Handle(Standard_Persistent) tmp = (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->ShallowCopy();
  return gcnew OCStandard_Persistent(&tmp);
}

 void OCPColStd_HSequenceOfHAsciiString::ShallowDump(Standard_OStream& s)
{
  (*((Handle_PColStd_HSequenceOfHAsciiString*)nativeHandle))->ShallowDump(s);
}


