// File generated by CPPExt (CPP file)
//

#include "PColStd_HArray1OfInteger.h"
#include "../Converter.h"
#include "PColStd_FieldOfHArray1OfInteger.h"
#include "PColStd_VArrayNodeOfFieldOfHArray1OfInteger.h"
#include "PColStd_VArrayTNodeOfFieldOfHArray1OfInteger.h"
#include "../Standard/Standard_Persistent.h"


using namespace OCNaroWrappers;

OCPColStd_HArray1OfInteger::OCPColStd_HArray1OfInteger(Handle(PColStd_HArray1OfInteger)* nativeHandle) : OCStandard_Persistent((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_PColStd_HArray1OfInteger(*nativeHandle);
}

OCPColStd_HArray1OfInteger::OCPColStd_HArray1OfInteger(Standard_Integer Low, Standard_Integer Up) : OCStandard_Persistent((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PColStd_HArray1OfInteger(new PColStd_HArray1OfInteger(Low, Up));
}

OCPColStd_HArray1OfInteger::OCPColStd_HArray1OfInteger(Standard_Integer Low, Standard_Integer Up, Standard_Integer V) : OCStandard_Persistent((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PColStd_HArray1OfInteger(new PColStd_HArray1OfInteger(Low, Up, V));
}

 Standard_Integer OCPColStd_HArray1OfInteger::Length()
{
  return (*((Handle_PColStd_HArray1OfInteger*)nativeHandle))->Length();
}

 Standard_Integer OCPColStd_HArray1OfInteger::Lower()
{
  return (*((Handle_PColStd_HArray1OfInteger*)nativeHandle))->Lower();
}

 void OCPColStd_HArray1OfInteger::SetValue(Standard_Integer Index, Standard_Integer Value)
{
  (*((Handle_PColStd_HArray1OfInteger*)nativeHandle))->SetValue(Index, Value);
}

 Standard_Integer OCPColStd_HArray1OfInteger::Upper()
{
  return (*((Handle_PColStd_HArray1OfInteger*)nativeHandle))->Upper();
}

 Standard_Integer OCPColStd_HArray1OfInteger::Value(Standard_Integer Index)
{
  return (*((Handle_PColStd_HArray1OfInteger*)nativeHandle))->Value(Index);
}

OCStandard_Persistent^ OCPColStd_HArray1OfInteger::ShallowCopy()
{
  Handle(Standard_Persistent) tmp = (*((Handle_PColStd_HArray1OfInteger*)nativeHandle))->ShallowCopy();
  return gcnew OCStandard_Persistent(&tmp);
}

 void OCPColStd_HArray1OfInteger::ShallowDump(Standard_OStream& s)
{
  (*((Handle_PColStd_HArray1OfInteger*)nativeHandle))->ShallowDump(s);
}


