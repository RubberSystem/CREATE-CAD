// File generated by CPPExt (MPV)
//
#ifndef _PColStd_SeqExplorerOfHSequenceOfInteger_OCWrappers_HeaderFile
#define _PColStd_SeqExplorerOfHSequenceOfInteger_OCWrappers_HeaderFile

// include native header
#include <PColStd_SeqExplorerOfHSequenceOfInteger.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCPColStd_SeqNodeOfHSequenceOfInteger;
ref class OCPColStd_HSequenceOfInteger;



public ref class OCPColStd_SeqExplorerOfHSequenceOfInteger  {

protected:
  PColStd_SeqExplorerOfHSequenceOfInteger* nativeHandle;
  OCPColStd_SeqExplorerOfHSequenceOfInteger(OCDummy^) {};

public:
  property PColStd_SeqExplorerOfHSequenceOfInteger* Handle
  {
    PColStd_SeqExplorerOfHSequenceOfInteger* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCPColStd_SeqExplorerOfHSequenceOfInteger(PColStd_SeqExplorerOfHSequenceOfInteger* nativeHandle);

// Methods PUBLIC


OCPColStd_SeqExplorerOfHSequenceOfInteger(OCNaroWrappers::OCPColStd_HSequenceOfInteger^ S);


 /*instead*/  Standard_Integer Value(Standard_Integer Index) ;


 /*instead*/  System::Boolean Contains(Standard_Integer T) ;


 /*instead*/  Standard_Integer Location(Standard_Integer N, Standard_Integer T, Standard_Integer FromIndex, Standard_Integer ToIndex) ;


 /*instead*/  Standard_Integer Location(Standard_Integer N, Standard_Integer T) ;

~OCPColStd_SeqExplorerOfHSequenceOfInteger()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
