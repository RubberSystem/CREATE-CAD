// File generated by CPPExt (MPV)
//
#ifndef _PColStd_HashExtendedString_OCWrappers_HeaderFile
#define _PColStd_HashExtendedString_OCWrappers_HeaderFile

// include native header
#include <PColStd_HashExtendedString.hxx>
#include "../Converter.h"

#include "PColStd_HOfExtendedString.h"

#include "PColStd_HOfExtendedString.h"


namespace OCNaroWrappers
{

ref class OCPCollection_HExtendedString;


//! Redefines the HashCode for HExtendedString <br>
public ref class OCPColStd_HashExtendedString  : public OCPColStd_HOfExtendedString {

protected:
  // dummy constructor;
  OCPColStd_HashExtendedString(OCDummy^) : OCPColStd_HOfExtendedString((OCDummy^)nullptr) {};

public:

// constructor from native
OCPColStd_HashExtendedString(PColStd_HashExtendedString* nativeHandle);

// Methods PUBLIC

//! Empty constructor. <br>
OCPColStd_HashExtendedString();

//! Returns a hashcod value of key bounded by Upper. <br>
virtual /*instead*/  Standard_Integer HashCode(OCNaroWrappers::OCPCollection_HExtendedString^ MyKey, Standard_Integer Upper) override;

//! Compare two keys and returns a boolean value <br>
virtual /*instead*/  System::Boolean Compare(OCNaroWrappers::OCPCollection_HExtendedString^ One, OCNaroWrappers::OCPCollection_HExtendedString^ Two) override;

~OCPColStd_HashExtendedString()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
