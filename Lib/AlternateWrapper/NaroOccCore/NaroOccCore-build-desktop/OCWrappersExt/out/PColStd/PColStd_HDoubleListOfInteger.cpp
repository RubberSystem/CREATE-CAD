// File generated by CPPExt (CPP file)
//

#include "PColStd_HDoubleListOfInteger.h"
#include "../Converter.h"
#include "../Standard/Standard_Persistent.h"


using namespace OCNaroWrappers;

OCPColStd_HDoubleListOfInteger::OCPColStd_HDoubleListOfInteger(Handle(PColStd_HDoubleListOfInteger)* nativeHandle) : OCPMMgt_PManaged((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_PColStd_HDoubleListOfInteger(*nativeHandle);
}

OCPColStd_HDoubleListOfInteger::OCPColStd_HDoubleListOfInteger() : OCPMMgt_PManaged((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PColStd_HDoubleListOfInteger(new PColStd_HDoubleListOfInteger());
}

 System::Boolean OCPColStd_HDoubleListOfInteger::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->IsEmpty());
}

OCPColStd_HDoubleListOfInteger^ OCPColStd_HDoubleListOfInteger::Construct(Standard_Integer T)
{
  Handle(PColStd_HDoubleListOfInteger) tmp = (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->Construct(T);
  return gcnew OCPColStd_HDoubleListOfInteger(&tmp);
}

 Standard_Integer OCPColStd_HDoubleListOfInteger::Value()
{
  return (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->Value();
}

OCPColStd_HDoubleListOfInteger^ OCPColStd_HDoubleListOfInteger::Tail()
{
  Handle(PColStd_HDoubleListOfInteger) tmp = (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->Tail();
  return gcnew OCPColStd_HDoubleListOfInteger(&tmp);
}

OCPColStd_HDoubleListOfInteger^ OCPColStd_HDoubleListOfInteger::Previous()
{
  Handle(PColStd_HDoubleListOfInteger) tmp = (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->Previous();
  return gcnew OCPColStd_HDoubleListOfInteger(&tmp);
}

 void OCPColStd_HDoubleListOfInteger::SwapTail(OCNaroWrappers::OCPColStd_HDoubleListOfInteger^ WithList)
{
  (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->SwapTail(*((Handle_PColStd_HDoubleListOfInteger*)WithList->Handle));
}

 void OCPColStd_HDoubleListOfInteger::SetValue(Standard_Integer T)
{
  (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->SetValue(T);
}

 void OCPColStd_HDoubleListOfInteger::ChangeBackPointer(OCNaroWrappers::OCPColStd_HDoubleListOfInteger^ BackPointer)
{
  (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->ChangeBackPointer(*((Handle_PColStd_HDoubleListOfInteger*)BackPointer->Handle));
}

 void OCPColStd_HDoubleListOfInteger::ChangeForwardPointer(OCNaroWrappers::OCPColStd_HDoubleListOfInteger^ ForwardPointer)
{
  (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->ChangeForwardPointer(*((Handle_PColStd_HDoubleListOfInteger*)ForwardPointer->Handle));
}

OCStandard_Persistent^ OCPColStd_HDoubleListOfInteger::ShallowCopy()
{
  Handle(Standard_Persistent) tmp = (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->ShallowCopy();
  return gcnew OCStandard_Persistent(&tmp);
}

 void OCPColStd_HDoubleListOfInteger::ShallowDump(Standard_OStream& s)
{
  (*((Handle_PColStd_HDoubleListOfInteger*)nativeHandle))->ShallowDump(s);
}


