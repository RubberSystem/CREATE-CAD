// File generated by CPPExt (CPP file)
//

#include "PColStd_HSingleListOfPersistent.h"
#include "../Converter.h"
#include "../Standard/Standard_Persistent.h"


using namespace OCNaroWrappers;

OCPColStd_HSingleListOfPersistent::OCPColStd_HSingleListOfPersistent(Handle(PColStd_HSingleListOfPersistent)* nativeHandle) : OCPMMgt_PManaged((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_PColStd_HSingleListOfPersistent(*nativeHandle);
}

OCPColStd_HSingleListOfPersistent::OCPColStd_HSingleListOfPersistent() : OCPMMgt_PManaged((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PColStd_HSingleListOfPersistent(new PColStd_HSingleListOfPersistent());
}

 System::Boolean OCPColStd_HSingleListOfPersistent::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_PColStd_HSingleListOfPersistent*)nativeHandle))->IsEmpty());
}

OCPColStd_HSingleListOfPersistent^ OCPColStd_HSingleListOfPersistent::Construct(OCNaroWrappers::OCStandard_Persistent^ T)
{
  Handle(PColStd_HSingleListOfPersistent) tmp = (*((Handle_PColStd_HSingleListOfPersistent*)nativeHandle))->Construct(*((Handle_Standard_Persistent*)T->Handle));
  return gcnew OCPColStd_HSingleListOfPersistent(&tmp);
}

OCStandard_Persistent^ OCPColStd_HSingleListOfPersistent::Value()
{
  Handle(Standard_Persistent) tmp = (*((Handle_PColStd_HSingleListOfPersistent*)nativeHandle))->Value();
  return gcnew OCStandard_Persistent(&tmp);
}

OCPColStd_HSingleListOfPersistent^ OCPColStd_HSingleListOfPersistent::Tail()
{
  Handle(PColStd_HSingleListOfPersistent) tmp = (*((Handle_PColStd_HSingleListOfPersistent*)nativeHandle))->Tail();
  return gcnew OCPColStd_HSingleListOfPersistent(&tmp);
}

 void OCPColStd_HSingleListOfPersistent::SwapTail(OCNaroWrappers::OCPColStd_HSingleListOfPersistent^ WithList)
{
  (*((Handle_PColStd_HSingleListOfPersistent*)nativeHandle))->SwapTail(*((Handle_PColStd_HSingleListOfPersistent*)WithList->Handle));
}

 void OCPColStd_HSingleListOfPersistent::SetValue(OCNaroWrappers::OCStandard_Persistent^ T)
{
  (*((Handle_PColStd_HSingleListOfPersistent*)nativeHandle))->SetValue(*((Handle_Standard_Persistent*)T->Handle));
}

 void OCPColStd_HSingleListOfPersistent::ChangeForwardPointer(OCNaroWrappers::OCPColStd_HSingleListOfPersistent^ ForwardPointer)
{
  (*((Handle_PColStd_HSingleListOfPersistent*)nativeHandle))->ChangeForwardPointer(*((Handle_PColStd_HSingleListOfPersistent*)ForwardPointer->Handle));
}

OCStandard_Persistent^ OCPColStd_HSingleListOfPersistent::ShallowCopy()
{
  Handle(Standard_Persistent) tmp = (*((Handle_PColStd_HSingleListOfPersistent*)nativeHandle))->ShallowCopy();
  return gcnew OCStandard_Persistent(&tmp);
}

 void OCPColStd_HSingleListOfPersistent::ShallowDump(Standard_OStream& s)
{
  (*((Handle_PColStd_HSingleListOfPersistent*)nativeHandle))->ShallowDump(s);
}


