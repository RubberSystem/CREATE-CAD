// File generated by CPPExt (CPP file)
//

#include "PColStd_HArray1OfReal.h"
#include "../Converter.h"
#include "PColStd_FieldOfHArray1OfReal.h"
#include "PColStd_VArrayNodeOfFieldOfHArray1OfReal.h"
#include "PColStd_VArrayTNodeOfFieldOfHArray1OfReal.h"
#include "../Standard/Standard_Persistent.h"


using namespace OCNaroWrappers;

OCPColStd_HArray1OfReal::OCPColStd_HArray1OfReal(Handle(PColStd_HArray1OfReal)* nativeHandle) : OCStandard_Persistent((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_PColStd_HArray1OfReal(*nativeHandle);
}

OCPColStd_HArray1OfReal::OCPColStd_HArray1OfReal(Standard_Integer Low, Standard_Integer Up) : OCStandard_Persistent((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PColStd_HArray1OfReal(new PColStd_HArray1OfReal(Low, Up));
}

OCPColStd_HArray1OfReal::OCPColStd_HArray1OfReal(Standard_Integer Low, Standard_Integer Up, Standard_Real V) : OCStandard_Persistent((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PColStd_HArray1OfReal(new PColStd_HArray1OfReal(Low, Up, V));
}

 Standard_Integer OCPColStd_HArray1OfReal::Length()
{
  return (*((Handle_PColStd_HArray1OfReal*)nativeHandle))->Length();
}

 Standard_Integer OCPColStd_HArray1OfReal::Lower()
{
  return (*((Handle_PColStd_HArray1OfReal*)nativeHandle))->Lower();
}

 void OCPColStd_HArray1OfReal::SetValue(Standard_Integer Index, Standard_Real Value)
{
  (*((Handle_PColStd_HArray1OfReal*)nativeHandle))->SetValue(Index, Value);
}

 Standard_Integer OCPColStd_HArray1OfReal::Upper()
{
  return (*((Handle_PColStd_HArray1OfReal*)nativeHandle))->Upper();
}

 Standard_Real OCPColStd_HArray1OfReal::Value(Standard_Integer Index)
{
  return (*((Handle_PColStd_HArray1OfReal*)nativeHandle))->Value(Index);
}

OCStandard_Persistent^ OCPColStd_HArray1OfReal::ShallowCopy()
{
  Handle(Standard_Persistent) tmp = (*((Handle_PColStd_HArray1OfReal*)nativeHandle))->ShallowCopy();
  return gcnew OCStandard_Persistent(&tmp);
}

 void OCPColStd_HArray1OfReal::ShallowDump(Standard_OStream& s)
{
  (*((Handle_PColStd_HArray1OfReal*)nativeHandle))->ShallowDump(s);
}


