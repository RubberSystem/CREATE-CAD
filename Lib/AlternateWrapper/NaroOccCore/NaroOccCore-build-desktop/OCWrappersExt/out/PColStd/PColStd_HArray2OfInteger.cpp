// File generated by CPPExt (CPP file)
//

#include "PColStd_HArray2OfInteger.h"
#include "../Converter.h"
#include "PColStd_FieldOfHArray2OfInteger.h"
#include "PColStd_VArrayNodeOfFieldOfHArray2OfInteger.h"
#include "PColStd_VArrayTNodeOfFieldOfHArray2OfInteger.h"
#include "../Standard/Standard_Persistent.h"


using namespace OCNaroWrappers;

OCPColStd_HArray2OfInteger::OCPColStd_HArray2OfInteger(Handle(PColStd_HArray2OfInteger)* nativeHandle) : OCStandard_Persistent((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_PColStd_HArray2OfInteger(*nativeHandle);
}

OCPColStd_HArray2OfInteger::OCPColStd_HArray2OfInteger(Standard_Integer R1, Standard_Integer R2, Standard_Integer C1, Standard_Integer C2) : OCStandard_Persistent((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PColStd_HArray2OfInteger(new PColStd_HArray2OfInteger(R1, R2, C1, C2));
}

OCPColStd_HArray2OfInteger::OCPColStd_HArray2OfInteger(Standard_Integer R1, Standard_Integer R2, Standard_Integer C1, Standard_Integer C2, Standard_Integer V) : OCStandard_Persistent((OCDummy^)nullptr)

{
  nativeHandle = new Handle_PColStd_HArray2OfInteger(new PColStd_HArray2OfInteger(R1, R2, C1, C2, V));
}

 Standard_Integer OCPColStd_HArray2OfInteger::ColLength()
{
  return (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->ColLength();
}

 Standard_Integer OCPColStd_HArray2OfInteger::LowerCol()
{
  return (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->LowerCol();
}

 Standard_Integer OCPColStd_HArray2OfInteger::LowerRow()
{
  return (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->LowerRow();
}

 Standard_Integer OCPColStd_HArray2OfInteger::RowLength()
{
  return (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->RowLength();
}

 void OCPColStd_HArray2OfInteger::SetValue(Standard_Integer Row, Standard_Integer Col, Standard_Integer Value)
{
  (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->SetValue(Row, Col, Value);
}

 Standard_Integer OCPColStd_HArray2OfInteger::UpperCol()
{
  return (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->UpperCol();
}

 Standard_Integer OCPColStd_HArray2OfInteger::UpperRow()
{
  return (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->UpperRow();
}

 Standard_Integer OCPColStd_HArray2OfInteger::Value(Standard_Integer Row, Standard_Integer Col)
{
  return (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->Value(Row, Col);
}

OCStandard_Persistent^ OCPColStd_HArray2OfInteger::ShallowCopy()
{
  Handle(Standard_Persistent) tmp = (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->ShallowCopy();
  return gcnew OCStandard_Persistent(&tmp);
}

 void OCPColStd_HArray2OfInteger::ShallowDump(Standard_OStream& s)
{
  (*((Handle_PColStd_HArray2OfInteger*)nativeHandle))->ShallowDump(s);
}


