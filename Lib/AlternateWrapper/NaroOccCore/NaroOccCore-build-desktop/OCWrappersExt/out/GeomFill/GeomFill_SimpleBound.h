// File generated by CPPExt (Transient)
//
#ifndef _GeomFill_SimpleBound_OCWrappers_HeaderFile
#define _GeomFill_SimpleBound_OCWrappers_HeaderFile

// include the wrapped class
#include <GeomFill_SimpleBound.hxx>
#include "../Converter.h"

#include "GeomFill_Boundary.h"



namespace OCNaroWrappers
{

ref class OCAdaptor3d_HCurve;
ref class OCLaw_Function;
ref class OCgp_Pnt;
ref class OCgp_Vec;


//! Defines a 3d curve as a boundary for a <br>
//! GeomFill_ConstrainedFilling algorithm. <br>
//! This curve is unattached to an existing surface.D <br>
public ref class OCGeomFill_SimpleBound : OCGeomFill_Boundary {

protected:
  // dummy constructor;
  OCGeomFill_SimpleBound(OCDummy^) : OCGeomFill_Boundary((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeomFill_SimpleBound(Handle(GeomFill_SimpleBound)* nativeHandle);

// Methods PUBLIC


//! Constructs the boundary object defined by the 3d curve. <br>
//! The surface to be built along this boundary will be in the <br>
//! tolerance range defined by Tol3d. <br>
//! This object is to be used as a boundary for a <br>
//! GeomFill_ConstrainedFilling framework. <br>
//! Dummy is initialized but has no function in this class. <br>
//! Warning <br>
//! Curve is an adapted curve, that is, an object which is an interface between: <br>
//! -   the services provided by a 3D curve from the package Geom <br>
//! -   and those required of the curve by the computation <br>
//!   algorithm which uses it. <br>
//! The adapted curve is created in one of the following ways: <br>
//! -   First sequence: <br>
//! Handle(Geom_Curve) myCurve = ... ; <br>
//! Handle(GeomAdaptor_HCurve) <br>
//!     Curve = new <br>
//! GeomAdaptor_HCurve(myCurve); <br>
//! -   Second sequence: <br>
//! // Step 1 <br>
//! Handle(Geom_Curve) myCurve = ... ; <br>
//! GeomAdaptor_Curve Crv (myCurve); <br>
//! // Step 2 <br>
//! Handle(GeomAdaptor_HCurve) <br>
//!     Curve = new <br>
//! GeomAdaptor_HCurve(Crv); <br>
//! You use the second part of this sequence if you already <br>
//! have the adapted curve Crv. <br>
//! The boundary is then constructed with the Curve object: <br>
//! Standard_Real Tol = ... ; <br>
//! Standard_Real dummy = 0. ; <br>
//! myBoundary = GeomFill_SimpleBound <br>
//! (Curve,Tol,dummy); <br>
OCGeomFill_SimpleBound(OCNaroWrappers::OCAdaptor3d_HCurve^ Curve, Standard_Real Tol3d, Standard_Real Tolang);


 /*instead*/  OCgp_Pnt^ Value(Standard_Real U) ;


 /*instead*/  void D1(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P, OCNaroWrappers::OCgp_Vec^ V) ;


 /*instead*/  void Reparametrize(Standard_Real First, Standard_Real Last, System::Boolean HasDF, System::Boolean HasDL, Standard_Real DF, Standard_Real DL, System::Boolean Rev) ;


 /*instead*/  void Bounds(Standard_Real& First, Standard_Real& Last) ;


 /*instead*/  System::Boolean IsDegenerated() ;

~OCGeomFill_SimpleBound()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
