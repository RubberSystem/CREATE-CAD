// File generated by CPPExt (CPP file)
//

#include "GeomFill_NSections.h"
#include "../Converter.h"
#include "../Geom/Geom_BSplineSurface.h"
#include "../TColGeom/TColGeom_SequenceOfCurve.h"
#include "../TColStd/TColStd_SequenceOfReal.h"
#include "GeomFill_SequenceOfTrsf.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "../TColgp/TColgp_Array1OfVec.h"
#include "../TColStd/TColStd_Array1OfInteger.h"
#include "../gp/gp_Pnt.h"
#include "../Geom/Geom_Curve.h"


using namespace OCNaroWrappers;

OCGeomFill_NSections::OCGeomFill_NSections(Handle(GeomFill_NSections)* nativeHandle) : OCGeomFill_SectionLaw((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_GeomFill_NSections(*nativeHandle);
}

OCGeomFill_NSections::OCGeomFill_NSections(OCNaroWrappers::OCTColGeom_SequenceOfCurve^ NC) : OCGeomFill_SectionLaw((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomFill_NSections(new GeomFill_NSections(*((TColGeom_SequenceOfCurve*)NC->Handle)));
}

OCGeomFill_NSections::OCGeomFill_NSections(OCNaroWrappers::OCTColGeom_SequenceOfCurve^ NC, OCNaroWrappers::OCTColStd_SequenceOfReal^ NP) : OCGeomFill_SectionLaw((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomFill_NSections(new GeomFill_NSections(*((TColGeom_SequenceOfCurve*)NC->Handle), *((TColStd_SequenceOfReal*)NP->Handle)));
}

OCGeomFill_NSections::OCGeomFill_NSections(OCNaroWrappers::OCTColGeom_SequenceOfCurve^ NC, OCNaroWrappers::OCTColStd_SequenceOfReal^ NP, Standard_Real UF, Standard_Real UL) : OCGeomFill_SectionLaw((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomFill_NSections(new GeomFill_NSections(*((TColGeom_SequenceOfCurve*)NC->Handle), *((TColStd_SequenceOfReal*)NP->Handle), UF, UL));
}

OCGeomFill_NSections::OCGeomFill_NSections(OCNaroWrappers::OCTColGeom_SequenceOfCurve^ NC, OCNaroWrappers::OCTColStd_SequenceOfReal^ NP, Standard_Real UF, Standard_Real UL, Standard_Real VF, Standard_Real VL) : OCGeomFill_SectionLaw((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomFill_NSections(new GeomFill_NSections(*((TColGeom_SequenceOfCurve*)NC->Handle), *((TColStd_SequenceOfReal*)NP->Handle), UF, UL, VF, VL));
}

OCGeomFill_NSections::OCGeomFill_NSections(OCNaroWrappers::OCTColGeom_SequenceOfCurve^ NC, OCNaroWrappers::OCGeomFill_SequenceOfTrsf^ Trsfs, OCNaroWrappers::OCTColStd_SequenceOfReal^ NP, Standard_Real UF, Standard_Real UL, Standard_Real VF, Standard_Real VL, OCNaroWrappers::OCGeom_BSplineSurface^ Surf) : OCGeomFill_SectionLaw((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomFill_NSections(new GeomFill_NSections(*((TColGeom_SequenceOfCurve*)NC->Handle), *((GeomFill_SequenceOfTrsf*)Trsfs->Handle), *((TColStd_SequenceOfReal*)NP->Handle), UF, UL, VF, VL, *((Handle_Geom_BSplineSurface*)Surf->Handle)));
}

 System::Boolean OCGeomFill_NSections::D0(Standard_Real Param, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_NSections*)nativeHandle))->D0(Param, *((TColgp_Array1OfPnt*)Poles->Handle), *((TColStd_Array1OfReal*)Weigths->Handle)));
}

 System::Boolean OCGeomFill_NSections::D1(Standard_Real Param, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColgp_Array1OfVec^ DPoles, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths, OCNaroWrappers::OCTColStd_Array1OfReal^ DWeigths)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_NSections*)nativeHandle))->D1(Param, *((TColgp_Array1OfPnt*)Poles->Handle), *((TColgp_Array1OfVec*)DPoles->Handle), *((TColStd_Array1OfReal*)Weigths->Handle), *((TColStd_Array1OfReal*)DWeigths->Handle)));
}

 System::Boolean OCGeomFill_NSections::D2(Standard_Real Param, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColgp_Array1OfVec^ DPoles, OCNaroWrappers::OCTColgp_Array1OfVec^ D2Poles, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths, OCNaroWrappers::OCTColStd_Array1OfReal^ DWeigths, OCNaroWrappers::OCTColStd_Array1OfReal^ D2Weigths)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_NSections*)nativeHandle))->D2(Param, *((TColgp_Array1OfPnt*)Poles->Handle), *((TColgp_Array1OfVec*)DPoles->Handle), *((TColgp_Array1OfVec*)D2Poles->Handle), *((TColStd_Array1OfReal*)Weigths->Handle), *((TColStd_Array1OfReal*)DWeigths->Handle), *((TColStd_Array1OfReal*)D2Weigths->Handle)));
}

 void OCGeomFill_NSections::SetSurface(OCNaroWrappers::OCGeom_BSplineSurface^ RefSurf)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->SetSurface(*((Handle_Geom_BSplineSurface*)RefSurf->Handle));
}

 void OCGeomFill_NSections::ComputeSurface()
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->ComputeSurface();
}

OCGeom_BSplineSurface^ OCGeomFill_NSections::BSplineSurface()
{
  Handle(Geom_BSplineSurface) tmp = (*((Handle_GeomFill_NSections*)nativeHandle))->BSplineSurface();
  return gcnew OCGeom_BSplineSurface(&tmp);
}

 void OCGeomFill_NSections::SectionShape(Standard_Integer& NbPoles, Standard_Integer& NbKnots, Standard_Integer& Degree)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->SectionShape(NbPoles, NbKnots, Degree);
}

 void OCGeomFill_NSections::Knots(OCNaroWrappers::OCTColStd_Array1OfReal^ TKnots)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->Knots(*((TColStd_Array1OfReal*)TKnots->Handle));
}

 void OCGeomFill_NSections::Mults(OCNaroWrappers::OCTColStd_Array1OfInteger^ TMults)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->Mults(*((TColStd_Array1OfInteger*)TMults->Handle));
}

 System::Boolean OCGeomFill_NSections::IsRational()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_NSections*)nativeHandle))->IsRational());
}

 System::Boolean OCGeomFill_NSections::IsUPeriodic()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_NSections*)nativeHandle))->IsUPeriodic());
}

 System::Boolean OCGeomFill_NSections::IsVPeriodic()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_NSections*)nativeHandle))->IsVPeriodic());
}

 Standard_Integer OCGeomFill_NSections::NbIntervals(OCGeomAbs_Shape S)
{
  return (*((Handle_GeomFill_NSections*)nativeHandle))->NbIntervals((GeomAbs_Shape)S);
}

 void OCGeomFill_NSections::Intervals(OCNaroWrappers::OCTColStd_Array1OfReal^ T, OCGeomAbs_Shape S)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->Intervals(*((TColStd_Array1OfReal*)T->Handle), (GeomAbs_Shape)S);
}

 void OCGeomFill_NSections::SetInterval(Standard_Real First, Standard_Real Last)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->SetInterval(First, Last);
}

 void OCGeomFill_NSections::GetInterval(Standard_Real& First, Standard_Real& Last)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->GetInterval(First, Last);
}

 void OCGeomFill_NSections::GetDomain(Standard_Real& First, Standard_Real& Last)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->GetDomain(First, Last);
}

 void OCGeomFill_NSections::GetTolerance(Standard_Real BoundTol, Standard_Real SurfTol, Standard_Real AngleTol, OCNaroWrappers::OCTColStd_Array1OfReal^ Tol3d)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->GetTolerance(BoundTol, SurfTol, AngleTol, *((TColStd_Array1OfReal*)Tol3d->Handle));
}

OCgp_Pnt^ OCGeomFill_NSections::BarycentreOfSurf()
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_GeomFill_NSections*)nativeHandle))->BarycentreOfSurf();
  return gcnew OCgp_Pnt(tmp);
}

 Standard_Real OCGeomFill_NSections::MaximalSection()
{
  return (*((Handle_GeomFill_NSections*)nativeHandle))->MaximalSection();
}

 void OCGeomFill_NSections::GetMinimalWeight(OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths)
{
  (*((Handle_GeomFill_NSections*)nativeHandle))->GetMinimalWeight(*((TColStd_Array1OfReal*)Weigths->Handle));
}

 System::Boolean OCGeomFill_NSections::IsConstant(Standard_Real& Error)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_NSections*)nativeHandle))->IsConstant(Error));
}

OCGeom_Curve^ OCGeomFill_NSections::ConstantSection()
{
  Handle(Geom_Curve) tmp = (*((Handle_GeomFill_NSections*)nativeHandle))->ConstantSection();
  return gcnew OCGeom_Curve(&tmp);
}

 System::Boolean OCGeomFill_NSections::IsConicalLaw(Standard_Real& Error)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_NSections*)nativeHandle))->IsConicalLaw(Error));
}

OCGeom_Curve^ OCGeomFill_NSections::CirclSection(Standard_Real Param)
{
  Handle(Geom_Curve) tmp = (*((Handle_GeomFill_NSections*)nativeHandle))->CirclSection(Param);
  return gcnew OCGeom_Curve(&tmp);
}


