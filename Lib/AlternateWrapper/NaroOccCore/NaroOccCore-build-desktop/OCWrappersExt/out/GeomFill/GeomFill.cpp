// File generated by CPPExt (CPP file)
//

#include "GeomFill.h"
#include "../Converter.h"


using namespace OCNaroWrappers;



OCGeom_Surface^ OCGeomFill::Surface(OCNaroWrappers::OCGeom_Curve^ Curve1, OCNaroWrappers::OCGeom_Curve^ Curve2)
{
  Handle(Geom_Surface) tmp = GeomFill::Surface(*((Handle_Geom_Curve*)Curve1->Handle), *((Handle_Geom_Curve*)Curve2->Handle));
  return gcnew OCGeom_Surface(&tmp);
}

 void OCGeomFill::GetCircle(OCConvert_ParameterisationType TConv, OCNaroWrappers::OCgp_Vec^ ns1, OCNaroWrappers::OCgp_Vec^ ns2, OCNaroWrappers::OCgp_Vec^ nplan, OCNaroWrappers::OCgp_Pnt^ pt1, OCNaroWrappers::OCgp_Pnt^ pt2, Standard_Real Rayon, OCNaroWrappers::OCgp_Pnt^ Center, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths)
{
  GeomFill::GetCircle((Convert_ParameterisationType)TConv, *((gp_Vec*)ns1->Handle), *((gp_Vec*)ns2->Handle), *((gp_Vec*)nplan->Handle), *((gp_Pnt*)pt1->Handle), *((gp_Pnt*)pt2->Handle), Rayon, *((gp_Pnt*)Center->Handle), *((TColgp_Array1OfPnt*)Poles->Handle), *((TColStd_Array1OfReal*)Weigths->Handle));
}

 System::Boolean OCGeomFill::GetCircle(OCConvert_ParameterisationType TConv, OCNaroWrappers::OCgp_Vec^ ns1, OCNaroWrappers::OCgp_Vec^ ns2, OCNaroWrappers::OCgp_Vec^ dn1w, OCNaroWrappers::OCgp_Vec^ dn2w, OCNaroWrappers::OCgp_Vec^ nplan, OCNaroWrappers::OCgp_Vec^ dnplan, OCNaroWrappers::OCgp_Pnt^ pts1, OCNaroWrappers::OCgp_Pnt^ pts2, OCNaroWrappers::OCgp_Vec^ tang1, OCNaroWrappers::OCgp_Vec^ tang2, Standard_Real Rayon, Standard_Real DRayon, OCNaroWrappers::OCgp_Pnt^ Center, OCNaroWrappers::OCgp_Vec^ DCenter, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColgp_Array1OfVec^ DPoles, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths, OCNaroWrappers::OCTColStd_Array1OfReal^ DWeigths)
{
  return OCConverter::StandardBooleanToBoolean(GeomFill::GetCircle((Convert_ParameterisationType)TConv, *((gp_Vec*)ns1->Handle), *((gp_Vec*)ns2->Handle), *((gp_Vec*)dn1w->Handle), *((gp_Vec*)dn2w->Handle), *((gp_Vec*)nplan->Handle), *((gp_Vec*)dnplan->Handle), *((gp_Pnt*)pts1->Handle), *((gp_Pnt*)pts2->Handle), *((gp_Vec*)tang1->Handle), *((gp_Vec*)tang2->Handle), Rayon, DRayon, *((gp_Pnt*)Center->Handle), *((gp_Vec*)DCenter->Handle), *((TColgp_Array1OfPnt*)Poles->Handle), *((TColgp_Array1OfVec*)DPoles->Handle), *((TColStd_Array1OfReal*)Weigths->Handle), *((TColStd_Array1OfReal*)DWeigths->Handle)));
}

 System::Boolean OCGeomFill::GetCircle(OCConvert_ParameterisationType TConv, OCNaroWrappers::OCgp_Vec^ ns1, OCNaroWrappers::OCgp_Vec^ ns2, OCNaroWrappers::OCgp_Vec^ dn1w, OCNaroWrappers::OCgp_Vec^ dn2w, OCNaroWrappers::OCgp_Vec^ d2n1w, OCNaroWrappers::OCgp_Vec^ d2n2w, OCNaroWrappers::OCgp_Vec^ nplan, OCNaroWrappers::OCgp_Vec^ dnplan, OCNaroWrappers::OCgp_Vec^ d2nplan, OCNaroWrappers::OCgp_Pnt^ pts1, OCNaroWrappers::OCgp_Pnt^ pts2, OCNaroWrappers::OCgp_Vec^ tang1, OCNaroWrappers::OCgp_Vec^ tang2, OCNaroWrappers::OCgp_Vec^ Dtang1, OCNaroWrappers::OCgp_Vec^ Dtang2, Standard_Real Rayon, Standard_Real DRayon, Standard_Real D2Rayon, OCNaroWrappers::OCgp_Pnt^ Center, OCNaroWrappers::OCgp_Vec^ DCenter, OCNaroWrappers::OCgp_Vec^ D2Center, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColgp_Array1OfVec^ DPoles, OCNaroWrappers::OCTColgp_Array1OfVec^ D2Poles, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths, OCNaroWrappers::OCTColStd_Array1OfReal^ DWeigths, OCNaroWrappers::OCTColStd_Array1OfReal^ D2Weigths)
{
  return OCConverter::StandardBooleanToBoolean(GeomFill::GetCircle((Convert_ParameterisationType)TConv, *((gp_Vec*)ns1->Handle), *((gp_Vec*)ns2->Handle), *((gp_Vec*)dn1w->Handle), *((gp_Vec*)dn2w->Handle), *((gp_Vec*)d2n1w->Handle), *((gp_Vec*)d2n2w->Handle), *((gp_Vec*)nplan->Handle), *((gp_Vec*)dnplan->Handle), *((gp_Vec*)d2nplan->Handle), *((gp_Pnt*)pts1->Handle), *((gp_Pnt*)pts2->Handle), *((gp_Vec*)tang1->Handle), *((gp_Vec*)tang2->Handle), *((gp_Vec*)Dtang1->Handle), *((gp_Vec*)Dtang2->Handle), Rayon, DRayon, D2Rayon, *((gp_Pnt*)Center->Handle), *((gp_Vec*)DCenter->Handle), *((gp_Vec*)D2Center->Handle), *((TColgp_Array1OfPnt*)Poles->Handle), *((TColgp_Array1OfVec*)DPoles->Handle), *((TColgp_Array1OfVec*)D2Poles->Handle), *((TColStd_Array1OfReal*)Weigths->Handle), *((TColStd_Array1OfReal*)DWeigths->Handle), *((TColStd_Array1OfReal*)D2Weigths->Handle)));
}

 void OCGeomFill::GetShape(Standard_Real MaxAng, Standard_Integer& NbPoles, Standard_Integer& NbKnots, Standard_Integer& Degree, OCConvert_ParameterisationType& TypeConv)
{
  GeomFill::GetShape(MaxAng, NbPoles, NbKnots, Degree, (Convert_ParameterisationType&)TypeConv);
}

 void OCGeomFill::Knots(OCConvert_ParameterisationType TypeConv, OCNaroWrappers::OCTColStd_Array1OfReal^ TKnots)
{
  GeomFill::Knots((Convert_ParameterisationType)TypeConv, *((TColStd_Array1OfReal*)TKnots->Handle));
}

 void OCGeomFill::Mults(OCConvert_ParameterisationType TypeConv, OCNaroWrappers::OCTColStd_Array1OfInteger^ TMults)
{
  GeomFill::Mults((Convert_ParameterisationType)TypeConv, *((TColStd_Array1OfInteger*)TMults->Handle));
}

 void OCGeomFill::GetMinimalWeights(OCConvert_ParameterisationType TConv, Standard_Real AngleMin, Standard_Real AngleMax, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths)
{
  GeomFill::GetMinimalWeights((Convert_ParameterisationType)TConv, AngleMin, AngleMax, *((TColStd_Array1OfReal*)Weigths->Handle));
}

 Standard_Real OCGeomFill::GetTolerance(OCConvert_ParameterisationType TConv, Standard_Real AngleMin, Standard_Real Radius, Standard_Real AngularTol, Standard_Real SpatialTol)
{
  return GeomFill::GetTolerance((Convert_ParameterisationType)TConv, AngleMin, Radius, AngularTol, SpatialTol);
}


