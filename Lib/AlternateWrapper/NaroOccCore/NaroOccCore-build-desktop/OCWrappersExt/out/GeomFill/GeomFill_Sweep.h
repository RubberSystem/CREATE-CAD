// File generated by CPPExt (MPV)
//
#ifndef _GeomFill_Sweep_OCWrappers_HeaderFile
#define _GeomFill_Sweep_OCWrappers_HeaderFile

// include native header
#include <GeomFill_Sweep.hxx>
#include "../Converter.h"


#include "GeomFill_ApproxStyle.h"
#include "../GeomAbs/GeomAbs_Shape.h"


namespace OCNaroWrappers
{

ref class OCGeomFill_LocationLaw;
ref class OCGeomFill_SectionLaw;
ref class OCGeom_Surface;
ref class OCTColGeom2d_HArray1OfCurve;
ref class OCTColStd_HArray2OfReal;
ref class OCGeom2d_Curve;


//! Geometrical Sweep Algorithm <br>
public ref class OCGeomFill_Sweep  {

protected:
  GeomFill_Sweep* nativeHandle;
  OCGeomFill_Sweep(OCDummy^) {};

public:
  property GeomFill_Sweep* Handle
  {
    GeomFill_Sweep* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeomFill_Sweep(GeomFill_Sweep* nativeHandle);

// Methods PUBLIC


OCGeomFill_Sweep(OCNaroWrappers::OCGeomFill_LocationLaw^ Location, System::Boolean WithKpart);

//! Set parametric information <br>
//!          [<First>, <Last>] Sets the parametric bound of the <br>
//!                  sweeping surface to build. <br>
//!           <SectionFirst>, <SectionLast> gives coresponding <br>
//!           bounds parameter on the section law of <First> and <Last> <br>
//! <br>
//!           V-Iso on Sweeping Surface S(u,v) is defined by <br>
//!           Location(v) and Section(w) where <br>
//!           w = SectionFirst + (v - First) / (Last-First) <br>
//!             * (SectionLast - SectionFirst) <br>
 /*instead*/  void SetDomain(Standard_Real First, Standard_Real Last, Standard_Real SectionFirst, Standard_Real SectionLast) ;

//! Set Approximation Tolerance <br>
//!    Tol3d : Tolerance to surface approximation <br>
//!    Tol2d : Tolerance used to perform curve approximation <br>
//!            Normaly the 2d curve are approximated with a <br>
//!            tolerance given by the resolution method define in <br>
//!            <LocationLaw> but if this tolerance is too large Tol2d <br>
//!            is used. <br>
//!    TolAngular : Tolerance (in radian) to control the angle <br>
//!                 beetween tangents on the section law and <br>
//!                 tangent of iso-v on approximed surface <br>
 /*instead*/  void SetTolerance(Standard_Real Tol3d, Standard_Real BoundTol, Standard_Real Tol2d, Standard_Real TolAngular) ;

//! returns true if sections are U-Iso <br>
//! This can be produce in some cases when <WithKpart> is True. <br>
 /*instead*/  System::Boolean ExchangeUV() ;

//! returns true if Parametrisation sens in U is inverse of <br>
//!          parametrisation sens of section (or of path if ExchangeUV) <br>
 /*instead*/  System::Boolean UReversed() ;

//! returns true if Parametrisation sens in V is inverse of <br>
//!          parametrisation sens of path (or of section if ExchangeUV) <br>
 /*instead*/  System::Boolean VReversed() ;

//! Build the Sweeep  Surface <br>
//!    ApproxStyle defines Approximation Strategy <br>
//!    - GeomFill_Section : The composed Function : Location X Section <br>
//!                         is directly approximed. <br>
//!    - GeomFill_Location : The location law is approximed, and the <br>
//!                          SweepSurface is build algebric composition <br>
//!                          of approximed location law and section law <br>
//!                          This option is Ok, if Section.Surface() methode <br>
//!                          is effective. <br>
//!    Continuity : The continuity in v waiting on the surface <br>
//!    Degmax     : The maximum degree in v requiered on the surface <br>
//!    Segmax     : The maximum number of span in v requiered on <br>
//!                 the surface <br>
//! <br>
//!      raise If Domain are infinite or Profile not Setted. <br>
 /*instead*/  void Build(OCNaroWrappers::OCGeomFill_SectionLaw^ Section, OCGeomFill_ApproxStyle Methode, OCGeomAbs_Shape Continuity, Standard_Integer Degmax, Standard_Integer Segmax) ;

//! Tells if the Surface is Buildt. <br>
 /*instead*/  System::Boolean IsDone() ;

//! Gets the Approximation  error. <br>
 /*instead*/  Standard_Real ErrorOnSurface() ;

//! Gets the Approximation  error. <br>
 /*instead*/  void ErrorOnRestriction(System::Boolean IsFirst, Standard_Real& UError, Standard_Real& VError) ;

//! Gets the Approximation error. <br>
 /*instead*/  void ErrorOnTrace(Standard_Integer IndexOfTrace, Standard_Real& UError, Standard_Real& VError) ;


 /*instead*/  OCGeom_Surface^ Surface() ;


 /*instead*/  OCGeom2d_Curve^ Restriction(System::Boolean IsFirst) ;


 /*instead*/  Standard_Integer NumberOfTrace() ;


 /*instead*/  OCGeom2d_Curve^ Trace(Standard_Integer IndexOfTrace) ;

~OCGeomFill_Sweep()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
