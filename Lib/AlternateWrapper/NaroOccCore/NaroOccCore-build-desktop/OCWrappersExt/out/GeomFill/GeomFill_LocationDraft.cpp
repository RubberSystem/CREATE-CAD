// File generated by CPPExt (CPP file)
//

#include "GeomFill_LocationDraft.h"
#include "../Converter.h"
#include "GeomFill_DraftTrihedron.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "../Adaptor3d/Adaptor3d_HCurve.h"
#include "../TColgp/TColgp_HArray1OfPnt2d.h"
#include "../gp/gp_Dir.h"
#include "../gp/gp_Mat.h"
#include "GeomFill_LocationLaw.h"
#include "../gp/gp_Vec.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../TColgp/TColgp_Array1OfVec2d.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCGeomFill_LocationDraft::OCGeomFill_LocationDraft(Handle(GeomFill_LocationDraft)* nativeHandle) : OCGeomFill_LocationLaw((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_GeomFill_LocationDraft(*nativeHandle);
}

OCGeomFill_LocationDraft::OCGeomFill_LocationDraft(OCNaroWrappers::OCgp_Dir^ Direction, Standard_Real Angle) : OCGeomFill_LocationLaw((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomFill_LocationDraft(new GeomFill_LocationDraft(*((gp_Dir*)Direction->Handle), Angle));
}

 void OCGeomFill_LocationDraft::SetStopSurf(OCNaroWrappers::OCAdaptor3d_HSurface^ Surf)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->SetStopSurf(*((Handle_Adaptor3d_HSurface*)Surf->Handle));
}

 void OCGeomFill_LocationDraft::SetAngle(Standard_Real Angle)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->SetAngle(Angle);
}

 void OCGeomFill_LocationDraft::SetCurve(OCNaroWrappers::OCAdaptor3d_HCurve^ C)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->SetCurve(*((Handle_Adaptor3d_HCurve*)C->Handle));
}

OCAdaptor3d_HCurve^ OCGeomFill_LocationDraft::GetCurve()
{
  Handle(Adaptor3d_HCurve) tmp = (*((Handle_GeomFill_LocationDraft*)nativeHandle))->GetCurve();
  return gcnew OCAdaptor3d_HCurve(&tmp);
}

 void OCGeomFill_LocationDraft::SetTrsf(OCNaroWrappers::OCgp_Mat^ Transfo)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->SetTrsf(*((gp_Mat*)Transfo->Handle));
}

OCGeomFill_LocationLaw^ OCGeomFill_LocationDraft::Copy()
{
  Handle(GeomFill_LocationLaw) tmp = (*((Handle_GeomFill_LocationDraft*)nativeHandle))->Copy();
  return gcnew OCGeomFill_LocationLaw(&tmp);
}

 System::Boolean OCGeomFill_LocationDraft::D0(Standard_Real Param, OCNaroWrappers::OCgp_Mat^ M, OCNaroWrappers::OCgp_Vec^ V)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_LocationDraft*)nativeHandle))->D0(Param, *((gp_Mat*)M->Handle), *((gp_Vec*)V->Handle)));
}

 System::Boolean OCGeomFill_LocationDraft::D0(Standard_Real Param, OCNaroWrappers::OCgp_Mat^ M, OCNaroWrappers::OCgp_Vec^ V, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Poles2d)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_LocationDraft*)nativeHandle))->D0(Param, *((gp_Mat*)M->Handle), *((gp_Vec*)V->Handle), *((TColgp_Array1OfPnt2d*)Poles2d->Handle)));
}

 System::Boolean OCGeomFill_LocationDraft::D1(Standard_Real Param, OCNaroWrappers::OCgp_Mat^ M, OCNaroWrappers::OCgp_Vec^ V, OCNaroWrappers::OCgp_Mat^ DM, OCNaroWrappers::OCgp_Vec^ DV, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Poles2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ DPoles2d)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_LocationDraft*)nativeHandle))->D1(Param, *((gp_Mat*)M->Handle), *((gp_Vec*)V->Handle), *((gp_Mat*)DM->Handle), *((gp_Vec*)DV->Handle), *((TColgp_Array1OfPnt2d*)Poles2d->Handle), *((TColgp_Array1OfVec2d*)DPoles2d->Handle)));
}

 System::Boolean OCGeomFill_LocationDraft::D2(Standard_Real Param, OCNaroWrappers::OCgp_Mat^ M, OCNaroWrappers::OCgp_Vec^ V, OCNaroWrappers::OCgp_Mat^ DM, OCNaroWrappers::OCgp_Vec^ DV, OCNaroWrappers::OCgp_Mat^ D2M, OCNaroWrappers::OCgp_Vec^ D2V, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Poles2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ DPoles2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ D2Poles2d)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_LocationDraft*)nativeHandle))->D2(Param, *((gp_Mat*)M->Handle), *((gp_Vec*)V->Handle), *((gp_Mat*)DM->Handle), *((gp_Vec*)DV->Handle), *((gp_Mat*)D2M->Handle), *((gp_Vec*)D2V->Handle), *((TColgp_Array1OfPnt2d*)Poles2d->Handle), *((TColgp_Array1OfVec2d*)DPoles2d->Handle), *((TColgp_Array1OfVec2d*)D2Poles2d->Handle)));
}

 System::Boolean OCGeomFill_LocationDraft::HasFirstRestriction()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_LocationDraft*)nativeHandle))->HasFirstRestriction());
}

 System::Boolean OCGeomFill_LocationDraft::HasLastRestriction()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_LocationDraft*)nativeHandle))->HasLastRestriction());
}

 Standard_Integer OCGeomFill_LocationDraft::TraceNumber()
{
  return (*((Handle_GeomFill_LocationDraft*)nativeHandle))->TraceNumber();
}

 Standard_Integer OCGeomFill_LocationDraft::NbIntervals(OCGeomAbs_Shape S)
{
  return (*((Handle_GeomFill_LocationDraft*)nativeHandle))->NbIntervals((GeomAbs_Shape)S);
}

 void OCGeomFill_LocationDraft::Intervals(OCNaroWrappers::OCTColStd_Array1OfReal^ T, OCGeomAbs_Shape S)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->Intervals(*((TColStd_Array1OfReal*)T->Handle), (GeomAbs_Shape)S);
}

 void OCGeomFill_LocationDraft::SetInterval(Standard_Real First, Standard_Real Last)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->SetInterval(First, Last);
}

 void OCGeomFill_LocationDraft::GetInterval(Standard_Real& First, Standard_Real& Last)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->GetInterval(First, Last);
}

 void OCGeomFill_LocationDraft::GetDomain(Standard_Real& First, Standard_Real& Last)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->GetDomain(First, Last);
}

 void OCGeomFill_LocationDraft::Resolution(Standard_Integer Index, Standard_Real Tol, Standard_Real& TolU, Standard_Real& TolV)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->Resolution(Index, Tol, TolU, TolV);
}

 Standard_Real OCGeomFill_LocationDraft::GetMaximalNorm()
{
  return (*((Handle_GeomFill_LocationDraft*)nativeHandle))->GetMaximalNorm();
}

 void OCGeomFill_LocationDraft::GetAverageLaw(OCNaroWrappers::OCgp_Mat^ AM, OCNaroWrappers::OCgp_Vec^ AV)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->GetAverageLaw(*((gp_Mat*)AM->Handle), *((gp_Vec*)AV->Handle));
}

 System::Boolean OCGeomFill_LocationDraft::IsTranslation(Standard_Real& Error)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_LocationDraft*)nativeHandle))->IsTranslation(Error));
}

 System::Boolean OCGeomFill_LocationDraft::IsRotation(Standard_Real& Error)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_LocationDraft*)nativeHandle))->IsRotation(Error));
}

 void OCGeomFill_LocationDraft::Rotation(OCNaroWrappers::OCgp_Pnt^ Center)
{
  (*((Handle_GeomFill_LocationDraft*)nativeHandle))->Rotation(*((gp_Pnt*)Center->Handle));
}

 System::Boolean OCGeomFill_LocationDraft::IsIntersec()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_GeomFill_LocationDraft*)nativeHandle))->IsIntersec());
}

OCgp_Dir^ OCGeomFill_LocationDraft::Direction()
{
  gp_Dir* tmp = new gp_Dir();
  *tmp = (*((Handle_GeomFill_LocationDraft*)nativeHandle))->Direction();
  return gcnew OCgp_Dir(tmp);
}


