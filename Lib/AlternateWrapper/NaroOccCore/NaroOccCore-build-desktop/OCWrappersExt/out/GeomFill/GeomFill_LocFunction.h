// File generated by CPPExt (MPV)
//
#ifndef _GeomFill_LocFunction_OCWrappers_HeaderFile
#define _GeomFill_LocFunction_OCWrappers_HeaderFile

// include native header
#include <GeomFill_LocFunction.hxx>
#include "../Converter.h"


#include "../TColgp/TColgp_Array1OfVec.h"
#include "../gp/gp_Mat.h"


namespace OCNaroWrappers
{

ref class OCGeomFill_LocationLaw;



public ref class OCGeomFill_LocFunction  {

protected:
  GeomFill_LocFunction* nativeHandle;
  OCGeomFill_LocFunction(OCDummy^) {};

public:
  property GeomFill_LocFunction* Handle
  {
    GeomFill_LocFunction* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeomFill_LocFunction(GeomFill_LocFunction* nativeHandle);

// Methods PUBLIC


OCGeomFill_LocFunction(OCNaroWrappers::OCGeomFill_LocationLaw^ Law);

//! compute the section for v = param <br>
 /*instead*/  System::Boolean D0(Standard_Real Param, Standard_Real First, Standard_Real Last) ;

//! compute the first  derivative in v direction  of the <br>
//!           section for v =  param <br>
 /*instead*/  System::Boolean D1(Standard_Real Param, Standard_Real First, Standard_Real Last) ;

//! compute the second derivative  in v direction of the <br>
//!          section  for v = param <br>
 /*instead*/  System::Boolean D2(Standard_Real Param, Standard_Real First, Standard_Real Last) ;


 /*instead*/  void DN(Standard_Real Param, Standard_Real First, Standard_Real Last, Standard_Integer Order, Standard_Real& Result, Standard_Integer& Ier) ;

~OCGeomFill_LocFunction()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
