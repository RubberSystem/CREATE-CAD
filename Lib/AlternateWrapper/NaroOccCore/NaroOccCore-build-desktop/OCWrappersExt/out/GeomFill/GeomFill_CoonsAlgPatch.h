// File generated by CPPExt (Transient)
//
#ifndef _GeomFill_CoonsAlgPatch_OCWrappers_HeaderFile
#define _GeomFill_CoonsAlgPatch_OCWrappers_HeaderFile

// include the wrapped class
#include <GeomFill_CoonsAlgPatch.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../gp/gp_Pnt.h"


namespace OCNaroWrappers
{

ref class OCGeomFill_Boundary;
ref class OCLaw_Function;
ref class OCgp_Pnt;
ref class OCgp_Vec;


//! Provides  evaluation   methods on an   algorithmic <br>
//!          patch   defined by  its   boundaries and  blending <br>
//!          functions. <br>
public ref class OCGeomFill_CoonsAlgPatch : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCGeomFill_CoonsAlgPatch(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeomFill_CoonsAlgPatch(Handle(GeomFill_CoonsAlgPatch)* nativeHandle);

// Methods PUBLIC

//! Constructs the  algorithmic   patch. By   Default  the <br>
//!          constructed blending functions are linear. <br>
//!  Warning: No control is done on the bounds. <br>
//!          B1/B3 and B2/B4 must be same range and well oriented. <br>
OCGeomFill_CoonsAlgPatch(OCNaroWrappers::OCGeomFill_Boundary^ B1, OCNaroWrappers::OCGeomFill_Boundary^ B2, OCNaroWrappers::OCGeomFill_Boundary^ B3, OCNaroWrappers::OCGeomFill_Boundary^ B4);

//! Give the blending functions. <br>
 /*instead*/  void Func(OCNaroWrappers::OCLaw_Function^ f1, OCNaroWrappers::OCLaw_Function^ f2) ;

//! Set the blending functions. <br>
 /*instead*/  void SetFunc(OCNaroWrappers::OCLaw_Function^ f1, OCNaroWrappers::OCLaw_Function^ f2) ;

//! Computes  the  value   on the  algorithmic    patch at <br>
//!          parameters U and V. <br>
 /*instead*/  OCgp_Pnt^ Value(Standard_Real U, Standard_Real V) ;

//! Computes   the  d/dU   partial   derivative  on    the <br>
//!          algorithmic patch at parameters U and V. <br>
 /*instead*/  OCgp_Vec^ D1U(Standard_Real U, Standard_Real V) ;

//! Computes    the  d/dV    partial    derivative on  the <br>
//!          algorithmic patch at parameters U and V. <br>
 /*instead*/  OCgp_Vec^ D1V(Standard_Real U, Standard_Real V) ;

//! Computes the   d2/dUdV  partial  derivative   on   the <br>
//!          algorithmic  patch made with linear blending functions <br>
//!          at parameter U and V. <br>
 /*instead*/  OCgp_Vec^ DUV(Standard_Real U, Standard_Real V) ;


 /*instead*/  OCgp_Pnt^ Corner(Standard_Integer I) ;


 /*instead*/  OCGeomFill_Boundary^ Bound(Standard_Integer I) ;


 /*instead*/  OCLaw_Function^ Func(Standard_Integer I) ;

~OCGeomFill_CoonsAlgPatch()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
