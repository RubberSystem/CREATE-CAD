// File generated by CPPExt (CPP file)
//

#include "GeomFill_HArray1OfLocationLaw.h"
#include "../Converter.h"
#include "GeomFill_LocationLaw.h"
#include "GeomFill_Array1OfLocationLaw.h"


using namespace OCNaroWrappers;

OCGeomFill_HArray1OfLocationLaw::OCGeomFill_HArray1OfLocationLaw(Handle(GeomFill_HArray1OfLocationLaw)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_GeomFill_HArray1OfLocationLaw(*nativeHandle);
}

OCGeomFill_HArray1OfLocationLaw::OCGeomFill_HArray1OfLocationLaw(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomFill_HArray1OfLocationLaw(new GeomFill_HArray1OfLocationLaw(Low, Up));
}

OCGeomFill_HArray1OfLocationLaw::OCGeomFill_HArray1OfLocationLaw(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCGeomFill_LocationLaw^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_GeomFill_HArray1OfLocationLaw(new GeomFill_HArray1OfLocationLaw(Low, Up, *((Handle_GeomFill_LocationLaw*)V->Handle)));
}

 void OCGeomFill_HArray1OfLocationLaw::Init(OCNaroWrappers::OCGeomFill_LocationLaw^ V)
{
  (*((Handle_GeomFill_HArray1OfLocationLaw*)nativeHandle))->Init(*((Handle_GeomFill_LocationLaw*)V->Handle));
}

 Standard_Integer OCGeomFill_HArray1OfLocationLaw::Length()
{
  return (*((Handle_GeomFill_HArray1OfLocationLaw*)nativeHandle))->Length();
}

 Standard_Integer OCGeomFill_HArray1OfLocationLaw::Lower()
{
  return (*((Handle_GeomFill_HArray1OfLocationLaw*)nativeHandle))->Lower();
}

 Standard_Integer OCGeomFill_HArray1OfLocationLaw::Upper()
{
  return (*((Handle_GeomFill_HArray1OfLocationLaw*)nativeHandle))->Upper();
}

 void OCGeomFill_HArray1OfLocationLaw::SetValue(Standard_Integer Index, OCNaroWrappers::OCGeomFill_LocationLaw^ Value)
{
  (*((Handle_GeomFill_HArray1OfLocationLaw*)nativeHandle))->SetValue(Index, *((Handle_GeomFill_LocationLaw*)Value->Handle));
}

OCGeomFill_LocationLaw^ OCGeomFill_HArray1OfLocationLaw::Value(Standard_Integer Index)
{
  Handle(GeomFill_LocationLaw) tmp = (*((Handle_GeomFill_HArray1OfLocationLaw*)nativeHandle))->Value(Index);
  return gcnew OCGeomFill_LocationLaw(&tmp);
}

OCGeomFill_LocationLaw^ OCGeomFill_HArray1OfLocationLaw::ChangeValue(Standard_Integer Index)
{
  Handle(GeomFill_LocationLaw) tmp = (*((Handle_GeomFill_HArray1OfLocationLaw*)nativeHandle))->ChangeValue(Index);
  return gcnew OCGeomFill_LocationLaw(&tmp);
}

OCGeomFill_Array1OfLocationLaw^ OCGeomFill_HArray1OfLocationLaw::Array1()
{
  GeomFill_Array1OfLocationLaw* tmp = new GeomFill_Array1OfLocationLaw(0, 0);
  *tmp = (*((Handle_GeomFill_HArray1OfLocationLaw*)nativeHandle))->Array1();
  return gcnew OCGeomFill_Array1OfLocationLaw(tmp);
}

OCGeomFill_Array1OfLocationLaw^ OCGeomFill_HArray1OfLocationLaw::ChangeArray1()
{
  GeomFill_Array1OfLocationLaw* tmp = new GeomFill_Array1OfLocationLaw(0, 0);
  *tmp = (*((Handle_GeomFill_HArray1OfLocationLaw*)nativeHandle))->ChangeArray1();
  return gcnew OCGeomFill_Array1OfLocationLaw(tmp);
}


