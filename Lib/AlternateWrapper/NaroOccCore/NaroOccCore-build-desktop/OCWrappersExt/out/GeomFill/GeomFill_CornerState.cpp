// File generated by CPPExt (CPP file)
//

#include "GeomFill_CornerState.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCGeomFill_CornerState::OCGeomFill_CornerState(GeomFill_CornerState* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGeomFill_CornerState::OCGeomFill_CornerState() 
{
  nativeHandle = new GeomFill_CornerState();
}

 Standard_Real OCGeomFill_CornerState::Gap()
{
  return ((GeomFill_CornerState*)nativeHandle)->Gap();
}

 void OCGeomFill_CornerState::Gap(Standard_Real G)
{
  ((GeomFill_CornerState*)nativeHandle)->Gap(G);
}

 Standard_Real OCGeomFill_CornerState::TgtAng()
{
  return ((GeomFill_CornerState*)nativeHandle)->TgtAng();
}

 void OCGeomFill_CornerState::TgtAng(Standard_Real Ang)
{
  ((GeomFill_CornerState*)nativeHandle)->TgtAng(Ang);
}

 System::Boolean OCGeomFill_CornerState::HasConstraint()
{
  return OCConverter::StandardBooleanToBoolean(((GeomFill_CornerState*)nativeHandle)->HasConstraint());
}

 void OCGeomFill_CornerState::Constraint()
{
  ((GeomFill_CornerState*)nativeHandle)->Constraint();
}

 Standard_Real OCGeomFill_CornerState::NorAng()
{
  return ((GeomFill_CornerState*)nativeHandle)->NorAng();
}

 void OCGeomFill_CornerState::NorAng(Standard_Real Ang)
{
  ((GeomFill_CornerState*)nativeHandle)->NorAng(Ang);
}

 System::Boolean OCGeomFill_CornerState::IsToKill(Standard_Real& Scal)
{
  return OCConverter::StandardBooleanToBoolean(((GeomFill_CornerState*)nativeHandle)->IsToKill(Scal));
}

 void OCGeomFill_CornerState::DoKill(Standard_Real Scal)
{
  ((GeomFill_CornerState*)nativeHandle)->DoKill(Scal);
}


