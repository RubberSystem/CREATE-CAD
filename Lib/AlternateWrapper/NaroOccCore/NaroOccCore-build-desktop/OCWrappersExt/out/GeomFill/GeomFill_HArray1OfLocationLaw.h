// File generated by CPPExt (Transient)
//
#ifndef _GeomFill_HArray1OfLocationLaw_OCWrappers_HeaderFile
#define _GeomFill_HArray1OfLocationLaw_OCWrappers_HeaderFile

// include the wrapped class
#include <GeomFill_HArray1OfLocationLaw.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "GeomFill_Array1OfLocationLaw.h"


namespace OCNaroWrappers
{

ref class OCGeomFill_LocationLaw;
ref class OCGeomFill_Array1OfLocationLaw;



public ref class OCGeomFill_HArray1OfLocationLaw : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCGeomFill_HArray1OfLocationLaw(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCGeomFill_HArray1OfLocationLaw(Handle(GeomFill_HArray1OfLocationLaw)* nativeHandle);

// Methods PUBLIC


OCGeomFill_HArray1OfLocationLaw(Standard_Integer Low, Standard_Integer Up);


OCGeomFill_HArray1OfLocationLaw(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCGeomFill_LocationLaw^ V);


 /*instead*/  void Init(OCNaroWrappers::OCGeomFill_LocationLaw^ V) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCGeomFill_LocationLaw^ Value) ;


 /*instead*/  OCGeomFill_LocationLaw^ Value(Standard_Integer Index) ;


 /*instead*/  OCGeomFill_LocationLaw^ ChangeValue(Standard_Integer Index) ;


 /*instead*/  OCGeomFill_Array1OfLocationLaw^ Array1() ;


 /*instead*/  OCGeomFill_Array1OfLocationLaw^ ChangeArray1() ;

~OCGeomFill_HArray1OfLocationLaw()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
