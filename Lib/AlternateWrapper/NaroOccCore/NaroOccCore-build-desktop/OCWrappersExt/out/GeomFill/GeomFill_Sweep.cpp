// File generated by CPPExt (CPP file)
//

#include "GeomFill_Sweep.h"
#include "../Converter.h"
#include "GeomFill_LocationLaw.h"
#include "GeomFill_SectionLaw.h"
#include "../Geom/Geom_Surface.h"
#include "../TColGeom2d/TColGeom2d_HArray1OfCurve.h"
#include "../TColStd/TColStd_HArray2OfReal.h"
#include "../Geom2d/Geom2d_Curve.h"


using namespace OCNaroWrappers;

OCGeomFill_Sweep::OCGeomFill_Sweep(GeomFill_Sweep* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGeomFill_Sweep::OCGeomFill_Sweep(OCNaroWrappers::OCGeomFill_LocationLaw^ Location, System::Boolean WithKpart) 
{
  nativeHandle = new GeomFill_Sweep(*((Handle_GeomFill_LocationLaw*)Location->Handle), OCConverter::BooleanToStandardBoolean(WithKpart));
}

 void OCGeomFill_Sweep::SetDomain(Standard_Real First, Standard_Real Last, Standard_Real SectionFirst, Standard_Real SectionLast)
{
  ((GeomFill_Sweep*)nativeHandle)->SetDomain(First, Last, SectionFirst, SectionLast);
}

 void OCGeomFill_Sweep::SetTolerance(Standard_Real Tol3d, Standard_Real BoundTol, Standard_Real Tol2d, Standard_Real TolAngular)
{
  ((GeomFill_Sweep*)nativeHandle)->SetTolerance(Tol3d, BoundTol, Tol2d, TolAngular);
}

 System::Boolean OCGeomFill_Sweep::ExchangeUV()
{
  return OCConverter::StandardBooleanToBoolean(((GeomFill_Sweep*)nativeHandle)->ExchangeUV());
}

 System::Boolean OCGeomFill_Sweep::UReversed()
{
  return OCConverter::StandardBooleanToBoolean(((GeomFill_Sweep*)nativeHandle)->UReversed());
}

 System::Boolean OCGeomFill_Sweep::VReversed()
{
  return OCConverter::StandardBooleanToBoolean(((GeomFill_Sweep*)nativeHandle)->VReversed());
}

 void OCGeomFill_Sweep::Build(OCNaroWrappers::OCGeomFill_SectionLaw^ Section, OCGeomFill_ApproxStyle Methode, OCGeomAbs_Shape Continuity, Standard_Integer Degmax, Standard_Integer Segmax)
{
  ((GeomFill_Sweep*)nativeHandle)->Build(*((Handle_GeomFill_SectionLaw*)Section->Handle), (GeomFill_ApproxStyle)Methode, (GeomAbs_Shape)Continuity, Degmax, Segmax);
}

 System::Boolean OCGeomFill_Sweep::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((GeomFill_Sweep*)nativeHandle)->IsDone());
}

 Standard_Real OCGeomFill_Sweep::ErrorOnSurface()
{
  return ((GeomFill_Sweep*)nativeHandle)->ErrorOnSurface();
}

 void OCGeomFill_Sweep::ErrorOnRestriction(System::Boolean IsFirst, Standard_Real& UError, Standard_Real& VError)
{
  ((GeomFill_Sweep*)nativeHandle)->ErrorOnRestriction(OCConverter::BooleanToStandardBoolean(IsFirst), UError, VError);
}

 void OCGeomFill_Sweep::ErrorOnTrace(Standard_Integer IndexOfTrace, Standard_Real& UError, Standard_Real& VError)
{
  ((GeomFill_Sweep*)nativeHandle)->ErrorOnTrace(IndexOfTrace, UError, VError);
}

OCGeom_Surface^ OCGeomFill_Sweep::Surface()
{
  Handle(Geom_Surface) tmp = ((GeomFill_Sweep*)nativeHandle)->Surface();
  return gcnew OCGeom_Surface(&tmp);
}

OCGeom2d_Curve^ OCGeomFill_Sweep::Restriction(System::Boolean IsFirst)
{
  Handle(Geom2d_Curve) tmp = ((GeomFill_Sweep*)nativeHandle)->Restriction(OCConverter::BooleanToStandardBoolean(IsFirst));
  return gcnew OCGeom2d_Curve(&tmp);
}

 Standard_Integer OCGeomFill_Sweep::NumberOfTrace()
{
  return ((GeomFill_Sweep*)nativeHandle)->NumberOfTrace();
}

OCGeom2d_Curve^ OCGeomFill_Sweep::Trace(Standard_Integer IndexOfTrace)
{
  Handle(Geom2d_Curve) tmp = ((GeomFill_Sweep*)nativeHandle)->Trace(IndexOfTrace);
  return gcnew OCGeom2d_Curve(&tmp);
}


