// File generated by CPPExt (MPV)
//
#ifndef _GeomFill_Array1OfLocationLaw_OCWrappers_HeaderFile
#define _GeomFill_Array1OfLocationLaw_OCWrappers_HeaderFile

// include native header
#include <GeomFill_Array1OfLocationLaw.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCGeomFill_LocationLaw;



public ref class OCGeomFill_Array1OfLocationLaw  {

protected:
  GeomFill_Array1OfLocationLaw* nativeHandle;
  OCGeomFill_Array1OfLocationLaw(OCDummy^) {};

public:
  property GeomFill_Array1OfLocationLaw* Handle
  {
    GeomFill_Array1OfLocationLaw* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeomFill_Array1OfLocationLaw(GeomFill_Array1OfLocationLaw* nativeHandle);

// Methods PUBLIC


OCGeomFill_Array1OfLocationLaw(Standard_Integer Low, Standard_Integer Up);


OCGeomFill_Array1OfLocationLaw(OCNaroWrappers::OCGeomFill_LocationLaw^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCGeomFill_LocationLaw^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCGeomFill_Array1OfLocationLaw^ Assign(OCNaroWrappers::OCGeomFill_Array1OfLocationLaw^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCGeomFill_LocationLaw^ Value) ;


 /*instead*/  OCGeomFill_LocationLaw^ Value(Standard_Integer Index) ;


 /*instead*/  OCGeomFill_LocationLaw^ ChangeValue(Standard_Integer Index) ;

~OCGeomFill_Array1OfLocationLaw()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
