// File generated by CPPExt (MPV)
//
#ifndef _GeomFill_CornerState_OCWrappers_HeaderFile
#define _GeomFill_CornerState_OCWrappers_HeaderFile

// include native header
#include <GeomFill_CornerState.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{



//! Class  (should    be  a  structure)   storing  the <br>
//!          informations         about     continuity, normals <br>
//!          parallelism,  coons conditions and bounds tangents <br>
//!          angle on the corner of contour to be filled. <br>
public ref class OCGeomFill_CornerState  {

protected:
  GeomFill_CornerState* nativeHandle;
  OCGeomFill_CornerState(OCDummy^) {};

public:
  property GeomFill_CornerState* Handle
  {
    GeomFill_CornerState* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGeomFill_CornerState(GeomFill_CornerState* nativeHandle);

// Methods PUBLIC


OCGeomFill_CornerState();


 /*instead*/  Standard_Real Gap() ;


 /*instead*/  void Gap(Standard_Real G) ;


 /*instead*/  Standard_Real TgtAng() ;


 /*instead*/  void TgtAng(Standard_Real Ang) ;


 /*instead*/  System::Boolean HasConstraint() ;


 /*instead*/  void Constraint() ;


 /*instead*/  Standard_Real NorAng() ;


 /*instead*/  void NorAng(Standard_Real Ang) ;


 /*instead*/  System::Boolean IsToKill(Standard_Real& Scal) ;


 /*instead*/  void DoKill(Standard_Real Scal) ;

~OCGeomFill_CornerState()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
