// File generated by CPPExt (CPP file)
//

#include "GeomFill_Pipe.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_HCurve.h"
#include "../Geom/Geom_Surface.h"
#include "GeomFill_LocationLaw.h"
#include "GeomFill_SectionLaw.h"
#include "../Geom/Geom_Curve.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../gp/gp_Dir.h"
#include "../TColGeom/TColGeom_SequenceOfCurve.h"


using namespace OCNaroWrappers;

OCGeomFill_Pipe::OCGeomFill_Pipe(GeomFill_Pipe* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGeomFill_Pipe::OCGeomFill_Pipe() 
{
  nativeHandle = new GeomFill_Pipe();
}

OCGeomFill_Pipe::OCGeomFill_Pipe(OCNaroWrappers::OCGeom_Curve^ Path, Standard_Real Radius) 
{
  nativeHandle = new GeomFill_Pipe(*((Handle_Geom_Curve*)Path->Handle), Radius);
}

OCGeomFill_Pipe::OCGeomFill_Pipe(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCGeom_Curve^ FirstSect, OCGeomFill_Trihedron Option) 
{
  nativeHandle = new GeomFill_Pipe(*((Handle_Geom_Curve*)Path->Handle), *((Handle_Geom_Curve*)FirstSect->Handle), (GeomFill_Trihedron)Option);
}

OCGeomFill_Pipe::OCGeomFill_Pipe(OCNaroWrappers::OCGeom2d_Curve^ Path, OCNaroWrappers::OCGeom_Surface^ Support, OCNaroWrappers::OCGeom_Curve^ FirstSect) 
{
  nativeHandle = new GeomFill_Pipe(*((Handle_Geom2d_Curve*)Path->Handle), *((Handle_Geom_Surface*)Support->Handle), *((Handle_Geom_Curve*)FirstSect->Handle));
}

OCGeomFill_Pipe::OCGeomFill_Pipe(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCGeom_Curve^ FirstSect, OCNaroWrappers::OCgp_Dir^ Dir) 
{
  nativeHandle = new GeomFill_Pipe(*((Handle_Geom_Curve*)Path->Handle), *((Handle_Geom_Curve*)FirstSect->Handle), *((gp_Dir*)Dir->Handle));
}

OCGeomFill_Pipe::OCGeomFill_Pipe(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCGeom_Curve^ FirstSect, OCNaroWrappers::OCGeom_Curve^ LastSect) 
{
  nativeHandle = new GeomFill_Pipe(*((Handle_Geom_Curve*)Path->Handle), *((Handle_Geom_Curve*)FirstSect->Handle), *((Handle_Geom_Curve*)LastSect->Handle));
}

OCGeomFill_Pipe::OCGeomFill_Pipe(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCTColGeom_SequenceOfCurve^ NSections) 
{
  nativeHandle = new GeomFill_Pipe(*((Handle_Geom_Curve*)Path->Handle), *((TColGeom_SequenceOfCurve*)NSections->Handle));
}

OCGeomFill_Pipe::OCGeomFill_Pipe(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCGeom_Curve^ Curve1, OCNaroWrappers::OCGeom_Curve^ Curve2, Standard_Real Radius) 
{
  nativeHandle = new GeomFill_Pipe(*((Handle_Geom_Curve*)Path->Handle), *((Handle_Geom_Curve*)Curve1->Handle), *((Handle_Geom_Curve*)Curve2->Handle), Radius);
}

OCGeomFill_Pipe::OCGeomFill_Pipe(OCNaroWrappers::OCAdaptor3d_HCurve^ Path, OCNaroWrappers::OCAdaptor3d_HCurve^ Curve1, OCNaroWrappers::OCAdaptor3d_HCurve^ Curve2, Standard_Real Radius) 
{
  nativeHandle = new GeomFill_Pipe(*((Handle_Adaptor3d_HCurve*)Path->Handle), *((Handle_Adaptor3d_HCurve*)Curve1->Handle), *((Handle_Adaptor3d_HCurve*)Curve2->Handle), Radius);
}

OCGeomFill_Pipe::OCGeomFill_Pipe(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCAdaptor3d_HCurve^ Guide, OCNaroWrappers::OCGeom_Curve^ FirstSect, System::Boolean ByACR, System::Boolean rotat) 
{
  nativeHandle = new GeomFill_Pipe(*((Handle_Geom_Curve*)Path->Handle), *((Handle_Adaptor3d_HCurve*)Guide->Handle), *((Handle_Geom_Curve*)FirstSect->Handle), OCConverter::BooleanToStandardBoolean(ByACR), OCConverter::BooleanToStandardBoolean(rotat));
}

 void OCGeomFill_Pipe::Init(OCNaroWrappers::OCGeom_Curve^ Path, Standard_Real Radius)
{
  ((GeomFill_Pipe*)nativeHandle)->Init(*((Handle_Geom_Curve*)Path->Handle), Radius);
}

 void OCGeomFill_Pipe::Init(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCGeom_Curve^ FirstSect, OCGeomFill_Trihedron Option)
{
  ((GeomFill_Pipe*)nativeHandle)->Init(*((Handle_Geom_Curve*)Path->Handle), *((Handle_Geom_Curve*)FirstSect->Handle), (GeomFill_Trihedron)Option);
}

 void OCGeomFill_Pipe::Init(OCNaroWrappers::OCGeom2d_Curve^ Path, OCNaroWrappers::OCGeom_Surface^ Support, OCNaroWrappers::OCGeom_Curve^ FirstSect)
{
  ((GeomFill_Pipe*)nativeHandle)->Init(*((Handle_Geom2d_Curve*)Path->Handle), *((Handle_Geom_Surface*)Support->Handle), *((Handle_Geom_Curve*)FirstSect->Handle));
}

 void OCGeomFill_Pipe::Init(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCGeom_Curve^ FirstSect, OCNaroWrappers::OCgp_Dir^ Dir)
{
  ((GeomFill_Pipe*)nativeHandle)->Init(*((Handle_Geom_Curve*)Path->Handle), *((Handle_Geom_Curve*)FirstSect->Handle), *((gp_Dir*)Dir->Handle));
}

 void OCGeomFill_Pipe::Init(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCGeom_Curve^ FirstSect, OCNaroWrappers::OCGeom_Curve^ LastSect)
{
  ((GeomFill_Pipe*)nativeHandle)->Init(*((Handle_Geom_Curve*)Path->Handle), *((Handle_Geom_Curve*)FirstSect->Handle), *((Handle_Geom_Curve*)LastSect->Handle));
}

 void OCGeomFill_Pipe::Init(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCTColGeom_SequenceOfCurve^ NSections)
{
  ((GeomFill_Pipe*)nativeHandle)->Init(*((Handle_Geom_Curve*)Path->Handle), *((TColGeom_SequenceOfCurve*)NSections->Handle));
}

 void OCGeomFill_Pipe::Init(OCNaroWrappers::OCAdaptor3d_HCurve^ Path, OCNaroWrappers::OCAdaptor3d_HCurve^ Curve1, OCNaroWrappers::OCAdaptor3d_HCurve^ Curve2, Standard_Real Radius)
{
  ((GeomFill_Pipe*)nativeHandle)->Init(*((Handle_Adaptor3d_HCurve*)Path->Handle), *((Handle_Adaptor3d_HCurve*)Curve1->Handle), *((Handle_Adaptor3d_HCurve*)Curve2->Handle), Radius);
}

 void OCGeomFill_Pipe::Init(OCNaroWrappers::OCGeom_Curve^ Path, OCNaroWrappers::OCAdaptor3d_HCurve^ Guide, OCNaroWrappers::OCGeom_Curve^ FirstSect, System::Boolean ByACR, System::Boolean rotat)
{
  ((GeomFill_Pipe*)nativeHandle)->Init(*((Handle_Geom_Curve*)Path->Handle), *((Handle_Adaptor3d_HCurve*)Guide->Handle), *((Handle_Geom_Curve*)FirstSect->Handle), OCConverter::BooleanToStandardBoolean(ByACR), OCConverter::BooleanToStandardBoolean(rotat));
}

 void OCGeomFill_Pipe::Perform(System::Boolean WithParameters, System::Boolean myPolynomial)
{
  ((GeomFill_Pipe*)nativeHandle)->Perform(OCConverter::BooleanToStandardBoolean(WithParameters), OCConverter::BooleanToStandardBoolean(myPolynomial));
}

 void OCGeomFill_Pipe::Perform(Standard_Real Tol, System::Boolean Polynomial, OCGeomAbs_Shape Conti, Standard_Integer MaxDegree, Standard_Integer NbMaxSegment)
{
  ((GeomFill_Pipe*)nativeHandle)->Perform(Tol, OCConverter::BooleanToStandardBoolean(Polynomial), (GeomAbs_Shape)Conti, MaxDegree, NbMaxSegment);
}

OCGeom_Surface^ OCGeomFill_Pipe::Surface()
{
  Handle(Geom_Surface) tmp = ((GeomFill_Pipe*)nativeHandle)->Surface();
  return gcnew OCGeom_Surface(&tmp);
}

 System::Boolean OCGeomFill_Pipe::ExchangeUV()
{
  return OCConverter::StandardBooleanToBoolean(((GeomFill_Pipe*)nativeHandle)->ExchangeUV());
}

 void OCGeomFill_Pipe::GenerateParticularCase(System::Boolean B)
{
  ((GeomFill_Pipe*)nativeHandle)->GenerateParticularCase(OCConverter::BooleanToStandardBoolean(B));
}

 System::Boolean OCGeomFill_Pipe::GenerateParticularCase()
{
  return OCConverter::StandardBooleanToBoolean(((GeomFill_Pipe*)nativeHandle)->GenerateParticularCase());
}

 Standard_Real OCGeomFill_Pipe::ErrorOnSurf()
{
  return ((GeomFill_Pipe*)nativeHandle)->ErrorOnSurf();
}


