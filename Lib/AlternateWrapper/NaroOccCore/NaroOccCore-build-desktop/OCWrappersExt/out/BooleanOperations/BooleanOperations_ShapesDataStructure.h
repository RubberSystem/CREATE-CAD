// File generated by CPPExt (MPV)
//
#ifndef _BooleanOperations_ShapesDataStructure_OCWrappers_HeaderFile
#define _BooleanOperations_ShapesDataStructure_OCWrappers_HeaderFile

// include native header
#include <BooleanOperations_ShapesDataStructure.hxx>
#include "../Converter.h"


#include "../TopoDS/TopoDS_Shape.h"
#include "BooleanOperations_IndexedDataMapOfShapeInteger.h"
#include "../BOPTColStd/BOPTColStd_CArray1OfInteger.h"
#include "../TopAbs/TopAbs_ShapeEnum.h"
#include "BooleanOperations_StateOfShape.h"
#include "../TopAbs/TopAbs_Orientation.h"


namespace OCNaroWrappers
{

ref class OCBooleanOperations_Explorer;
ref class OCBooleanOperations_OnceExplorer;
ref class OCTopoDS_Shape;
ref class OCBooleanOperations_AncestorsSeqAndSuccessorsSeq;
ref class OCBooleanOperations_IndexedDataMapOfShapeAncestorsSuccessors;
ref class OCBnd_Box;
ref class OCBooleanOperations_ShapeAndInterferences;
ref class OCBooleanOperations_IndexedDataMapOfShapeInteger;



public ref class OCBooleanOperations_ShapesDataStructure  {

protected:
  BooleanOperations_ShapesDataStructure* nativeHandle;
  OCBooleanOperations_ShapesDataStructure(OCDummy^) {};

public:
  property BooleanOperations_ShapesDataStructure* Handle
  {
    BooleanOperations_ShapesDataStructure* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBooleanOperations_ShapesDataStructure(BooleanOperations_ShapesDataStructure* nativeHandle);

// Methods PUBLIC


OCBooleanOperations_ShapesDataStructure();


OCBooleanOperations_ShapesDataStructure(OCNaroWrappers::OCTopoDS_Shape^ Object, OCNaroWrappers::OCTopoDS_Shape^ Tool);

//! fill  a line of the  data structure, the shift is used <br>
//!          for the numbers of the shapes of the Tool. <br>
 /*instead*/  void InsertShapeAndAncestorsSuccessors(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCBooleanOperations_AncestorsSeqAndSuccessorsSeq^ AncSuc, Standard_Integer shift) ;

//! to find the   data  structure we first decompose  the <br>
//!          Object and Tool in the indexed data map of shapes. <br>
 /*instead*/  void FillIndexedMapOfShapesAncestorsAndSuccessors(OCNaroWrappers::OCTopoDS_Shape^ Sha, OCNaroWrappers::OCBooleanOperations_IndexedDataMapOfShapeAncestorsSuccessors^ IndDatMap) ;

//! to  find all the subshapes  of  Sha and  store them in <br>
//!          IndDatMap if they had not been already taken into account. <br>
 /*instead*/  void FindSubshapes(OCNaroWrappers::OCTopoDS_Shape^ Sha, Standard_Integer& TotalNumberOfShapes, OCNaroWrappers::OCBooleanOperations_IndexedDataMapOfShapeAncestorsSuccessors^ IndDatMap) ;

//!  dump the content of the fields. <br>
 /*instead*/  void Dump(Standard_OStream& S) ;

//!  dump the types of the shapes. <br>
 /*instead*/  void LightDump(Standard_OStream& S) ;


 /*instead*/  OCTopoDS_Shape^ GetShape(Standard_Integer index) ;


 /*instead*/  OCTopoDS_Shape^ Shape(Standard_Integer anIndex) ;


 /*instead*/  OCTopAbs_ShapeEnum GetShapeType(Standard_Integer index) ;


 /*instead*/  OCBnd_Box^ GetBoundingBox(Standard_Integer index) ;


 /*instead*/  OCBooleanOperations_StateOfShape GetState(Standard_Integer index) ;


 /*instead*/  void SetState(Standard_Integer index, OCBooleanOperations_StateOfShape theState) ;


 /*instead*/  Standard_Integer GetAncestor(Standard_Integer index, Standard_Integer ancestorNumber) ;


 /*instead*/  Standard_Integer GetSuccessor(Standard_Integer index, Standard_Integer successorNumber) ;


 /*instead*/  void GetAncestors(Standard_Integer index, Standard_Address& theArrayOfAncestors, Standard_Integer& AncestorsSize) ;


 /*instead*/  void GetSuccessors(Standard_Integer index, Standard_Address& theArrayOfSuccessors, Standard_Integer& SuccessorsSize) ;


 /*instead*/  Standard_Integer NumberOfAncestors(Standard_Integer index) ;


 /*instead*/  Standard_Integer NumberOfSuccessors(Standard_Integer index) ;


 /*instead*/  Standard_Integer NumberOfShapesOfTheTool() ;


 /*instead*/  Standard_Integer NumberOfShapesOfTheObject() ;


 /*instead*/  Standard_Integer NumberOfSourceShapes() ;


 /*instead*/  System::Boolean IsNewShape(Standard_Integer index) ;


 /*instead*/  Standard_Integer NumberOfInsertedShapes() ;


 /*instead*/  Standard_Integer NumberOfNewShapes() ;


 /*instead*/  OCBooleanOperations_ShapeAndInterferences^ Line(Standard_Integer index) ;


 /*instead*/  OCBooleanOperations_IndexedDataMapOfShapeInteger^ ShapeIndexMap(Standard_Integer iRank) ;


virtual /*instead*/  Standard_Integer ShapeIndex(OCNaroWrappers::OCTopoDS_Shape^ aS, Standard_Integer iRank) ;


 /*instead*/  OCTopoDS_Shape^ Object() ;


 /*instead*/  OCTopoDS_Shape^ Tool() ;


 /*instead*/  void ObjectRange(Standard_Integer& iFirst, Standard_Integer& iLast) ;


 /*instead*/  void ToolRange(Standard_Integer& iFirst, Standard_Integer& iLast) ;


virtual /*instead*/  Standard_Integer Rank(Standard_Integer anIndex) ;

//! for given index "anIndex" of an edge in DS get <br>
//!         reference index of an edge <br>
 /*instead*/  Standard_Integer RefEdge(Standard_Integer anIndex) ;

//! returns number of edges from source shapes <br>
 /*instead*/  Standard_Integer NbEdges() ;


 /*instead*/  OCTopAbs_Orientation GetOrientation(Standard_Integer index, Standard_Integer successorNumber) ;


 /*instead*/  void GetOrientations(Standard_Integer index, Standard_Address& theArrayOfOrientations, Standard_Integer& OrientationsSize) ;

~OCBooleanOperations_ShapesDataStructure()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
