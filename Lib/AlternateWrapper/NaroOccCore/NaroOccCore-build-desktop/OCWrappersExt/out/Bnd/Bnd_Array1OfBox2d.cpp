// File generated by CPPExt (CPP file)
//

#include "Bnd_Array1OfBox2d.h"
#include "../Converter.h"
#include "Bnd_Box2d.h"


using namespace OCNaroWrappers;

OCBnd_Array1OfBox2d::OCBnd_Array1OfBox2d(Bnd_Array1OfBox2d* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBnd_Array1OfBox2d::OCBnd_Array1OfBox2d(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Bnd_Array1OfBox2d(Low, Up);
}

OCBnd_Array1OfBox2d::OCBnd_Array1OfBox2d(OCNaroWrappers::OCBnd_Box2d^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Bnd_Array1OfBox2d(*((Bnd_Box2d*)Item->Handle), Low, Up);
}

 void OCBnd_Array1OfBox2d::Init(OCNaroWrappers::OCBnd_Box2d^ V)
{
  ((Bnd_Array1OfBox2d*)nativeHandle)->Init(*((Bnd_Box2d*)V->Handle));
}

 System::Boolean OCBnd_Array1OfBox2d::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((Bnd_Array1OfBox2d*)nativeHandle)->IsAllocated());
}

OCBnd_Array1OfBox2d^ OCBnd_Array1OfBox2d::Assign(OCNaroWrappers::OCBnd_Array1OfBox2d^ Other)
{
  Bnd_Array1OfBox2d* tmp = new Bnd_Array1OfBox2d(0, 0);
  *tmp = ((Bnd_Array1OfBox2d*)nativeHandle)->Assign(*((Bnd_Array1OfBox2d*)Other->Handle));
  return gcnew OCBnd_Array1OfBox2d(tmp);
}

 Standard_Integer OCBnd_Array1OfBox2d::Length()
{
  return ((Bnd_Array1OfBox2d*)nativeHandle)->Length();
}

 Standard_Integer OCBnd_Array1OfBox2d::Lower()
{
  return ((Bnd_Array1OfBox2d*)nativeHandle)->Lower();
}

 Standard_Integer OCBnd_Array1OfBox2d::Upper()
{
  return ((Bnd_Array1OfBox2d*)nativeHandle)->Upper();
}

 void OCBnd_Array1OfBox2d::SetValue(Standard_Integer Index, OCNaroWrappers::OCBnd_Box2d^ Value)
{
  ((Bnd_Array1OfBox2d*)nativeHandle)->SetValue(Index, *((Bnd_Box2d*)Value->Handle));
}

OCBnd_Box2d^ OCBnd_Array1OfBox2d::Value(Standard_Integer Index)
{
  Bnd_Box2d* tmp = new Bnd_Box2d();
  *tmp = ((Bnd_Array1OfBox2d*)nativeHandle)->Value(Index);
  return gcnew OCBnd_Box2d(tmp);
}

OCBnd_Box2d^ OCBnd_Array1OfBox2d::ChangeValue(Standard_Integer Index)
{
  Bnd_Box2d* tmp = new Bnd_Box2d();
  *tmp = ((Bnd_Array1OfBox2d*)nativeHandle)->ChangeValue(Index);
  return gcnew OCBnd_Box2d(tmp);
}


