// File generated by CPPExt (CPP file)
//

#include "Bnd_Array1OfBox.h"
#include "../Converter.h"
#include "Bnd_Box.h"


using namespace OCNaroWrappers;

OCBnd_Array1OfBox::OCBnd_Array1OfBox(Bnd_Array1OfBox* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBnd_Array1OfBox::OCBnd_Array1OfBox(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Bnd_Array1OfBox(Low, Up);
}

OCBnd_Array1OfBox::OCBnd_Array1OfBox(OCNaroWrappers::OCBnd_Box^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Bnd_Array1OfBox(*((Bnd_Box*)Item->Handle), Low, Up);
}

 void OCBnd_Array1OfBox::Init(OCNaroWrappers::OCBnd_Box^ V)
{
  ((Bnd_Array1OfBox*)nativeHandle)->Init(*((Bnd_Box*)V->Handle));
}

 System::Boolean OCBnd_Array1OfBox::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((Bnd_Array1OfBox*)nativeHandle)->IsAllocated());
}

OCBnd_Array1OfBox^ OCBnd_Array1OfBox::Assign(OCNaroWrappers::OCBnd_Array1OfBox^ Other)
{
  Bnd_Array1OfBox* tmp = new Bnd_Array1OfBox(0, 0);
  *tmp = ((Bnd_Array1OfBox*)nativeHandle)->Assign(*((Bnd_Array1OfBox*)Other->Handle));
  return gcnew OCBnd_Array1OfBox(tmp);
}

 Standard_Integer OCBnd_Array1OfBox::Length()
{
  return ((Bnd_Array1OfBox*)nativeHandle)->Length();
}

 Standard_Integer OCBnd_Array1OfBox::Lower()
{
  return ((Bnd_Array1OfBox*)nativeHandle)->Lower();
}

 Standard_Integer OCBnd_Array1OfBox::Upper()
{
  return ((Bnd_Array1OfBox*)nativeHandle)->Upper();
}

 void OCBnd_Array1OfBox::SetValue(Standard_Integer Index, OCNaroWrappers::OCBnd_Box^ Value)
{
  ((Bnd_Array1OfBox*)nativeHandle)->SetValue(Index, *((Bnd_Box*)Value->Handle));
}

OCBnd_Box^ OCBnd_Array1OfBox::Value(Standard_Integer Index)
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = ((Bnd_Array1OfBox*)nativeHandle)->Value(Index);
  return gcnew OCBnd_Box(tmp);
}

OCBnd_Box^ OCBnd_Array1OfBox::ChangeValue(Standard_Integer Index)
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = ((Bnd_Array1OfBox*)nativeHandle)->ChangeValue(Index);
  return gcnew OCBnd_Box(tmp);
}


