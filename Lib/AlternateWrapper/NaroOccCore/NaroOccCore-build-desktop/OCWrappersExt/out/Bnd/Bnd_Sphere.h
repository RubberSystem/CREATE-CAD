// File generated by CPPExt (MPV)
//
#ifndef _Bnd_Sphere_OCWrappers_HeaderFile
#define _Bnd_Sphere_OCWrappers_HeaderFile

// include native header
#include <Bnd_Sphere.hxx>
#include "../Converter.h"


#include "../gp/gp_XYZ.h"


namespace OCNaroWrappers
{

ref class OCgp_XYZ;


//! This class represents a bounding sphere of a geometric entity <br>
//!          (triangle, segment of line or whatever else). <br>
public ref class OCBnd_Sphere  {

protected:
  Bnd_Sphere* nativeHandle;
  OCBnd_Sphere(OCDummy^) {};

public:
  property Bnd_Sphere* Handle
  {
    Bnd_Sphere* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBnd_Sphere(Bnd_Sphere* nativeHandle);

// Methods PUBLIC

//! Empty constructor <br>
OCBnd_Sphere();

//! Constructor of a definite sphere <br>
OCBnd_Sphere(OCNaroWrappers::OCgp_XYZ^ theCntr, Standard_Real theRad, Standard_Integer theU, Standard_Integer theV);

//! Returns the U parameter on shape <br>
 /*instead*/  Standard_Integer U() ;

//! Returns the V parameter on shape <br>
 /*instead*/  Standard_Integer V() ;

//! Returns validity status, indicating that this <br>
//!		sphere corresponds to a real entity <br>
 /*instead*/  System::Boolean IsValid() ;


 /*instead*/  void SetValid(System::Boolean isValid) ;

//! Returns center of sphere object <br>
 /*instead*/  OCgp_XYZ^ Center() ;

//! Returns the radius value <br>
 /*instead*/  Standard_Real Radius() ;

//! Calculate and return minimal and maximal distance to sphere. <br>
//!		NOTE: This function is tightly optimized; any modifications <br>
//!		may affect performance! <br>
 /*instead*/  void Distances(OCNaroWrappers::OCgp_XYZ^ theXYZ, Standard_Real& theMin, Standard_Real& theMax) ;

//! Calculate and return minimal and maximal distance to sphere. <br>
//!		NOTE: This function is tightly optimized; any modifications <br>
//!		may affect performance! <br>
 /*instead*/  void SquareDistances(OCNaroWrappers::OCgp_XYZ^ theXYZ, Standard_Real& theMin, Standard_Real& theMax) ;

//! Projects a point on entity. <br>
//!		   Returns true if success <br>
 /*instead*/  System::Boolean Project(OCNaroWrappers::OCgp_XYZ^ theNode, OCNaroWrappers::OCgp_XYZ^ theProjNode, Standard_Real& theDist, System::Boolean& theInside) ;


 /*instead*/  Standard_Real Distance(OCNaroWrappers::OCgp_XYZ^ theNode) ;


 /*instead*/  Standard_Real SquareDistance(OCNaroWrappers::OCgp_XYZ^ theNode) ;


 /*instead*/  void Add(OCNaroWrappers::OCBnd_Sphere^ theOther) ;


 /*instead*/  System::Boolean IsOut(OCNaroWrappers::OCBnd_Sphere^ theOther) ;


 /*instead*/  System::Boolean IsOut(OCNaroWrappers::OCgp_XYZ^ thePnt, Standard_Real& theMaxDist) ;


 /*instead*/  Standard_Real SquareExtent() ;

~OCBnd_Sphere()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
