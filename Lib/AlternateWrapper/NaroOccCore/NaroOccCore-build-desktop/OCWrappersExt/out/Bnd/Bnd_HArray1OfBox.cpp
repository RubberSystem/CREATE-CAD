// File generated by CPPExt (CPP file)
//

#include "Bnd_HArray1OfBox.h"
#include "../Converter.h"
#include "Bnd_Box.h"
#include "Bnd_Array1OfBox.h"


using namespace OCNaroWrappers;

OCBnd_HArray1OfBox::OCBnd_HArray1OfBox(Handle(Bnd_HArray1OfBox)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Bnd_HArray1OfBox(*nativeHandle);
}

OCBnd_HArray1OfBox::OCBnd_HArray1OfBox(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Bnd_HArray1OfBox(new Bnd_HArray1OfBox(Low, Up));
}

OCBnd_HArray1OfBox::OCBnd_HArray1OfBox(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCBnd_Box^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Bnd_HArray1OfBox(new Bnd_HArray1OfBox(Low, Up, *((Bnd_Box*)V->Handle)));
}

 void OCBnd_HArray1OfBox::Init(OCNaroWrappers::OCBnd_Box^ V)
{
  (*((Handle_Bnd_HArray1OfBox*)nativeHandle))->Init(*((Bnd_Box*)V->Handle));
}

 Standard_Integer OCBnd_HArray1OfBox::Length()
{
  return (*((Handle_Bnd_HArray1OfBox*)nativeHandle))->Length();
}

 Standard_Integer OCBnd_HArray1OfBox::Lower()
{
  return (*((Handle_Bnd_HArray1OfBox*)nativeHandle))->Lower();
}

 Standard_Integer OCBnd_HArray1OfBox::Upper()
{
  return (*((Handle_Bnd_HArray1OfBox*)nativeHandle))->Upper();
}

 void OCBnd_HArray1OfBox::SetValue(Standard_Integer Index, OCNaroWrappers::OCBnd_Box^ Value)
{
  (*((Handle_Bnd_HArray1OfBox*)nativeHandle))->SetValue(Index, *((Bnd_Box*)Value->Handle));
}

OCBnd_Box^ OCBnd_HArray1OfBox::Value(Standard_Integer Index)
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = (*((Handle_Bnd_HArray1OfBox*)nativeHandle))->Value(Index);
  return gcnew OCBnd_Box(tmp);
}

OCBnd_Box^ OCBnd_HArray1OfBox::ChangeValue(Standard_Integer Index)
{
  Bnd_Box* tmp = new Bnd_Box();
  *tmp = (*((Handle_Bnd_HArray1OfBox*)nativeHandle))->ChangeValue(Index);
  return gcnew OCBnd_Box(tmp);
}

OCBnd_Array1OfBox^ OCBnd_HArray1OfBox::Array1()
{
  Bnd_Array1OfBox* tmp = new Bnd_Array1OfBox(0, 0);
  *tmp = (*((Handle_Bnd_HArray1OfBox*)nativeHandle))->Array1();
  return gcnew OCBnd_Array1OfBox(tmp);
}

OCBnd_Array1OfBox^ OCBnd_HArray1OfBox::ChangeArray1()
{
  Bnd_Array1OfBox* tmp = new Bnd_Array1OfBox(0, 0);
  *tmp = (*((Handle_Bnd_HArray1OfBox*)nativeHandle))->ChangeArray1();
  return gcnew OCBnd_Array1OfBox(tmp);
}


