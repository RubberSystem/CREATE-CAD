// File generated by CPPExt (CPP file)
//

#include "IntSurf_LineOn2S.h"
#include "../Converter.h"
#include "IntSurf_PntOn2S.h"


using namespace OCNaroWrappers;

OCIntSurf_LineOn2S::OCIntSurf_LineOn2S(Handle(IntSurf_LineOn2S)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_IntSurf_LineOn2S(*nativeHandle);
}

OCIntSurf_LineOn2S::OCIntSurf_LineOn2S() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_IntSurf_LineOn2S(new IntSurf_LineOn2S());
}

 void OCIntSurf_LineOn2S::Add(OCNaroWrappers::OCIntSurf_PntOn2S^ P)
{
  (*((Handle_IntSurf_LineOn2S*)nativeHandle))->Add(*((IntSurf_PntOn2S*)P->Handle));
}

 Standard_Integer OCIntSurf_LineOn2S::NbPoints()
{
  return (*((Handle_IntSurf_LineOn2S*)nativeHandle))->NbPoints();
}

OCIntSurf_PntOn2S^ OCIntSurf_LineOn2S::Value(Standard_Integer Index)
{
  IntSurf_PntOn2S* tmp = new IntSurf_PntOn2S();
  *tmp = (*((Handle_IntSurf_LineOn2S*)nativeHandle))->Value(Index);
  return gcnew OCIntSurf_PntOn2S(tmp);
}

 void OCIntSurf_LineOn2S::Reverse()
{
  (*((Handle_IntSurf_LineOn2S*)nativeHandle))->Reverse();
}

OCIntSurf_LineOn2S^ OCIntSurf_LineOn2S::Split(Standard_Integer Index)
{
  Handle(IntSurf_LineOn2S) tmp = (*((Handle_IntSurf_LineOn2S*)nativeHandle))->Split(Index);
  return gcnew OCIntSurf_LineOn2S(&tmp);
}

 void OCIntSurf_LineOn2S::Value(Standard_Integer Index, OCNaroWrappers::OCIntSurf_PntOn2S^ P)
{
  (*((Handle_IntSurf_LineOn2S*)nativeHandle))->Value(Index, *((IntSurf_PntOn2S*)P->Handle));
}

 void OCIntSurf_LineOn2S::SetUV(Standard_Integer Index, System::Boolean OnFirst, Standard_Real U, Standard_Real V)
{
  (*((Handle_IntSurf_LineOn2S*)nativeHandle))->SetUV(Index, OCConverter::BooleanToStandardBoolean(OnFirst), U, V);
}

 void OCIntSurf_LineOn2S::Clear()
{
  (*((Handle_IntSurf_LineOn2S*)nativeHandle))->Clear();
}

 void OCIntSurf_LineOn2S::InsertBefore(Standard_Integer I, OCNaroWrappers::OCIntSurf_PntOn2S^ P)
{
  (*((Handle_IntSurf_LineOn2S*)nativeHandle))->InsertBefore(I, *((IntSurf_PntOn2S*)P->Handle));
}

 void OCIntSurf_LineOn2S::RemovePoint(Standard_Integer I)
{
  (*((Handle_IntSurf_LineOn2S*)nativeHandle))->RemovePoint(I);
}


