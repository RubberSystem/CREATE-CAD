// File generated by CPPExt (MPV)
//
#ifndef _IntSurf_PathPointTool_OCWrappers_HeaderFile
#define _IntSurf_PathPointTool_OCWrappers_HeaderFile

// include native header
#include <IntSurf_PathPointTool.hxx>
#include "../Converter.h"


#include "../gp/gp_Pnt.h"
#include "../gp/gp_Vec.h"
#include "../gp/gp_Dir2d.h"


namespace OCNaroWrappers
{

ref class OCIntSurf_PathPoint;



public ref class OCIntSurf_PathPointTool  {

protected:
  IntSurf_PathPointTool* nativeHandle;
  OCIntSurf_PathPointTool(OCDummy^) {};

public:
  property IntSurf_PathPointTool* Handle
  {
    IntSurf_PathPointTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCIntSurf_PathPointTool(IntSurf_PathPointTool* nativeHandle);

// Methods PUBLIC

//! Returns the 3d coordinates of the starting point. <br>
static /*instead*/  OCgp_Pnt^ Value3d(OCNaroWrappers::OCIntSurf_PathPoint^ PStart) ;

//! Returns the <U, V> parameters which are associated <br>
//!          with <P> <br>
//!          it's the parameters which start the marching algorithm <br>
static /*instead*/  void Value2d(OCNaroWrappers::OCIntSurf_PathPoint^ PStart, Standard_Real& U, Standard_Real& V) ;

//! Returns True if the point is a point on a non-oriented <br>
//!          arc, which means that the intersection line does not <br>
//!          stop at such a point but just go through such a point. <br>
//!          IsPassingPnt is True when IsOnArc is True <br>
static /*instead*/  System::Boolean IsPassingPnt(OCNaroWrappers::OCIntSurf_PathPoint^ PStart) ;

//! Returns True if the surfaces are tangent at this point. <br>
//!          IsTangent can be True when IsOnArc is True <br>
//!          if IsPassingPnt is True and IsTangent is True,this point <br>
//!          is a stopped point. <br>
static /*instead*/  System::Boolean IsTangent(OCNaroWrappers::OCIntSurf_PathPoint^ PStart) ;

//! returns the tangent at the intersection in 3d space <br>
//!          associated to <P> <br>
//!         an exception is raised if IsTangent is true. <br>
static /*instead*/  OCgp_Vec^ Direction3d(OCNaroWrappers::OCIntSurf_PathPoint^ PStart) ;

//! returns the tangent at the intersection in the <br>
//!          parametric space of the parametrized surface.This tangent <br>
//!          is associated to the value2d <br>
//!          la tangente a un sens signifiant (indique le sens de chemin <br>
//!          ement) <br>
//!          an exception is raised if IsTangent is true. <br>
static /*instead*/  OCgp_Dir2d^ Direction2d(OCNaroWrappers::OCIntSurf_PathPoint^ PStart) ;

//! Returns the multiplicity of the point i-e <br>
//!          the number of auxillar parameters associated to the <br>
//!          point which the principal parameters are given by Value2d <br>
static /*instead*/  Standard_Integer Multiplicity(OCNaroWrappers::OCIntSurf_PathPoint^ PStart) ;

//! Parametric coordinates associated to the multiplicity. <br>
//!          An exception is raised if Mult<=0 or Mult>multiplicity. <br>
static /*instead*/  void Parameters(OCNaroWrappers::OCIntSurf_PathPoint^ PStart, Standard_Integer Mult, Standard_Real& U, Standard_Real& V) ;

~OCIntSurf_PathPointTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
