// File generated by CPPExt (CPP file)
//

#include "TDF_Label.h"
#include "../Converter.h"
#include "TDF_ChildIterator.h"
#include "TDF_Attribute.h"
#include "TDF_AttributeIterator.h"
#include "TDF_Data.h"
#include "TDF_LabelMapHasher.h"
#include "../Standard/Standard_GUID.h"
#include "TDF_IDFilter.h"
#include "TDF_AttributeIndexedMap.h"


using namespace OCNaroWrappers;

OCTDF_Label::OCTDF_Label(TDF_Label* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTDF_Label::OCTDF_Label() 
{
  nativeHandle = new TDF_Label();
}

 void OCTDF_Label::Nullify()
{
  ((TDF_Label*)nativeHandle)->Nullify();
}

OCTDF_Data^ OCTDF_Label::Data()
{
  Handle(TDF_Data) tmp = ((TDF_Label*)nativeHandle)->Data();
  return gcnew OCTDF_Data(&tmp);
}

 Standard_Integer OCTDF_Label::Tag()
{
  return ((TDF_Label*)nativeHandle)->Tag();
}

OCTDF_Label^ OCTDF_Label::Father()
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TDF_Label*)nativeHandle)->Father();
  return gcnew OCTDF_Label(tmp);
}

 System::Boolean OCTDF_Label::IsNull()
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->IsNull());
}

 void OCTDF_Label::Imported(System::Boolean aStatus)
{
  ((TDF_Label*)nativeHandle)->Imported(OCConverter::BooleanToStandardBoolean(aStatus));
}

 System::Boolean OCTDF_Label::IsImported()
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->IsImported());
}

 System::Boolean OCTDF_Label::IsEqual(OCNaroWrappers::OCTDF_Label^ aLabel)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->IsEqual(*((TDF_Label*)aLabel->Handle)));
}

 System::Boolean OCTDF_Label::IsDifferent(OCNaroWrappers::OCTDF_Label^ aLabel)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->IsDifferent(*((TDF_Label*)aLabel->Handle)));
}

 System::Boolean OCTDF_Label::IsRoot()
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->IsRoot());
}

 System::Boolean OCTDF_Label::IsAttribute(OCNaroWrappers::OCStandard_GUID^ anID)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->IsAttribute(*((Standard_GUID*)anID->Handle)));
}

 void OCTDF_Label::AddAttribute(OCNaroWrappers::OCTDF_Attribute^ anAttribute)
{
  ((TDF_Label*)nativeHandle)->AddAttribute(*((Handle_TDF_Attribute*)anAttribute->Handle));
}

 void OCTDF_Label::ForgetAttribute(OCNaroWrappers::OCTDF_Attribute^ anAttribute)
{
  ((TDF_Label*)nativeHandle)->ForgetAttribute(*((Handle_TDF_Attribute*)anAttribute->Handle));
}

 System::Boolean OCTDF_Label::ForgetAttribute(OCNaroWrappers::OCStandard_GUID^ aguid)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->ForgetAttribute(*((Standard_GUID*)aguid->Handle)));
}

 void OCTDF_Label::ForgetAllAttributes(System::Boolean clearChildren)
{
  ((TDF_Label*)nativeHandle)->ForgetAllAttributes(OCConverter::BooleanToStandardBoolean(clearChildren));
}

 void OCTDF_Label::ResumeAttribute(OCNaroWrappers::OCTDF_Attribute^ anAttribute)
{
  ((TDF_Label*)nativeHandle)->ResumeAttribute(*((Handle_TDF_Attribute*)anAttribute->Handle));
}

 System::Boolean OCTDF_Label::FindAttribute(OCNaroWrappers::OCStandard_GUID^ anID, OCNaroWrappers::OCTDF_Attribute^ anAttribute)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->FindAttribute(*((Standard_GUID*)anID->Handle), *((Handle_TDF_Attribute*)anAttribute->Handle)));
}

 System::Boolean OCTDF_Label::FindAttribute(OCNaroWrappers::OCStandard_GUID^ anID, Standard_Integer aTransaction, OCNaroWrappers::OCTDF_Attribute^ anAttribute)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->FindAttribute(*((Standard_GUID*)anID->Handle), aTransaction, *((Handle_TDF_Attribute*)anAttribute->Handle)));
}

 System::Boolean OCTDF_Label::MayBeModified()
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->MayBeModified());
}

 System::Boolean OCTDF_Label::AttributesModified()
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->AttributesModified());
}

 System::Boolean OCTDF_Label::HasAttribute()
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->HasAttribute());
}

 Standard_Integer OCTDF_Label::NbAttributes()
{
  return ((TDF_Label*)nativeHandle)->NbAttributes();
}

 Standard_Integer OCTDF_Label::Depth()
{
  return ((TDF_Label*)nativeHandle)->Depth();
}

 System::Boolean OCTDF_Label::IsDescendant(OCNaroWrappers::OCTDF_Label^ aLabel)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->IsDescendant(*((TDF_Label*)aLabel->Handle)));
}

OCTDF_Label^ OCTDF_Label::Root()
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TDF_Label*)nativeHandle)->Root();
  return gcnew OCTDF_Label(tmp);
}

 System::Boolean OCTDF_Label::HasChild()
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->HasChild());
}

 Standard_Integer OCTDF_Label::NbChildren()
{
  return ((TDF_Label*)nativeHandle)->NbChildren();
}

OCTDF_Label^ OCTDF_Label::FindChild(Standard_Integer aTag, System::Boolean create)
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TDF_Label*)nativeHandle)->FindChild(aTag, OCConverter::BooleanToStandardBoolean(create));
  return gcnew OCTDF_Label(tmp);
}

OCTDF_Label^ OCTDF_Label::NewChild()
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TDF_Label*)nativeHandle)->NewChild();
  return gcnew OCTDF_Label(tmp);
}

 Standard_Integer OCTDF_Label::Transaction()
{
  return ((TDF_Label*)nativeHandle)->Transaction();
}

 System::Boolean OCTDF_Label::HasLowerNode(OCNaroWrappers::OCTDF_Label^ otherLabel)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->HasLowerNode(*((TDF_Label*)otherLabel->Handle)));
}

 System::Boolean OCTDF_Label::HasGreaterNode(OCNaroWrappers::OCTDF_Label^ otherLabel)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_Label*)nativeHandle)->HasGreaterNode(*((TDF_Label*)otherLabel->Handle)));
}

 Standard_OStream& OCTDF_Label::Dump(Standard_OStream& anOS)
{
  return ((TDF_Label*)nativeHandle)->Dump(anOS);
}

 void OCTDF_Label::ExtendedDump(Standard_OStream& anOS, OCNaroWrappers::OCTDF_IDFilter^ aFilter, OCNaroWrappers::OCTDF_AttributeIndexedMap^ aMap)
{
  ((TDF_Label*)nativeHandle)->ExtendedDump(anOS, *((TDF_IDFilter*)aFilter->Handle), *((TDF_AttributeIndexedMap*)aMap->Handle));
}

 void OCTDF_Label::EntryDump(Standard_OStream& anOS)
{
  ((TDF_Label*)nativeHandle)->EntryDump(anOS);
}


