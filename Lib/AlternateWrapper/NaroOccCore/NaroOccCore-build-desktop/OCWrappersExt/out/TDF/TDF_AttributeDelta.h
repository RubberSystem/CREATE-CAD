// File generated by CPPExt (Transient)
//
#ifndef _TDF_AttributeDelta_OCWrappers_HeaderFile
#define _TDF_AttributeDelta_OCWrappers_HeaderFile

// include the wrapped class
#include <TDF_AttributeDelta.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "TDF_Label.h"


namespace OCNaroWrappers
{

ref class OCTDF_Attribute;
ref class OCTDF_Label;
ref class OCStandard_GUID;


//! This class discribes the services we need to <br>
//!           implement Delta and Undo/Redo services. <br>
//! <br>
//!          AttributeDeltas are applied in an unpredictable <br>
//!          order. But by the redefinition of the method <br>
//!          IsNowApplicable, a condition can be verified <br>
//!          before application. If the AttributeDelta is not <br>
//!          yet applicable, it is put at the end of the <br>
//!          AttributeDelta list, to be treated later. If a <br>
//!          dead lock if found on the list, the <br>
//!          AttributeDeltas are forced to be applied in an <br>
//!          unpredictable order. <br>
public ref class OCTDF_AttributeDelta : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCTDF_AttributeDelta(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCTDF_AttributeDelta(Handle(TDF_AttributeDelta)* nativeHandle);

// Methods PUBLIC


OCTDF_AttributeDelta(OCNaroWrappers::OCTDF_Attribute^ anAttribute);

//! Returns the label concerned by <me>. <br>
 /*instead*/  OCTDF_Label^ Label() ;

//! Returns the reference attribute. <br>
 /*instead*/  OCTDF_Attribute^ Attribute() ;

//! Returns the ID of the attribute concerned by <me>. <br>
 /*instead*/  OCStandard_GUID^ ID() ;

//! Dumps the contents. <br>
//! <br>
virtual /*instead*/  Standard_OStream& Dump(Standard_OStream& OS) ;

~OCTDF_AttributeDelta()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
