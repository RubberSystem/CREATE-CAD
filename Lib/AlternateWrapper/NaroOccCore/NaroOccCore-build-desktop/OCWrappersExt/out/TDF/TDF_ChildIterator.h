// File generated by CPPExt (MPV)
//
#ifndef _TDF_ChildIterator_OCWrappers_HeaderFile
#define _TDF_ChildIterator_OCWrappers_HeaderFile

// include native header
#include <TDF_ChildIterator.hxx>
#include "../Converter.h"


#include "TDF_Label.h"


namespace OCNaroWrappers
{

ref class OCTDF_Label;


//! Iterates on the children of a label, at the first <br>
//!          level only. It is possible to ask the iterator to <br>
//!          explore all the sub label levels of the given one, <br>
//!          with the option "allLevels". <br>
public ref class OCTDF_ChildIterator  {

protected:
  TDF_ChildIterator* nativeHandle;
  OCTDF_ChildIterator(OCDummy^) {};

public:
  property TDF_ChildIterator* Handle
  {
    TDF_ChildIterator* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTDF_ChildIterator(TDF_ChildIterator* nativeHandle);

// Methods PUBLIC

//! Creates an empty iterator  object to <br>
//!  explore the children of a label. <br>
OCTDF_ChildIterator();

//! Constructs the iterator object defined by <br>
//!  the label aLabel.  Iterates on the children of the given label. If <br>
//!          <allLevels> option is set to true, it explores not <br>
//!          only the first, but all the sub label levels. <br>
OCTDF_ChildIterator(OCNaroWrappers::OCTDF_Label^ aLabel, System::Boolean allLevels);

//! Initializes the iteration on the children of the <br>
//!          given label. <br>
//! If <allLevels> option is set to true, <br>
//!          it explores not only the first, but all the sub <br>
//!          label levels. <br>
//!  If allLevels is false, only the first level of <br>
//!  child labels is explored. <br>
//!  In the example below, the label is iterated <br>
//!  using Initialize, More and Next and its <br>
//!  child labels dumped using TDF_Tool::Entry. <br>
//!  Example <br>
//!  void DumpChildren(const <br>
//!  TDF_Label& aLabel) <br>
//!  { <br>
//!  TDF_ChildIterator it; <br>
//!  TCollection_AsciiString es; <br>
//!  for <br>
//!  (it.Initialize(aLabel,Standard_True); <br>
//!  it.More(); it.Next()){ <br>
//!  TDF_Tool::Entry(it.Value(),es); <br>
//!  cout << as.ToCString() << endl; <br>
//!  } <br>
//!  } <br>
 /*instead*/  void Initialize(OCNaroWrappers::OCTDF_Label^ aLabel, System::Boolean allLevels) ;

//! Returns true if a current label is found in the <br>
//!  iteration process. <br>
//! <br>
 /*instead*/  System::Boolean More() ;

//! Move the  current  iteration  to the next Item. <br>
 /*instead*/  void Next() ;

//! Moves this iteration to the next brother <br>
//!  label. A brother label is one with the same <br>
//!  father as an initial label. <br>
//!  Use this function when the non-empty <br>
//!  constructor or Initialize has allLevels set to <br>
//!  true. The result is that the iteration does not <br>
//!  explore the children of the current label. <br>
//!          This method is interesting only with <br>
//!          "allLevels" behavior, because it avoids to explore <br>
//!          the current label children. <br>
 /*instead*/  void NextBrother() ;

//! Returns the current label; or, if there is <br>
//!          none, a null label. <br>
//! <br>
 /*instead*/  OCTDF_Label^ Value() ;

~OCTDF_ChildIterator()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
