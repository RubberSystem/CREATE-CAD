// File generated by CPPExt (CPP file)
//

#include "TDF_GUIDProgIDMap.h"
#include "../Converter.h"
#include "../Standard/Standard_GUID.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "TDF_DoubleMapNodeOfGUIDProgIDMap.h"
#include "TDF_DoubleMapIteratorOfGUIDProgIDMap.h"


using namespace OCNaroWrappers;

OCTDF_GUIDProgIDMap::OCTDF_GUIDProgIDMap(TDF_GUIDProgIDMap* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTDF_GUIDProgIDMap::OCTDF_GUIDProgIDMap(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TDF_GUIDProgIDMap(NbBuckets);
}

OCTDF_GUIDProgIDMap^ OCTDF_GUIDProgIDMap::Assign(OCNaroWrappers::OCTDF_GUIDProgIDMap^ Other)
{
  TDF_GUIDProgIDMap* tmp = new TDF_GUIDProgIDMap(0);
  *tmp = ((TDF_GUIDProgIDMap*)nativeHandle)->Assign(*((TDF_GUIDProgIDMap*)Other->Handle));
  return gcnew OCTDF_GUIDProgIDMap(tmp);
}

 void OCTDF_GUIDProgIDMap::ReSize(Standard_Integer NbBuckets)
{
  ((TDF_GUIDProgIDMap*)nativeHandle)->ReSize(NbBuckets);
}

 void OCTDF_GUIDProgIDMap::Bind(OCNaroWrappers::OCStandard_GUID^ K1, OCNaroWrappers::OCTCollection_ExtendedString^ K2)
{
  ((TDF_GUIDProgIDMap*)nativeHandle)->Bind(*((Standard_GUID*)K1->Handle), *((TCollection_ExtendedString*)K2->Handle));
}

 System::Boolean OCTDF_GUIDProgIDMap::AreBound(OCNaroWrappers::OCStandard_GUID^ K1, OCNaroWrappers::OCTCollection_ExtendedString^ K2)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_GUIDProgIDMap*)nativeHandle)->AreBound(*((Standard_GUID*)K1->Handle), *((TCollection_ExtendedString*)K2->Handle)));
}

 System::Boolean OCTDF_GUIDProgIDMap::IsBound1(OCNaroWrappers::OCStandard_GUID^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_GUIDProgIDMap*)nativeHandle)->IsBound1(*((Standard_GUID*)K->Handle)));
}

 System::Boolean OCTDF_GUIDProgIDMap::IsBound2(OCNaroWrappers::OCTCollection_ExtendedString^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_GUIDProgIDMap*)nativeHandle)->IsBound2(*((TCollection_ExtendedString*)K->Handle)));
}

OCTCollection_ExtendedString^ OCTDF_GUIDProgIDMap::Find1(OCNaroWrappers::OCStandard_GUID^ K)
{
  TCollection_ExtendedString* tmp = new TCollection_ExtendedString();
  *tmp = ((TDF_GUIDProgIDMap*)nativeHandle)->Find1(*((Standard_GUID*)K->Handle));
  return gcnew OCTCollection_ExtendedString(tmp);
}

OCStandard_GUID^ OCTDF_GUIDProgIDMap::Find2(OCNaroWrappers::OCTCollection_ExtendedString^ K)
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = ((TDF_GUIDProgIDMap*)nativeHandle)->Find2(*((TCollection_ExtendedString*)K->Handle));
  return gcnew OCStandard_GUID(tmp);
}

 System::Boolean OCTDF_GUIDProgIDMap::UnBind1(OCNaroWrappers::OCStandard_GUID^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_GUIDProgIDMap*)nativeHandle)->UnBind1(*((Standard_GUID*)K->Handle)));
}

 System::Boolean OCTDF_GUIDProgIDMap::UnBind2(OCNaroWrappers::OCTCollection_ExtendedString^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_GUIDProgIDMap*)nativeHandle)->UnBind2(*((TCollection_ExtendedString*)K->Handle)));
}


