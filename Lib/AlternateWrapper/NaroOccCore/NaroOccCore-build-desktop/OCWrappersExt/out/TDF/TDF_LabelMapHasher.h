// File generated by CPPExt (MPV)
//
#ifndef _TDF_LabelMapHasher_OCWrappers_HeaderFile
#define _TDF_LabelMapHasher_OCWrappers_HeaderFile

// include native header
#include <TDF_LabelMapHasher.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTDF_Label;



public ref class OCTDF_LabelMapHasher  {

protected:
  TDF_LabelMapHasher* nativeHandle;
  OCTDF_LabelMapHasher(OCDummy^) {};

public:
  property TDF_LabelMapHasher* Handle
  {
    TDF_LabelMapHasher* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTDF_LabelMapHasher(TDF_LabelMapHasher* nativeHandle);

// Methods PUBLIC

//! Returns a HasCode value  for  the  Key <K>  in the <br>
//!          range 0..Upper. <br>
static /*instead*/  Standard_Integer HashCode(OCNaroWrappers::OCTDF_Label^ aLab, Standard_Integer Upper) ;

//! Returns True  when the two  keys are the same. Two <br>
//!          same  keys  must   have  the  same  hashcode,  the <br>
//!          contrary is not necessary. <br>
//! <br>
static /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCTDF_Label^ aLab1, OCNaroWrappers::OCTDF_Label^ aLab2) ;

~OCTDF_LabelMapHasher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
