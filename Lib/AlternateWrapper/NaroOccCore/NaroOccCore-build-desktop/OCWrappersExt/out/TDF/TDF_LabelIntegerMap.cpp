// File generated by CPPExt (CPP file)
//

#include "TDF_LabelIntegerMap.h"
#include "../Converter.h"
#include "TDF_Label.h"
#include "TDF_LabelMapHasher.h"
#include "TDF_DataMapNodeOfLabelIntegerMap.h"
#include "TDF_DataMapIteratorOfLabelIntegerMap.h"


using namespace OCNaroWrappers;

OCTDF_LabelIntegerMap::OCTDF_LabelIntegerMap(TDF_LabelIntegerMap* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTDF_LabelIntegerMap::OCTDF_LabelIntegerMap(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TDF_LabelIntegerMap(NbBuckets);
}

OCTDF_LabelIntegerMap^ OCTDF_LabelIntegerMap::Assign(OCNaroWrappers::OCTDF_LabelIntegerMap^ Other)
{
  TDF_LabelIntegerMap* tmp = new TDF_LabelIntegerMap(0);
  *tmp = ((TDF_LabelIntegerMap*)nativeHandle)->Assign(*((TDF_LabelIntegerMap*)Other->Handle));
  return gcnew OCTDF_LabelIntegerMap(tmp);
}

 void OCTDF_LabelIntegerMap::ReSize(Standard_Integer NbBuckets)
{
  ((TDF_LabelIntegerMap*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCTDF_LabelIntegerMap::Bind(OCNaroWrappers::OCTDF_Label^ K, Standard_Integer I)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_LabelIntegerMap*)nativeHandle)->Bind(*((TDF_Label*)K->Handle), I));
}

 System::Boolean OCTDF_LabelIntegerMap::IsBound(OCNaroWrappers::OCTDF_Label^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_LabelIntegerMap*)nativeHandle)->IsBound(*((TDF_Label*)K->Handle)));
}

 System::Boolean OCTDF_LabelIntegerMap::UnBind(OCNaroWrappers::OCTDF_Label^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_LabelIntegerMap*)nativeHandle)->UnBind(*((TDF_Label*)K->Handle)));
}

 Standard_Integer OCTDF_LabelIntegerMap::Find(OCNaroWrappers::OCTDF_Label^ K)
{
  return ((TDF_LabelIntegerMap*)nativeHandle)->Find(*((TDF_Label*)K->Handle));
}

 Standard_Integer OCTDF_LabelIntegerMap::ChangeFind(OCNaroWrappers::OCTDF_Label^ K)
{
  return ((TDF_LabelIntegerMap*)nativeHandle)->ChangeFind(*((TDF_Label*)K->Handle));
}

 Standard_Address OCTDF_LabelIntegerMap::Find1(OCNaroWrappers::OCTDF_Label^ K)
{
  return ((TDF_LabelIntegerMap*)nativeHandle)->Find1(*((TDF_Label*)K->Handle));
}

 Standard_Address OCTDF_LabelIntegerMap::ChangeFind1(OCNaroWrappers::OCTDF_Label^ K)
{
  return ((TDF_LabelIntegerMap*)nativeHandle)->ChangeFind1(*((TDF_Label*)K->Handle));
}


