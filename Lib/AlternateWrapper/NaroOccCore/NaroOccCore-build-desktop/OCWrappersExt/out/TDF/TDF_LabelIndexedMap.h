// File generated by CPPExt (MPV)
//
#ifndef _TDF_LabelIndexedMap_OCWrappers_HeaderFile
#define _TDF_LabelIndexedMap_OCWrappers_HeaderFile

// include native header
#include <TDF_LabelIndexedMap.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTDF_Label;
ref class OCTDF_LabelMapHasher;
ref class OCTDF_IndexedMapNodeOfLabelIndexedMap;



public ref class OCTDF_LabelIndexedMap  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCTDF_LabelIndexedMap(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCTDF_LabelIndexedMap(TDF_LabelIndexedMap* nativeHandle);

// Methods PUBLIC


OCTDF_LabelIndexedMap(Standard_Integer NbBuckets);


 /*instead*/  OCTDF_LabelIndexedMap^ Assign(OCNaroWrappers::OCTDF_LabelIndexedMap^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  Standard_Integer Add(OCNaroWrappers::OCTDF_Label^ K) ;


 /*instead*/  void Substitute(Standard_Integer I, OCNaroWrappers::OCTDF_Label^ K) ;


 /*instead*/  void RemoveLast() ;


 /*instead*/  System::Boolean Contains(OCNaroWrappers::OCTDF_Label^ K) ;


 /*instead*/  OCTDF_Label^ FindKey(Standard_Integer I) ;


 /*instead*/  Standard_Integer FindIndex(OCNaroWrappers::OCTDF_Label^ K) ;

~OCTDF_LabelIndexedMap()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
