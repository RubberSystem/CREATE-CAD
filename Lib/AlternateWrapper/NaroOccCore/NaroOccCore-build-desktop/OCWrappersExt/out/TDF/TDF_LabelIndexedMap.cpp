// File generated by CPPExt (CPP file)
//

#include "TDF_LabelIndexedMap.h"
#include "../Converter.h"
#include "TDF_Label.h"
#include "TDF_LabelMapHasher.h"
#include "TDF_IndexedMapNodeOfLabelIndexedMap.h"


using namespace OCNaroWrappers;

OCTDF_LabelIndexedMap::OCTDF_LabelIndexedMap(TDF_LabelIndexedMap* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTDF_LabelIndexedMap::OCTDF_LabelIndexedMap(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TDF_LabelIndexedMap(NbBuckets);
}

OCTDF_LabelIndexedMap^ OCTDF_LabelIndexedMap::Assign(OCNaroWrappers::OCTDF_LabelIndexedMap^ Other)
{
  TDF_LabelIndexedMap* tmp = new TDF_LabelIndexedMap(0);
  *tmp = ((TDF_LabelIndexedMap*)nativeHandle)->Assign(*((TDF_LabelIndexedMap*)Other->Handle));
  return gcnew OCTDF_LabelIndexedMap(tmp);
}

 void OCTDF_LabelIndexedMap::ReSize(Standard_Integer NbBuckets)
{
  ((TDF_LabelIndexedMap*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCTDF_LabelIndexedMap::Add(OCNaroWrappers::OCTDF_Label^ K)
{
  return ((TDF_LabelIndexedMap*)nativeHandle)->Add(*((TDF_Label*)K->Handle));
}

 void OCTDF_LabelIndexedMap::Substitute(Standard_Integer I, OCNaroWrappers::OCTDF_Label^ K)
{
  ((TDF_LabelIndexedMap*)nativeHandle)->Substitute(I, *((TDF_Label*)K->Handle));
}

 void OCTDF_LabelIndexedMap::RemoveLast()
{
  ((TDF_LabelIndexedMap*)nativeHandle)->RemoveLast();
}

 System::Boolean OCTDF_LabelIndexedMap::Contains(OCNaroWrappers::OCTDF_Label^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_LabelIndexedMap*)nativeHandle)->Contains(*((TDF_Label*)K->Handle)));
}

OCTDF_Label^ OCTDF_LabelIndexedMap::FindKey(Standard_Integer I)
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TDF_LabelIndexedMap*)nativeHandle)->FindKey(I);
  return gcnew OCTDF_Label(tmp);
}

 Standard_Integer OCTDF_LabelIndexedMap::FindIndex(OCNaroWrappers::OCTDF_Label^ K)
{
  return ((TDF_LabelIndexedMap*)nativeHandle)->FindIndex(*((TDF_Label*)K->Handle));
}


