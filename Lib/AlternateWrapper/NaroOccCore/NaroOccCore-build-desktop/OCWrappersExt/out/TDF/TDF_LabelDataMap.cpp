// File generated by CPPExt (CPP file)
//

#include "TDF_LabelDataMap.h"
#include "../Converter.h"
#include "TDF_Label.h"
#include "TDF_LabelMapHasher.h"
#include "TDF_DataMapNodeOfLabelDataMap.h"
#include "TDF_DataMapIteratorOfLabelDataMap.h"


using namespace OCNaroWrappers;

OCTDF_LabelDataMap::OCTDF_LabelDataMap(TDF_LabelDataMap* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTDF_LabelDataMap::OCTDF_LabelDataMap(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TDF_LabelDataMap(NbBuckets);
}

OCTDF_LabelDataMap^ OCTDF_LabelDataMap::Assign(OCNaroWrappers::OCTDF_LabelDataMap^ Other)
{
  TDF_LabelDataMap* tmp = new TDF_LabelDataMap(0);
  *tmp = ((TDF_LabelDataMap*)nativeHandle)->Assign(*((TDF_LabelDataMap*)Other->Handle));
  return gcnew OCTDF_LabelDataMap(tmp);
}

 void OCTDF_LabelDataMap::ReSize(Standard_Integer NbBuckets)
{
  ((TDF_LabelDataMap*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCTDF_LabelDataMap::Bind(OCNaroWrappers::OCTDF_Label^ K, OCNaroWrappers::OCTDF_Label^ I)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_LabelDataMap*)nativeHandle)->Bind(*((TDF_Label*)K->Handle), *((TDF_Label*)I->Handle)));
}

 System::Boolean OCTDF_LabelDataMap::IsBound(OCNaroWrappers::OCTDF_Label^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_LabelDataMap*)nativeHandle)->IsBound(*((TDF_Label*)K->Handle)));
}

 System::Boolean OCTDF_LabelDataMap::UnBind(OCNaroWrappers::OCTDF_Label^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TDF_LabelDataMap*)nativeHandle)->UnBind(*((TDF_Label*)K->Handle)));
}

OCTDF_Label^ OCTDF_LabelDataMap::Find(OCNaroWrappers::OCTDF_Label^ K)
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TDF_LabelDataMap*)nativeHandle)->Find(*((TDF_Label*)K->Handle));
  return gcnew OCTDF_Label(tmp);
}

OCTDF_Label^ OCTDF_LabelDataMap::ChangeFind(OCNaroWrappers::OCTDF_Label^ K)
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TDF_LabelDataMap*)nativeHandle)->ChangeFind(*((TDF_Label*)K->Handle));
  return gcnew OCTDF_Label(tmp);
}

 Standard_Address OCTDF_LabelDataMap::Find1(OCNaroWrappers::OCTDF_Label^ K)
{
  return ((TDF_LabelDataMap*)nativeHandle)->Find1(*((TDF_Label*)K->Handle));
}

 Standard_Address OCTDF_LabelDataMap::ChangeFind1(OCNaroWrappers::OCTDF_Label^ K)
{
  return ((TDF_LabelDataMap*)nativeHandle)->ChangeFind1(*((TDF_Label*)K->Handle));
}


