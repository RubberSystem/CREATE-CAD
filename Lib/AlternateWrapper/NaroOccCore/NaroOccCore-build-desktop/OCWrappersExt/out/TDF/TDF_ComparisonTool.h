// File generated by CPPExt (MPV)
//
#ifndef _TDF_ComparisonTool_OCWrappers_HeaderFile
#define _TDF_ComparisonTool_OCWrappers_HeaderFile

// include native header
#include <TDF_ComparisonTool.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTDF_DataSet;
ref class OCTDF_IDFilter;
ref class OCTDF_RelocationTable;
ref class OCTDF_Label;


//! This class provides services to compare sets of <br>
//!          information. The use of this tool can works after <br>
//!          a copy, acted by a CopyTool. <br>
//! <br>
//!          * Compare(...) compares two DataSet and returns <br>
//!          the result. <br>
//! <br>
//!          * SourceUnbound(...) builds the difference between <br>
//!          a relocation dictionnary and a source set of <br>
//!          information. <br>
//! <br>
//!          * TargetUnbound(...) does the same between a <br>
//!          relocation dictionnary and a target set of <br>
//!          information. <br>
//! <br>
//!          * Cut(aDataSet, anLabel) removes a set of <br>
//!          attributes. <br>
//! <br>
//!          * IsSelfContained(...) returns true if all the <br>
//!          labels of the attributes of the given DataSet are <br>
//!          descendant of the given label. <br>
public ref class OCTDF_ComparisonTool  {

protected:
  TDF_ComparisonTool* nativeHandle;
  OCTDF_ComparisonTool(OCDummy^) {};

public:
  property TDF_ComparisonTool* Handle
  {
    TDF_ComparisonTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTDF_ComparisonTool(TDF_ComparisonTool* nativeHandle);

// Methods PUBLIC

//! Compares <aSourceDataSet> with <aTargetDataSet>, <br>
//!          updating <aRelocationTable> with labels and <br>
//!          attributes found in both sets. <br>
static /*instead*/  void Compare(OCNaroWrappers::OCTDF_DataSet^ aSourceDataSet, OCNaroWrappers::OCTDF_DataSet^ aTargetDataSet, OCNaroWrappers::OCTDF_IDFilter^ aFilter, OCNaroWrappers::OCTDF_RelocationTable^ aRelocationTable) ;

//! Finds from <aRefDataSet> all the keys not bound <br>
//!          into <aRelocationTable> and put them into <br>
//!          <aDiffDataSet>. Returns True if the difference <br>
//!          contains at least one key. (A key is a source <br>
//!          object). <br>
//! <br>
//!          <anOption> may take the following values: <br>
//!          1 : labels treatment only; <br>
//!          2 : attributes treatment only (default value); <br>
//!          3 : both labels & attributes treatment. <br>
static /*instead*/  System::Boolean SourceUnbound(OCNaroWrappers::OCTDF_DataSet^ aRefDataSet, OCNaroWrappers::OCTDF_RelocationTable^ aRelocationTable, OCNaroWrappers::OCTDF_IDFilter^ aFilter, OCNaroWrappers::OCTDF_DataSet^ aDiffDataSet, Standard_Integer anOption) ;

//! Substracts from <aRefDataSet> all the items bound <br>
//!          into <aRelocationTable>. The result is put into <br>
//!          <aDiffDataSet>. Returns True if the difference <br>
//!          contains at least one item. (An item is a target <br>
//!          object). <br>
//! <br>
//!          <anOption> may take the following values: <br>
//!          1 : labels treatment only; <br>
//!          2 : attributes treatment  only(default value); <br>
//!          3 : both labels & attributes treatment. <br>
static /*instead*/  System::Boolean TargetUnbound(OCNaroWrappers::OCTDF_DataSet^ aRefDataSet, OCNaroWrappers::OCTDF_RelocationTable^ aRelocationTable, OCNaroWrappers::OCTDF_IDFilter^ aFilter, OCNaroWrappers::OCTDF_DataSet^ aDiffDataSet, Standard_Integer anOption) ;

//! Removes attributes from <aDataSet>. <br>
static /*instead*/  void Cut(OCNaroWrappers::OCTDF_DataSet^ aDataSet) ;

//! Returns true if all the labels of <aDataSet> are <br>
//!          descendant of <aLabel>. <br>
static /*instead*/  System::Boolean IsSelfContained(OCNaroWrappers::OCTDF_Label^ aLabel, OCNaroWrappers::OCTDF_DataSet^ aDataSet) ;

~OCTDF_ComparisonTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
