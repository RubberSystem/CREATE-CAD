// File generated by CPPExt (CPP file)
//

#include "TDF_Data.h"
#include "../Converter.h"
#include "TDF_Transaction.h"
#include "TDF_LabelNode.h"
#include "TDF_Delta.h"
#include "TDF_Label.h"


using namespace OCNaroWrappers;

OCTDF_Data::OCTDF_Data(Handle(TDF_Data)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TDF_Data(*nativeHandle);
}

OCTDF_Data::OCTDF_Data() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TDF_Data(new TDF_Data());
}

OCTDF_Label^ OCTDF_Data::Root()
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = (*((Handle_TDF_Data*)nativeHandle))->Root();
  return gcnew OCTDF_Label(tmp);
}

 Standard_Integer OCTDF_Data::Transaction()
{
  return (*((Handle_TDF_Data*)nativeHandle))->Transaction();
}

 Standard_Integer OCTDF_Data::Time()
{
  return (*((Handle_TDF_Data*)nativeHandle))->Time();
}

 System::Boolean OCTDF_Data::IsApplicable(OCNaroWrappers::OCTDF_Delta^ aDelta)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TDF_Data*)nativeHandle))->IsApplicable(*((Handle_TDF_Delta*)aDelta->Handle)));
}

OCTDF_Delta^ OCTDF_Data::Undo(OCNaroWrappers::OCTDF_Delta^ aDelta, System::Boolean withDelta)
{
  Handle(TDF_Delta) tmp = (*((Handle_TDF_Data*)nativeHandle))->Undo(*((Handle_TDF_Delta*)aDelta->Handle), OCConverter::BooleanToStandardBoolean(withDelta));
  return gcnew OCTDF_Delta(&tmp);
}

 System::Boolean OCTDF_Data::NotUndoMode()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TDF_Data*)nativeHandle))->NotUndoMode());
}

 Standard_OStream& OCTDF_Data::Dump(Standard_OStream& anOS)
{
  return (*((Handle_TDF_Data*)nativeHandle))->Dump(anOS);
}

 void OCTDF_Data::AllowModification(System::Boolean isAllowed)
{
  (*((Handle_TDF_Data*)nativeHandle))->AllowModification(OCConverter::BooleanToStandardBoolean(isAllowed));
}

 System::Boolean OCTDF_Data::IsModificationAllowed()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TDF_Data*)nativeHandle))->IsModificationAllowed());
}

 TDF_HAllocator& OCTDF_Data::LabelNodeAllocator()
{
  return (*((Handle_TDF_Data*)nativeHandle))->LabelNodeAllocator();
}


