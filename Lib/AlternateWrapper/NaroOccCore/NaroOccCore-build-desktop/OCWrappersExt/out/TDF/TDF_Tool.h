// File generated by CPPExt (MPV)
//
#ifndef _TDF_Tool_OCWrappers_HeaderFile
#define _TDF_Tool_OCWrappers_HeaderFile

// include native header
#include <TDF_Tool.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTDF_Label;
ref class OCTDF_IDFilter;
ref class OCTDF_AttributeMap;
ref class OCTCollection_AsciiString;
ref class OCTColStd_ListOfInteger;
ref class OCTDF_Data;
ref class OCTDF_LabelList;
ref class OCTDF_LabelIntegerMap;


//! This class provides general services for a data framework. <br>
public ref class OCTDF_Tool  {

protected:
  TDF_Tool* nativeHandle;
  OCTDF_Tool(OCDummy^) {};

public:
  property TDF_Tool* Handle
  {
    TDF_Tool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTDF_Tool(TDF_Tool* nativeHandle);

// Methods PUBLIC

//! Returns the number of labels of the tree, <br>
//! including <aLabel>. aLabel is also included in this figure. <br>
//! This information is useful in setting the size of an array. <br>
static /*instead*/  Standard_Integer NbLabels(OCNaroWrappers::OCTDF_Label^ aLabel) ;

//! Returns the total number of attributes attached <br>
//! to the labels dependent on the label aLabel. <br>
//! The attributes of aLabel are also included in this figure. <br>
//! This information is useful in setting the size of an array. <br>
static /*instead*/  Standard_Integer NbAttributes(OCNaroWrappers::OCTDF_Label^ aLabel) ;

//! Returns the number of attributes of the tree, <br>
//!          selected by a<Filter>, including those of <br>
//!          <aLabel>. <br>
static /*instead*/  Standard_Integer NbAttributes(OCNaroWrappers::OCTDF_Label^ aLabel, OCNaroWrappers::OCTDF_IDFilter^ aFilter) ;

//! Returns true if <aLabel> and its descendants <br>
//!          reference only attributes or labels attached to <br>
//!          themselves. <br>
static /*instead*/  System::Boolean IsSelfContained(OCNaroWrappers::OCTDF_Label^ aLabel) ;

//! Returns true if <aLabel> and its descendants <br>
//!          reference only attributes or labels attached to <br>
//!          themselves and kept by <aFilter>. <br>
static /*instead*/  System::Boolean IsSelfContained(OCNaroWrappers::OCTDF_Label^ aLabel, OCNaroWrappers::OCTDF_IDFilter^ aFilter) ;

//! Returns in <theAtts> the attributes having out <br>
//!          references. <br>
//! <br>
//!          Caution: <theAtts> is not cleared before use! <br>
static /*instead*/  void OutReferers(OCNaroWrappers::OCTDF_Label^ theLabel, OCNaroWrappers::OCTDF_AttributeMap^ theAtts) ;

//! Returns in <atts> the attributes having out <br>
//!          references and kept by <aFilterForReferers>. <br>
//!          It considers only the references kept by <aFilterForReferences>. <br>
//!          Caution: <atts> is not cleared before use! <br>
static /*instead*/  void OutReferers(OCNaroWrappers::OCTDF_Label^ aLabel, OCNaroWrappers::OCTDF_IDFilter^ aFilterForReferers, OCNaroWrappers::OCTDF_IDFilter^ aFilterForReferences, OCNaroWrappers::OCTDF_AttributeMap^ atts) ;

//! Returns in <atts> the referenced attributes. <br>
//!          Caution: <atts> is not cleared before use! <br>
static /*instead*/  void OutReferences(OCNaroWrappers::OCTDF_Label^ aLabel, OCNaroWrappers::OCTDF_AttributeMap^ atts) ;

//! Returns in <atts> the referenced attributes and kept by <aFilterForReferences>. <br>
//!          It considers only the referers kept by <aFilterForReferers>. <br>
//!          Caution: <atts> is not cleared before use! <br>
static /*instead*/  void OutReferences(OCNaroWrappers::OCTDF_Label^ aLabel, OCNaroWrappers::OCTDF_IDFilter^ aFilterForReferers, OCNaroWrappers::OCTDF_IDFilter^ aFilterForReferences, OCNaroWrappers::OCTDF_AttributeMap^ atts) ;

//! Returns the label having the same sub-entry as <br>
//!          <aLabel> but located as descendant as <toRoot> <br>
//!          instead of <fromRoot>. <br>
//! <br>
//!          Exemple : <br>
//! <br>
//!          aLabel = 0:3:24:7:2:7 <br>
//!          fromRoot = 0:3:24 <br>
//!          toRoot = 0:5 <br>
//!          returned label = 0:5:7:2:7 <br>
static /*instead*/  void RelocateLabel(OCNaroWrappers::OCTDF_Label^ aSourceLabel, OCNaroWrappers::OCTDF_Label^ fromRoot, OCNaroWrappers::OCTDF_Label^ toRoot, OCNaroWrappers::OCTDF_Label^ aTargetLabel, System::Boolean create) ;

//! Returns the entry for the label aLabel in the form <br>
//! of the ASCII character string anEntry containing <br>
//! the tag list for aLabel. <br>
static /*instead*/  void Entry(OCNaroWrappers::OCTDF_Label^ aLabel, OCNaroWrappers::OCTCollection_AsciiString^ anEntry) ;

//! Returns the entry of <aLabel> as list of integers <br>
//!          in <aTagList>. <br>
static /*instead*/  void TagList(OCNaroWrappers::OCTDF_Label^ aLabel, OCNaroWrappers::OCTColStd_ListOfInteger^ aTagList) ;

//! Returns the entry expressed by <anEntry> as list <br>
//!          of integers in <aTagList>. <br>
static /*instead*/  void TagList(OCNaroWrappers::OCTCollection_AsciiString^ anEntry, OCNaroWrappers::OCTColStd_ListOfInteger^ aTagList) ;

//! Returns the label expressed by <anEntry>; creates <br>
//!          the label if it does not exist and if <create> is <br>
//!          true. <br>
static /*instead*/  void Label(OCNaroWrappers::OCTDF_Data^ aDF, OCNaroWrappers::OCTCollection_AsciiString^ anEntry, OCNaroWrappers::OCTDF_Label^ aLabel, System::Boolean create) ;

//! Returns the label expressed by <anEntry>; creates <br>
//!          the label if it does not exist and if <create> is <br>
//!          true. <br>
static /*instead*/  void Label(OCNaroWrappers::OCTDF_Data^ aDF, System::String^ anEntry, OCNaroWrappers::OCTDF_Label^ aLabel, System::Boolean create) ;

//! Returns the label expressed by <anEntry>; creates <br>
//!          the label if it does not exist and if <create> is <br>
//!          true. <br>
static /*instead*/  void Label(OCNaroWrappers::OCTDF_Data^ aDF, OCNaroWrappers::OCTColStd_ListOfInteger^ aTagList, OCNaroWrappers::OCTDF_Label^ aLabel, System::Boolean create) ;

//! Adds the labels of <aLabelList> to <aLabelMap> if <br>
//!          they are unbound, or increases their reference <br>
//!          counters. At the end of the process, <aLabelList> <br>
//!          contains only the ADDED labels. <br>
static /*instead*/  void CountLabels(OCNaroWrappers::OCTDF_LabelList^ aLabelList, OCNaroWrappers::OCTDF_LabelIntegerMap^ aLabelMap) ;

//! Decreases the reference counters of the labels of <br>
//!          <aLabelList> to <aLabelMap>, and removes labels <br>
//!          with null counter. At the end of the process, <br>
//!          <aLabelList> contains only the SUPPRESSED labels. <br>
static /*instead*/  void DeductLabels(OCNaroWrappers::OCTDF_LabelList^ aLabelList, OCNaroWrappers::OCTDF_LabelIntegerMap^ aLabelMap) ;

//! Dumps <aDF> and its labels and their attributes. <br>
static /*instead*/  void DeepDump(Standard_OStream& anOS, OCNaroWrappers::OCTDF_Data^ aDF) ;

//! Dumps <aDF> and its labels and their attributes, <br>
//!          if their IDs are kept by <aFilter>. Dumps also the <br>
//!          attributes content. <br>
static /*instead*/  void ExtendedDeepDump(Standard_OStream& anOS, OCNaroWrappers::OCTDF_Data^ aDF, OCNaroWrappers::OCTDF_IDFilter^ aFilter) ;

//! Dumps <aLabel>, its chilren and their attributes. <br>
static /*instead*/  void DeepDump(Standard_OStream& anOS, OCNaroWrappers::OCTDF_Label^ aLabel) ;

//! Dumps <aLabel>, its chilren and their attributes, <br>
//!          if their IDs are kept by <aFilter>. Dumps also the <br>
//!          attributes content. <br>
static /*instead*/  void ExtendedDeepDump(Standard_OStream& anOS, OCNaroWrappers::OCTDF_Label^ aLabel, OCNaroWrappers::OCTDF_IDFilter^ aFilter) ;

~OCTDF_Tool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
