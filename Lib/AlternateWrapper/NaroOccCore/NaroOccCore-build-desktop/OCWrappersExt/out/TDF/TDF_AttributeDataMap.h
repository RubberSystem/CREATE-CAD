// File generated by CPPExt (MPV)
//
#ifndef _TDF_AttributeDataMap_OCWrappers_HeaderFile
#define _TDF_AttributeDataMap_OCWrappers_HeaderFile

// include native header
#include <TDF_AttributeDataMap.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTDF_Attribute;
ref class OCTColStd_MapTransientHasher;
ref class OCTDF_DataMapNodeOfAttributeDataMap;
ref class OCTDF_DataMapIteratorOfAttributeDataMap;



public ref class OCTDF_AttributeDataMap  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCTDF_AttributeDataMap(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCTDF_AttributeDataMap(TDF_AttributeDataMap* nativeHandle);

// Methods PUBLIC


OCTDF_AttributeDataMap(Standard_Integer NbBuckets);


 /*instead*/  OCTDF_AttributeDataMap^ Assign(OCNaroWrappers::OCTDF_AttributeDataMap^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(OCNaroWrappers::OCTDF_Attribute^ K, OCNaroWrappers::OCTDF_Attribute^ I) ;


 /*instead*/  System::Boolean IsBound(OCNaroWrappers::OCTDF_Attribute^ K) ;


 /*instead*/  System::Boolean UnBind(OCNaroWrappers::OCTDF_Attribute^ K) ;


 /*instead*/  OCTDF_Attribute^ Find(OCNaroWrappers::OCTDF_Attribute^ K) ;


 /*instead*/  OCTDF_Attribute^ ChangeFind(OCNaroWrappers::OCTDF_Attribute^ K) ;


 /*instead*/  Standard_Address Find1(OCNaroWrappers::OCTDF_Attribute^ K) ;


 /*instead*/  Standard_Address ChangeFind1(OCNaroWrappers::OCTDF_Attribute^ K) ;

~OCTDF_AttributeDataMap()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
