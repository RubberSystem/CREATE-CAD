// File generated by CPPExt (CPP file)
//

#include "ProjLib_ComputeApproxOnPolarSurface.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_BSplineCurve.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../Adaptor3d/Adaptor3d_HCurve.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"


using namespace OCNaroWrappers;

OCProjLib_ComputeApproxOnPolarSurface::OCProjLib_ComputeApproxOnPolarSurface(ProjLib_ComputeApproxOnPolarSurface* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCProjLib_ComputeApproxOnPolarSurface::OCProjLib_ComputeApproxOnPolarSurface() 
{
  nativeHandle = new ProjLib_ComputeApproxOnPolarSurface();
}

OCProjLib_ComputeApproxOnPolarSurface::OCProjLib_ComputeApproxOnPolarSurface(OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol) 
{
  nativeHandle = new ProjLib_ComputeApproxOnPolarSurface(*((Handle_Adaptor3d_HCurve*)C->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle), Tol);
}

OCProjLib_ComputeApproxOnPolarSurface::OCProjLib_ComputeApproxOnPolarSurface(OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2d, OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol) 
{
  nativeHandle = new ProjLib_ComputeApproxOnPolarSurface(*((Handle_Adaptor2d_HCurve2d*)InitCurve2d->Handle), *((Handle_Adaptor3d_HCurve*)C->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle), Tol);
}

OCProjLib_ComputeApproxOnPolarSurface::OCProjLib_ComputeApproxOnPolarSurface(OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2d, OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2dBis, OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol) 
{
  nativeHandle = new ProjLib_ComputeApproxOnPolarSurface(*((Handle_Adaptor2d_HCurve2d*)InitCurve2d->Handle), *((Handle_Adaptor2d_HCurve2d*)InitCurve2dBis->Handle), *((Handle_Adaptor3d_HCurve*)C->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle), Tol);
}

OCGeom2d_BSplineCurve^ OCProjLib_ComputeApproxOnPolarSurface::Perform(OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2d, OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  Handle(Geom2d_BSplineCurve) tmp = ((ProjLib_ComputeApproxOnPolarSurface*)nativeHandle)->Perform(*((Handle_Adaptor2d_HCurve2d*)InitCurve2d->Handle), *((Handle_Adaptor3d_HCurve*)C->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle));
  return gcnew OCGeom2d_BSplineCurve(&tmp);
}

OCAdaptor2d_HCurve2d^ OCProjLib_ComputeApproxOnPolarSurface::BuildInitialCurve2d(OCNaroWrappers::OCAdaptor3d_HCurve^ Curve, OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  Handle(Adaptor2d_HCurve2d) tmp = ((ProjLib_ComputeApproxOnPolarSurface*)nativeHandle)->BuildInitialCurve2d(*((Handle_Adaptor3d_HCurve*)Curve->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle));
  return gcnew OCAdaptor2d_HCurve2d(&tmp);
}

OCGeom2d_BSplineCurve^ OCProjLib_ComputeApproxOnPolarSurface::ProjectUsingInitialCurve2d(OCNaroWrappers::OCAdaptor3d_HCurve^ Curve, OCNaroWrappers::OCAdaptor3d_HSurface^ S, OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2d)
{
  Handle(Geom2d_BSplineCurve) tmp = ((ProjLib_ComputeApproxOnPolarSurface*)nativeHandle)->ProjectUsingInitialCurve2d(*((Handle_Adaptor3d_HCurve*)Curve->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle), *((Handle_Adaptor2d_HCurve2d*)InitCurve2d->Handle));
  return gcnew OCGeom2d_BSplineCurve(&tmp);
}

OCGeom2d_BSplineCurve^ OCProjLib_ComputeApproxOnPolarSurface::BSpline()
{
  Handle(Geom2d_BSplineCurve) tmp = ((ProjLib_ComputeApproxOnPolarSurface*)nativeHandle)->BSpline();
  return gcnew OCGeom2d_BSplineCurve(&tmp);
}

OCGeom2d_Curve^ OCProjLib_ComputeApproxOnPolarSurface::Curve2d()
{
  Handle(Geom2d_Curve) tmp = ((ProjLib_ComputeApproxOnPolarSurface*)nativeHandle)->Curve2d();
  return gcnew OCGeom2d_Curve(&tmp);
}

 System::Boolean OCProjLib_ComputeApproxOnPolarSurface::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((ProjLib_ComputeApproxOnPolarSurface*)nativeHandle)->IsDone());
}


