// File generated by CPPExt (MPV)
//
#ifndef _ProjLib_ComputeApproxOnPolarSurface_OCWrappers_HeaderFile
#define _ProjLib_ComputeApproxOnPolarSurface_OCWrappers_HeaderFile

// include native header
#include <ProjLib_ComputeApproxOnPolarSurface.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCGeom2d_BSplineCurve;
ref class OCGeom2d_Curve;
ref class OCAdaptor3d_HCurve;
ref class OCAdaptor3d_HSurface;
ref class OCAdaptor2d_HCurve2d;



public ref class OCProjLib_ComputeApproxOnPolarSurface  {

protected:
  ProjLib_ComputeApproxOnPolarSurface* nativeHandle;
  OCProjLib_ComputeApproxOnPolarSurface(OCDummy^) {};

public:
  property ProjLib_ComputeApproxOnPolarSurface* Handle
  {
    ProjLib_ComputeApproxOnPolarSurface* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCProjLib_ComputeApproxOnPolarSurface(ProjLib_ComputeApproxOnPolarSurface* nativeHandle);

// Methods PUBLIC


OCProjLib_ComputeApproxOnPolarSurface();


OCProjLib_ComputeApproxOnPolarSurface(OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol);


OCProjLib_ComputeApproxOnPolarSurface(OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2d, OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol);


OCProjLib_ComputeApproxOnPolarSurface(OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2d, OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2dBis, OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol);


 /*instead*/  OCGeom2d_BSplineCurve^ Perform(OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2d, OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S) ;


 /*instead*/  OCAdaptor2d_HCurve2d^ BuildInitialCurve2d(OCNaroWrappers::OCAdaptor3d_HCurve^ Curve, OCNaroWrappers::OCAdaptor3d_HSurface^ S) ;


 /*instead*/  OCGeom2d_BSplineCurve^ ProjectUsingInitialCurve2d(OCNaroWrappers::OCAdaptor3d_HCurve^ Curve, OCNaroWrappers::OCAdaptor3d_HSurface^ S, OCNaroWrappers::OCAdaptor2d_HCurve2d^ InitCurve2d) ;


 /*instead*/  OCGeom2d_BSplineCurve^ BSpline() ;


 /*instead*/  OCGeom2d_Curve^ Curve2d() ;


 /*instead*/  System::Boolean IsDone() ;

~OCProjLib_ComputeApproxOnPolarSurface()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
