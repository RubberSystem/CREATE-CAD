// File generated by CPPExt (MPV)
//
#ifndef _ProjLib_Plane_OCWrappers_HeaderFile
#define _ProjLib_Plane_OCWrappers_HeaderFile

// include native header
#include <ProjLib_Plane.hxx>
#include "../Converter.h"

#include "ProjLib_Projector.h"

#include "../gp/gp_Pln.h"
#include "ProjLib_Projector.h"


namespace OCNaroWrappers
{

ref class OCgp_Pln;
ref class OCgp_Lin;
ref class OCgp_Circ;
ref class OCgp_Elips;
ref class OCgp_Parab;
ref class OCgp_Hypr;


//! Projects elementary curves on a plane. <br>
public ref class OCProjLib_Plane  : public OCProjLib_Projector {

protected:
  // dummy constructor;
  OCProjLib_Plane(OCDummy^) : OCProjLib_Projector((OCDummy^)nullptr) {};

public:

// constructor from native
OCProjLib_Plane(ProjLib_Plane* nativeHandle);

// Methods PUBLIC

//! Undefined projection. <br>
OCProjLib_Plane();

//! Projection on the plane <Pl>. <br>
OCProjLib_Plane(OCNaroWrappers::OCgp_Pln^ Pl);

//! Projection of the line <L> on the plane <Pl>. <br>
OCProjLib_Plane(OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Lin^ L);

//! Projection of the circle <C> on the plane <Pl>. <br>
OCProjLib_Plane(OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Circ^ C);

//! Projection of the ellipse <E> on the plane <Pl>. <br>
OCProjLib_Plane(OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Elips^ E);

//! Projection of the parabola <P> on the plane <Pl>. <br>
OCProjLib_Plane(OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Parab^ P);

//! Projection of the hyperbola <H> on the plane <Pl>. <br>
OCProjLib_Plane(OCNaroWrappers::OCgp_Pln^ Pl, OCNaroWrappers::OCgp_Hypr^ H);


 /*instead*/  void Init(OCNaroWrappers::OCgp_Pln^ Pl) ;


virtual /*instead*/  void Project(OCNaroWrappers::OCgp_Lin^ L) override;


virtual /*instead*/  void Project(OCNaroWrappers::OCgp_Circ^ C) override;


virtual /*instead*/  void Project(OCNaroWrappers::OCgp_Elips^ E) override;


virtual /*instead*/  void Project(OCNaroWrappers::OCgp_Parab^ P) override;


virtual /*instead*/  void Project(OCNaroWrappers::OCgp_Hypr^ H) override;

~OCProjLib_Plane()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
