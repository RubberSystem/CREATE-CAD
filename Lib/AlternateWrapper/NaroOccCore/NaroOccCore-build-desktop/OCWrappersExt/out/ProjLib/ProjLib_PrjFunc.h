// File generated by CPPExt (MPV)
//
#ifndef _ProjLib_PrjFunc_OCWrappers_HeaderFile
#define _ProjLib_PrjFunc_OCWrappers_HeaderFile

// include native header
#include <ProjLib_PrjFunc.hxx>
#include "../Converter.h"

#include "../math/math_FunctionSetWithDerivatives.h"

#include "../math/math_FunctionSetWithDerivatives.h"


namespace OCNaroWrappers
{

ref class OCmath_Vector;
ref class OCmath_Matrix;
ref class OCgp_Pnt2d;



public ref class OCProjLib_PrjFunc  : public OCmath_FunctionSetWithDerivatives {

protected:
  // dummy constructor;
  OCProjLib_PrjFunc(OCDummy^) : OCmath_FunctionSetWithDerivatives((OCDummy^)nullptr) {};

public:

// constructor from native
OCProjLib_PrjFunc(ProjLib_PrjFunc* nativeHandle);

// Methods PUBLIC


OCProjLib_PrjFunc(Adaptor3d_CurvePtr C, Standard_Real FixVal, Adaptor3d_SurfacePtr S, Standard_Integer Fix);

//! returns the number of variables of the function. <br>
 /*instead*/  Standard_Integer NbVariables() ;

//! returns the number of equations of the function. <br>
 /*instead*/  Standard_Integer NbEquations() ;

//! computes the values <F> of the Functions for the <br>
//!          variable <X>. <br>
//!          Returns True if the computation was done successfully, <br>
//!          False otherwise. <br>
 /*instead*/  System::Boolean Value(OCNaroWrappers::OCmath_Vector^ X, OCNaroWrappers::OCmath_Vector^ F) ;

//! returns the values <D> of the derivatives for the <br>
//!          variable <X>. <br>
//!          Returns True if the computation was done successfully, <br>
//!          False otherwise. <br>
 /*instead*/  System::Boolean Derivatives(OCNaroWrappers::OCmath_Vector^ X, OCNaroWrappers::OCmath_Matrix^ D) ;

//! returns the values <F> of the functions and the derivatives <br>
//!          <D> for the variable <X>. <br>
//!          Returns True if the computation was done successfully, <br>
//!          False otherwise. <br>
 /*instead*/  System::Boolean Values(OCNaroWrappers::OCmath_Vector^ X, OCNaroWrappers::OCmath_Vector^ F, OCNaroWrappers::OCmath_Matrix^ D) ;

//!  returns  point  on  surface <br>
 /*instead*/  OCgp_Pnt2d^ Solution() ;

~OCProjLib_PrjFunc()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
