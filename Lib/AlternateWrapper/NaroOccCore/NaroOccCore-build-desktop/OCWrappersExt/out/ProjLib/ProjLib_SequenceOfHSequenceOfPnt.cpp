// File generated by CPPExt (CPP file)
//

#include "ProjLib_SequenceOfHSequenceOfPnt.h"
#include "../Converter.h"
#include "../TColgp/TColgp_HSequenceOfPnt.h"
#include "ProjLib_SequenceNodeOfSequenceOfHSequenceOfPnt.h"


using namespace OCNaroWrappers;

OCProjLib_SequenceOfHSequenceOfPnt::OCProjLib_SequenceOfHSequenceOfPnt(ProjLib_SequenceOfHSequenceOfPnt* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCProjLib_SequenceOfHSequenceOfPnt::OCProjLib_SequenceOfHSequenceOfPnt() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new ProjLib_SequenceOfHSequenceOfPnt();
}

OCProjLib_SequenceOfHSequenceOfPnt^ OCProjLib_SequenceOfHSequenceOfPnt::Assign(OCNaroWrappers::OCProjLib_SequenceOfHSequenceOfPnt^ Other)
{
  ProjLib_SequenceOfHSequenceOfPnt* tmp = new ProjLib_SequenceOfHSequenceOfPnt();
  *tmp = ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Assign(*((ProjLib_SequenceOfHSequenceOfPnt*)Other->Handle));
  return gcnew OCProjLib_SequenceOfHSequenceOfPnt(tmp);
}

 void OCProjLib_SequenceOfHSequenceOfPnt::Append(OCNaroWrappers::OCTColgp_HSequenceOfPnt^ T)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Append(*((Handle_TColgp_HSequenceOfPnt*)T->Handle));
}

 void OCProjLib_SequenceOfHSequenceOfPnt::Append(OCNaroWrappers::OCProjLib_SequenceOfHSequenceOfPnt^ S)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Append(*((ProjLib_SequenceOfHSequenceOfPnt*)S->Handle));
}

 void OCProjLib_SequenceOfHSequenceOfPnt::Prepend(OCNaroWrappers::OCTColgp_HSequenceOfPnt^ T)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Prepend(*((Handle_TColgp_HSequenceOfPnt*)T->Handle));
}

 void OCProjLib_SequenceOfHSequenceOfPnt::Prepend(OCNaroWrappers::OCProjLib_SequenceOfHSequenceOfPnt^ S)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Prepend(*((ProjLib_SequenceOfHSequenceOfPnt*)S->Handle));
}

 void OCProjLib_SequenceOfHSequenceOfPnt::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTColgp_HSequenceOfPnt^ T)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->InsertBefore(Index, *((Handle_TColgp_HSequenceOfPnt*)T->Handle));
}

 void OCProjLib_SequenceOfHSequenceOfPnt::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCProjLib_SequenceOfHSequenceOfPnt^ S)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->InsertBefore(Index, *((ProjLib_SequenceOfHSequenceOfPnt*)S->Handle));
}

 void OCProjLib_SequenceOfHSequenceOfPnt::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTColgp_HSequenceOfPnt^ T)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->InsertAfter(Index, *((Handle_TColgp_HSequenceOfPnt*)T->Handle));
}

 void OCProjLib_SequenceOfHSequenceOfPnt::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCProjLib_SequenceOfHSequenceOfPnt^ S)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->InsertAfter(Index, *((ProjLib_SequenceOfHSequenceOfPnt*)S->Handle));
}

OCTColgp_HSequenceOfPnt^ OCProjLib_SequenceOfHSequenceOfPnt::First()
{
  Handle(TColgp_HSequenceOfPnt) tmp = ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->First();
  return gcnew OCTColgp_HSequenceOfPnt(&tmp);
}

OCTColgp_HSequenceOfPnt^ OCProjLib_SequenceOfHSequenceOfPnt::Last()
{
  Handle(TColgp_HSequenceOfPnt) tmp = ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Last();
  return gcnew OCTColgp_HSequenceOfPnt(&tmp);
}

 void OCProjLib_SequenceOfHSequenceOfPnt::Split(Standard_Integer Index, OCNaroWrappers::OCProjLib_SequenceOfHSequenceOfPnt^ Sub)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Split(Index, *((ProjLib_SequenceOfHSequenceOfPnt*)Sub->Handle));
}

OCTColgp_HSequenceOfPnt^ OCProjLib_SequenceOfHSequenceOfPnt::Value(Standard_Integer Index)
{
  Handle(TColgp_HSequenceOfPnt) tmp = ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Value(Index);
  return gcnew OCTColgp_HSequenceOfPnt(&tmp);
}

 void OCProjLib_SequenceOfHSequenceOfPnt::SetValue(Standard_Integer Index, OCNaroWrappers::OCTColgp_HSequenceOfPnt^ I)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->SetValue(Index, *((Handle_TColgp_HSequenceOfPnt*)I->Handle));
}

OCTColgp_HSequenceOfPnt^ OCProjLib_SequenceOfHSequenceOfPnt::ChangeValue(Standard_Integer Index)
{
  Handle(TColgp_HSequenceOfPnt) tmp = ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->ChangeValue(Index);
  return gcnew OCTColgp_HSequenceOfPnt(&tmp);
}

 void OCProjLib_SequenceOfHSequenceOfPnt::Remove(Standard_Integer Index)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Remove(Index);
}

 void OCProjLib_SequenceOfHSequenceOfPnt::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((ProjLib_SequenceOfHSequenceOfPnt*)nativeHandle)->Remove(FromIndex, ToIndex);
}


