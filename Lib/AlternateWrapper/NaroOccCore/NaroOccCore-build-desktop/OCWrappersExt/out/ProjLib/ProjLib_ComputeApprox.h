// File generated by CPPExt (MPV)
//
#ifndef _ProjLib_ComputeApprox_OCWrappers_HeaderFile
#define _ProjLib_ComputeApprox_OCWrappers_HeaderFile

// include native header
#include <ProjLib_ComputeApprox.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCGeom2d_BSplineCurve;
ref class OCGeom2d_BezierCurve;
ref class OCAdaptor3d_HCurve;
ref class OCAdaptor3d_HSurface;



public ref class OCProjLib_ComputeApprox  {

protected:
  ProjLib_ComputeApprox* nativeHandle;
  OCProjLib_ComputeApprox(OCDummy^) {};

public:
  property ProjLib_ComputeApprox* Handle
  {
    ProjLib_ComputeApprox* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCProjLib_ComputeApprox(ProjLib_ComputeApprox* nativeHandle);

// Methods PUBLIC

//! <Tol>    is   the   tolerance   with  which    the <br>
//!          approximation is performed. <br>
OCProjLib_ComputeApprox(OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol);


 /*instead*/  OCGeom2d_BSplineCurve^ BSpline() ;


 /*instead*/  OCGeom2d_BezierCurve^ Bezier() ;

//! returns the reached Tolerance. <br>
 /*instead*/  Standard_Real Tolerance() ;

~OCProjLib_ComputeApprox()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
