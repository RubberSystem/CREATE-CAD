// File generated by CPPExt (CPP file)
//

#include "ProjLib_ComputeApprox.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_BSplineCurve.h"
#include "../Geom2d/Geom2d_BezierCurve.h"
#include "../Adaptor3d/Adaptor3d_HCurve.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"


using namespace OCNaroWrappers;

OCProjLib_ComputeApprox::OCProjLib_ComputeApprox(ProjLib_ComputeApprox* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCProjLib_ComputeApprox::OCProjLib_ComputeApprox(OCNaroWrappers::OCAdaptor3d_HCurve^ C, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol) 
{
  nativeHandle = new ProjLib_ComputeApprox(*((Handle_Adaptor3d_HCurve*)C->Handle), *((Handle_Adaptor3d_HSurface*)S->Handle), Tol);
}

OCGeom2d_BSplineCurve^ OCProjLib_ComputeApprox::BSpline()
{
  Handle(Geom2d_BSplineCurve) tmp = ((ProjLib_ComputeApprox*)nativeHandle)->BSpline();
  return gcnew OCGeom2d_BSplineCurve(&tmp);
}

OCGeom2d_BezierCurve^ OCProjLib_ComputeApprox::Bezier()
{
  Handle(Geom2d_BezierCurve) tmp = ((ProjLib_ComputeApprox*)nativeHandle)->Bezier();
  return gcnew OCGeom2d_BezierCurve(&tmp);
}

 Standard_Real OCProjLib_ComputeApprox::Tolerance()
{
  return ((ProjLib_ComputeApprox*)nativeHandle)->Tolerance();
}


