// File generated by CPPExt (CPP file)
//

#include "ProjLib_PrjFunc.h"
#include "../Converter.h"
#include "../math/math_Vector.h"
#include "../math/math_Matrix.h"
#include "../gp/gp_Pnt2d.h"


using namespace OCNaroWrappers;

OCProjLib_PrjFunc::OCProjLib_PrjFunc(ProjLib_PrjFunc* nativeHandle) : OCmath_FunctionSetWithDerivatives((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCProjLib_PrjFunc::OCProjLib_PrjFunc(Adaptor3d_CurvePtr C, Standard_Real FixVal, Adaptor3d_SurfacePtr S, Standard_Integer Fix) : OCmath_FunctionSetWithDerivatives((OCDummy^)nullptr)

{
  nativeHandle = new ProjLib_PrjFunc(C, FixVal, S, Fix);
}

 Standard_Integer OCProjLib_PrjFunc::NbVariables()
{
  return ((ProjLib_PrjFunc*)nativeHandle)->NbVariables();
}

 Standard_Integer OCProjLib_PrjFunc::NbEquations()
{
  return ((ProjLib_PrjFunc*)nativeHandle)->NbEquations();
}

 System::Boolean OCProjLib_PrjFunc::Value(OCNaroWrappers::OCmath_Vector^ X, OCNaroWrappers::OCmath_Vector^ F)
{
  return OCConverter::StandardBooleanToBoolean(((ProjLib_PrjFunc*)nativeHandle)->Value(*((math_Vector*)X->Handle), *((math_Vector*)F->Handle)));
}

 System::Boolean OCProjLib_PrjFunc::Derivatives(OCNaroWrappers::OCmath_Vector^ X, OCNaroWrappers::OCmath_Matrix^ D)
{
  return OCConverter::StandardBooleanToBoolean(((ProjLib_PrjFunc*)nativeHandle)->Derivatives(*((math_Vector*)X->Handle), *((math_Matrix*)D->Handle)));
}

 System::Boolean OCProjLib_PrjFunc::Values(OCNaroWrappers::OCmath_Vector^ X, OCNaroWrappers::OCmath_Vector^ F, OCNaroWrappers::OCmath_Matrix^ D)
{
  return OCConverter::StandardBooleanToBoolean(((ProjLib_PrjFunc*)nativeHandle)->Values(*((math_Vector*)X->Handle), *((math_Vector*)F->Handle), *((math_Matrix*)D->Handle)));
}

OCgp_Pnt2d^ OCProjLib_PrjFunc::Solution()
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = ((ProjLib_PrjFunc*)nativeHandle)->Solution();
  return gcnew OCgp_Pnt2d(tmp);
}


