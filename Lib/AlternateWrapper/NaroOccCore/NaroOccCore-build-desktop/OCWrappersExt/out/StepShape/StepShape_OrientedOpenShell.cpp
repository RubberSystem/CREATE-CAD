// File generated by CPPExt (CPP file)
//

#include "StepShape_OrientedOpenShell.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "StepShape_HArray1OfFace.h"
#include "StepShape_OpenShell.h"
#include "StepShape_Face.h"


using namespace OCNaroWrappers;

OCStepShape_OrientedOpenShell::OCStepShape_OrientedOpenShell(StepShape_OrientedOpenShell* nativeHandle) : OCStepShape_OpenShell((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCStepShape_OrientedOpenShell::OCStepShape_OrientedOpenShell() : OCStepShape_OpenShell((OCDummy^)nullptr)

{
  nativeHandle = new StepShape_OrientedOpenShell();
}

 void OCStepShape_OrientedOpenShell::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, OCNaroWrappers::OCStepShape_HArray1OfFace^ aCfsFaces)
{
  ((StepShape_OrientedOpenShell*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), *((Handle_StepShape_HArray1OfFace*)aCfsFaces->Handle));
}

 void OCStepShape_OrientedOpenShell::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, OCNaroWrappers::OCStepShape_OpenShell^ aOpenShellElement, System::Boolean aOrientation)
{
  ((StepShape_OrientedOpenShell*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), *((StepShape_OpenShell*)aOpenShellElement->Handle), OCConverter::BooleanToStandardBoolean(aOrientation));
}

 void OCStepShape_OrientedOpenShell::SetOpenShellElement(OCNaroWrappers::OCStepShape_OpenShell^ aOpenShellElement)
{
  ((StepShape_OrientedOpenShell*)nativeHandle)->SetOpenShellElement(*((StepShape_OpenShell*)aOpenShellElement->Handle));
}

OCStepShape_OpenShell^ OCStepShape_OrientedOpenShell::OpenShellElement()
{
  StepShape_OpenShell* tmp = new StepShape_OpenShell();
  *tmp = ((StepShape_OrientedOpenShell*)nativeHandle)->OpenShellElement();
  return gcnew OCStepShape_OpenShell(tmp);
}

 void OCStepShape_OrientedOpenShell::SetOrientation(System::Boolean aOrientation)
{
  ((StepShape_OrientedOpenShell*)nativeHandle)->SetOrientation(OCConverter::BooleanToStandardBoolean(aOrientation));
}

 System::Boolean OCStepShape_OrientedOpenShell::Orientation()
{
  return OCConverter::StandardBooleanToBoolean(((StepShape_OrientedOpenShell*)nativeHandle)->Orientation());
}

 void OCStepShape_OrientedOpenShell::SetCfsFaces(OCNaroWrappers::OCStepShape_HArray1OfFace^ aCfsFaces)
{
  ((StepShape_OrientedOpenShell*)nativeHandle)->SetCfsFaces(*((Handle_StepShape_HArray1OfFace*)aCfsFaces->Handle));
}

OCStepShape_HArray1OfFace^ OCStepShape_OrientedOpenShell::CfsFaces()
{
  Handle(StepShape_HArray1OfFace) tmp = ((StepShape_OrientedOpenShell*)nativeHandle)->CfsFaces();
  return gcnew OCStepShape_HArray1OfFace(&tmp);
}

OCStepShape_Face^ OCStepShape_OrientedOpenShell::CfsFacesValue(Standard_Integer num)
{
  StepShape_Face* tmp = new StepShape_Face();
  *tmp = ((StepShape_OrientedOpenShell*)nativeHandle)->CfsFacesValue(num);
  return gcnew OCStepShape_Face(tmp);
}

 Standard_Integer OCStepShape_OrientedOpenShell::NbCfsFaces()
{
  return ((StepShape_OrientedOpenShell*)nativeHandle)->NbCfsFaces();
}


