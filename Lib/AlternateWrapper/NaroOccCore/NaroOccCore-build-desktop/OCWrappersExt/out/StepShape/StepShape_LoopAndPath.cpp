// File generated by CPPExt (CPP file)
//

#include "StepShape_LoopAndPath.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "StepShape_Loop.h"
#include "StepShape_Path.h"
#include "StepShape_HArray1OfOrientedEdge.h"
#include "StepShape_OrientedEdge.h"


using namespace OCNaroWrappers;

OCStepShape_LoopAndPath::OCStepShape_LoopAndPath(StepShape_LoopAndPath* nativeHandle) : OCStepShape_TopologicalRepresentationItem((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCStepShape_LoopAndPath::OCStepShape_LoopAndPath() : OCStepShape_TopologicalRepresentationItem((OCDummy^)nullptr)

{
  nativeHandle = new StepShape_LoopAndPath();
}

 void OCStepShape_LoopAndPath::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName)
{
  ((StepShape_LoopAndPath*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle));
}

 void OCStepShape_LoopAndPath::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, OCNaroWrappers::OCStepShape_Loop^ aLoop, OCNaroWrappers::OCStepShape_Path^ aPath)
{
  ((StepShape_LoopAndPath*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), *((StepShape_Loop*)aLoop->Handle), *((StepShape_Path*)aPath->Handle));
}

 void OCStepShape_LoopAndPath::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, OCNaroWrappers::OCStepShape_HArray1OfOrientedEdge^ aEdgeList)
{
  ((StepShape_LoopAndPath*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), *((Handle_StepShape_HArray1OfOrientedEdge*)aEdgeList->Handle));
}

 void OCStepShape_LoopAndPath::SetLoop(OCNaroWrappers::OCStepShape_Loop^ aLoop)
{
  ((StepShape_LoopAndPath*)nativeHandle)->SetLoop(*((StepShape_Loop*)aLoop->Handle));
}

OCStepShape_Loop^ OCStepShape_LoopAndPath::Loop()
{
  StepShape_Loop* tmp = new StepShape_Loop();
  *tmp = ((StepShape_LoopAndPath*)nativeHandle)->Loop();
  return gcnew OCStepShape_Loop(tmp);
}

 void OCStepShape_LoopAndPath::SetPath(OCNaroWrappers::OCStepShape_Path^ aPath)
{
  ((StepShape_LoopAndPath*)nativeHandle)->SetPath(*((StepShape_Path*)aPath->Handle));
}

OCStepShape_Path^ OCStepShape_LoopAndPath::Path()
{
  StepShape_Path* tmp = new StepShape_Path();
  *tmp = ((StepShape_LoopAndPath*)nativeHandle)->Path();
  return gcnew OCStepShape_Path(tmp);
}

 void OCStepShape_LoopAndPath::SetEdgeList(OCNaroWrappers::OCStepShape_HArray1OfOrientedEdge^ aEdgeList)
{
  ((StepShape_LoopAndPath*)nativeHandle)->SetEdgeList(*((Handle_StepShape_HArray1OfOrientedEdge*)aEdgeList->Handle));
}

OCStepShape_HArray1OfOrientedEdge^ OCStepShape_LoopAndPath::EdgeList()
{
  Handle(StepShape_HArray1OfOrientedEdge) tmp = ((StepShape_LoopAndPath*)nativeHandle)->EdgeList();
  return gcnew OCStepShape_HArray1OfOrientedEdge(&tmp);
}

OCStepShape_OrientedEdge^ OCStepShape_LoopAndPath::EdgeListValue(Standard_Integer num)
{
  StepShape_OrientedEdge* tmp = new StepShape_OrientedEdge();
  *tmp = ((StepShape_LoopAndPath*)nativeHandle)->EdgeListValue(num);
  return gcnew OCStepShape_OrientedEdge(tmp);
}

 Standard_Integer OCStepShape_LoopAndPath::NbEdgeList()
{
  return ((StepShape_LoopAndPath*)nativeHandle)->NbEdgeList();
}


