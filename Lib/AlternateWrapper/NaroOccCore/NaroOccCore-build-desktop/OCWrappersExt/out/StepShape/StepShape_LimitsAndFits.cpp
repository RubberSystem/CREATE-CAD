// File generated by CPPExt (CPP file)
//

#include "StepShape_LimitsAndFits.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"


using namespace OCNaroWrappers;

OCStepShape_LimitsAndFits::OCStepShape_LimitsAndFits(Handle(StepShape_LimitsAndFits)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepShape_LimitsAndFits(*nativeHandle);
}

OCStepShape_LimitsAndFits::OCStepShape_LimitsAndFits() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepShape_LimitsAndFits(new StepShape_LimitsAndFits());
}

 void OCStepShape_LimitsAndFits::Init(OCNaroWrappers::OCTCollection_HAsciiString^ form_variance, OCNaroWrappers::OCTCollection_HAsciiString^ zone_variance, OCNaroWrappers::OCTCollection_HAsciiString^ grade, OCNaroWrappers::OCTCollection_HAsciiString^ source)
{
  (*((Handle_StepShape_LimitsAndFits*)nativeHandle))->Init(*((Handle_TCollection_HAsciiString*)form_variance->Handle), *((Handle_TCollection_HAsciiString*)zone_variance->Handle), *((Handle_TCollection_HAsciiString*)grade->Handle), *((Handle_TCollection_HAsciiString*)source->Handle));
}

OCTCollection_HAsciiString^ OCStepShape_LimitsAndFits::FormVariance()
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_StepShape_LimitsAndFits*)nativeHandle))->FormVariance();
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCStepShape_LimitsAndFits::SetFormVariance(OCNaroWrappers::OCTCollection_HAsciiString^ form_variance)
{
  (*((Handle_StepShape_LimitsAndFits*)nativeHandle))->SetFormVariance(*((Handle_TCollection_HAsciiString*)form_variance->Handle));
}

OCTCollection_HAsciiString^ OCStepShape_LimitsAndFits::ZoneVariance()
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_StepShape_LimitsAndFits*)nativeHandle))->ZoneVariance();
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCStepShape_LimitsAndFits::SetZoneVariance(OCNaroWrappers::OCTCollection_HAsciiString^ zone_variance)
{
  (*((Handle_StepShape_LimitsAndFits*)nativeHandle))->SetZoneVariance(*((Handle_TCollection_HAsciiString*)zone_variance->Handle));
}

OCTCollection_HAsciiString^ OCStepShape_LimitsAndFits::Grade()
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_StepShape_LimitsAndFits*)nativeHandle))->Grade();
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCStepShape_LimitsAndFits::SetGrade(OCNaroWrappers::OCTCollection_HAsciiString^ grade)
{
  (*((Handle_StepShape_LimitsAndFits*)nativeHandle))->SetGrade(*((Handle_TCollection_HAsciiString*)grade->Handle));
}

OCTCollection_HAsciiString^ OCStepShape_LimitsAndFits::Source()
{
  Handle(TCollection_HAsciiString) tmp = (*((Handle_StepShape_LimitsAndFits*)nativeHandle))->Source();
  return gcnew OCTCollection_HAsciiString(&tmp);
}

 void OCStepShape_LimitsAndFits::SetSource(OCNaroWrappers::OCTCollection_HAsciiString^ source)
{
  (*((Handle_StepShape_LimitsAndFits*)nativeHandle))->SetSource(*((Handle_TCollection_HAsciiString*)source->Handle));
}


