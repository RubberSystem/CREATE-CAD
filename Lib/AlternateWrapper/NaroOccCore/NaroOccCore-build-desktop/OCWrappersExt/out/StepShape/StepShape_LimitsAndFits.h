// File generated by CPPExt (Transient)
//
#ifndef _StepShape_LimitsAndFits_OCWrappers_HeaderFile
#define _StepShape_LimitsAndFits_OCWrappers_HeaderFile

// include the wrapped class
#include <StepShape_LimitsAndFits.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"



namespace OCNaroWrappers
{

ref class OCTCollection_HAsciiString;


//! Added for Dimensional Tolerances <br>
public ref class OCStepShape_LimitsAndFits : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCStepShape_LimitsAndFits(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepShape_LimitsAndFits(Handle(StepShape_LimitsAndFits)* nativeHandle);

// Methods PUBLIC


OCStepShape_LimitsAndFits();


 /*instead*/  void Init(OCNaroWrappers::OCTCollection_HAsciiString^ form_variance, OCNaroWrappers::OCTCollection_HAsciiString^ zone_variance, OCNaroWrappers::OCTCollection_HAsciiString^ grade, OCNaroWrappers::OCTCollection_HAsciiString^ source) ;


 /*instead*/  OCTCollection_HAsciiString^ FormVariance() ;


 /*instead*/  void SetFormVariance(OCNaroWrappers::OCTCollection_HAsciiString^ form_variance) ;


 /*instead*/  OCTCollection_HAsciiString^ ZoneVariance() ;


 /*instead*/  void SetZoneVariance(OCNaroWrappers::OCTCollection_HAsciiString^ zone_variance) ;


 /*instead*/  OCTCollection_HAsciiString^ Grade() ;


 /*instead*/  void SetGrade(OCNaroWrappers::OCTCollection_HAsciiString^ grade) ;


 /*instead*/  OCTCollection_HAsciiString^ Source() ;


 /*instead*/  void SetSource(OCNaroWrappers::OCTCollection_HAsciiString^ source) ;

~OCStepShape_LimitsAndFits()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
