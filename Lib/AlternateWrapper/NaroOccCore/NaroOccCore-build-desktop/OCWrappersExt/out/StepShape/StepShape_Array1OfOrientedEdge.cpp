// File generated by CPPExt (CPP file)
//

#include "StepShape_Array1OfOrientedEdge.h"
#include "../Converter.h"
#include "StepShape_OrientedEdge.h"


using namespace OCNaroWrappers;

OCStepShape_Array1OfOrientedEdge::OCStepShape_Array1OfOrientedEdge(StepShape_Array1OfOrientedEdge* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCStepShape_Array1OfOrientedEdge::OCStepShape_Array1OfOrientedEdge(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new StepShape_Array1OfOrientedEdge(Low, Up);
}

OCStepShape_Array1OfOrientedEdge::OCStepShape_Array1OfOrientedEdge(OCNaroWrappers::OCStepShape_OrientedEdge^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new StepShape_Array1OfOrientedEdge(*((StepShape_OrientedEdge*)Item->Handle), Low, Up);
}

 void OCStepShape_Array1OfOrientedEdge::Init(OCNaroWrappers::OCStepShape_OrientedEdge^ V)
{
  ((StepShape_Array1OfOrientedEdge*)nativeHandle)->Init(*((StepShape_OrientedEdge*)V->Handle));
}

 System::Boolean OCStepShape_Array1OfOrientedEdge::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((StepShape_Array1OfOrientedEdge*)nativeHandle)->IsAllocated());
}

OCStepShape_Array1OfOrientedEdge^ OCStepShape_Array1OfOrientedEdge::Assign(OCNaroWrappers::OCStepShape_Array1OfOrientedEdge^ Other)
{
  StepShape_Array1OfOrientedEdge* tmp = new StepShape_Array1OfOrientedEdge(0, 0);
  *tmp = ((StepShape_Array1OfOrientedEdge*)nativeHandle)->Assign(*((StepShape_Array1OfOrientedEdge*)Other->Handle));
  return gcnew OCStepShape_Array1OfOrientedEdge(tmp);
}

 Standard_Integer OCStepShape_Array1OfOrientedEdge::Length()
{
  return ((StepShape_Array1OfOrientedEdge*)nativeHandle)->Length();
}

 Standard_Integer OCStepShape_Array1OfOrientedEdge::Lower()
{
  return ((StepShape_Array1OfOrientedEdge*)nativeHandle)->Lower();
}

 Standard_Integer OCStepShape_Array1OfOrientedEdge::Upper()
{
  return ((StepShape_Array1OfOrientedEdge*)nativeHandle)->Upper();
}

 void OCStepShape_Array1OfOrientedEdge::SetValue(Standard_Integer Index, OCNaroWrappers::OCStepShape_OrientedEdge^ Value)
{
  ((StepShape_Array1OfOrientedEdge*)nativeHandle)->SetValue(Index, *((StepShape_OrientedEdge*)Value->Handle));
}

OCStepShape_OrientedEdge^ OCStepShape_Array1OfOrientedEdge::Value(Standard_Integer Index)
{
  StepShape_OrientedEdge* tmp = new StepShape_OrientedEdge();
  *tmp = ((StepShape_Array1OfOrientedEdge*)nativeHandle)->Value(Index);
  return gcnew OCStepShape_OrientedEdge(tmp);
}

OCStepShape_OrientedEdge^ OCStepShape_Array1OfOrientedEdge::ChangeValue(Standard_Integer Index)
{
  StepShape_OrientedEdge* tmp = new StepShape_OrientedEdge();
  *tmp = ((StepShape_Array1OfOrientedEdge*)nativeHandle)->ChangeValue(Index);
  return gcnew OCStepShape_OrientedEdge(tmp);
}


