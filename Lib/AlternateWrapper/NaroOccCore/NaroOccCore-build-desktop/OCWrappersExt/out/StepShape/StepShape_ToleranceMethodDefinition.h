// File generated by CPPExt (MPV)
//
#ifndef _StepShape_ToleranceMethodDefinition_OCWrappers_HeaderFile
#define _StepShape_ToleranceMethodDefinition_OCWrappers_HeaderFile

// include native header
#include <StepShape_ToleranceMethodDefinition.hxx>
#include "../Converter.h"

#include "../StepData/StepData_SelectType.h"

#include "../StepData/StepData_SelectType.h"


namespace OCNaroWrappers
{

ref class OCStandard_Transient;
ref class OCStepShape_ToleranceValue;
ref class OCStepShape_LimitsAndFits;


//! Added for Dimensional Tolerances <br>
public ref class OCStepShape_ToleranceMethodDefinition  : public OCStepData_SelectType {

protected:
  // dummy constructor;
  OCStepShape_ToleranceMethodDefinition(OCDummy^) : OCStepData_SelectType((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepShape_ToleranceMethodDefinition(StepShape_ToleranceMethodDefinition* nativeHandle);

// Methods PUBLIC


OCStepShape_ToleranceMethodDefinition();

//! Recognizes a kind of ValueQualifier Select Type : <br>
//!           1 -> ToleranceValue from StepShape <br>
//!           2 -> LimitsAndFits from StepShape <br>
 /*instead*/  Standard_Integer CaseNum(OCNaroWrappers::OCStandard_Transient^ ent) ;

//! Returns Value as ToleranceValue <br>
 /*instead*/  OCStepShape_ToleranceValue^ ToleranceValue() ;

//! Returns Value as LimitsAndFits <br>
 /*instead*/  OCStepShape_LimitsAndFits^ LimitsAndFits() ;

~OCStepShape_ToleranceMethodDefinition()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
