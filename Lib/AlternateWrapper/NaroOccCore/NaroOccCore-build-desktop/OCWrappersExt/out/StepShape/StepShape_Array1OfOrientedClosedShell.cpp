// File generated by CPPExt (CPP file)
//

#include "StepShape_Array1OfOrientedClosedShell.h"
#include "../Converter.h"
#include "StepShape_OrientedClosedShell.h"


using namespace OCNaroWrappers;

OCStepShape_Array1OfOrientedClosedShell::OCStepShape_Array1OfOrientedClosedShell(StepShape_Array1OfOrientedClosedShell* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCStepShape_Array1OfOrientedClosedShell::OCStepShape_Array1OfOrientedClosedShell(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new StepShape_Array1OfOrientedClosedShell(Low, Up);
}

OCStepShape_Array1OfOrientedClosedShell::OCStepShape_Array1OfOrientedClosedShell(OCNaroWrappers::OCStepShape_OrientedClosedShell^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new StepShape_Array1OfOrientedClosedShell(*((StepShape_OrientedClosedShell*)Item->Handle), Low, Up);
}

 void OCStepShape_Array1OfOrientedClosedShell::Init(OCNaroWrappers::OCStepShape_OrientedClosedShell^ V)
{
  ((StepShape_Array1OfOrientedClosedShell*)nativeHandle)->Init(*((StepShape_OrientedClosedShell*)V->Handle));
}

 System::Boolean OCStepShape_Array1OfOrientedClosedShell::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((StepShape_Array1OfOrientedClosedShell*)nativeHandle)->IsAllocated());
}

OCStepShape_Array1OfOrientedClosedShell^ OCStepShape_Array1OfOrientedClosedShell::Assign(OCNaroWrappers::OCStepShape_Array1OfOrientedClosedShell^ Other)
{
  StepShape_Array1OfOrientedClosedShell* tmp = new StepShape_Array1OfOrientedClosedShell(0, 0);
  *tmp = ((StepShape_Array1OfOrientedClosedShell*)nativeHandle)->Assign(*((StepShape_Array1OfOrientedClosedShell*)Other->Handle));
  return gcnew OCStepShape_Array1OfOrientedClosedShell(tmp);
}

 Standard_Integer OCStepShape_Array1OfOrientedClosedShell::Length()
{
  return ((StepShape_Array1OfOrientedClosedShell*)nativeHandle)->Length();
}

 Standard_Integer OCStepShape_Array1OfOrientedClosedShell::Lower()
{
  return ((StepShape_Array1OfOrientedClosedShell*)nativeHandle)->Lower();
}

 Standard_Integer OCStepShape_Array1OfOrientedClosedShell::Upper()
{
  return ((StepShape_Array1OfOrientedClosedShell*)nativeHandle)->Upper();
}

 void OCStepShape_Array1OfOrientedClosedShell::SetValue(Standard_Integer Index, OCNaroWrappers::OCStepShape_OrientedClosedShell^ Value)
{
  ((StepShape_Array1OfOrientedClosedShell*)nativeHandle)->SetValue(Index, *((StepShape_OrientedClosedShell*)Value->Handle));
}

OCStepShape_OrientedClosedShell^ OCStepShape_Array1OfOrientedClosedShell::Value(Standard_Integer Index)
{
  StepShape_OrientedClosedShell* tmp = new StepShape_OrientedClosedShell();
  *tmp = ((StepShape_Array1OfOrientedClosedShell*)nativeHandle)->Value(Index);
  return gcnew OCStepShape_OrientedClosedShell(tmp);
}

OCStepShape_OrientedClosedShell^ OCStepShape_Array1OfOrientedClosedShell::ChangeValue(Standard_Integer Index)
{
  StepShape_OrientedClosedShell* tmp = new StepShape_OrientedClosedShell();
  *tmp = ((StepShape_Array1OfOrientedClosedShell*)nativeHandle)->ChangeValue(Index);
  return gcnew OCStepShape_OrientedClosedShell(tmp);
}


