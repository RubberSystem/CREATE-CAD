// File generated by CPPExt (CPP file)
//

#include "StepShape_OrientedEdge.h"
#include "../Converter.h"
#include "../TCollection/TCollection_HAsciiString.h"
#include "StepShape_Edge.h"
#include "StepShape_Vertex.h"


using namespace OCNaroWrappers;

OCStepShape_OrientedEdge::OCStepShape_OrientedEdge(StepShape_OrientedEdge* nativeHandle) : OCStepShape_Edge((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCStepShape_OrientedEdge::OCStepShape_OrientedEdge() : OCStepShape_Edge((OCDummy^)nullptr)

{
  nativeHandle = new StepShape_OrientedEdge();
}

 void OCStepShape_OrientedEdge::Init(OCNaroWrappers::OCTCollection_HAsciiString^ aName, OCNaroWrappers::OCStepShape_Edge^ aEdgeElement, System::Boolean aOrientation)
{
  ((StepShape_OrientedEdge*)nativeHandle)->Init(*((Handle_TCollection_HAsciiString*)aName->Handle), *((StepShape_Edge*)aEdgeElement->Handle), OCConverter::BooleanToStandardBoolean(aOrientation));
}

 void OCStepShape_OrientedEdge::SetEdgeElement(OCNaroWrappers::OCStepShape_Edge^ aEdgeElement)
{
  ((StepShape_OrientedEdge*)nativeHandle)->SetEdgeElement(*((StepShape_Edge*)aEdgeElement->Handle));
}

OCStepShape_Edge^ OCStepShape_OrientedEdge::EdgeElement()
{
  StepShape_Edge* tmp = new StepShape_Edge();
  *tmp = ((StepShape_OrientedEdge*)nativeHandle)->EdgeElement();
  return gcnew OCStepShape_Edge(tmp);
}

 void OCStepShape_OrientedEdge::SetOrientation(System::Boolean aOrientation)
{
  ((StepShape_OrientedEdge*)nativeHandle)->SetOrientation(OCConverter::BooleanToStandardBoolean(aOrientation));
}

 System::Boolean OCStepShape_OrientedEdge::Orientation()
{
  return OCConverter::StandardBooleanToBoolean(((StepShape_OrientedEdge*)nativeHandle)->Orientation());
}

 void OCStepShape_OrientedEdge::SetEdgeStart(OCNaroWrappers::OCStepShape_Vertex^ aEdgeStart)
{
  ((StepShape_OrientedEdge*)nativeHandle)->SetEdgeStart(*((StepShape_Vertex*)aEdgeStart->Handle));
}

OCStepShape_Vertex^ OCStepShape_OrientedEdge::EdgeStart()
{
  StepShape_Vertex* tmp = new StepShape_Vertex();
  *tmp = ((StepShape_OrientedEdge*)nativeHandle)->EdgeStart();
  return gcnew OCStepShape_Vertex(tmp);
}

 void OCStepShape_OrientedEdge::SetEdgeEnd(OCNaroWrappers::OCStepShape_Vertex^ aEdgeEnd)
{
  ((StepShape_OrientedEdge*)nativeHandle)->SetEdgeEnd(*((StepShape_Vertex*)aEdgeEnd->Handle));
}

OCStepShape_Vertex^ OCStepShape_OrientedEdge::EdgeEnd()
{
  StepShape_Vertex* tmp = new StepShape_Vertex();
  *tmp = ((StepShape_OrientedEdge*)nativeHandle)->EdgeEnd();
  return gcnew OCStepShape_Vertex(tmp);
}


