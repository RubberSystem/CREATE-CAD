// File generated by CPPExt (CPP file)
//

#include "BRepAlgo_DataMapOfShapeBoolean.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "BRepAlgo_DataMapNodeOfDataMapOfShapeBoolean.h"
#include "BRepAlgo_DataMapIteratorOfDataMapOfShapeBoolean.h"


using namespace OCNaroWrappers;

OCBRepAlgo_DataMapOfShapeBoolean::OCBRepAlgo_DataMapOfShapeBoolean(BRepAlgo_DataMapOfShapeBoolean* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepAlgo_DataMapOfShapeBoolean::OCBRepAlgo_DataMapOfShapeBoolean(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BRepAlgo_DataMapOfShapeBoolean(NbBuckets);
}

OCBRepAlgo_DataMapOfShapeBoolean^ OCBRepAlgo_DataMapOfShapeBoolean::Assign(OCNaroWrappers::OCBRepAlgo_DataMapOfShapeBoolean^ Other)
{
  BRepAlgo_DataMapOfShapeBoolean* tmp = new BRepAlgo_DataMapOfShapeBoolean(0);
  *tmp = ((BRepAlgo_DataMapOfShapeBoolean*)nativeHandle)->Assign(*((BRepAlgo_DataMapOfShapeBoolean*)Other->Handle));
  return gcnew OCBRepAlgo_DataMapOfShapeBoolean(tmp);
}

 void OCBRepAlgo_DataMapOfShapeBoolean::ReSize(Standard_Integer NbBuckets)
{
  ((BRepAlgo_DataMapOfShapeBoolean*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCBRepAlgo_DataMapOfShapeBoolean::Bind(OCNaroWrappers::OCTopoDS_Shape^ K, System::Boolean I)
{
  return OCConverter::StandardBooleanToBoolean(((BRepAlgo_DataMapOfShapeBoolean*)nativeHandle)->Bind(*((TopoDS_Shape*)K->Handle), OCConverter::BooleanToStandardBoolean(I)));
}

 System::Boolean OCBRepAlgo_DataMapOfShapeBoolean::IsBound(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepAlgo_DataMapOfShapeBoolean*)nativeHandle)->IsBound(*((TopoDS_Shape*)K->Handle)));
}

 System::Boolean OCBRepAlgo_DataMapOfShapeBoolean::UnBind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepAlgo_DataMapOfShapeBoolean*)nativeHandle)->UnBind(*((TopoDS_Shape*)K->Handle)));
}

 System::Boolean OCBRepAlgo_DataMapOfShapeBoolean::Find(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepAlgo_DataMapOfShapeBoolean*)nativeHandle)->Find(*((TopoDS_Shape*)K->Handle)));
}

 System::Boolean OCBRepAlgo_DataMapOfShapeBoolean::ChangeFind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepAlgo_DataMapOfShapeBoolean*)nativeHandle)->ChangeFind(*((TopoDS_Shape*)K->Handle)));
}

 Standard_Address OCBRepAlgo_DataMapOfShapeBoolean::Find1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepAlgo_DataMapOfShapeBoolean*)nativeHandle)->Find1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCBRepAlgo_DataMapOfShapeBoolean::ChangeFind1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepAlgo_DataMapOfShapeBoolean*)nativeHandle)->ChangeFind1(*((TopoDS_Shape*)K->Handle));
}


