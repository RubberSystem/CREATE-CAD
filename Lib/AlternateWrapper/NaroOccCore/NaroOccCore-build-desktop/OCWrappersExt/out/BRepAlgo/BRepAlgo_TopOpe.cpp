// File generated by CPPExt (CPP file)
//

#include "BRepAlgo_TopOpe.h"
#include "../Converter.h"
#include "../BOP/BOP_HistoryCollector.h"
#include "BRepAlgo_EdgeConnector.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_ListOfShape.h"


using namespace OCNaroWrappers;

OCBRepAlgo_TopOpe::OCBRepAlgo_TopOpe(BRepAlgo_TopOpe* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepAlgo_TopOpe::OCBRepAlgo_TopOpe() 
{
  nativeHandle = new BRepAlgo_TopOpe();
}

 void OCBRepAlgo_TopOpe::Init()
{
  ((BRepAlgo_TopOpe*)nativeHandle)->Init();
}

 void OCBRepAlgo_TopOpe::Load(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  ((BRepAlgo_TopOpe*)nativeHandle)->Load(*((TopoDS_Shape*)S->Handle));
}

 void OCBRepAlgo_TopOpe::Load(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  ((BRepAlgo_TopOpe*)nativeHandle)->Load(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle));
}

 void OCBRepAlgo_TopOpe::Intersect()
{
  ((BRepAlgo_TopOpe*)nativeHandle)->Intersect();
}

 void OCBRepAlgo_TopOpe::Intersect(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2)
{
  ((BRepAlgo_TopOpe*)nativeHandle)->Intersect(*((TopoDS_Shape*)S1->Handle), *((TopoDS_Shape*)S2->Handle));
}

 void OCBRepAlgo_TopOpe::ToCompleteIntersection()
{
  ((BRepAlgo_TopOpe*)nativeHandle)->ToCompleteIntersection();
}

OCTopTools_ListOfShape^ OCBRepAlgo_TopOpe::GetSectionEdgeSet()
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((BRepAlgo_TopOpe*)nativeHandle)->GetSectionEdgeSet();
  return gcnew OCTopTools_ListOfShape(tmp);
}

 void OCBRepAlgo_TopOpe::SuppressEdgeSet()
{
  ((BRepAlgo_TopOpe*)nativeHandle)->SuppressEdgeSet();
}

OCTopoDS_Shape^ OCBRepAlgo_TopOpe::Merge(OCTopAbs_State state1, OCTopAbs_State state2)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepAlgo_TopOpe*)nativeHandle)->Merge((TopAbs_State)state1, (TopAbs_State)state2);
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCBRepAlgo_TopOpe::Merge(OCTopAbs_State state1)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepAlgo_TopOpe*)nativeHandle)->Merge((TopAbs_State)state1);
  return gcnew OCTopoDS_Shape(tmp);
}

 System::Boolean OCBRepAlgo_TopOpe::PaveBlocksNotEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((BRepAlgo_TopOpe*)nativeHandle)->PaveBlocksNotEmpty());
}

 BOP_PBuilder& OCBRepAlgo_TopOpe::Builder()
{
  return ((BRepAlgo_TopOpe*)nativeHandle)->Builder();
}

 BOPTools_PDSFiller& OCBRepAlgo_TopOpe::DSFiller()
{
  return ((BRepAlgo_TopOpe*)nativeHandle)->DSFiller();
}

OCBOP_HistoryCollector^ OCBRepAlgo_TopOpe::History()
{
  Handle(BOP_HistoryCollector) tmp = ((BRepAlgo_TopOpe*)nativeHandle)->History();
  return gcnew OCBOP_HistoryCollector(&tmp);
}

 void OCBRepAlgo_TopOpe::Destroy()
{
  ((BRepAlgo_TopOpe*)nativeHandle)->Destroy();
}


