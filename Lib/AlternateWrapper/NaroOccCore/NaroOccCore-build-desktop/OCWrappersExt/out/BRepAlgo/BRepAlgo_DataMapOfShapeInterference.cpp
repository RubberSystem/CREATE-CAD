// File generated by CPPExt (CPP file)
//

#include "BRepAlgo_DataMapOfShapeInterference.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopOpeBRepDS/TopOpeBRepDS_Interference.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "BRepAlgo_DataMapNodeOfDataMapOfShapeInterference.h"
#include "BRepAlgo_DataMapIteratorOfDataMapOfShapeInterference.h"


using namespace OCNaroWrappers;

OCBRepAlgo_DataMapOfShapeInterference::OCBRepAlgo_DataMapOfShapeInterference(BRepAlgo_DataMapOfShapeInterference* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepAlgo_DataMapOfShapeInterference::OCBRepAlgo_DataMapOfShapeInterference(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BRepAlgo_DataMapOfShapeInterference(NbBuckets);
}

OCBRepAlgo_DataMapOfShapeInterference^ OCBRepAlgo_DataMapOfShapeInterference::Assign(OCNaroWrappers::OCBRepAlgo_DataMapOfShapeInterference^ Other)
{
  BRepAlgo_DataMapOfShapeInterference* tmp = new BRepAlgo_DataMapOfShapeInterference(0);
  *tmp = ((BRepAlgo_DataMapOfShapeInterference*)nativeHandle)->Assign(*((BRepAlgo_DataMapOfShapeInterference*)Other->Handle));
  return gcnew OCBRepAlgo_DataMapOfShapeInterference(tmp);
}

 void OCBRepAlgo_DataMapOfShapeInterference::ReSize(Standard_Integer NbBuckets)
{
  ((BRepAlgo_DataMapOfShapeInterference*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCBRepAlgo_DataMapOfShapeInterference::Bind(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I)
{
  return OCConverter::StandardBooleanToBoolean(((BRepAlgo_DataMapOfShapeInterference*)nativeHandle)->Bind(*((TopoDS_Shape*)K->Handle), *((Handle_TopOpeBRepDS_Interference*)I->Handle)));
}

 System::Boolean OCBRepAlgo_DataMapOfShapeInterference::IsBound(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepAlgo_DataMapOfShapeInterference*)nativeHandle)->IsBound(*((TopoDS_Shape*)K->Handle)));
}

 System::Boolean OCBRepAlgo_DataMapOfShapeInterference::UnBind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepAlgo_DataMapOfShapeInterference*)nativeHandle)->UnBind(*((TopoDS_Shape*)K->Handle)));
}

OCTopOpeBRepDS_Interference^ OCBRepAlgo_DataMapOfShapeInterference::Find(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  Handle(TopOpeBRepDS_Interference) tmp = ((BRepAlgo_DataMapOfShapeInterference*)nativeHandle)->Find(*((TopoDS_Shape*)K->Handle));
  return gcnew OCTopOpeBRepDS_Interference(&tmp);
}

OCTopOpeBRepDS_Interference^ OCBRepAlgo_DataMapOfShapeInterference::ChangeFind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  Handle(TopOpeBRepDS_Interference) tmp = ((BRepAlgo_DataMapOfShapeInterference*)nativeHandle)->ChangeFind(*((TopoDS_Shape*)K->Handle));
  return gcnew OCTopOpeBRepDS_Interference(&tmp);
}

 Standard_Address OCBRepAlgo_DataMapOfShapeInterference::Find1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepAlgo_DataMapOfShapeInterference*)nativeHandle)->Find1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCBRepAlgo_DataMapOfShapeInterference::ChangeFind1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepAlgo_DataMapOfShapeInterference*)nativeHandle)->ChangeFind1(*((TopoDS_Shape*)K->Handle));
}


