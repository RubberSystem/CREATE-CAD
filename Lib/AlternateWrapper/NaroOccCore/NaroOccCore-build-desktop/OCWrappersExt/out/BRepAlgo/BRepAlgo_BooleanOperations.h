// File generated by CPPExt (MPV)
//
#ifndef _BRepAlgo_BooleanOperations_OCWrappers_HeaderFile
#define _BRepAlgo_BooleanOperations_OCWrappers_HeaderFile

// include native header
#include <BRepAlgo_BooleanOperations.hxx>
#include "../Converter.h"


#include "BRepAlgo_DSAccess.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopTools/TopTools_MapOfShape.h"
#include "../TopAbs/TopAbs_State.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopOpeBRepDS_HDataStructure;
ref class OCTopTools_ListOfShape;
ref class OCTopOpeBRepBuild_HBuilder;
ref class OCBRepAlgo_DSAccess;



public ref class OCBRepAlgo_BooleanOperations  {

protected:
  BRepAlgo_BooleanOperations* nativeHandle;
  OCBRepAlgo_BooleanOperations(OCDummy^) {};

public:
  property BRepAlgo_BooleanOperations* Handle
  {
    BRepAlgo_BooleanOperations* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepAlgo_BooleanOperations(BRepAlgo_BooleanOperations* nativeHandle);

// Methods PUBLIC


OCBRepAlgo_BooleanOperations();

//! S1 is a Shell with ALL faces supported by the SAME S2 is <br>
//!          an Edge INCLUDED in that surface with pcurve. <br>
//!          this avoids a time-consuming 3D operation, compared to Shapes. <br>
 /*instead*/  void Shapes2d(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;

//! Defines the arguments. <br>
 /*instead*/  void Shapes(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;

//! Sets different parameters for the curve approximations : <br>
//!          NbPntMax : Maximum number of points to be approximated at <br>
//!                     the same time in one curve. <br>
//!          Tol3D, Tol2D : Tolerances to be reached by the approximation. <br>
//!          RelativeTol : The given tolerances are relative. <br>
 /*instead*/  void SetApproxParameters(Standard_Integer NbPntMax, Standard_Real Tol3D, Standard_Real Tol2D, System::Boolean RelativeTol) ;


 /*instead*/  void Define(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2, OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS) ;

//! returns the common part of the shapes. <br>
 /*instead*/  OCTopoDS_Shape^ Common() ;

//! returns the fuse part of the shapes. <br>
 /*instead*/  OCTopoDS_Shape^ Fus() ;

//! returns the cut part of the shapes. <br>
 /*instead*/  OCTopoDS_Shape^ Cut() ;

//! returns the intersection of the shapes. <br>
 /*instead*/  OCTopoDS_Shape^ Section() ;

//! returns the result of the boolean operation. <br>
 /*instead*/  OCTopoDS_Shape^ Shape() ;

//! Returns the shape(s) resulting of the boolean operation <br>
//!          issued from the shape <S>. <br>
 /*instead*/  OCTopoDS_Shape^ ShapeFrom(OCNaroWrappers::OCTopoDS_Shape^ S) ;

//! Returns the list of the descendant shapes of the shape <S>. <br>
 /*instead*/  OCTopTools_ListOfShape^ Modified(OCNaroWrappers::OCTopoDS_Shape^ S) ;

//! Returns the fact that the shape <S> has been deleted or not <br>
//!          by the boolean operation. <br>
 /*instead*/  System::Boolean IsDeleted(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  OCTopOpeBRepDS_HDataStructure^ DataStructure() ;


 /*instead*/  OCTopOpeBRepDS_HDataStructure^ ChangeDataStructure() ;


 /*instead*/  OCTopOpeBRepBuild_HBuilder^ Builder() ;


 /*instead*/  OCTopOpeBRepBuild_HBuilder^ ChangeBuilder() ;

//! returns the member myDSA. It is useful to then access <br>
//!          the method GetSectionEdgeSet (wich is a member of DSAccess) <br>
 /*instead*/  OCBRepAlgo_DSAccess^ DataStructureAccess() ;

~OCBRepAlgo_BooleanOperations()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
