// File generated by CPPExt (MPV)
//
#ifndef _BRepAlgo_DataMapOfShapeInterference_OCWrappers_HeaderFile
#define _BRepAlgo_DataMapOfShapeInterference_OCWrappers_HeaderFile

// include native header
#include <BRepAlgo_DataMapOfShapeInterference.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopOpeBRepDS_Interference;
ref class OCTopTools_ShapeMapHasher;
ref class OCBRepAlgo_DataMapNodeOfDataMapOfShapeInterference;
ref class OCBRepAlgo_DataMapIteratorOfDataMapOfShapeInterference;



public ref class OCBRepAlgo_DataMapOfShapeInterference  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCBRepAlgo_DataMapOfShapeInterference(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepAlgo_DataMapOfShapeInterference(BRepAlgo_DataMapOfShapeInterference* nativeHandle);

// Methods PUBLIC


OCBRepAlgo_DataMapOfShapeInterference(Standard_Integer NbBuckets);


 /*instead*/  OCBRepAlgo_DataMapOfShapeInterference^ Assign(OCNaroWrappers::OCBRepAlgo_DataMapOfShapeInterference^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I) ;


 /*instead*/  System::Boolean IsBound(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  System::Boolean UnBind(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  OCTopOpeBRepDS_Interference^ Find(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  OCTopOpeBRepDS_Interference^ ChangeFind(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  Standard_Address Find1(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  Standard_Address ChangeFind1(OCNaroWrappers::OCTopoDS_Shape^ K) ;

~OCBRepAlgo_DataMapOfShapeInterference()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
