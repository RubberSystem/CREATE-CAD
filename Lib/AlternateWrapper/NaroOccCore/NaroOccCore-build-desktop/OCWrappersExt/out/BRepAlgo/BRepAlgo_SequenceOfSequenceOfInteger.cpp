// File generated by CPPExt (CPP file)
//

#include "BRepAlgo_SequenceOfSequenceOfInteger.h"
#include "../Converter.h"
#include "../TColStd/TColStd_SequenceOfInteger.h"
#include "BRepAlgo_SequenceNodeOfSequenceOfSequenceOfInteger.h"


using namespace OCNaroWrappers;

OCBRepAlgo_SequenceOfSequenceOfInteger::OCBRepAlgo_SequenceOfSequenceOfInteger(BRepAlgo_SequenceOfSequenceOfInteger* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepAlgo_SequenceOfSequenceOfInteger::OCBRepAlgo_SequenceOfSequenceOfInteger() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new BRepAlgo_SequenceOfSequenceOfInteger();
}

OCBRepAlgo_SequenceOfSequenceOfInteger^ OCBRepAlgo_SequenceOfSequenceOfInteger::Assign(OCNaroWrappers::OCBRepAlgo_SequenceOfSequenceOfInteger^ Other)
{
  BRepAlgo_SequenceOfSequenceOfInteger* tmp = new BRepAlgo_SequenceOfSequenceOfInteger();
  *tmp = ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Assign(*((BRepAlgo_SequenceOfSequenceOfInteger*)Other->Handle));
  return gcnew OCBRepAlgo_SequenceOfSequenceOfInteger(tmp);
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::Append(OCNaroWrappers::OCTColStd_SequenceOfInteger^ T)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Append(*((TColStd_SequenceOfInteger*)T->Handle));
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::Append(OCNaroWrappers::OCBRepAlgo_SequenceOfSequenceOfInteger^ S)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Append(*((BRepAlgo_SequenceOfSequenceOfInteger*)S->Handle));
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::Prepend(OCNaroWrappers::OCTColStd_SequenceOfInteger^ T)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Prepend(*((TColStd_SequenceOfInteger*)T->Handle));
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::Prepend(OCNaroWrappers::OCBRepAlgo_SequenceOfSequenceOfInteger^ S)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Prepend(*((BRepAlgo_SequenceOfSequenceOfInteger*)S->Handle));
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfInteger^ T)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->InsertBefore(Index, *((TColStd_SequenceOfInteger*)T->Handle));
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCBRepAlgo_SequenceOfSequenceOfInteger^ S)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->InsertBefore(Index, *((BRepAlgo_SequenceOfSequenceOfInteger*)S->Handle));
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfInteger^ T)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->InsertAfter(Index, *((TColStd_SequenceOfInteger*)T->Handle));
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCBRepAlgo_SequenceOfSequenceOfInteger^ S)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->InsertAfter(Index, *((BRepAlgo_SequenceOfSequenceOfInteger*)S->Handle));
}

OCTColStd_SequenceOfInteger^ OCBRepAlgo_SequenceOfSequenceOfInteger::First()
{
  TColStd_SequenceOfInteger* tmp = new TColStd_SequenceOfInteger();
  *tmp = ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->First();
  return gcnew OCTColStd_SequenceOfInteger(tmp);
}

OCTColStd_SequenceOfInteger^ OCBRepAlgo_SequenceOfSequenceOfInteger::Last()
{
  TColStd_SequenceOfInteger* tmp = new TColStd_SequenceOfInteger();
  *tmp = ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Last();
  return gcnew OCTColStd_SequenceOfInteger(tmp);
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::Split(Standard_Integer Index, OCNaroWrappers::OCBRepAlgo_SequenceOfSequenceOfInteger^ Sub)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Split(Index, *((BRepAlgo_SequenceOfSequenceOfInteger*)Sub->Handle));
}

OCTColStd_SequenceOfInteger^ OCBRepAlgo_SequenceOfSequenceOfInteger::Value(Standard_Integer Index)
{
  TColStd_SequenceOfInteger* tmp = new TColStd_SequenceOfInteger();
  *tmp = ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Value(Index);
  return gcnew OCTColStd_SequenceOfInteger(tmp);
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::SetValue(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfInteger^ I)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->SetValue(Index, *((TColStd_SequenceOfInteger*)I->Handle));
}

OCTColStd_SequenceOfInteger^ OCBRepAlgo_SequenceOfSequenceOfInteger::ChangeValue(Standard_Integer Index)
{
  TColStd_SequenceOfInteger* tmp = new TColStd_SequenceOfInteger();
  *tmp = ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->ChangeValue(Index);
  return gcnew OCTColStd_SequenceOfInteger(tmp);
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::Remove(Standard_Integer Index)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Remove(Index);
}

 void OCBRepAlgo_SequenceOfSequenceOfInteger::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((BRepAlgo_SequenceOfSequenceOfInteger*)nativeHandle)->Remove(FromIndex, ToIndex);
}


