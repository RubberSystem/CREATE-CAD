// File generated by CPPExt (CPP file)
//

#include "AppParCurves_Array1OfMultiBSpCurve.h"
#include "../Converter.h"
#include "AppParCurves_MultiBSpCurve.h"


using namespace OCNaroWrappers;

OCAppParCurves_Array1OfMultiBSpCurve::OCAppParCurves_Array1OfMultiBSpCurve(AppParCurves_Array1OfMultiBSpCurve* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCAppParCurves_Array1OfMultiBSpCurve::OCAppParCurves_Array1OfMultiBSpCurve(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new AppParCurves_Array1OfMultiBSpCurve(Low, Up);
}

OCAppParCurves_Array1OfMultiBSpCurve::OCAppParCurves_Array1OfMultiBSpCurve(OCNaroWrappers::OCAppParCurves_MultiBSpCurve^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new AppParCurves_Array1OfMultiBSpCurve(*((AppParCurves_MultiBSpCurve*)Item->Handle), Low, Up);
}

 void OCAppParCurves_Array1OfMultiBSpCurve::Init(OCNaroWrappers::OCAppParCurves_MultiBSpCurve^ V)
{
  ((AppParCurves_Array1OfMultiBSpCurve*)nativeHandle)->Init(*((AppParCurves_MultiBSpCurve*)V->Handle));
}

 System::Boolean OCAppParCurves_Array1OfMultiBSpCurve::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((AppParCurves_Array1OfMultiBSpCurve*)nativeHandle)->IsAllocated());
}

OCAppParCurves_Array1OfMultiBSpCurve^ OCAppParCurves_Array1OfMultiBSpCurve::Assign(OCNaroWrappers::OCAppParCurves_Array1OfMultiBSpCurve^ Other)
{
  AppParCurves_Array1OfMultiBSpCurve* tmp = new AppParCurves_Array1OfMultiBSpCurve(0, 0);
  *tmp = ((AppParCurves_Array1OfMultiBSpCurve*)nativeHandle)->Assign(*((AppParCurves_Array1OfMultiBSpCurve*)Other->Handle));
  return gcnew OCAppParCurves_Array1OfMultiBSpCurve(tmp);
}

 Standard_Integer OCAppParCurves_Array1OfMultiBSpCurve::Length()
{
  return ((AppParCurves_Array1OfMultiBSpCurve*)nativeHandle)->Length();
}

 Standard_Integer OCAppParCurves_Array1OfMultiBSpCurve::Lower()
{
  return ((AppParCurves_Array1OfMultiBSpCurve*)nativeHandle)->Lower();
}

 Standard_Integer OCAppParCurves_Array1OfMultiBSpCurve::Upper()
{
  return ((AppParCurves_Array1OfMultiBSpCurve*)nativeHandle)->Upper();
}

 void OCAppParCurves_Array1OfMultiBSpCurve::SetValue(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_MultiBSpCurve^ Value)
{
  ((AppParCurves_Array1OfMultiBSpCurve*)nativeHandle)->SetValue(Index, *((AppParCurves_MultiBSpCurve*)Value->Handle));
}

OCAppParCurves_MultiBSpCurve^ OCAppParCurves_Array1OfMultiBSpCurve::Value(Standard_Integer Index)
{
  AppParCurves_MultiBSpCurve* tmp = new AppParCurves_MultiBSpCurve();
  *tmp = ((AppParCurves_Array1OfMultiBSpCurve*)nativeHandle)->Value(Index);
  return gcnew OCAppParCurves_MultiBSpCurve(tmp);
}

OCAppParCurves_MultiBSpCurve^ OCAppParCurves_Array1OfMultiBSpCurve::ChangeValue(Standard_Integer Index)
{
  AppParCurves_MultiBSpCurve* tmp = new AppParCurves_MultiBSpCurve();
  *tmp = ((AppParCurves_Array1OfMultiBSpCurve*)nativeHandle)->ChangeValue(Index);
  return gcnew OCAppParCurves_MultiBSpCurve(tmp);
}


