// File generated by CPPExt (CPP file)
//

#include "AppParCurves_MultiPoint.h"
#include "../Converter.h"
#include "../MMgt/MMgt_TShared.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Pnt2d.h"


using namespace OCNaroWrappers;

OCAppParCurves_MultiPoint::OCAppParCurves_MultiPoint(AppParCurves_MultiPoint* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCAppParCurves_MultiPoint::OCAppParCurves_MultiPoint() 
{
  nativeHandle = new AppParCurves_MultiPoint();
}

OCAppParCurves_MultiPoint::OCAppParCurves_MultiPoint(Standard_Integer NbPoints, Standard_Integer NbPoints2d) 
{
  nativeHandle = new AppParCurves_MultiPoint(NbPoints, NbPoints2d);
}

OCAppParCurves_MultiPoint::OCAppParCurves_MultiPoint(OCNaroWrappers::OCTColgp_Array1OfPnt^ tabP) 
{
  nativeHandle = new AppParCurves_MultiPoint(*((TColgp_Array1OfPnt*)tabP->Handle));
}

OCAppParCurves_MultiPoint::OCAppParCurves_MultiPoint(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ tabP2d) 
{
  nativeHandle = new AppParCurves_MultiPoint(*((TColgp_Array1OfPnt2d*)tabP2d->Handle));
}

OCAppParCurves_MultiPoint::OCAppParCurves_MultiPoint(OCNaroWrappers::OCTColgp_Array1OfPnt^ tabP, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ tabP2d) 
{
  nativeHandle = new AppParCurves_MultiPoint(*((TColgp_Array1OfPnt*)tabP->Handle), *((TColgp_Array1OfPnt2d*)tabP2d->Handle));
}

 void OCAppParCurves_MultiPoint::Delete()
{
  ((AppParCurves_MultiPoint*)nativeHandle)->Delete();
}

 void OCAppParCurves_MultiPoint::SetPoint(Standard_Integer Index, OCNaroWrappers::OCgp_Pnt^ Point)
{
  ((AppParCurves_MultiPoint*)nativeHandle)->SetPoint(Index, *((gp_Pnt*)Point->Handle));
}

OCgp_Pnt^ OCAppParCurves_MultiPoint::Point(Standard_Integer Index)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((AppParCurves_MultiPoint*)nativeHandle)->Point(Index);
  return gcnew OCgp_Pnt(tmp);
}

 void OCAppParCurves_MultiPoint::SetPoint2d(Standard_Integer Index, OCNaroWrappers::OCgp_Pnt2d^ Point)
{
  ((AppParCurves_MultiPoint*)nativeHandle)->SetPoint2d(Index, *((gp_Pnt2d*)Point->Handle));
}

OCgp_Pnt2d^ OCAppParCurves_MultiPoint::Point2d(Standard_Integer Index)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = ((AppParCurves_MultiPoint*)nativeHandle)->Point2d(Index);
  return gcnew OCgp_Pnt2d(tmp);
}

 Standard_Integer OCAppParCurves_MultiPoint::Dimension(Standard_Integer Index)
{
  return ((AppParCurves_MultiPoint*)nativeHandle)->Dimension(Index);
}

 Standard_Integer OCAppParCurves_MultiPoint::NbPoints()
{
  return ((AppParCurves_MultiPoint*)nativeHandle)->NbPoints();
}

 Standard_Integer OCAppParCurves_MultiPoint::NbPoints2d()
{
  return ((AppParCurves_MultiPoint*)nativeHandle)->NbPoints2d();
}

 void OCAppParCurves_MultiPoint::Transform(Standard_Integer CuIndex, Standard_Real x, Standard_Real dx, Standard_Real y, Standard_Real dy, Standard_Real z, Standard_Real dz)
{
  ((AppParCurves_MultiPoint*)nativeHandle)->Transform(CuIndex, x, dx, y, dy, z, dz);
}

 void OCAppParCurves_MultiPoint::Transform2d(Standard_Integer CuIndex, Standard_Real x, Standard_Real dx, Standard_Real y, Standard_Real dy)
{
  ((AppParCurves_MultiPoint*)nativeHandle)->Transform2d(CuIndex, x, dx, y, dy);
}

 void OCAppParCurves_MultiPoint::Dump(Standard_OStream& o)
{
  ((AppParCurves_MultiPoint*)nativeHandle)->Dump(o);
}


