// File generated by CPPExt (CPP file)
//

#include "AppParCurves_SequenceOfMultiCurve.h"
#include "../Converter.h"
#include "AppParCurves_MultiCurve.h"
#include "AppParCurves_SequenceNodeOfSequenceOfMultiCurve.h"


using namespace OCNaroWrappers;

OCAppParCurves_SequenceOfMultiCurve::OCAppParCurves_SequenceOfMultiCurve(AppParCurves_SequenceOfMultiCurve* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCAppParCurves_SequenceOfMultiCurve::OCAppParCurves_SequenceOfMultiCurve() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new AppParCurves_SequenceOfMultiCurve();
}

OCAppParCurves_SequenceOfMultiCurve^ OCAppParCurves_SequenceOfMultiCurve::Assign(OCNaroWrappers::OCAppParCurves_SequenceOfMultiCurve^ Other)
{
  AppParCurves_SequenceOfMultiCurve* tmp = new AppParCurves_SequenceOfMultiCurve();
  *tmp = ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Assign(*((AppParCurves_SequenceOfMultiCurve*)Other->Handle));
  return gcnew OCAppParCurves_SequenceOfMultiCurve(tmp);
}

 void OCAppParCurves_SequenceOfMultiCurve::Append(OCNaroWrappers::OCAppParCurves_MultiCurve^ T)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Append(*((AppParCurves_MultiCurve*)T->Handle));
}

 void OCAppParCurves_SequenceOfMultiCurve::Append(OCNaroWrappers::OCAppParCurves_SequenceOfMultiCurve^ S)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Append(*((AppParCurves_SequenceOfMultiCurve*)S->Handle));
}

 void OCAppParCurves_SequenceOfMultiCurve::Prepend(OCNaroWrappers::OCAppParCurves_MultiCurve^ T)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Prepend(*((AppParCurves_MultiCurve*)T->Handle));
}

 void OCAppParCurves_SequenceOfMultiCurve::Prepend(OCNaroWrappers::OCAppParCurves_SequenceOfMultiCurve^ S)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Prepend(*((AppParCurves_SequenceOfMultiCurve*)S->Handle));
}

 void OCAppParCurves_SequenceOfMultiCurve::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_MultiCurve^ T)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->InsertBefore(Index, *((AppParCurves_MultiCurve*)T->Handle));
}

 void OCAppParCurves_SequenceOfMultiCurve::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_SequenceOfMultiCurve^ S)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->InsertBefore(Index, *((AppParCurves_SequenceOfMultiCurve*)S->Handle));
}

 void OCAppParCurves_SequenceOfMultiCurve::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_MultiCurve^ T)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->InsertAfter(Index, *((AppParCurves_MultiCurve*)T->Handle));
}

 void OCAppParCurves_SequenceOfMultiCurve::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_SequenceOfMultiCurve^ S)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->InsertAfter(Index, *((AppParCurves_SequenceOfMultiCurve*)S->Handle));
}

OCAppParCurves_MultiCurve^ OCAppParCurves_SequenceOfMultiCurve::First()
{
  AppParCurves_MultiCurve* tmp = new AppParCurves_MultiCurve();
  *tmp = ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->First();
  return gcnew OCAppParCurves_MultiCurve(tmp);
}

OCAppParCurves_MultiCurve^ OCAppParCurves_SequenceOfMultiCurve::Last()
{
  AppParCurves_MultiCurve* tmp = new AppParCurves_MultiCurve();
  *tmp = ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Last();
  return gcnew OCAppParCurves_MultiCurve(tmp);
}

 void OCAppParCurves_SequenceOfMultiCurve::Split(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_SequenceOfMultiCurve^ Sub)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Split(Index, *((AppParCurves_SequenceOfMultiCurve*)Sub->Handle));
}

OCAppParCurves_MultiCurve^ OCAppParCurves_SequenceOfMultiCurve::Value(Standard_Integer Index)
{
  AppParCurves_MultiCurve* tmp = new AppParCurves_MultiCurve();
  *tmp = ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Value(Index);
  return gcnew OCAppParCurves_MultiCurve(tmp);
}

 void OCAppParCurves_SequenceOfMultiCurve::SetValue(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_MultiCurve^ I)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->SetValue(Index, *((AppParCurves_MultiCurve*)I->Handle));
}

OCAppParCurves_MultiCurve^ OCAppParCurves_SequenceOfMultiCurve::ChangeValue(Standard_Integer Index)
{
  AppParCurves_MultiCurve* tmp = new AppParCurves_MultiCurve();
  *tmp = ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->ChangeValue(Index);
  return gcnew OCAppParCurves_MultiCurve(tmp);
}

 void OCAppParCurves_SequenceOfMultiCurve::Remove(Standard_Integer Index)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Remove(Index);
}

 void OCAppParCurves_SequenceOfMultiCurve::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((AppParCurves_SequenceOfMultiCurve*)nativeHandle)->Remove(FromIndex, ToIndex);
}


