// File generated by CPPExt (CPP file)
//

#include "AppParCurves_SequenceOfMultiBSpCurve.h"
#include "../Converter.h"
#include "AppParCurves_MultiBSpCurve.h"
#include "AppParCurves_SequenceNodeOfSequenceOfMultiBSpCurve.h"


using namespace OCNaroWrappers;

OCAppParCurves_SequenceOfMultiBSpCurve::OCAppParCurves_SequenceOfMultiBSpCurve(AppParCurves_SequenceOfMultiBSpCurve* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCAppParCurves_SequenceOfMultiBSpCurve::OCAppParCurves_SequenceOfMultiBSpCurve() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new AppParCurves_SequenceOfMultiBSpCurve();
}

OCAppParCurves_SequenceOfMultiBSpCurve^ OCAppParCurves_SequenceOfMultiBSpCurve::Assign(OCNaroWrappers::OCAppParCurves_SequenceOfMultiBSpCurve^ Other)
{
  AppParCurves_SequenceOfMultiBSpCurve* tmp = new AppParCurves_SequenceOfMultiBSpCurve();
  *tmp = ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Assign(*((AppParCurves_SequenceOfMultiBSpCurve*)Other->Handle));
  return gcnew OCAppParCurves_SequenceOfMultiBSpCurve(tmp);
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::Append(OCNaroWrappers::OCAppParCurves_MultiBSpCurve^ T)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Append(*((AppParCurves_MultiBSpCurve*)T->Handle));
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::Append(OCNaroWrappers::OCAppParCurves_SequenceOfMultiBSpCurve^ S)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Append(*((AppParCurves_SequenceOfMultiBSpCurve*)S->Handle));
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::Prepend(OCNaroWrappers::OCAppParCurves_MultiBSpCurve^ T)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Prepend(*((AppParCurves_MultiBSpCurve*)T->Handle));
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::Prepend(OCNaroWrappers::OCAppParCurves_SequenceOfMultiBSpCurve^ S)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Prepend(*((AppParCurves_SequenceOfMultiBSpCurve*)S->Handle));
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_MultiBSpCurve^ T)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->InsertBefore(Index, *((AppParCurves_MultiBSpCurve*)T->Handle));
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_SequenceOfMultiBSpCurve^ S)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->InsertBefore(Index, *((AppParCurves_SequenceOfMultiBSpCurve*)S->Handle));
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_MultiBSpCurve^ T)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->InsertAfter(Index, *((AppParCurves_MultiBSpCurve*)T->Handle));
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_SequenceOfMultiBSpCurve^ S)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->InsertAfter(Index, *((AppParCurves_SequenceOfMultiBSpCurve*)S->Handle));
}

OCAppParCurves_MultiBSpCurve^ OCAppParCurves_SequenceOfMultiBSpCurve::First()
{
  AppParCurves_MultiBSpCurve* tmp = new AppParCurves_MultiBSpCurve();
  *tmp = ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->First();
  return gcnew OCAppParCurves_MultiBSpCurve(tmp);
}

OCAppParCurves_MultiBSpCurve^ OCAppParCurves_SequenceOfMultiBSpCurve::Last()
{
  AppParCurves_MultiBSpCurve* tmp = new AppParCurves_MultiBSpCurve();
  *tmp = ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Last();
  return gcnew OCAppParCurves_MultiBSpCurve(tmp);
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::Split(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_SequenceOfMultiBSpCurve^ Sub)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Split(Index, *((AppParCurves_SequenceOfMultiBSpCurve*)Sub->Handle));
}

OCAppParCurves_MultiBSpCurve^ OCAppParCurves_SequenceOfMultiBSpCurve::Value(Standard_Integer Index)
{
  AppParCurves_MultiBSpCurve* tmp = new AppParCurves_MultiBSpCurve();
  *tmp = ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Value(Index);
  return gcnew OCAppParCurves_MultiBSpCurve(tmp);
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::SetValue(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_MultiBSpCurve^ I)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->SetValue(Index, *((AppParCurves_MultiBSpCurve*)I->Handle));
}

OCAppParCurves_MultiBSpCurve^ OCAppParCurves_SequenceOfMultiBSpCurve::ChangeValue(Standard_Integer Index)
{
  AppParCurves_MultiBSpCurve* tmp = new AppParCurves_MultiBSpCurve();
  *tmp = ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->ChangeValue(Index);
  return gcnew OCAppParCurves_MultiBSpCurve(tmp);
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::Remove(Standard_Integer Index)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Remove(Index);
}

 void OCAppParCurves_SequenceOfMultiBSpCurve::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((AppParCurves_SequenceOfMultiBSpCurve*)nativeHandle)->Remove(FromIndex, ToIndex);
}


