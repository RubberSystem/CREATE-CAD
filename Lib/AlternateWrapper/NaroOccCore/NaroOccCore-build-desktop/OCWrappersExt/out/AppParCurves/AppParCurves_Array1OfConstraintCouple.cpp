// File generated by CPPExt (CPP file)
//

#include "AppParCurves_Array1OfConstraintCouple.h"
#include "../Converter.h"
#include "AppParCurves_ConstraintCouple.h"


using namespace OCNaroWrappers;

OCAppParCurves_Array1OfConstraintCouple::OCAppParCurves_Array1OfConstraintCouple(AppParCurves_Array1OfConstraintCouple* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCAppParCurves_Array1OfConstraintCouple::OCAppParCurves_Array1OfConstraintCouple(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new AppParCurves_Array1OfConstraintCouple(Low, Up);
}

OCAppParCurves_Array1OfConstraintCouple::OCAppParCurves_Array1OfConstraintCouple(OCNaroWrappers::OCAppParCurves_ConstraintCouple^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new AppParCurves_Array1OfConstraintCouple(*((AppParCurves_ConstraintCouple*)Item->Handle), Low, Up);
}

 void OCAppParCurves_Array1OfConstraintCouple::Init(OCNaroWrappers::OCAppParCurves_ConstraintCouple^ V)
{
  ((AppParCurves_Array1OfConstraintCouple*)nativeHandle)->Init(*((AppParCurves_ConstraintCouple*)V->Handle));
}

 System::Boolean OCAppParCurves_Array1OfConstraintCouple::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((AppParCurves_Array1OfConstraintCouple*)nativeHandle)->IsAllocated());
}

OCAppParCurves_Array1OfConstraintCouple^ OCAppParCurves_Array1OfConstraintCouple::Assign(OCNaroWrappers::OCAppParCurves_Array1OfConstraintCouple^ Other)
{
  AppParCurves_Array1OfConstraintCouple* tmp = new AppParCurves_Array1OfConstraintCouple(0, 0);
  *tmp = ((AppParCurves_Array1OfConstraintCouple*)nativeHandle)->Assign(*((AppParCurves_Array1OfConstraintCouple*)Other->Handle));
  return gcnew OCAppParCurves_Array1OfConstraintCouple(tmp);
}

 Standard_Integer OCAppParCurves_Array1OfConstraintCouple::Length()
{
  return ((AppParCurves_Array1OfConstraintCouple*)nativeHandle)->Length();
}

 Standard_Integer OCAppParCurves_Array1OfConstraintCouple::Lower()
{
  return ((AppParCurves_Array1OfConstraintCouple*)nativeHandle)->Lower();
}

 Standard_Integer OCAppParCurves_Array1OfConstraintCouple::Upper()
{
  return ((AppParCurves_Array1OfConstraintCouple*)nativeHandle)->Upper();
}

 void OCAppParCurves_Array1OfConstraintCouple::SetValue(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_ConstraintCouple^ Value)
{
  ((AppParCurves_Array1OfConstraintCouple*)nativeHandle)->SetValue(Index, *((AppParCurves_ConstraintCouple*)Value->Handle));
}

OCAppParCurves_ConstraintCouple^ OCAppParCurves_Array1OfConstraintCouple::Value(Standard_Integer Index)
{
  AppParCurves_ConstraintCouple* tmp = new AppParCurves_ConstraintCouple();
  *tmp = ((AppParCurves_Array1OfConstraintCouple*)nativeHandle)->Value(Index);
  return gcnew OCAppParCurves_ConstraintCouple(tmp);
}

OCAppParCurves_ConstraintCouple^ OCAppParCurves_Array1OfConstraintCouple::ChangeValue(Standard_Integer Index)
{
  AppParCurves_ConstraintCouple* tmp = new AppParCurves_ConstraintCouple();
  *tmp = ((AppParCurves_Array1OfConstraintCouple*)nativeHandle)->ChangeValue(Index);
  return gcnew OCAppParCurves_ConstraintCouple(tmp);
}


