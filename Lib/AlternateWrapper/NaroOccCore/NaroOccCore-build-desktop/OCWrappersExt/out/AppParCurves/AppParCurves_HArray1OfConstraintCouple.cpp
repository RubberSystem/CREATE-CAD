// File generated by CPPExt (CPP file)
//

#include "AppParCurves_HArray1OfConstraintCouple.h"
#include "../Converter.h"
#include "AppParCurves_ConstraintCouple.h"
#include "AppParCurves_Array1OfConstraintCouple.h"


using namespace OCNaroWrappers;

OCAppParCurves_HArray1OfConstraintCouple::OCAppParCurves_HArray1OfConstraintCouple(Handle(AppParCurves_HArray1OfConstraintCouple)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AppParCurves_HArray1OfConstraintCouple(*nativeHandle);
}

OCAppParCurves_HArray1OfConstraintCouple::OCAppParCurves_HArray1OfConstraintCouple(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AppParCurves_HArray1OfConstraintCouple(new AppParCurves_HArray1OfConstraintCouple(Low, Up));
}

OCAppParCurves_HArray1OfConstraintCouple::OCAppParCurves_HArray1OfConstraintCouple(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCAppParCurves_ConstraintCouple^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AppParCurves_HArray1OfConstraintCouple(new AppParCurves_HArray1OfConstraintCouple(Low, Up, *((AppParCurves_ConstraintCouple*)V->Handle)));
}

 void OCAppParCurves_HArray1OfConstraintCouple::Init(OCNaroWrappers::OCAppParCurves_ConstraintCouple^ V)
{
  (*((Handle_AppParCurves_HArray1OfConstraintCouple*)nativeHandle))->Init(*((AppParCurves_ConstraintCouple*)V->Handle));
}

 Standard_Integer OCAppParCurves_HArray1OfConstraintCouple::Length()
{
  return (*((Handle_AppParCurves_HArray1OfConstraintCouple*)nativeHandle))->Length();
}

 Standard_Integer OCAppParCurves_HArray1OfConstraintCouple::Lower()
{
  return (*((Handle_AppParCurves_HArray1OfConstraintCouple*)nativeHandle))->Lower();
}

 Standard_Integer OCAppParCurves_HArray1OfConstraintCouple::Upper()
{
  return (*((Handle_AppParCurves_HArray1OfConstraintCouple*)nativeHandle))->Upper();
}

 void OCAppParCurves_HArray1OfConstraintCouple::SetValue(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_ConstraintCouple^ Value)
{
  (*((Handle_AppParCurves_HArray1OfConstraintCouple*)nativeHandle))->SetValue(Index, *((AppParCurves_ConstraintCouple*)Value->Handle));
}

OCAppParCurves_ConstraintCouple^ OCAppParCurves_HArray1OfConstraintCouple::Value(Standard_Integer Index)
{
  AppParCurves_ConstraintCouple* tmp = new AppParCurves_ConstraintCouple();
  *tmp = (*((Handle_AppParCurves_HArray1OfConstraintCouple*)nativeHandle))->Value(Index);
  return gcnew OCAppParCurves_ConstraintCouple(tmp);
}

OCAppParCurves_ConstraintCouple^ OCAppParCurves_HArray1OfConstraintCouple::ChangeValue(Standard_Integer Index)
{
  AppParCurves_ConstraintCouple* tmp = new AppParCurves_ConstraintCouple();
  *tmp = (*((Handle_AppParCurves_HArray1OfConstraintCouple*)nativeHandle))->ChangeValue(Index);
  return gcnew OCAppParCurves_ConstraintCouple(tmp);
}

OCAppParCurves_Array1OfConstraintCouple^ OCAppParCurves_HArray1OfConstraintCouple::Array1()
{
  AppParCurves_Array1OfConstraintCouple* tmp = new AppParCurves_Array1OfConstraintCouple(0, 0);
  *tmp = (*((Handle_AppParCurves_HArray1OfConstraintCouple*)nativeHandle))->Array1();
  return gcnew OCAppParCurves_Array1OfConstraintCouple(tmp);
}

OCAppParCurves_Array1OfConstraintCouple^ OCAppParCurves_HArray1OfConstraintCouple::ChangeArray1()
{
  AppParCurves_Array1OfConstraintCouple* tmp = new AppParCurves_Array1OfConstraintCouple(0, 0);
  *tmp = (*((Handle_AppParCurves_HArray1OfConstraintCouple*)nativeHandle))->ChangeArray1();
  return gcnew OCAppParCurves_Array1OfConstraintCouple(tmp);
}


