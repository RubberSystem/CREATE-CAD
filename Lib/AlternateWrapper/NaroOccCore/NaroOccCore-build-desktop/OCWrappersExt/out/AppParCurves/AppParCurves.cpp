// File generated by CPPExt (CPP file)
//

#include "AppParCurves.h"
#include "../Converter.h"


using namespace OCNaroWrappers;



 void OCAppParCurves::BernsteinMatrix(Standard_Integer NbPoles, OCNaroWrappers::OCmath_Vector^ U, OCNaroWrappers::OCmath_Matrix^ A)
{
  AppParCurves::BernsteinMatrix(NbPoles, *((math_Vector*)U->Handle), *((math_Matrix*)A->Handle));
}

 void OCAppParCurves::Bernstein(Standard_Integer NbPoles, OCNaroWrappers::OCmath_Vector^ U, OCNaroWrappers::OCmath_Matrix^ A, OCNaroWrappers::OCmath_Matrix^ DA)
{
  AppParCurves::Bernstein(NbPoles, *((math_Vector*)U->Handle), *((math_Matrix*)A->Handle), *((math_Matrix*)DA->Handle));
}

 void OCAppParCurves::SecondDerivativeBernstein(Standard_Real U, OCNaroWrappers::OCmath_Vector^ DDA)
{
  AppParCurves::SecondDerivativeBernstein(U, *((math_Vector*)DDA->Handle));
}

 void OCAppParCurves::SplineFunction(Standard_Integer NbPoles, Standard_Integer Degree, OCNaroWrappers::OCmath_Vector^ Parameters, OCNaroWrappers::OCmath_Vector^ FlatKnots, OCNaroWrappers::OCmath_Matrix^ A, OCNaroWrappers::OCmath_Matrix^ DA, OCNaroWrappers::OCmath_IntegerVector^ Index)
{
  AppParCurves::SplineFunction(NbPoles, Degree, *((math_Vector*)Parameters->Handle), *((math_Vector*)FlatKnots->Handle), *((math_Matrix*)A->Handle), *((math_Matrix*)DA->Handle), *((math_IntegerVector*)Index->Handle));
}


