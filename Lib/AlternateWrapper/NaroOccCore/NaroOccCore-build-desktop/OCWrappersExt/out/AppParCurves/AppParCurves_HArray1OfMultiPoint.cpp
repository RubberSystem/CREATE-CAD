// File generated by CPPExt (CPP file)
//

#include "AppParCurves_HArray1OfMultiPoint.h"
#include "../Converter.h"
#include "AppParCurves_MultiPoint.h"
#include "AppParCurves_Array1OfMultiPoint.h"


using namespace OCNaroWrappers;

OCAppParCurves_HArray1OfMultiPoint::OCAppParCurves_HArray1OfMultiPoint(Handle(AppParCurves_HArray1OfMultiPoint)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_AppParCurves_HArray1OfMultiPoint(*nativeHandle);
}

OCAppParCurves_HArray1OfMultiPoint::OCAppParCurves_HArray1OfMultiPoint(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AppParCurves_HArray1OfMultiPoint(new AppParCurves_HArray1OfMultiPoint(Low, Up));
}

OCAppParCurves_HArray1OfMultiPoint::OCAppParCurves_HArray1OfMultiPoint(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCAppParCurves_MultiPoint^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_AppParCurves_HArray1OfMultiPoint(new AppParCurves_HArray1OfMultiPoint(Low, Up, *((AppParCurves_MultiPoint*)V->Handle)));
}

 void OCAppParCurves_HArray1OfMultiPoint::Init(OCNaroWrappers::OCAppParCurves_MultiPoint^ V)
{
  (*((Handle_AppParCurves_HArray1OfMultiPoint*)nativeHandle))->Init(*((AppParCurves_MultiPoint*)V->Handle));
}

 Standard_Integer OCAppParCurves_HArray1OfMultiPoint::Length()
{
  return (*((Handle_AppParCurves_HArray1OfMultiPoint*)nativeHandle))->Length();
}

 Standard_Integer OCAppParCurves_HArray1OfMultiPoint::Lower()
{
  return (*((Handle_AppParCurves_HArray1OfMultiPoint*)nativeHandle))->Lower();
}

 Standard_Integer OCAppParCurves_HArray1OfMultiPoint::Upper()
{
  return (*((Handle_AppParCurves_HArray1OfMultiPoint*)nativeHandle))->Upper();
}

 void OCAppParCurves_HArray1OfMultiPoint::SetValue(Standard_Integer Index, OCNaroWrappers::OCAppParCurves_MultiPoint^ Value)
{
  (*((Handle_AppParCurves_HArray1OfMultiPoint*)nativeHandle))->SetValue(Index, *((AppParCurves_MultiPoint*)Value->Handle));
}

OCAppParCurves_MultiPoint^ OCAppParCurves_HArray1OfMultiPoint::Value(Standard_Integer Index)
{
  AppParCurves_MultiPoint* tmp = new AppParCurves_MultiPoint();
  *tmp = (*((Handle_AppParCurves_HArray1OfMultiPoint*)nativeHandle))->Value(Index);
  return gcnew OCAppParCurves_MultiPoint(tmp);
}

OCAppParCurves_MultiPoint^ OCAppParCurves_HArray1OfMultiPoint::ChangeValue(Standard_Integer Index)
{
  AppParCurves_MultiPoint* tmp = new AppParCurves_MultiPoint();
  *tmp = (*((Handle_AppParCurves_HArray1OfMultiPoint*)nativeHandle))->ChangeValue(Index);
  return gcnew OCAppParCurves_MultiPoint(tmp);
}

OCAppParCurves_Array1OfMultiPoint^ OCAppParCurves_HArray1OfMultiPoint::Array1()
{
  AppParCurves_Array1OfMultiPoint* tmp = new AppParCurves_Array1OfMultiPoint(0, 0);
  *tmp = (*((Handle_AppParCurves_HArray1OfMultiPoint*)nativeHandle))->Array1();
  return gcnew OCAppParCurves_Array1OfMultiPoint(tmp);
}

OCAppParCurves_Array1OfMultiPoint^ OCAppParCurves_HArray1OfMultiPoint::ChangeArray1()
{
  AppParCurves_Array1OfMultiPoint* tmp = new AppParCurves_Array1OfMultiPoint(0, 0);
  *tmp = (*((Handle_AppParCurves_HArray1OfMultiPoint*)nativeHandle))->ChangeArray1();
  return gcnew OCAppParCurves_Array1OfMultiPoint(tmp);
}


