// File generated by CPPExt (CPP file)
//

#include "MeshAlgo_Edge.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCMeshAlgo_Edge::OCMeshAlgo_Edge(MeshAlgo_Edge* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCMeshAlgo_Edge::OCMeshAlgo_Edge(Standard_Integer node1, Standard_Integer node2, OCMeshDS_DegreeOfFreedom canMove, Standard_Integer domain) 
{}

 Standard_Integer OCMeshAlgo_Edge::FirstNode()
{
  return ((MeshAlgo_Edge*)nativeHandle)->FirstNode();
}

 Standard_Integer OCMeshAlgo_Edge::LastNode()
{
  return ((MeshAlgo_Edge*)nativeHandle)->LastNode();
}

 OCMeshDS_DegreeOfFreedom OCMeshAlgo_Edge::Movability()
{
  return (OCMeshDS_DegreeOfFreedom)(((MeshAlgo_Edge*)nativeHandle)->Movability());
}

 void OCMeshAlgo_Edge::SetMovability(OCMeshDS_DegreeOfFreedom canMove)
{
  ((MeshAlgo_Edge*)nativeHandle)->SetMovability((MeshDS_DegreeOfFreedom)canMove);
}

 Standard_Integer OCMeshAlgo_Edge::Domain()
{
  return ((MeshAlgo_Edge*)nativeHandle)->Domain();
}

 System::Boolean OCMeshAlgo_Edge::SameOrientation(OCNaroWrappers::OCMeshAlgo_Edge^ Other)
{
  return OCConverter::StandardBooleanToBoolean(((MeshAlgo_Edge*)nativeHandle)->SameOrientation(*((MeshAlgo_Edge*)Other->Handle)));
}

 Standard_Integer OCMeshAlgo_Edge::HashCode(Standard_Integer Upper)
{
  return ((MeshAlgo_Edge*)nativeHandle)->HashCode(Upper);
}

 System::Boolean OCMeshAlgo_Edge::IsEqual(OCNaroWrappers::OCMeshAlgo_Edge^ Other)
{
  return OCConverter::StandardBooleanToBoolean(((MeshAlgo_Edge*)nativeHandle)->IsEqual(*((MeshAlgo_Edge*)Other->Handle)));
}


