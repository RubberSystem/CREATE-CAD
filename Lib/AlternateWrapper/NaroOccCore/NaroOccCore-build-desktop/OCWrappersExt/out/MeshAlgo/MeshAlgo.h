// File generated by CPPExt (Package)
//

#ifndef _MeshAlgo_OCWrappers_HeaderFile
#define _MeshAlgo_OCWrappers_HeaderFile

// Include the wrapped header
#include <MeshAlgo.hxx>

#include "MeshAlgo_Vertex.h"
#include "MeshAlgo_Edge.h"
#include "MeshAlgo_Triangle.h"
#include "MeshAlgo_Circ.h"
#include "MeshAlgo_DataMapOfIntegerCirc.h"
#include "MeshAlgo_CircleTool.h"
#include "MeshAlgo_PntComparator.h"
#include "MeshAlgo_IndexedPntComparator.h"
#include "MeshAlgo_Delaunay.h"
#include "MeshAlgo_DataStructure.h"
#include "MeshAlgo_ComparatorOfVertex.h"
#include "MeshAlgo_ComparatorOfIndexedVertex.h"
#include "MeshAlgo_Array1OfVertex.h"
#include "MeshAlgo_HArray1OfVertex.h"
#include "MeshAlgo_HeapSortVertex.h"
#include "MeshAlgo_HeapSortIndexedVertex.h"
#include "MeshAlgo_DataMapNodeOfDataMapOfIntegerCirc.h"
#include "MeshAlgo_DataMapIteratorOfDataMapOfIntegerCirc.h"


namespace OCNaroWrappers
{
//! Manages different algorithms for triangulation. <br>
//!          (like Delaunay) <br>
public ref class OCMeshAlgo abstract sealed
{

public:
// Methods


static /*instead*/  void SetMesure(System::Boolean val) ;


static /*instead*/  void SetTrace(Standard_Integer val) ;


};

}; // OCNaroWrappers

#endif
