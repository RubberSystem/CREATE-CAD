// File generated by CPPExt (CPP file)
//

#include "MeshAlgo_DataMapOfIntegerCirc.h"
#include "../Converter.h"
#include "MeshAlgo_Circ.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "MeshAlgo_DataMapNodeOfDataMapOfIntegerCirc.h"
#include "MeshAlgo_DataMapIteratorOfDataMapOfIntegerCirc.h"


using namespace OCNaroWrappers;

OCMeshAlgo_DataMapOfIntegerCirc::OCMeshAlgo_DataMapOfIntegerCirc(MeshAlgo_DataMapOfIntegerCirc* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCMeshAlgo_DataMapOfIntegerCirc::OCMeshAlgo_DataMapOfIntegerCirc(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new MeshAlgo_DataMapOfIntegerCirc(NbBuckets);
}

OCMeshAlgo_DataMapOfIntegerCirc^ OCMeshAlgo_DataMapOfIntegerCirc::Assign(OCNaroWrappers::OCMeshAlgo_DataMapOfIntegerCirc^ Other)
{
  MeshAlgo_DataMapOfIntegerCirc* tmp = new MeshAlgo_DataMapOfIntegerCirc(0);
  *tmp = ((MeshAlgo_DataMapOfIntegerCirc*)nativeHandle)->Assign(*((MeshAlgo_DataMapOfIntegerCirc*)Other->Handle));
  return gcnew OCMeshAlgo_DataMapOfIntegerCirc(tmp);
}

 void OCMeshAlgo_DataMapOfIntegerCirc::ReSize(Standard_Integer NbBuckets)
{
  ((MeshAlgo_DataMapOfIntegerCirc*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCMeshAlgo_DataMapOfIntegerCirc::Bind(Standard_Integer K, OCNaroWrappers::OCMeshAlgo_Circ^ I)
{
  return OCConverter::StandardBooleanToBoolean(((MeshAlgo_DataMapOfIntegerCirc*)nativeHandle)->Bind(K, *((MeshAlgo_Circ*)I->Handle)));
}

 System::Boolean OCMeshAlgo_DataMapOfIntegerCirc::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshAlgo_DataMapOfIntegerCirc*)nativeHandle)->IsBound(K));
}

 System::Boolean OCMeshAlgo_DataMapOfIntegerCirc::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((MeshAlgo_DataMapOfIntegerCirc*)nativeHandle)->UnBind(K));
}

OCMeshAlgo_Circ^ OCMeshAlgo_DataMapOfIntegerCirc::Find(Standard_Integer K)
{
  MeshAlgo_Circ* tmp = new MeshAlgo_Circ();
  *tmp = ((MeshAlgo_DataMapOfIntegerCirc*)nativeHandle)->Find(K);
  return gcnew OCMeshAlgo_Circ(tmp);
}

OCMeshAlgo_Circ^ OCMeshAlgo_DataMapOfIntegerCirc::ChangeFind(Standard_Integer K)
{
  MeshAlgo_Circ* tmp = new MeshAlgo_Circ();
  *tmp = ((MeshAlgo_DataMapOfIntegerCirc*)nativeHandle)->ChangeFind(K);
  return gcnew OCMeshAlgo_Circ(tmp);
}


