// File generated by CPPExt (CPP file)
//

#include "MeshAlgo_Vertex.h"
#include "../Converter.h"
#include "../gp/gp_XY.h"


using namespace OCNaroWrappers;

OCMeshAlgo_Vertex::OCMeshAlgo_Vertex(MeshAlgo_Vertex* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCMeshAlgo_Vertex::OCMeshAlgo_Vertex(Standard_Real x, Standard_Real y, Standard_Integer dom, OCMeshDS_DegreeOfFreedom theMov) 
{}

OCgp_XY^ OCMeshAlgo_Vertex::Coord()
{
  gp_XY* tmp = new gp_XY();
  *tmp = ((MeshAlgo_Vertex*)nativeHandle)->Coord();
  return gcnew OCgp_XY(tmp);
}

 OCMeshDS_DegreeOfFreedom OCMeshAlgo_Vertex::Movability()
{
  return (OCMeshDS_DegreeOfFreedom)(((MeshAlgo_Vertex*)nativeHandle)->Movability());
}

 void OCMeshAlgo_Vertex::SetMovability(OCMeshDS_DegreeOfFreedom mov)
{
  ((MeshAlgo_Vertex*)nativeHandle)->SetMovability((MeshDS_DegreeOfFreedom)mov);
}

 Standard_Integer OCMeshAlgo_Vertex::Domain()
{
  return ((MeshAlgo_Vertex*)nativeHandle)->Domain();
}

 Standard_Integer OCMeshAlgo_Vertex::HashCode(Standard_Integer Upper)
{
  return ((MeshAlgo_Vertex*)nativeHandle)->HashCode(Upper);
}

 System::Boolean OCMeshAlgo_Vertex::IsEqual(OCNaroWrappers::OCMeshAlgo_Vertex^ Other)
{
  return OCConverter::StandardBooleanToBoolean(((MeshAlgo_Vertex*)nativeHandle)->IsEqual(*((MeshAlgo_Vertex*)Other->Handle)));
}


