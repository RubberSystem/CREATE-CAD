// File generated by CPPExt (CPP file)
//

#include "XSControl_TransferWriter.h"
#include "../Converter.h"
#include "XSControl_Controller.h"
#include "../Transfer/Transfer_FinderProcess.h"
#include "../Standard/Standard_Transient.h"
#include "../Interface/Interface_InterfaceModel.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../Interface/Interface_CheckIterator.h"


using namespace OCNaroWrappers;

OCXSControl_TransferWriter::OCXSControl_TransferWriter(Handle(XSControl_TransferWriter)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_XSControl_TransferWriter(*nativeHandle);
}

OCXSControl_TransferWriter::OCXSControl_TransferWriter() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_XSControl_TransferWriter(new XSControl_TransferWriter());
}

OCTransfer_FinderProcess^ OCXSControl_TransferWriter::FinderProcess()
{
  Handle(Transfer_FinderProcess) tmp = (*((Handle_XSControl_TransferWriter*)nativeHandle))->FinderProcess();
  return gcnew OCTransfer_FinderProcess(&tmp);
}

 void OCXSControl_TransferWriter::SetFinderProcess(OCNaroWrappers::OCTransfer_FinderProcess^ FP)
{
  (*((Handle_XSControl_TransferWriter*)nativeHandle))->SetFinderProcess(*((Handle_Transfer_FinderProcess*)FP->Handle));
}

OCXSControl_Controller^ OCXSControl_TransferWriter::Controller()
{
  Handle(XSControl_Controller) tmp = (*((Handle_XSControl_TransferWriter*)nativeHandle))->Controller();
  return gcnew OCXSControl_Controller(&tmp);
}

 void OCXSControl_TransferWriter::SetController(OCNaroWrappers::OCXSControl_Controller^ ctl)
{
  (*((Handle_XSControl_TransferWriter*)nativeHandle))->SetController(*((Handle_XSControl_Controller*)ctl->Handle));
}

 void OCXSControl_TransferWriter::Clear(Standard_Integer mode)
{
  (*((Handle_XSControl_TransferWriter*)nativeHandle))->Clear(mode);
}

 Standard_Integer OCXSControl_TransferWriter::TransferMode()
{
  return (*((Handle_XSControl_TransferWriter*)nativeHandle))->TransferMode();
}

 void OCXSControl_TransferWriter::SetTransferMode(Standard_Integer mode)
{
  (*((Handle_XSControl_TransferWriter*)nativeHandle))->SetTransferMode(mode);
}

 void OCXSControl_TransferWriter::PrintStats(Standard_Integer what, Standard_Integer mode)
{
  (*((Handle_XSControl_TransferWriter*)nativeHandle))->PrintStats(what, mode);
}

 System::Boolean OCXSControl_TransferWriter::RecognizeTransient(OCNaroWrappers::OCStandard_Transient^ obj)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_XSControl_TransferWriter*)nativeHandle))->RecognizeTransient(*((Handle_Standard_Transient*)obj->Handle)));
}

 OCIFSelect_ReturnStatus OCXSControl_TransferWriter::TransferWriteTransient(OCNaroWrappers::OCInterface_InterfaceModel^ model, OCNaroWrappers::OCStandard_Transient^ obj)
{
  return (OCIFSelect_ReturnStatus)((*((Handle_XSControl_TransferWriter*)nativeHandle))->TransferWriteTransient(*((Handle_Interface_InterfaceModel*)model->Handle), *((Handle_Standard_Transient*)obj->Handle)));
}

 System::Boolean OCXSControl_TransferWriter::RecognizeShape(OCNaroWrappers::OCTopoDS_Shape^ shape)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_XSControl_TransferWriter*)nativeHandle))->RecognizeShape(*((TopoDS_Shape*)shape->Handle)));
}

 OCIFSelect_ReturnStatus OCXSControl_TransferWriter::TransferWriteShape(OCNaroWrappers::OCInterface_InterfaceModel^ model, OCNaroWrappers::OCTopoDS_Shape^ shape)
{
  return (OCIFSelect_ReturnStatus)((*((Handle_XSControl_TransferWriter*)nativeHandle))->TransferWriteShape(*((Handle_Interface_InterfaceModel*)model->Handle), *((TopoDS_Shape*)shape->Handle)));
}

OCInterface_CheckIterator^ OCXSControl_TransferWriter::CheckList()
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = (*((Handle_XSControl_TransferWriter*)nativeHandle))->CheckList();
  return gcnew OCInterface_CheckIterator(tmp);
}

OCInterface_CheckIterator^ OCXSControl_TransferWriter::ResultCheckList(OCNaroWrappers::OCInterface_InterfaceModel^ model)
{
  Interface_CheckIterator* tmp = new Interface_CheckIterator();
  *tmp = (*((Handle_XSControl_TransferWriter*)nativeHandle))->ResultCheckList(*((Handle_Interface_InterfaceModel*)model->Handle));
  return gcnew OCInterface_CheckIterator(tmp);
}

 void OCXSControl_TransferWriter::PrintStatsProcess(OCNaroWrappers::OCTransfer_FinderProcess^ TP, Standard_Integer what, Standard_Integer mode)
{
  XSControl_TransferWriter::PrintStatsProcess(*((Handle_Transfer_FinderProcess*)TP->Handle), what, mode);
}


