// File generated by CPPExt (Transient)
//
#ifndef _XSControl_SignTransferStatus_OCWrappers_HeaderFile
#define _XSControl_SignTransferStatus_OCWrappers_HeaderFile

// include the wrapped class
#include <XSControl_SignTransferStatus.hxx>
#include "../Converter.h"

#include "../IFSelect/IFSelect_Signature.h"



namespace OCNaroWrappers
{

ref class OCXSControl_TransferReader;
ref class OCTransfer_TransientProcess;
ref class OCStandard_Transient;
ref class OCInterface_InterfaceModel;


//! This Signatures gives the Transfer Status of an entity, as <br>
//!           recorded in a TransferProcess. It can be : <br>
//!           - Void : not recorded, or recorded as void with no message <br>
//!             (attributes are not taken into account) <br>
//!           - Warning : no result, warning message(s), no fail <br>
//!           - Fail : no result, fail messages (with or without warning) <br>
//!           - Result.. : result, no message (neither warning nor fail) <br>
//!             Result.. i.e. Result:TypeName of the result <br>
//!           - Result../Warning : result, with warning but no fail <br>
//!           - Result../Fail : result, with fail (.e. bad result) <br>
//!           - Fail on run : no result yet recorded, no message, but <br>
//!             an exception occurred while recording the result <br>
//!             (this should not appear and indicates a programming error) <br>
public ref class OCXSControl_SignTransferStatus : OCIFSelect_Signature {

protected:
  // dummy constructor;
  OCXSControl_SignTransferStatus(OCDummy^) : OCIFSelect_Signature((OCDummy^)nullptr) {};

public:

// constructor from native
OCXSControl_SignTransferStatus(Handle(XSControl_SignTransferStatus)* nativeHandle);

// Methods PUBLIC

//! Creates a SignTransferStatus, not initialised <br>
//!           it gives nothing (empty string) <br>
OCXSControl_SignTransferStatus();

//! Creates a SignTransferStatus, which will work on the current <br>
//!           TransientProcess brought by the TransferReader (its MapReader) <br>
OCXSControl_SignTransferStatus(OCNaroWrappers::OCXSControl_TransferReader^ TR);

//! Sets a TransferReader to work <br>
 /*instead*/  void SetReader(OCNaroWrappers::OCXSControl_TransferReader^ TR) ;

//! Sets a precise map to sign entities <br>
//!           This definition oversedes the creation with a TransferReader <br>
 /*instead*/  void SetMap(OCNaroWrappers::OCTransfer_TransientProcess^ TP) ;

//! Returns the TransientProcess used as precised one <br>
//!           Returns a Null Handle for a creation from a TransferReader <br>
//!           without any further setting <br>
 /*instead*/  OCTransfer_TransientProcess^ Map() ;

//! Returns the Reader (if created with a Reader) <br>
//!           Returns a Null Handle if not created with a Reader <br>
 /*instead*/  OCXSControl_TransferReader^ Reader() ;

//! Returns the Signature for a Transient object, as its transfer <br>
//!           status <br>
 /*instead*/  System::String^ Value(OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_InterfaceModel^ model) ;

~OCXSControl_SignTransferStatus()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
