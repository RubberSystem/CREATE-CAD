// File generated by CPPExt (CPP file)
//

#include "XSControl_Writer.h"
#include "../Converter.h"
#include "XSControl_WorkSession.h"
#include "../Interface/Interface_InterfaceModel.h"
#include "../TopoDS/TopoDS_Shape.h"


using namespace OCNaroWrappers;

OCXSControl_Writer::OCXSControl_Writer(XSControl_Writer* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCXSControl_Writer::OCXSControl_Writer() 
{
  nativeHandle = new XSControl_Writer();
}

OCXSControl_Writer::OCXSControl_Writer(System::String^ norm) 
{
  nativeHandle = new XSControl_Writer(OCConverter::StringToStandardCString(norm));
}

OCXSControl_Writer::OCXSControl_Writer(OCNaroWrappers::OCXSControl_WorkSession^ WS, System::Boolean scratch) 
{
  nativeHandle = new XSControl_Writer(*((Handle_XSControl_WorkSession*)WS->Handle), OCConverter::BooleanToStandardBoolean(scratch));
}

 System::Boolean OCXSControl_Writer::SetNorm(System::String^ norm)
{
  return OCConverter::StandardBooleanToBoolean(((XSControl_Writer*)nativeHandle)->SetNorm(OCConverter::StringToStandardCString(norm)));
}

 void OCXSControl_Writer::SetWS(OCNaroWrappers::OCXSControl_WorkSession^ WS, System::Boolean scratch)
{
  ((XSControl_Writer*)nativeHandle)->SetWS(*((Handle_XSControl_WorkSession*)WS->Handle), OCConverter::BooleanToStandardBoolean(scratch));
}

OCXSControl_WorkSession^ OCXSControl_Writer::WS()
{
  Handle(XSControl_WorkSession) tmp = ((XSControl_Writer*)nativeHandle)->WS();
  return gcnew OCXSControl_WorkSession(&tmp);
}

OCInterface_InterfaceModel^ OCXSControl_Writer::Model(System::Boolean newone)
{
  Handle(Interface_InterfaceModel) tmp = ((XSControl_Writer*)nativeHandle)->Model(OCConverter::BooleanToStandardBoolean(newone));
  return gcnew OCInterface_InterfaceModel(&tmp);
}

 OCIFSelect_ReturnStatus OCXSControl_Writer::TransferShape(OCNaroWrappers::OCTopoDS_Shape^ sh, Standard_Integer mode)
{
  return (OCIFSelect_ReturnStatus)(((XSControl_Writer*)nativeHandle)->TransferShape(*((TopoDS_Shape*)sh->Handle), mode));
}

 OCIFSelect_ReturnStatus OCXSControl_Writer::WriteFile(System::String^ filename)
{
  return (OCIFSelect_ReturnStatus)(((XSControl_Writer*)nativeHandle)->WriteFile(OCConverter::StringToStandardCString(filename)));
}

 void OCXSControl_Writer::PrintStatsTransfer(Standard_Integer what, Standard_Integer mode)
{
  ((XSControl_Writer*)nativeHandle)->PrintStatsTransfer(what, mode);
}


