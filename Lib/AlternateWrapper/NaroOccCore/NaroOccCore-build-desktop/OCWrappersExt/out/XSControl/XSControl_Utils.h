// File generated by CPPExt (MPV)
//
#ifndef _XSControl_Utils_OCWrappers_HeaderFile
#define _XSControl_Utils_OCWrappers_HeaderFile

// include native header
#include <XSControl_Utils.hxx>
#include "../Converter.h"


#include "../TopAbs/TopAbs_ShapeEnum.h"


namespace OCNaroWrappers
{

ref class OCStandard_Transient;
ref class OCStandard_Type;
ref class OCTColStd_HSequenceOfTransient;
ref class OCTCollection_HAsciiString;
ref class OCTCollection_AsciiString;
ref class OCTCollection_HExtendedString;
ref class OCTCollection_ExtendedString;
ref class OCTColStd_HSequenceOfHAsciiString;
ref class OCTColStd_HSequenceOfHExtendedString;
ref class OCTopoDS_Shape;
ref class OCTopTools_HSequenceOfShape;
ref class OCTColStd_HSequenceOfInteger;


//! This class provides various useful utility routines, to <br>
//!           facilitate handling of most common data structures : <br>
//!           transients (type, type name ...), <br>
//!           strings (ascii or extended, pointed or handled or ...), <br>
//!           shapes (reading, writing, testing ...), <br>
//!           sequences & arrays (of strings, of transients, of shapes ...), <br>
//!           ... <br>
//! <br>
//!           Also it gives some helps on some data structures from XSTEP, <br>
//!           such as printing on standard trace file, recignizing most <br>
//!           currently used auxiliary types (Binder,Mapper ...) <br>
public ref class OCXSControl_Utils  {

protected:
  XSControl_Utils* nativeHandle;
  OCXSControl_Utils(OCDummy^) {};

public:
  property XSControl_Utils* Handle
  {
    XSControl_Utils* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCXSControl_Utils(XSControl_Utils* nativeHandle);

// Methods PUBLIC

//! the only use of this, is to allow a frontal to get one <br>
//!           distinct "Utils" set per separate engine <br>
OCXSControl_Utils();

//! Just prints a line into the current Trace File. This allows to <br>
//!           better characterise the various trace outputs, as desired. <br>
 /*instead*/  void TraceLine(System::String^ line) ;

//! Just prints a line or a set of lines into the current Trace <br>
//!           File. <lines> can be a HAscii/ExtendedString (produces a print <br>
//!           without ending line) or a HSequence or HArray1 Of .. <br>
//!            (one new line per item) <br>
 /*instead*/  void TraceLines(OCNaroWrappers::OCStandard_Transient^ lines) ;


 /*instead*/  System::Boolean IsKind(OCNaroWrappers::OCStandard_Transient^ item, OCNaroWrappers::OCStandard_Type^ what) ;

//! Returns the name of the dynamic type of an object, i.e. : <br>
//!           If it is a Type, its Name <br>
//!           If it is a object not a type, the Name of its DynamicType <br>
//!           If it is Null, an empty string <br>
//!           If <nopk> is False (D), gives complete name <br>
//!           If <nopk> is True, returns class name without package <br>
 /*instead*/  System::String^ TypeName(OCNaroWrappers::OCStandard_Transient^ item, System::Boolean nopk) ;


 /*instead*/  OCStandard_Transient^ TraValue(OCNaroWrappers::OCStandard_Transient^ list, Standard_Integer num) ;


 /*instead*/  OCTColStd_HSequenceOfTransient^ NewSeqTra() ;


 /*instead*/  void AppendTra(OCNaroWrappers::OCTColStd_HSequenceOfTransient^ seqval, OCNaroWrappers::OCStandard_Transient^ traval) ;


 /*instead*/  System::String^ DateString(Standard_Integer yy, Standard_Integer mm, Standard_Integer dd, Standard_Integer hh, Standard_Integer mn, Standard_Integer ss) ;


 /*instead*/  void DateValues(System::String^ text, Standard_Integer& yy, Standard_Integer& mm, Standard_Integer& dd, Standard_Integer& hh, Standard_Integer& mn, Standard_Integer& ss) ;


 /*instead*/  System::String^ ToCString(OCNaroWrappers::OCTCollection_HAsciiString^ strval) ;


 /*instead*/  System::String^ ToCString(OCNaroWrappers::OCTCollection_AsciiString^ strval) ;


 /*instead*/  OCTCollection_HAsciiString^ ToHString(System::String^ strcon) ;


 /*instead*/  OCTCollection_AsciiString^ ToAString(System::String^ strcon) ;


 /*instead*/  System::String^ ToEString(OCNaroWrappers::OCTCollection_HExtendedString^ strval) ;


 /*instead*/  System::String^ ToEString(OCNaroWrappers::OCTCollection_ExtendedString^ strval) ;


 /*instead*/  OCTCollection_HExtendedString^ ToHString(System::String^ strcon) ;


 /*instead*/  OCTCollection_ExtendedString^ ToXString(System::String^ strcon) ;


 /*instead*/  System::String^ AsciiToExtended(System::String^ str) ;


 /*instead*/  System::Boolean IsAscii(System::String^ str) ;


 /*instead*/  System::String^ ExtendedToAscii(System::String^ str) ;


 /*instead*/  System::String^ CStrValue(OCNaroWrappers::OCStandard_Transient^ list, Standard_Integer num) ;


 /*instead*/  System::String^ EStrValue(OCNaroWrappers::OCStandard_Transient^ list, Standard_Integer num) ;


 /*instead*/  OCTColStd_HSequenceOfHAsciiString^ NewSeqCStr() ;


 /*instead*/  void AppendCStr(OCNaroWrappers::OCTColStd_HSequenceOfHAsciiString^ seqval, System::String^ strval) ;


 /*instead*/  OCTColStd_HSequenceOfHExtendedString^ NewSeqEStr() ;


 /*instead*/  void AppendEStr(OCNaroWrappers::OCTColStd_HSequenceOfHExtendedString^ seqval, System::String^ strval) ;

//! Writes a Shape under the internal BRepTools form <br>
//!           (an internal help utility) <br>
//!           Returns True if writing has succeeded, False else <br>
 /*instead*/  System::Boolean WriteShape(OCNaroWrappers::OCTopoDS_Shape^ shape, System::String^ filename) ;

//! Returns a new empty, undefined Shape, which can then be filled <br>
//!           by ReadShape <br>
 /*instead*/  OCTopoDS_Shape^ NewShape() ;

//! Reads a Shape from the internal BRepTools form and returns it <br>
//!           (an internal help utility) <br>
//!           Returns True if reading has succeeded, False else <br>
 /*instead*/  System::Boolean ReadShape(OCNaroWrappers::OCTopoDS_Shape^ shape, System::String^ filename) ;

//! Returns True if a Shape is Null <br>
 /*instead*/  System::Boolean IsNullShape(OCNaroWrappers::OCTopoDS_Shape^ shape) ;

//! Converts a list of Shapes to a Compound (a kind of Shape) <br>
 /*instead*/  OCTopoDS_Shape^ CompoundFromSeq(OCNaroWrappers::OCTopTools_HSequenceOfShape^ seqval) ;

//! Returns the type of a Shape : true type if <compound> is False <br>
//!           If <compound> is True and <shape> is a Compound, iterates on <br>
//!           its items. If all are of the same type, returns this type. <br>
//!           Else, returns COMPOUND. If it is empty, returns SHAPE <br>
//!           For a Null Shape, returns SHAPE <br>
 /*instead*/  OCTopAbs_ShapeEnum ShapeType(OCNaroWrappers::OCTopoDS_Shape^ shape, System::Boolean compound) ;

//! From a Shape, builds a Compound as follows : <br>
//!           explores it level by level <br>
//!           If <explore> is False, only COMPOUND items. Else, all items <br>
//!           Adds to the result, shapes which comply to <type> <br>
//!           + if <type> is WIRE, considers free edges (and makes wires) <br>
//!           + if <type> is SHELL, considers free faces (and makes shells) <br>
//!           If <compound> is True, gathers items in compounds which <br>
//!           correspond to starting COMPOUND,SOLID or SHELL containers, or <br>
//!           items directly contained in a Compound <br>
 /*instead*/  OCTopoDS_Shape^ SortedCompound(OCNaroWrappers::OCTopoDS_Shape^ shape, OCTopAbs_ShapeEnum type, System::Boolean explore, System::Boolean compound) ;


 /*instead*/  OCTopoDS_Shape^ ShapeValue(OCNaroWrappers::OCTopTools_HSequenceOfShape^ seqv, Standard_Integer num) ;


 /*instead*/  OCTopTools_HSequenceOfShape^ NewSeqShape() ;


 /*instead*/  void AppendShape(OCNaroWrappers::OCTopTools_HSequenceOfShape^ seqv, OCNaroWrappers::OCTopoDS_Shape^ shape) ;

//! Creates a Transient Object from a Shape : it is either a Binder <br>
//!           (used by functions which require a Transient but can process <br>
//!           a Shape, such as viewing functions) or a HShape (according to hs) <br>
//!           Default is a HShape <br>
 /*instead*/  OCStandard_Transient^ ShapeBinder(OCNaroWrappers::OCTopoDS_Shape^ shape, System::Boolean hs) ;

//! From a Transient, returns a Shape. <br>
//!           In fact, recognizes ShapeBinder ShapeMapper and HShape <br>
 /*instead*/  OCTopoDS_Shape^ BinderShape(OCNaroWrappers::OCStandard_Transient^ tr) ;


 /*instead*/  Standard_Integer SeqLength(OCNaroWrappers::OCStandard_Transient^ list) ;


 /*instead*/  OCStandard_Transient^ SeqToArr(OCNaroWrappers::OCStandard_Transient^ seq, Standard_Integer first) ;


 /*instead*/  OCStandard_Transient^ ArrToSeq(OCNaroWrappers::OCStandard_Transient^ arr) ;


 /*instead*/  Standard_Integer SeqIntValue(OCNaroWrappers::OCTColStd_HSequenceOfInteger^ list, Standard_Integer num) ;

~OCXSControl_Utils()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
