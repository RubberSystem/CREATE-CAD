// File generated by CPPExt (Transient)
//
#ifndef _XSControl_TransferWriter_OCWrappers_HeaderFile
#define _XSControl_TransferWriter_OCWrappers_HeaderFile

// include the wrapped class
#include <XSControl_TransferWriter.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../IFSelect/IFSelect_ReturnStatus.h"


namespace OCNaroWrappers
{

ref class OCXSControl_Controller;
ref class OCTransfer_FinderProcess;
ref class OCStandard_Transient;
ref class OCInterface_InterfaceModel;
ref class OCTopoDS_Shape;
ref class OCInterface_CheckIterator;


//! TransferWriter gives help to control transfer to write a file <br>
//!           after having converted data from Cascade/Imagine <br>
//! <br>
//!           It works with a Controller (which itself can work with an <br>
//!           Actor to Write) and a FinderProcess. It records results and <br>
//!           checks <br>
public ref class OCXSControl_TransferWriter : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCXSControl_TransferWriter(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCXSControl_TransferWriter(Handle(XSControl_TransferWriter)* nativeHandle);

// Methods PUBLIC

//! Creates a TransferWriter, empty, ready to run <br>
//!           with an empty FinderProcess (but no controller, etc) <br>
OCXSControl_TransferWriter();

//! Returns the FinderProcess itself <br>
 /*instead*/  OCTransfer_FinderProcess^ FinderProcess() ;

//! Sets a new FinderProcess and forgets the former one <br>
 /*instead*/  void SetFinderProcess(OCNaroWrappers::OCTransfer_FinderProcess^ FP) ;

//! Returns the currently used Controller <br>
 /*instead*/  OCXSControl_Controller^ Controller() ;

//! Sets a new Controller, also sets a new FinderProcess <br>
 /*instead*/  void SetController(OCNaroWrappers::OCXSControl_Controller^ ctl) ;

//! Clears recorded data according a mode <br>
//!           0 clears FinderProcess (results, checks) <br>
//!          -1 create a new FinderProcess <br>
 /*instead*/  void Clear(Standard_Integer mode) ;

//! Returns the current Transfer Mode (an Integer) <br>
//!           It will be interpreted by the Controller to run Transfers <br>
//!           This call form could be later replaced by more specific ones <br>
//!             (parameters suited for each norm / transfer case) <br>
 /*instead*/  Standard_Integer TransferMode() ;

//! Changes the Transfer Mode <br>
 /*instead*/  void SetTransferMode(Standard_Integer mode) ;

//! Prints statistics on current Trace File, according what,mode <br>
//!           See PrintStatsProcess for details <br>
 /*instead*/  void PrintStats(Standard_Integer what, Standard_Integer mode) ;

//! Tells if a transient object (from an application) is a valid <br>
//!           candidate for a transfer to a model <br>
//!           Asks the Controller (RecognizeWriteTransient) <br>
//!           If <obj> is a HShape, calls RecognizeShape <br>
 /*instead*/  System::Boolean RecognizeTransient(OCNaroWrappers::OCStandard_Transient^ obj) ;

//! Transfers a Transient object (from an application) to a model <br>
//!           of current norm, according to the last call to SetTransferMode <br>
//!           Works by calling the Controller <br>
//!           Returns status : =0 if OK, >0 if error during transfer, <0 if <br>
//!               transfer badly initialised <br>
 /*instead*/  OCIFSelect_ReturnStatus TransferWriteTransient(OCNaroWrappers::OCInterface_InterfaceModel^ model, OCNaroWrappers::OCStandard_Transient^ obj) ;

//! Tells if a Shape is valid for a transfer to a model <br>
//!           Asks the Controller (RecognizeWriteShape) <br>
 /*instead*/  System::Boolean RecognizeShape(OCNaroWrappers::OCTopoDS_Shape^ shape) ;

//! Transfers a Shape from CasCade to a model of current norm, <br>
//!           according to the last call to SetTransferMode <br>
//!           Works by calling the Controller <br>
//!           Returns status : =0 if OK, >0 if error during transfer, <0 if <br>
//!               transfer badly initialised <br>
 /*instead*/  OCIFSelect_ReturnStatus TransferWriteShape(OCNaroWrappers::OCInterface_InterfaceModel^ model, OCNaroWrappers::OCTopoDS_Shape^ shape) ;

//! Returns the check-list of last transfer (write), i.e. the <br>
//!           check-list currently recorded in the FinderProcess <br>
 /*instead*/  OCInterface_CheckIterator^ CheckList() ;

//! Returns the check-list of last transfer (write), but tries <br>
//!           to bind to each check, the resulting entity in the model <br>
//!           instead of keeping the original Mapper, whenever known <br>
 /*instead*/  OCInterface_CheckIterator^ ResultCheckList(OCNaroWrappers::OCInterface_InterfaceModel^ model) ;

//! Forecast to print statitics about a FinderProcess <br>
static /*instead*/  void PrintStatsProcess(OCNaroWrappers::OCTransfer_FinderProcess^ TP, Standard_Integer what, Standard_Integer mode) ;

~OCXSControl_TransferWriter()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
