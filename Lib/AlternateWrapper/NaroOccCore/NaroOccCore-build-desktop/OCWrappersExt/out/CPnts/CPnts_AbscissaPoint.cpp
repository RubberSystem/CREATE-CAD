// File generated by CPPExt (CPP file)
//

#include "CPnts_AbscissaPoint.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_Curve.h"
#include "../Adaptor2d/Adaptor2d_Curve2d.h"


using namespace OCNaroWrappers;

OCCPnts_AbscissaPoint::OCCPnts_AbscissaPoint(CPnts_AbscissaPoint* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 Standard_Real OCCPnts_AbscissaPoint::Length(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  return CPnts_AbscissaPoint::Length(*((Adaptor3d_Curve*)C->Handle));
}

 Standard_Real OCCPnts_AbscissaPoint::Length(OCNaroWrappers::OCAdaptor2d_Curve2d^ C)
{
  return CPnts_AbscissaPoint::Length(*((Adaptor2d_Curve2d*)C->Handle));
}

 Standard_Real OCCPnts_AbscissaPoint::Length(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Tol)
{
  return CPnts_AbscissaPoint::Length(*((Adaptor3d_Curve*)C->Handle), Tol);
}

 Standard_Real OCCPnts_AbscissaPoint::Length(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Tol)
{
  return CPnts_AbscissaPoint::Length(*((Adaptor2d_Curve2d*)C->Handle), Tol);
}

 Standard_Real OCCPnts_AbscissaPoint::Length(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U1, Standard_Real U2)
{
  return CPnts_AbscissaPoint::Length(*((Adaptor3d_Curve*)C->Handle), U1, U2);
}

 Standard_Real OCCPnts_AbscissaPoint::Length(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real U1, Standard_Real U2)
{
  return CPnts_AbscissaPoint::Length(*((Adaptor2d_Curve2d*)C->Handle), U1, U2);
}

 Standard_Real OCCPnts_AbscissaPoint::Length(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U1, Standard_Real U2, Standard_Real Tol)
{
  return CPnts_AbscissaPoint::Length(*((Adaptor3d_Curve*)C->Handle), U1, U2, Tol);
}

 Standard_Real OCCPnts_AbscissaPoint::Length(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real U1, Standard_Real U2, Standard_Real Tol)
{
  return CPnts_AbscissaPoint::Length(*((Adaptor2d_Curve2d*)C->Handle), U1, U2, Tol);
}

OCCPnts_AbscissaPoint::OCCPnts_AbscissaPoint() 
{
  nativeHandle = new CPnts_AbscissaPoint();
}

OCCPnts_AbscissaPoint::OCCPnts_AbscissaPoint(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Abscissa, Standard_Real U0, Standard_Real Resolution) 
{
  nativeHandle = new CPnts_AbscissaPoint(*((Adaptor3d_Curve*)C->Handle), Abscissa, U0, Resolution);
}

OCCPnts_AbscissaPoint::OCCPnts_AbscissaPoint(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Abscissa, Standard_Real U0, Standard_Real Resolution) 
{
  nativeHandle = new CPnts_AbscissaPoint(*((Adaptor2d_Curve2d*)C->Handle), Abscissa, U0, Resolution);
}

OCCPnts_AbscissaPoint::OCCPnts_AbscissaPoint(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Abscissa, Standard_Real U0, Standard_Real Ui, Standard_Real Resolution) 
{
  nativeHandle = new CPnts_AbscissaPoint(*((Adaptor3d_Curve*)C->Handle), Abscissa, U0, Ui, Resolution);
}

OCCPnts_AbscissaPoint::OCCPnts_AbscissaPoint(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Abscissa, Standard_Real U0, Standard_Real Ui, Standard_Real Resolution) 
{
  nativeHandle = new CPnts_AbscissaPoint(*((Adaptor2d_Curve2d*)C->Handle), Abscissa, U0, Ui, Resolution);
}

 void OCCPnts_AbscissaPoint::Init(OCNaroWrappers::OCAdaptor3d_Curve^ C)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Init(*((Adaptor3d_Curve*)C->Handle));
}

 void OCCPnts_AbscissaPoint::Init(OCNaroWrappers::OCAdaptor2d_Curve2d^ C)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Init(*((Adaptor2d_Curve2d*)C->Handle));
}

 void OCCPnts_AbscissaPoint::Init(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real Tol)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Init(*((Adaptor3d_Curve*)C->Handle), Tol);
}

 void OCCPnts_AbscissaPoint::Init(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real Tol)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Init(*((Adaptor2d_Curve2d*)C->Handle), Tol);
}

 void OCCPnts_AbscissaPoint::Init(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U1, Standard_Real U2)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Init(*((Adaptor3d_Curve*)C->Handle), U1, U2);
}

 void OCCPnts_AbscissaPoint::Init(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real U1, Standard_Real U2)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Init(*((Adaptor2d_Curve2d*)C->Handle), U1, U2);
}

 void OCCPnts_AbscissaPoint::Init(OCNaroWrappers::OCAdaptor3d_Curve^ C, Standard_Real U1, Standard_Real U2, Standard_Real Tol)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Init(*((Adaptor3d_Curve*)C->Handle), U1, U2, Tol);
}

 void OCCPnts_AbscissaPoint::Init(OCNaroWrappers::OCAdaptor2d_Curve2d^ C, Standard_Real U1, Standard_Real U2, Standard_Real Tol)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Init(*((Adaptor2d_Curve2d*)C->Handle), U1, U2, Tol);
}

 void OCCPnts_AbscissaPoint::Perform(Standard_Real Abscissa, Standard_Real U0, Standard_Real Resolution)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Perform(Abscissa, U0, Resolution);
}

 void OCCPnts_AbscissaPoint::Perform(Standard_Real Abscissa, Standard_Real U0, Standard_Real Ui, Standard_Real Resolution)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->Perform(Abscissa, U0, Ui, Resolution);
}

 void OCCPnts_AbscissaPoint::AdvPerform(Standard_Real Abscissa, Standard_Real U0, Standard_Real Ui, Standard_Real Resolution)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->AdvPerform(Abscissa, U0, Ui, Resolution);
}

 System::Boolean OCCPnts_AbscissaPoint::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((CPnts_AbscissaPoint*)nativeHandle)->IsDone());
}

 Standard_Real OCCPnts_AbscissaPoint::Parameter()
{
  return ((CPnts_AbscissaPoint*)nativeHandle)->Parameter();
}

 void OCCPnts_AbscissaPoint::SetParameter(Standard_Real P)
{
  ((CPnts_AbscissaPoint*)nativeHandle)->SetParameter(P);
}


