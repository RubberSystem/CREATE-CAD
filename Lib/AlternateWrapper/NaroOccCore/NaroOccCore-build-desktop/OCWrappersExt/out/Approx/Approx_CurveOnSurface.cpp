// File generated by CPPExt (CPP file)
//

#include "Approx_CurveOnSurface.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_BSplineCurve.h"
#include "../Geom/Geom_BSplineCurve.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"


using namespace OCNaroWrappers;

OCApprox_CurveOnSurface::OCApprox_CurveOnSurface(Approx_CurveOnSurface* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCApprox_CurveOnSurface::OCApprox_CurveOnSurface(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C2D, OCNaroWrappers::OCAdaptor3d_HSurface^ Surf, Standard_Real First, Standard_Real Last, Standard_Real Tol, OCGeomAbs_Shape Continuity, Standard_Integer MaxDegree, Standard_Integer MaxSegments, System::Boolean Only3d, System::Boolean Only2d) 
{
  nativeHandle = new Approx_CurveOnSurface(*((Handle_Adaptor2d_HCurve2d*)C2D->Handle), *((Handle_Adaptor3d_HSurface*)Surf->Handle), First, Last, Tol, (GeomAbs_Shape)Continuity, MaxDegree, MaxSegments, OCConverter::BooleanToStandardBoolean(Only3d), OCConverter::BooleanToStandardBoolean(Only2d));
}

 System::Boolean OCApprox_CurveOnSurface::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Approx_CurveOnSurface*)nativeHandle)->IsDone());
}

 System::Boolean OCApprox_CurveOnSurface::HasResult()
{
  return OCConverter::StandardBooleanToBoolean(((Approx_CurveOnSurface*)nativeHandle)->HasResult());
}

OCGeom_BSplineCurve^ OCApprox_CurveOnSurface::Curve3d()
{
  Handle(Geom_BSplineCurve) tmp = ((Approx_CurveOnSurface*)nativeHandle)->Curve3d();
  return gcnew OCGeom_BSplineCurve(&tmp);
}

 Standard_Real OCApprox_CurveOnSurface::MaxError3d()
{
  return ((Approx_CurveOnSurface*)nativeHandle)->MaxError3d();
}

OCGeom2d_BSplineCurve^ OCApprox_CurveOnSurface::Curve2d()
{
  Handle(Geom2d_BSplineCurve) tmp = ((Approx_CurveOnSurface*)nativeHandle)->Curve2d();
  return gcnew OCGeom2d_BSplineCurve(&tmp);
}

 Standard_Real OCApprox_CurveOnSurface::MaxError2dU()
{
  return ((Approx_CurveOnSurface*)nativeHandle)->MaxError2dU();
}

 Standard_Real OCApprox_CurveOnSurface::MaxError2dV()
{
  return ((Approx_CurveOnSurface*)nativeHandle)->MaxError2dV();
}


