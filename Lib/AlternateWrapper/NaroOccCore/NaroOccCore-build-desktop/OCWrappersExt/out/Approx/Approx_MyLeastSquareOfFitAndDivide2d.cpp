// File generated by CPPExt (CPP file)
//

#include "Approx_MyLeastSquareOfFitAndDivide2d.h"
#include "../Converter.h"
#include "../AppCont/AppCont_Function2d.h"
#include "../AppCont/AppCont_FunctionTool2d.h"
#include "../AppParCurves/AppParCurves_MultiCurve.h"


using namespace OCNaroWrappers;

OCApprox_MyLeastSquareOfFitAndDivide2d::OCApprox_MyLeastSquareOfFitAndDivide2d(Approx_MyLeastSquareOfFitAndDivide2d* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCApprox_MyLeastSquareOfFitAndDivide2d::OCApprox_MyLeastSquareOfFitAndDivide2d(OCNaroWrappers::OCAppCont_Function2d^ SSP, Standard_Real U0, Standard_Real U1, OCAppParCurves_Constraint FirstCons, OCAppParCurves_Constraint LastCons, Standard_Integer Deg, Standard_Integer NbPoints) 
{
  nativeHandle = new Approx_MyLeastSquareOfFitAndDivide2d(*((AppCont_Function2d*)SSP->Handle), U0, U1, (AppParCurves_Constraint)FirstCons, (AppParCurves_Constraint)LastCons, Deg, NbPoints);
}

 System::Boolean OCApprox_MyLeastSquareOfFitAndDivide2d::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Approx_MyLeastSquareOfFitAndDivide2d*)nativeHandle)->IsDone());
}

OCAppParCurves_MultiCurve^ OCApprox_MyLeastSquareOfFitAndDivide2d::Value()
{
  AppParCurves_MultiCurve* tmp = new AppParCurves_MultiCurve();
  *tmp = ((Approx_MyLeastSquareOfFitAndDivide2d*)nativeHandle)->Value();
  return gcnew OCAppParCurves_MultiCurve(tmp);
}

 void OCApprox_MyLeastSquareOfFitAndDivide2d::Error(Standard_Real& F, Standard_Real& MaxE3d, Standard_Real& MaxE2d)
{
  ((Approx_MyLeastSquareOfFitAndDivide2d*)nativeHandle)->Error(F, MaxE3d, MaxE2d);
}


