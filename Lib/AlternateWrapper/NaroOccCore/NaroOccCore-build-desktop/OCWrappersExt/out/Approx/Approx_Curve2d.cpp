// File generated by CPPExt (CPP file)
//

#include "Approx_Curve2d.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_BSplineCurve.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"


using namespace OCNaroWrappers;

OCApprox_Curve2d::OCApprox_Curve2d(Approx_Curve2d* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCApprox_Curve2d::OCApprox_Curve2d(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C2D, Standard_Real First, Standard_Real Last, Standard_Real TolU, Standard_Real TolV, OCGeomAbs_Shape Continuity, Standard_Integer MaxDegree, Standard_Integer MaxSegments) 
{
  nativeHandle = new Approx_Curve2d(*((Handle_Adaptor2d_HCurve2d*)C2D->Handle), First, Last, TolU, TolV, (GeomAbs_Shape)Continuity, MaxDegree, MaxSegments);
}

 System::Boolean OCApprox_Curve2d::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Approx_Curve2d*)nativeHandle)->IsDone());
}

 System::Boolean OCApprox_Curve2d::HasResult()
{
  return OCConverter::StandardBooleanToBoolean(((Approx_Curve2d*)nativeHandle)->HasResult());
}

OCGeom2d_BSplineCurve^ OCApprox_Curve2d::Curve()
{
  Handle(Geom2d_BSplineCurve) tmp = ((Approx_Curve2d*)nativeHandle)->Curve();
  return gcnew OCGeom2d_BSplineCurve(&tmp);
}

 Standard_Real OCApprox_Curve2d::MaxError2dU()
{
  return ((Approx_Curve2d*)nativeHandle)->MaxError2dU();
}

 Standard_Real OCApprox_Curve2d::MaxError2dV()
{
  return ((Approx_Curve2d*)nativeHandle)->MaxError2dV();
}


