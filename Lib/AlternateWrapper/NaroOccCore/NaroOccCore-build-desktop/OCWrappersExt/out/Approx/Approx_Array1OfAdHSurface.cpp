// File generated by CPPExt (CPP file)
//

#include "Approx_Array1OfAdHSurface.h"
#include "../Converter.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"


using namespace OCNaroWrappers;

OCApprox_Array1OfAdHSurface::OCApprox_Array1OfAdHSurface(Approx_Array1OfAdHSurface* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCApprox_Array1OfAdHSurface::OCApprox_Array1OfAdHSurface(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Approx_Array1OfAdHSurface(Low, Up);
}

OCApprox_Array1OfAdHSurface::OCApprox_Array1OfAdHSurface(OCNaroWrappers::OCAdaptor3d_HSurface^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new Approx_Array1OfAdHSurface(*((Handle_Adaptor3d_HSurface*)Item->Handle), Low, Up);
}

 void OCApprox_Array1OfAdHSurface::Init(OCNaroWrappers::OCAdaptor3d_HSurface^ V)
{
  ((Approx_Array1OfAdHSurface*)nativeHandle)->Init(*((Handle_Adaptor3d_HSurface*)V->Handle));
}

 System::Boolean OCApprox_Array1OfAdHSurface::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((Approx_Array1OfAdHSurface*)nativeHandle)->IsAllocated());
}

OCApprox_Array1OfAdHSurface^ OCApprox_Array1OfAdHSurface::Assign(OCNaroWrappers::OCApprox_Array1OfAdHSurface^ Other)
{
  Approx_Array1OfAdHSurface* tmp = new Approx_Array1OfAdHSurface(0, 0);
  *tmp = ((Approx_Array1OfAdHSurface*)nativeHandle)->Assign(*((Approx_Array1OfAdHSurface*)Other->Handle));
  return gcnew OCApprox_Array1OfAdHSurface(tmp);
}

 Standard_Integer OCApprox_Array1OfAdHSurface::Length()
{
  return ((Approx_Array1OfAdHSurface*)nativeHandle)->Length();
}

 Standard_Integer OCApprox_Array1OfAdHSurface::Lower()
{
  return ((Approx_Array1OfAdHSurface*)nativeHandle)->Lower();
}

 Standard_Integer OCApprox_Array1OfAdHSurface::Upper()
{
  return ((Approx_Array1OfAdHSurface*)nativeHandle)->Upper();
}

 void OCApprox_Array1OfAdHSurface::SetValue(Standard_Integer Index, OCNaroWrappers::OCAdaptor3d_HSurface^ Value)
{
  ((Approx_Array1OfAdHSurface*)nativeHandle)->SetValue(Index, *((Handle_Adaptor3d_HSurface*)Value->Handle));
}

OCAdaptor3d_HSurface^ OCApprox_Array1OfAdHSurface::Value(Standard_Integer Index)
{
  Handle(Adaptor3d_HSurface) tmp = ((Approx_Array1OfAdHSurface*)nativeHandle)->Value(Index);
  return gcnew OCAdaptor3d_HSurface(&tmp);
}

OCAdaptor3d_HSurface^ OCApprox_Array1OfAdHSurface::ChangeValue(Standard_Integer Index)
{
  Handle(Adaptor3d_HSurface) tmp = ((Approx_Array1OfAdHSurface*)nativeHandle)->ChangeValue(Index);
  return gcnew OCAdaptor3d_HSurface(&tmp);
}


