// File generated by CPPExt (CPP file)
//

#include "Approx_MyLeastSquareOfFitAndDivide.h"
#include "../Converter.h"
#include "../AppCont/AppCont_Function.h"
#include "../AppCont/AppCont_FunctionTool.h"
#include "../AppParCurves/AppParCurves_MultiCurve.h"


using namespace OCNaroWrappers;

OCApprox_MyLeastSquareOfFitAndDivide::OCApprox_MyLeastSquareOfFitAndDivide(Approx_MyLeastSquareOfFitAndDivide* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCApprox_MyLeastSquareOfFitAndDivide::OCApprox_MyLeastSquareOfFitAndDivide(OCNaroWrappers::OCAppCont_Function^ SSP, Standard_Real U0, Standard_Real U1, OCAppParCurves_Constraint FirstCons, OCAppParCurves_Constraint LastCons, Standard_Integer Deg, Standard_Integer NbPoints) 
{
  nativeHandle = new Approx_MyLeastSquareOfFitAndDivide(*((AppCont_Function*)SSP->Handle), U0, U1, (AppParCurves_Constraint)FirstCons, (AppParCurves_Constraint)LastCons, Deg, NbPoints);
}

 System::Boolean OCApprox_MyLeastSquareOfFitAndDivide::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((Approx_MyLeastSquareOfFitAndDivide*)nativeHandle)->IsDone());
}

OCAppParCurves_MultiCurve^ OCApprox_MyLeastSquareOfFitAndDivide::Value()
{
  AppParCurves_MultiCurve* tmp = new AppParCurves_MultiCurve();
  *tmp = ((Approx_MyLeastSquareOfFitAndDivide*)nativeHandle)->Value();
  return gcnew OCAppParCurves_MultiCurve(tmp);
}

 void OCApprox_MyLeastSquareOfFitAndDivide::Error(Standard_Real& F, Standard_Real& MaxE3d, Standard_Real& MaxE2d)
{
  ((Approx_MyLeastSquareOfFitAndDivide*)nativeHandle)->Error(F, MaxE3d, MaxE2d);
}


