// File generated by CPPExt (MPV)
//
#ifndef _Approx_SameParameter_OCWrappers_HeaderFile
#define _Approx_SameParameter_OCWrappers_HeaderFile

// include native header
#include <Approx_SameParameter.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCGeom2d_BSplineCurve;
ref class OCAdaptor2d_HCurve2d;
ref class OCAdaptor3d_HCurve;
ref class OCAdaptor3d_HSurface;
ref class OCGeom_Curve;
ref class OCGeom2d_Curve;
ref class OCGeom_Surface;


//! Approximation of a  PCurve  on a surface to  make  its <br>
//!          parameter be the same that the parameter of a given 3d <br>
//!          reference curve. <br>
public ref class OCApprox_SameParameter  {

protected:
  Approx_SameParameter* nativeHandle;
  OCApprox_SameParameter(OCDummy^) {};

public:
  property Approx_SameParameter* Handle
  {
    Approx_SameParameter* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCApprox_SameParameter(Approx_SameParameter* nativeHandle);

// Methods PUBLIC


//!  Warning: the C3D and C2D must have the same parametric domain. <br>
//! <br>
OCApprox_SameParameter(OCNaroWrappers::OCGeom_Curve^ C3D, OCNaroWrappers::OCGeom2d_Curve^ C2D, OCNaroWrappers::OCGeom_Surface^ S, Standard_Real Tol);


OCApprox_SameParameter(OCNaroWrappers::OCAdaptor3d_HCurve^ C3D, OCNaroWrappers::OCGeom2d_Curve^ C2D, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol);


//!  Warning: the C3D and C2D must have the same parametric domain. <br>
//! <br>
OCApprox_SameParameter(OCNaroWrappers::OCAdaptor3d_HCurve^ C3D, OCNaroWrappers::OCAdaptor2d_HCurve2d^ C2D, OCNaroWrappers::OCAdaptor3d_HSurface^ S, Standard_Real Tol);


 /*instead*/  System::Boolean IsDone() ;


 /*instead*/  Standard_Real TolReached() ;

//! Tells whether the original data  had already the  same <br>
//!          parameter up to  the tolerance :  in that case nothing <br>
//!          is done. <br>
 /*instead*/  System::Boolean IsSameParameter() ;

//! Returns the 2D  curve that has  the same parameter  as <br>
//!          the  3D curve once evaluated on  the surface up to the <br>
//!          specified tolerance <br>
 /*instead*/  OCGeom2d_BSplineCurve^ Curve2d() ;

~OCApprox_SameParameter()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
