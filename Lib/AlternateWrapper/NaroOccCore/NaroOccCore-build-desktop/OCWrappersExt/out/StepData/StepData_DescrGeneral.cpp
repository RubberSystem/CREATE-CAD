// File generated by CPPExt (CPP file)
//

#include "StepData_DescrGeneral.h"
#include "../Converter.h"
#include "StepData_Protocol.h"
#include "../Standard/Standard_Transient.h"
#include "../Interface/Interface_EntityIterator.h"
#include "../Interface/Interface_ShareTool.h"
#include "../Interface/Interface_Check.h"
#include "../Interface/Interface_CopyTool.h"


using namespace OCNaroWrappers;

OCStepData_DescrGeneral::OCStepData_DescrGeneral(Handle(StepData_DescrGeneral)* nativeHandle) : OCStepData_GeneralModule((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepData_DescrGeneral(*nativeHandle);
}

OCStepData_DescrGeneral::OCStepData_DescrGeneral(OCNaroWrappers::OCStepData_Protocol^ proto) : OCStepData_GeneralModule((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepData_DescrGeneral(new StepData_DescrGeneral(*((Handle_StepData_Protocol*)proto->Handle)));
}

 void OCStepData_DescrGeneral::FillSharedCase(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_EntityIterator^ iter)
{
  (*((Handle_StepData_DescrGeneral*)nativeHandle))->FillSharedCase(CN, *((Handle_Standard_Transient*)ent->Handle), *((Interface_EntityIterator*)iter->Handle));
}

 void OCStepData_DescrGeneral::CheckCase(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent, OCNaroWrappers::OCInterface_ShareTool^ shares, OCNaroWrappers::OCInterface_Check^ ach)
{
  (*((Handle_StepData_DescrGeneral*)nativeHandle))->CheckCase(CN, *((Handle_Standard_Transient*)ent->Handle), *((Interface_ShareTool*)shares->Handle), *((Handle_Interface_Check*)ach->Handle));
}

 void OCStepData_DescrGeneral::CopyCase(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ entfrom, OCNaroWrappers::OCStandard_Transient^ entto, OCNaroWrappers::OCInterface_CopyTool^ TC)
{
  (*((Handle_StepData_DescrGeneral*)nativeHandle))->CopyCase(CN, *((Handle_Standard_Transient*)entfrom->Handle), *((Handle_Standard_Transient*)entto->Handle), *((Interface_CopyTool*)TC->Handle));
}

 System::Boolean OCStepData_DescrGeneral::NewVoid(Standard_Integer CN, OCNaroWrappers::OCStandard_Transient^ ent)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepData_DescrGeneral*)nativeHandle))->NewVoid(CN, *((Handle_Standard_Transient*)ent->Handle)));
}


