// File generated by CPPExt (Transient)
//
#ifndef _StepData_FileProtocol_OCWrappers_HeaderFile
#define _StepData_FileProtocol_OCWrappers_HeaderFile

// include the wrapped class
#include <StepData_FileProtocol.hxx>
#include "../Converter.h"

#include "StepData_Protocol.h"

#include "../TColStd/TColStd_SequenceOfTransient.h"


namespace OCNaroWrappers
{

ref class OCStepData_Protocol;
ref class OCInterface_Protocol;
ref class OCStandard_Type;
ref class OCInterface_Graph;
ref class OCInterface_Check;


//! A FileProtocol is defined as the addition of several already <br>
//!           existing Protocols. It corresponds to the definition of a <br>
//!           SchemaName with several Names, each one being attached to a <br>
//!           specific Protocol. Thus, a File defined with a compound Schema <br>
//!           is processed as any other one, once built the equivalent <br>
//!           compound Protocol, a FileProtocol <br>
public ref class OCStepData_FileProtocol : OCStepData_Protocol {

protected:
  // dummy constructor;
  OCStepData_FileProtocol(OCDummy^) : OCStepData_Protocol((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepData_FileProtocol(Handle(StepData_FileProtocol)* nativeHandle);

// Methods PUBLIC

//! Creates an empty FileProtocol <br>
OCStepData_FileProtocol();

//! Adds a Protocol to the definition list of the FileProtocol <br>
//!           But ensures that each class of Protocol is present only once <br>
//!           in this list <br>
 /*instead*/  void Add(OCNaroWrappers::OCStepData_Protocol^ protocol) ;

//! Gives the count of Protocols used as Resource (can be zero) <br>
//!           i.e. the count of Protocol recorded by calling the method Add <br>
virtual /*instead*/  Standard_Integer NbResources() ;

//! Returns a Resource, given a rank. Here, rank of calling Add <br>
virtual /*instead*/  OCInterface_Protocol^ Resource(Standard_Integer num) ;

//! Returns a Case Number, specific of each recognized Type <br>
//!           Here, NO Type at all is recognized properly : all Types are <br>
//!           recognized by the resources <br>
virtual /*instead*/  Standard_Integer TypeNumber(OCNaroWrappers::OCStandard_Type^ atype) ;

//! Calls GlobalCheck for each of its recorded ressources <br>
virtual /*instead*/  System::Boolean GlobalCheck(OCNaroWrappers::OCInterface_Graph^ G, OCNaroWrappers::OCInterface_Check^ ach) override;

//! Returns the Schema Name attached to each class of Protocol <br>
//!           To be redefined by each sub-class <br>
//!           Here, SchemaName returns "" (empty String) <br>
//! was C++ : return const <br>
virtual /*instead*/  System::String^ SchemaName() override;

~OCStepData_FileProtocol()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
