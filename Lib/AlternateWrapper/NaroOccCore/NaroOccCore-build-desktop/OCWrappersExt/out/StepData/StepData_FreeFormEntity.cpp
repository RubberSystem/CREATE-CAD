// File generated by CPPExt (CPP file)
//

#include "StepData_FreeFormEntity.h"
#include "../Converter.h"
#include "StepData_HArray1OfField.h"
#include "../TColStd/TColStd_HSequenceOfAsciiString.h"
#include "StepData_Field.h"


using namespace OCNaroWrappers;

OCStepData_FreeFormEntity::OCStepData_FreeFormEntity(Handle(StepData_FreeFormEntity)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepData_FreeFormEntity(*nativeHandle);
}

OCStepData_FreeFormEntity::OCStepData_FreeFormEntity() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepData_FreeFormEntity(new StepData_FreeFormEntity());
}

 void OCStepData_FreeFormEntity::SetStepType(System::String^ typenam)
{
  (*((Handle_StepData_FreeFormEntity*)nativeHandle))->SetStepType(OCConverter::StringToStandardCString(typenam));
}

 System::String^ OCStepData_FreeFormEntity::StepType()
{
  return OCConverter::StandardCStringToString((*((Handle_StepData_FreeFormEntity*)nativeHandle))->StepType());
}

 void OCStepData_FreeFormEntity::SetNext(OCNaroWrappers::OCStepData_FreeFormEntity^ next, System::Boolean last)
{
  (*((Handle_StepData_FreeFormEntity*)nativeHandle))->SetNext(*((Handle_StepData_FreeFormEntity*)next->Handle), OCConverter::BooleanToStandardBoolean(last));
}

OCStepData_FreeFormEntity^ OCStepData_FreeFormEntity::Next()
{
  Handle(StepData_FreeFormEntity) tmp = (*((Handle_StepData_FreeFormEntity*)nativeHandle))->Next();
  return gcnew OCStepData_FreeFormEntity(&tmp);
}

 System::Boolean OCStepData_FreeFormEntity::IsComplex()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepData_FreeFormEntity*)nativeHandle))->IsComplex());
}

OCStepData_FreeFormEntity^ OCStepData_FreeFormEntity::Typed(System::String^ typenam)
{
  Handle(StepData_FreeFormEntity) tmp = (*((Handle_StepData_FreeFormEntity*)nativeHandle))->Typed(OCConverter::StringToStandardCString(typenam));
  return gcnew OCStepData_FreeFormEntity(&tmp);
}

OCTColStd_HSequenceOfAsciiString^ OCStepData_FreeFormEntity::TypeList()
{
  Handle(TColStd_HSequenceOfAsciiString) tmp = (*((Handle_StepData_FreeFormEntity*)nativeHandle))->TypeList();
  return gcnew OCTColStd_HSequenceOfAsciiString(&tmp);
}

 System::Boolean OCStepData_FreeFormEntity::Reorder(OCNaroWrappers::OCStepData_FreeFormEntity^ ent)
{
  return OCConverter::StandardBooleanToBoolean(StepData_FreeFormEntity::Reorder(*((Handle_StepData_FreeFormEntity*)ent->Handle)));
}

 void OCStepData_FreeFormEntity::SetNbFields(Standard_Integer nb)
{
  (*((Handle_StepData_FreeFormEntity*)nativeHandle))->SetNbFields(nb);
}

 Standard_Integer OCStepData_FreeFormEntity::NbFields()
{
  return (*((Handle_StepData_FreeFormEntity*)nativeHandle))->NbFields();
}

OCStepData_Field^ OCStepData_FreeFormEntity::Field(Standard_Integer num)
{
  StepData_Field* tmp = new StepData_Field();
  *tmp = (*((Handle_StepData_FreeFormEntity*)nativeHandle))->Field(num);
  return gcnew OCStepData_Field(tmp);
}

OCStepData_Field^ OCStepData_FreeFormEntity::CField(Standard_Integer num)
{
  StepData_Field* tmp = new StepData_Field();
  *tmp = (*((Handle_StepData_FreeFormEntity*)nativeHandle))->CField(num);
  return gcnew OCStepData_Field(tmp);
}


