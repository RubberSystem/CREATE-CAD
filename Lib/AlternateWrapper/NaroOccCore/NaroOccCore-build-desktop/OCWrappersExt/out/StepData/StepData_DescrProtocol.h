// File generated by CPPExt (Transient)
//
#ifndef _StepData_DescrProtocol_OCWrappers_HeaderFile
#define _StepData_DescrProtocol_OCWrappers_HeaderFile

// include the wrapped class
#include <StepData_DescrProtocol.hxx>
#include "../Converter.h"

#include "StepData_FileProtocol.h"

#include "../TCollection/TCollection_AsciiString.h"


namespace OCNaroWrappers
{



//! A DescrProtocol is a protocol dynamically (at execution time) <br>
//!           defined with : <br>
//!           - a list of resources (inherits FileProtocol) <br>
//!           - a list of entity descriptions <br>
//!           i.e. it can be defined with only C++ writing to initialize it <br>
//!           Its initialization must : <br>
//!           - set its schema name <br>
//!           - define its resources (which can also be other DescrProtocol) <br>
//!           - define its entity descriptions <br>
//!           - record it in the system by calling RecordLib <br>
public ref class OCStepData_DescrProtocol : OCStepData_FileProtocol {

protected:
  // dummy constructor;
  OCStepData_DescrProtocol(OCDummy^) : OCStepData_FileProtocol((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepData_DescrProtocol(Handle(StepData_DescrProtocol)* nativeHandle);

// Methods PUBLIC


OCStepData_DescrProtocol();

//! Defines a specific Schema Name for this Protocol <br>
 /*instead*/  void SetSchemaName(System::String^ name) ;

//! Records this Protocol in the service libraries, with a <br>
//!           DescrGeneral and a DescrReadWrite <br>
//!           Does nothing if the Protocol brings no proper description <br>
 /*instead*/  void LibRecord() ;

//! Returns the Schema Name attached to each class of Protocol <br>
//!           here, returns the SchemaName set by SetSchemaName <br>
//! was C++ : return const <br>
virtual /*instead*/  System::String^ SchemaName() override;

~OCStepData_DescrProtocol()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
