// File generated by CPPExt (Transient)
//
#ifndef _StepData_SelectMember_OCWrappers_HeaderFile
#define _StepData_SelectMember_OCWrappers_HeaderFile

// include the wrapped class
#include <StepData_SelectMember.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "../Interface/Interface_ParamType.h"
#include "StepData_Logical.h"


namespace OCNaroWrappers
{



//! The general form for a Select Member. A Select Member can, <br>
//!           either define a value of a basic type (such as an integer) <br>
//!           with an additional information : a name or list of names <br>
//!           which precise the meaning of this value <br>
//!           or be an alternate value in a select, which also accepts an <br>
//!           entity (in this case, the name is not mandatory) <br>
//! <br>
//!           Several sub-types of SelectMember are defined for integer and <br>
//!           real value, plus an "universal" one for any, and one more to <br>
//!           describe a select with several names <br>
//! <br>
//!           It is also possible to define a specific subtype by redefining <br>
//!           virtual method, then give a better control <br>
//! <br>
//!           Remark : this class itself could be deferred, because at least <br>
//!           one of its virtual methods must be redefined to be usable <br>
public ref class OCStepData_SelectMember : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCStepData_SelectMember(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepData_SelectMember(Handle(StepData_SelectMember)* nativeHandle);

// Methods PUBLIC


OCStepData_SelectMember();

//! Tells if a SelectMember has a name. Default is False <br>
virtual /*instead*/  System::Boolean HasName() ;

//! Returns the name of a SelectMember. Default is empty <br>
virtual /*instead*/  System::String^ Name() ;

//! Sets the name of a SelectMember, returns True if done, False <br>
//!           if no name is allowed <br>
//!           Default does nothing and returns False <br>
virtual /*instead*/  System::Boolean SetName(System::String^ name) ;

//! Tells if the name of a SelectMember matches a given one <br>
//!           By default, compares the strings, can be redefined (optimised) <br>
virtual /*instead*/  System::Boolean Matches(System::String^ name) ;


virtual /*instead*/  Standard_Integer Kind() ;


virtual /*instead*/  void SetKind(Standard_Integer kind) ;

//! Returns the Kind of the SelectMember, under the form of an <br>
//!           enum ParamType <br>
 /*instead*/  OCInterface_ParamType ParamType() ;

//! This internal method gives access to a value implemented by an <br>
//!           Integer (to read it) <br>
virtual /*instead*/  Standard_Integer Int() ;

//! This internal method gives access to a value implemented by an <br>
//!           Integer (to set it) <br>
virtual /*instead*/  void SetInt(Standard_Integer val) ;

//! Gets the value as an Integer <br>
 /*instead*/  Standard_Integer Integer() ;


 /*instead*/  void SetInteger(Standard_Integer val) ;


 /*instead*/  System::Boolean Boolean() ;


 /*instead*/  void SetBoolean(System::Boolean val) ;


 /*instead*/  OCStepData_Logical Logical() ;


 /*instead*/  void SetLogical(OCStepData_Logical val) ;


virtual /*instead*/  Standard_Real Real() ;


virtual /*instead*/  void SetReal(Standard_Real val) ;


virtual /*instead*/  System::String^ String() ;


virtual /*instead*/  void SetString(System::String^ val) ;


 /*instead*/  Standard_Integer Enum() ;


virtual /*instead*/  System::String^ EnumText() ;


 /*instead*/  void SetEnum(Standard_Integer val, System::String^ text) ;


virtual /*instead*/  void SetEnumText(Standard_Integer val, System::String^ text) ;

~OCStepData_SelectMember()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
