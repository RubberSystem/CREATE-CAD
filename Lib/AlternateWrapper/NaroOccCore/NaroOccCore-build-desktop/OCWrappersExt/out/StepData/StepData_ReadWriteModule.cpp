// File generated by CPPExt (CPP file)
//

#include "StepData_ReadWriteModule.h"
#include "../Converter.h"
#include "../Interface/Interface_FileReaderData.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "../TColStd/TColStd_SequenceOfAsciiString.h"
#include "../Interface/Interface_Check.h"
#include "../Standard/Standard_Transient.h"
#include "StepData_StepReaderData.h"
#include "StepData_StepWriter.h"


using namespace OCNaroWrappers;

OCStepData_ReadWriteModule::OCStepData_ReadWriteModule(Handle(StepData_ReadWriteModule)* nativeHandle) : OCInterface_ReaderModule((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepData_ReadWriteModule(*nativeHandle);
}

 Standard_Integer OCStepData_ReadWriteModule::CaseNum(OCNaroWrappers::OCInterface_FileReaderData^ data, Standard_Integer num)
{
  return (*((Handle_StepData_ReadWriteModule*)nativeHandle))->CaseNum(*((Handle_Interface_FileReaderData*)data->Handle), num);
}

 Standard_Integer OCStepData_ReadWriteModule::CaseStep(OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ types)
{
  return (*((Handle_StepData_ReadWriteModule*)nativeHandle))->CaseStep(*((TColStd_SequenceOfAsciiString*)types->Handle));
}

 System::Boolean OCStepData_ReadWriteModule::IsComplex(Standard_Integer CN)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepData_ReadWriteModule*)nativeHandle))->IsComplex(CN));
}

OCTCollection_AsciiString^ OCStepData_ReadWriteModule::ShortType(Standard_Integer CN)
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = (*((Handle_StepData_ReadWriteModule*)nativeHandle))->ShortType(CN);
  return gcnew OCTCollection_AsciiString(tmp);
}

 System::Boolean OCStepData_ReadWriteModule::ComplexType(Standard_Integer CN, OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ types)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepData_ReadWriteModule*)nativeHandle))->ComplexType(CN, *((TColStd_SequenceOfAsciiString*)types->Handle)));
}

 void OCStepData_ReadWriteModule::Read(Standard_Integer CN, OCNaroWrappers::OCInterface_FileReaderData^ data, Standard_Integer num, OCNaroWrappers::OCInterface_Check^ ach, OCNaroWrappers::OCStandard_Transient^ ent)
{
  (*((Handle_StepData_ReadWriteModule*)nativeHandle))->Read(CN, *((Handle_Interface_FileReaderData*)data->Handle), num, *((Handle_Interface_Check*)ach->Handle), *((Handle_Standard_Transient*)ent->Handle));
}


