// File generated by CPPExt (CPP file)
//

#include "StepData_ECDescr.h"
#include "../Converter.h"
#include "StepData_ESDescr.h"
#include "../TColStd/TColStd_HSequenceOfAsciiString.h"
#include "StepData_Described.h"


using namespace OCNaroWrappers;

OCStepData_ECDescr::OCStepData_ECDescr(Handle(StepData_ECDescr)* nativeHandle) : OCStepData_EDescr((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepData_ECDescr(*nativeHandle);
}

OCStepData_ECDescr::OCStepData_ECDescr() : OCStepData_EDescr((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepData_ECDescr(new StepData_ECDescr());
}

 void OCStepData_ECDescr::Add(OCNaroWrappers::OCStepData_ESDescr^ member)
{
  (*((Handle_StepData_ECDescr*)nativeHandle))->Add(*((Handle_StepData_ESDescr*)member->Handle));
}

 Standard_Integer OCStepData_ECDescr::NbMembers()
{
  return (*((Handle_StepData_ECDescr*)nativeHandle))->NbMembers();
}

OCStepData_ESDescr^ OCStepData_ECDescr::Member(Standard_Integer num)
{
  Handle(StepData_ESDescr) tmp = (*((Handle_StepData_ECDescr*)nativeHandle))->Member(num);
  return gcnew OCStepData_ESDescr(&tmp);
}

OCTColStd_HSequenceOfAsciiString^ OCStepData_ECDescr::TypeList()
{
  Handle(TColStd_HSequenceOfAsciiString) tmp = (*((Handle_StepData_ECDescr*)nativeHandle))->TypeList();
  return gcnew OCTColStd_HSequenceOfAsciiString(&tmp);
}

 System::Boolean OCStepData_ECDescr::Matches(System::String^ steptype)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepData_ECDescr*)nativeHandle))->Matches(OCConverter::StringToStandardCString(steptype)));
}

 System::Boolean OCStepData_ECDescr::IsComplex()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepData_ECDescr*)nativeHandle))->IsComplex());
}

OCStepData_Described^ OCStepData_ECDescr::NewEntity()
{
  Handle(StepData_Described) tmp = (*((Handle_StepData_ECDescr*)nativeHandle))->NewEntity();
  return gcnew OCStepData_Described(&tmp);
}


