// File generated by CPPExt (Transient)
//
#ifndef _StepData_Simple_OCWrappers_HeaderFile
#define _StepData_Simple_OCWrappers_HeaderFile

// include the wrapped class
#include <StepData_Simple.hxx>
#include "../Converter.h"

#include "StepData_Described.h"

#include "StepData_FieldListN.h"


namespace OCNaroWrappers
{

ref class OCStepData_ESDescr;
ref class OCStepData_Field;
ref class OCStepData_FieldListN;
ref class OCInterface_Check;
ref class OCInterface_EntityIterator;


//! A Simple Entity is defined by a type (which can heve super <br>
//!           types) and a list of parameters <br>
public ref class OCStepData_Simple : OCStepData_Described {

protected:
  // dummy constructor;
  OCStepData_Simple(OCDummy^) : OCStepData_Described((OCDummy^)nullptr) {};

public:

// constructor from native
OCStepData_Simple(Handle(StepData_Simple)* nativeHandle);

// Methods PUBLIC

//! Creates a Simple Entity <br>
OCStepData_Simple(OCNaroWrappers::OCStepData_ESDescr^ descr);

//! Returns description, as for simple <br>
 /*instead*/  OCStepData_ESDescr^ ESDescr() ;

//! Returns the recorded StepType (TypeName of its ESDescr) <br>
 /*instead*/  System::String^ StepType() ;

//! Returns False <br>
 /*instead*/  System::Boolean IsComplex() ;

//! Tells if a step type is matched by <me> <br>
//!           For a Simple Entity : own type or super type <br>
//!           For a Complex Entity : one of the members <br>
 /*instead*/  System::Boolean Matches(System::String^ steptype) ;

//! Returns a Simple Entity which matches with a Type in <me> : <br>
//!           For a Simple Entity : me if it matches, else a null handle <br>
//!           For a Complex Entity : the member which matches, else null <br>
 /*instead*/  OCStepData_Simple^ As(System::String^ steptype) ;

//! Tells if a Field brings a given name <br>
 /*instead*/  System::Boolean HasField(System::String^ name) ;

//! Returns a Field from its name; read-only <br>
 /*instead*/  OCStepData_Field^ Field(System::String^ name) ;

//! Returns a Field from its name; read or write <br>
 /*instead*/  OCStepData_Field^ CField(System::String^ name) ;

//! Returns the count of fields <br>
 /*instead*/  Standard_Integer NbFields() ;

//! Returns a field from its rank, for read-only use <br>
 /*instead*/  OCStepData_Field^ FieldNum(Standard_Integer num) ;

//! Returns a field from its rank, in order to modify it <br>
 /*instead*/  OCStepData_Field^ CFieldNum(Standard_Integer num) ;

//! Returns the entire field list, read-only <br>
 /*instead*/  OCStepData_FieldListN^ Fields() ;

//! Returns the entire field list, read or write <br>
 /*instead*/  OCStepData_FieldListN^ CFields() ;

//! Fills a Check by using its Description <br>
 /*instead*/  void Check(OCNaroWrappers::OCInterface_Check^ ach) ;

//! Fills an EntityIterator with entities shared by <me> <br>
 /*instead*/  void Shared(OCNaroWrappers::OCInterface_EntityIterator^ list) ;

~OCStepData_Simple()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
