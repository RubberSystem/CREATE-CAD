// File generated by CPPExt (CPP file)
//

#include "StepData_SelectType.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "../Standard/Standard_Type.h"
#include "StepData_PDescr.h"
#include "StepData_SelectMember.h"


using namespace OCNaroWrappers;

OCStepData_SelectType::OCStepData_SelectType(StepData_SelectType* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 System::Boolean OCStepData_SelectType::Matches(OCNaroWrappers::OCStandard_Transient^ ent)
{
  return OCConverter::StandardBooleanToBoolean(((StepData_SelectType*)nativeHandle)->Matches(*((Handle_Standard_Transient*)ent->Handle)));
}

 void OCStepData_SelectType::SetValue(OCNaroWrappers::OCStandard_Transient^ ent)
{
  ((StepData_SelectType*)nativeHandle)->SetValue(*((Handle_Standard_Transient*)ent->Handle));
}

 void OCStepData_SelectType::Nullify()
{
  ((StepData_SelectType*)nativeHandle)->Nullify();
}

OCStandard_Transient^ OCStepData_SelectType::Value()
{
  Handle(Standard_Transient) tmp = ((StepData_SelectType*)nativeHandle)->Value();
  return gcnew OCStandard_Transient(&tmp);
}

 System::Boolean OCStepData_SelectType::IsNull()
{
  return OCConverter::StandardBooleanToBoolean(((StepData_SelectType*)nativeHandle)->IsNull());
}

OCStandard_Type^ OCStepData_SelectType::Type()
{
  Handle(Standard_Type) tmp = ((StepData_SelectType*)nativeHandle)->Type();
  return gcnew OCStandard_Type(&tmp);
}

 Standard_Integer OCStepData_SelectType::CaseNumber()
{
  return ((StepData_SelectType*)nativeHandle)->CaseNumber();
}

OCStepData_PDescr^ OCStepData_SelectType::Description()
{
  Handle(StepData_PDescr) tmp = ((StepData_SelectType*)nativeHandle)->Description();
  return gcnew OCStepData_PDescr(&tmp);
}

OCStepData_SelectMember^ OCStepData_SelectType::NewMember()
{
  Handle(StepData_SelectMember) tmp = ((StepData_SelectType*)nativeHandle)->NewMember();
  return gcnew OCStepData_SelectMember(&tmp);
}

 Standard_Integer OCStepData_SelectType::CaseMem(OCNaroWrappers::OCStepData_SelectMember^ ent)
{
  return ((StepData_SelectType*)nativeHandle)->CaseMem(*((Handle_StepData_SelectMember*)ent->Handle));
}

 Standard_Integer OCStepData_SelectType::CaseMember()
{
  return ((StepData_SelectType*)nativeHandle)->CaseMember();
}

OCStepData_SelectMember^ OCStepData_SelectType::Member()
{
  Handle(StepData_SelectMember) tmp = ((StepData_SelectType*)nativeHandle)->Member();
  return gcnew OCStepData_SelectMember(&tmp);
}

 System::String^ OCStepData_SelectType::SelectName()
{
  return OCConverter::StandardCStringToString(((StepData_SelectType*)nativeHandle)->SelectName());
}

 Standard_Integer OCStepData_SelectType::Int()
{
  return ((StepData_SelectType*)nativeHandle)->Int();
}

 void OCStepData_SelectType::SetInt(Standard_Integer val)
{
  ((StepData_SelectType*)nativeHandle)->SetInt(val);
}

 Standard_Integer OCStepData_SelectType::Integer()
{
  return ((StepData_SelectType*)nativeHandle)->Integer();
}

 void OCStepData_SelectType::SetInteger(Standard_Integer val, System::String^ name)
{
  ((StepData_SelectType*)nativeHandle)->SetInteger(val, OCConverter::StringToStandardCString(name));
}

 System::Boolean OCStepData_SelectType::Boolean()
{
  return OCConverter::StandardBooleanToBoolean(((StepData_SelectType*)nativeHandle)->Boolean());
}

 void OCStepData_SelectType::SetBoolean(System::Boolean val, System::String^ name)
{
  ((StepData_SelectType*)nativeHandle)->SetBoolean(OCConverter::BooleanToStandardBoolean(val), OCConverter::StringToStandardCString(name));
}

 OCStepData_Logical OCStepData_SelectType::Logical()
{
  return (OCStepData_Logical)(((StepData_SelectType*)nativeHandle)->Logical());
}

 void OCStepData_SelectType::SetLogical(OCStepData_Logical val, System::String^ name)
{
  ((StepData_SelectType*)nativeHandle)->SetLogical((StepData_Logical)val, OCConverter::StringToStandardCString(name));
}

 Standard_Real OCStepData_SelectType::Real()
{
  return ((StepData_SelectType*)nativeHandle)->Real();
}

 void OCStepData_SelectType::SetReal(Standard_Real val, System::String^ name)
{
  ((StepData_SelectType*)nativeHandle)->SetReal(val, OCConverter::StringToStandardCString(name));
}

 void OCStepData_SelectType::Destroy()
{
  ((StepData_SelectType*)nativeHandle)->Destroy();
}


