// File generated by CPPExt (CPP file)
//

#include "StepData_Simple.h"
#include "../Converter.h"
#include "StepData_ESDescr.h"
#include "StepData_Field.h"
#include "StepData_FieldListN.h"
#include "../Interface/Interface_Check.h"
#include "../Interface/Interface_EntityIterator.h"


using namespace OCNaroWrappers;

OCStepData_Simple::OCStepData_Simple(Handle(StepData_Simple)* nativeHandle) : OCStepData_Described((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepData_Simple(*nativeHandle);
}

OCStepData_Simple::OCStepData_Simple(OCNaroWrappers::OCStepData_ESDescr^ descr) : OCStepData_Described((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepData_Simple(new StepData_Simple(*((Handle_StepData_ESDescr*)descr->Handle)));
}

OCStepData_ESDescr^ OCStepData_Simple::ESDescr()
{
  Handle(StepData_ESDescr) tmp = (*((Handle_StepData_Simple*)nativeHandle))->ESDescr();
  return gcnew OCStepData_ESDescr(&tmp);
}

 System::String^ OCStepData_Simple::StepType()
{
  return OCConverter::StandardCStringToString((*((Handle_StepData_Simple*)nativeHandle))->StepType());
}

 System::Boolean OCStepData_Simple::IsComplex()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepData_Simple*)nativeHandle))->IsComplex());
}

 System::Boolean OCStepData_Simple::Matches(System::String^ steptype)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepData_Simple*)nativeHandle))->Matches(OCConverter::StringToStandardCString(steptype)));
}

OCStepData_Simple^ OCStepData_Simple::As(System::String^ steptype)
{
  Handle(StepData_Simple) tmp = (*((Handle_StepData_Simple*)nativeHandle))->As(OCConverter::StringToStandardCString(steptype));
  return gcnew OCStepData_Simple(&tmp);
}

 System::Boolean OCStepData_Simple::HasField(System::String^ name)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepData_Simple*)nativeHandle))->HasField(OCConverter::StringToStandardCString(name)));
}

OCStepData_Field^ OCStepData_Simple::Field(System::String^ name)
{
  StepData_Field* tmp = new StepData_Field();
  *tmp = (*((Handle_StepData_Simple*)nativeHandle))->Field(OCConverter::StringToStandardCString(name));
  return gcnew OCStepData_Field(tmp);
}

OCStepData_Field^ OCStepData_Simple::CField(System::String^ name)
{
  StepData_Field* tmp = new StepData_Field();
  *tmp = (*((Handle_StepData_Simple*)nativeHandle))->CField(OCConverter::StringToStandardCString(name));
  return gcnew OCStepData_Field(tmp);
}

 Standard_Integer OCStepData_Simple::NbFields()
{
  return (*((Handle_StepData_Simple*)nativeHandle))->NbFields();
}

OCStepData_Field^ OCStepData_Simple::FieldNum(Standard_Integer num)
{
  StepData_Field* tmp = new StepData_Field();
  *tmp = (*((Handle_StepData_Simple*)nativeHandle))->FieldNum(num);
  return gcnew OCStepData_Field(tmp);
}

OCStepData_Field^ OCStepData_Simple::CFieldNum(Standard_Integer num)
{
  StepData_Field* tmp = new StepData_Field();
  *tmp = (*((Handle_StepData_Simple*)nativeHandle))->CFieldNum(num);
  return gcnew OCStepData_Field(tmp);
}

OCStepData_FieldListN^ OCStepData_Simple::Fields()
{
  StepData_FieldListN* tmp = new StepData_FieldListN(0);
  *tmp = (*((Handle_StepData_Simple*)nativeHandle))->Fields();
  return gcnew OCStepData_FieldListN(tmp);
}

OCStepData_FieldListN^ OCStepData_Simple::CFields()
{
  StepData_FieldListN* tmp = new StepData_FieldListN(0);
  *tmp = (*((Handle_StepData_Simple*)nativeHandle))->CFields();
  return gcnew OCStepData_FieldListN(tmp);
}

 void OCStepData_Simple::Check(OCNaroWrappers::OCInterface_Check^ ach)
{
  (*((Handle_StepData_Simple*)nativeHandle))->Check(*((Handle_Interface_Check*)ach->Handle));
}

 void OCStepData_Simple::Shared(OCNaroWrappers::OCInterface_EntityIterator^ list)
{
  (*((Handle_StepData_Simple*)nativeHandle))->Shared(*((Interface_EntityIterator*)list->Handle));
}


