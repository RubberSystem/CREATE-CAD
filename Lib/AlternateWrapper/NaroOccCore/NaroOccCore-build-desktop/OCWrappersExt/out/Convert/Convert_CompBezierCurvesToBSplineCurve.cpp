// File generated by CPPExt (CPP file)
//

#include "Convert_CompBezierCurvesToBSplineCurve.h"
#include "../Converter.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "../TColStd/TColStd_Array1OfInteger.h"


using namespace OCNaroWrappers;

OCConvert_CompBezierCurvesToBSplineCurve::OCConvert_CompBezierCurvesToBSplineCurve(Convert_CompBezierCurvesToBSplineCurve* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCConvert_CompBezierCurvesToBSplineCurve::OCConvert_CompBezierCurvesToBSplineCurve(Standard_Real AngularTolerance) 
{
  nativeHandle = new Convert_CompBezierCurvesToBSplineCurve(AngularTolerance);
}

 void OCConvert_CompBezierCurvesToBSplineCurve::AddCurve(OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles)
{
  ((Convert_CompBezierCurvesToBSplineCurve*)nativeHandle)->AddCurve(*((TColgp_Array1OfPnt*)Poles->Handle));
}

 void OCConvert_CompBezierCurvesToBSplineCurve::Perform()
{
  ((Convert_CompBezierCurvesToBSplineCurve*)nativeHandle)->Perform();
}

 Standard_Integer OCConvert_CompBezierCurvesToBSplineCurve::Degree()
{
  return ((Convert_CompBezierCurvesToBSplineCurve*)nativeHandle)->Degree();
}

 Standard_Integer OCConvert_CompBezierCurvesToBSplineCurve::NbPoles()
{
  return ((Convert_CompBezierCurvesToBSplineCurve*)nativeHandle)->NbPoles();
}

 void OCConvert_CompBezierCurvesToBSplineCurve::Poles(OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles)
{
  ((Convert_CompBezierCurvesToBSplineCurve*)nativeHandle)->Poles(*((TColgp_Array1OfPnt*)Poles->Handle));
}

 Standard_Integer OCConvert_CompBezierCurvesToBSplineCurve::NbKnots()
{
  return ((Convert_CompBezierCurvesToBSplineCurve*)nativeHandle)->NbKnots();
}

 void OCConvert_CompBezierCurvesToBSplineCurve::KnotsAndMults(OCNaroWrappers::OCTColStd_Array1OfReal^ Knots, OCNaroWrappers::OCTColStd_Array1OfInteger^ Mults)
{
  ((Convert_CompBezierCurvesToBSplineCurve*)nativeHandle)->KnotsAndMults(*((TColStd_Array1OfReal*)Knots->Handle), *((TColStd_Array1OfInteger*)Mults->Handle));
}


