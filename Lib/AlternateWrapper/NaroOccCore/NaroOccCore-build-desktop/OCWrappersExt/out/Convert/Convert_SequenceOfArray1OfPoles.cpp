// File generated by CPPExt (CPP file)
//

#include "Convert_SequenceOfArray1OfPoles.h"
#include "../Converter.h"
#include "../TColgp/TColgp_HArray1OfPnt.h"
#include "Convert_SequenceNodeOfSequenceOfArray1OfPoles.h"


using namespace OCNaroWrappers;

OCConvert_SequenceOfArray1OfPoles::OCConvert_SequenceOfArray1OfPoles(Convert_SequenceOfArray1OfPoles* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCConvert_SequenceOfArray1OfPoles::OCConvert_SequenceOfArray1OfPoles() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new Convert_SequenceOfArray1OfPoles();
}

OCConvert_SequenceOfArray1OfPoles^ OCConvert_SequenceOfArray1OfPoles::Assign(OCNaroWrappers::OCConvert_SequenceOfArray1OfPoles^ Other)
{
  Convert_SequenceOfArray1OfPoles* tmp = new Convert_SequenceOfArray1OfPoles();
  *tmp = ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Assign(*((Convert_SequenceOfArray1OfPoles*)Other->Handle));
  return gcnew OCConvert_SequenceOfArray1OfPoles(tmp);
}

 void OCConvert_SequenceOfArray1OfPoles::Append(OCNaroWrappers::OCTColgp_HArray1OfPnt^ T)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Append(*((Handle_TColgp_HArray1OfPnt*)T->Handle));
}

 void OCConvert_SequenceOfArray1OfPoles::Append(OCNaroWrappers::OCConvert_SequenceOfArray1OfPoles^ S)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Append(*((Convert_SequenceOfArray1OfPoles*)S->Handle));
}

 void OCConvert_SequenceOfArray1OfPoles::Prepend(OCNaroWrappers::OCTColgp_HArray1OfPnt^ T)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Prepend(*((Handle_TColgp_HArray1OfPnt*)T->Handle));
}

 void OCConvert_SequenceOfArray1OfPoles::Prepend(OCNaroWrappers::OCConvert_SequenceOfArray1OfPoles^ S)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Prepend(*((Convert_SequenceOfArray1OfPoles*)S->Handle));
}

 void OCConvert_SequenceOfArray1OfPoles::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTColgp_HArray1OfPnt^ T)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->InsertBefore(Index, *((Handle_TColgp_HArray1OfPnt*)T->Handle));
}

 void OCConvert_SequenceOfArray1OfPoles::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCConvert_SequenceOfArray1OfPoles^ S)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->InsertBefore(Index, *((Convert_SequenceOfArray1OfPoles*)S->Handle));
}

 void OCConvert_SequenceOfArray1OfPoles::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTColgp_HArray1OfPnt^ T)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->InsertAfter(Index, *((Handle_TColgp_HArray1OfPnt*)T->Handle));
}

 void OCConvert_SequenceOfArray1OfPoles::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCConvert_SequenceOfArray1OfPoles^ S)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->InsertAfter(Index, *((Convert_SequenceOfArray1OfPoles*)S->Handle));
}

OCTColgp_HArray1OfPnt^ OCConvert_SequenceOfArray1OfPoles::First()
{
  Handle(TColgp_HArray1OfPnt) tmp = ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->First();
  return gcnew OCTColgp_HArray1OfPnt(&tmp);
}

OCTColgp_HArray1OfPnt^ OCConvert_SequenceOfArray1OfPoles::Last()
{
  Handle(TColgp_HArray1OfPnt) tmp = ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Last();
  return gcnew OCTColgp_HArray1OfPnt(&tmp);
}

 void OCConvert_SequenceOfArray1OfPoles::Split(Standard_Integer Index, OCNaroWrappers::OCConvert_SequenceOfArray1OfPoles^ Sub)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Split(Index, *((Convert_SequenceOfArray1OfPoles*)Sub->Handle));
}

OCTColgp_HArray1OfPnt^ OCConvert_SequenceOfArray1OfPoles::Value(Standard_Integer Index)
{
  Handle(TColgp_HArray1OfPnt) tmp = ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Value(Index);
  return gcnew OCTColgp_HArray1OfPnt(&tmp);
}

 void OCConvert_SequenceOfArray1OfPoles::SetValue(Standard_Integer Index, OCNaroWrappers::OCTColgp_HArray1OfPnt^ I)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->SetValue(Index, *((Handle_TColgp_HArray1OfPnt*)I->Handle));
}

OCTColgp_HArray1OfPnt^ OCConvert_SequenceOfArray1OfPoles::ChangeValue(Standard_Integer Index)
{
  Handle(TColgp_HArray1OfPnt) tmp = ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->ChangeValue(Index);
  return gcnew OCTColgp_HArray1OfPnt(&tmp);
}

 void OCConvert_SequenceOfArray1OfPoles::Remove(Standard_Integer Index)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Remove(Index);
}

 void OCConvert_SequenceOfArray1OfPoles::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((Convert_SequenceOfArray1OfPoles*)nativeHandle)->Remove(FromIndex, ToIndex);
}


