// File generated by CPPExt (MPV)
//
#ifndef _TopTools_ShapeSet_OCWrappers_HeaderFile
#define _TopTools_ShapeSet_OCWrappers_HeaderFile

// include native header
#include <TopTools_ShapeSet.hxx>
#include "../Converter.h"


#include "TopTools_IndexedMapOfShape.h"
#include "TopTools_LocationSet.h"
#include "../TopAbs/TopAbs_ShapeEnum.h"


namespace OCNaroWrappers
{

ref class OCMessage_ProgressIndicator;
ref class OCTopoDS_Shape;
ref class OCTopTools_LocationSet;
ref class OCTCollection_AsciiString;


//! A ShapeSets    contains  a  Shape    and all   its <br>
//!          sub-shapes and locations.  It  can be dump,  write <br>
//!          and read. <br>
//! <br>
//!          Methods to handle the geometry can be redefined. <br>
//! <br>
public ref class OCTopTools_ShapeSet  {

protected:
  TopTools_ShapeSet* nativeHandle;
  OCTopTools_ShapeSet(OCDummy^) {};

public:
  property TopTools_ShapeSet* Handle
  {
    TopTools_ShapeSet* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopTools_ShapeSet(TopTools_ShapeSet* nativeHandle);

// Methods PUBLIC

//! Builds an empty ShapeSet. <br>
OCTopTools_ShapeSet();


virtual /*instead*/  void Delete() ;


 /*instead*/  void SetFormatNb(Standard_Integer theFormatNb) ;

//! two formats available for the moment: <br>
//!          First: does not write CurveOnSurface UV Points into the file <br>
//!                 on reading calls Check() method. <br>
//!          Second: stores CurveOnSurface UV Points. <br>
//!          On reading format is recognized from Version string. <br>
 /*instead*/  Standard_Integer FormatNb() ;

//! Clears the content of the set.  This method can be <br>
//!          redefined. <br>
virtual /*instead*/  void Clear() ;

//! Stores <S> and its sub-shape. Returns the index of <S>. <br>
//!          The method AddGeometry is called on each sub-shape. <br>
 /*instead*/  Standard_Integer Add(OCNaroWrappers::OCTopoDS_Shape^ S) ;

//! Returns the sub-shape of index <I>. <br>
//! <br>
 /*instead*/  OCTopoDS_Shape^ Shape(Standard_Integer I) ;

//! Returns the index of <S>. <br>
 /*instead*/  Standard_Integer Index(OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  OCTopTools_LocationSet^ Locations() ;


 /*instead*/  OCTopTools_LocationSet^ ChangeLocations() ;

//! Dumps the number of objects in me on the stream <OS>. <br>
//! (Number of shapes of each type) <br>
 /*instead*/  Standard_OStream& DumpExtent(Standard_OStream& OS) ;

//! Dumps the number of objects in me in the string S <br>
//! (Number of shapes of each type) <br>
 /*instead*/  void DumpExtent(OCNaroWrappers::OCTCollection_AsciiString^ S) ;

//! Dumps the content of me on the stream <OS>. <br>
//! <br>
//!          Dumps the shapes from first to last. <br>
//!            For each Shape <br>
//!               Dump the type, the flags, the subshapes <br>
//!               calls DumpGeometry(S) <br>
//! <br>
//! <br>
//!          Dumps the geometry calling DumpGeometry. <br>
//! <br>
//!          Dumps the locations. <br>
virtual /*instead*/  void Dump(Standard_OStream& OS) ;

//! Writes the content of  me  on the stream <OS> in a <br>
//!          format that can be read back by Read. <br>
//! <br>
//!          Writes the locations. <br>
//! <br>
//!          Writes the geometry calling WriteGeometry. <br>
//! <br>
//!          Dumps the shapes from last to first. <br>
//!            For each shape  : <br>
//!              Write the type. <br>
//!              calls WriteGeometry(S). <br>
//!              Write the flags, the subshapes. <br>
virtual /*instead*/  void Write(Standard_OStream& OS) ;

//! Reads the content of me from the  stream  <IS>. me <br>
//!          is first cleared. <br>
//! <br>
//!          Reads the locations. <br>
//! <br>
//!          Reads the geometry calling ReadGeometry. <br>
//! <br>
//!          Reads the shapes. <br>
//!            For each shape <br>
//!              Reads the type. <br>
//!              calls ReadGeometry(T,S). <br>
//!              Reads the flag, the subshapes. <br>
virtual /*instead*/  void Read(Standard_IStream& IS) ;

//! Dumps   on  <OS>    the  shape  <S>.   Dumps   the <br>
//!          orientation, the index of the TShape and the index <br>
//!          of the Location. <br>
 /*instead*/  void Dump(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_OStream& OS) ;

//! Writes   on  <OS>   the shape   <S>.    Writes the <br>
//!          orientation, the index of the TShape and the index <br>
//!          of the Location. <br>
 /*instead*/  void Write(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_OStream& OS) ;

//! Reads from <IS> a shape and returns it in S. <br>
 /*instead*/  void Read(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_IStream& IS) ;

//! Stores the geometry of <S>. <br>
virtual /*instead*/  void AddGeometry(OCNaroWrappers::OCTopoDS_Shape^ S) ;

//! Dumps the geometry of me on the stream <OS>. <br>
virtual /*instead*/  void DumpGeometry(Standard_OStream& OS) ;

//! Writes the geometry of  me  on the stream <OS> in a <br>
//!          format that can be read back by Read. <br>
virtual /*instead*/  void WriteGeometry(Standard_OStream& OS) ;

//! Reads the geometry of me from the  stream  <IS>. <br>
virtual /*instead*/  void ReadGeometry(Standard_IStream& IS) ;

//! Dumps the geometry of <S> on the stream <OS>. <br>
virtual /*instead*/  void DumpGeometry(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_OStream& OS) ;

//! Writes the geometry of <S>  on the stream <OS> in a <br>
//!          format that can be read back by Read. <br>
virtual /*instead*/  void WriteGeometry(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_OStream& OS) ;

//! Reads the geometry of a shape of type <T> from the <br>
//!          stream <IS> and returns it in <S>. <br>
virtual /*instead*/  void ReadGeometry(OCTopAbs_ShapeEnum T, Standard_IStream& IS, OCNaroWrappers::OCTopoDS_Shape^ S) ;

//! Inserts  the shape <S2> in  the  shape <S1>.  This <br>
//!          method must be   redefined  to  use   the  correct <br>
//!          builder. <br>
virtual /*instead*/  void AddShapes(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;

//! This method is   called after  each  new  completed <br>
//!          shape. <T> is the  type. <S> is  the shape. In this <br>
//!          class it does nothing, but it gives the opportunity <br>
//!          in derived  classes to perform  extra  treatment on <br>
//!          shapes. <br>
virtual /*instead*/  void Check(OCTopAbs_ShapeEnum T, OCNaroWrappers::OCTopoDS_Shape^ S) ;

//!Returns number of shapes read from file. <br>
 /*instead*/  Standard_Integer NbShapes() ;


 /*instead*/  void SetProgress(OCNaroWrappers::OCMessage_ProgressIndicator^ PR) ;


 /*instead*/  OCMessage_ProgressIndicator^ GetProgress() ;

~OCTopTools_ShapeSet()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
