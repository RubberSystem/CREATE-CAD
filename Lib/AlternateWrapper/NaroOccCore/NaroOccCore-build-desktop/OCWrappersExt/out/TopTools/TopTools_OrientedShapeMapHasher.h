// File generated by CPPExt (MPV)
//
#ifndef _TopTools_OrientedShapeMapHasher_OCWrappers_HeaderFile
#define _TopTools_OrientedShapeMapHasher_OCWrappers_HeaderFile

// include native header
#include <TopTools_OrientedShapeMapHasher.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;



public ref class OCTopTools_OrientedShapeMapHasher  {

protected:
  TopTools_OrientedShapeMapHasher* nativeHandle;
  OCTopTools_OrientedShapeMapHasher(OCDummy^) {};

public:
  property TopTools_OrientedShapeMapHasher* Handle
  {
    TopTools_OrientedShapeMapHasher* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopTools_OrientedShapeMapHasher(TopTools_OrientedShapeMapHasher* nativeHandle);

// Methods PUBLIC

//! Returns a HasCode value  for  the  Key <K>  in the <br>
//!          range 0..Upper. <br>
static /*instead*/  Standard_Integer HashCode(OCNaroWrappers::OCTopoDS_Shape^ S, Standard_Integer Upper) ;

//! Returns True when the two keys are equal. Two same <br>
//!          keys must have the same hashcode,  the contrary is <br>
//!          not necessary. <br>
//! <br>
static /*instead*/  System::Boolean IsEqual(OCNaroWrappers::OCTopoDS_Shape^ S1, OCNaroWrappers::OCTopoDS_Shape^ S2) ;

~OCTopTools_OrientedShapeMapHasher()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
