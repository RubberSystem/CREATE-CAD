// File generated by CPPExt (MPV)
//
#ifndef _TopTools_LocationSet_OCWrappers_HeaderFile
#define _TopTools_LocationSet_OCWrappers_HeaderFile

// include native header
#include <TopTools_LocationSet.hxx>
#include "../Converter.h"


#include "../TopLoc/TopLoc_IndexedMapOfLocation.h"


namespace OCNaroWrappers
{

ref class OCMessage_ProgressIndicator;
ref class OCTopLoc_Location;


//! The class LocationSet stores a set of location in <br>
//!          a relocatable state. <br>
//! <br>
//!          It can be created from Locations. <br>
//! <br>
//!          It can create Locations. <br>
//! <br>
//!          It can be write and read from a stream. <br>
public ref class OCTopTools_LocationSet  {

protected:
  TopTools_LocationSet* nativeHandle;
  OCTopTools_LocationSet(OCDummy^) {};

public:
  property TopTools_LocationSet* Handle
  {
    TopTools_LocationSet* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopTools_LocationSet(TopTools_LocationSet* nativeHandle);

// Methods PUBLIC

//! Returns an empty set of locations. <br>
OCTopTools_LocationSet();

//! Clears the content of the set. <br>
 /*instead*/  void Clear() ;

//! Incorporate a new Location in the  set and returns <br>
//!          its index. <br>
 /*instead*/  Standard_Integer Add(OCNaroWrappers::OCTopLoc_Location^ L) ;

//! Returns the location of index <I>. <br>
//! <br>
 /*instead*/  OCTopLoc_Location^ Location(Standard_Integer I) ;

//! Returns the index of <L>. <br>
 /*instead*/  Standard_Integer Index(OCNaroWrappers::OCTopLoc_Location^ L) ;

//! Dumps the content of me on the stream <OS>. <br>
 /*instead*/  void Dump(Standard_OStream& OS) ;

//! Writes the content of  me  on the stream <OS> in a <br>
//!          format that can be read back by Read. <br>
 /*instead*/  void Write(Standard_OStream& OS) ;

//! Reads the content of me from the  stream  <IS>. me <br>
//!          is first cleared. <br>
//! <br>
 /*instead*/  void Read(Standard_IStream& IS) ;


 /*instead*/  void SetProgress(OCNaroWrappers::OCMessage_ProgressIndicator^ PR) ;


 /*instead*/  OCMessage_ProgressIndicator^ GetProgress() ;

~OCTopTools_LocationSet()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
