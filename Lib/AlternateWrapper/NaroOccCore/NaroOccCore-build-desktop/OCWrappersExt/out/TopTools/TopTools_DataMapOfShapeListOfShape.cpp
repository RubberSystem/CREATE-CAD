// File generated by CPPExt (CPP file)
//

#include "TopTools_DataMapOfShapeListOfShape.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TopTools_ListOfShape.h"
#include "TopTools_ShapeMapHasher.h"
#include "TopTools_DataMapNodeOfDataMapOfShapeListOfShape.h"
#include "TopTools_DataMapIteratorOfDataMapOfShapeListOfShape.h"


using namespace OCNaroWrappers;

OCTopTools_DataMapOfShapeListOfShape::OCTopTools_DataMapOfShapeListOfShape(TopTools_DataMapOfShapeListOfShape* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopTools_DataMapOfShapeListOfShape::OCTopTools_DataMapOfShapeListOfShape(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TopTools_DataMapOfShapeListOfShape(NbBuckets);
}

OCTopTools_DataMapOfShapeListOfShape^ OCTopTools_DataMapOfShapeListOfShape::Assign(OCNaroWrappers::OCTopTools_DataMapOfShapeListOfShape^ Other)
{
  TopTools_DataMapOfShapeListOfShape* tmp = new TopTools_DataMapOfShapeListOfShape(0);
  *tmp = ((TopTools_DataMapOfShapeListOfShape*)nativeHandle)->Assign(*((TopTools_DataMapOfShapeListOfShape*)Other->Handle));
  return gcnew OCTopTools_DataMapOfShapeListOfShape(tmp);
}

 void OCTopTools_DataMapOfShapeListOfShape::ReSize(Standard_Integer NbBuckets)
{
  ((TopTools_DataMapOfShapeListOfShape*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCTopTools_DataMapOfShapeListOfShape::Bind(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCTopTools_ListOfShape^ I)
{
  return OCConverter::StandardBooleanToBoolean(((TopTools_DataMapOfShapeListOfShape*)nativeHandle)->Bind(*((TopoDS_Shape*)K->Handle), *((TopTools_ListOfShape*)I->Handle)));
}

 System::Boolean OCTopTools_DataMapOfShapeListOfShape::IsBound(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TopTools_DataMapOfShapeListOfShape*)nativeHandle)->IsBound(*((TopoDS_Shape*)K->Handle)));
}

 System::Boolean OCTopTools_DataMapOfShapeListOfShape::UnBind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TopTools_DataMapOfShapeListOfShape*)nativeHandle)->UnBind(*((TopoDS_Shape*)K->Handle)));
}

OCTopTools_ListOfShape^ OCTopTools_DataMapOfShapeListOfShape::Find(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((TopTools_DataMapOfShapeListOfShape*)nativeHandle)->Find(*((TopoDS_Shape*)K->Handle));
  return gcnew OCTopTools_ListOfShape(tmp);
}

OCTopTools_ListOfShape^ OCTopTools_DataMapOfShapeListOfShape::ChangeFind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((TopTools_DataMapOfShapeListOfShape*)nativeHandle)->ChangeFind(*((TopoDS_Shape*)K->Handle));
  return gcnew OCTopTools_ListOfShape(tmp);
}

 Standard_Address OCTopTools_DataMapOfShapeListOfShape::Find1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((TopTools_DataMapOfShapeListOfShape*)nativeHandle)->Find1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCTopTools_DataMapOfShapeListOfShape::ChangeFind1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((TopTools_DataMapOfShapeListOfShape*)nativeHandle)->ChangeFind1(*((TopoDS_Shape*)K->Handle));
}


