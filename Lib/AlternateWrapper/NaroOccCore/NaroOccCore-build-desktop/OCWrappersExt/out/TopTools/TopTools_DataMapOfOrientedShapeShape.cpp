// File generated by CPPExt (CPP file)
//

#include "TopTools_DataMapOfOrientedShapeShape.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TopTools_OrientedShapeMapHasher.h"
#include "TopTools_DataMapNodeOfDataMapOfOrientedShapeShape.h"
#include "TopTools_DataMapIteratorOfDataMapOfOrientedShapeShape.h"


using namespace OCNaroWrappers;

OCTopTools_DataMapOfOrientedShapeShape::OCTopTools_DataMapOfOrientedShapeShape(TopTools_DataMapOfOrientedShapeShape* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopTools_DataMapOfOrientedShapeShape::OCTopTools_DataMapOfOrientedShapeShape(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TopTools_DataMapOfOrientedShapeShape(NbBuckets);
}

OCTopTools_DataMapOfOrientedShapeShape^ OCTopTools_DataMapOfOrientedShapeShape::Assign(OCNaroWrappers::OCTopTools_DataMapOfOrientedShapeShape^ Other)
{
  TopTools_DataMapOfOrientedShapeShape* tmp = new TopTools_DataMapOfOrientedShapeShape(0);
  *tmp = ((TopTools_DataMapOfOrientedShapeShape*)nativeHandle)->Assign(*((TopTools_DataMapOfOrientedShapeShape*)Other->Handle));
  return gcnew OCTopTools_DataMapOfOrientedShapeShape(tmp);
}

 void OCTopTools_DataMapOfOrientedShapeShape::ReSize(Standard_Integer NbBuckets)
{
  ((TopTools_DataMapOfOrientedShapeShape*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCTopTools_DataMapOfOrientedShapeShape::Bind(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCTopoDS_Shape^ I)
{
  return OCConverter::StandardBooleanToBoolean(((TopTools_DataMapOfOrientedShapeShape*)nativeHandle)->Bind(*((TopoDS_Shape*)K->Handle), *((TopoDS_Shape*)I->Handle)));
}

 System::Boolean OCTopTools_DataMapOfOrientedShapeShape::IsBound(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TopTools_DataMapOfOrientedShapeShape*)nativeHandle)->IsBound(*((TopoDS_Shape*)K->Handle)));
}

 System::Boolean OCTopTools_DataMapOfOrientedShapeShape::UnBind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TopTools_DataMapOfOrientedShapeShape*)nativeHandle)->UnBind(*((TopoDS_Shape*)K->Handle)));
}

OCTopoDS_Shape^ OCTopTools_DataMapOfOrientedShapeShape::Find(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopTools_DataMapOfOrientedShapeShape*)nativeHandle)->Find(*((TopoDS_Shape*)K->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCTopTools_DataMapOfOrientedShapeShape::ChangeFind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopTools_DataMapOfOrientedShapeShape*)nativeHandle)->ChangeFind(*((TopoDS_Shape*)K->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

 Standard_Address OCTopTools_DataMapOfOrientedShapeShape::Find1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((TopTools_DataMapOfOrientedShapeShape*)nativeHandle)->Find1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCTopTools_DataMapOfOrientedShapeShape::ChangeFind1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((TopTools_DataMapOfOrientedShapeShape*)nativeHandle)->ChangeFind1(*((TopoDS_Shape*)K->Handle));
}


