// File generated by CPPExt (CPP file)
//

#include "TColStd_SetListOfSetOfInteger.h"
#include "../Converter.h"
#include "TColStd_ListIteratorOfSetListOfSetOfInteger.h"
#include "TColStd_ListNodeOfSetListOfSetOfInteger.h"


using namespace OCNaroWrappers;

OCTColStd_SetListOfSetOfInteger::OCTColStd_SetListOfSetOfInteger(TColStd_SetListOfSetOfInteger* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTColStd_SetListOfSetOfInteger::OCTColStd_SetListOfSetOfInteger() 
{
  nativeHandle = new TColStd_SetListOfSetOfInteger();
}

 void OCTColStd_SetListOfSetOfInteger::Assign(OCNaroWrappers::OCTColStd_SetListOfSetOfInteger^ Other)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Assign(*((TColStd_SetListOfSetOfInteger*)Other->Handle));
}

 Standard_Integer OCTColStd_SetListOfSetOfInteger::Extent()
{
  return ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Extent();
}

 System::Boolean OCTColStd_SetListOfSetOfInteger::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_SetListOfSetOfInteger*)nativeHandle)->IsEmpty());
}

 void OCTColStd_SetListOfSetOfInteger::Prepend(Standard_Integer I)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Prepend(I);
}

 void OCTColStd_SetListOfSetOfInteger::Prepend(Standard_Integer I, OCNaroWrappers::OCTColStd_ListIteratorOfSetListOfSetOfInteger^ theIt)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Prepend(I, *((TColStd_ListIteratorOfSetListOfSetOfInteger*)theIt->Handle));
}

 void OCTColStd_SetListOfSetOfInteger::Prepend(OCNaroWrappers::OCTColStd_SetListOfSetOfInteger^ Other)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Prepend(*((TColStd_SetListOfSetOfInteger*)Other->Handle));
}

 void OCTColStd_SetListOfSetOfInteger::Append(Standard_Integer I)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Append(I);
}

 void OCTColStd_SetListOfSetOfInteger::Append(Standard_Integer I, OCNaroWrappers::OCTColStd_ListIteratorOfSetListOfSetOfInteger^ theIt)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Append(I, *((TColStd_ListIteratorOfSetListOfSetOfInteger*)theIt->Handle));
}

 void OCTColStd_SetListOfSetOfInteger::Append(OCNaroWrappers::OCTColStd_SetListOfSetOfInteger^ Other)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Append(*((TColStd_SetListOfSetOfInteger*)Other->Handle));
}

 Standard_Integer OCTColStd_SetListOfSetOfInteger::First()
{
  return ((TColStd_SetListOfSetOfInteger*)nativeHandle)->First();
}

 Standard_Integer OCTColStd_SetListOfSetOfInteger::Last()
{
  return ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Last();
}

 void OCTColStd_SetListOfSetOfInteger::RemoveFirst()
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->RemoveFirst();
}

 void OCTColStd_SetListOfSetOfInteger::Remove(OCNaroWrappers::OCTColStd_ListIteratorOfSetListOfSetOfInteger^ It)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->Remove(*((TColStd_ListIteratorOfSetListOfSetOfInteger*)It->Handle));
}

 void OCTColStd_SetListOfSetOfInteger::InsertBefore(Standard_Integer I, OCNaroWrappers::OCTColStd_ListIteratorOfSetListOfSetOfInteger^ It)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->InsertBefore(I, *((TColStd_ListIteratorOfSetListOfSetOfInteger*)It->Handle));
}

 void OCTColStd_SetListOfSetOfInteger::InsertBefore(OCNaroWrappers::OCTColStd_SetListOfSetOfInteger^ Other, OCNaroWrappers::OCTColStd_ListIteratorOfSetListOfSetOfInteger^ It)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->InsertBefore(*((TColStd_SetListOfSetOfInteger*)Other->Handle), *((TColStd_ListIteratorOfSetListOfSetOfInteger*)It->Handle));
}

 void OCTColStd_SetListOfSetOfInteger::InsertAfter(Standard_Integer I, OCNaroWrappers::OCTColStd_ListIteratorOfSetListOfSetOfInteger^ It)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->InsertAfter(I, *((TColStd_ListIteratorOfSetListOfSetOfInteger*)It->Handle));
}

 void OCTColStd_SetListOfSetOfInteger::InsertAfter(OCNaroWrappers::OCTColStd_SetListOfSetOfInteger^ Other, OCNaroWrappers::OCTColStd_ListIteratorOfSetListOfSetOfInteger^ It)
{
  ((TColStd_SetListOfSetOfInteger*)nativeHandle)->InsertAfter(*((TColStd_SetListOfSetOfInteger*)Other->Handle), *((TColStd_ListIteratorOfSetListOfSetOfInteger*)It->Handle));
}


