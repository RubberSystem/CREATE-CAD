// File generated by CPPExt (CPP file)
//

#include "TColStd_SequenceOfInteger.h"
#include "../Converter.h"
#include "TColStd_SequenceNodeOfSequenceOfInteger.h"


using namespace OCNaroWrappers;

OCTColStd_SequenceOfInteger::OCTColStd_SequenceOfInteger(TColStd_SequenceOfInteger* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTColStd_SequenceOfInteger::OCTColStd_SequenceOfInteger() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new TColStd_SequenceOfInteger();
}

OCTColStd_SequenceOfInteger^ OCTColStd_SequenceOfInteger::Assign(OCNaroWrappers::OCTColStd_SequenceOfInteger^ Other)
{
  TColStd_SequenceOfInteger* tmp = new TColStd_SequenceOfInteger();
  *tmp = ((TColStd_SequenceOfInteger*)nativeHandle)->Assign(*((TColStd_SequenceOfInteger*)Other->Handle));
  return gcnew OCTColStd_SequenceOfInteger(tmp);
}

 void OCTColStd_SequenceOfInteger::Append(Standard_Integer T)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->Append(T);
}

 void OCTColStd_SequenceOfInteger::Append(OCNaroWrappers::OCTColStd_SequenceOfInteger^ S)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->Append(*((TColStd_SequenceOfInteger*)S->Handle));
}

 void OCTColStd_SequenceOfInteger::Prepend(Standard_Integer T)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->Prepend(T);
}

 void OCTColStd_SequenceOfInteger::Prepend(OCNaroWrappers::OCTColStd_SequenceOfInteger^ S)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->Prepend(*((TColStd_SequenceOfInteger*)S->Handle));
}

 void OCTColStd_SequenceOfInteger::InsertBefore(Standard_Integer Index, Standard_Integer T)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->InsertBefore(Index, T);
}

 void OCTColStd_SequenceOfInteger::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfInteger^ S)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->InsertBefore(Index, *((TColStd_SequenceOfInteger*)S->Handle));
}

 void OCTColStd_SequenceOfInteger::InsertAfter(Standard_Integer Index, Standard_Integer T)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->InsertAfter(Index, T);
}

 void OCTColStd_SequenceOfInteger::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfInteger^ S)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->InsertAfter(Index, *((TColStd_SequenceOfInteger*)S->Handle));
}

 Standard_Integer OCTColStd_SequenceOfInteger::First()
{
  return ((TColStd_SequenceOfInteger*)nativeHandle)->First();
}

 Standard_Integer OCTColStd_SequenceOfInteger::Last()
{
  return ((TColStd_SequenceOfInteger*)nativeHandle)->Last();
}

 void OCTColStd_SequenceOfInteger::Split(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfInteger^ Sub)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->Split(Index, *((TColStd_SequenceOfInteger*)Sub->Handle));
}

 Standard_Integer OCTColStd_SequenceOfInteger::Value(Standard_Integer Index)
{
  return ((TColStd_SequenceOfInteger*)nativeHandle)->Value(Index);
}

 void OCTColStd_SequenceOfInteger::SetValue(Standard_Integer Index, Standard_Integer I)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->SetValue(Index, I);
}

 Standard_Integer OCTColStd_SequenceOfInteger::ChangeValue(Standard_Integer Index)
{
  return ((TColStd_SequenceOfInteger*)nativeHandle)->ChangeValue(Index);
}

 void OCTColStd_SequenceOfInteger::Remove(Standard_Integer Index)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->Remove(Index);
}

 void OCTColStd_SequenceOfInteger::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((TColStd_SequenceOfInteger*)nativeHandle)->Remove(FromIndex, ToIndex);
}


