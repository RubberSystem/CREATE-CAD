// File generated by CPPExt (CPP file)
//

#include "TColStd_Array1OfListOfInteger.h"
#include "../Converter.h"
#include "TColStd_ListOfInteger.h"


using namespace OCNaroWrappers;

OCTColStd_Array1OfListOfInteger::OCTColStd_Array1OfListOfInteger(TColStd_Array1OfListOfInteger* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTColStd_Array1OfListOfInteger::OCTColStd_Array1OfListOfInteger(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TColStd_Array1OfListOfInteger(Low, Up);
}

OCTColStd_Array1OfListOfInteger::OCTColStd_Array1OfListOfInteger(OCNaroWrappers::OCTColStd_ListOfInteger^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TColStd_Array1OfListOfInteger(*((TColStd_ListOfInteger*)Item->Handle), Low, Up);
}

 void OCTColStd_Array1OfListOfInteger::Init(OCNaroWrappers::OCTColStd_ListOfInteger^ V)
{
  ((TColStd_Array1OfListOfInteger*)nativeHandle)->Init(*((TColStd_ListOfInteger*)V->Handle));
}

 System::Boolean OCTColStd_Array1OfListOfInteger::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_Array1OfListOfInteger*)nativeHandle)->IsAllocated());
}

OCTColStd_Array1OfListOfInteger^ OCTColStd_Array1OfListOfInteger::Assign(OCNaroWrappers::OCTColStd_Array1OfListOfInteger^ Other)
{
  TColStd_Array1OfListOfInteger* tmp = new TColStd_Array1OfListOfInteger(0, 0);
  *tmp = ((TColStd_Array1OfListOfInteger*)nativeHandle)->Assign(*((TColStd_Array1OfListOfInteger*)Other->Handle));
  return gcnew OCTColStd_Array1OfListOfInteger(tmp);
}

 Standard_Integer OCTColStd_Array1OfListOfInteger::Length()
{
  return ((TColStd_Array1OfListOfInteger*)nativeHandle)->Length();
}

 Standard_Integer OCTColStd_Array1OfListOfInteger::Lower()
{
  return ((TColStd_Array1OfListOfInteger*)nativeHandle)->Lower();
}

 Standard_Integer OCTColStd_Array1OfListOfInteger::Upper()
{
  return ((TColStd_Array1OfListOfInteger*)nativeHandle)->Upper();
}

 void OCTColStd_Array1OfListOfInteger::SetValue(Standard_Integer Index, OCNaroWrappers::OCTColStd_ListOfInteger^ Value)
{
  ((TColStd_Array1OfListOfInteger*)nativeHandle)->SetValue(Index, *((TColStd_ListOfInteger*)Value->Handle));
}

OCTColStd_ListOfInteger^ OCTColStd_Array1OfListOfInteger::Value(Standard_Integer Index)
{
  TColStd_ListOfInteger* tmp = new TColStd_ListOfInteger();
  *tmp = ((TColStd_Array1OfListOfInteger*)nativeHandle)->Value(Index);
  return gcnew OCTColStd_ListOfInteger(tmp);
}

OCTColStd_ListOfInteger^ OCTColStd_Array1OfListOfInteger::ChangeValue(Standard_Integer Index)
{
  TColStd_ListOfInteger* tmp = new TColStd_ListOfInteger();
  *tmp = ((TColStd_Array1OfListOfInteger*)nativeHandle)->ChangeValue(Index);
  return gcnew OCTColStd_ListOfInteger(tmp);
}


