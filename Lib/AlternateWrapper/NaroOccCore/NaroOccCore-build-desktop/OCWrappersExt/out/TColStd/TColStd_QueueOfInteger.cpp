// File generated by CPPExt (CPP file)
//

#include "TColStd_QueueOfInteger.h"
#include "../Converter.h"
#include "TColStd_QueueNodeOfQueueOfInteger.h"


using namespace OCNaroWrappers;

OCTColStd_QueueOfInteger::OCTColStd_QueueOfInteger(TColStd_QueueOfInteger* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTColStd_QueueOfInteger::OCTColStd_QueueOfInteger() 
{
  nativeHandle = new TColStd_QueueOfInteger();
}

OCTColStd_QueueOfInteger^ OCTColStd_QueueOfInteger::Assign(OCNaroWrappers::OCTColStd_QueueOfInteger^ Other)
{
  TColStd_QueueOfInteger* tmp = new TColStd_QueueOfInteger();
  *tmp = ((TColStd_QueueOfInteger*)nativeHandle)->Assign(*((TColStd_QueueOfInteger*)Other->Handle));
  return gcnew OCTColStd_QueueOfInteger(tmp);
}

 Standard_Integer OCTColStd_QueueOfInteger::Length()
{
  return ((TColStd_QueueOfInteger*)nativeHandle)->Length();
}

 System::Boolean OCTColStd_QueueOfInteger::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_QueueOfInteger*)nativeHandle)->IsEmpty());
}

 Standard_Integer OCTColStd_QueueOfInteger::Front()
{
  return ((TColStd_QueueOfInteger*)nativeHandle)->Front();
}

 void OCTColStd_QueueOfInteger::Push(Standard_Integer T)
{
  ((TColStd_QueueOfInteger*)nativeHandle)->Push(T);
}

 void OCTColStd_QueueOfInteger::Pop()
{
  ((TColStd_QueueOfInteger*)nativeHandle)->Pop();
}

 Standard_Integer OCTColStd_QueueOfInteger::ChangeFront()
{
  return ((TColStd_QueueOfInteger*)nativeHandle)->ChangeFront();
}


