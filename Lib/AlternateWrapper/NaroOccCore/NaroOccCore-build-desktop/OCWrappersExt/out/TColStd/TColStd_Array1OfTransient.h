// File generated by CPPExt (MPV)
//
#ifndef _TColStd_Array1OfTransient_OCWrappers_HeaderFile
#define _TColStd_Array1OfTransient_OCWrappers_HeaderFile

// include native header
#include <TColStd_Array1OfTransient.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCStandard_Transient;



public ref class OCTColStd_Array1OfTransient  {

protected:
  TColStd_Array1OfTransient* nativeHandle;
  OCTColStd_Array1OfTransient(OCDummy^) {};

public:
  property TColStd_Array1OfTransient* Handle
  {
    TColStd_Array1OfTransient* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTColStd_Array1OfTransient(TColStd_Array1OfTransient* nativeHandle);

// Methods PUBLIC


OCTColStd_Array1OfTransient(Standard_Integer Low, Standard_Integer Up);


OCTColStd_Array1OfTransient(OCNaroWrappers::OCStandard_Transient^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCStandard_Transient^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCTColStd_Array1OfTransient^ Assign(OCNaroWrappers::OCTColStd_Array1OfTransient^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCStandard_Transient^ Value) ;


 /*instead*/  OCStandard_Transient^ Value(Standard_Integer Index) ;


 /*instead*/  OCStandard_Transient^ ChangeValue(Standard_Integer Index) ;

~OCTColStd_Array1OfTransient()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
