// File generated by CPPExt (CPP file)
//

#include "TColStd_StackOfTransient.h"
#include "../Converter.h"
#include "TColStd_StackIteratorOfStackOfTransient.h"
#include "../Standard/Standard_Transient.h"
#include "TColStd_StackNodeOfStackOfTransient.h"


using namespace OCNaroWrappers;

OCTColStd_StackOfTransient::OCTColStd_StackOfTransient(TColStd_StackOfTransient* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTColStd_StackOfTransient::OCTColStd_StackOfTransient() 
{
  nativeHandle = new TColStd_StackOfTransient();
}

OCTColStd_StackOfTransient^ OCTColStd_StackOfTransient::Assign(OCNaroWrappers::OCTColStd_StackOfTransient^ Other)
{
  TColStd_StackOfTransient* tmp = new TColStd_StackOfTransient();
  *tmp = ((TColStd_StackOfTransient*)nativeHandle)->Assign(*((TColStd_StackOfTransient*)Other->Handle));
  return gcnew OCTColStd_StackOfTransient(tmp);
}

 System::Boolean OCTColStd_StackOfTransient::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_StackOfTransient*)nativeHandle)->IsEmpty());
}

 Standard_Integer OCTColStd_StackOfTransient::Depth()
{
  return ((TColStd_StackOfTransient*)nativeHandle)->Depth();
}

OCStandard_Transient^ OCTColStd_StackOfTransient::Top()
{
  Handle(Standard_Transient) tmp = ((TColStd_StackOfTransient*)nativeHandle)->Top();
  return gcnew OCStandard_Transient(&tmp);
}

 void OCTColStd_StackOfTransient::Push(OCNaroWrappers::OCStandard_Transient^ I)
{
  ((TColStd_StackOfTransient*)nativeHandle)->Push(*((Handle_Standard_Transient*)I->Handle));
}

 void OCTColStd_StackOfTransient::Pop()
{
  ((TColStd_StackOfTransient*)nativeHandle)->Pop();
}

OCStandard_Transient^ OCTColStd_StackOfTransient::ChangeTop()
{
  Handle(Standard_Transient) tmp = ((TColStd_StackOfTransient*)nativeHandle)->ChangeTop();
  return gcnew OCStandard_Transient(&tmp);
}


