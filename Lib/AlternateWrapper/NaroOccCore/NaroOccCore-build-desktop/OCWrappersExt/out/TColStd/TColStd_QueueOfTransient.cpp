// File generated by CPPExt (CPP file)
//

#include "TColStd_QueueOfTransient.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "TColStd_QueueNodeOfQueueOfTransient.h"


using namespace OCNaroWrappers;

OCTColStd_QueueOfTransient::OCTColStd_QueueOfTransient(TColStd_QueueOfTransient* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTColStd_QueueOfTransient::OCTColStd_QueueOfTransient() 
{
  nativeHandle = new TColStd_QueueOfTransient();
}

OCTColStd_QueueOfTransient^ OCTColStd_QueueOfTransient::Assign(OCNaroWrappers::OCTColStd_QueueOfTransient^ Other)
{
  TColStd_QueueOfTransient* tmp = new TColStd_QueueOfTransient();
  *tmp = ((TColStd_QueueOfTransient*)nativeHandle)->Assign(*((TColStd_QueueOfTransient*)Other->Handle));
  return gcnew OCTColStd_QueueOfTransient(tmp);
}

 Standard_Integer OCTColStd_QueueOfTransient::Length()
{
  return ((TColStd_QueueOfTransient*)nativeHandle)->Length();
}

 System::Boolean OCTColStd_QueueOfTransient::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_QueueOfTransient*)nativeHandle)->IsEmpty());
}

OCStandard_Transient^ OCTColStd_QueueOfTransient::Front()
{
  Handle(Standard_Transient) tmp = ((TColStd_QueueOfTransient*)nativeHandle)->Front();
  return gcnew OCStandard_Transient(&tmp);
}

 void OCTColStd_QueueOfTransient::Push(OCNaroWrappers::OCStandard_Transient^ T)
{
  ((TColStd_QueueOfTransient*)nativeHandle)->Push(*((Handle_Standard_Transient*)T->Handle));
}

 void OCTColStd_QueueOfTransient::Pop()
{
  ((TColStd_QueueOfTransient*)nativeHandle)->Pop();
}

OCStandard_Transient^ OCTColStd_QueueOfTransient::ChangeFront()
{
  Handle(Standard_Transient) tmp = ((TColStd_QueueOfTransient*)nativeHandle)->ChangeFront();
  return gcnew OCStandard_Transient(&tmp);
}


