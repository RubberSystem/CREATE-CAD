// File generated by CPPExt (CPP file)
//

#include "TColStd_MapOfInteger.h"
#include "../Converter.h"
#include "TColStd_MapIntegerHasher.h"
#include "TColStd_StdMapNodeOfMapOfInteger.h"
#include "TColStd_MapIteratorOfMapOfInteger.h"


using namespace OCNaroWrappers;

OCTColStd_MapOfInteger::OCTColStd_MapOfInteger(TColStd_MapOfInteger* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTColStd_MapOfInteger::OCTColStd_MapOfInteger(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TColStd_MapOfInteger(NbBuckets);
}

OCTColStd_MapOfInteger^ OCTColStd_MapOfInteger::Assign(OCNaroWrappers::OCTColStd_MapOfInteger^ Other)
{
  TColStd_MapOfInteger* tmp = new TColStd_MapOfInteger(0);
  *tmp = ((TColStd_MapOfInteger*)nativeHandle)->Assign(*((TColStd_MapOfInteger*)Other->Handle));
  return gcnew OCTColStd_MapOfInteger(tmp);
}

 void OCTColStd_MapOfInteger::ReSize(Standard_Integer NbBuckets)
{
  ((TColStd_MapOfInteger*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCTColStd_MapOfInteger::Add(Standard_Integer aKey)
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_MapOfInteger*)nativeHandle)->Add(aKey));
}

 System::Boolean OCTColStd_MapOfInteger::Contains(Standard_Integer aKey)
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_MapOfInteger*)nativeHandle)->Contains(aKey));
}

 System::Boolean OCTColStd_MapOfInteger::Remove(Standard_Integer aKey)
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_MapOfInteger*)nativeHandle)->Remove(aKey));
}


