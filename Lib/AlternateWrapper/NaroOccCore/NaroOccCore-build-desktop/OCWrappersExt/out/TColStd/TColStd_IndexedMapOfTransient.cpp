// File generated by CPPExt (CPP file)
//

#include "TColStd_IndexedMapOfTransient.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "TColStd_MapTransientHasher.h"
#include "TColStd_IndexedMapNodeOfIndexedMapOfTransient.h"


using namespace OCNaroWrappers;

OCTColStd_IndexedMapOfTransient::OCTColStd_IndexedMapOfTransient(TColStd_IndexedMapOfTransient* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTColStd_IndexedMapOfTransient::OCTColStd_IndexedMapOfTransient(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TColStd_IndexedMapOfTransient(NbBuckets);
}

OCTColStd_IndexedMapOfTransient^ OCTColStd_IndexedMapOfTransient::Assign(OCNaroWrappers::OCTColStd_IndexedMapOfTransient^ Other)
{
  TColStd_IndexedMapOfTransient* tmp = new TColStd_IndexedMapOfTransient(0);
  *tmp = ((TColStd_IndexedMapOfTransient*)nativeHandle)->Assign(*((TColStd_IndexedMapOfTransient*)Other->Handle));
  return gcnew OCTColStd_IndexedMapOfTransient(tmp);
}

 void OCTColStd_IndexedMapOfTransient::ReSize(Standard_Integer NbBuckets)
{
  ((TColStd_IndexedMapOfTransient*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCTColStd_IndexedMapOfTransient::Add(OCNaroWrappers::OCStandard_Transient^ K)
{
  return ((TColStd_IndexedMapOfTransient*)nativeHandle)->Add(*((Handle_Standard_Transient*)K->Handle));
}

 void OCTColStd_IndexedMapOfTransient::Substitute(Standard_Integer I, OCNaroWrappers::OCStandard_Transient^ K)
{
  ((TColStd_IndexedMapOfTransient*)nativeHandle)->Substitute(I, *((Handle_Standard_Transient*)K->Handle));
}

 void OCTColStd_IndexedMapOfTransient::RemoveLast()
{
  ((TColStd_IndexedMapOfTransient*)nativeHandle)->RemoveLast();
}

 System::Boolean OCTColStd_IndexedMapOfTransient::Contains(OCNaroWrappers::OCStandard_Transient^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_IndexedMapOfTransient*)nativeHandle)->Contains(*((Handle_Standard_Transient*)K->Handle)));
}

OCStandard_Transient^ OCTColStd_IndexedMapOfTransient::FindKey(Standard_Integer I)
{
  Handle(Standard_Transient) tmp = ((TColStd_IndexedMapOfTransient*)nativeHandle)->FindKey(I);
  return gcnew OCStandard_Transient(&tmp);
}

 Standard_Integer OCTColStd_IndexedMapOfTransient::FindIndex(OCNaroWrappers::OCStandard_Transient^ K)
{
  return ((TColStd_IndexedMapOfTransient*)nativeHandle)->FindIndex(*((Handle_Standard_Transient*)K->Handle));
}


