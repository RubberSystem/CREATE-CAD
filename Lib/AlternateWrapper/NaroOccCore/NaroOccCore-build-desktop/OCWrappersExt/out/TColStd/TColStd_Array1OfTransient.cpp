// File generated by CPPExt (CPP file)
//

#include "TColStd_Array1OfTransient.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"


using namespace OCNaroWrappers;

OCTColStd_Array1OfTransient::OCTColStd_Array1OfTransient(TColStd_Array1OfTransient* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTColStd_Array1OfTransient::OCTColStd_Array1OfTransient(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TColStd_Array1OfTransient(Low, Up);
}

OCTColStd_Array1OfTransient::OCTColStd_Array1OfTransient(OCNaroWrappers::OCStandard_Transient^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TColStd_Array1OfTransient(*((Handle_Standard_Transient*)Item->Handle), Low, Up);
}

 void OCTColStd_Array1OfTransient::Init(OCNaroWrappers::OCStandard_Transient^ V)
{
  ((TColStd_Array1OfTransient*)nativeHandle)->Init(*((Handle_Standard_Transient*)V->Handle));
}

 System::Boolean OCTColStd_Array1OfTransient::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_Array1OfTransient*)nativeHandle)->IsAllocated());
}

OCTColStd_Array1OfTransient^ OCTColStd_Array1OfTransient::Assign(OCNaroWrappers::OCTColStd_Array1OfTransient^ Other)
{
  TColStd_Array1OfTransient* tmp = new TColStd_Array1OfTransient(0, 0);
  *tmp = ((TColStd_Array1OfTransient*)nativeHandle)->Assign(*((TColStd_Array1OfTransient*)Other->Handle));
  return gcnew OCTColStd_Array1OfTransient(tmp);
}

 Standard_Integer OCTColStd_Array1OfTransient::Length()
{
  return ((TColStd_Array1OfTransient*)nativeHandle)->Length();
}

 Standard_Integer OCTColStd_Array1OfTransient::Lower()
{
  return ((TColStd_Array1OfTransient*)nativeHandle)->Lower();
}

 Standard_Integer OCTColStd_Array1OfTransient::Upper()
{
  return ((TColStd_Array1OfTransient*)nativeHandle)->Upper();
}

 void OCTColStd_Array1OfTransient::SetValue(Standard_Integer Index, OCNaroWrappers::OCStandard_Transient^ Value)
{
  ((TColStd_Array1OfTransient*)nativeHandle)->SetValue(Index, *((Handle_Standard_Transient*)Value->Handle));
}

OCStandard_Transient^ OCTColStd_Array1OfTransient::Value(Standard_Integer Index)
{
  Handle(Standard_Transient) tmp = ((TColStd_Array1OfTransient*)nativeHandle)->Value(Index);
  return gcnew OCStandard_Transient(&tmp);
}

OCStandard_Transient^ OCTColStd_Array1OfTransient::ChangeValue(Standard_Integer Index)
{
  Handle(Standard_Transient) tmp = ((TColStd_Array1OfTransient*)nativeHandle)->ChangeValue(Index);
  return gcnew OCStandard_Transient(&tmp);
}


