// File generated by CPPExt (MPV)
//
#ifndef _TColStd_SetOfInteger_OCWrappers_HeaderFile
#define _TColStd_SetOfInteger_OCWrappers_HeaderFile

// include native header
#include <TColStd_SetOfInteger.hxx>
#include "../Converter.h"


#include "TColStd_SetListOfSetOfInteger.h"


namespace OCNaroWrappers
{

ref class OCTColStd_SetIteratorOfSetOfInteger;
ref class OCTColStd_SetListOfSetOfInteger;
ref class OCTColStd_ListNodeOfSetListOfSetOfInteger;
ref class OCTColStd_ListIteratorOfSetListOfSetOfInteger;



public ref class OCTColStd_SetOfInteger  {

protected:
  TColStd_SetOfInteger* nativeHandle;
  OCTColStd_SetOfInteger(OCDummy^) {};

public:
  property TColStd_SetOfInteger* Handle
  {
    TColStd_SetOfInteger* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTColStd_SetOfInteger(TColStd_SetOfInteger* nativeHandle);

// Methods PUBLIC


OCTColStd_SetOfInteger();


 /*instead*/  Standard_Integer Extent() ;


 /*instead*/  System::Boolean IsEmpty() ;


 /*instead*/  void Clear() ;


 /*instead*/  System::Boolean Add(Standard_Integer T) ;


 /*instead*/  System::Boolean Remove(Standard_Integer T) ;


 /*instead*/  void Union(OCNaroWrappers::OCTColStd_SetOfInteger^ B) ;


 /*instead*/  void Intersection(OCNaroWrappers::OCTColStd_SetOfInteger^ B) ;


 /*instead*/  void Difference(OCNaroWrappers::OCTColStd_SetOfInteger^ B) ;


 /*instead*/  System::Boolean Contains(Standard_Integer T) ;


 /*instead*/  System::Boolean IsASubset(OCNaroWrappers::OCTColStd_SetOfInteger^ S) ;


 /*instead*/  System::Boolean IsAProperSubset(OCNaroWrappers::OCTColStd_SetOfInteger^ S) ;

~OCTColStd_SetOfInteger()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
