// File generated by CPPExt (CPP file)
//

#include "TColStd_SequenceOfAsciiString.h"
#include "../Converter.h"
#include "../TCollection/TCollection_AsciiString.h"
#include "TColStd_SequenceNodeOfSequenceOfAsciiString.h"


using namespace OCNaroWrappers;

OCTColStd_SequenceOfAsciiString::OCTColStd_SequenceOfAsciiString(TColStd_SequenceOfAsciiString* nativeHandle) : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTColStd_SequenceOfAsciiString::OCTColStd_SequenceOfAsciiString() : OCTCollection_BaseSequence((OCDummy^)nullptr)

{
  nativeHandle = new TColStd_SequenceOfAsciiString();
}

OCTColStd_SequenceOfAsciiString^ OCTColStd_SequenceOfAsciiString::Assign(OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ Other)
{
  TColStd_SequenceOfAsciiString* tmp = new TColStd_SequenceOfAsciiString();
  *tmp = ((TColStd_SequenceOfAsciiString*)nativeHandle)->Assign(*((TColStd_SequenceOfAsciiString*)Other->Handle));
  return gcnew OCTColStd_SequenceOfAsciiString(tmp);
}

 void OCTColStd_SequenceOfAsciiString::Append(OCNaroWrappers::OCTCollection_AsciiString^ T)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->Append(*((TCollection_AsciiString*)T->Handle));
}

 void OCTColStd_SequenceOfAsciiString::Append(OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ S)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->Append(*((TColStd_SequenceOfAsciiString*)S->Handle));
}

 void OCTColStd_SequenceOfAsciiString::Prepend(OCNaroWrappers::OCTCollection_AsciiString^ T)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->Prepend(*((TCollection_AsciiString*)T->Handle));
}

 void OCTColStd_SequenceOfAsciiString::Prepend(OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ S)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->Prepend(*((TColStd_SequenceOfAsciiString*)S->Handle));
}

 void OCTColStd_SequenceOfAsciiString::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTCollection_AsciiString^ T)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->InsertBefore(Index, *((TCollection_AsciiString*)T->Handle));
}

 void OCTColStd_SequenceOfAsciiString::InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ S)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->InsertBefore(Index, *((TColStd_SequenceOfAsciiString*)S->Handle));
}

 void OCTColStd_SequenceOfAsciiString::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTCollection_AsciiString^ T)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->InsertAfter(Index, *((TCollection_AsciiString*)T->Handle));
}

 void OCTColStd_SequenceOfAsciiString::InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ S)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->InsertAfter(Index, *((TColStd_SequenceOfAsciiString*)S->Handle));
}

OCTCollection_AsciiString^ OCTColStd_SequenceOfAsciiString::First()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((TColStd_SequenceOfAsciiString*)nativeHandle)->First();
  return gcnew OCTCollection_AsciiString(tmp);
}

OCTCollection_AsciiString^ OCTColStd_SequenceOfAsciiString::Last()
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((TColStd_SequenceOfAsciiString*)nativeHandle)->Last();
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCTColStd_SequenceOfAsciiString::Split(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfAsciiString^ Sub)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->Split(Index, *((TColStd_SequenceOfAsciiString*)Sub->Handle));
}

OCTCollection_AsciiString^ OCTColStd_SequenceOfAsciiString::Value(Standard_Integer Index)
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((TColStd_SequenceOfAsciiString*)nativeHandle)->Value(Index);
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCTColStd_SequenceOfAsciiString::SetValue(Standard_Integer Index, OCNaroWrappers::OCTCollection_AsciiString^ I)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->SetValue(Index, *((TCollection_AsciiString*)I->Handle));
}

OCTCollection_AsciiString^ OCTColStd_SequenceOfAsciiString::ChangeValue(Standard_Integer Index)
{
  TCollection_AsciiString* tmp = new TCollection_AsciiString();
  *tmp = ((TColStd_SequenceOfAsciiString*)nativeHandle)->ChangeValue(Index);
  return gcnew OCTCollection_AsciiString(tmp);
}

 void OCTColStd_SequenceOfAsciiString::Remove(Standard_Integer Index)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->Remove(Index);
}

 void OCTColStd_SequenceOfAsciiString::Remove(Standard_Integer FromIndex, Standard_Integer ToIndex)
{
  ((TColStd_SequenceOfAsciiString*)nativeHandle)->Remove(FromIndex, ToIndex);
}


