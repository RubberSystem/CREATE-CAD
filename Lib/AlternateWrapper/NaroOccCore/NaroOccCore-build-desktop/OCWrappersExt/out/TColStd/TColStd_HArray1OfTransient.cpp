// File generated by CPPExt (CPP file)
//

#include "TColStd_HArray1OfTransient.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "TColStd_Array1OfTransient.h"


using namespace OCNaroWrappers;

OCTColStd_HArray1OfTransient::OCTColStd_HArray1OfTransient(Handle(TColStd_HArray1OfTransient)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TColStd_HArray1OfTransient(*nativeHandle);
}

OCTColStd_HArray1OfTransient::OCTColStd_HArray1OfTransient(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TColStd_HArray1OfTransient(new TColStd_HArray1OfTransient(Low, Up));
}

OCTColStd_HArray1OfTransient::OCTColStd_HArray1OfTransient(Standard_Integer Low, Standard_Integer Up, OCNaroWrappers::OCStandard_Transient^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TColStd_HArray1OfTransient(new TColStd_HArray1OfTransient(Low, Up, *((Handle_Standard_Transient*)V->Handle)));
}

 void OCTColStd_HArray1OfTransient::Init(OCNaroWrappers::OCStandard_Transient^ V)
{
  (*((Handle_TColStd_HArray1OfTransient*)nativeHandle))->Init(*((Handle_Standard_Transient*)V->Handle));
}

 Standard_Integer OCTColStd_HArray1OfTransient::Length()
{
  return (*((Handle_TColStd_HArray1OfTransient*)nativeHandle))->Length();
}

 Standard_Integer OCTColStd_HArray1OfTransient::Lower()
{
  return (*((Handle_TColStd_HArray1OfTransient*)nativeHandle))->Lower();
}

 Standard_Integer OCTColStd_HArray1OfTransient::Upper()
{
  return (*((Handle_TColStd_HArray1OfTransient*)nativeHandle))->Upper();
}

 void OCTColStd_HArray1OfTransient::SetValue(Standard_Integer Index, OCNaroWrappers::OCStandard_Transient^ Value)
{
  (*((Handle_TColStd_HArray1OfTransient*)nativeHandle))->SetValue(Index, *((Handle_Standard_Transient*)Value->Handle));
}

OCStandard_Transient^ OCTColStd_HArray1OfTransient::Value(Standard_Integer Index)
{
  Handle(Standard_Transient) tmp = (*((Handle_TColStd_HArray1OfTransient*)nativeHandle))->Value(Index);
  return gcnew OCStandard_Transient(&tmp);
}

OCStandard_Transient^ OCTColStd_HArray1OfTransient::ChangeValue(Standard_Integer Index)
{
  Handle(Standard_Transient) tmp = (*((Handle_TColStd_HArray1OfTransient*)nativeHandle))->ChangeValue(Index);
  return gcnew OCStandard_Transient(&tmp);
}

OCTColStd_Array1OfTransient^ OCTColStd_HArray1OfTransient::Array1()
{
  TColStd_Array1OfTransient* tmp = new TColStd_Array1OfTransient(0, 0);
  *tmp = (*((Handle_TColStd_HArray1OfTransient*)nativeHandle))->Array1();
  return gcnew OCTColStd_Array1OfTransient(tmp);
}

OCTColStd_Array1OfTransient^ OCTColStd_HArray1OfTransient::ChangeArray1()
{
  TColStd_Array1OfTransient* tmp = new TColStd_Array1OfTransient(0, 0);
  *tmp = (*((Handle_TColStd_HArray1OfTransient*)nativeHandle))->ChangeArray1();
  return gcnew OCTColStd_Array1OfTransient(tmp);
}


