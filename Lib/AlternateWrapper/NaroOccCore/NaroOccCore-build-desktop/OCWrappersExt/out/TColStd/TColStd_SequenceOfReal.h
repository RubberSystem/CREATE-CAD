// File generated by CPPExt (MPV)
//
#ifndef _TColStd_SequenceOfReal_OCWrappers_HeaderFile
#define _TColStd_SequenceOfReal_OCWrappers_HeaderFile

// include native header
#include <TColStd_SequenceOfReal.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BaseSequence.h"

#include "../TCollection/TCollection_BaseSequence.h"


namespace OCNaroWrappers
{

ref class OCTColStd_SequenceNodeOfSequenceOfReal;



public ref class OCTColStd_SequenceOfReal  : public OCTCollection_BaseSequence {

protected:
  // dummy constructor;
  OCTColStd_SequenceOfReal(OCDummy^) : OCTCollection_BaseSequence((OCDummy^)nullptr) {};

public:

// constructor from native
OCTColStd_SequenceOfReal(TColStd_SequenceOfReal* nativeHandle);

// Methods PUBLIC


OCTColStd_SequenceOfReal();


 /*instead*/  OCTColStd_SequenceOfReal^ Assign(OCNaroWrappers::OCTColStd_SequenceOfReal^ Other) ;


 /*instead*/  void Append(Standard_Real T) ;


 /*instead*/  void Append(OCNaroWrappers::OCTColStd_SequenceOfReal^ S) ;


 /*instead*/  void Prepend(Standard_Real T) ;


 /*instead*/  void Prepend(OCNaroWrappers::OCTColStd_SequenceOfReal^ S) ;


 /*instead*/  void InsertBefore(Standard_Integer Index, Standard_Real T) ;


 /*instead*/  void InsertBefore(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfReal^ S) ;


 /*instead*/  void InsertAfter(Standard_Integer Index, Standard_Real T) ;


 /*instead*/  void InsertAfter(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfReal^ S) ;


 /*instead*/  Standard_Real First() ;


 /*instead*/  Standard_Real Last() ;


 /*instead*/  void Split(Standard_Integer Index, OCNaroWrappers::OCTColStd_SequenceOfReal^ Sub) ;


 /*instead*/  Standard_Real Value(Standard_Integer Index) ;


 /*instead*/  void SetValue(Standard_Integer Index, Standard_Real I) ;


 /*instead*/  Standard_Real ChangeValue(Standard_Integer Index) ;


 /*instead*/  void Remove(Standard_Integer Index) ;


 /*instead*/  void Remove(Standard_Integer FromIndex, Standard_Integer ToIndex) ;

~OCTColStd_SequenceOfReal()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
