// File generated by CPPExt (Transient)
//
#ifndef _TColStd_HSetOfInteger_OCWrappers_HeaderFile
#define _TColStd_HSetOfInteger_OCWrappers_HeaderFile

// include the wrapped class
#include <TColStd_HSetOfInteger.hxx>
#include "../Converter.h"

#include "../MMgt/MMgt_TShared.h"

#include "TColStd_SetOfInteger.h"


namespace OCNaroWrappers
{

ref class OCTColStd_SetOfInteger;



public ref class OCTColStd_HSetOfInteger : OCMMgt_TShared {

protected:
  // dummy constructor;
  OCTColStd_HSetOfInteger(OCDummy^) : OCMMgt_TShared((OCDummy^)nullptr) {};

public:

// constructor from native
OCTColStd_HSetOfInteger(Handle(TColStd_HSetOfInteger)* nativeHandle);

// Methods PUBLIC


OCTColStd_HSetOfInteger();


 /*instead*/  Standard_Integer Extent() ;


 /*instead*/  System::Boolean IsEmpty() ;


 /*instead*/  void Clear() ;


 /*instead*/  System::Boolean Add(Standard_Integer T) ;


 /*instead*/  System::Boolean Remove(Standard_Integer T) ;


 /*instead*/  OCTColStd_HSetOfInteger^ Union(OCNaroWrappers::OCTColStd_HSetOfInteger^ B) ;


 /*instead*/  OCTColStd_HSetOfInteger^ Intersection(OCNaroWrappers::OCTColStd_HSetOfInteger^ B) ;


 /*instead*/  OCTColStd_HSetOfInteger^ Difference(OCNaroWrappers::OCTColStd_HSetOfInteger^ B) ;


 /*instead*/  System::Boolean Contains(Standard_Integer T) ;


 /*instead*/  System::Boolean IsASubset(OCNaroWrappers::OCTColStd_HSetOfInteger^ S) ;


 /*instead*/  System::Boolean IsAProperSubset(OCNaroWrappers::OCTColStd_HSetOfInteger^ S) ;


 /*instead*/  OCTColStd_HSetOfInteger^ ShallowCopy() ;


 /*instead*/  OCTColStd_SetOfInteger^ Set() ;


 /*instead*/  OCTColStd_SetOfInteger^ ChangeSet() ;

~OCTColStd_HSetOfInteger()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
