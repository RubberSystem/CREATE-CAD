// File generated by CPPExt (CPP file)
//

#include "TColStd_HArray2OfTransient.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "TColStd_Array2OfTransient.h"


using namespace OCNaroWrappers;

OCTColStd_HArray2OfTransient::OCTColStd_HArray2OfTransient(Handle(TColStd_HArray2OfTransient)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TColStd_HArray2OfTransient(*nativeHandle);
}

OCTColStd_HArray2OfTransient::OCTColStd_HArray2OfTransient(Standard_Integer R1, Standard_Integer R2, Standard_Integer C1, Standard_Integer C2) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TColStd_HArray2OfTransient(new TColStd_HArray2OfTransient(R1, R2, C1, C2));
}

OCTColStd_HArray2OfTransient::OCTColStd_HArray2OfTransient(Standard_Integer R1, Standard_Integer R2, Standard_Integer C1, Standard_Integer C2, OCNaroWrappers::OCStandard_Transient^ V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TColStd_HArray2OfTransient(new TColStd_HArray2OfTransient(R1, R2, C1, C2, *((Handle_Standard_Transient*)V->Handle)));
}

 void OCTColStd_HArray2OfTransient::Init(OCNaroWrappers::OCStandard_Transient^ V)
{
  (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->Init(*((Handle_Standard_Transient*)V->Handle));
}

 Standard_Integer OCTColStd_HArray2OfTransient::ColLength()
{
  return (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->ColLength();
}

 Standard_Integer OCTColStd_HArray2OfTransient::RowLength()
{
  return (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->RowLength();
}

 Standard_Integer OCTColStd_HArray2OfTransient::LowerCol()
{
  return (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->LowerCol();
}

 Standard_Integer OCTColStd_HArray2OfTransient::LowerRow()
{
  return (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->LowerRow();
}

 Standard_Integer OCTColStd_HArray2OfTransient::UpperCol()
{
  return (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->UpperCol();
}

 Standard_Integer OCTColStd_HArray2OfTransient::UpperRow()
{
  return (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->UpperRow();
}

 void OCTColStd_HArray2OfTransient::SetValue(Standard_Integer Row, Standard_Integer Col, OCNaroWrappers::OCStandard_Transient^ Value)
{
  (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->SetValue(Row, Col, *((Handle_Standard_Transient*)Value->Handle));
}

OCStandard_Transient^ OCTColStd_HArray2OfTransient::Value(Standard_Integer Row, Standard_Integer Col)
{
  Handle(Standard_Transient) tmp = (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->Value(Row, Col);
  return gcnew OCStandard_Transient(&tmp);
}

OCStandard_Transient^ OCTColStd_HArray2OfTransient::ChangeValue(Standard_Integer Row, Standard_Integer Col)
{
  Handle(Standard_Transient) tmp = (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->ChangeValue(Row, Col);
  return gcnew OCStandard_Transient(&tmp);
}

OCTColStd_Array2OfTransient^ OCTColStd_HArray2OfTransient::Array2()
{
  TColStd_Array2OfTransient* tmp = new TColStd_Array2OfTransient(0, 0, 0, 0);
  *tmp = (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->Array2();
  return gcnew OCTColStd_Array2OfTransient(tmp);
}

OCTColStd_Array2OfTransient^ OCTColStd_HArray2OfTransient::ChangeArray2()
{
  TColStd_Array2OfTransient* tmp = new TColStd_Array2OfTransient(0, 0, 0, 0);
  *tmp = (*((Handle_TColStd_HArray2OfTransient*)nativeHandle))->ChangeArray2();
  return gcnew OCTColStd_Array2OfTransient(tmp);
}


