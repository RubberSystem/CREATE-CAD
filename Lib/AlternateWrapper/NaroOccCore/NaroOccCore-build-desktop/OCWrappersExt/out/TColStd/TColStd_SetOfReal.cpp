// File generated by CPPExt (CPP file)
//

#include "TColStd_SetOfReal.h"
#include "../Converter.h"
#include "TColStd_SetIteratorOfSetOfReal.h"
#include "TColStd_SetListOfSetOfReal.h"
#include "TColStd_ListNodeOfSetListOfSetOfReal.h"
#include "TColStd_ListIteratorOfSetListOfSetOfReal.h"


using namespace OCNaroWrappers;

OCTColStd_SetOfReal::OCTColStd_SetOfReal(TColStd_SetOfReal* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTColStd_SetOfReal::OCTColStd_SetOfReal() 
{
  nativeHandle = new TColStd_SetOfReal();
}

 Standard_Integer OCTColStd_SetOfReal::Extent()
{
  return ((TColStd_SetOfReal*)nativeHandle)->Extent();
}

 System::Boolean OCTColStd_SetOfReal::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_SetOfReal*)nativeHandle)->IsEmpty());
}

 void OCTColStd_SetOfReal::Clear()
{
  ((TColStd_SetOfReal*)nativeHandle)->Clear();
}

 System::Boolean OCTColStd_SetOfReal::Add(Standard_Real T)
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_SetOfReal*)nativeHandle)->Add(T));
}

 System::Boolean OCTColStd_SetOfReal::Remove(Standard_Real T)
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_SetOfReal*)nativeHandle)->Remove(T));
}

 void OCTColStd_SetOfReal::Union(OCNaroWrappers::OCTColStd_SetOfReal^ B)
{
  ((TColStd_SetOfReal*)nativeHandle)->Union(*((TColStd_SetOfReal*)B->Handle));
}

 void OCTColStd_SetOfReal::Intersection(OCNaroWrappers::OCTColStd_SetOfReal^ B)
{
  ((TColStd_SetOfReal*)nativeHandle)->Intersection(*((TColStd_SetOfReal*)B->Handle));
}

 void OCTColStd_SetOfReal::Difference(OCNaroWrappers::OCTColStd_SetOfReal^ B)
{
  ((TColStd_SetOfReal*)nativeHandle)->Difference(*((TColStd_SetOfReal*)B->Handle));
}

 System::Boolean OCTColStd_SetOfReal::Contains(Standard_Real T)
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_SetOfReal*)nativeHandle)->Contains(T));
}

 System::Boolean OCTColStd_SetOfReal::IsASubset(OCNaroWrappers::OCTColStd_SetOfReal^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_SetOfReal*)nativeHandle)->IsASubset(*((TColStd_SetOfReal*)S->Handle)));
}

 System::Boolean OCTColStd_SetOfReal::IsAProperSubset(OCNaroWrappers::OCTColStd_SetOfReal^ S)
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_SetOfReal*)nativeHandle)->IsAProperSubset(*((TColStd_SetOfReal*)S->Handle)));
}


