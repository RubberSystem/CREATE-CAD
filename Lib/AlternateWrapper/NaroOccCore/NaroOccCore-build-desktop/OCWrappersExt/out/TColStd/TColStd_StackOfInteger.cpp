// File generated by CPPExt (CPP file)
//

#include "TColStd_StackOfInteger.h"
#include "../Converter.h"
#include "TColStd_StackIteratorOfStackOfInteger.h"
#include "TColStd_StackNodeOfStackOfInteger.h"


using namespace OCNaroWrappers;

OCTColStd_StackOfInteger::OCTColStd_StackOfInteger(TColStd_StackOfInteger* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTColStd_StackOfInteger::OCTColStd_StackOfInteger() 
{
  nativeHandle = new TColStd_StackOfInteger();
}

OCTColStd_StackOfInteger^ OCTColStd_StackOfInteger::Assign(OCNaroWrappers::OCTColStd_StackOfInteger^ Other)
{
  TColStd_StackOfInteger* tmp = new TColStd_StackOfInteger();
  *tmp = ((TColStd_StackOfInteger*)nativeHandle)->Assign(*((TColStd_StackOfInteger*)Other->Handle));
  return gcnew OCTColStd_StackOfInteger(tmp);
}

 System::Boolean OCTColStd_StackOfInteger::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TColStd_StackOfInteger*)nativeHandle)->IsEmpty());
}

 Standard_Integer OCTColStd_StackOfInteger::Depth()
{
  return ((TColStd_StackOfInteger*)nativeHandle)->Depth();
}

 Standard_Integer OCTColStd_StackOfInteger::Top()
{
  return ((TColStd_StackOfInteger*)nativeHandle)->Top();
}

 void OCTColStd_StackOfInteger::Push(Standard_Integer I)
{
  ((TColStd_StackOfInteger*)nativeHandle)->Push(I);
}

 void OCTColStd_StackOfInteger::Pop()
{
  ((TColStd_StackOfInteger*)nativeHandle)->Pop();
}

 Standard_Integer OCTColStd_StackOfInteger::ChangeTop()
{
  return ((TColStd_StackOfInteger*)nativeHandle)->ChangeTop();
}


