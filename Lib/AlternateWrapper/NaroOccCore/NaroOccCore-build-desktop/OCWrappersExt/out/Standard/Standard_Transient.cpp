// File generated by CPPExt (CPP file)
//

#include "Standard_Transient.h"
#include "../Converter.h"
#include "Standard_Type.h"


using namespace OCNaroWrappers;

OCStandard_Transient::OCStandard_Transient(Handle(Standard_Transient)* nativeHandle) 
{
  this->nativeHandle = new Handle_Standard_Transient(*nativeHandle);
}

OCStandard_Transient::OCStandard_Transient() 
{}

 Standard_Integer OCStandard_Transient::HashCode(Standard_Integer Upper)
{
  return (*((Handle_Standard_Transient*)nativeHandle))->HashCode(Upper);
}

 void OCStandard_Transient::Delete()
{
  (*((Handle_Standard_Transient*)nativeHandle))->Delete();
}

OCStandard_Type^ OCStandard_Transient::DynamicType()
{
  Handle(Standard_Type) tmp = (*((Handle_Standard_Transient*)nativeHandle))->DynamicType();
  return gcnew OCStandard_Type(&tmp);
}

 System::Boolean OCStandard_Transient::IsInstance(OCNaroWrappers::OCStandard_Type^ TheType)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Standard_Transient*)nativeHandle))->IsInstance(*((Handle_Standard_Type*)TheType->Handle)));
}

 System::Boolean OCStandard_Transient::IsInstance(System::String^ TheTypeName)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Standard_Transient*)nativeHandle))->IsInstance(OCConverter::StringToStandardCString(TheTypeName)));
}

 System::Boolean OCStandard_Transient::IsKind(OCNaroWrappers::OCStandard_Type^ TheType)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Standard_Transient*)nativeHandle))->IsKind(*((Handle_Standard_Type*)TheType->Handle)));
}

 System::Boolean OCStandard_Transient::IsKind(System::String^ TheTypeName)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Standard_Transient*)nativeHandle))->IsKind(OCConverter::StringToStandardCString(TheTypeName)));
}

 Standard_Integer OCStandard_Transient::GetRefCount()
{
  return (*((Handle_Standard_Transient*)nativeHandle))->GetRefCount();
}


