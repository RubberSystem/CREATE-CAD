// File generated by CPPExt (CPP file)
//

#include "Standard_AncestorIterator.h"
#include "../Converter.h"
#include "Standard_Type.h"


using namespace OCNaroWrappers;

OCStandard_AncestorIterator::OCStandard_AncestorIterator(Standard_AncestorIterator* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCStandard_AncestorIterator::OCStandard_AncestorIterator(OCNaroWrappers::OCStandard_AncestorIterator^ anOther) 
{
  nativeHandle = new Standard_AncestorIterator(*((Standard_AncestorIterator*)anOther->Handle));
}

OCStandard_AncestorIterator::OCStandard_AncestorIterator(OCNaroWrappers::OCStandard_Type^ aType) 
{
  nativeHandle = new Standard_AncestorIterator(*((Handle_Standard_Type*)aType->Handle));
}

 void OCStandard_AncestorIterator::Assign(OCNaroWrappers::OCStandard_AncestorIterator^ anOther)
{
  ((Standard_AncestorIterator*)nativeHandle)->Assign(*((Standard_AncestorIterator*)anOther->Handle));
}

 System::Boolean OCStandard_AncestorIterator::More()
{
  return OCConverter::StandardBooleanToBoolean(((Standard_AncestorIterator*)nativeHandle)->More());
}

 void OCStandard_AncestorIterator::Next()
{
  ((Standard_AncestorIterator*)nativeHandle)->Next();
}

OCStandard_AncestorIterator^ OCStandard_AncestorIterator::Iterator()
{
  Standard_AncestorIterator* tmp = new Standard_AncestorIterator(123abc);
  *tmp = ((Standard_AncestorIterator*)nativeHandle)->Iterator();
  return gcnew OCStandard_AncestorIterator(tmp);
}

OCStandard_Type^ OCStandard_AncestorIterator::Value()
{
  Handle(Standard_Type) tmp = ((Standard_AncestorIterator*)nativeHandle)->Value();
  return gcnew OCStandard_Type(&tmp);
}


