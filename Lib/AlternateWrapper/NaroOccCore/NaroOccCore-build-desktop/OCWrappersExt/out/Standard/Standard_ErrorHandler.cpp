// File generated by CPPExt (CPP file)
//

#include "Standard_ErrorHandler.h"
#include "../Converter.h"
#include "Standard_Failure.h"
#include "Standard_ErrorHandlerCallback.h"
#include "Standard_Type.h"


using namespace OCNaroWrappers;

OCStandard_ErrorHandler::OCStandard_ErrorHandler(Standard_ErrorHandler* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCStandard_ErrorHandler::OCStandard_ErrorHandler() 
{
  nativeHandle = new Standard_ErrorHandler();
}

 void OCStandard_ErrorHandler::Unlink()
{
  ((Standard_ErrorHandler*)nativeHandle)->Unlink();
}

 System::Boolean OCStandard_ErrorHandler::Catches(OCNaroWrappers::OCStandard_Type^ aType)
{
  return OCConverter::StandardBooleanToBoolean(((Standard_ErrorHandler*)nativeHandle)->Catches(*((Handle_Standard_Type*)aType->Handle)));
}

 Standard_JmpBuf& OCStandard_ErrorHandler::Label()
{
  return ((Standard_ErrorHandler*)nativeHandle)->Label();
}

OCStandard_Failure^ OCStandard_ErrorHandler::Error()
{
  Handle(Standard_Failure) tmp = ((Standard_ErrorHandler*)nativeHandle)->Error();
  return gcnew OCStandard_Failure(&tmp);
}

OCStandard_Failure^ OCStandard_ErrorHandler::LastCaughtError()
{
  Handle(Standard_Failure) tmp = Standard_ErrorHandler::LastCaughtError();
  return gcnew OCStandard_Failure(&tmp);
}

 System::Boolean OCStandard_ErrorHandler::IsInTryBlock()
{
  return OCConverter::StandardBooleanToBoolean(Standard_ErrorHandler::IsInTryBlock());
}


