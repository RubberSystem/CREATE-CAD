// File generated by CPPExt (CPP file)
//

#include "Dico_DictionaryOfTransient.h"
#include "../Converter.h"
#include "../Standard/Standard_Transient.h"
#include "Dico_IteratorOfDictionaryOfTransient.h"
#include "Dico_StackItemOfDictionaryOfTransient.h"
#include "../TCollection/TCollection_AsciiString.h"


using namespace OCNaroWrappers;

OCDico_DictionaryOfTransient::OCDico_DictionaryOfTransient(Handle(Dico_DictionaryOfTransient)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_Dico_DictionaryOfTransient(*nativeHandle);
}

OCDico_DictionaryOfTransient::OCDico_DictionaryOfTransient() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_Dico_DictionaryOfTransient(new Dico_DictionaryOfTransient());
}

 System::Boolean OCDico_DictionaryOfTransient::HasItem(System::String^ name, System::Boolean exact)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->HasItem(OCConverter::StringToStandardCString(name), OCConverter::BooleanToStandardBoolean(exact)));
}

 System::Boolean OCDico_DictionaryOfTransient::HasItem(OCNaroWrappers::OCTCollection_AsciiString^ name, System::Boolean exact)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->HasItem(*((TCollection_AsciiString*)name->Handle), OCConverter::BooleanToStandardBoolean(exact)));
}

OCStandard_Transient^ OCDico_DictionaryOfTransient::Item(System::String^ name, System::Boolean exact)
{
  Handle(Standard_Transient) tmp = (*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->Item(OCConverter::StringToStandardCString(name), OCConverter::BooleanToStandardBoolean(exact));
  return gcnew OCStandard_Transient(&tmp);
}

OCStandard_Transient^ OCDico_DictionaryOfTransient::Item(OCNaroWrappers::OCTCollection_AsciiString^ name, System::Boolean exact)
{
  Handle(Standard_Transient) tmp = (*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->Item(*((TCollection_AsciiString*)name->Handle), OCConverter::BooleanToStandardBoolean(exact));
  return gcnew OCStandard_Transient(&tmp);
}

 System::Boolean OCDico_DictionaryOfTransient::GetItem(System::String^ name, OCNaroWrappers::OCStandard_Transient^ anitem, System::Boolean exact)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->GetItem(OCConverter::StringToStandardCString(name), *((Handle_Standard_Transient*)anitem->Handle), OCConverter::BooleanToStandardBoolean(exact)));
}

 System::Boolean OCDico_DictionaryOfTransient::GetItem(OCNaroWrappers::OCTCollection_AsciiString^ name, OCNaroWrappers::OCStandard_Transient^ anitem, System::Boolean exact)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->GetItem(*((TCollection_AsciiString*)name->Handle), *((Handle_Standard_Transient*)anitem->Handle), OCConverter::BooleanToStandardBoolean(exact)));
}

 void OCDico_DictionaryOfTransient::SetItem(System::String^ name, OCNaroWrappers::OCStandard_Transient^ anitem, System::Boolean exact)
{
  (*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->SetItem(OCConverter::StringToStandardCString(name), *((Handle_Standard_Transient*)anitem->Handle), OCConverter::BooleanToStandardBoolean(exact));
}

 void OCDico_DictionaryOfTransient::SetItem(OCNaroWrappers::OCTCollection_AsciiString^ name, OCNaroWrappers::OCStandard_Transient^ anitem, System::Boolean exact)
{
  (*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->SetItem(*((TCollection_AsciiString*)name->Handle), *((Handle_Standard_Transient*)anitem->Handle), OCConverter::BooleanToStandardBoolean(exact));
}

OCStandard_Transient^ OCDico_DictionaryOfTransient::NewItem(System::String^ name, System::Boolean& isvalued, System::Boolean exact)
{
  Handle(Standard_Transient) tmp = (*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->NewItem(OCConverter::StringToStandardCString(name), (Standard_Boolean&)(isvalued), OCConverter::BooleanToStandardBoolean(exact));
  return gcnew OCStandard_Transient(&tmp);
}

OCStandard_Transient^ OCDico_DictionaryOfTransient::NewItem(OCNaroWrappers::OCTCollection_AsciiString^ name, System::Boolean& isvalued, System::Boolean exact)
{
  Handle(Standard_Transient) tmp = (*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->NewItem(*((TCollection_AsciiString*)name->Handle), (Standard_Boolean&)(isvalued), OCConverter::BooleanToStandardBoolean(exact));
  return gcnew OCStandard_Transient(&tmp);
}

 System::Boolean OCDico_DictionaryOfTransient::RemoveItem(System::String^ name, System::Boolean cln, System::Boolean exact)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->RemoveItem(OCConverter::StringToStandardCString(name), OCConverter::BooleanToStandardBoolean(cln), OCConverter::BooleanToStandardBoolean(exact)));
}

 System::Boolean OCDico_DictionaryOfTransient::RemoveItem(OCNaroWrappers::OCTCollection_AsciiString^ name, System::Boolean cln, System::Boolean exact)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->RemoveItem(*((TCollection_AsciiString*)name->Handle), OCConverter::BooleanToStandardBoolean(cln), OCConverter::BooleanToStandardBoolean(exact)));
}

 void OCDico_DictionaryOfTransient::Clean()
{
  (*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->Clean();
}

 System::Boolean OCDico_DictionaryOfTransient::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->IsEmpty());
}

 void OCDico_DictionaryOfTransient::Clear()
{
  (*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->Clear();
}

OCDico_DictionaryOfTransient^ OCDico_DictionaryOfTransient::Copy()
{
  Handle(Dico_DictionaryOfTransient) tmp = (*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->Copy();
  return gcnew OCDico_DictionaryOfTransient(&tmp);
}

 System::Boolean OCDico_DictionaryOfTransient::Complete(OCNaroWrappers::OCDico_DictionaryOfTransient^ acell)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_Dico_DictionaryOfTransient*)nativeHandle))->Complete(*((Handle_Dico_DictionaryOfTransient*)acell->Handle)));
}


