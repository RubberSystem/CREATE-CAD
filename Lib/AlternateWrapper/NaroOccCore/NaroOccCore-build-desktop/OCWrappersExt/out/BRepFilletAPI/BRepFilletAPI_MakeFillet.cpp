// File generated by CPPExt (CPP file)
//

#include "BRepFilletAPI_MakeFillet.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../Law/Law_Function.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "../TopOpeBRepBuild/TopOpeBRepBuild_HBuilder.h"
#include "../TopTools/TopTools_ListOfShape.h"
#include "../ChFiDS/ChFiDS_SecHArray1.h"
#include "../Geom/Geom_Surface.h"


using namespace OCNaroWrappers;

OCBRepFilletAPI_MakeFillet::OCBRepFilletAPI_MakeFillet(BRepFilletAPI_MakeFillet* nativeHandle) : OCBRepFilletAPI_LocalOperation((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepFilletAPI_MakeFillet::OCBRepFilletAPI_MakeFillet(OCNaroWrappers::OCTopoDS_Shape^ S, OCChFi3d_FilletShape FShape) : OCBRepFilletAPI_LocalOperation((OCDummy^)nullptr)

{
  nativeHandle = new BRepFilletAPI_MakeFillet(*((TopoDS_Shape*)S->Handle), (ChFi3d_FilletShape)FShape);
}

 void OCBRepFilletAPI_MakeFillet::SetParams(Standard_Real Tang, Standard_Real Tesp, Standard_Real T2d, Standard_Real TApp3d, Standard_Real TolApp2d, Standard_Real Fleche)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetParams(Tang, Tesp, T2d, TApp3d, TolApp2d, Fleche);
}

 void OCBRepFilletAPI_MakeFillet::SetContinuity(OCGeomAbs_Shape InternalContinuity, Standard_Real AngularTolerance)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetContinuity((GeomAbs_Shape)InternalContinuity, AngularTolerance);
}

 void OCBRepFilletAPI_MakeFillet::Add(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->Add(*((TopoDS_Edge*)E->Handle));
}

 void OCBRepFilletAPI_MakeFillet::Add(Standard_Real Radius, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->Add(Radius, *((TopoDS_Edge*)E->Handle));
}

 void OCBRepFilletAPI_MakeFillet::Add(Standard_Real R1, Standard_Real R2, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->Add(R1, R2, *((TopoDS_Edge*)E->Handle));
}

 void OCBRepFilletAPI_MakeFillet::Add(OCNaroWrappers::OCLaw_Function^ L, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->Add(*((Handle_Law_Function*)L->Handle), *((TopoDS_Edge*)E->Handle));
}

 void OCBRepFilletAPI_MakeFillet::Add(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ UandR, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->Add(*((TColgp_Array1OfPnt2d*)UandR->Handle), *((TopoDS_Edge*)E->Handle));
}

 void OCBRepFilletAPI_MakeFillet::SetRadius(Standard_Real Radius, Standard_Integer IC, Standard_Integer IinC)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetRadius(Radius, IC, IinC);
}

 void OCBRepFilletAPI_MakeFillet::SetRadius(Standard_Real R1, Standard_Real R2, Standard_Integer IC, Standard_Integer IinC)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetRadius(R1, R2, IC, IinC);
}

 void OCBRepFilletAPI_MakeFillet::SetRadius(OCNaroWrappers::OCLaw_Function^ L, Standard_Integer IC, Standard_Integer IinC)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetRadius(*((Handle_Law_Function*)L->Handle), IC, IinC);
}

 void OCBRepFilletAPI_MakeFillet::SetRadius(OCNaroWrappers::OCTColgp_Array1OfPnt2d^ UandR, Standard_Integer IC, Standard_Integer IinC)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetRadius(*((TColgp_Array1OfPnt2d*)UandR->Handle), IC, IinC);
}

 void OCBRepFilletAPI_MakeFillet::ResetContour(Standard_Integer IC)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->ResetContour(IC);
}

 System::Boolean OCBRepFilletAPI_MakeFillet::IsConstant(Standard_Integer IC)
{
  return OCConverter::StandardBooleanToBoolean(((BRepFilletAPI_MakeFillet*)nativeHandle)->IsConstant(IC));
}

 Standard_Real OCBRepFilletAPI_MakeFillet::Radius(Standard_Integer IC)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->Radius(IC);
}

 System::Boolean OCBRepFilletAPI_MakeFillet::IsConstant(Standard_Integer IC, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return OCConverter::StandardBooleanToBoolean(((BRepFilletAPI_MakeFillet*)nativeHandle)->IsConstant(IC, *((TopoDS_Edge*)E->Handle)));
}

 Standard_Real OCBRepFilletAPI_MakeFillet::Radius(Standard_Integer IC, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->Radius(IC, *((TopoDS_Edge*)E->Handle));
}

 void OCBRepFilletAPI_MakeFillet::SetRadius(Standard_Real Radius, Standard_Integer IC, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetRadius(Radius, IC, *((TopoDS_Edge*)E->Handle));
}

 void OCBRepFilletAPI_MakeFillet::SetRadius(Standard_Real Radius, Standard_Integer IC, OCNaroWrappers::OCTopoDS_Vertex^ V)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetRadius(Radius, IC, *((TopoDS_Vertex*)V->Handle));
}

 System::Boolean OCBRepFilletAPI_MakeFillet::GetBounds(Standard_Integer IC, OCNaroWrappers::OCTopoDS_Edge^ E, Standard_Real& F, Standard_Real& L)
{
  return OCConverter::StandardBooleanToBoolean(((BRepFilletAPI_MakeFillet*)nativeHandle)->GetBounds(IC, *((TopoDS_Edge*)E->Handle), F, L));
}

OCLaw_Function^ OCBRepFilletAPI_MakeFillet::GetLaw(Standard_Integer IC, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  Handle(Law_Function) tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->GetLaw(IC, *((TopoDS_Edge*)E->Handle));
  return gcnew OCLaw_Function(&tmp);
}

 void OCBRepFilletAPI_MakeFillet::SetLaw(Standard_Integer IC, OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCLaw_Function^ L)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetLaw(IC, *((TopoDS_Edge*)E->Handle), *((Handle_Law_Function*)L->Handle));
}

 void OCBRepFilletAPI_MakeFillet::SetFilletShape(OCChFi3d_FilletShape FShape)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->SetFilletShape((ChFi3d_FilletShape)FShape);
}

 OCChFi3d_FilletShape OCBRepFilletAPI_MakeFillet::GetFilletShape()
{
  return (OCChFi3d_FilletShape)(((BRepFilletAPI_MakeFillet*)nativeHandle)->GetFilletShape());
}

 Standard_Integer OCBRepFilletAPI_MakeFillet::NbContours()
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->NbContours();
}

 Standard_Integer OCBRepFilletAPI_MakeFillet::Contour(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->Contour(*((TopoDS_Edge*)E->Handle));
}

 Standard_Integer OCBRepFilletAPI_MakeFillet::NbEdges(Standard_Integer I)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->NbEdges(I);
}

OCTopoDS_Edge^ OCBRepFilletAPI_MakeFillet::Edge(Standard_Integer I, Standard_Integer J)
{
  TopoDS_Edge* tmp = new TopoDS_Edge();
  *tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->Edge(I, J);
  return gcnew OCTopoDS_Edge(tmp);
}

 void OCBRepFilletAPI_MakeFillet::Remove(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->Remove(*((TopoDS_Edge*)E->Handle));
}

 Standard_Real OCBRepFilletAPI_MakeFillet::Length(Standard_Integer IC)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->Length(IC);
}

OCTopoDS_Vertex^ OCBRepFilletAPI_MakeFillet::FirstVertex(Standard_Integer IC)
{
  TopoDS_Vertex* tmp = new TopoDS_Vertex();
  *tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->FirstVertex(IC);
  return gcnew OCTopoDS_Vertex(tmp);
}

OCTopoDS_Vertex^ OCBRepFilletAPI_MakeFillet::LastVertex(Standard_Integer IC)
{
  TopoDS_Vertex* tmp = new TopoDS_Vertex();
  *tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->LastVertex(IC);
  return gcnew OCTopoDS_Vertex(tmp);
}

 Standard_Real OCBRepFilletAPI_MakeFillet::Abscissa(Standard_Integer IC, OCNaroWrappers::OCTopoDS_Vertex^ V)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->Abscissa(IC, *((TopoDS_Vertex*)V->Handle));
}

 Standard_Real OCBRepFilletAPI_MakeFillet::RelativeAbscissa(Standard_Integer IC, OCNaroWrappers::OCTopoDS_Vertex^ V)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->RelativeAbscissa(IC, *((TopoDS_Vertex*)V->Handle));
}

 System::Boolean OCBRepFilletAPI_MakeFillet::ClosedAndTangent(Standard_Integer IC)
{
  return OCConverter::StandardBooleanToBoolean(((BRepFilletAPI_MakeFillet*)nativeHandle)->ClosedAndTangent(IC));
}

 System::Boolean OCBRepFilletAPI_MakeFillet::Closed(Standard_Integer IC)
{
  return OCConverter::StandardBooleanToBoolean(((BRepFilletAPI_MakeFillet*)nativeHandle)->Closed(IC));
}

 void OCBRepFilletAPI_MakeFillet::Build()
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->Build();
}

 void OCBRepFilletAPI_MakeFillet::Reset()
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->Reset();
}

OCTopOpeBRepBuild_HBuilder^ OCBRepFilletAPI_MakeFillet::Builder()
{
  Handle(TopOpeBRepBuild_HBuilder) tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->Builder();
  return gcnew OCTopOpeBRepBuild_HBuilder(&tmp);
}

OCTopTools_ListOfShape^ OCBRepFilletAPI_MakeFillet::Generated(OCNaroWrappers::OCTopoDS_Shape^ EorV)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->Generated(*((TopoDS_Shape*)EorV->Handle));
  return gcnew OCTopTools_ListOfShape(tmp);
}

OCTopTools_ListOfShape^ OCBRepFilletAPI_MakeFillet::Modified(OCNaroWrappers::OCTopoDS_Shape^ F)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->Modified(*((TopoDS_Shape*)F->Handle));
  return gcnew OCTopTools_ListOfShape(tmp);
}

 System::Boolean OCBRepFilletAPI_MakeFillet::IsDeleted(OCNaroWrappers::OCTopoDS_Shape^ F)
{
  return OCConverter::StandardBooleanToBoolean(((BRepFilletAPI_MakeFillet*)nativeHandle)->IsDeleted(*((TopoDS_Shape*)F->Handle)));
}

 Standard_Integer OCBRepFilletAPI_MakeFillet::NbSurfaces()
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->NbSurfaces();
}

OCTopTools_ListOfShape^ OCBRepFilletAPI_MakeFillet::NewFaces(Standard_Integer I)
{
  TopTools_ListOfShape* tmp = new TopTools_ListOfShape();
  *tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->NewFaces(I);
  return gcnew OCTopTools_ListOfShape(tmp);
}

 void OCBRepFilletAPI_MakeFillet::Simulate(Standard_Integer IC)
{
  ((BRepFilletAPI_MakeFillet*)nativeHandle)->Simulate(IC);
}

 Standard_Integer OCBRepFilletAPI_MakeFillet::NbSurf(Standard_Integer IC)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->NbSurf(IC);
}

OCChFiDS_SecHArray1^ OCBRepFilletAPI_MakeFillet::Sect(Standard_Integer IC, Standard_Integer IS)
{
  Handle(ChFiDS_SecHArray1) tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->Sect(IC, IS);
  return gcnew OCChFiDS_SecHArray1(&tmp);
}

 Standard_Integer OCBRepFilletAPI_MakeFillet::NbFaultyContours()
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->NbFaultyContours();
}

 Standard_Integer OCBRepFilletAPI_MakeFillet::FaultyContour(Standard_Integer I)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->FaultyContour(I);
}

 Standard_Integer OCBRepFilletAPI_MakeFillet::NbComputedSurfaces(Standard_Integer IC)
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->NbComputedSurfaces(IC);
}

OCGeom_Surface^ OCBRepFilletAPI_MakeFillet::ComputedSurface(Standard_Integer IC, Standard_Integer IS)
{
  Handle(Geom_Surface) tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->ComputedSurface(IC, IS);
  return gcnew OCGeom_Surface(&tmp);
}

 Standard_Integer OCBRepFilletAPI_MakeFillet::NbFaultyVertices()
{
  return ((BRepFilletAPI_MakeFillet*)nativeHandle)->NbFaultyVertices();
}

OCTopoDS_Vertex^ OCBRepFilletAPI_MakeFillet::FaultyVertex(Standard_Integer IV)
{
  TopoDS_Vertex* tmp = new TopoDS_Vertex();
  *tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->FaultyVertex(IV);
  return gcnew OCTopoDS_Vertex(tmp);
}

 System::Boolean OCBRepFilletAPI_MakeFillet::HasResult()
{
  return OCConverter::StandardBooleanToBoolean(((BRepFilletAPI_MakeFillet*)nativeHandle)->HasResult());
}

OCTopoDS_Shape^ OCBRepFilletAPI_MakeFillet::BadShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepFilletAPI_MakeFillet*)nativeHandle)->BadShape();
  return gcnew OCTopoDS_Shape(tmp);
}

 OCChFiDS_ErrorStatus OCBRepFilletAPI_MakeFillet::StripeStatus(Standard_Integer IC)
{
  return (OCChFiDS_ErrorStatus)(((BRepFilletAPI_MakeFillet*)nativeHandle)->StripeStatus(IC));
}


