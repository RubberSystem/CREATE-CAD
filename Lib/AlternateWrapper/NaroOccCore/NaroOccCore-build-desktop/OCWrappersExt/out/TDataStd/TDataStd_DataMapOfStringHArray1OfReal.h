// File generated by CPPExt (MPV)
//
#ifndef _TDataStd_DataMapOfStringHArray1OfReal_OCWrappers_HeaderFile
#define _TDataStd_DataMapOfStringHArray1OfReal_OCWrappers_HeaderFile

// include native header
#include <TDataStd_DataMapOfStringHArray1OfReal.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTCollection_ExtendedString;
ref class OCTColStd_HArray1OfReal;
ref class OCTDataStd_DataMapNodeOfDataMapOfStringHArray1OfReal;
ref class OCTDataStd_DataMapIteratorOfDataMapOfStringHArray1OfReal;



public ref class OCTDataStd_DataMapOfStringHArray1OfReal  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCTDataStd_DataMapOfStringHArray1OfReal(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCTDataStd_DataMapOfStringHArray1OfReal(TDataStd_DataMapOfStringHArray1OfReal* nativeHandle);

// Methods PUBLIC


OCTDataStd_DataMapOfStringHArray1OfReal(Standard_Integer NbBuckets);


 /*instead*/  OCTDataStd_DataMapOfStringHArray1OfReal^ Assign(OCNaroWrappers::OCTDataStd_DataMapOfStringHArray1OfReal^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(OCNaroWrappers::OCTCollection_ExtendedString^ K, OCNaroWrappers::OCTColStd_HArray1OfReal^ I) ;


 /*instead*/  System::Boolean IsBound(OCNaroWrappers::OCTCollection_ExtendedString^ K) ;


 /*instead*/  System::Boolean UnBind(OCNaroWrappers::OCTCollection_ExtendedString^ K) ;


 /*instead*/  OCTColStd_HArray1OfReal^ Find(OCNaroWrappers::OCTCollection_ExtendedString^ K) ;


 /*instead*/  OCTColStd_HArray1OfReal^ ChangeFind(OCNaroWrappers::OCTCollection_ExtendedString^ K) ;


 /*instead*/  Standard_Address Find1(OCNaroWrappers::OCTCollection_ExtendedString^ K) ;


 /*instead*/  Standard_Address ChangeFind1(OCNaroWrappers::OCTCollection_ExtendedString^ K) ;

~OCTDataStd_DataMapOfStringHArray1OfReal()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
