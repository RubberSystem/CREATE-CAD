// File generated by CPPExt (CPP file)
//

#include "TDataStd_LabelArray1.h"
#include "../Converter.h"
#include "../TDF/TDF_Label.h"


using namespace OCNaroWrappers;

OCTDataStd_LabelArray1::OCTDataStd_LabelArray1(TDataStd_LabelArray1* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTDataStd_LabelArray1::OCTDataStd_LabelArray1(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TDataStd_LabelArray1(Low, Up);
}

OCTDataStd_LabelArray1::OCTDataStd_LabelArray1(OCNaroWrappers::OCTDF_Label^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TDataStd_LabelArray1(*((TDF_Label*)Item->Handle), Low, Up);
}

 void OCTDataStd_LabelArray1::Init(OCNaroWrappers::OCTDF_Label^ V)
{
  ((TDataStd_LabelArray1*)nativeHandle)->Init(*((TDF_Label*)V->Handle));
}

 System::Boolean OCTDataStd_LabelArray1::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((TDataStd_LabelArray1*)nativeHandle)->IsAllocated());
}

OCTDataStd_LabelArray1^ OCTDataStd_LabelArray1::Assign(OCNaroWrappers::OCTDataStd_LabelArray1^ Other)
{
  TDataStd_LabelArray1* tmp = new TDataStd_LabelArray1(0, 0);
  *tmp = ((TDataStd_LabelArray1*)nativeHandle)->Assign(*((TDataStd_LabelArray1*)Other->Handle));
  return gcnew OCTDataStd_LabelArray1(tmp);
}

 Standard_Integer OCTDataStd_LabelArray1::Length()
{
  return ((TDataStd_LabelArray1*)nativeHandle)->Length();
}

 Standard_Integer OCTDataStd_LabelArray1::Lower()
{
  return ((TDataStd_LabelArray1*)nativeHandle)->Lower();
}

 Standard_Integer OCTDataStd_LabelArray1::Upper()
{
  return ((TDataStd_LabelArray1*)nativeHandle)->Upper();
}

 void OCTDataStd_LabelArray1::SetValue(Standard_Integer Index, OCNaroWrappers::OCTDF_Label^ Value)
{
  ((TDataStd_LabelArray1*)nativeHandle)->SetValue(Index, *((TDF_Label*)Value->Handle));
}

OCTDF_Label^ OCTDataStd_LabelArray1::Value(Standard_Integer Index)
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TDataStd_LabelArray1*)nativeHandle)->Value(Index);
  return gcnew OCTDF_Label(tmp);
}

OCTDF_Label^ OCTDataStd_LabelArray1::ChangeValue(Standard_Integer Index)
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = ((TDataStd_LabelArray1*)nativeHandle)->ChangeValue(Index);
  return gcnew OCTDF_Label(tmp);
}


