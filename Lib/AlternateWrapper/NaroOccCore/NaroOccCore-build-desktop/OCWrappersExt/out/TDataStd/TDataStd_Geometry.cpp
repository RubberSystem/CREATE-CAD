// File generated by CPPExt (CPP file)
//

#include "TDataStd_Geometry.h"
#include "../Converter.h"
#include "../TDF/TDF_Label.h"
#include "../TNaming/TNaming_NamedShape.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Ax1.h"
#include "../gp/gp_Lin.h"
#include "../gp/gp_Circ.h"
#include "../gp/gp_Elips.h"
#include "../gp/gp_Pln.h"
#include "../gp/gp_Cylinder.h"
#include "../Standard/Standard_GUID.h"
#include "../TDF/TDF_Attribute.h"
#include "../TDF/TDF_RelocationTable.h"


using namespace OCNaroWrappers;

OCTDataStd_Geometry::OCTDataStd_Geometry(Handle(TDataStd_Geometry)* nativeHandle) : OCTDF_Attribute((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TDataStd_Geometry(*nativeHandle);
}

OCTDataStd_Geometry^ OCTDataStd_Geometry::Set(OCNaroWrappers::OCTDF_Label^ label)
{
  Handle(TDataStd_Geometry) tmp = TDataStd_Geometry::Set(*((TDF_Label*)label->Handle));
  return gcnew OCTDataStd_Geometry(&tmp);
}

 OCTDataStd_GeometryEnum OCTDataStd_Geometry::Type(OCNaroWrappers::OCTDF_Label^ L)
{
  return (OCTDataStd_GeometryEnum)(TDataStd_Geometry::Type(*((TDF_Label*)L->Handle)));
}

 OCTDataStd_GeometryEnum OCTDataStd_Geometry::Type(OCNaroWrappers::OCTNaming_NamedShape^ S)
{
  return (OCTDataStd_GeometryEnum)(TDataStd_Geometry::Type(*((Handle_TNaming_NamedShape*)S->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Point(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Pnt^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Point(*((TDF_Label*)L->Handle), *((gp_Pnt*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Point(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Pnt^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Point(*((Handle_TNaming_NamedShape*)S->Handle), *((gp_Pnt*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Axis(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Ax1^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Axis(*((TDF_Label*)L->Handle), *((gp_Ax1*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Axis(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Ax1^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Axis(*((Handle_TNaming_NamedShape*)S->Handle), *((gp_Ax1*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Line(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Lin^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Line(*((TDF_Label*)L->Handle), *((gp_Lin*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Line(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Lin^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Line(*((Handle_TNaming_NamedShape*)S->Handle), *((gp_Lin*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Circle(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Circ^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Circle(*((TDF_Label*)L->Handle), *((gp_Circ*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Circle(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Circ^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Circle(*((Handle_TNaming_NamedShape*)S->Handle), *((gp_Circ*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Ellipse(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Elips^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Ellipse(*((TDF_Label*)L->Handle), *((gp_Elips*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Ellipse(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Elips^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Ellipse(*((Handle_TNaming_NamedShape*)S->Handle), *((gp_Elips*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Plane(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Pln^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Plane(*((TDF_Label*)L->Handle), *((gp_Pln*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Plane(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Pln^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Plane(*((Handle_TNaming_NamedShape*)S->Handle), *((gp_Pln*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Cylinder(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Cylinder^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Cylinder(*((TDF_Label*)L->Handle), *((gp_Cylinder*)G->Handle)));
}

 System::Boolean OCTDataStd_Geometry::Cylinder(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Cylinder^ G)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_Geometry::Cylinder(*((Handle_TNaming_NamedShape*)S->Handle), *((gp_Cylinder*)G->Handle)));
}

OCStandard_GUID^ OCTDataStd_Geometry::GetID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = TDataStd_Geometry::GetID();
  return gcnew OCStandard_GUID(tmp);
}

OCTDataStd_Geometry::OCTDataStd_Geometry() : OCTDF_Attribute((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TDataStd_Geometry(new TDataStd_Geometry());
}

 void OCTDataStd_Geometry::SetType(OCTDataStd_GeometryEnum T)
{
  (*((Handle_TDataStd_Geometry*)nativeHandle))->SetType((TDataStd_GeometryEnum)T);
}

 OCTDataStd_GeometryEnum OCTDataStd_Geometry::GetType()
{
  return (OCTDataStd_GeometryEnum)((*((Handle_TDataStd_Geometry*)nativeHandle))->GetType());
}

OCStandard_GUID^ OCTDataStd_Geometry::ID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = (*((Handle_TDataStd_Geometry*)nativeHandle))->ID();
  return gcnew OCStandard_GUID(tmp);
}

 void OCTDataStd_Geometry::Restore(OCNaroWrappers::OCTDF_Attribute^ with)
{
  (*((Handle_TDataStd_Geometry*)nativeHandle))->Restore(*((Handle_TDF_Attribute*)with->Handle));
}

OCTDF_Attribute^ OCTDataStd_Geometry::NewEmpty()
{
  Handle(TDF_Attribute) tmp = (*((Handle_TDataStd_Geometry*)nativeHandle))->NewEmpty();
  return gcnew OCTDF_Attribute(&tmp);
}

 void OCTDataStd_Geometry::Paste(OCNaroWrappers::OCTDF_Attribute^ into, OCNaroWrappers::OCTDF_RelocationTable^ RT)
{
  (*((Handle_TDataStd_Geometry*)nativeHandle))->Paste(*((Handle_TDF_Attribute*)into->Handle), *((Handle_TDF_RelocationTable*)RT->Handle));
}

 Standard_OStream& OCTDataStd_Geometry::Dump(Standard_OStream& anOS)
{
  return (*((Handle_TDataStd_Geometry*)nativeHandle))->Dump(anOS);
}


