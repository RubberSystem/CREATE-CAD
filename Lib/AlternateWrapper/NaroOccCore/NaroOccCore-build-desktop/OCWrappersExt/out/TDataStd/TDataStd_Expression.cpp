// File generated by CPPExt (CPP file)
//

#include "TDataStd_Expression.h"
#include "../Converter.h"
#include "../Standard/Standard_GUID.h"
#include "../TDF/TDF_Label.h"
#include "../TCollection/TCollection_ExtendedString.h"
#include "../TDF/TDF_AttributeList.h"
#include "../TDF/TDF_Attribute.h"
#include "../TDF/TDF_RelocationTable.h"


using namespace OCNaroWrappers;

OCTDataStd_Expression::OCTDataStd_Expression(Handle(TDataStd_Expression)* nativeHandle) : OCTDF_Attribute((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TDataStd_Expression(*nativeHandle);
}

OCStandard_GUID^ OCTDataStd_Expression::GetID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = TDataStd_Expression::GetID();
  return gcnew OCStandard_GUID(tmp);
}

OCTDataStd_Expression^ OCTDataStd_Expression::Set(OCNaroWrappers::OCTDF_Label^ label)
{
  Handle(TDataStd_Expression) tmp = TDataStd_Expression::Set(*((TDF_Label*)label->Handle));
  return gcnew OCTDataStd_Expression(&tmp);
}

OCTDataStd_Expression::OCTDataStd_Expression() : OCTDF_Attribute((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TDataStd_Expression(new TDataStd_Expression());
}

OCTCollection_ExtendedString^ OCTDataStd_Expression::Name()
{
  TCollection_ExtendedString* tmp = new TCollection_ExtendedString();
  *tmp = (*((Handle_TDataStd_Expression*)nativeHandle))->Name();
  return gcnew OCTCollection_ExtendedString(tmp);
}

 void OCTDataStd_Expression::SetExpression(OCNaroWrappers::OCTCollection_ExtendedString^ E)
{
  (*((Handle_TDataStd_Expression*)nativeHandle))->SetExpression(*((TCollection_ExtendedString*)E->Handle));
}

OCTCollection_ExtendedString^ OCTDataStd_Expression::GetExpression()
{
  TCollection_ExtendedString* tmp = new TCollection_ExtendedString();
  *tmp = (*((Handle_TDataStd_Expression*)nativeHandle))->GetExpression();
  return gcnew OCTCollection_ExtendedString(tmp);
}

OCTDF_AttributeList^ OCTDataStd_Expression::GetVariables()
{
  TDF_AttributeList* tmp = new TDF_AttributeList();
  *tmp = (*((Handle_TDataStd_Expression*)nativeHandle))->GetVariables();
  return gcnew OCTDF_AttributeList(tmp);
}

OCStandard_GUID^ OCTDataStd_Expression::ID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = (*((Handle_TDataStd_Expression*)nativeHandle))->ID();
  return gcnew OCStandard_GUID(tmp);
}

 void OCTDataStd_Expression::Restore(OCNaroWrappers::OCTDF_Attribute^ With)
{
  (*((Handle_TDataStd_Expression*)nativeHandle))->Restore(*((Handle_TDF_Attribute*)With->Handle));
}

OCTDF_Attribute^ OCTDataStd_Expression::NewEmpty()
{
  Handle(TDF_Attribute) tmp = (*((Handle_TDataStd_Expression*)nativeHandle))->NewEmpty();
  return gcnew OCTDF_Attribute(&tmp);
}

 void OCTDataStd_Expression::Paste(OCNaroWrappers::OCTDF_Attribute^ Into, OCNaroWrappers::OCTDF_RelocationTable^ RT)
{
  (*((Handle_TDataStd_Expression*)nativeHandle))->Paste(*((Handle_TDF_Attribute*)Into->Handle), *((Handle_TDF_RelocationTable*)RT->Handle));
}

 Standard_OStream& OCTDataStd_Expression::Dump(Standard_OStream& anOS)
{
  return (*((Handle_TDataStd_Expression*)nativeHandle))->Dump(anOS);
}


