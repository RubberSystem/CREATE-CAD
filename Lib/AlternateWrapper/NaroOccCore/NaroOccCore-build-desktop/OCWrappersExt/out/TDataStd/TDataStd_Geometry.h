// File generated by CPPExt (Transient)
//
#ifndef _TDataStd_Geometry_OCWrappers_HeaderFile
#define _TDataStd_Geometry_OCWrappers_HeaderFile

// include the wrapped class
#include <TDataStd_Geometry.hxx>
#include "../Converter.h"

#include "../TDF/TDF_Attribute.h"

#include "TDataStd_GeometryEnum.h"


namespace OCNaroWrappers
{

ref class OCTDF_Label;
ref class OCTNaming_NamedShape;
ref class OCgp_Pnt;
ref class OCgp_Ax1;
ref class OCgp_Lin;
ref class OCgp_Circ;
ref class OCgp_Elips;
ref class OCgp_Pln;
ref class OCgp_Cylinder;
ref class OCStandard_GUID;
ref class OCTDF_Attribute;
ref class OCTDF_RelocationTable;


//! This class is used to model construction geometry. <br>
//! The specific geometric construction of the <br>
//!  attribute is defined by an element of the <br>
//! enumeration TDataStd_GeometryEnum. <br>
//!      This attribute may  also be used to qualify  underlying <br>
//!          geometry  of   the  associated NamedShape.     for <br>
//!          Constructuion element by example. <br>
public ref class OCTDataStd_Geometry : OCTDF_Attribute {

protected:
  // dummy constructor;
  OCTDataStd_Geometry(OCDummy^) : OCTDF_Attribute((OCDummy^)nullptr) {};

public:

// constructor from native
OCTDataStd_Geometry(Handle(TDataStd_Geometry)* nativeHandle);

// Methods PUBLIC

//! API class methods <br>
//!         ================= <br>//! Finds, or  creates, a Geometry attribute  defined by the label label. <br>
//! The default type of geometry is the value <br>
//! ANY_GEOM of the enumeration TDataStd_GeometryEnum. <br>
//! To specify another value of this enumeration, use <br>
//! the function SetType. <br>
static /*instead*/  OCTDataStd_Geometry^ Set(OCNaroWrappers::OCTDF_Label^ label) ;


//! Returns the label L used to define the type of <br>
//! geometric construction for the geometry attribute. <br>
static /*instead*/  OCTDataStd_GeometryEnum Type(OCNaroWrappers::OCTDF_Label^ L) ;

//! Returns the topological attribute S used to define <br>
//! the type of geometric construction for the geometry attribute. <br>
static /*instead*/  OCTDataStd_GeometryEnum Type(OCNaroWrappers::OCTNaming_NamedShape^ S) ;


//! Returns the point attribute defined by the label L and the point G. <br>
static /*instead*/  System::Boolean Point(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Pnt^ G) ;


//! Returns the point attribute defined by the topological attribute S and the point G. <br>
static /*instead*/  System::Boolean Point(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Pnt^ G) ;


//! Returns the axis attribute defined by the label L and the axis G. <br>
static /*instead*/  System::Boolean Axis(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Ax1^ G) ;


//! Returns the axis attribute defined by the topological attribute S and the axis G. <br>
static /*instead*/  System::Boolean Axis(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Ax1^ G) ;


//! Returns the line attribute defined by the label L and the line G. <br>
static /*instead*/  System::Boolean Line(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Lin^ G) ;


//! Returns the line attribute defined by the topological attribute S and the line G. <br>
static /*instead*/  System::Boolean Line(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Lin^ G) ;


//! Returns the circle attribute defined by the label L and the circle G. <br>
static /*instead*/  System::Boolean Circle(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Circ^ G) ;


//! Returns the circle attribute defined by the topological attribute S and the circle G. <br>
static /*instead*/  System::Boolean Circle(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Circ^ G) ;


//! Returns the ellipse attribute defined by the label L and the ellipse G. <br>
static /*instead*/  System::Boolean Ellipse(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Elips^ G) ;


//! Returns the ellipse attribute defined by the <br>
//! topological attribute S and the ellipse G. <br>
static /*instead*/  System::Boolean Ellipse(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Elips^ G) ;


//! Returns the plane attribute defined by the label L and the plane G. <br>
static /*instead*/  System::Boolean Plane(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Pln^ G) ;


//! Returns the plane attribute defined by the <br>
//! topological attribute S and the plane G. <br>
static /*instead*/  System::Boolean Plane(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Pln^ G) ;


//! Returns the cylinder attribute defined by the label L and the cylinder G. <br>
static /*instead*/  System::Boolean Cylinder(OCNaroWrappers::OCTDF_Label^ L, OCNaroWrappers::OCgp_Cylinder^ G) ;


//! Returns the cylinder attribute defined by the <br>
//! topological attribute S and the cylinder G. <br>
static /*instead*/  System::Boolean Cylinder(OCNaroWrappers::OCTNaming_NamedShape^ S, OCNaroWrappers::OCgp_Cylinder^ G) ;

//! Returns the GUID for geometry attributes. <br>
static /*instead*/  OCStandard_GUID^ GetID() ;

//! This and the next methods are used to  retrieve  underlying geometry of  the <br>
//!           NamedShape, even   if  noone Geometry   Attribute  is <br>
//!          associated  .  if not  found or not compliant geometry return False. <br>
OCTDataStd_Geometry();

//! Returns the type of geometric construction T of this attribute. <br>
//! T will be a value of the enumeration TDataStd_GeometryEnum. <br>
 /*instead*/  void SetType(OCTDataStd_GeometryEnum T) ;

//! Returns the type of geometric construction. <br>
 /*instead*/  OCTDataStd_GeometryEnum GetType() ;


 /*instead*/  OCStandard_GUID^ ID() ;


 /*instead*/  void Restore(OCNaroWrappers::OCTDF_Attribute^ with) ;


 /*instead*/  OCTDF_Attribute^ NewEmpty() ;


 /*instead*/  void Paste(OCNaroWrappers::OCTDF_Attribute^ into, OCNaroWrappers::OCTDF_RelocationTable^ RT) ;


virtual /*instead*/  Standard_OStream& Dump(Standard_OStream& anOS) override;

~OCTDataStd_Geometry()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
