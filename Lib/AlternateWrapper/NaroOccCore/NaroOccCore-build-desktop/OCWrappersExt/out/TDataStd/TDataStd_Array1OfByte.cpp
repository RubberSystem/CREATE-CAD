// File generated by CPPExt (CPP file)
//

#include "TDataStd_Array1OfByte.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCTDataStd_Array1OfByte::OCTDataStd_Array1OfByte(TDataStd_Array1OfByte* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTDataStd_Array1OfByte::OCTDataStd_Array1OfByte(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TDataStd_Array1OfByte(Low, Up);
}

OCTDataStd_Array1OfByte::OCTDataStd_Array1OfByte(Standard_Byte Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TDataStd_Array1OfByte(Item, Low, Up);
}

 void OCTDataStd_Array1OfByte::Init(Standard_Byte V)
{
  ((TDataStd_Array1OfByte*)nativeHandle)->Init(V);
}

 System::Boolean OCTDataStd_Array1OfByte::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((TDataStd_Array1OfByte*)nativeHandle)->IsAllocated());
}

OCTDataStd_Array1OfByte^ OCTDataStd_Array1OfByte::Assign(OCNaroWrappers::OCTDataStd_Array1OfByte^ Other)
{
  TDataStd_Array1OfByte* tmp = new TDataStd_Array1OfByte(0, 0);
  *tmp = ((TDataStd_Array1OfByte*)nativeHandle)->Assign(*((TDataStd_Array1OfByte*)Other->Handle));
  return gcnew OCTDataStd_Array1OfByte(tmp);
}

 Standard_Integer OCTDataStd_Array1OfByte::Length()
{
  return ((TDataStd_Array1OfByte*)nativeHandle)->Length();
}

 Standard_Integer OCTDataStd_Array1OfByte::Lower()
{
  return ((TDataStd_Array1OfByte*)nativeHandle)->Lower();
}

 Standard_Integer OCTDataStd_Array1OfByte::Upper()
{
  return ((TDataStd_Array1OfByte*)nativeHandle)->Upper();
}

 void OCTDataStd_Array1OfByte::SetValue(Standard_Integer Index, Standard_Byte Value)
{
  ((TDataStd_Array1OfByte*)nativeHandle)->SetValue(Index, Value);
}

 Standard_Byte OCTDataStd_Array1OfByte::Value(Standard_Integer Index)
{
  return ((TDataStd_Array1OfByte*)nativeHandle)->Value(Index);
}

 Standard_Byte OCTDataStd_Array1OfByte::ChangeValue(Standard_Integer Index)
{
  return ((TDataStd_Array1OfByte*)nativeHandle)->ChangeValue(Index);
}


