// File generated by CPPExt (Transient)
//
#ifndef _TDataStd_Real_OCWrappers_HeaderFile
#define _TDataStd_Real_OCWrappers_HeaderFile

// include the wrapped class
#include <TDataStd_Real.hxx>
#include "../Converter.h"

#include "../TDF/TDF_Attribute.h"

#include "TDataStd_RealEnum.h"


namespace OCNaroWrappers
{

ref class OCStandard_GUID;
ref class OCTDF_Label;
ref class OCTDF_Attribute;
ref class OCTDF_RelocationTable;


//! The basis to define a real number attribute. <br>
public ref class OCTDataStd_Real : OCTDF_Attribute {

protected:
  // dummy constructor;
  OCTDataStd_Real(OCDummy^) : OCTDF_Attribute((OCDummy^)nullptr) {};

public:

// constructor from native
OCTDataStd_Real(Handle(TDataStd_Real)* nativeHandle);

// Methods PUBLIC

//! class methods <br>
//!          ============= <br>//!  Returns the GUID for real numbers. <br>
static /*instead*/  OCStandard_GUID^ GetID() ;

//! Finds, or creates, an Real attribute and sets <value> the <br>
//!          Real attribute  is  returned. the  Real  dimension is <br>
//!          Scalar by default. use SetDimension to overwrite. <br>//! Real methods <br>
//!          ============ <br>
static /*instead*/  OCTDataStd_Real^ Set(OCNaroWrappers::OCTDF_Label^ label, Standard_Real value) ;


OCTDataStd_Real();


 /*instead*/  void SetDimension(OCTDataStd_RealEnum DIM) ;


 /*instead*/  OCTDataStd_RealEnum GetDimension() ;


//! Finds or creates the real number V. <br>
 /*instead*/  void Set(Standard_Real V) ;


//! Returns the real number value contained in the attribute. <br>
 /*instead*/  Standard_Real Get() ;

//! Returns True if there is a reference on the same label <br>
 /*instead*/  System::Boolean IsCaptured() ;


 /*instead*/  OCStandard_GUID^ ID() ;


 /*instead*/  void Restore(OCNaroWrappers::OCTDF_Attribute^ With) ;


 /*instead*/  OCTDF_Attribute^ NewEmpty() ;


 /*instead*/  void Paste(OCNaroWrappers::OCTDF_Attribute^ Into, OCNaroWrappers::OCTDF_RelocationTable^ RT) ;


virtual /*instead*/  Standard_OStream& Dump(Standard_OStream& anOS) override;

~OCTDataStd_Real()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
