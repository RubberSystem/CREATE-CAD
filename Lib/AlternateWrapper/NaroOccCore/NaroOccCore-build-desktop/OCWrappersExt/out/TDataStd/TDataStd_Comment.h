// File generated by CPPExt (Transient)
//
#ifndef _TDataStd_Comment_OCWrappers_HeaderFile
#define _TDataStd_Comment_OCWrappers_HeaderFile

// include the wrapped class
#include <TDataStd_Comment.hxx>
#include "../Converter.h"

#include "../TDF/TDF_Attribute.h"

#include "../TCollection/TCollection_ExtendedString.h"


namespace OCNaroWrappers
{

ref class OCStandard_GUID;
ref class OCTDF_Label;
ref class OCTCollection_ExtendedString;
ref class OCTDF_Attribute;
ref class OCTDF_RelocationTable;


//! Comment attribute. may be  associated to any label <br>
//!          to store user comment. <br>
public ref class OCTDataStd_Comment : OCTDF_Attribute {

protected:
  // dummy constructor;
  OCTDataStd_Comment(OCDummy^) : OCTDF_Attribute((OCDummy^)nullptr) {};

public:

// constructor from native
OCTDataStd_Comment(Handle(TDataStd_Comment)* nativeHandle);

// Methods PUBLIC

//! class methods <br>
//!          ============= <br>//! Returns the GUID for comments. <br>
static /*instead*/  OCStandard_GUID^ GetID() ;

//!  Find, or create  a   Comment attribute.  the  Comment <br>
//!          attribute is returned. <br>
static /*instead*/  OCTDataStd_Comment^ Set(OCNaroWrappers::OCTDF_Label^ label) ;

//! Finds, or creates a Comment attribute and sets the string. <br>
//!          the Comment attribute is returned. <br>//! Comment methods <br>
//!          ============ <br>
static /*instead*/  OCTDataStd_Comment^ Set(OCNaroWrappers::OCTDF_Label^ label, OCNaroWrappers::OCTCollection_ExtendedString^ string) ;


OCTDataStd_Comment();


 /*instead*/  void Set(OCNaroWrappers::OCTCollection_ExtendedString^ S) ;


//!    Returns the comment attribute. <br>
 /*instead*/  OCTCollection_ExtendedString^ Get() ;


 /*instead*/  OCStandard_GUID^ ID() ;


 /*instead*/  void Restore(OCNaroWrappers::OCTDF_Attribute^ with) ;


 /*instead*/  OCTDF_Attribute^ NewEmpty() ;


 /*instead*/  void Paste(OCNaroWrappers::OCTDF_Attribute^ into, OCNaroWrappers::OCTDF_RelocationTable^ RT) ;


virtual /*instead*/  Standard_OStream& Dump(Standard_OStream& anOS) override;


virtual /*instead*/  System::Boolean AfterRetrieval(System::Boolean forceIt) override;

~OCTDataStd_Comment()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
