// File generated by CPPExt (CPP file)
//

#include "TDataStd_NoteBook.h"
#include "../Converter.h"
#include "../TDF/TDF_Label.h"
#include "../Standard/Standard_GUID.h"
#include "TDataStd_Real.h"
#include "TDataStd_Integer.h"
#include "../TDF/TDF_Attribute.h"
#include "../TDF/TDF_RelocationTable.h"


using namespace OCNaroWrappers;

OCTDataStd_NoteBook::OCTDataStd_NoteBook(Handle(TDataStd_NoteBook)* nativeHandle) : OCTDF_Attribute((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TDataStd_NoteBook(*nativeHandle);
}

 System::Boolean OCTDataStd_NoteBook::Find(OCNaroWrappers::OCTDF_Label^ current, OCNaroWrappers::OCTDataStd_NoteBook^ N)
{
  return OCConverter::StandardBooleanToBoolean(TDataStd_NoteBook::Find(*((TDF_Label*)current->Handle), *((Handle_TDataStd_NoteBook*)N->Handle)));
}

OCTDataStd_NoteBook^ OCTDataStd_NoteBook::New(OCNaroWrappers::OCTDF_Label^ label)
{
  Handle(TDataStd_NoteBook) tmp = TDataStd_NoteBook::New(*((TDF_Label*)label->Handle));
  return gcnew OCTDataStd_NoteBook(&tmp);
}

OCStandard_GUID^ OCTDataStd_NoteBook::GetID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = TDataStd_NoteBook::GetID();
  return gcnew OCStandard_GUID(tmp);
}

OCTDataStd_NoteBook::OCTDataStd_NoteBook() : OCTDF_Attribute((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TDataStd_NoteBook(new TDataStd_NoteBook());
}

OCTDataStd_Real^ OCTDataStd_NoteBook::Append(Standard_Real value, System::Boolean isExported)
{
  Handle(TDataStd_Real) tmp = (*((Handle_TDataStd_NoteBook*)nativeHandle))->Append(value, OCConverter::BooleanToStandardBoolean(isExported));
  return gcnew OCTDataStd_Real(&tmp);
}

OCTDataStd_Integer^ OCTDataStd_NoteBook::Append(Standard_Integer value, System::Boolean isExported)
{
  Handle(TDataStd_Integer) tmp = (*((Handle_TDataStd_NoteBook*)nativeHandle))->Append(value, OCConverter::BooleanToStandardBoolean(isExported));
  return gcnew OCTDataStd_Integer(&tmp);
}

OCStandard_GUID^ OCTDataStd_NoteBook::ID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = (*((Handle_TDataStd_NoteBook*)nativeHandle))->ID();
  return gcnew OCStandard_GUID(tmp);
}

 void OCTDataStd_NoteBook::Restore(OCNaroWrappers::OCTDF_Attribute^ with)
{
  (*((Handle_TDataStd_NoteBook*)nativeHandle))->Restore(*((Handle_TDF_Attribute*)with->Handle));
}

OCTDF_Attribute^ OCTDataStd_NoteBook::NewEmpty()
{
  Handle(TDF_Attribute) tmp = (*((Handle_TDataStd_NoteBook*)nativeHandle))->NewEmpty();
  return gcnew OCTDF_Attribute(&tmp);
}

 void OCTDataStd_NoteBook::Paste(OCNaroWrappers::OCTDF_Attribute^ into, OCNaroWrappers::OCTDF_RelocationTable^ RT)
{
  (*((Handle_TDataStd_NoteBook*)nativeHandle))->Paste(*((Handle_TDF_Attribute*)into->Handle), *((Handle_TDF_RelocationTable*)RT->Handle));
}

 Standard_OStream& OCTDataStd_NoteBook::Dump(Standard_OStream& anOS)
{
  return (*((Handle_TDataStd_NoteBook*)nativeHandle))->Dump(anOS);
}


