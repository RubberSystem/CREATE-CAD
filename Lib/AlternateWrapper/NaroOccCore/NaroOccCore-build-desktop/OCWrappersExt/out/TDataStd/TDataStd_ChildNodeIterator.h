// File generated by CPPExt (MPV)
//
#ifndef _TDataStd_ChildNodeIterator_OCWrappers_HeaderFile
#define _TDataStd_ChildNodeIterator_OCWrappers_HeaderFile

// include native header
#include <TDataStd_ChildNodeIterator.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCTDataStd_TreeNode;


//!  Iterates on the  ChildStepren step of  a step, at the <br>
//!           first level  only.   It  is possible  to ask  the <br>
//!          iterator to explore all the sub step levels of the <br>
//!          given one, with the option "allLevels". <br>
public ref class OCTDataStd_ChildNodeIterator  {

protected:
  TDataStd_ChildNodeIterator* nativeHandle;
  OCTDataStd_ChildNodeIterator(OCDummy^) {};

public:
  property TDataStd_ChildNodeIterator* Handle
  {
    TDataStd_ChildNodeIterator* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTDataStd_ChildNodeIterator(TDataStd_ChildNodeIterator* nativeHandle);

// Methods PUBLIC

//! Creates an empty iterator. <br>
OCTDataStd_ChildNodeIterator();

//! Iterates on the ChildStepren of the given Step. If <br>
//!          <allLevels> option is set to true, it explores not <br>
//!          only the first, but all the sub Step levels. <br>
OCTDataStd_ChildNodeIterator(OCNaroWrappers::OCTDataStd_TreeNode^ aTreeNode, System::Boolean allLevels);

//! Initializes the iteration on  the Children Step of <br>
//!          the  given Step. If <allLevels>  option is  set to <br>
//!          true, it explores not  only the first, but all the <br>
//!          sub Step levels. <br>
 /*instead*/  void Initialize(OCNaroWrappers::OCTDataStd_TreeNode^ aTreeNode, System::Boolean allLevels) ;

//! Returns True if there is a current Item in the <br>
//!          iteration. <br>
 /*instead*/  System::Boolean More() ;

//! Move to the next Item <br>
 /*instead*/  void Next() ;

//! Move to the next Brother. If there is none, go up <br>
//!          etc. This method is interesting only with <br>
//!          "allLevels" behavior, because it avoids to explore <br>
//!          the current Step ChildStepren. <br>
 /*instead*/  void NextBrother() ;

//! Returns the current item; a null Step if there is <br>
//!          no one. <br>
 /*instead*/  OCTDataStd_TreeNode^ Value() ;

~OCTDataStd_ChildNodeIterator()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
