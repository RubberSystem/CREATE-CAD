// File generated by CPPExt (CPP file)
//

#include "TDataStd_HArray1OfByte.h"
#include "../Converter.h"
#include "TDataStd_Array1OfByte.h"


using namespace OCNaroWrappers;

OCTDataStd_HArray1OfByte::OCTDataStd_HArray1OfByte(Handle(TDataStd_HArray1OfByte)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TDataStd_HArray1OfByte(*nativeHandle);
}

OCTDataStd_HArray1OfByte::OCTDataStd_HArray1OfByte(Standard_Integer Low, Standard_Integer Up) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TDataStd_HArray1OfByte(new TDataStd_HArray1OfByte(Low, Up));
}

OCTDataStd_HArray1OfByte::OCTDataStd_HArray1OfByte(Standard_Integer Low, Standard_Integer Up, Standard_Byte V) : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TDataStd_HArray1OfByte(new TDataStd_HArray1OfByte(Low, Up, V));
}

 void OCTDataStd_HArray1OfByte::Init(Standard_Byte V)
{
  (*((Handle_TDataStd_HArray1OfByte*)nativeHandle))->Init(V);
}

 Standard_Integer OCTDataStd_HArray1OfByte::Length()
{
  return (*((Handle_TDataStd_HArray1OfByte*)nativeHandle))->Length();
}

 Standard_Integer OCTDataStd_HArray1OfByte::Lower()
{
  return (*((Handle_TDataStd_HArray1OfByte*)nativeHandle))->Lower();
}

 Standard_Integer OCTDataStd_HArray1OfByte::Upper()
{
  return (*((Handle_TDataStd_HArray1OfByte*)nativeHandle))->Upper();
}

 void OCTDataStd_HArray1OfByte::SetValue(Standard_Integer Index, Standard_Byte Value)
{
  (*((Handle_TDataStd_HArray1OfByte*)nativeHandle))->SetValue(Index, Value);
}

 Standard_Byte OCTDataStd_HArray1OfByte::Value(Standard_Integer Index)
{
  return (*((Handle_TDataStd_HArray1OfByte*)nativeHandle))->Value(Index);
}

 Standard_Byte OCTDataStd_HArray1OfByte::ChangeValue(Standard_Integer Index)
{
  return (*((Handle_TDataStd_HArray1OfByte*)nativeHandle))->ChangeValue(Index);
}

OCTDataStd_Array1OfByte^ OCTDataStd_HArray1OfByte::Array1()
{
  TDataStd_Array1OfByte* tmp = new TDataStd_Array1OfByte(0, 0);
  *tmp = (*((Handle_TDataStd_HArray1OfByte*)nativeHandle))->Array1();
  return gcnew OCTDataStd_Array1OfByte(tmp);
}

OCTDataStd_Array1OfByte^ OCTDataStd_HArray1OfByte::ChangeArray1()
{
  TDataStd_Array1OfByte* tmp = new TDataStd_Array1OfByte(0, 0);
  *tmp = (*((Handle_TDataStd_HArray1OfByte*)nativeHandle))->ChangeArray1();
  return gcnew OCTDataStd_Array1OfByte(tmp);
}


