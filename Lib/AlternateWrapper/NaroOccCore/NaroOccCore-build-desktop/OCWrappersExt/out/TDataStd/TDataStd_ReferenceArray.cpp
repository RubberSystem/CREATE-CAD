// File generated by CPPExt (CPP file)
//

#include "TDataStd_ReferenceArray.h"
#include "../Converter.h"
#include "TDataStd_HLabelArray1.h"
#include "../Standard/Standard_GUID.h"
#include "../TDF/TDF_Label.h"
#include "../TDF/TDF_Attribute.h"
#include "../TDF/TDF_RelocationTable.h"
#include "../TDF/TDF_DataSet.h"


using namespace OCNaroWrappers;

OCTDataStd_ReferenceArray::OCTDataStd_ReferenceArray(Handle(TDataStd_ReferenceArray)* nativeHandle) : OCTDF_Attribute((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TDataStd_ReferenceArray(*nativeHandle);
}

OCStandard_GUID^ OCTDataStd_ReferenceArray::GetID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = TDataStd_ReferenceArray::GetID();
  return gcnew OCStandard_GUID(tmp);
}

OCTDataStd_ReferenceArray^ OCTDataStd_ReferenceArray::Set(OCNaroWrappers::OCTDF_Label^ label, Standard_Integer lower, Standard_Integer upper)
{
  Handle(TDataStd_ReferenceArray) tmp = TDataStd_ReferenceArray::Set(*((TDF_Label*)label->Handle), lower, upper);
  return gcnew OCTDataStd_ReferenceArray(&tmp);
}

 void OCTDataStd_ReferenceArray::Init(Standard_Integer lower, Standard_Integer upper)
{
  (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->Init(lower, upper);
}

 void OCTDataStd_ReferenceArray::SetValue(Standard_Integer index, OCNaroWrappers::OCTDF_Label^ value)
{
  (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->SetValue(index, *((TDF_Label*)value->Handle));
}

OCTDF_Label^ OCTDataStd_ReferenceArray::Value(Standard_Integer Index)
{
  TDF_Label* tmp = new TDF_Label();
  *tmp = (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->Value(Index);
  return gcnew OCTDF_Label(tmp);
}

 Standard_Integer OCTDataStd_ReferenceArray::Lower()
{
  return (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->Lower();
}

 Standard_Integer OCTDataStd_ReferenceArray::Upper()
{
  return (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->Upper();
}

 Standard_Integer OCTDataStd_ReferenceArray::Length()
{
  return (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->Length();
}

OCTDataStd_HLabelArray1^ OCTDataStd_ReferenceArray::InternalArray()
{
  Handle(TDataStd_HLabelArray1) tmp = (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->InternalArray();
  return gcnew OCTDataStd_HLabelArray1(&tmp);
}

 void OCTDataStd_ReferenceArray::SetInternalArray(OCNaroWrappers::OCTDataStd_HLabelArray1^ values, System::Boolean isCheckItems)
{
  (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->SetInternalArray(*((Handle_TDataStd_HLabelArray1*)values->Handle), OCConverter::BooleanToStandardBoolean(isCheckItems));
}

OCTDataStd_ReferenceArray::OCTDataStd_ReferenceArray() : OCTDF_Attribute((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TDataStd_ReferenceArray(new TDataStd_ReferenceArray());
}

OCStandard_GUID^ OCTDataStd_ReferenceArray::ID()
{
  Standard_GUID* tmp = new Standard_GUID();
  *tmp = (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->ID();
  return gcnew OCStandard_GUID(tmp);
}

 void OCTDataStd_ReferenceArray::Restore(OCNaroWrappers::OCTDF_Attribute^ With)
{
  (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->Restore(*((Handle_TDF_Attribute*)With->Handle));
}

OCTDF_Attribute^ OCTDataStd_ReferenceArray::NewEmpty()
{
  Handle(TDF_Attribute) tmp = (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->NewEmpty();
  return gcnew OCTDF_Attribute(&tmp);
}

 void OCTDataStd_ReferenceArray::Paste(OCNaroWrappers::OCTDF_Attribute^ Into, OCNaroWrappers::OCTDF_RelocationTable^ RT)
{
  (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->Paste(*((Handle_TDF_Attribute*)Into->Handle), *((Handle_TDF_RelocationTable*)RT->Handle));
}

 void OCTDataStd_ReferenceArray::References(OCNaroWrappers::OCTDF_DataSet^ DS)
{
  (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->References(*((Handle_TDF_DataSet*)DS->Handle));
}

 Standard_OStream& OCTDataStd_ReferenceArray::Dump(Standard_OStream& anOS)
{
  return (*((Handle_TDataStd_ReferenceArray*)nativeHandle))->Dump(anOS);
}


