// File generated by CPPExt (Package)
//

#ifndef _TDataStd_OCWrappers_HeaderFile
#define _TDataStd_OCWrappers_HeaderFile

// Include the wrapped header
#include <TDataStd.hxx>

#include "TDataStd_Current.h"
#include "TDataStd_Name.h"
#include "TDataStd_Comment.h"
#include "TDataStd_Integer.h"
#include "TDataStd_IntegerArray.h"
#include "TDataStd_Real.h"
#include "TDataStd_RealArray.h"
#include "TDataStd_ExtStringArray.h"
#include "TDataStd_UAttribute.h"
#include "TDataStd_TreeNode.h"
#include "TDataStd_ChildNodeIterator.h"
#include "TDataStd_Directory.h"
#include "TDataStd_NoteBook.h"
#include "TDataStd_Expression.h"
#include "TDataStd_Relation.h"
#include "TDataStd_Variable.h"
#include "TDataStd_DeltaOnModificationOfIntArray.h"
#include "TDataStd_DeltaOnModificationOfRealArray.h"
#include "TDataStd_DeltaOnModificationOfExtStringArray.h"
#include "TDataStd_DeltaOnModificationOfIntPackedMap.h"
#include "TDataStd_DeltaOnModificationOfByteArray.h"
#include "TDataStd_Tick.h"
#include "TDataStd_AsciiString.h"
#include "TDataStd_IntPackedMap.h"
#include "TDataStd_IntegerList.h"
#include "TDataStd_RealList.h"
#include "TDataStd_ExtStringList.h"
#include "TDataStd_BooleanList.h"
#include "TDataStd_ReferenceList.h"
#include "TDataStd_BooleanArray.h"
#include "TDataStd_ReferenceArray.h"
#include "TDataStd_ByteArray.h"
#include "TDataStd_NamedData.h"
#include "TDataStd_ListOfExtendedString.h"
#include "TDataStd_ListOfByte.h"
#include "TDataStd_LabelArray1.h"
#include "TDataStd_HLabelArray1.h"
#include "TDataStd_DataMapOfStringReal.h"
#include "TDataStd_DataMapOfStringString.h"
#include "TDataStd_DataMapOfStringByte.h"
#include "TDataStd_DataMapOfStringHArray1OfInteger.h"
#include "TDataStd_DataMapOfStringHArray1OfReal.h"
#include "TDataStd_HDataMapOfStringInteger.h"
#include "TDataStd_HDataMapOfStringReal.h"
#include "TDataStd_HDataMapOfStringString.h"
#include "TDataStd_HDataMapOfStringByte.h"
#include "TDataStd_HDataMapOfStringHArray1OfInteger.h"
#include "TDataStd_HDataMapOfStringHArray1OfReal.h"
#include "TDataStd_ListNodeOfListOfExtendedString.h"
#include "TDataStd_ListIteratorOfListOfExtendedString.h"
#include "TDataStd_ListNodeOfListOfByte.h"
#include "TDataStd_ListIteratorOfListOfByte.h"
#include "TDataStd_DataMapNodeOfDataMapOfStringReal.h"
#include "TDataStd_DataMapIteratorOfDataMapOfStringReal.h"
#include "TDataStd_DataMapNodeOfDataMapOfStringString.h"
#include "TDataStd_DataMapIteratorOfDataMapOfStringString.h"
#include "TDataStd_DataMapNodeOfDataMapOfStringByte.h"
#include "TDataStd_DataMapIteratorOfDataMapOfStringByte.h"
#include "TDataStd_DataMapNodeOfDataMapOfStringHArray1OfInteger.h"
#include "TDataStd_DataMapIteratorOfDataMapOfStringHArray1OfInteger.h"
#include "TDataStd_DataMapNodeOfDataMapOfStringHArray1OfReal.h"
#include "TDataStd_DataMapIteratorOfDataMapOfStringHArray1OfReal.h"


namespace OCNaroWrappers
{
//!  This  package  defines   standard attributes for <br>
//!           modelling. <br>
//! These allow you to create and modify labels <br>
//! and attributes for many basic data types. <br>
//! Standard topological and visualization <br>
//! attributes have also been created. <br>
//! To find an attribute attached to a specific label, <br>
//! you use the GUID of the type of attribute you <br>
//! are looking for. To do this, first find this <br>
//! information using the method GetID as follows: Standard_GUID anID = <br>
//! MyAttributeClass::GetID(); <br>
//! Then, use the method Find for the label as follows: <br>
//! Standard_Boolean HasAttribute <br>
//! = <br>
//! aLabel.Find(anID,anAttribute); <br>
//! Note <br>
//! For information on the relations between this <br>
//! component of OCAF and the others, refer to the OCAF User's Guide. <br>
public ref class OCTDataStd abstract sealed
{

public:
// Methods

//! Appends to <anIDList> the list of the attributes <br>
//!          IDs of this package. CAUTION: <anIDList> is NOT <br>
//!          cleared before use. <br>
static /*instead*/  void IDList(OCNaroWrappers::OCTDF_IDList^ anIDList) ;


static /*instead*/  Standard_OStream& Print(OCTDataStd_RealEnum DIM, Standard_OStream& S) ;


};

}; // OCNaroWrappers

#endif
