// File generated by CPPExt (CPP file)
//

#include "TDataStd_ListOfByte.h"
#include "../Converter.h"
#include "TDataStd_ListIteratorOfListOfByte.h"
#include "TDataStd_ListNodeOfListOfByte.h"


using namespace OCNaroWrappers;

OCTDataStd_ListOfByte::OCTDataStd_ListOfByte(TDataStd_ListOfByte* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTDataStd_ListOfByte::OCTDataStd_ListOfByte() 
{
  nativeHandle = new TDataStd_ListOfByte();
}

 void OCTDataStd_ListOfByte::Assign(OCNaroWrappers::OCTDataStd_ListOfByte^ Other)
{
  ((TDataStd_ListOfByte*)nativeHandle)->Assign(*((TDataStd_ListOfByte*)Other->Handle));
}

 Standard_Integer OCTDataStd_ListOfByte::Extent()
{
  return ((TDataStd_ListOfByte*)nativeHandle)->Extent();
}

 System::Boolean OCTDataStd_ListOfByte::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TDataStd_ListOfByte*)nativeHandle)->IsEmpty());
}

 void OCTDataStd_ListOfByte::Prepend(Standard_Byte I)
{
  ((TDataStd_ListOfByte*)nativeHandle)->Prepend(I);
}

 void OCTDataStd_ListOfByte::Prepend(Standard_Byte I, OCNaroWrappers::OCTDataStd_ListIteratorOfListOfByte^ theIt)
{
  ((TDataStd_ListOfByte*)nativeHandle)->Prepend(I, *((TDataStd_ListIteratorOfListOfByte*)theIt->Handle));
}

 void OCTDataStd_ListOfByte::Prepend(OCNaroWrappers::OCTDataStd_ListOfByte^ Other)
{
  ((TDataStd_ListOfByte*)nativeHandle)->Prepend(*((TDataStd_ListOfByte*)Other->Handle));
}

 void OCTDataStd_ListOfByte::Append(Standard_Byte I)
{
  ((TDataStd_ListOfByte*)nativeHandle)->Append(I);
}

 void OCTDataStd_ListOfByte::Append(Standard_Byte I, OCNaroWrappers::OCTDataStd_ListIteratorOfListOfByte^ theIt)
{
  ((TDataStd_ListOfByte*)nativeHandle)->Append(I, *((TDataStd_ListIteratorOfListOfByte*)theIt->Handle));
}

 void OCTDataStd_ListOfByte::Append(OCNaroWrappers::OCTDataStd_ListOfByte^ Other)
{
  ((TDataStd_ListOfByte*)nativeHandle)->Append(*((TDataStd_ListOfByte*)Other->Handle));
}

 Standard_Byte OCTDataStd_ListOfByte::First()
{
  return ((TDataStd_ListOfByte*)nativeHandle)->First();
}

 Standard_Byte OCTDataStd_ListOfByte::Last()
{
  return ((TDataStd_ListOfByte*)nativeHandle)->Last();
}

 void OCTDataStd_ListOfByte::RemoveFirst()
{
  ((TDataStd_ListOfByte*)nativeHandle)->RemoveFirst();
}

 void OCTDataStd_ListOfByte::Remove(OCNaroWrappers::OCTDataStd_ListIteratorOfListOfByte^ It)
{
  ((TDataStd_ListOfByte*)nativeHandle)->Remove(*((TDataStd_ListIteratorOfListOfByte*)It->Handle));
}

 void OCTDataStd_ListOfByte::InsertBefore(Standard_Byte I, OCNaroWrappers::OCTDataStd_ListIteratorOfListOfByte^ It)
{
  ((TDataStd_ListOfByte*)nativeHandle)->InsertBefore(I, *((TDataStd_ListIteratorOfListOfByte*)It->Handle));
}

 void OCTDataStd_ListOfByte::InsertBefore(OCNaroWrappers::OCTDataStd_ListOfByte^ Other, OCNaroWrappers::OCTDataStd_ListIteratorOfListOfByte^ It)
{
  ((TDataStd_ListOfByte*)nativeHandle)->InsertBefore(*((TDataStd_ListOfByte*)Other->Handle), *((TDataStd_ListIteratorOfListOfByte*)It->Handle));
}

 void OCTDataStd_ListOfByte::InsertAfter(Standard_Byte I, OCNaroWrappers::OCTDataStd_ListIteratorOfListOfByte^ It)
{
  ((TDataStd_ListOfByte*)nativeHandle)->InsertAfter(I, *((TDataStd_ListIteratorOfListOfByte*)It->Handle));
}

 void OCTDataStd_ListOfByte::InsertAfter(OCNaroWrappers::OCTDataStd_ListOfByte^ Other, OCNaroWrappers::OCTDataStd_ListIteratorOfListOfByte^ It)
{
  ((TDataStd_ListOfByte*)nativeHandle)->InsertAfter(*((TDataStd_ListOfByte*)Other->Handle), *((TDataStd_ListIteratorOfListOfByte*)It->Handle));
}


