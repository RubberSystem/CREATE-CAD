// File generated by CPPExt (CPP file)
//

#include "TDataStd_Array1OfTrsf.h"
#include "../Converter.h"
#include "../gp/gp_Trsf.h"


using namespace OCNaroWrappers;

OCTDataStd_Array1OfTrsf::OCTDataStd_Array1OfTrsf(TDataStd_Array1OfTrsf* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTDataStd_Array1OfTrsf::OCTDataStd_Array1OfTrsf(Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TDataStd_Array1OfTrsf(Low, Up);
}

OCTDataStd_Array1OfTrsf::OCTDataStd_Array1OfTrsf(OCNaroWrappers::OCgp_Trsf^ Item, Standard_Integer Low, Standard_Integer Up) 
{
  nativeHandle = new TDataStd_Array1OfTrsf(*((gp_Trsf*)Item->Handle), Low, Up);
}

 void OCTDataStd_Array1OfTrsf::Init(OCNaroWrappers::OCgp_Trsf^ V)
{
  ((TDataStd_Array1OfTrsf*)nativeHandle)->Init(*((gp_Trsf*)V->Handle));
}

 System::Boolean OCTDataStd_Array1OfTrsf::IsAllocated()
{
  return OCConverter::StandardBooleanToBoolean(((TDataStd_Array1OfTrsf*)nativeHandle)->IsAllocated());
}

OCTDataStd_Array1OfTrsf^ OCTDataStd_Array1OfTrsf::Assign(OCNaroWrappers::OCTDataStd_Array1OfTrsf^ Other)
{
  TDataStd_Array1OfTrsf* tmp = new TDataStd_Array1OfTrsf(0, 0);
  *tmp = ((TDataStd_Array1OfTrsf*)nativeHandle)->Assign(*((TDataStd_Array1OfTrsf*)Other->Handle));
  return gcnew OCTDataStd_Array1OfTrsf(tmp);
}

 Standard_Integer OCTDataStd_Array1OfTrsf::Length()
{
  return ((TDataStd_Array1OfTrsf*)nativeHandle)->Length();
}

 Standard_Integer OCTDataStd_Array1OfTrsf::Lower()
{
  return ((TDataStd_Array1OfTrsf*)nativeHandle)->Lower();
}

 Standard_Integer OCTDataStd_Array1OfTrsf::Upper()
{
  return ((TDataStd_Array1OfTrsf*)nativeHandle)->Upper();
}

 void OCTDataStd_Array1OfTrsf::SetValue(Standard_Integer Index, OCNaroWrappers::OCgp_Trsf^ Value)
{
  ((TDataStd_Array1OfTrsf*)nativeHandle)->SetValue(Index, *((gp_Trsf*)Value->Handle));
}

OCgp_Trsf^ OCTDataStd_Array1OfTrsf::Value(Standard_Integer Index)
{
  gp_Trsf* tmp = new gp_Trsf();
  *tmp = ((TDataStd_Array1OfTrsf*)nativeHandle)->Value(Index);
  return gcnew OCgp_Trsf(tmp);
}

OCgp_Trsf^ OCTDataStd_Array1OfTrsf::ChangeValue(Standard_Integer Index)
{
  gp_Trsf* tmp = new gp_Trsf();
  *tmp = ((TDataStd_Array1OfTrsf*)nativeHandle)->ChangeValue(Index);
  return gcnew OCgp_Trsf(tmp);
}


