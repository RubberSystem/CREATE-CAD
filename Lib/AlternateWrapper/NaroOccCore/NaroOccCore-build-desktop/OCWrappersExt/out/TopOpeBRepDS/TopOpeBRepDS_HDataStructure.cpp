// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepDS_HDataStructure.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TopOpeBRepDS_DataStructure.h"
#include "TopOpeBRepDS_Surface.h"
#include "TopOpeBRepDS_CurveIterator.h"
#include "TopOpeBRepDS_Curve.h"
#include "TopOpeBRepDS_PointIterator.h"
#include "TopOpeBRepDS_Point.h"
#include "../TopTools/TopTools_ListIteratorOfListOfShape.h"
#include "TopOpeBRepDS_SurfaceIterator.h"
#include "TopOpeBRepDS_ListOfInterference.h"
#include "TopOpeBRepDS_ListIteratorOfListOfInterference.h"
#include "TopOpeBRepDS_Interference.h"


using namespace OCNaroWrappers;

OCTopOpeBRepDS_HDataStructure::OCTopOpeBRepDS_HDataStructure(Handle(TopOpeBRepDS_HDataStructure)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TopOpeBRepDS_HDataStructure(*nativeHandle);
}

OCTopOpeBRepDS_HDataStructure::OCTopOpeBRepDS_HDataStructure() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TopOpeBRepDS_HDataStructure(new TopOpeBRepDS_HDataStructure());
}

 void OCTopOpeBRepDS_HDataStructure::AddAncestors(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->AddAncestors(*((TopoDS_Shape*)S->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::AddAncestors(OCNaroWrappers::OCTopoDS_Shape^ S, OCTopAbs_ShapeEnum T1, OCTopAbs_ShapeEnum T2)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->AddAncestors(*((TopoDS_Shape*)S->Handle), (TopAbs_ShapeEnum)T1, (TopAbs_ShapeEnum)T2);
}

 void OCTopOpeBRepDS_HDataStructure::Complete()
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->Complete();
}

 void OCTopOpeBRepDS_HDataStructure::ChkIntg()
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->ChkIntg();
}

OCTopOpeBRepDS_DataStructure^ OCTopOpeBRepDS_HDataStructure::DS()
{
  TopOpeBRepDS_DataStructure* tmp = new TopOpeBRepDS_DataStructure();
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->DS();
  return gcnew OCTopOpeBRepDS_DataStructure(tmp);
}

OCTopOpeBRepDS_DataStructure^ OCTopOpeBRepDS_HDataStructure::ChangeDS()
{
  TopOpeBRepDS_DataStructure* tmp = new TopOpeBRepDS_DataStructure();
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->ChangeDS();
  return gcnew OCTopOpeBRepDS_DataStructure(tmp);
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::NbSurfaces()
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->NbSurfaces();
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::NbCurves()
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->NbCurves();
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::NbPoints()
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->NbPoints();
}

OCTopOpeBRepDS_Surface^ OCTopOpeBRepDS_HDataStructure::Surface(Standard_Integer I)
{
  TopOpeBRepDS_Surface* tmp = new TopOpeBRepDS_Surface();
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->Surface(I);
  return gcnew OCTopOpeBRepDS_Surface(tmp);
}

OCTopOpeBRepDS_CurveIterator^ OCTopOpeBRepDS_HDataStructure::SurfaceCurves(Standard_Integer I)
{
  TopOpeBRepDS_CurveIterator* tmp = new TopOpeBRepDS_CurveIterator(123abc);
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->SurfaceCurves(I);
  return gcnew OCTopOpeBRepDS_CurveIterator(tmp);
}

OCTopOpeBRepDS_Curve^ OCTopOpeBRepDS_HDataStructure::Curve(Standard_Integer I)
{
  TopOpeBRepDS_Curve* tmp = new TopOpeBRepDS_Curve();
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->Curve(I);
  return gcnew OCTopOpeBRepDS_Curve(tmp);
}

OCTopOpeBRepDS_Curve^ OCTopOpeBRepDS_HDataStructure::ChangeCurve(Standard_Integer I)
{
  TopOpeBRepDS_Curve* tmp = new TopOpeBRepDS_Curve();
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->ChangeCurve(I);
  return gcnew OCTopOpeBRepDS_Curve(tmp);
}

OCTopOpeBRepDS_PointIterator^ OCTopOpeBRepDS_HDataStructure::CurvePoints(Standard_Integer I)
{
  TopOpeBRepDS_PointIterator* tmp = new TopOpeBRepDS_PointIterator(123abc);
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->CurvePoints(I);
  return gcnew OCTopOpeBRepDS_PointIterator(tmp);
}

OCTopOpeBRepDS_Point^ OCTopOpeBRepDS_HDataStructure::Point(Standard_Integer I)
{
  TopOpeBRepDS_Point* tmp = new TopOpeBRepDS_Point();
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->Point(I);
  return gcnew OCTopOpeBRepDS_Point(tmp);
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::NbShapes()
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->NbShapes();
}

OCTopoDS_Shape^ OCTopOpeBRepDS_HDataStructure::Shape(Standard_Integer I, System::Boolean FindKeep)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->Shape(I, OCConverter::BooleanToStandardBoolean(FindKeep));
  return gcnew OCTopoDS_Shape(tmp);
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::Shape(OCNaroWrappers::OCTopoDS_Shape^ S, System::Boolean FindKeep)
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->Shape(*((TopoDS_Shape*)S->Handle), OCConverter::BooleanToStandardBoolean(FindKeep));
}

 System::Boolean OCTopOpeBRepDS_HDataStructure::HasGeometry(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->HasGeometry(*((TopoDS_Shape*)S->Handle)));
}

 System::Boolean OCTopOpeBRepDS_HDataStructure::HasShape(OCNaroWrappers::OCTopoDS_Shape^ S, System::Boolean FindKeep)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->HasShape(*((TopoDS_Shape*)S->Handle), OCConverter::BooleanToStandardBoolean(FindKeep)));
}

 System::Boolean OCTopOpeBRepDS_HDataStructure::HasSameDomain(OCNaroWrappers::OCTopoDS_Shape^ S, System::Boolean FindKeep)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->HasSameDomain(*((TopoDS_Shape*)S->Handle), OCConverter::BooleanToStandardBoolean(FindKeep)));
}

OCTopTools_ListIteratorOfListOfShape^ OCTopOpeBRepDS_HDataStructure::SameDomain(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  TopTools_ListIteratorOfListOfShape* tmp = new TopTools_ListIteratorOfListOfShape();
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->SameDomain(*((TopoDS_Shape*)S->Handle));
  return gcnew OCTopTools_ListIteratorOfListOfShape(tmp);
}

 OCTopOpeBRepDS_Config OCTopOpeBRepDS_HDataStructure::SameDomainOrientation(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return (OCTopOpeBRepDS_Config)((*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->SameDomainOrientation(*((TopoDS_Shape*)S->Handle)));
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::SameDomainReference(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->SameDomainReference(*((TopoDS_Shape*)S->Handle));
}

OCTopOpeBRepDS_SurfaceIterator^ OCTopOpeBRepDS_HDataStructure::SolidSurfaces(OCNaroWrappers::OCTopoDS_Shape^ S)
{
  TopOpeBRepDS_SurfaceIterator* tmp = new TopOpeBRepDS_SurfaceIterator(123abc);
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->SolidSurfaces(*((TopoDS_Shape*)S->Handle));
  return gcnew OCTopOpeBRepDS_SurfaceIterator(tmp);
}

OCTopOpeBRepDS_SurfaceIterator^ OCTopOpeBRepDS_HDataStructure::SolidSurfaces(Standard_Integer I)
{
  TopOpeBRepDS_SurfaceIterator* tmp = new TopOpeBRepDS_SurfaceIterator(123abc);
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->SolidSurfaces(I);
  return gcnew OCTopOpeBRepDS_SurfaceIterator(tmp);
}

OCTopOpeBRepDS_CurveIterator^ OCTopOpeBRepDS_HDataStructure::FaceCurves(OCNaroWrappers::OCTopoDS_Shape^ F)
{
  TopOpeBRepDS_CurveIterator* tmp = new TopOpeBRepDS_CurveIterator(123abc);
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->FaceCurves(*((TopoDS_Shape*)F->Handle));
  return gcnew OCTopOpeBRepDS_CurveIterator(tmp);
}

OCTopOpeBRepDS_CurveIterator^ OCTopOpeBRepDS_HDataStructure::FaceCurves(Standard_Integer I)
{
  TopOpeBRepDS_CurveIterator* tmp = new TopOpeBRepDS_CurveIterator(123abc);
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->FaceCurves(I);
  return gcnew OCTopOpeBRepDS_CurveIterator(tmp);
}

OCTopOpeBRepDS_PointIterator^ OCTopOpeBRepDS_HDataStructure::EdgePoints(OCNaroWrappers::OCTopoDS_Shape^ E)
{
  TopOpeBRepDS_PointIterator* tmp = new TopOpeBRepDS_PointIterator(123abc);
  *tmp = (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->EdgePoints(*((TopoDS_Shape*)E->Handle));
  return gcnew OCTopOpeBRepDS_PointIterator(tmp);
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::MakeCurve(OCNaroWrappers::OCTopOpeBRepDS_Curve^ C1, OCNaroWrappers::OCTopOpeBRepDS_Curve^ C2)
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->MakeCurve(*((TopOpeBRepDS_Curve*)C1->Handle), *((TopOpeBRepDS_Curve*)C2->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::RemoveCurve(Standard_Integer iC)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->RemoveCurve(iC);
}

 void OCTopOpeBRepDS_HDataStructure::RemoveShape(Standard_Integer iS)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->RemoveShape(iS);
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::NbGeometry(OCTopOpeBRepDS_Kind K)
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->NbGeometry((TopOpeBRepDS_Kind)K);
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::NbTopology(OCTopOpeBRepDS_Kind K)
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->NbTopology((TopOpeBRepDS_Kind)K);
}

 Standard_Integer OCTopOpeBRepDS_HDataStructure::NbTopology()
{
  return (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->NbTopology();
}

 System::Boolean OCTopOpeBRepDS_HDataStructure::EdgesSameParameter()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->EdgesSameParameter());
}

 void OCTopOpeBRepDS_HDataStructure::SortOnParameter(OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ L1, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ L2)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->SortOnParameter(*((TopOpeBRepDS_ListOfInterference*)L1->Handle), *((TopOpeBRepDS_ListOfInterference*)L2->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::SortOnParameter(OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ L)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->SortOnParameter(*((TopOpeBRepDS_ListOfInterference*)L->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::MinMaxOnParameter(OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ L, Standard_Real& Min, Standard_Real& Max)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->MinMaxOnParameter(*((TopOpeBRepDS_ListOfInterference*)L->Handle), Min, Max);
}

 System::Boolean OCTopOpeBRepDS_HDataStructure::ScanInterfList(OCNaroWrappers::OCTopOpeBRepDS_ListIteratorOfListOfInterference^ IT, OCNaroWrappers::OCTopOpeBRepDS_Point^ PDS)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->ScanInterfList(*((TopOpeBRepDS_ListIteratorOfListOfInterference*)IT->Handle), *((TopOpeBRepDS_Point*)PDS->Handle)));
}

 System::Boolean OCTopOpeBRepDS_HDataStructure::GetGeometry(OCNaroWrappers::OCTopOpeBRepDS_ListIteratorOfListOfInterference^ IT, OCNaroWrappers::OCTopOpeBRepDS_Point^ PDS, Standard_Integer& G, OCTopOpeBRepDS_Kind& K)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->GetGeometry(*((TopOpeBRepDS_ListIteratorOfListOfInterference*)IT->Handle), *((TopOpeBRepDS_Point*)PDS->Handle), G, (TopOpeBRepDS_Kind&)K));
}

 void OCTopOpeBRepDS_HDataStructure::StoreInterference(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI, OCNaroWrappers::OCTCollection_AsciiString^ str)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->StoreInterference(*((Handle_TopOpeBRepDS_Interference*)I->Handle), *((TopOpeBRepDS_ListOfInterference*)LI->Handle), *((TCollection_AsciiString*)str->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::StoreInterference(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTCollection_AsciiString^ str)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->StoreInterference(*((Handle_TopOpeBRepDS_Interference*)I->Handle), *((TopoDS_Shape*)S->Handle), *((TCollection_AsciiString*)str->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::StoreInterference(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, Standard_Integer IS, OCNaroWrappers::OCTCollection_AsciiString^ str)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->StoreInterference(*((Handle_TopOpeBRepDS_Interference*)I->Handle), IS, *((TCollection_AsciiString*)str->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::StoreInterferences(OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI, OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTCollection_AsciiString^ str)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->StoreInterferences(*((TopOpeBRepDS_ListOfInterference*)LI->Handle), *((TopoDS_Shape*)S->Handle), *((TCollection_AsciiString*)str->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::StoreInterferences(OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI, Standard_Integer IS, OCNaroWrappers::OCTCollection_AsciiString^ str)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->StoreInterferences(*((TopOpeBRepDS_ListOfInterference*)LI->Handle), IS, *((TCollection_AsciiString*)str->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::ClearStoreInterferences(OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI, OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTCollection_AsciiString^ str)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->ClearStoreInterferences(*((TopOpeBRepDS_ListOfInterference*)LI->Handle), *((TopoDS_Shape*)S->Handle), *((TCollection_AsciiString*)str->Handle));
}

 void OCTopOpeBRepDS_HDataStructure::ClearStoreInterferences(OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI, Standard_Integer IS, OCNaroWrappers::OCTCollection_AsciiString^ str)
{
  (*((Handle_TopOpeBRepDS_HDataStructure*)nativeHandle))->ClearStoreInterferences(*((TopOpeBRepDS_ListOfInterference*)LI->Handle), IS, *((TCollection_AsciiString*)str->Handle));
}


