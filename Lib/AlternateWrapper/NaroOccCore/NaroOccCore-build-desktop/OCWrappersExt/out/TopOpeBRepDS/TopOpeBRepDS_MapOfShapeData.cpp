// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepDS_MapOfShapeData.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TopOpeBRepDS_ShapeData.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "TopOpeBRepDS_IndexedDataMapNodeOfMapOfShapeData.h"


using namespace OCNaroWrappers;

OCTopOpeBRepDS_MapOfShapeData::OCTopOpeBRepDS_MapOfShapeData(TopOpeBRepDS_MapOfShapeData* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepDS_MapOfShapeData::OCTopOpeBRepDS_MapOfShapeData(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepDS_MapOfShapeData(NbBuckets);
}

OCTopOpeBRepDS_MapOfShapeData^ OCTopOpeBRepDS_MapOfShapeData::Assign(OCNaroWrappers::OCTopOpeBRepDS_MapOfShapeData^ Other)
{
  TopOpeBRepDS_MapOfShapeData* tmp = new TopOpeBRepDS_MapOfShapeData(0);
  *tmp = ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->Assign(*((TopOpeBRepDS_MapOfShapeData*)Other->Handle));
  return gcnew OCTopOpeBRepDS_MapOfShapeData(tmp);
}

 void OCTopOpeBRepDS_MapOfShapeData::ReSize(Standard_Integer NbBuckets)
{
  ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->ReSize(NbBuckets);
}

 Standard_Integer OCTopOpeBRepDS_MapOfShapeData::Add(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCTopOpeBRepDS_ShapeData^ I)
{
  return ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->Add(*((TopoDS_Shape*)K->Handle), *((TopOpeBRepDS_ShapeData*)I->Handle));
}

 void OCTopOpeBRepDS_MapOfShapeData::Substitute(Standard_Integer I, OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCTopOpeBRepDS_ShapeData^ T)
{
  ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->Substitute(I, *((TopoDS_Shape*)K->Handle), *((TopOpeBRepDS_ShapeData*)T->Handle));
}

 void OCTopOpeBRepDS_MapOfShapeData::RemoveLast()
{
  ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->RemoveLast();
}

 System::Boolean OCTopOpeBRepDS_MapOfShapeData::Contains(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->Contains(*((TopoDS_Shape*)K->Handle)));
}

OCTopoDS_Shape^ OCTopOpeBRepDS_MapOfShapeData::FindKey(Standard_Integer I)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->FindKey(I);
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopOpeBRepDS_ShapeData^ OCTopOpeBRepDS_MapOfShapeData::FindFromIndex(Standard_Integer I)
{
  TopOpeBRepDS_ShapeData* tmp = new TopOpeBRepDS_ShapeData();
  *tmp = ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->FindFromIndex(I);
  return gcnew OCTopOpeBRepDS_ShapeData(tmp);
}

OCTopOpeBRepDS_ShapeData^ OCTopOpeBRepDS_MapOfShapeData::ChangeFromIndex(Standard_Integer I)
{
  TopOpeBRepDS_ShapeData* tmp = new TopOpeBRepDS_ShapeData();
  *tmp = ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->ChangeFromIndex(I);
  return gcnew OCTopOpeBRepDS_ShapeData(tmp);
}

 Standard_Integer OCTopOpeBRepDS_MapOfShapeData::FindIndex(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->FindIndex(*((TopoDS_Shape*)K->Handle));
}

OCTopOpeBRepDS_ShapeData^ OCTopOpeBRepDS_MapOfShapeData::FindFromKey(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  TopOpeBRepDS_ShapeData* tmp = new TopOpeBRepDS_ShapeData();
  *tmp = ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->FindFromKey(*((TopoDS_Shape*)K->Handle));
  return gcnew OCTopOpeBRepDS_ShapeData(tmp);
}

OCTopOpeBRepDS_ShapeData^ OCTopOpeBRepDS_MapOfShapeData::ChangeFromKey(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  TopOpeBRepDS_ShapeData* tmp = new TopOpeBRepDS_ShapeData();
  *tmp = ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->ChangeFromKey(*((TopoDS_Shape*)K->Handle));
  return gcnew OCTopOpeBRepDS_ShapeData(tmp);
}

 Standard_Address OCTopOpeBRepDS_MapOfShapeData::FindFromKey1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->FindFromKey1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCTopOpeBRepDS_MapOfShapeData::ChangeFromKey1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((TopOpeBRepDS_MapOfShapeData*)nativeHandle)->ChangeFromKey1(*((TopoDS_Shape*)K->Handle));
}


