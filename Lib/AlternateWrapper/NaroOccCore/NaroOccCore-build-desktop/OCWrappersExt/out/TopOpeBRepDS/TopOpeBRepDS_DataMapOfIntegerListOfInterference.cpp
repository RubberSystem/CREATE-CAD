// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepDS_DataMapOfIntegerListOfInterference.h"
#include "../Converter.h"
#include "TopOpeBRepDS_ListOfInterference.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "TopOpeBRepDS_DataMapNodeOfDataMapOfIntegerListOfInterference.h"
#include "TopOpeBRepDS_DataMapIteratorOfDataMapOfIntegerListOfInterference.h"


using namespace OCNaroWrappers;

OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::OCTopOpeBRepDS_DataMapOfIntegerListOfInterference(TopOpeBRepDS_DataMapOfIntegerListOfInterference* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::OCTopOpeBRepDS_DataMapOfIntegerListOfInterference(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepDS_DataMapOfIntegerListOfInterference(NbBuckets);
}

OCTopOpeBRepDS_DataMapOfIntegerListOfInterference^ OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::Assign(OCNaroWrappers::OCTopOpeBRepDS_DataMapOfIntegerListOfInterference^ Other)
{
  TopOpeBRepDS_DataMapOfIntegerListOfInterference* tmp = new TopOpeBRepDS_DataMapOfIntegerListOfInterference(0);
  *tmp = ((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)nativeHandle)->Assign(*((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)Other->Handle));
  return gcnew OCTopOpeBRepDS_DataMapOfIntegerListOfInterference(tmp);
}

 void OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::ReSize(Standard_Integer NbBuckets)
{
  ((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::Bind(Standard_Integer K, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ I)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)nativeHandle)->Bind(K, *((TopOpeBRepDS_ListOfInterference*)I->Handle)));
}

 System::Boolean OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)nativeHandle)->IsBound(K));
}

 System::Boolean OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)nativeHandle)->UnBind(K));
}

OCTopOpeBRepDS_ListOfInterference^ OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::Find(Standard_Integer K)
{
  TopOpeBRepDS_ListOfInterference* tmp = new TopOpeBRepDS_ListOfInterference();
  *tmp = ((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)nativeHandle)->Find(K);
  return gcnew OCTopOpeBRepDS_ListOfInterference(tmp);
}

OCTopOpeBRepDS_ListOfInterference^ OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::ChangeFind(Standard_Integer K)
{
  TopOpeBRepDS_ListOfInterference* tmp = new TopOpeBRepDS_ListOfInterference();
  *tmp = ((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)nativeHandle)->ChangeFind(K);
  return gcnew OCTopOpeBRepDS_ListOfInterference(tmp);
}

 Standard_Address OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::Find1(Standard_Integer K)
{
  return ((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)nativeHandle)->Find1(K);
}

 Standard_Address OCTopOpeBRepDS_DataMapOfIntegerListOfInterference::ChangeFind1(Standard_Integer K)
{
  return ((TopOpeBRepDS_DataMapOfIntegerListOfInterference*)nativeHandle)->ChangeFind1(K);
}


