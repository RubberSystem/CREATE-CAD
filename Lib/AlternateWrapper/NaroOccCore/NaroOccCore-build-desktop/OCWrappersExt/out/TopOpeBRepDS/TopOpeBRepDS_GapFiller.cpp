// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepDS_GapFiller.h"
#include "../Converter.h"
#include "TopOpeBRepDS_HDataStructure.h"
#include "TopOpeBRepDS_GapTool.h"
#include "TopOpeBRepDS_Association.h"
#include "TopOpeBRepDS_Interference.h"
#include "TopOpeBRepDS_ListOfInterference.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TColStd/TColStd_MapOfInteger.h"


using namespace OCNaroWrappers;

OCTopOpeBRepDS_GapFiller::OCTopOpeBRepDS_GapFiller(TopOpeBRepDS_GapFiller* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepDS_GapFiller::OCTopOpeBRepDS_GapFiller(OCNaroWrappers::OCTopOpeBRepDS_HDataStructure^ HDS) 
{
  nativeHandle = new TopOpeBRepDS_GapFiller(*((Handle_TopOpeBRepDS_HDataStructure*)HDS->Handle));
}

 void OCTopOpeBRepDS_GapFiller::Perform()
{
  ((TopOpeBRepDS_GapFiller*)nativeHandle)->Perform();
}

 void OCTopOpeBRepDS_GapFiller::FindAssociatedPoints(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI)
{
  ((TopOpeBRepDS_GapFiller*)nativeHandle)->FindAssociatedPoints(*((Handle_TopOpeBRepDS_Interference*)I->Handle), *((TopOpeBRepDS_ListOfInterference*)LI->Handle));
}

 System::Boolean OCTopOpeBRepDS_GapFiller::CheckConnexity(OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_GapFiller*)nativeHandle)->CheckConnexity(*((TopOpeBRepDS_ListOfInterference*)LI->Handle)));
}

 void OCTopOpeBRepDS_GapFiller::AddPointsOnShape(OCNaroWrappers::OCTopoDS_Shape^ S, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI)
{
  ((TopOpeBRepDS_GapFiller*)nativeHandle)->AddPointsOnShape(*((TopoDS_Shape*)S->Handle), *((TopOpeBRepDS_ListOfInterference*)LI->Handle));
}

 void OCTopOpeBRepDS_GapFiller::AddPointsOnConnexShape(OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI)
{
  ((TopOpeBRepDS_GapFiller*)nativeHandle)->AddPointsOnConnexShape(*((TopoDS_Shape*)F->Handle), *((TopOpeBRepDS_ListOfInterference*)LI->Handle));
}

 void OCTopOpeBRepDS_GapFiller::FilterByFace(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI)
{
  ((TopOpeBRepDS_GapFiller*)nativeHandle)->FilterByFace(*((TopoDS_Face*)F->Handle), *((TopOpeBRepDS_ListOfInterference*)LI->Handle));
}

 void OCTopOpeBRepDS_GapFiller::FilterByEdge(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI)
{
  ((TopOpeBRepDS_GapFiller*)nativeHandle)->FilterByEdge(*((TopoDS_Edge*)E->Handle), *((TopOpeBRepDS_ListOfInterference*)LI->Handle));
}

 void OCTopOpeBRepDS_GapFiller::FilterByIncidentDistance(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI)
{
  ((TopOpeBRepDS_GapFiller*)nativeHandle)->FilterByIncidentDistance(*((TopoDS_Face*)F->Handle), *((Handle_TopOpeBRepDS_Interference*)I->Handle), *((TopOpeBRepDS_ListOfInterference*)LI->Handle));
}

 System::Boolean OCTopOpeBRepDS_GapFiller::IsOnFace(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, OCNaroWrappers::OCTopoDS_Face^ F)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_GapFiller*)nativeHandle)->IsOnFace(*((Handle_TopOpeBRepDS_Interference*)I->Handle), *((TopoDS_Face*)F->Handle)));
}

 System::Boolean OCTopOpeBRepDS_GapFiller::IsOnEdge(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, OCNaroWrappers::OCTopoDS_Edge^ E)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_GapFiller*)nativeHandle)->IsOnEdge(*((Handle_TopOpeBRepDS_Interference*)I->Handle), *((TopoDS_Edge*)E->Handle)));
}

 void OCTopOpeBRepDS_GapFiller::BuildNewGeometries()
{
  ((TopOpeBRepDS_GapFiller*)nativeHandle)->BuildNewGeometries();
}

 void OCTopOpeBRepDS_GapFiller::ReBuildGeom(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I1, OCNaroWrappers::OCTColStd_MapOfInteger^ Done)
{
  ((TopOpeBRepDS_GapFiller*)nativeHandle)->ReBuildGeom(*((Handle_TopOpeBRepDS_Interference*)I1->Handle), *((TColStd_MapOfInteger*)Done->Handle));
}


