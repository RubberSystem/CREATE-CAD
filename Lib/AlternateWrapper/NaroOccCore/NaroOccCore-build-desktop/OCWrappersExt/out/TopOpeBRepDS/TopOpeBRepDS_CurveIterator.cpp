// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepDS_CurveIterator.h"
#include "../Converter.h"
#include "TopOpeBRepDS_ListOfInterference.h"
#include "TopOpeBRepDS_Interference.h"
#include "../Geom2d/Geom2d_Curve.h"


using namespace OCNaroWrappers;

OCTopOpeBRepDS_CurveIterator::OCTopOpeBRepDS_CurveIterator(TopOpeBRepDS_CurveIterator* nativeHandle) : OCTopOpeBRepDS_InterferenceIterator((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepDS_CurveIterator::OCTopOpeBRepDS_CurveIterator(OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ L) : OCTopOpeBRepDS_InterferenceIterator((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepDS_CurveIterator(*((TopOpeBRepDS_ListOfInterference*)L->Handle));
}

 System::Boolean OCTopOpeBRepDS_CurveIterator::MatchInterference(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_CurveIterator*)nativeHandle)->MatchInterference(*((Handle_TopOpeBRepDS_Interference*)I->Handle)));
}

 Standard_Integer OCTopOpeBRepDS_CurveIterator::Current()
{
  return ((TopOpeBRepDS_CurveIterator*)nativeHandle)->Current();
}

 OCTopAbs_Orientation OCTopOpeBRepDS_CurveIterator::Orientation(OCTopAbs_State S)
{
  return (OCTopAbs_Orientation)(((TopOpeBRepDS_CurveIterator*)nativeHandle)->Orientation((TopAbs_State)S));
}

OCGeom2d_Curve^ OCTopOpeBRepDS_CurveIterator::PCurve()
{
  Handle(Geom2d_Curve) tmp = ((TopOpeBRepDS_CurveIterator*)nativeHandle)->PCurve();
  return gcnew OCGeom2d_Curve(&tmp);
}


