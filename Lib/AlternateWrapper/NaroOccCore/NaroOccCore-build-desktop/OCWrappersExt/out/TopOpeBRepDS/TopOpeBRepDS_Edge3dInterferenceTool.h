// File generated by CPPExt (MPV)
//
#ifndef _TopOpeBRepDS_Edge3dInterferenceTool_OCWrappers_HeaderFile
#define _TopOpeBRepDS_Edge3dInterferenceTool_OCWrappers_HeaderFile

// include native header
#include <TopOpeBRepDS_Edge3dInterferenceTool.hxx>
#include "../Converter.h"


#include "../TopTrans/TopTrans_SurfaceTransition.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Dir.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopOpeBRepDS_Interference;


//! a tool computing edge / face complex transition, <br>
//!          Interferences of edge reference are given by <br>
//!          I = (T on face, G = point or vertex, S = edge) <br>
public ref class OCTopOpeBRepDS_Edge3dInterferenceTool  {

protected:
  TopOpeBRepDS_Edge3dInterferenceTool* nativeHandle;
  OCTopOpeBRepDS_Edge3dInterferenceTool(OCDummy^) {};

public:
  property TopOpeBRepDS_Edge3dInterferenceTool* Handle
  {
    TopOpeBRepDS_Edge3dInterferenceTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopOpeBRepDS_Edge3dInterferenceTool(TopOpeBRepDS_Edge3dInterferenceTool* nativeHandle);

// Methods PUBLIC


OCTopOpeBRepDS_Edge3dInterferenceTool();


 /*instead*/  void InitPointVertex(Standard_Integer IsVertex, OCNaroWrappers::OCTopoDS_Shape^ VonOO) ;


 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Shape^ Eref, OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I) ;


 /*instead*/  void Add(OCNaroWrappers::OCTopoDS_Shape^ Eref, OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I) ;


 /*instead*/  void Transition(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I) ;

~OCTopOpeBRepDS_Edge3dInterferenceTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
