// File generated by CPPExt (MPV)
//
#ifndef _TopOpeBRepDS_FaceInterferenceTool_OCWrappers_HeaderFile
#define _TopOpeBRepDS_FaceInterferenceTool_OCWrappers_HeaderFile

// include native header
#include <TopOpeBRepDS_FaceInterferenceTool.hxx>
#include "../Converter.h"


#include "../TopAbs/TopAbs_Orientation.h"
#include "../TopTrans/TopTrans_SurfaceTransition.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../gp/gp_Pnt.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopOpeBRepDS_Interference;
ref class OCTopOpeBRepDS_Curve;
ref class OCgp_Pnt;


//! a tool computing complex transition on Face. <br>
public ref class OCTopOpeBRepDS_FaceInterferenceTool  {

protected:
  TopOpeBRepDS_FaceInterferenceTool* nativeHandle;
  OCTopOpeBRepDS_FaceInterferenceTool(OCDummy^) {};

public:
  property TopOpeBRepDS_FaceInterferenceTool* Handle
  {
    TopOpeBRepDS_FaceInterferenceTool* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCTopOpeBRepDS_FaceInterferenceTool(TopOpeBRepDS_FaceInterferenceTool* nativeHandle);

// Methods PUBLIC


OCTopOpeBRepDS_FaceInterferenceTool(TopOpeBRepDS_PDataStructure P);


//! Eisnew = true if E is a new edge built on edge I->Geometry() <br>
//! 	        false if E is shape <=> I->Geometry() <br>
 /*instead*/  void Init(OCNaroWrappers::OCTopoDS_Shape^ FI, OCNaroWrappers::OCTopoDS_Shape^ E, System::Boolean Eisnew, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I) ;


//! Eisnew = true if E is a new edge built on edge I->Geometry() <br>
//! 	        false if E is shape <=> I->Geometry() <br>
 /*instead*/  void Add(OCNaroWrappers::OCTopoDS_Shape^ FI, OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopoDS_Shape^ E, System::Boolean Eisnew, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I) ;


 /*instead*/  void Add(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepDS_Curve^ C, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I) ;


 /*instead*/  void SetEdgePntPar(OCNaroWrappers::OCgp_Pnt^ P, Standard_Real par) ;


 /*instead*/  void GetEdgePntPar(OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& par) ;


 /*instead*/  System::Boolean IsEdgePntParDef() ;


 /*instead*/  void Transition(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I) ;

~OCTopOpeBRepDS_FaceInterferenceTool()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
