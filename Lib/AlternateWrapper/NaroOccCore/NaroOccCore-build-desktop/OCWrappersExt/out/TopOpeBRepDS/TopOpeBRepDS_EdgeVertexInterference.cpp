// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepDS_EdgeVertexInterference.h"
#include "../Converter.h"
#include "TopOpeBRepDS_Transition.h"


using namespace OCNaroWrappers;

OCTopOpeBRepDS_EdgeVertexInterference::OCTopOpeBRepDS_EdgeVertexInterference(Handle(TopOpeBRepDS_EdgeVertexInterference)* nativeHandle) : OCTopOpeBRepDS_ShapeShapeInterference((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TopOpeBRepDS_EdgeVertexInterference(*nativeHandle);
}

OCTopOpeBRepDS_EdgeVertexInterference::OCTopOpeBRepDS_EdgeVertexInterference(OCNaroWrappers::OCTopOpeBRepDS_Transition^ T, OCTopOpeBRepDS_Kind ST, Standard_Integer S, Standard_Integer G, System::Boolean GIsBound, OCTopOpeBRepDS_Config C, Standard_Real P) : OCTopOpeBRepDS_ShapeShapeInterference((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TopOpeBRepDS_EdgeVertexInterference(new TopOpeBRepDS_EdgeVertexInterference(*((TopOpeBRepDS_Transition*)T->Handle), (TopOpeBRepDS_Kind)ST, S, G, OCConverter::BooleanToStandardBoolean(GIsBound), (TopOpeBRepDS_Config)C, P));
}

OCTopOpeBRepDS_EdgeVertexInterference::OCTopOpeBRepDS_EdgeVertexInterference(OCNaroWrappers::OCTopOpeBRepDS_Transition^ T, Standard_Integer S, Standard_Integer G, System::Boolean GIsBound, OCTopOpeBRepDS_Config C, Standard_Real P) : OCTopOpeBRepDS_ShapeShapeInterference((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TopOpeBRepDS_EdgeVertexInterference(new TopOpeBRepDS_EdgeVertexInterference(*((TopOpeBRepDS_Transition*)T->Handle), S, G, OCConverter::BooleanToStandardBoolean(GIsBound), (TopOpeBRepDS_Config)C, P));
}

 Standard_Real OCTopOpeBRepDS_EdgeVertexInterference::Parameter()
{
  return (*((Handle_TopOpeBRepDS_EdgeVertexInterference*)nativeHandle))->Parameter();
}

 void OCTopOpeBRepDS_EdgeVertexInterference::Parameter(Standard_Real P)
{
  (*((Handle_TopOpeBRepDS_EdgeVertexInterference*)nativeHandle))->Parameter(P);
}

 Standard_OStream& OCTopOpeBRepDS_EdgeVertexInterference::Dump(Standard_OStream& OS)
{
  return (*((Handle_TopOpeBRepDS_EdgeVertexInterference*)nativeHandle))->Dump(OS);
}


