// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepDS_MapOfPoint.h"
#include "../Converter.h"
#include "TopOpeBRepDS_PointData.h"
#include "../TColStd/TColStd_MapIntegerHasher.h"
#include "TopOpeBRepDS_DataMapNodeOfMapOfPoint.h"
#include "TopOpeBRepDS_DataMapIteratorOfMapOfPoint.h"


using namespace OCNaroWrappers;

OCTopOpeBRepDS_MapOfPoint::OCTopOpeBRepDS_MapOfPoint(TopOpeBRepDS_MapOfPoint* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepDS_MapOfPoint::OCTopOpeBRepDS_MapOfPoint(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new TopOpeBRepDS_MapOfPoint(NbBuckets);
}

OCTopOpeBRepDS_MapOfPoint^ OCTopOpeBRepDS_MapOfPoint::Assign(OCNaroWrappers::OCTopOpeBRepDS_MapOfPoint^ Other)
{
  TopOpeBRepDS_MapOfPoint* tmp = new TopOpeBRepDS_MapOfPoint(0);
  *tmp = ((TopOpeBRepDS_MapOfPoint*)nativeHandle)->Assign(*((TopOpeBRepDS_MapOfPoint*)Other->Handle));
  return gcnew OCTopOpeBRepDS_MapOfPoint(tmp);
}

 void OCTopOpeBRepDS_MapOfPoint::ReSize(Standard_Integer NbBuckets)
{
  ((TopOpeBRepDS_MapOfPoint*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCTopOpeBRepDS_MapOfPoint::Bind(Standard_Integer K, OCNaroWrappers::OCTopOpeBRepDS_PointData^ I)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_MapOfPoint*)nativeHandle)->Bind(K, *((TopOpeBRepDS_PointData*)I->Handle)));
}

 System::Boolean OCTopOpeBRepDS_MapOfPoint::IsBound(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_MapOfPoint*)nativeHandle)->IsBound(K));
}

 System::Boolean OCTopOpeBRepDS_MapOfPoint::UnBind(Standard_Integer K)
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_MapOfPoint*)nativeHandle)->UnBind(K));
}

OCTopOpeBRepDS_PointData^ OCTopOpeBRepDS_MapOfPoint::Find(Standard_Integer K)
{
  TopOpeBRepDS_PointData* tmp = new TopOpeBRepDS_PointData();
  *tmp = ((TopOpeBRepDS_MapOfPoint*)nativeHandle)->Find(K);
  return gcnew OCTopOpeBRepDS_PointData(tmp);
}

OCTopOpeBRepDS_PointData^ OCTopOpeBRepDS_MapOfPoint::ChangeFind(Standard_Integer K)
{
  TopOpeBRepDS_PointData* tmp = new TopOpeBRepDS_PointData();
  *tmp = ((TopOpeBRepDS_MapOfPoint*)nativeHandle)->ChangeFind(K);
  return gcnew OCTopOpeBRepDS_PointData(tmp);
}

 Standard_Address OCTopOpeBRepDS_MapOfPoint::Find1(Standard_Integer K)
{
  return ((TopOpeBRepDS_MapOfPoint*)nativeHandle)->Find1(K);
}

 Standard_Address OCTopOpeBRepDS_MapOfPoint::ChangeFind1(Standard_Integer K)
{
  return ((TopOpeBRepDS_MapOfPoint*)nativeHandle)->ChangeFind1(K);
}


