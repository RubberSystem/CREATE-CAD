// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepDS_Association.h"
#include "../Converter.h"
#include "TopOpeBRepDS_Interference.h"
#include "TopOpeBRepDS_ListOfInterference.h"


using namespace OCNaroWrappers;

OCTopOpeBRepDS_Association::OCTopOpeBRepDS_Association(Handle(TopOpeBRepDS_Association)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TopOpeBRepDS_Association(*nativeHandle);
}

OCTopOpeBRepDS_Association::OCTopOpeBRepDS_Association() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TopOpeBRepDS_Association(new TopOpeBRepDS_Association());
}

 void OCTopOpeBRepDS_Association::Associate(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, OCNaroWrappers::OCTopOpeBRepDS_Interference^ K)
{
  (*((Handle_TopOpeBRepDS_Association*)nativeHandle))->Associate(*((Handle_TopOpeBRepDS_Interference*)I->Handle), *((Handle_TopOpeBRepDS_Interference*)K->Handle));
}

 void OCTopOpeBRepDS_Association::Associate(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, OCNaroWrappers::OCTopOpeBRepDS_ListOfInterference^ LI)
{
  (*((Handle_TopOpeBRepDS_Association*)nativeHandle))->Associate(*((Handle_TopOpeBRepDS_Interference*)I->Handle), *((TopOpeBRepDS_ListOfInterference*)LI->Handle));
}

 System::Boolean OCTopOpeBRepDS_Association::HasAssociation(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopOpeBRepDS_Association*)nativeHandle))->HasAssociation(*((Handle_TopOpeBRepDS_Interference*)I->Handle)));
}

OCTopOpeBRepDS_ListOfInterference^ OCTopOpeBRepDS_Association::Associated(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I)
{
  TopOpeBRepDS_ListOfInterference* tmp = new TopOpeBRepDS_ListOfInterference();
  *tmp = (*((Handle_TopOpeBRepDS_Association*)nativeHandle))->Associated(*((Handle_TopOpeBRepDS_Interference*)I->Handle));
  return gcnew OCTopOpeBRepDS_ListOfInterference(tmp);
}

 System::Boolean OCTopOpeBRepDS_Association::AreAssociated(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I, OCNaroWrappers::OCTopOpeBRepDS_Interference^ K)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TopOpeBRepDS_Association*)nativeHandle))->AreAssociated(*((Handle_TopOpeBRepDS_Interference*)I->Handle), *((Handle_TopOpeBRepDS_Interference*)K->Handle)));
}


