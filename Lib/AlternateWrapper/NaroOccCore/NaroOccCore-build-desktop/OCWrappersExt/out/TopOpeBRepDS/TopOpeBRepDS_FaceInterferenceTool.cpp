// File generated by CPPExt (CPP file)
//

#include "TopOpeBRepDS_FaceInterferenceTool.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "TopOpeBRepDS_Interference.h"
#include "TopOpeBRepDS_Curve.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCTopOpeBRepDS_FaceInterferenceTool::OCTopOpeBRepDS_FaceInterferenceTool(TopOpeBRepDS_FaceInterferenceTool* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopOpeBRepDS_FaceInterferenceTool::OCTopOpeBRepDS_FaceInterferenceTool(TopOpeBRepDS_PDataStructure P) 
{
  nativeHandle = new TopOpeBRepDS_FaceInterferenceTool(P);
}

 void OCTopOpeBRepDS_FaceInterferenceTool::Init(OCNaroWrappers::OCTopoDS_Shape^ FI, OCNaroWrappers::OCTopoDS_Shape^ E, System::Boolean Eisnew, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I)
{
  ((TopOpeBRepDS_FaceInterferenceTool*)nativeHandle)->Init(*((TopoDS_Shape*)FI->Handle), *((TopoDS_Shape*)E->Handle), OCConverter::BooleanToStandardBoolean(Eisnew), *((Handle_TopOpeBRepDS_Interference*)I->Handle));
}

 void OCTopOpeBRepDS_FaceInterferenceTool::Add(OCNaroWrappers::OCTopoDS_Shape^ FI, OCNaroWrappers::OCTopoDS_Shape^ F, OCNaroWrappers::OCTopoDS_Shape^ E, System::Boolean Eisnew, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I)
{
  ((TopOpeBRepDS_FaceInterferenceTool*)nativeHandle)->Add(*((TopoDS_Shape*)FI->Handle), *((TopoDS_Shape*)F->Handle), *((TopoDS_Shape*)E->Handle), OCConverter::BooleanToStandardBoolean(Eisnew), *((Handle_TopOpeBRepDS_Interference*)I->Handle));
}

 void OCTopOpeBRepDS_FaceInterferenceTool::Add(OCNaroWrappers::OCTopoDS_Shape^ E, OCNaroWrappers::OCTopOpeBRepDS_Curve^ C, OCNaroWrappers::OCTopOpeBRepDS_Interference^ I)
{
  ((TopOpeBRepDS_FaceInterferenceTool*)nativeHandle)->Add(*((TopoDS_Shape*)E->Handle), *((TopOpeBRepDS_Curve*)C->Handle), *((Handle_TopOpeBRepDS_Interference*)I->Handle));
}

 void OCTopOpeBRepDS_FaceInterferenceTool::SetEdgePntPar(OCNaroWrappers::OCgp_Pnt^ P, Standard_Real par)
{
  ((TopOpeBRepDS_FaceInterferenceTool*)nativeHandle)->SetEdgePntPar(*((gp_Pnt*)P->Handle), par);
}

 void OCTopOpeBRepDS_FaceInterferenceTool::GetEdgePntPar(OCNaroWrappers::OCgp_Pnt^ P, Standard_Real& par)
{
  ((TopOpeBRepDS_FaceInterferenceTool*)nativeHandle)->GetEdgePntPar(*((gp_Pnt*)P->Handle), par);
}

 System::Boolean OCTopOpeBRepDS_FaceInterferenceTool::IsEdgePntParDef()
{
  return OCConverter::StandardBooleanToBoolean(((TopOpeBRepDS_FaceInterferenceTool*)nativeHandle)->IsEdgePntParDef());
}

 void OCTopOpeBRepDS_FaceInterferenceTool::Transition(OCNaroWrappers::OCTopOpeBRepDS_Interference^ I)
{
  ((TopOpeBRepDS_FaceInterferenceTool*)nativeHandle)->Transition(*((Handle_TopOpeBRepDS_Interference*)I->Handle));
}


