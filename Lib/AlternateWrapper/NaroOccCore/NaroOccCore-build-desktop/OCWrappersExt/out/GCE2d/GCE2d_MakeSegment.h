// File generated by CPPExt (MPV)
//
#ifndef _GCE2d_MakeSegment_OCWrappers_HeaderFile
#define _GCE2d_MakeSegment_OCWrappers_HeaderFile

// include native header
#include <GCE2d_MakeSegment.hxx>
#include "../Converter.h"

#include "GCE2d_Root.h"

#include "GCE2d_Root.h"


namespace OCNaroWrappers
{

ref class OCGeom2d_TrimmedCurve;
ref class OCgp_Pnt2d;
ref class OCgp_Dir2d;
ref class OCgp_Lin2d;


//! Implements construction algorithms for a line <br>
//! segment in the plane. The result is a <br>
//! Geom2d_TrimmedCurve curve. <br>
//! A MakeSegment object provides a framework for: <br>
//! -   defining the construction of the line segment, <br>
//! -   implementing the construction algorithm, and <br>
//! -   consulting the results. In particular, the Value <br>
//!   function returns the constructed line segment. <br>
public ref class OCGCE2d_MakeSegment  : public OCGCE2d_Root {

protected:
  // dummy constructor;
  OCGCE2d_MakeSegment(OCDummy^) : OCGCE2d_Root((OCDummy^)nullptr) {};

public:

// constructor from native
OCGCE2d_MakeSegment(GCE2d_MakeSegment* nativeHandle);

// Methods PUBLIC

//! Make a segment of Line from the 2 points <P1> and <P2>. <br>
//!          Status is "ConfusedPoints" if <P1> and <P2> are confused. <br>
OCGCE2d_MakeSegment(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2);

//! Make a segment of Line from the point <P1> with <br>
//!          the direction <P> and ended by the projection of <br>
//!          <P2> on the line <P1,V>. <br>
//!          Status is "ConfusedPoints" if <P1> and <P2> are confused. <br>
OCGCE2d_MakeSegment(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Dir2d^ V, OCNaroWrappers::OCgp_Pnt2d^ P2);

//! Make a segment of Line from the line <Line> <br>
//!          between the two parameters U1 and U2. <br>
//!          Status is "SameParamters" if <U1> is equal <U2>. <br>
OCGCE2d_MakeSegment(OCNaroWrappers::OCgp_Lin2d^ Line, Standard_Real U1, Standard_Real U2);

//! Make a segment of Line from the line <Line> <br>
//!          between the point <Point> and the parameter Ulast. <br>
//!          It returns NullObject if <U1> is equal <U2>. <br>
OCGCE2d_MakeSegment(OCNaroWrappers::OCgp_Lin2d^ Line, OCNaroWrappers::OCgp_Pnt2d^ Point, Standard_Real Ulast);

//! Make a segment of Line from the line <Line> <br>
//!          between the two points <P1> and <P2>. <br>
//!          It returns NullObject if <P1> and <P2> are confused. <br>
//! Warning <br>
//! If the points which limit the segment are coincident <br>
//! for given points or for the projection of given points <br>
//! on the line which supports the line segment (that is, <br>
//! when IsDone returns false), the Status function <br>
//! returns gce_ConfusedPoints. This warning only <br>
//! concerns the first two constructors. <br>
OCGCE2d_MakeSegment(OCNaroWrappers::OCgp_Lin2d^ Line, OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2);

//! Returns the constructed line segment. <br>
//! Exceptions StdFail_NotDone if no line segment is constructed. <br>
 /*instead*/  OCGeom2d_TrimmedCurve^ Value() ;


 /*instead*/  OCGeom2d_TrimmedCurve^ Operator() ;

~OCGCE2d_MakeSegment()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
