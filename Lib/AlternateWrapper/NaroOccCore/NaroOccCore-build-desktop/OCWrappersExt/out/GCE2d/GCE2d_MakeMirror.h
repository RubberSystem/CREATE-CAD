// File generated by CPPExt (MPV)
//
#ifndef _GCE2d_MakeMirror_OCWrappers_HeaderFile
#define _GCE2d_MakeMirror_OCWrappers_HeaderFile

// include native header
#include <GCE2d_MakeMirror.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCGeom2d_Transformation;
ref class OCgp_Pnt2d;
ref class OCgp_Ax2d;
ref class OCgp_Lin2d;
ref class OCgp_Dir2d;


//! This class implements elementary construction algorithms for a <br>
//! symmetrical transformation in 2D space about a point <br>
//! or axis. The result is a Geom2d_Transformation transformation. <br>
//! A MakeMirror object provides a framework for: <br>
//! -   defining the construction of the transformation, <br>
//! -   implementing the construction algorithm, and <br>
//! -   consulting the result. <br>
public ref class OCGCE2d_MakeMirror  {

protected:
  GCE2d_MakeMirror* nativeHandle;
  OCGCE2d_MakeMirror(OCDummy^) {};

public:
  property GCE2d_MakeMirror* Handle
  {
    GCE2d_MakeMirror* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCGCE2d_MakeMirror(GCE2d_MakeMirror* nativeHandle);

// Methods PUBLIC


OCGCE2d_MakeMirror(OCNaroWrappers::OCgp_Pnt2d^ Point);


OCGCE2d_MakeMirror(OCNaroWrappers::OCgp_Ax2d^ Axis);


OCGCE2d_MakeMirror(OCNaroWrappers::OCgp_Lin2d^ Line);

//! Make a symetry transformation af axis defined by <br>
//!          <Point> and <Direc>. <br>
OCGCE2d_MakeMirror(OCNaroWrappers::OCgp_Pnt2d^ Point, OCNaroWrappers::OCgp_Dir2d^ Direc);

//! Returns the constructed transformation. <br>
 /*instead*/  OCGeom2d_Transformation^ Value() ;


 /*instead*/  OCGeom2d_Transformation^ Operator() ;

~OCGCE2d_MakeMirror()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
