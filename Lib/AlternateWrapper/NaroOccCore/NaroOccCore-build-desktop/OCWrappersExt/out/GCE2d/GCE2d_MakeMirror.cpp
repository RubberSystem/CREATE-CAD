// File generated by CPPExt (CPP file)
//

#include "GCE2d_MakeMirror.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_Transformation.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Ax2d.h"
#include "../gp/gp_Lin2d.h"
#include "../gp/gp_Dir2d.h"


using namespace OCNaroWrappers;

OCGCE2d_MakeMirror::OCGCE2d_MakeMirror(GCE2d_MakeMirror* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGCE2d_MakeMirror::OCGCE2d_MakeMirror(OCNaroWrappers::OCgp_Pnt2d^ Point) 
{
  nativeHandle = new GCE2d_MakeMirror(*((gp_Pnt2d*)Point->Handle));
}

OCGCE2d_MakeMirror::OCGCE2d_MakeMirror(OCNaroWrappers::OCgp_Ax2d^ Axis) 
{
  nativeHandle = new GCE2d_MakeMirror(*((gp_Ax2d*)Axis->Handle));
}

OCGCE2d_MakeMirror::OCGCE2d_MakeMirror(OCNaroWrappers::OCgp_Lin2d^ Line) 
{
  nativeHandle = new GCE2d_MakeMirror(*((gp_Lin2d*)Line->Handle));
}

OCGCE2d_MakeMirror::OCGCE2d_MakeMirror(OCNaroWrappers::OCgp_Pnt2d^ Point, OCNaroWrappers::OCgp_Dir2d^ Direc) 
{
  nativeHandle = new GCE2d_MakeMirror(*((gp_Pnt2d*)Point->Handle), *((gp_Dir2d*)Direc->Handle));
}

OCGeom2d_Transformation^ OCGCE2d_MakeMirror::Value()
{
  Handle(Geom2d_Transformation) tmp = ((GCE2d_MakeMirror*)nativeHandle)->Value();
  return gcnew OCGeom2d_Transformation(&tmp);
}

OCGeom2d_Transformation^ OCGCE2d_MakeMirror::Operator()
{
  Handle(Geom2d_Transformation) tmp = ((GCE2d_MakeMirror*)nativeHandle)->Operator();
  return gcnew OCGeom2d_Transformation(&tmp);
}


