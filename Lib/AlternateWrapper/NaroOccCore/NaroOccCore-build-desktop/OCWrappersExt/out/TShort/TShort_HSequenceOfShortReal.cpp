// File generated by CPPExt (CPP file)
//

#include "TShort_HSequenceOfShortReal.h"
#include "../Converter.h"
#include "TShort_SequenceOfShortReal.h"


using namespace OCNaroWrappers;

OCTShort_HSequenceOfShortReal::OCTShort_HSequenceOfShortReal(Handle(TShort_HSequenceOfShortReal)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TShort_HSequenceOfShortReal(*nativeHandle);
}

OCTShort_HSequenceOfShortReal::OCTShort_HSequenceOfShortReal() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TShort_HSequenceOfShortReal(new TShort_HSequenceOfShortReal());
}

 System::Boolean OCTShort_HSequenceOfShortReal::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->IsEmpty());
}

 Standard_Integer OCTShort_HSequenceOfShortReal::Length()
{
  return (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Length();
}

 void OCTShort_HSequenceOfShortReal::Clear()
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Clear();
}

 void OCTShort_HSequenceOfShortReal::Append(Standard_ShortReal anItem)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Append(anItem);
}

 void OCTShort_HSequenceOfShortReal::Append(OCNaroWrappers::OCTShort_HSequenceOfShortReal^ aSequence)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Append(*((Handle_TShort_HSequenceOfShortReal*)aSequence->Handle));
}

 void OCTShort_HSequenceOfShortReal::Prepend(Standard_ShortReal anItem)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Prepend(anItem);
}

 void OCTShort_HSequenceOfShortReal::Prepend(OCNaroWrappers::OCTShort_HSequenceOfShortReal^ aSequence)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Prepend(*((Handle_TShort_HSequenceOfShortReal*)aSequence->Handle));
}

 void OCTShort_HSequenceOfShortReal::Reverse()
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Reverse();
}

 void OCTShort_HSequenceOfShortReal::InsertBefore(Standard_Integer anIndex, Standard_ShortReal anItem)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->InsertBefore(anIndex, anItem);
}

 void OCTShort_HSequenceOfShortReal::InsertBefore(Standard_Integer anIndex, OCNaroWrappers::OCTShort_HSequenceOfShortReal^ aSequence)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->InsertBefore(anIndex, *((Handle_TShort_HSequenceOfShortReal*)aSequence->Handle));
}

 void OCTShort_HSequenceOfShortReal::InsertAfter(Standard_Integer anIndex, Standard_ShortReal anItem)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->InsertAfter(anIndex, anItem);
}

 void OCTShort_HSequenceOfShortReal::InsertAfter(Standard_Integer anIndex, OCNaroWrappers::OCTShort_HSequenceOfShortReal^ aSequence)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->InsertAfter(anIndex, *((Handle_TShort_HSequenceOfShortReal*)aSequence->Handle));
}

 void OCTShort_HSequenceOfShortReal::Exchange(Standard_Integer anIndex, Standard_Integer anOtherIndex)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Exchange(anIndex, anOtherIndex);
}

OCTShort_HSequenceOfShortReal^ OCTShort_HSequenceOfShortReal::Split(Standard_Integer anIndex)
{
  Handle(TShort_HSequenceOfShortReal) tmp = (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Split(anIndex);
  return gcnew OCTShort_HSequenceOfShortReal(&tmp);
}

 void OCTShort_HSequenceOfShortReal::SetValue(Standard_Integer anIndex, Standard_ShortReal anItem)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->SetValue(anIndex, anItem);
}

 Standard_ShortReal OCTShort_HSequenceOfShortReal::Value(Standard_Integer anIndex)
{
  return (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Value(anIndex);
}

 Standard_ShortReal OCTShort_HSequenceOfShortReal::ChangeValue(Standard_Integer anIndex)
{
  return (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->ChangeValue(anIndex);
}

 void OCTShort_HSequenceOfShortReal::Remove(Standard_Integer anIndex)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Remove(anIndex);
}

 void OCTShort_HSequenceOfShortReal::Remove(Standard_Integer fromIndex, Standard_Integer toIndex)
{
  (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Remove(fromIndex, toIndex);
}

OCTShort_SequenceOfShortReal^ OCTShort_HSequenceOfShortReal::Sequence()
{
  TShort_SequenceOfShortReal* tmp = new TShort_SequenceOfShortReal();
  *tmp = (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->Sequence();
  return gcnew OCTShort_SequenceOfShortReal(tmp);
}

OCTShort_SequenceOfShortReal^ OCTShort_HSequenceOfShortReal::ChangeSequence()
{
  TShort_SequenceOfShortReal* tmp = new TShort_SequenceOfShortReal();
  *tmp = (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->ChangeSequence();
  return gcnew OCTShort_SequenceOfShortReal(tmp);
}

OCTShort_HSequenceOfShortReal^ OCTShort_HSequenceOfShortReal::ShallowCopy()
{
  Handle(TShort_HSequenceOfShortReal) tmp = (*((Handle_TShort_HSequenceOfShortReal*)nativeHandle))->ShallowCopy();
  return gcnew OCTShort_HSequenceOfShortReal(&tmp);
}


