// File generated by CPPExt (MPV)
//
#ifndef _gce_MakeParab2d_OCWrappers_HeaderFile
#define _gce_MakeParab2d_OCWrappers_HeaderFile

// include native header
#include <gce_MakeParab2d.hxx>
#include "../Converter.h"

#include "gce_Root.h"

#include "../gp/gp_Parab2d.h"
#include "gce_Root.h"


namespace OCNaroWrappers
{

ref class OCgp_Ax2d;
ref class OCgp_Ax22d;
ref class OCgp_Pnt2d;
ref class OCgp_Parab2d;


//!This class implements the following algorithms used to <br>
//!          create Parab2d from gp. <br>
//!  Defines an infinite parabola. <br>
//!  An axis placement one axis defines the local cartesian <br>
//!  coordinate system ("XAxis") of the parabola. <br>
//!  The vertex of the parabola is the "Location" point of the <br>
//!  local coordinate system of the parabola. <br>
//!  The "XAxis" of the parabola is its axis of symmetry. <br>
//!  The "XAxis" is oriented from the vertex of the parabola to the <br>
//!  Focus of the parabola. <br>
//!  The "YAxis" is parallel to the directrix of the parabola and <br>
//!  its "Location" point is the vertex of the parabola. <br>
//!  The equation of the parabola in the local coordinate system is <br>
//!  Y**2 = (2*P) * X <br>
//!  P is the distance between the focus and the directrix of the <br>
//!  parabola called Parameter). <br>
//!  The focal length F = P/2 is the distance between the vertex <br>
//!  and the focus of the parabola. <br>
//! <br>
//!          * Create a Parab2d from one apex  and the center. <br>
//!          * Create a Parab2d with the directrix and the focus point. <br>
//!          * Create a Parab2d with its vertex point and its axis <br>
//!            of symetry and its focus length. <br>
public ref class OCgce_MakeParab2d  : public OCgce_Root {

protected:
  // dummy constructor;
  OCgce_MakeParab2d(OCDummy^) : OCgce_Root((OCDummy^)nullptr) {};

public:

// constructor from native
OCgce_MakeParab2d(gce_MakeParab2d* nativeHandle);

// Methods PUBLIC


//!  Creates a parabola with its axis of symmetry ("MirrorAxis") <br>
//!  and its focal length. <br>
//! Warnings : It is possible to have Focal = 0. <br>
//!  The status is "NullFocalLength" Raised if Focal < 0.0 <br>
OCgce_MakeParab2d(OCNaroWrappers::OCgp_Ax2d^ MirrorAxis, Standard_Real Focal, System::Boolean Sense);


//!  Creates a parabola with its local coordinate system <A> <br>
//!  and its focal length. <br>
//! Warnings : It is possible to have Focal = 0. <br>
//!  The status is "NullFocalLength" Raised if Focal < 0.0 <br>
OCgce_MakeParab2d(OCNaroWrappers::OCgp_Ax22d^ A, Standard_Real Focal);


//!  Creates a parabola with the directrix and the focus point. <br>
//!  The sense of parametrization is given by Sense. <br>
OCgce_MakeParab2d(OCNaroWrappers::OCgp_Ax2d^ D, OCNaroWrappers::OCgp_Pnt2d^ F, System::Boolean Sense);


//!  Creates a parabola with the local coordinate system and <br>
//!  the focus point. <br>
//!  The sense of parametrization is given by Sense. <br>
OCgce_MakeParab2d(OCNaroWrappers::OCgp_Ax22d^ D, OCNaroWrappers::OCgp_Pnt2d^ F);

//! Make an Parab2d with S1 as the Focal point and Center <br>
//!          as the apex of the parabola <br>
//!	Warning <br>
//! The MakeParab2d class does not prevent the <br>
//! construction of a parabola with a null focal distance. <br>
//! If an error occurs (that is, when IsDone returns <br>
//! false), the Status function returns: <br>
//! -   gce_NullFocusLength if Focal is less than 0.0, or <br>
//! -   gce_NullAxis if S1 and Center are coincident. <br>
OCgce_MakeParab2d(OCNaroWrappers::OCgp_Pnt2d^ S1, OCNaroWrappers::OCgp_Pnt2d^ Center, System::Boolean Sense);

//! Returns the constructed parabola. <br>
//! Exceptions StdFail_NotDone if no parabola is constructed. <br>
 /*instead*/  OCgp_Parab2d^ Value() ;


 /*instead*/  OCgp_Parab2d^ Operator() ;

~OCgce_MakeParab2d()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
