// File generated by CPPExt (CPP file)
//

#include "gce_MakeCirc2d.h"
#include "../Converter.h"
#include "../gp/gp_Ax2d.h"
#include "../gp/gp_Ax22d.h"
#include "../gp/gp_Circ2d.h"
#include "../gp/gp_Pnt2d.h"


using namespace OCNaroWrappers;

OCgce_MakeCirc2d::OCgce_MakeCirc2d(gce_MakeCirc2d* nativeHandle) : OCgce_Root((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCgce_MakeCirc2d::OCgce_MakeCirc2d(OCNaroWrappers::OCgp_Ax2d^ XAxis, Standard_Real Radius, System::Boolean Sense) : OCgce_Root((OCDummy^)nullptr)

{
  nativeHandle = new gce_MakeCirc2d(*((gp_Ax2d*)XAxis->Handle), Radius, OCConverter::BooleanToStandardBoolean(Sense));
}

OCgce_MakeCirc2d::OCgce_MakeCirc2d(OCNaroWrappers::OCgp_Ax22d^ Axis, Standard_Real Radius) : OCgce_Root((OCDummy^)nullptr)

{
  nativeHandle = new gce_MakeCirc2d(*((gp_Ax22d*)Axis->Handle), Radius);
}

OCgce_MakeCirc2d::OCgce_MakeCirc2d(OCNaroWrappers::OCgp_Circ2d^ Circ, Standard_Real Dist) : OCgce_Root((OCDummy^)nullptr)

{
  nativeHandle = new gce_MakeCirc2d(*((gp_Circ2d*)Circ->Handle), Dist);
}

OCgce_MakeCirc2d::OCgce_MakeCirc2d(OCNaroWrappers::OCgp_Circ2d^ Circ, OCNaroWrappers::OCgp_Pnt2d^ Point) : OCgce_Root((OCDummy^)nullptr)

{
  nativeHandle = new gce_MakeCirc2d(*((gp_Circ2d*)Circ->Handle), *((gp_Pnt2d*)Point->Handle));
}

OCgce_MakeCirc2d::OCgce_MakeCirc2d(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2, OCNaroWrappers::OCgp_Pnt2d^ P3) : OCgce_Root((OCDummy^)nullptr)

{
  nativeHandle = new gce_MakeCirc2d(*((gp_Pnt2d*)P1->Handle), *((gp_Pnt2d*)P2->Handle), *((gp_Pnt2d*)P3->Handle));
}

OCgce_MakeCirc2d::OCgce_MakeCirc2d(OCNaroWrappers::OCgp_Pnt2d^ Center, Standard_Real Radius, System::Boolean Sense) : OCgce_Root((OCDummy^)nullptr)

{
  nativeHandle = new gce_MakeCirc2d(*((gp_Pnt2d*)Center->Handle), Radius, OCConverter::BooleanToStandardBoolean(Sense));
}

OCgce_MakeCirc2d::OCgce_MakeCirc2d(OCNaroWrappers::OCgp_Pnt2d^ Center, OCNaroWrappers::OCgp_Pnt2d^ Point, System::Boolean Sense) : OCgce_Root((OCDummy^)nullptr)

{
  nativeHandle = new gce_MakeCirc2d(*((gp_Pnt2d*)Center->Handle), *((gp_Pnt2d*)Point->Handle), OCConverter::BooleanToStandardBoolean(Sense));
}

OCgp_Circ2d^ OCgce_MakeCirc2d::Value()
{
  gp_Circ2d* tmp = new gp_Circ2d();
  *tmp = ((gce_MakeCirc2d*)nativeHandle)->Value();
  return gcnew OCgp_Circ2d(tmp);
}

OCgp_Circ2d^ OCgce_MakeCirc2d::Operator()
{
  gp_Circ2d* tmp = new gp_Circ2d();
  *tmp = ((gce_MakeCirc2d*)nativeHandle)->Operator();
  return gcnew OCgp_Circ2d(tmp);
}


