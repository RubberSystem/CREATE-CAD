// File generated by CPPExt (MPV)
//
#ifndef _gce_MakeLin2d_OCWrappers_HeaderFile
#define _gce_MakeLin2d_OCWrappers_HeaderFile

// include native header
#include <gce_MakeLin2d.hxx>
#include "../Converter.h"

#include "gce_Root.h"

#include "../gp/gp_Lin2d.h"
#include "gce_Root.h"


namespace OCNaroWrappers
{

ref class OCgp_Ax2d;
ref class OCgp_Pnt2d;
ref class OCgp_Dir2d;
ref class OCgp_Lin2d;


//! This class implements the following algorithms used <br>
//!           to create Lin2d from gp. <br>
//! <br>
//!           * Create a Lin2d parallel to another and passing <br>
//!             through a point. <br>
//!           * Create a Lin2d parallel to another at the distance <br>
//!             Dist. <br>
//!           * Create a Lin2d passing through 2 points. <br>
//!           * Create a Lin2d from its axis (Ax1 from gp). <br>
//!           * Create a Lin2d from a point and a direction. <br>
//!           * Create a Lin2d from its equation. <br>
public ref class OCgce_MakeLin2d  : public OCgce_Root {

protected:
  // dummy constructor;
  OCgce_MakeLin2d(OCDummy^) : OCgce_Root((OCDummy^)nullptr) {};

public:

// constructor from native
OCgce_MakeLin2d(gce_MakeLin2d* nativeHandle);

// Methods PUBLIC

//! Creates a line located with A. <br>
OCgce_MakeLin2d(OCNaroWrappers::OCgp_Ax2d^ A);


//!  <P> is the location point (origin) of the line and <br>
//!  <V> is the direction of the line. <br>
OCgce_MakeLin2d(OCNaroWrappers::OCgp_Pnt2d^ P, OCNaroWrappers::OCgp_Dir2d^ V);


//!  Creates the line from the equation A*X + B*Y + C = 0.0 <br>
//!  the status is "NullAxis"if Sqrt(A*A + B*B) <= Resolution from gp. <br>
OCgce_MakeLin2d(Standard_Real A, Standard_Real B, Standard_Real C);

//! Make a Lin2d from gp <TheLin> parallel to another <br>
//!           Lin2d <Lin> at a distance <Dist>. <br>
//!           If Dist is greater than zero the result is on the <br>
//!           right of the Line <Lin>, else the result is on the <br>
//!           left of the Line <Lin>. <br>
OCgce_MakeLin2d(OCNaroWrappers::OCgp_Lin2d^ Lin, Standard_Real Dist);

//! Make a Lin2d from gp <TheLin> parallel to another <br>
//!           Lin2d <Lin> and passing through a Pnt2d <Point>. <br>
OCgce_MakeLin2d(OCNaroWrappers::OCgp_Lin2d^ Lin, OCNaroWrappers::OCgp_Pnt2d^ Point);

//! Make a Lin2d from gp <TheLin> passing through 2 <br>
//!           Pnt2d <P1>,<P2>. <br>
//!           It returns false if <P1> and <P2> are confused. <br>
//! Warning <br>
//! If an error occurs (that is, when IsDone returns <br>
//! false), the Status function returns: <br>
//! -   gce_NullAxis if Sqrt(A*A + B*B) is less <br>
//!   than or equal to gp::Resolution(), or <br>
//! -   gce_ConfusedPoints if points P1 and P2 are coincident. <br>
OCgce_MakeLin2d(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2);

//! Returns the constructed line. <br>
//! Exceptions StdFail_NotDone if no line is constructed. <br>
 /*instead*/  OCgp_Lin2d^ Value() ;


 /*instead*/  OCgp_Lin2d^ Operator() ;

~OCgce_MakeLin2d()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
