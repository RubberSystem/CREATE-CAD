// File generated by CPPExt (MPV)
//
#ifndef _gce_MakeElips2d_OCWrappers_HeaderFile
#define _gce_MakeElips2d_OCWrappers_HeaderFile

// include native header
#include <gce_MakeElips2d.hxx>
#include "../Converter.h"

#include "gce_Root.h"

#include "../gp/gp_Elips2d.h"
#include "gce_Root.h"


namespace OCNaroWrappers
{

ref class OCgp_Ax2d;
ref class OCgp_Ax22d;
ref class OCgp_Pnt2d;
ref class OCgp_Elips2d;


//!This class implements the following algorithms used to <br>
//!          create Elips2d from gp. <br>
//! <br>
//!          * Create an ellipse from its center, and two points: <br>
//!            one on the ciconference giving the major radius, the <br>
//!            other giving the value of the small radius. <br>
//!          * Create an ellipse from its major axis and its major <br>
//!            radius and its minor radius. <br>
public ref class OCgce_MakeElips2d  : public OCgce_Root {

protected:
  // dummy constructor;
  OCgce_MakeElips2d(OCDummy^) : OCgce_Root((OCDummy^)nullptr) {};

public:

// constructor from native
OCgce_MakeElips2d(gce_MakeElips2d* nativeHandle);

// Methods PUBLIC


//!  Creates an ellipse with the major axis, the major and the <br>
//!  minor radius. The location of the MajorAxis is the center <br>
//!  of the  ellipse. <br>
//!  The sense of parametrization is given by Sense. <br>
//!  It is possible to create an ellipse with MajorRadius = MinorRadius. <br>
//!  the status is "InvertRadius" if MajorRadius < MinorRadius or <br>
//!  "NegativeRadius" if MinorRadius < 0.0 <br>
OCgce_MakeElips2d(OCNaroWrappers::OCgp_Ax2d^ MajorAxis, Standard_Real MajorRadius, Standard_Real MinorRadius, System::Boolean Sense);


//!  Axis defines the Xaxis and Yaxis of the ellipse which defines <br>
//!  the origin and the sense of parametrization. <br>
//!  Creates an ellipse with the AxisPlacement the major and the <br>
//!  minor radius. The location of Axis is the center <br>
//!  of the  ellipse. <br>
//!  It is possible to create an ellipse with MajorRadius = MinorRadius. <br>
//!  the status is "InvertRadius" if MajorRadius < MinorRadius or <br>
//!  "NegativeRadius" if MinorRadius < 0.0 <br>
OCgce_MakeElips2d(OCNaroWrappers::OCgp_Ax22d^ A, Standard_Real MajorRadius, Standard_Real MinorRadius);

//! Makes an Elips2d with its center and two points. <br>
//!          The sense of parametrization is given by S1, S2, <br>
//!          and Center. <br>
//! Depending on the constructor, the  implicit orientation of the ellipse is: <br>
//! -   the sense defined by A, <br>
//! -   the sense defined by points Center, S1 and S2, <br>
//! -   the trigonometric sense if Sense is not given or is true, or <br>
//! -   the opposite if Sense is false. <br>
//! It is possible to construct an ellipse where the major <br>
//! and minor radii are equal. <br>
//! Warning <br>
//! If an error occurs (that is, when IsDone returns <br>
//! false), the Status function returns: <br>
//! -   gce_InvertRadius if MajorRadius is less than MinorRadius, <br>
//! -   gce_NegativeRadius if MajorRadius or <br>
//!   MinorRadius is less than 0.0, <br>
//! -   gce_NullAxis if points S1, S2 and Center are collinear, or <br>
//! -   gce_InvertAxis if the major radius computed with <br>
//!   Center and S1 is less than the minor radius <br>
//!   computed with Center, S1 and S2. <br>
OCgce_MakeElips2d(OCNaroWrappers::OCgp_Pnt2d^ S1, OCNaroWrappers::OCgp_Pnt2d^ S2, OCNaroWrappers::OCgp_Pnt2d^ Center);

//! Returns the constructed ellipse. <br>
//! Exceptions StdFail_NotDone if no ellipse is constructed. <br>
 /*instead*/  OCgp_Elips2d^ Value() ;


 /*instead*/  OCgp_Elips2d^ Operator() ;

~OCgce_MakeElips2d()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
