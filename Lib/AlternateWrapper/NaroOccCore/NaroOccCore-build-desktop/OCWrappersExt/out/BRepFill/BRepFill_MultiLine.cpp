// File generated by CPPExt (CPP file)
//

#include "BRepFill_MultiLine.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../Geom/Geom_Curve.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Pnt2d.h"


using namespace OCNaroWrappers;

OCBRepFill_MultiLine::OCBRepFill_MultiLine(BRepFill_MultiLine* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepFill_MultiLine::OCBRepFill_MultiLine() 
{
  nativeHandle = new BRepFill_MultiLine();
}

OCBRepFill_MultiLine::OCBRepFill_MultiLine(OCNaroWrappers::OCTopoDS_Face^ Face1, OCNaroWrappers::OCTopoDS_Face^ Face2, OCNaroWrappers::OCTopoDS_Edge^ Edge1, OCNaroWrappers::OCTopoDS_Edge^ Edge2, System::Boolean Inv1, System::Boolean Inv2, OCNaroWrappers::OCGeom2d_Curve^ Bissec) 
{
  nativeHandle = new BRepFill_MultiLine(*((TopoDS_Face*)Face1->Handle), *((TopoDS_Face*)Face2->Handle), *((TopoDS_Edge*)Edge1->Handle), *((TopoDS_Edge*)Edge2->Handle), OCConverter::BooleanToStandardBoolean(Inv1), OCConverter::BooleanToStandardBoolean(Inv2), *((Handle_Geom2d_Curve*)Bissec->Handle));
}

 System::Boolean OCBRepFill_MultiLine::IsParticularCase()
{
  return OCConverter::StandardBooleanToBoolean(((BRepFill_MultiLine*)nativeHandle)->IsParticularCase());
}

 OCGeomAbs_Shape OCBRepFill_MultiLine::Continuity()
{
  return (OCGeomAbs_Shape)(((BRepFill_MultiLine*)nativeHandle)->Continuity());
}

 void OCBRepFill_MultiLine::Curves(OCNaroWrappers::OCGeom_Curve^ Curve, OCNaroWrappers::OCGeom2d_Curve^ PCurve1, OCNaroWrappers::OCGeom2d_Curve^ PCurve2)
{
  ((BRepFill_MultiLine*)nativeHandle)->Curves(*((Handle_Geom_Curve*)Curve->Handle), *((Handle_Geom2d_Curve*)PCurve1->Handle), *((Handle_Geom2d_Curve*)PCurve2->Handle));
}

 Standard_Real OCBRepFill_MultiLine::FirstParameter()
{
  return ((BRepFill_MultiLine*)nativeHandle)->FirstParameter();
}

 Standard_Real OCBRepFill_MultiLine::LastParameter()
{
  return ((BRepFill_MultiLine*)nativeHandle)->LastParameter();
}

OCgp_Pnt^ OCBRepFill_MultiLine::Value(Standard_Real U)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((BRepFill_MultiLine*)nativeHandle)->Value(U);
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt2d^ OCBRepFill_MultiLine::ValueOnF1(Standard_Real U)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = ((BRepFill_MultiLine*)nativeHandle)->ValueOnF1(U);
  return gcnew OCgp_Pnt2d(tmp);
}

OCgp_Pnt2d^ OCBRepFill_MultiLine::ValueOnF2(Standard_Real U)
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = ((BRepFill_MultiLine*)nativeHandle)->ValueOnF2(U);
  return gcnew OCgp_Pnt2d(tmp);
}

 void OCBRepFill_MultiLine::Value3dOnF1OnF2(Standard_Real U, OCNaroWrappers::OCgp_Pnt^ P3d, OCNaroWrappers::OCgp_Pnt2d^ PF1, OCNaroWrappers::OCgp_Pnt2d^ PF2)
{
  ((BRepFill_MultiLine*)nativeHandle)->Value3dOnF1OnF2(U, *((gp_Pnt*)P3d->Handle), *((gp_Pnt2d*)PF1->Handle), *((gp_Pnt2d*)PF2->Handle));
}


