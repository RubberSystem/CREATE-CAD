// File generated by CPPExt (CPP file)
//

#include "BRepFill_TrimSurfaceTool.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_Curve.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TColgp/TColgp_SequenceOfPnt.h"
#include "../gp/gp_Pnt2d.h"
#include "../Geom/Geom_Curve.h"


using namespace OCNaroWrappers;

OCBRepFill_TrimSurfaceTool::OCBRepFill_TrimSurfaceTool(BRepFill_TrimSurfaceTool* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepFill_TrimSurfaceTool::OCBRepFill_TrimSurfaceTool(OCNaroWrappers::OCGeom2d_Curve^ Bis, OCNaroWrappers::OCTopoDS_Face^ Face1, OCNaroWrappers::OCTopoDS_Face^ Face2, OCNaroWrappers::OCTopoDS_Edge^ Edge1, OCNaroWrappers::OCTopoDS_Edge^ Edge2, System::Boolean Inv1, System::Boolean Inv2) 
{
  nativeHandle = new BRepFill_TrimSurfaceTool(*((Handle_Geom2d_Curve*)Bis->Handle), *((TopoDS_Face*)Face1->Handle), *((TopoDS_Face*)Face2->Handle), *((TopoDS_Edge*)Edge1->Handle), *((TopoDS_Edge*)Edge2->Handle), OCConverter::BooleanToStandardBoolean(Inv1), OCConverter::BooleanToStandardBoolean(Inv2));
}

 void OCBRepFill_TrimSurfaceTool::IntersectWith(OCNaroWrappers::OCTopoDS_Edge^ EdgeOnF1, OCNaroWrappers::OCTopoDS_Edge^ EdgeOnF2, OCNaroWrappers::OCTColgp_SequenceOfPnt^ Points)
{
  ((BRepFill_TrimSurfaceTool*)nativeHandle)->IntersectWith(*((TopoDS_Edge*)EdgeOnF1->Handle), *((TopoDS_Edge*)EdgeOnF2->Handle), *((TColgp_SequenceOfPnt*)Points->Handle));
}

 System::Boolean OCBRepFill_TrimSurfaceTool::IsOnFace(OCNaroWrappers::OCgp_Pnt2d^ Point)
{
  return OCConverter::StandardBooleanToBoolean(((BRepFill_TrimSurfaceTool*)nativeHandle)->IsOnFace(*((gp_Pnt2d*)Point->Handle)));
}

 Standard_Real OCBRepFill_TrimSurfaceTool::ProjOn(OCNaroWrappers::OCgp_Pnt2d^ Point, OCNaroWrappers::OCTopoDS_Edge^ Edge)
{
  return ((BRepFill_TrimSurfaceTool*)nativeHandle)->ProjOn(*((gp_Pnt2d*)Point->Handle), *((TopoDS_Edge*)Edge->Handle));
}

 void OCBRepFill_TrimSurfaceTool::Project(Standard_Real U1, Standard_Real U2, OCNaroWrappers::OCGeom_Curve^ Curve, OCNaroWrappers::OCGeom2d_Curve^ PCurve1, OCNaroWrappers::OCGeom2d_Curve^ PCurve2, OCGeomAbs_Shape& myCont)
{
  ((BRepFill_TrimSurfaceTool*)nativeHandle)->Project(U1, U2, *((Handle_Geom_Curve*)Curve->Handle), *((Handle_Geom2d_Curve*)PCurve1->Handle), *((Handle_Geom2d_Curve*)PCurve2->Handle), (GeomAbs_Shape&)myCont);
}


