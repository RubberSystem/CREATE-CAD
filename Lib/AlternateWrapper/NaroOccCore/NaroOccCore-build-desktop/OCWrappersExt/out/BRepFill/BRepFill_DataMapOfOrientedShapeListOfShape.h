// File generated by CPPExt (MPV)
//
#ifndef _BRepFill_DataMapOfOrientedShapeListOfShape_OCWrappers_HeaderFile
#define _BRepFill_DataMapOfOrientedShapeListOfShape_OCWrappers_HeaderFile

// include native header
#include <BRepFill_DataMapOfOrientedShapeListOfShape.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTopoDS_Shape;
ref class OCTopTools_ListOfShape;
ref class OCTopTools_OrientedShapeMapHasher;
ref class OCBRepFill_DataMapNodeOfDataMapOfOrientedShapeListOfShape;
ref class OCBRepFill_DataMapIteratorOfDataMapOfOrientedShapeListOfShape;



public ref class OCBRepFill_DataMapOfOrientedShapeListOfShape  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCBRepFill_DataMapOfOrientedShapeListOfShape(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepFill_DataMapOfOrientedShapeListOfShape(BRepFill_DataMapOfOrientedShapeListOfShape* nativeHandle);

// Methods PUBLIC


OCBRepFill_DataMapOfOrientedShapeListOfShape(Standard_Integer NbBuckets);


 /*instead*/  OCBRepFill_DataMapOfOrientedShapeListOfShape^ Assign(OCNaroWrappers::OCBRepFill_DataMapOfOrientedShapeListOfShape^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Bind(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCTopTools_ListOfShape^ I) ;


 /*instead*/  System::Boolean IsBound(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  System::Boolean UnBind(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  OCTopTools_ListOfShape^ Find(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  OCTopTools_ListOfShape^ ChangeFind(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  Standard_Address Find1(OCNaroWrappers::OCTopoDS_Shape^ K) ;


 /*instead*/  Standard_Address ChangeFind1(OCNaroWrappers::OCTopoDS_Shape^ K) ;

~OCBRepFill_DataMapOfOrientedShapeListOfShape()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
