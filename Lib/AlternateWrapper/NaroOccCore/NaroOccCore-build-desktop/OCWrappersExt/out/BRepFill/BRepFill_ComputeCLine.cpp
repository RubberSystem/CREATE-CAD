// File generated by CPPExt (CPP file)
//

#include "BRepFill_ComputeCLine.h"
#include "../Converter.h"
#include "BRepFill_MultiLine.h"
#include "BRepFill_MultiLineTool.h"
#include "BRepFill_MyLeastSquareOfComputeCLine.h"
#include "../AppParCurves/AppParCurves_MultiCurve.h"


using namespace OCNaroWrappers;

OCBRepFill_ComputeCLine::OCBRepFill_ComputeCLine(BRepFill_ComputeCLine* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepFill_ComputeCLine::OCBRepFill_ComputeCLine(OCNaroWrappers::OCBRepFill_MultiLine^ Line, Standard_Integer degreemin, Standard_Integer degreemax, Standard_Real Tolerance3d, Standard_Real Tolerance2d, System::Boolean cutting, OCAppParCurves_Constraint FirstC, OCAppParCurves_Constraint LastC) 
{
  nativeHandle = new BRepFill_ComputeCLine(*((BRepFill_MultiLine*)Line->Handle), degreemin, degreemax, Tolerance3d, Tolerance2d, OCConverter::BooleanToStandardBoolean(cutting), (AppParCurves_Constraint)FirstC, (AppParCurves_Constraint)LastC);
}

OCBRepFill_ComputeCLine::OCBRepFill_ComputeCLine(Standard_Integer degreemin, Standard_Integer degreemax, Standard_Real Tolerance3d, Standard_Real Tolerance2d, System::Boolean cutting, OCAppParCurves_Constraint FirstC, OCAppParCurves_Constraint LastC) 
{
  nativeHandle = new BRepFill_ComputeCLine(degreemin, degreemax, Tolerance3d, Tolerance2d, OCConverter::BooleanToStandardBoolean(cutting), (AppParCurves_Constraint)FirstC, (AppParCurves_Constraint)LastC);
}

 void OCBRepFill_ComputeCLine::Perform(OCNaroWrappers::OCBRepFill_MultiLine^ Line)
{
  ((BRepFill_ComputeCLine*)nativeHandle)->Perform(*((BRepFill_MultiLine*)Line->Handle));
}

 void OCBRepFill_ComputeCLine::SetDegrees(Standard_Integer degreemin, Standard_Integer degreemax)
{
  ((BRepFill_ComputeCLine*)nativeHandle)->SetDegrees(degreemin, degreemax);
}

 void OCBRepFill_ComputeCLine::SetTolerances(Standard_Real Tolerance3d, Standard_Real Tolerance2d)
{
  ((BRepFill_ComputeCLine*)nativeHandle)->SetTolerances(Tolerance3d, Tolerance2d);
}

 void OCBRepFill_ComputeCLine::SetConstraints(OCAppParCurves_Constraint FirstC, OCAppParCurves_Constraint LastC)
{
  ((BRepFill_ComputeCLine*)nativeHandle)->SetConstraints((AppParCurves_Constraint)FirstC, (AppParCurves_Constraint)LastC);
}

 System::Boolean OCBRepFill_ComputeCLine::IsAllApproximated()
{
  return OCConverter::StandardBooleanToBoolean(((BRepFill_ComputeCLine*)nativeHandle)->IsAllApproximated());
}

 System::Boolean OCBRepFill_ComputeCLine::IsToleranceReached()
{
  return OCConverter::StandardBooleanToBoolean(((BRepFill_ComputeCLine*)nativeHandle)->IsToleranceReached());
}

 void OCBRepFill_ComputeCLine::Error(Standard_Integer Index, Standard_Real& tol3d, Standard_Real& tol2d)
{
  ((BRepFill_ComputeCLine*)nativeHandle)->Error(Index, tol3d, tol2d);
}

 Standard_Integer OCBRepFill_ComputeCLine::NbMultiCurves()
{
  return ((BRepFill_ComputeCLine*)nativeHandle)->NbMultiCurves();
}

OCAppParCurves_MultiCurve^ OCBRepFill_ComputeCLine::Value(Standard_Integer Index)
{
  AppParCurves_MultiCurve* tmp = new AppParCurves_MultiCurve();
  *tmp = ((BRepFill_ComputeCLine*)nativeHandle)->Value(Index);
  return gcnew OCAppParCurves_MultiCurve(tmp);
}

 void OCBRepFill_ComputeCLine::Parameters(Standard_Integer Index, Standard_Real& firstp, Standard_Real& lastp)
{
  ((BRepFill_ComputeCLine*)nativeHandle)->Parameters(Index, firstp, lastp);
}


