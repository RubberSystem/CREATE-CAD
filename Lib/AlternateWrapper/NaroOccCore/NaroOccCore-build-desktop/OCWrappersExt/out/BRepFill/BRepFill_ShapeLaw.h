// File generated by CPPExt (Transient)
//
#ifndef _BRepFill_ShapeLaw_OCWrappers_HeaderFile
#define _BRepFill_ShapeLaw_OCWrappers_HeaderFile

// include the wrapped class
#include <BRepFill_ShapeLaw.hxx>
#include "../Converter.h"

#include "BRepFill_SectionLaw.h"

#include "../TopoDS/TopoDS_Shape.h"
#include "../GeomAbs/GeomAbs_Shape.h"


namespace OCNaroWrappers
{

ref class OCTopTools_HArray1OfShape;
ref class OCLaw_Function;
ref class OCTopoDS_Vertex;
ref class OCTopoDS_Wire;
ref class OCGeomFill_SectionLaw;
ref class OCTopoDS_Shape;
ref class OCTopoDS_Edge;


//! Build Section Law, with an Vertex, or an Wire <br>
public ref class OCBRepFill_ShapeLaw : OCBRepFill_SectionLaw {

protected:
  // dummy constructor;
  OCBRepFill_ShapeLaw(OCDummy^) : OCBRepFill_SectionLaw((OCDummy^)nullptr) {};

public:

// constructor from native
OCBRepFill_ShapeLaw(Handle(BRepFill_ShapeLaw)* nativeHandle);

// Methods PUBLIC

//! Construct an constant Law <br>
OCBRepFill_ShapeLaw(OCNaroWrappers::OCTopoDS_Vertex^ V, System::Boolean Build);

//! Construct an constant Law <br>
OCBRepFill_ShapeLaw(OCNaroWrappers::OCTopoDS_Wire^ W, System::Boolean Build);

//! Construct an evolutive Law <br>
OCBRepFill_ShapeLaw(OCNaroWrappers::OCTopoDS_Wire^ W, OCNaroWrappers::OCLaw_Function^ L, System::Boolean Build);

//! Say if the input shape is a  vertex. <br>
virtual /*instead*/  System::Boolean IsVertex() ;

//! Say if the Law is  Constant. <br>
virtual /*instead*/  System::Boolean IsConstant() ;

//! Give the law build on a concaneted section <br>
virtual /*instead*/  OCGeomFill_SectionLaw^ ConcatenedLaw() ;


virtual /*instead*/  OCGeomAbs_Shape Continuity(Standard_Integer Index, Standard_Real TolAngular) ;


virtual /*instead*/  Standard_Real VertexTol(Standard_Integer Index, Standard_Real Param) ;


virtual /*instead*/  OCTopoDS_Vertex^ Vertex(Standard_Integer Index, Standard_Real Param) ;


virtual /*instead*/  void D0(Standard_Real Param, OCNaroWrappers::OCTopoDS_Shape^ S) ;


 /*instead*/  OCTopoDS_Edge^ Edge(Standard_Integer Index) ;

~OCBRepFill_ShapeLaw()
{
  nativeHandle->Nullify();
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
