// File generated by CPPExt (CPP file)
//

#include "BRepFill_Pipe.h"
#include "../Converter.h"
#include "BRepFill_LocationLaw.h"
#include "../TopTools/TopTools_HArray2OfShape.h"
#include "../TopoDS/TopoDS_Wire.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCBRepFill_Pipe::OCBRepFill_Pipe(BRepFill_Pipe* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepFill_Pipe::OCBRepFill_Pipe() 
{
  nativeHandle = new BRepFill_Pipe();
}

OCBRepFill_Pipe::OCBRepFill_Pipe(OCNaroWrappers::OCTopoDS_Wire^ Spine, OCNaroWrappers::OCTopoDS_Shape^ Profile, System::Boolean GeneratePartCase) 
{
  nativeHandle = new BRepFill_Pipe(*((TopoDS_Wire*)Spine->Handle), *((TopoDS_Shape*)Profile->Handle), OCConverter::BooleanToStandardBoolean(GeneratePartCase));
}

 void OCBRepFill_Pipe::Perform(OCNaroWrappers::OCTopoDS_Wire^ Spine, OCNaroWrappers::OCTopoDS_Shape^ Profile, System::Boolean GeneratePartCase)
{
  ((BRepFill_Pipe*)nativeHandle)->Perform(*((TopoDS_Wire*)Spine->Handle), *((TopoDS_Shape*)Profile->Handle), OCConverter::BooleanToStandardBoolean(GeneratePartCase));
}

OCTopoDS_Shape^ OCBRepFill_Pipe::Spine()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepFill_Pipe*)nativeHandle)->Spine();
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCBRepFill_Pipe::Profile()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepFill_Pipe*)nativeHandle)->Profile();
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCBRepFill_Pipe::Shape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepFill_Pipe*)nativeHandle)->Shape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCBRepFill_Pipe::FirstShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepFill_Pipe*)nativeHandle)->FirstShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Shape^ OCBRepFill_Pipe::LastShape()
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepFill_Pipe*)nativeHandle)->LastShape();
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Face^ OCBRepFill_Pipe::Face(OCNaroWrappers::OCTopoDS_Edge^ ESpine, OCNaroWrappers::OCTopoDS_Edge^ EProfile)
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = ((BRepFill_Pipe*)nativeHandle)->Face(*((TopoDS_Edge*)ESpine->Handle), *((TopoDS_Edge*)EProfile->Handle));
  return gcnew OCTopoDS_Face(tmp);
}

OCTopoDS_Edge^ OCBRepFill_Pipe::Edge(OCNaroWrappers::OCTopoDS_Edge^ ESpine, OCNaroWrappers::OCTopoDS_Vertex^ VProfile)
{
  TopoDS_Edge* tmp = new TopoDS_Edge();
  *tmp = ((BRepFill_Pipe*)nativeHandle)->Edge(*((TopoDS_Edge*)ESpine->Handle), *((TopoDS_Vertex*)VProfile->Handle));
  return gcnew OCTopoDS_Edge(tmp);
}

OCTopoDS_Shape^ OCBRepFill_Pipe::Section(OCNaroWrappers::OCTopoDS_Vertex^ VSpine)
{
  TopoDS_Shape* tmp = new TopoDS_Shape();
  *tmp = ((BRepFill_Pipe*)nativeHandle)->Section(*((TopoDS_Vertex*)VSpine->Handle));
  return gcnew OCTopoDS_Shape(tmp);
}

OCTopoDS_Wire^ OCBRepFill_Pipe::PipeLine(OCNaroWrappers::OCgp_Pnt^ Point)
{
  TopoDS_Wire* tmp = new TopoDS_Wire();
  *tmp = ((BRepFill_Pipe*)nativeHandle)->PipeLine(*((gp_Pnt*)Point->Handle));
  return gcnew OCTopoDS_Wire(tmp);
}


