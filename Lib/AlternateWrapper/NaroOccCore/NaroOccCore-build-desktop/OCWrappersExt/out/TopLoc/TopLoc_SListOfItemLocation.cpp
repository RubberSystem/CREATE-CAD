// File generated by CPPExt (CPP file)
//

#include "TopLoc_SListOfItemLocation.h"
#include "../Converter.h"
#include "TopLoc_SListNodeOfSListOfItemLocation.h"
#include "TopLoc_ItemLocation.h"


using namespace OCNaroWrappers;

OCTopLoc_SListOfItemLocation::OCTopLoc_SListOfItemLocation(TopLoc_SListOfItemLocation* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCTopLoc_SListOfItemLocation::OCTopLoc_SListOfItemLocation() 
{
  nativeHandle = new TopLoc_SListOfItemLocation();
}

OCTopLoc_SListOfItemLocation::OCTopLoc_SListOfItemLocation(OCNaroWrappers::OCTopLoc_ItemLocation^ anItem, OCNaroWrappers::OCTopLoc_SListOfItemLocation^ aTail) 
{
  nativeHandle = new TopLoc_SListOfItemLocation(*((TopLoc_ItemLocation*)anItem->Handle), *((TopLoc_SListOfItemLocation*)aTail->Handle));
}

OCTopLoc_SListOfItemLocation::OCTopLoc_SListOfItemLocation(OCNaroWrappers::OCTopLoc_SListOfItemLocation^ Other) 
{
  nativeHandle = new TopLoc_SListOfItemLocation(*((TopLoc_SListOfItemLocation*)Other->Handle));
}

OCTopLoc_SListOfItemLocation^ OCTopLoc_SListOfItemLocation::Assign(OCNaroWrappers::OCTopLoc_SListOfItemLocation^ Other)
{
  TopLoc_SListOfItemLocation* tmp = new TopLoc_SListOfItemLocation();
  *tmp = ((TopLoc_SListOfItemLocation*)nativeHandle)->Assign(*((TopLoc_SListOfItemLocation*)Other->Handle));
  return gcnew OCTopLoc_SListOfItemLocation(tmp);
}

 System::Boolean OCTopLoc_SListOfItemLocation::IsEmpty()
{
  return OCConverter::StandardBooleanToBoolean(((TopLoc_SListOfItemLocation*)nativeHandle)->IsEmpty());
}

OCTopLoc_ItemLocation^ OCTopLoc_SListOfItemLocation::Value()
{
  TopLoc_ItemLocation* tmp = new TopLoc_ItemLocation(123abc, 0, 0);
  *tmp = ((TopLoc_SListOfItemLocation*)nativeHandle)->Value();
  return gcnew OCTopLoc_ItemLocation(tmp);
}

OCTopLoc_ItemLocation^ OCTopLoc_SListOfItemLocation::ChangeValue()
{
  TopLoc_ItemLocation* tmp = new TopLoc_ItemLocation(123abc, 0, 0);
  *tmp = ((TopLoc_SListOfItemLocation*)nativeHandle)->ChangeValue();
  return gcnew OCTopLoc_ItemLocation(tmp);
}

 void OCTopLoc_SListOfItemLocation::SetValue(OCNaroWrappers::OCTopLoc_ItemLocation^ anItem)
{
  ((TopLoc_SListOfItemLocation*)nativeHandle)->SetValue(*((TopLoc_ItemLocation*)anItem->Handle));
}

OCTopLoc_SListOfItemLocation^ OCTopLoc_SListOfItemLocation::Tail()
{
  TopLoc_SListOfItemLocation* tmp = new TopLoc_SListOfItemLocation();
  *tmp = ((TopLoc_SListOfItemLocation*)nativeHandle)->Tail();
  return gcnew OCTopLoc_SListOfItemLocation(tmp);
}

OCTopLoc_SListOfItemLocation^ OCTopLoc_SListOfItemLocation::ChangeTail()
{
  TopLoc_SListOfItemLocation* tmp = new TopLoc_SListOfItemLocation();
  *tmp = ((TopLoc_SListOfItemLocation*)nativeHandle)->ChangeTail();
  return gcnew OCTopLoc_SListOfItemLocation(tmp);
}

 void OCTopLoc_SListOfItemLocation::SetTail(OCNaroWrappers::OCTopLoc_SListOfItemLocation^ aList)
{
  ((TopLoc_SListOfItemLocation*)nativeHandle)->SetTail(*((TopLoc_SListOfItemLocation*)aList->Handle));
}

 void OCTopLoc_SListOfItemLocation::Construct(OCNaroWrappers::OCTopLoc_ItemLocation^ anItem)
{
  ((TopLoc_SListOfItemLocation*)nativeHandle)->Construct(*((TopLoc_ItemLocation*)anItem->Handle));
}

OCTopLoc_SListOfItemLocation^ OCTopLoc_SListOfItemLocation::Constructed(OCNaroWrappers::OCTopLoc_ItemLocation^ anItem)
{
  TopLoc_SListOfItemLocation* tmp = new TopLoc_SListOfItemLocation();
  *tmp = ((TopLoc_SListOfItemLocation*)nativeHandle)->Constructed(*((TopLoc_ItemLocation*)anItem->Handle));
  return gcnew OCTopLoc_SListOfItemLocation(tmp);
}

 void OCTopLoc_SListOfItemLocation::ToTail()
{
  ((TopLoc_SListOfItemLocation*)nativeHandle)->ToTail();
}

 void OCTopLoc_SListOfItemLocation::Initialize(OCNaroWrappers::OCTopLoc_SListOfItemLocation^ aList)
{
  ((TopLoc_SListOfItemLocation*)nativeHandle)->Initialize(*((TopLoc_SListOfItemLocation*)aList->Handle));
}

 System::Boolean OCTopLoc_SListOfItemLocation::More()
{
  return OCConverter::StandardBooleanToBoolean(((TopLoc_SListOfItemLocation*)nativeHandle)->More());
}

 void OCTopLoc_SListOfItemLocation::Next()
{
  ((TopLoc_SListOfItemLocation*)nativeHandle)->Next();
}


