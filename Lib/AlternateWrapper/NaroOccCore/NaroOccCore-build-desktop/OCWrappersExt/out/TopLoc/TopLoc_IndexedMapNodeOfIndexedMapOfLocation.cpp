// File generated by CPPExt (CPP file)
//

#include "TopLoc_IndexedMapNodeOfIndexedMapOfLocation.h"
#include "../Converter.h"
#include "TopLoc_Location.h"
#include "TopLoc_MapLocationHasher.h"
#include "TopLoc_IndexedMapOfLocation.h"


using namespace OCNaroWrappers;

OCTopLoc_IndexedMapNodeOfIndexedMapOfLocation::OCTopLoc_IndexedMapNodeOfIndexedMapOfLocation(Handle(TopLoc_IndexedMapNodeOfIndexedMapOfLocation)* nativeHandle) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_TopLoc_IndexedMapNodeOfIndexedMapOfLocation(*nativeHandle);
}

OCTopLoc_IndexedMapNodeOfIndexedMapOfLocation::OCTopLoc_IndexedMapNodeOfIndexedMapOfLocation(OCNaroWrappers::OCTopLoc_Location^ K1, Standard_Integer K2, TCollection_MapNodePtr n1, TCollection_MapNodePtr n2) : OCTCollection_MapNode((OCDummy^)nullptr)

{
  nativeHandle = new Handle_TopLoc_IndexedMapNodeOfIndexedMapOfLocation(new TopLoc_IndexedMapNodeOfIndexedMapOfLocation(*((TopLoc_Location*)K1->Handle), K2, n1, n2));
}

OCTopLoc_Location^ OCTopLoc_IndexedMapNodeOfIndexedMapOfLocation::Key1()
{
  TopLoc_Location* tmp = new TopLoc_Location();
  *tmp = (*((Handle_TopLoc_IndexedMapNodeOfIndexedMapOfLocation*)nativeHandle))->Key1();
  return gcnew OCTopLoc_Location(tmp);
}

 Standard_Integer OCTopLoc_IndexedMapNodeOfIndexedMapOfLocation::Key2()
{
  return (*((Handle_TopLoc_IndexedMapNodeOfIndexedMapOfLocation*)nativeHandle))->Key2();
}

 TCollection_MapNodePtr& OCTopLoc_IndexedMapNodeOfIndexedMapOfLocation::Next2()
{
  return (*((Handle_TopLoc_IndexedMapNodeOfIndexedMapOfLocation*)nativeHandle))->Next2();
}


