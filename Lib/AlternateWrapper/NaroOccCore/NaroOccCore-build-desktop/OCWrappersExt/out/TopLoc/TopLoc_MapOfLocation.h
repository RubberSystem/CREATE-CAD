// File generated by CPPExt (MPV)
//
#ifndef _TopLoc_MapOfLocation_OCWrappers_HeaderFile
#define _TopLoc_MapOfLocation_OCWrappers_HeaderFile

// include native header
#include <TopLoc_MapOfLocation.hxx>
#include "../Converter.h"

#include "../TCollection/TCollection_BasicMap.h"

#include "../TCollection/TCollection_BasicMap.h"


namespace OCNaroWrappers
{

ref class OCTopLoc_Location;
ref class OCTopLoc_MapLocationHasher;
ref class OCTopLoc_StdMapNodeOfMapOfLocation;
ref class OCTopLoc_MapIteratorOfMapOfLocation;



public ref class OCTopLoc_MapOfLocation  : public OCTCollection_BasicMap {

protected:
  // dummy constructor;
  OCTopLoc_MapOfLocation(OCDummy^) : OCTCollection_BasicMap((OCDummy^)nullptr) {};

public:

// constructor from native
OCTopLoc_MapOfLocation(TopLoc_MapOfLocation* nativeHandle);

// Methods PUBLIC


OCTopLoc_MapOfLocation(Standard_Integer NbBuckets);


 /*instead*/  OCTopLoc_MapOfLocation^ Assign(OCNaroWrappers::OCTopLoc_MapOfLocation^ Other) ;


 /*instead*/  void ReSize(Standard_Integer NbBuckets) ;


 /*instead*/  System::Boolean Add(OCNaroWrappers::OCTopLoc_Location^ aKey) ;


 /*instead*/  System::Boolean Contains(OCNaroWrappers::OCTopLoc_Location^ aKey) ;


 /*instead*/  System::Boolean Remove(OCNaroWrappers::OCTopLoc_Location^ aKey) ;

~OCTopLoc_MapOfLocation()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
