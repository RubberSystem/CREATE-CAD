// File generated by CPPExt (CPP file)
//

#include "TopLoc_MapIteratorOfMapOfLocation.h"
#include "../Converter.h"
#include "TopLoc_Location.h"
#include "TopLoc_MapLocationHasher.h"
#include "TopLoc_MapOfLocation.h"
#include "TopLoc_StdMapNodeOfMapOfLocation.h"


using namespace OCNaroWrappers;

OCTopLoc_MapIteratorOfMapOfLocation::OCTopLoc_MapIteratorOfMapOfLocation(TopLoc_MapIteratorOfMapOfLocation* nativeHandle) : OCTCollection_BasicMapIterator((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCTopLoc_MapIteratorOfMapOfLocation::OCTopLoc_MapIteratorOfMapOfLocation() : OCTCollection_BasicMapIterator((OCDummy^)nullptr)

{
  nativeHandle = new TopLoc_MapIteratorOfMapOfLocation();
}

OCTopLoc_MapIteratorOfMapOfLocation::OCTopLoc_MapIteratorOfMapOfLocation(OCNaroWrappers::OCTopLoc_MapOfLocation^ aMap) : OCTCollection_BasicMapIterator((OCDummy^)nullptr)

{
  nativeHandle = new TopLoc_MapIteratorOfMapOfLocation(*((TopLoc_MapOfLocation*)aMap->Handle));
}

 void OCTopLoc_MapIteratorOfMapOfLocation::Initialize(OCNaroWrappers::OCTopLoc_MapOfLocation^ aMap)
{
  ((TopLoc_MapIteratorOfMapOfLocation*)nativeHandle)->Initialize(*((TopLoc_MapOfLocation*)aMap->Handle));
}

OCTopLoc_Location^ OCTopLoc_MapIteratorOfMapOfLocation::Key()
{
  TopLoc_Location* tmp = new TopLoc_Location();
  *tmp = ((TopLoc_MapIteratorOfMapOfLocation*)nativeHandle)->Key();
  return gcnew OCTopLoc_Location(tmp);
}


