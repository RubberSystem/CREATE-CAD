// File generated by CPPExt (MPV)
//
#ifndef _Resource_Unicode_OCWrappers_HeaderFile
#define _Resource_Unicode_OCWrappers_HeaderFile

// include native header
#include <Resource_Unicode.hxx>
#include "../Converter.h"


#include "Resource_FormatType.h"


namespace OCNaroWrappers
{

ref class OCTCollection_ExtendedString;


//! This class provides functions used to convert a non-ASCII C string <br>
//! given in ANSI, EUC, GB or SJIS format, to a <br>
//! Unicode string of extended characters, and vice versa. <br>
public ref class OCResource_Unicode  {

protected:
  Resource_Unicode* nativeHandle;
  OCResource_Unicode(OCDummy^) {};

public:
  property Resource_Unicode* Handle
  {
    Resource_Unicode* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCResource_Unicode(Resource_Unicode* nativeHandle);

// Methods PUBLIC

//! Converts non-ASCII CString <fromstr> in SJIS format <br>
//!          to Unicode ExtendedString <tostr>. <br>
static /*instead*/  void ConvertSJISToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr) ;

//! Converts non-ASCII CString <fromstr> in EUC format <br>
//!          to Unicode ExtendedString <tostr>. <br>
static /*instead*/  void ConvertEUCToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr) ;

//! Converts non-ASCII CString <fromstr> in GB format <br>
//!          to Unicode ExtendedString <tostr>. <br>
static /*instead*/  void ConvertGBToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr) ;

//! Converts non-ASCII CString <fromstr> in ANSI format <br>
//!          to Unicode ExtendedString <tostr>. <br>
static /*instead*/  void ConvertANSIToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr) ;

//! Converts Unicode ExtendedString <fromstr> to non-ASCII <br>
//!          CString <tostr> in SJIS format, limited to <maxsize> <br>
//!          characters. To translate the whole <fromstr>, use more <br>
//!          than twice the length of <fromstr>. Returns true if <br>
//!          <maxsize> has not been reached before end of conversion. <br>
static /*instead*/  System::Boolean ConvertUnicodeToSJIS(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize) ;

//! Converts Unicode ExtendedString <fromstr> to non-ASCII <br>
//!          CString <tostr> in EUC format, limited to <maxsize> <br>
//!          characters. To translate the whole <fromstr>, use more <br>
//!          than twice the length of <fromstr>. Returns true if <br>
//!          <maxsize> has not been reached before end of conversion. <br>
static /*instead*/  System::Boolean ConvertUnicodeToEUC(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize) ;

//! Converts Unicode ExtendedString <fromstr> to non-ASCII <br>
//!          CString <tostr> in GB format, limited to <maxsize> <br>
//!          characters. To translate the whole <fromstr>, use more <br>
//!          than twice the length of <fromstr>. Returns true if <br>
//!          <maxsize> has not been reached before end of conversion. <br>
static /*instead*/  System::Boolean ConvertUnicodeToGB(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize) ;

//! Converts Unicode ExtendedString <fromstr> to non-ASCII <br>
//!          CString <tostr> in ANSI format, limited to <maxsize> <br>
//!          characters. To translate the whole <fromstr>, use more <br>
//!          than twice the length of <fromstr>.  Returns true if <br>
//!          <maxsize> has not been reached before end of conversion. <br>
static /*instead*/  System::Boolean ConvertUnicodeToANSI(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize) ;

//! Defines the current conversion format as typecode. <br>
//!          This conversion format will then be used by the <br>
//!          functions ConvertFormatToUnicode and <br>
//!          ConvertUnicodeToFormat to convert the strings. <br>
static /*instead*/  void SetFormat(OCResource_FormatType typecode) ;

//! Returns the current conversion format (either <br>
//!          ANSI, EUC, GB or SJIS). <br>
//!          The current converting format must be defined in <br>
//!          advance with the SetFormat function. <br>
static /*instead*/  OCResource_FormatType GetFormat() ;

//! Reads converting format from resource "FormatType" <br>
//!          in Resource Manager "CharSet" <br>
static /*instead*/  void ReadFormat() ;

//! Converts the non-ASCII C string fromstr to the <br>
//!          Unicode string of extended characters tostr. <br>
//!          fromstr is translated according to the format <br>
//!          (either ANSI, EUC, GB or SJIS) returned by the function GetFormat. <br>
static /*instead*/  void ConvertFormatToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr) ;

//! Converts the Unicode string of extended <br>
//!          characters fromstr to the non-ASCII C string <br>
//!          tostr according to the format (either ANSI, EUC, <br>
//!          GB or SJIS) returned by the function GetFormat. <br>
//!          maxsize limits the size of the string tostr to a <br>
//!          maximum number of characters. You need more <br>
//!          than twice the length of the string fromstr to <br>
//!          complete the conversion. <br>
//!          The function returns true if conversion is <br>
//!          complete, i.e. the maximum number of characters <br>
//!          maxsize is not reached by tostr before the end <br>
//!          of conversion of fromstr. <br>
static /*instead*/  System::Boolean ConvertUnicodeToFormat(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize) ;

~OCResource_Unicode()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
