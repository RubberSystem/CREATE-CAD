// File generated by CPPExt (CPP file)
//

#include "Resource_Unicode.h"
#include "../Converter.h"
#include "../TCollection/TCollection_ExtendedString.h"


using namespace OCNaroWrappers;

OCResource_Unicode::OCResource_Unicode(Resource_Unicode* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

 void OCResource_Unicode::ConvertSJISToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr)
{
  Resource_Unicode::ConvertSJISToUnicode(OCConverter::StringToStandardCString(fromstr), *((TCollection_ExtendedString*)tostr->Handle));
}

 void OCResource_Unicode::ConvertEUCToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr)
{
  Resource_Unicode::ConvertEUCToUnicode(OCConverter::StringToStandardCString(fromstr), *((TCollection_ExtendedString*)tostr->Handle));
}

 void OCResource_Unicode::ConvertGBToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr)
{
  Resource_Unicode::ConvertGBToUnicode(OCConverter::StringToStandardCString(fromstr), *((TCollection_ExtendedString*)tostr->Handle));
}

 void OCResource_Unicode::ConvertANSIToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr)
{
  Resource_Unicode::ConvertANSIToUnicode(OCConverter::StringToStandardCString(fromstr), *((TCollection_ExtendedString*)tostr->Handle));
}

 System::Boolean OCResource_Unicode::ConvertUnicodeToSJIS(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize)
{
  return OCConverter::StandardBooleanToBoolean(Resource_Unicode::ConvertUnicodeToSJIS(*((TCollection_ExtendedString*)fromstr->Handle), tostr, maxsize));
}

 System::Boolean OCResource_Unicode::ConvertUnicodeToEUC(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize)
{
  return OCConverter::StandardBooleanToBoolean(Resource_Unicode::ConvertUnicodeToEUC(*((TCollection_ExtendedString*)fromstr->Handle), tostr, maxsize));
}

 System::Boolean OCResource_Unicode::ConvertUnicodeToGB(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize)
{
  return OCConverter::StandardBooleanToBoolean(Resource_Unicode::ConvertUnicodeToGB(*((TCollection_ExtendedString*)fromstr->Handle), tostr, maxsize));
}

 System::Boolean OCResource_Unicode::ConvertUnicodeToANSI(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize)
{
  return OCConverter::StandardBooleanToBoolean(Resource_Unicode::ConvertUnicodeToANSI(*((TCollection_ExtendedString*)fromstr->Handle), tostr, maxsize));
}

 void OCResource_Unicode::SetFormat(OCResource_FormatType typecode)
{
  Resource_Unicode::SetFormat((Resource_FormatType)typecode);
}

 OCResource_FormatType OCResource_Unicode::GetFormat()
{
  return (OCResource_FormatType)(Resource_Unicode::GetFormat());
}

 void OCResource_Unicode::ReadFormat()
{
  Resource_Unicode::ReadFormat();
}

 void OCResource_Unicode::ConvertFormatToUnicode(System::String^ fromstr, OCNaroWrappers::OCTCollection_ExtendedString^ tostr)
{
  Resource_Unicode::ConvertFormatToUnicode(OCConverter::StringToStandardCString(fromstr), *((TCollection_ExtendedString*)tostr->Handle));
}

 System::Boolean OCResource_Unicode::ConvertUnicodeToFormat(OCNaroWrappers::OCTCollection_ExtendedString^ fromstr, Standard_PCharacter& tostr, Standard_Integer maxsize)
{
  return OCConverter::StandardBooleanToBoolean(Resource_Unicode::ConvertUnicodeToFormat(*((TCollection_ExtendedString*)fromstr->Handle), tostr, maxsize));
}


