// File generated by CPPExt (MPV)
//
#ifndef _gp_Parab2d_OCWrappers_HeaderFile
#define _gp_Parab2d_OCWrappers_HeaderFile

// include native header
#include <gp_Parab2d.hxx>
#include "../Converter.h"


#include "gp_Ax22d.h"
#include "../Standard/Standard_Storable.h"
#include "gp_Ax2d.h"
#include "gp_Pnt2d.h"


namespace OCNaroWrappers
{

ref class OCgp_Ax2d;
ref class OCgp_Ax22d;
ref class OCgp_Pnt2d;
ref class OCgp_Trsf2d;
ref class OCgp_Vec2d;


//! Describes a parabola in the plane (2D space). <br>
//! A parabola is defined by its focal length (that is, the <br>
//! distance between its focus and apex) and positioned in <br>
//! the plane with a coordinate system (a gp_Ax22d object) where: <br>
//! -   the origin of the coordinate system is on the apex of <br>
//!   the parabola, and <br>
//! -   the "X Axis" of the coordinate system is the axis of <br>
//!   symmetry; the parabola is on the positive side of this axis. <br>
//! This coordinate system is the "local coordinate system" <br>
//! of the parabola. Its orientation (direct or indirect sense) <br>
//! gives an implicit orientation to the parabola. <br>
//! In this coordinate system, the equation for the parabola is: <br>
//! Y**2 = (2*P) * X. <br>
//! where P, referred to as the parameter of the parabola, is <br>
//! the distance between the focus and the directrix (P is <br>
//! twice the focal length). <br>
//! See Also <br>
//! GCE2d_MakeParab2d which provides functions for <br>
//! more complex parabola constructions <br>
//! Geom2d_Parabola which provides additional functions <br>
//! for constructing parabolas and works, in particular, with <br>
//! the parametric equations of parabolas <br>
public ref class OCgp_Parab2d  {

protected:
  gp_Parab2d* nativeHandle;
  OCgp_Parab2d(OCDummy^) {};

public:
  property gp_Parab2d* Handle
  {
    gp_Parab2d* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCgp_Parab2d(gp_Parab2d* nativeHandle);

// Methods PUBLIC

//! Creates an indefinite parabola. <br>
OCgp_Parab2d();


//!  Creates a parabola with its vertex point, its axis of symmetry <br>
//!  ("XAxis") and its focal length. <br>
//!  The sense of parametrization is given by Sense. <br>
//!  Warnings : It is possible to have Focal = 0. <br>
//! Raises ConstructionError if Focal < 0.0 <br>
OCgp_Parab2d(OCNaroWrappers::OCgp_Ax2d^ MirrorAxis, Standard_Real Focal, System::Boolean Sense);


//!  Creates a parabola with its vertex point, its axis of symmetry <br>
//!  ("XAxis") and its focal length. <br>
//!  The sense of parametrization is given by A. <br>
//! Warnings : It is possible to have Focal = 0. <br>
//! Raises ConstructionError if Focal < 0.0 <br>
OCgp_Parab2d(OCNaroWrappers::OCgp_Ax22d^ A, Standard_Real Focal);


//!  Creates a parabola with the directrix and the focus point. <br>
//!  The sense of parametrization is given by Sense. <br>
OCgp_Parab2d(OCNaroWrappers::OCgp_Ax2d^ D, OCNaroWrappers::OCgp_Pnt2d^ F, System::Boolean Sense);


//!  Creates a parabola with the directrix and the focus point. <br>
//!  The Sense of parametrization is given by D. <br>
OCgp_Parab2d(OCNaroWrappers::OCgp_Ax22d^ D, OCNaroWrappers::OCgp_Pnt2d^ F);


//!  Changes the focal distance of the parabola <br>
//! Warnings : It is possible to have Focal = 0. <br>
//! Raises ConstructionError if Focal < 0.0 <br>
 /*instead*/  void SetFocal(Standard_Real Focal) ;


//!  Changes the "Location" point of the parabola. It is the <br>
//!  vertex of the parabola. <br>
 /*instead*/  void SetLocation(OCNaroWrappers::OCgp_Pnt2d^ P) ;

//! Modifies this parabola, by redefining its local coordinate system so that <br>
//!    its origin and "X Direction" become those of the axis <br>
//!  MA. The "Y Direction" of the local coordinate system is <br>
//!   then recomputed. The orientation of the local <br>
//!   coordinate system is not modified. <br>
 /*instead*/  void SetMirrorAxis(OCNaroWrappers::OCgp_Ax2d^ A) ;


//!  Changes the local coordinate system of the parabola. <br>
//!  The "Location" point of A becomes the vertex of the parabola. <br>
 /*instead*/  void SetAxis(OCNaroWrappers::OCgp_Ax22d^ A) ;


//!  Computes the coefficients of the implicit equation of the parabola. <br>
//!  A * (X**2) + B * (Y**2) + 2*C*(X*Y) + 2*D*X + 2*E*Y + F = 0. <br>
 /*instead*/  void Coefficients(Standard_Real& A, Standard_Real& B, Standard_Real& C, Standard_Real& D, Standard_Real& E, Standard_Real& F) ;


//!  Computes the directrix of the parabola. <br>
//! The directrix is: <br>
//! -   a line parallel to the "Y Direction" of the local <br>
//!   coordinate system of this parabola, and <br>
//! -   located on the negative side of the axis of symmetry, <br>
//!   at a distance from the apex which is equal to the focal  length of this parabola. <br>
//!   The directrix is returned as an axis (a gp_Ax2d object), <br>
//! the origin of which is situated on the "X Axis" of this parabola. <br>
 /*instead*/  OCgp_Ax2d^ Directrix() ;


//!  Returns the distance between the vertex and the focus <br>
//!  of the parabola. <br>
 /*instead*/  Standard_Real Focal() ;

//! Returns the focus of the parabola. <br>
 /*instead*/  OCgp_Pnt2d^ Focus() ;

//! Returns the vertex of the parabola. <br>
 /*instead*/  OCgp_Pnt2d^ Location() ;


//!  Returns the symmetry axis of the parabola. <br>
//!  The "Location" point of this axis is the vertex of the parabola. <br>
 /*instead*/  OCgp_Ax2d^ MirrorAxis() ;


//!  Returns the local coordinate system of the parabola. <br>
//!  The "Location" point of this axis is the vertex of the parabola. <br>
 /*instead*/  OCgp_Ax22d^ Axis() ;


//!  Returns the distance between the focus and the <br>
//!  directrix of the parabola. <br>
 /*instead*/  Standard_Real Parameter() ;


 /*instead*/  void Reverse() ;


//! Reverses the orientation of the local coordinate system <br>
//! of this parabola (the "Y Direction" is reversed). <br>
//! Therefore, the implicit orientation of this parabola is reversed. <br>
//! Note: <br>
//! -   Reverse assigns the result to this parabola, while <br>
//! -   Reversed creates a new one. <br>
 /*instead*/  OCgp_Parab2d^ Reversed() ;

//! Returns true if the local coordinate system is direct <br>
//!            and false in the other case. <br>
 /*instead*/  System::Boolean IsDirect() ;


 /*instead*/  void Mirror(OCNaroWrappers::OCgp_Pnt2d^ P) ;


//!  Performs the symmetrical transformation of a parabola with respect <br>
//!  to the point P which is the center of the symmetry <br>
 /*instead*/  OCgp_Parab2d^ Mirrored(OCNaroWrappers::OCgp_Pnt2d^ P) ;


 /*instead*/  void Mirror(OCNaroWrappers::OCgp_Ax2d^ A) ;


//!  Performs the symmetrical transformation of a parabola with respect <br>
//!  to an axis placement which is the axis of the symmetry. <br>
 /*instead*/  OCgp_Parab2d^ Mirrored(OCNaroWrappers::OCgp_Ax2d^ A) ;


 /*instead*/  void Rotate(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real Ang) ;


//!  Rotates a parabola. P is the center of the rotation. <br>
//!  Ang is the angular value of the rotation in radians. <br>
 /*instead*/  OCgp_Parab2d^ Rotated(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real Ang) ;


 /*instead*/  void Scale(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real S) ;


//!  Scales a parabola. S is the scaling value. <br>
//!  If S is negative the direction of the symmetry axis <br>
//!  "XAxis" is reversed and the direction of the "YAxis" too. <br>
 /*instead*/  OCgp_Parab2d^ Scaled(OCNaroWrappers::OCgp_Pnt2d^ P, Standard_Real S) ;


 /*instead*/  void Transform(OCNaroWrappers::OCgp_Trsf2d^ T) ;


//!  Transforms an parabola with the transformation T from class Trsf2d. <br>
 /*instead*/  OCgp_Parab2d^ Transformed(OCNaroWrappers::OCgp_Trsf2d^ T) ;


 /*instead*/  void Translate(OCNaroWrappers::OCgp_Vec2d^ V) ;


//!  Translates a parabola in the direction of the vector V. <br>
//!  The magnitude of the translation is the vector's magnitude. <br>
 /*instead*/  OCgp_Parab2d^ Translated(OCNaroWrappers::OCgp_Vec2d^ V) ;


 /*instead*/  void Translate(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2) ;


//!  Translates a parabola from the point P1 to the point P2. <br>
 /*instead*/  OCgp_Parab2d^ Translated(OCNaroWrappers::OCgp_Pnt2d^ P1, OCNaroWrappers::OCgp_Pnt2d^ P2) ;

~OCgp_Parab2d()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
