// File generated by CPPExt (CPP file)
//

#include "gp.h"
#include "../Converter.h"


using namespace OCNaroWrappers;



 Standard_Real OCgp::Resolution()
{
  return gp::Resolution();
}

OCgp_Pnt^ OCgp::Origin()
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = gp::Origin();
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Dir^ OCgp::DX()
{
  gp_Dir* tmp = new gp_Dir();
  *tmp = gp::DX();
  return gcnew OCgp_Dir(tmp);
}

OCgp_Dir^ OCgp::DY()
{
  gp_Dir* tmp = new gp_Dir();
  *tmp = gp::DY();
  return gcnew OCgp_Dir(tmp);
}

OCgp_Dir^ OCgp::DZ()
{
  gp_Dir* tmp = new gp_Dir();
  *tmp = gp::DZ();
  return gcnew OCgp_Dir(tmp);
}

OCgp_Ax1^ OCgp::OX()
{
  gp_Ax1* tmp = new gp_Ax1();
  *tmp = gp::OX();
  return gcnew OCgp_Ax1(tmp);
}

OCgp_Ax1^ OCgp::OY()
{
  gp_Ax1* tmp = new gp_Ax1();
  *tmp = gp::OY();
  return gcnew OCgp_Ax1(tmp);
}

OCgp_Ax1^ OCgp::OZ()
{
  gp_Ax1* tmp = new gp_Ax1();
  *tmp = gp::OZ();
  return gcnew OCgp_Ax1(tmp);
}

OCgp_Ax2^ OCgp::XOY()
{
  gp_Ax2* tmp = new gp_Ax2();
  *tmp = gp::XOY();
  return gcnew OCgp_Ax2(tmp);
}

OCgp_Ax2^ OCgp::ZOX()
{
  gp_Ax2* tmp = new gp_Ax2();
  *tmp = gp::ZOX();
  return gcnew OCgp_Ax2(tmp);
}

OCgp_Ax2^ OCgp::YOZ()
{
  gp_Ax2* tmp = new gp_Ax2();
  *tmp = gp::YOZ();
  return gcnew OCgp_Ax2(tmp);
}

OCgp_Pnt2d^ OCgp::Origin2d()
{
  gp_Pnt2d* tmp = new gp_Pnt2d();
  *tmp = gp::Origin2d();
  return gcnew OCgp_Pnt2d(tmp);
}

OCgp_Dir2d^ OCgp::DX2d()
{
  gp_Dir2d* tmp = new gp_Dir2d();
  *tmp = gp::DX2d();
  return gcnew OCgp_Dir2d(tmp);
}

OCgp_Dir2d^ OCgp::DY2d()
{
  gp_Dir2d* tmp = new gp_Dir2d();
  *tmp = gp::DY2d();
  return gcnew OCgp_Dir2d(tmp);
}

OCgp_Ax2d^ OCgp::OX2d()
{
  gp_Ax2d* tmp = new gp_Ax2d();
  *tmp = gp::OX2d();
  return gcnew OCgp_Ax2d(tmp);
}

OCgp_Ax2d^ OCgp::OY2d()
{
  gp_Ax2d* tmp = new gp_Ax2d();
  *tmp = gp::OY2d();
  return gcnew OCgp_Ax2d(tmp);
}


