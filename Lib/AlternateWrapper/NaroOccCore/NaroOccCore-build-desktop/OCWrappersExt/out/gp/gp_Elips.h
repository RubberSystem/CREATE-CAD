// File generated by CPPExt (MPV)
//
#ifndef _gp_Elips_OCWrappers_HeaderFile
#define _gp_Elips_OCWrappers_HeaderFile

// include native header
#include <gp_Elips.hxx>
#include "../Converter.h"


#include "gp_Ax2.h"
#include "../Standard/Standard_Storable.h"
#include "gp_Ax1.h"
#include "gp_Pnt.h"


namespace OCNaroWrappers
{

ref class OCgp_Ax2;
ref class OCgp_Ax1;
ref class OCgp_Pnt;
ref class OCgp_Trsf;
ref class OCgp_Vec;



//!      Describes an ellipse in 3D space. <br>
//! An ellipse is defined by its major and minor radii and <br>
//! positioned in space with a coordinate system (a gp_Ax2 object) as follows: <br>
//! -   the origin of the coordinate system is the center of the ellipse, <br>
//! -   its "X Direction" defines the major axis of the ellipse, and <br>
//! - its "Y Direction" defines the minor axis of the ellipse. <br>
//! Together, the origin, "X Direction" and "Y Direction" of <br>
//! this coordinate system define the plane of the ellipse. <br>
//! This coordinate system is the "local coordinate system" <br>
//! of the ellipse. In this coordinate system, the equation of <br>
//! the ellipse is: <br>
//! X*X / (MajorRadius**2) + Y*Y / (MinorRadius**2) = 1.0 <br>
//! The "main Direction" of the local coordinate system gives <br>
//! the normal vector to the plane of the ellipse. This vector <br>
//! gives an implicit orientation to the ellipse (definition of the <br>
//! trigonometric sense). We refer to the "main Axis" of the <br>
//! local coordinate system as the "Axis" of the ellipse. <br>
//! See Also <br>
//! gce_MakeElips which provides functions for more <br>
//! complex ellipse constructions <br>
//! Geom_Ellipse which provides additional functions for <br>
//! constructing ellipses and works, in particular, with the <br>
//! parametric equations of ellipses <br>
public ref class OCgp_Elips  {

protected:
  gp_Elips* nativeHandle;
  OCgp_Elips(OCDummy^) {};

public:
  property gp_Elips* Handle
  {
    gp_Elips* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCgp_Elips(gp_Elips* nativeHandle);

// Methods PUBLIC

//! Creates an indefinite ellipse. <br>
OCgp_Elips();


//!  The major radius of the ellipse is on the "XAxis" and the <br>
//!  minor radius is on the "YAxis" of the ellipse. The "XAxis" <br>
//!  is defined with the "XDirection" of A2 and the "YAxis" is <br>
//!  defined with the "YDirection" of A2. <br>
//! Warnings : <br>
//!  It is not forbidden to create an ellipse with MajorRadius = <br>
//!  MinorRadius. <br>
//!  Raises ConstructionError if MajorRadius < MinorRadius or MinorRadius < 0. <br>
OCgp_Elips(OCNaroWrappers::OCgp_Ax2^ A2, Standard_Real MajorRadius, Standard_Real MinorRadius);


//!  Changes the axis normal to the plane of the ellipse. <br>
//!  It modifies the definition of this plane. <br>
//!  The "XAxis" and the "YAxis" are recomputed. <br>
//! The local coordinate system is redefined so that: <br>
//! -   its origin and "main Direction" become those of the <br>
//!   axis A1 (the "X Direction" and "Y Direction" are then <br>
//!   recomputed in the same way as for any gp_Ax2), or <br>
//!  Raises ConstructionError if the direction of A1 <br>
//! is parallel to the direction of the "XAxis" of the ellipse. <br>
 /*instead*/  void SetAxis(OCNaroWrappers::OCgp_Ax1^ A1) ;

//!Modifies this ellipse, by redefining its local coordinate <br>
//! so that its origin becomes P. <br>
 /*instead*/  void SetLocation(OCNaroWrappers::OCgp_Pnt^ P) ;


//!  The major radius of the ellipse is on the "XAxis" (major axis) <br>
//!  of the ellipse. <br>
//!  Raises ConstructionError if MajorRadius < MinorRadius. <br>
 /*instead*/  void SetMajorRadius(Standard_Real MajorRadius) ;


//!  The minor radius of the ellipse is on the "YAxis" (minor axis) <br>
//!  of the ellipse. <br>
//!  Raises ConstructionError if MinorRadius > MajorRadius or MinorRadius < 0. <br>
 /*instead*/  void SetMinorRadius(Standard_Real MinorRadius) ;

//! Modifies this ellipse, by redefining its local coordinate <br>
//! so that it becomes A2e. <br>
 /*instead*/  void SetPosition(OCNaroWrappers::OCgp_Ax2^ A2) ;

//! Computes the area of the Ellipse. <br>
 /*instead*/  Standard_Real Area() ;


//!  Computes the axis normal to the plane of the ellipse. <br>
 /*instead*/  OCgp_Ax1^ Axis() ;

//! Computes the first or second directrix of this ellipse. <br>
//! These are the lines, in the plane of the ellipse, normal to <br>
//! the major axis, at a distance equal to <br>
//! MajorRadius/e from the center of the ellipse, where <br>
//! e is the eccentricity of the ellipse. <br>
//! The first directrix (Directrix1) is on the positive side of <br>
//! the major axis. The second directrix (Directrix2) is on <br>
//! the negative side. <br>
//! The directrix is returned as an axis (gp_Ax1 object), the <br>
//! origin of which is situated on the "X Axis" of the local <br>
//! coordinate system of this ellipse. <br>
//! Exceptions <br>
//! Standard_ConstructionError if the eccentricity is null <br>
//! (the ellipse has degenerated into a circle). <br>
 /*instead*/  OCgp_Ax1^ Directrix1() ;


//!  This line is obtained by the symmetrical transformation <br>
//!  of "Directrix1" with respect to the "YAxis" of the ellipse. <br>
//! Exceptions <br>
//! Standard_ConstructionError if the eccentricity is null <br>
//! (the ellipse has degenerated into a circle). <br>
 /*instead*/  OCgp_Ax1^ Directrix2() ;


//!  Returns the eccentricity of the ellipse  between 0.0 and 1.0 <br>
//!  If f is the distance between the center of the ellipse and <br>
//!  the Focus1 then the eccentricity e = f / MajorRadius. <br>
//!   Raises ConstructionError if MajorRadius = 0.0 <br>
 /*instead*/  Standard_Real Eccentricity() ;


//!  Computes the focal distance. It is the distance between the <br>
//!  two focus focus1 and focus2 of the ellipse. <br>
 /*instead*/  Standard_Real Focal() ;


//!  Returns the first focus of the ellipse. This focus is on the <br>
//!  positive side of the "XAxis" of the ellipse. <br>
 /*instead*/  OCgp_Pnt^ Focus1() ;


//!  Returns the second focus of the ellipse. This focus is on the <br>
//!  negative side of the "XAxis" of the ellipse. <br>
 /*instead*/  OCgp_Pnt^ Focus2() ;


//!  Returns the center of the ellipse. It is the "Location" <br>
//!  point of the coordinate system of the ellipse. <br>
 /*instead*/  OCgp_Pnt^ Location() ;

//! Returns the major radius of the ellipse. <br>
 /*instead*/  Standard_Real MajorRadius() ;

//! Returns the minor radius of the ellipse. <br>
 /*instead*/  Standard_Real MinorRadius() ;


//!  Returns p = (1 - e * e) * MajorRadius where e is the eccentricity <br>
//!  of the ellipse. <br>
//!  Returns 0 if MajorRadius = 0 <br>
 /*instead*/  Standard_Real Parameter() ;

//! Returns the coordinate system of the ellipse. <br>
 /*instead*/  OCgp_Ax2^ Position() ;


//!  Returns the "XAxis" of the ellipse whose origin <br>
//! is the center of this ellipse. It is the major axis of the <br>
//!  ellipse. <br>
 /*instead*/  OCgp_Ax1^ XAxis() ;


//!  Returns the "YAxis" of the ellipse whose unit vector is the "X Direction" or the "Y Direction" <br>
//!  of the local coordinate system of this ellipse. <br>
//! This is the minor axis of the ellipse. <br>
 /*instead*/  OCgp_Ax1^ YAxis() ;


 /*instead*/  void Mirror(OCNaroWrappers::OCgp_Pnt^ P) ;


//!  Performs the symmetrical transformation of an ellipse with <br>
//!  respect to the point P which is the center of the symmetry. <br>
 /*instead*/  OCgp_Elips^ Mirrored(OCNaroWrappers::OCgp_Pnt^ P) ;


 /*instead*/  void Mirror(OCNaroWrappers::OCgp_Ax1^ A1) ;


//!  Performs the symmetrical transformation of an ellipse with <br>
//!  respect to an axis placement which is the axis of the symmetry. <br>
 /*instead*/  OCgp_Elips^ Mirrored(OCNaroWrappers::OCgp_Ax1^ A1) ;


 /*instead*/  void Mirror(OCNaroWrappers::OCgp_Ax2^ A2) ;


//!  Performs the symmetrical transformation of an ellipse with <br>
//!  respect to a plane. The axis placement A2 locates the plane <br>
//!  of the symmetry (Location, XDirection, YDirection). <br>
 /*instead*/  OCgp_Elips^ Mirrored(OCNaroWrappers::OCgp_Ax2^ A2) ;


 /*instead*/  void Rotate(OCNaroWrappers::OCgp_Ax1^ A1, Standard_Real Ang) ;


//!  Rotates an ellipse. A1 is the axis of the rotation. <br>
//!  Ang is the angular value of the rotation in radians. <br>
 /*instead*/  OCgp_Elips^ Rotated(OCNaroWrappers::OCgp_Ax1^ A1, Standard_Real Ang) ;


 /*instead*/  void Scale(OCNaroWrappers::OCgp_Pnt^ P, Standard_Real S) ;


//!  Scales an ellipse. S is the scaling value. <br>
 /*instead*/  OCgp_Elips^ Scaled(OCNaroWrappers::OCgp_Pnt^ P, Standard_Real S) ;


 /*instead*/  void Transform(OCNaroWrappers::OCgp_Trsf^ T) ;


//!  Transforms an ellipse with the transformation T from class Trsf. <br>
 /*instead*/  OCgp_Elips^ Transformed(OCNaroWrappers::OCgp_Trsf^ T) ;


 /*instead*/  void Translate(OCNaroWrappers::OCgp_Vec^ V) ;


//!  Translates an ellipse in the direction of the vector V. <br>
//!  The magnitude of the translation is the vector's magnitude. <br>
 /*instead*/  OCgp_Elips^ Translated(OCNaroWrappers::OCgp_Vec^ V) ;


 /*instead*/  void Translate(OCNaroWrappers::OCgp_Pnt^ P1, OCNaroWrappers::OCgp_Pnt^ P2) ;


//!  Translates an ellipse from the point P1 to the point P2. <br>
 /*instead*/  OCgp_Elips^ Translated(OCNaroWrappers::OCgp_Pnt^ P1, OCNaroWrappers::OCgp_Pnt^ P2) ;

~OCgp_Elips()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
