// File generated by CPPExt (CPP file)
//

#include "Geom2dConvert_BSplineCurveToBezierCurve.h"
#include "../Converter.h"
#include "../Geom2d/Geom2d_BSplineCurve.h"
#include "../Geom2d/Geom2d_BezierCurve.h"
#include "../TColGeom2d/TColGeom2d_Array1OfBezierCurve.h"
#include "../TColStd/TColStd_Array1OfReal.h"


using namespace OCNaroWrappers;

OCGeom2dConvert_BSplineCurveToBezierCurve::OCGeom2dConvert_BSplineCurveToBezierCurve(Geom2dConvert_BSplineCurveToBezierCurve* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCGeom2dConvert_BSplineCurveToBezierCurve::OCGeom2dConvert_BSplineCurveToBezierCurve(OCNaroWrappers::OCGeom2d_BSplineCurve^ BasisCurve) 
{
  nativeHandle = new Geom2dConvert_BSplineCurveToBezierCurve(*((Handle_Geom2d_BSplineCurve*)BasisCurve->Handle));
}

OCGeom2dConvert_BSplineCurveToBezierCurve::OCGeom2dConvert_BSplineCurveToBezierCurve(OCNaroWrappers::OCGeom2d_BSplineCurve^ BasisCurve, Standard_Real U1, Standard_Real U2, Standard_Real ParametricTolerance) 
{
  nativeHandle = new Geom2dConvert_BSplineCurveToBezierCurve(*((Handle_Geom2d_BSplineCurve*)BasisCurve->Handle), U1, U2, ParametricTolerance);
}

OCGeom2d_BezierCurve^ OCGeom2dConvert_BSplineCurveToBezierCurve::Arc(Standard_Integer Index)
{
  Handle(Geom2d_BezierCurve) tmp = ((Geom2dConvert_BSplineCurveToBezierCurve*)nativeHandle)->Arc(Index);
  return gcnew OCGeom2d_BezierCurve(&tmp);
}

 void OCGeom2dConvert_BSplineCurveToBezierCurve::Arcs(OCNaroWrappers::OCTColGeom2d_Array1OfBezierCurve^ Curves)
{
  ((Geom2dConvert_BSplineCurveToBezierCurve*)nativeHandle)->Arcs(*((TColGeom2d_Array1OfBezierCurve*)Curves->Handle));
}

 void OCGeom2dConvert_BSplineCurveToBezierCurve::Knots(OCNaroWrappers::OCTColStd_Array1OfReal^ TKnots)
{
  ((Geom2dConvert_BSplineCurveToBezierCurve*)nativeHandle)->Knots(*((TColStd_Array1OfReal*)TKnots->Handle));
}

 Standard_Integer OCGeom2dConvert_BSplineCurveToBezierCurve::NbArcs()
{
  return ((Geom2dConvert_BSplineCurveToBezierCurve*)nativeHandle)->NbArcs();
}


