// File generated by CPPExt (CPP file)
//

#include "BRepTopAdaptor_TopolTool.h"
#include "../Converter.h"
#include "../BRepAdaptor/BRepAdaptor_HCurve2d.h"
#include "../Adaptor3d/Adaptor3d_HSurface.h"
#include "../Adaptor2d/Adaptor2d_HCurve2d.h"
#include "../Adaptor3d/Adaptor3d_HVertex.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCBRepTopAdaptor_TopolTool::OCBRepTopAdaptor_TopolTool(Handle(BRepTopAdaptor_TopolTool)* nativeHandle) : OCAdaptor3d_TopolTool((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_BRepTopAdaptor_TopolTool(*nativeHandle);
}

OCBRepTopAdaptor_TopolTool::OCBRepTopAdaptor_TopolTool() : OCAdaptor3d_TopolTool((OCDummy^)nullptr)

{
  nativeHandle = new Handle_BRepTopAdaptor_TopolTool(new BRepTopAdaptor_TopolTool());
}

OCBRepTopAdaptor_TopolTool::OCBRepTopAdaptor_TopolTool(OCNaroWrappers::OCAdaptor3d_HSurface^ Surface) : OCAdaptor3d_TopolTool((OCDummy^)nullptr)

{
  nativeHandle = new Handle_BRepTopAdaptor_TopolTool(new BRepTopAdaptor_TopolTool(*((Handle_Adaptor3d_HSurface*)Surface->Handle)));
}

 void OCBRepTopAdaptor_TopolTool::Initialize()
{
  (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Initialize();
}

 void OCBRepTopAdaptor_TopolTool::Initialize(OCNaroWrappers::OCAdaptor3d_HSurface^ S)
{
  (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Initialize(*((Handle_Adaptor3d_HSurface*)S->Handle));
}

 void OCBRepTopAdaptor_TopolTool::Initialize(OCNaroWrappers::OCAdaptor2d_HCurve2d^ Curve)
{
  (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Initialize(*((Handle_Adaptor2d_HCurve2d*)Curve->Handle));
}

 void OCBRepTopAdaptor_TopolTool::Init()
{
  (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Init();
}

 System::Boolean OCBRepTopAdaptor_TopolTool::More()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->More());
}

OCAdaptor2d_HCurve2d^ OCBRepTopAdaptor_TopolTool::Value()
{
  Handle(Adaptor2d_HCurve2d) tmp = (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Value();
  return gcnew OCAdaptor2d_HCurve2d(&tmp);
}

 void OCBRepTopAdaptor_TopolTool::Next()
{
  (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Next();
}

 Standard_Address OCBRepTopAdaptor_TopolTool::Edge()
{
  return (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Edge();
}

 void OCBRepTopAdaptor_TopolTool::InitVertexIterator()
{
  (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->InitVertexIterator();
}

 System::Boolean OCBRepTopAdaptor_TopolTool::MoreVertex()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->MoreVertex());
}

OCAdaptor3d_HVertex^ OCBRepTopAdaptor_TopolTool::Vertex()
{
  Handle(Adaptor3d_HVertex) tmp = (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Vertex();
  return gcnew OCAdaptor3d_HVertex(&tmp);
}

 void OCBRepTopAdaptor_TopolTool::NextVertex()
{
  (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->NextVertex();
}

 OCTopAbs_State OCBRepTopAdaptor_TopolTool::Classify(OCNaroWrappers::OCgp_Pnt2d^ P2d, Standard_Real Tol, System::Boolean RecadreOnPeriodic)
{
  return (OCTopAbs_State)((*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Classify(*((gp_Pnt2d*)P2d->Handle), Tol, OCConverter::BooleanToStandardBoolean(RecadreOnPeriodic)));
}

 System::Boolean OCBRepTopAdaptor_TopolTool::IsThePointOn(OCNaroWrappers::OCgp_Pnt2d^ P2d, Standard_Real Tol, System::Boolean RecadreOnPeriodic)
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->IsThePointOn(*((gp_Pnt2d*)P2d->Handle), Tol, OCConverter::BooleanToStandardBoolean(RecadreOnPeriodic)));
}

 OCTopAbs_Orientation OCBRepTopAdaptor_TopolTool::Orientation(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C)
{
  return (OCTopAbs_Orientation)((*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Orientation(*((Handle_Adaptor2d_HCurve2d*)C->Handle)));
}

 OCTopAbs_Orientation OCBRepTopAdaptor_TopolTool::Orientation(OCNaroWrappers::OCAdaptor3d_HVertex^ C)
{
  return (OCTopAbs_Orientation)((*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Orientation(*((Handle_Adaptor3d_HVertex*)C->Handle)));
}

 System::Boolean OCBRepTopAdaptor_TopolTool::Has3d()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Has3d());
}

 Standard_Real OCBRepTopAdaptor_TopolTool::Tol3d(OCNaroWrappers::OCAdaptor2d_HCurve2d^ C)
{
  return (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Tol3d(*((Handle_Adaptor2d_HCurve2d*)C->Handle));
}

 Standard_Real OCBRepTopAdaptor_TopolTool::Tol3d(OCNaroWrappers::OCAdaptor3d_HVertex^ V)
{
  return (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Tol3d(*((Handle_Adaptor3d_HVertex*)V->Handle));
}

OCgp_Pnt^ OCBRepTopAdaptor_TopolTool::Pnt(OCNaroWrappers::OCAdaptor3d_HVertex^ V)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->Pnt(*((Handle_Adaptor3d_HVertex*)V->Handle));
  return gcnew OCgp_Pnt(tmp);
}

 void OCBRepTopAdaptor_TopolTool::ComputeSamplePoints()
{
  (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->ComputeSamplePoints();
}

 Standard_Integer OCBRepTopAdaptor_TopolTool::NbSamplesU()
{
  return (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->NbSamplesU();
}

 Standard_Integer OCBRepTopAdaptor_TopolTool::NbSamplesV()
{
  return (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->NbSamplesV();
}

 Standard_Integer OCBRepTopAdaptor_TopolTool::NbSamples()
{
  return (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->NbSamples();
}

 void OCBRepTopAdaptor_TopolTool::SamplePoint(Standard_Integer Index, OCNaroWrappers::OCgp_Pnt2d^ P2d, OCNaroWrappers::OCgp_Pnt^ P3d)
{
  (*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->SamplePoint(Index, *((gp_Pnt2d*)P2d->Handle), *((gp_Pnt*)P3d->Handle));
}

 System::Boolean OCBRepTopAdaptor_TopolTool::DomainIsInfinite()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_BRepTopAdaptor_TopolTool*)nativeHandle))->DomainIsInfinite());
}


