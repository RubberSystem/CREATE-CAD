// File generated by CPPExt (CPP file)
//

#include "BRepTopAdaptor_MapOfShapeTool.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shape.h"
#include "BRepTopAdaptor_Tool.h"
#include "../TopTools/TopTools_ShapeMapHasher.h"
#include "BRepTopAdaptor_DataMapNodeOfMapOfShapeTool.h"
#include "BRepTopAdaptor_DataMapIteratorOfMapOfShapeTool.h"


using namespace OCNaroWrappers;

OCBRepTopAdaptor_MapOfShapeTool::OCBRepTopAdaptor_MapOfShapeTool(BRepTopAdaptor_MapOfShapeTool* nativeHandle) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepTopAdaptor_MapOfShapeTool::OCBRepTopAdaptor_MapOfShapeTool(Standard_Integer NbBuckets) : OCTCollection_BasicMap((OCDummy^)nullptr)

{
  nativeHandle = new BRepTopAdaptor_MapOfShapeTool(NbBuckets);
}

OCBRepTopAdaptor_MapOfShapeTool^ OCBRepTopAdaptor_MapOfShapeTool::Assign(OCNaroWrappers::OCBRepTopAdaptor_MapOfShapeTool^ Other)
{
  BRepTopAdaptor_MapOfShapeTool* tmp = new BRepTopAdaptor_MapOfShapeTool(0);
  *tmp = ((BRepTopAdaptor_MapOfShapeTool*)nativeHandle)->Assign(*((BRepTopAdaptor_MapOfShapeTool*)Other->Handle));
  return gcnew OCBRepTopAdaptor_MapOfShapeTool(tmp);
}

 void OCBRepTopAdaptor_MapOfShapeTool::ReSize(Standard_Integer NbBuckets)
{
  ((BRepTopAdaptor_MapOfShapeTool*)nativeHandle)->ReSize(NbBuckets);
}

 System::Boolean OCBRepTopAdaptor_MapOfShapeTool::Bind(OCNaroWrappers::OCTopoDS_Shape^ K, OCNaroWrappers::OCBRepTopAdaptor_Tool^ I)
{
  return OCConverter::StandardBooleanToBoolean(((BRepTopAdaptor_MapOfShapeTool*)nativeHandle)->Bind(*((TopoDS_Shape*)K->Handle), *((BRepTopAdaptor_Tool*)I->Handle)));
}

 System::Boolean OCBRepTopAdaptor_MapOfShapeTool::IsBound(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepTopAdaptor_MapOfShapeTool*)nativeHandle)->IsBound(*((TopoDS_Shape*)K->Handle)));
}

 System::Boolean OCBRepTopAdaptor_MapOfShapeTool::UnBind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return OCConverter::StandardBooleanToBoolean(((BRepTopAdaptor_MapOfShapeTool*)nativeHandle)->UnBind(*((TopoDS_Shape*)K->Handle)));
}

OCBRepTopAdaptor_Tool^ OCBRepTopAdaptor_MapOfShapeTool::Find(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BRepTopAdaptor_Tool* tmp = new BRepTopAdaptor_Tool();
  *tmp = ((BRepTopAdaptor_MapOfShapeTool*)nativeHandle)->Find(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBRepTopAdaptor_Tool(tmp);
}

OCBRepTopAdaptor_Tool^ OCBRepTopAdaptor_MapOfShapeTool::ChangeFind(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  BRepTopAdaptor_Tool* tmp = new BRepTopAdaptor_Tool();
  *tmp = ((BRepTopAdaptor_MapOfShapeTool*)nativeHandle)->ChangeFind(*((TopoDS_Shape*)K->Handle));
  return gcnew OCBRepTopAdaptor_Tool(tmp);
}

 Standard_Address OCBRepTopAdaptor_MapOfShapeTool::Find1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepTopAdaptor_MapOfShapeTool*)nativeHandle)->Find1(*((TopoDS_Shape*)K->Handle));
}

 Standard_Address OCBRepTopAdaptor_MapOfShapeTool::ChangeFind1(OCNaroWrappers::OCTopoDS_Shape^ K)
{
  return ((BRepTopAdaptor_MapOfShapeTool*)nativeHandle)->ChangeFind1(*((TopoDS_Shape*)K->Handle));
}


