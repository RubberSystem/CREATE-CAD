// File generated by CPPExt (CPP file)
//

#include "StepVisual_ViewVolume.h"
#include "../Converter.h"
#include "../StepGeom/StepGeom_CartesianPoint.h"
#include "StepVisual_PlanarBox.h"


using namespace OCNaroWrappers;

OCStepVisual_ViewVolume::OCStepVisual_ViewVolume(Handle(StepVisual_ViewVolume)* nativeHandle) : OCMMgt_TShared((OCDummy^)nullptr)

{
  this->nativeHandle = new Handle_StepVisual_ViewVolume(*nativeHandle);
}

OCStepVisual_ViewVolume::OCStepVisual_ViewVolume() : OCMMgt_TShared((OCDummy^)nullptr)

{
  nativeHandle = new Handle_StepVisual_ViewVolume(new StepVisual_ViewVolume());
}

 void OCStepVisual_ViewVolume::Init(OCStepVisual_CentralOrParallel aProjectionType, OCNaroWrappers::OCStepGeom_CartesianPoint^ aProjectionPoint, Standard_Real aViewPlaneDistance, Standard_Real aFrontPlaneDistance, System::Boolean aFrontPlaneClipping, Standard_Real aBackPlaneDistance, System::Boolean aBackPlaneClipping, System::Boolean aViewVolumeSidesClipping, OCNaroWrappers::OCStepVisual_PlanarBox^ aViewWindow)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->Init((StepVisual_CentralOrParallel)aProjectionType, *((StepGeom_CartesianPoint*)aProjectionPoint->Handle), aViewPlaneDistance, aFrontPlaneDistance, OCConverter::BooleanToStandardBoolean(aFrontPlaneClipping), aBackPlaneDistance, OCConverter::BooleanToStandardBoolean(aBackPlaneClipping), OCConverter::BooleanToStandardBoolean(aViewVolumeSidesClipping), *((StepVisual_PlanarBox*)aViewWindow->Handle));
}

 void OCStepVisual_ViewVolume::SetProjectionType(OCStepVisual_CentralOrParallel aProjectionType)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->SetProjectionType((StepVisual_CentralOrParallel)aProjectionType);
}

 OCStepVisual_CentralOrParallel OCStepVisual_ViewVolume::ProjectionType()
{
  return (OCStepVisual_CentralOrParallel)((*((Handle_StepVisual_ViewVolume*)nativeHandle))->ProjectionType());
}

 void OCStepVisual_ViewVolume::SetProjectionPoint(OCNaroWrappers::OCStepGeom_CartesianPoint^ aProjectionPoint)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->SetProjectionPoint(*((StepGeom_CartesianPoint*)aProjectionPoint->Handle));
}

OCStepGeom_CartesianPoint^ OCStepVisual_ViewVolume::ProjectionPoint()
{
  StepGeom_CartesianPoint* tmp = new StepGeom_CartesianPoint();
  *tmp = (*((Handle_StepVisual_ViewVolume*)nativeHandle))->ProjectionPoint();
  return gcnew OCStepGeom_CartesianPoint(tmp);
}

 void OCStepVisual_ViewVolume::SetViewPlaneDistance(Standard_Real aViewPlaneDistance)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->SetViewPlaneDistance(aViewPlaneDistance);
}

 Standard_Real OCStepVisual_ViewVolume::ViewPlaneDistance()
{
  return (*((Handle_StepVisual_ViewVolume*)nativeHandle))->ViewPlaneDistance();
}

 void OCStepVisual_ViewVolume::SetFrontPlaneDistance(Standard_Real aFrontPlaneDistance)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->SetFrontPlaneDistance(aFrontPlaneDistance);
}

 Standard_Real OCStepVisual_ViewVolume::FrontPlaneDistance()
{
  return (*((Handle_StepVisual_ViewVolume*)nativeHandle))->FrontPlaneDistance();
}

 void OCStepVisual_ViewVolume::SetFrontPlaneClipping(System::Boolean aFrontPlaneClipping)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->SetFrontPlaneClipping(OCConverter::BooleanToStandardBoolean(aFrontPlaneClipping));
}

 System::Boolean OCStepVisual_ViewVolume::FrontPlaneClipping()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepVisual_ViewVolume*)nativeHandle))->FrontPlaneClipping());
}

 void OCStepVisual_ViewVolume::SetBackPlaneDistance(Standard_Real aBackPlaneDistance)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->SetBackPlaneDistance(aBackPlaneDistance);
}

 Standard_Real OCStepVisual_ViewVolume::BackPlaneDistance()
{
  return (*((Handle_StepVisual_ViewVolume*)nativeHandle))->BackPlaneDistance();
}

 void OCStepVisual_ViewVolume::SetBackPlaneClipping(System::Boolean aBackPlaneClipping)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->SetBackPlaneClipping(OCConverter::BooleanToStandardBoolean(aBackPlaneClipping));
}

 System::Boolean OCStepVisual_ViewVolume::BackPlaneClipping()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepVisual_ViewVolume*)nativeHandle))->BackPlaneClipping());
}

 void OCStepVisual_ViewVolume::SetViewVolumeSidesClipping(System::Boolean aViewVolumeSidesClipping)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->SetViewVolumeSidesClipping(OCConverter::BooleanToStandardBoolean(aViewVolumeSidesClipping));
}

 System::Boolean OCStepVisual_ViewVolume::ViewVolumeSidesClipping()
{
  return OCConverter::StandardBooleanToBoolean((*((Handle_StepVisual_ViewVolume*)nativeHandle))->ViewVolumeSidesClipping());
}

 void OCStepVisual_ViewVolume::SetViewWindow(OCNaroWrappers::OCStepVisual_PlanarBox^ aViewWindow)
{
  (*((Handle_StepVisual_ViewVolume*)nativeHandle))->SetViewWindow(*((StepVisual_PlanarBox*)aViewWindow->Handle));
}

OCStepVisual_PlanarBox^ OCStepVisual_ViewVolume::ViewWindow()
{
  StepVisual_PlanarBox* tmp = new StepVisual_PlanarBox();
  *tmp = (*((Handle_StepVisual_ViewVolume*)nativeHandle))->ViewWindow();
  return gcnew OCStepVisual_PlanarBox(tmp);
}


