// File generated by CPPExt (CPP file)
//

#include "Blend_CSFunction.h"
#include "../Converter.h"
#include "../math/math_Vector.h"
#include "../math/math_Matrix.h"
#include "../gp/gp_Pnt.h"
#include "../gp/gp_Pnt2d.h"
#include "../gp/gp_Vec.h"
#include "../gp/gp_Vec2d.h"
#include "../TColStd/TColStd_Array1OfReal.h"
#include "../TColStd/TColStd_Array1OfInteger.h"
#include "Blend_Point.h"
#include "../TColgp/TColgp_Array1OfPnt.h"
#include "../TColgp/TColgp_Array1OfVec.h"
#include "../TColgp/TColgp_Array1OfPnt2d.h"
#include "../TColgp/TColgp_Array1OfVec2d.h"


using namespace OCNaroWrappers;

OCBlend_CSFunction::OCBlend_CSFunction(Blend_CSFunction* nativeHandle) : OCBlend_AppFunction((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

 Standard_Integer OCBlend_CSFunction::NbVariables()
{
  return ((Blend_CSFunction*)nativeHandle)->NbVariables();
}

 Standard_Real OCBlend_CSFunction::GetMinimalDistance()
{
  return ((Blend_CSFunction*)nativeHandle)->GetMinimalDistance();
}

OCgp_Pnt^ OCBlend_CSFunction::Pnt1()
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((Blend_CSFunction*)nativeHandle)->Pnt1();
  return gcnew OCgp_Pnt(tmp);
}

OCgp_Pnt^ OCBlend_CSFunction::Pnt2()
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((Blend_CSFunction*)nativeHandle)->Pnt2();
  return gcnew OCgp_Pnt(tmp);
}

 System::Boolean OCBlend_CSFunction::Section(OCNaroWrappers::OCBlend_Point^ P, OCNaroWrappers::OCTColgp_Array1OfPnt^ Poles, OCNaroWrappers::OCTColgp_Array1OfVec^ DPoles, OCNaroWrappers::OCTColgp_Array1OfVec^ D2Poles, OCNaroWrappers::OCTColgp_Array1OfPnt2d^ Poles2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ DPoles2d, OCNaroWrappers::OCTColgp_Array1OfVec2d^ D2Poles2d, OCNaroWrappers::OCTColStd_Array1OfReal^ Weigths, OCNaroWrappers::OCTColStd_Array1OfReal^ DWeigths, OCNaroWrappers::OCTColStd_Array1OfReal^ D2Weigths)
{
  return OCConverter::StandardBooleanToBoolean(((Blend_CSFunction*)nativeHandle)->Section(*((Blend_Point*)P->Handle), *((TColgp_Array1OfPnt*)Poles->Handle), *((TColgp_Array1OfVec*)DPoles->Handle), *((TColgp_Array1OfVec*)D2Poles->Handle), *((TColgp_Array1OfPnt2d*)Poles2d->Handle), *((TColgp_Array1OfVec2d*)DPoles2d->Handle), *((TColgp_Array1OfVec2d*)D2Poles2d->Handle), *((TColStd_Array1OfReal*)Weigths->Handle), *((TColStd_Array1OfReal*)DWeigths->Handle), *((TColStd_Array1OfReal*)D2Weigths->Handle)));
}


