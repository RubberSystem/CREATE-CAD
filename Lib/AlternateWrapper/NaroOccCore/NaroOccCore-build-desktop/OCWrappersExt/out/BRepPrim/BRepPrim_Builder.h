// File generated by CPPExt (MPV)
//
#ifndef _BRepPrim_Builder_OCWrappers_HeaderFile
#define _BRepPrim_Builder_OCWrappers_HeaderFile

// include native header
#include <BRepPrim_Builder.hxx>
#include "../Converter.h"


#include "../BRep/BRep_Builder.h"


namespace OCNaroWrappers
{

ref class OCBRep_Builder;
ref class OCTopoDS_Shell;
ref class OCTopoDS_Face;
ref class OCgp_Pln;
ref class OCTopoDS_Wire;
ref class OCTopoDS_Edge;
ref class OCgp_Lin;
ref class OCgp_Circ;
ref class OCgp_Lin2d;
ref class OCgp_Circ2d;
ref class OCTopoDS_Vertex;
ref class OCgp_Pnt;


//! implements the abstract Builder with the BRep Builder <br>
public ref class OCBRepPrim_Builder  {

protected:
  BRepPrim_Builder* nativeHandle;
  OCBRepPrim_Builder(OCDummy^) {};

public:
  property BRepPrim_Builder* Handle
  {
    BRepPrim_Builder* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCBRepPrim_Builder(BRepPrim_Builder* nativeHandle);

// Methods PUBLIC

//! Creates an empty, useless  Builder. Necesseray for <br>
//!          compilation. <br>
OCBRepPrim_Builder();

//! Creates from a Builder. <br>
OCBRepPrim_Builder(OCNaroWrappers::OCBRep_Builder^ B);


 /*instead*/  OCBRep_Builder^ Builder() ;

//! Make a empty Shell. <br>
 /*instead*/  void MakeShell(OCNaroWrappers::OCTopoDS_Shell^ S) ;

//! Returns in   <F> a  Face  built  with   the  plane <br>
//!          equation <P>. Used by all primitives. <br>
 /*instead*/  void MakeFace(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Pln^ P) ;

//! Returns in <W> an empty Wire. <br>
 /*instead*/  void MakeWire(OCNaroWrappers::OCTopoDS_Wire^ W) ;

//! Returns in <E> a degenerated edge. <br>
 /*instead*/  void MakeDegeneratedEdge(OCNaroWrappers::OCTopoDS_Edge^ E) ;

//! Returns   in <E>  an  Edge  built  with  the  line <br>
//!          equation  <L>. <br>
 /*instead*/  void MakeEdge(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCgp_Lin^ L) ;

//! Returns  in <E>   an  Edge  built  with the circle <br>
//!          equation  <C>. <br>
 /*instead*/  void MakeEdge(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCgp_Circ^ C) ;

//! Sets the line <L> to be the curve representing the <br>
//!          edge <E> in the parametric space of the surface of <br>
//!          <F>. <br>
 /*instead*/  void SetPCurve(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Lin2d^ L) ;

//! Sets the    lines  <L1,L2>  to   be     the curves <br>
//!          representing the edge <E>  in the parametric space <br>
//!          of the closed surface of <F>. <br>
 /*instead*/  void SetPCurve(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Lin2d^ L1, OCNaroWrappers::OCgp_Lin2d^ L2) ;

//! Sets the  circle <C> to  be the curve representing <br>
//!          the  edge <E>  in   the  parametric  space of  the <br>
//!          surface of <F>. <br>
 /*instead*/  void SetPCurve(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Circ2d^ C) ;

//! Returns in <V> a Vertex built with the point <P>. <br>
 /*instead*/  void MakeVertex(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCgp_Pnt^ P) ;

//! Reverses the Face <F>. <br>
 /*instead*/  void ReverseFace(OCNaroWrappers::OCTopoDS_Face^ F) ;

//! Adds the Vertex <V> in the Edge <E>.  <P> is the <br>
//!          parameter of the vertex on the  edge.  If direct <br>
//!          is False the Vertex is reversed. <br>
 /*instead*/  void AddEdgeVertex(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Vertex^ V, Standard_Real P, System::Boolean direct) ;

//! Adds  the Vertex <V>  in the Edge <E>.   <P1,P2> <br>
//!          are the  parameters of the  vertex on the closed <br>
//!          edge. <br>
 /*instead*/  void AddEdgeVertex(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Vertex^ V, Standard_Real P1, Standard_Real P2) ;

//! <P1,P2> are the parameters of the  vertex on the <br>
//!          edge.  The edge is a closed curve. <br>
 /*instead*/  void SetParameters(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Vertex^ V, Standard_Real P1, Standard_Real P2) ;

//! Adds the Edge <E> in the  Wire <W>, if direct is <br>
//!          False the Edge is reversed. <br>
 /*instead*/  void AddWireEdge(OCNaroWrappers::OCTopoDS_Wire^ W, OCNaroWrappers::OCTopoDS_Edge^ E, System::Boolean direct) ;

//! Adds the Wire <W> in  the Face <F>. <br>
 /*instead*/  void AddFaceWire(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopoDS_Wire^ W) ;

//! Adds the Face <F>  in the Shell <Sh>. <br>
 /*instead*/  void AddShellFace(OCNaroWrappers::OCTopoDS_Shell^ Sh, OCNaroWrappers::OCTopoDS_Face^ F) ;

//! This is called once an edge is completed. It gives <br>
//!          the opportunity to perform any post treatment. <br>
 /*instead*/  void CompleteEdge(OCNaroWrappers::OCTopoDS_Edge^ E) ;

//! This is called once a wire is  completed. It gives <br>
//!          the opportunity to perform any post treatment. <br>
 /*instead*/  void CompleteWire(OCNaroWrappers::OCTopoDS_Wire^ W) ;

//! This is called once a face is  completed. It gives <br>
//!          the opportunity to perform any post treatment. <br>
 /*instead*/  void CompleteFace(OCNaroWrappers::OCTopoDS_Face^ F) ;

//! This is called once a shell is  completed. It gives <br>
//!          the opportunity to perform any post treatment. <br>
 /*instead*/  void CompleteShell(OCNaroWrappers::OCTopoDS_Shell^ S) ;

~OCBRepPrim_Builder()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
