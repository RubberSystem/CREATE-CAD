// File generated by CPPExt (CPP file)
//

#include "BRepPrim_Cone.h"
#include "../Converter.h"
#include "../gp/gp_Ax2.h"
#include "../gp/gp_Pnt.h"
#include "../TopoDS/TopoDS_Face.h"


using namespace OCNaroWrappers;

OCBRepPrim_Cone::OCBRepPrim_Cone(BRepPrim_Cone* nativeHandle) : OCBRepPrim_Revolution((OCDummy^)nullptr)

{
  this->nativeHandle = nativeHandle;
}

OCBRepPrim_Cone::OCBRepPrim_Cone(Standard_Real Angle, OCNaroWrappers::OCgp_Ax2^ Position, Standard_Real Height, Standard_Real Radius) : OCBRepPrim_Revolution((OCDummy^)nullptr)

{
  nativeHandle = new BRepPrim_Cone(Angle, *((gp_Ax2*)Position->Handle), Height, Radius);
}

OCBRepPrim_Cone::OCBRepPrim_Cone(Standard_Real Angle) : OCBRepPrim_Revolution((OCDummy^)nullptr)

{
  nativeHandle = new BRepPrim_Cone(Angle);
}

OCBRepPrim_Cone::OCBRepPrim_Cone(Standard_Real Angle, OCNaroWrappers::OCgp_Pnt^ Apex) : OCBRepPrim_Revolution((OCDummy^)nullptr)

{
  nativeHandle = new BRepPrim_Cone(Angle, *((gp_Pnt*)Apex->Handle));
}

OCBRepPrim_Cone::OCBRepPrim_Cone(Standard_Real Angle, OCNaroWrappers::OCgp_Ax2^ Axes) : OCBRepPrim_Revolution((OCDummy^)nullptr)

{
  nativeHandle = new BRepPrim_Cone(Angle, *((gp_Ax2*)Axes->Handle));
}

OCBRepPrim_Cone::OCBRepPrim_Cone(Standard_Real R1, Standard_Real R2, Standard_Real H) : OCBRepPrim_Revolution((OCDummy^)nullptr)

{
  nativeHandle = new BRepPrim_Cone(R1, R2, H);
}

OCBRepPrim_Cone::OCBRepPrim_Cone(OCNaroWrappers::OCgp_Pnt^ Center, Standard_Real R1, Standard_Real R2, Standard_Real H) : OCBRepPrim_Revolution((OCDummy^)nullptr)

{
  nativeHandle = new BRepPrim_Cone(*((gp_Pnt*)Center->Handle), R1, R2, H);
}

OCBRepPrim_Cone::OCBRepPrim_Cone(OCNaroWrappers::OCgp_Ax2^ Axes, Standard_Real R1, Standard_Real R2, Standard_Real H) : OCBRepPrim_Revolution((OCDummy^)nullptr)

{
  nativeHandle = new BRepPrim_Cone(*((gp_Ax2*)Axes->Handle), R1, R2, H);
}

OCTopoDS_Face^ OCBRepPrim_Cone::MakeEmptyLateralFace()
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = ((BRepPrim_Cone*)nativeHandle)->MakeEmptyLateralFace();
  return gcnew OCTopoDS_Face(tmp);
}


