// File generated by CPPExt (CPP file)
//

#include "BRepPrim_GWedge.h"
#include "../Converter.h"
#include "../TopoDS/TopoDS_Shell.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../TopoDS/TopoDS_Wire.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "BRepPrim_Builder.h"
#include "../gp/gp_Ax2.h"
#include "../gp/gp_Pln.h"
#include "../gp/gp_Lin.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCBRepPrim_GWedge::OCBRepPrim_GWedge(BRepPrim_GWedge* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepPrim_GWedge::OCBRepPrim_GWedge(OCNaroWrappers::OCBRepPrim_Builder^ B, OCNaroWrappers::OCgp_Ax2^ Axes, Standard_Real dx, Standard_Real dy, Standard_Real dz) 
{
  nativeHandle = new BRepPrim_GWedge(*((BRepPrim_Builder*)B->Handle), *((gp_Ax2*)Axes->Handle), dx, dy, dz);
}

OCBRepPrim_GWedge::OCBRepPrim_GWedge(OCNaroWrappers::OCBRepPrim_Builder^ B, OCNaroWrappers::OCgp_Ax2^ Axes, Standard_Real dx, Standard_Real dy, Standard_Real dz, Standard_Real ltx) 
{
  nativeHandle = new BRepPrim_GWedge(*((BRepPrim_Builder*)B->Handle), *((gp_Ax2*)Axes->Handle), dx, dy, dz, ltx);
}

OCBRepPrim_GWedge::OCBRepPrim_GWedge(OCNaroWrappers::OCBRepPrim_Builder^ B, OCNaroWrappers::OCgp_Ax2^ Axes, Standard_Real xmin, Standard_Real ymin, Standard_Real zmin, Standard_Real z2min, Standard_Real x2min, Standard_Real xmax, Standard_Real ymax, Standard_Real zmax, Standard_Real z2max, Standard_Real x2max) 
{
  nativeHandle = new BRepPrim_GWedge(*((BRepPrim_Builder*)B->Handle), *((gp_Ax2*)Axes->Handle), xmin, ymin, zmin, z2min, x2min, xmax, ymax, zmax, z2max, x2max);
}

OCgp_Ax2^ OCBRepPrim_GWedge::Axes()
{
  gp_Ax2* tmp = new gp_Ax2();
  *tmp = ((BRepPrim_GWedge*)nativeHandle)->Axes();
  return gcnew OCgp_Ax2(tmp);
}

 Standard_Real OCBRepPrim_GWedge::GetXMin()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetXMin();
}

 Standard_Real OCBRepPrim_GWedge::GetYMin()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetYMin();
}

 Standard_Real OCBRepPrim_GWedge::GetZMin()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetZMin();
}

 Standard_Real OCBRepPrim_GWedge::GetZ2Min()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetZ2Min();
}

 Standard_Real OCBRepPrim_GWedge::GetX2Min()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetX2Min();
}

 Standard_Real OCBRepPrim_GWedge::GetXMax()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetXMax();
}

 Standard_Real OCBRepPrim_GWedge::GetYMax()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetYMax();
}

 Standard_Real OCBRepPrim_GWedge::GetZMax()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetZMax();
}

 Standard_Real OCBRepPrim_GWedge::GetZ2Max()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetZ2Max();
}

 Standard_Real OCBRepPrim_GWedge::GetX2Max()
{
  return ((BRepPrim_GWedge*)nativeHandle)->GetX2Max();
}

 void OCBRepPrim_GWedge::Open(OCPrimitives_Direction d1)
{
  ((BRepPrim_GWedge*)nativeHandle)->Open((Primitives_Direction)d1);
}

 void OCBRepPrim_GWedge::Close(OCPrimitives_Direction d1)
{
  ((BRepPrim_GWedge*)nativeHandle)->Close((Primitives_Direction)d1);
}

 System::Boolean OCBRepPrim_GWedge::IsInfinite(OCPrimitives_Direction d1)
{
  return OCConverter::StandardBooleanToBoolean(((BRepPrim_GWedge*)nativeHandle)->IsInfinite((Primitives_Direction)d1));
}

OCTopoDS_Shell^ OCBRepPrim_GWedge::Shell()
{
  TopoDS_Shell* tmp = new TopoDS_Shell();
  *tmp = ((BRepPrim_GWedge*)nativeHandle)->Shell();
  return gcnew OCTopoDS_Shell(tmp);
}

 System::Boolean OCBRepPrim_GWedge::HasFace(OCPrimitives_Direction d1)
{
  return OCConverter::StandardBooleanToBoolean(((BRepPrim_GWedge*)nativeHandle)->HasFace((Primitives_Direction)d1));
}

OCTopoDS_Face^ OCBRepPrim_GWedge::Face(OCPrimitives_Direction d1)
{
  TopoDS_Face* tmp = new TopoDS_Face();
  *tmp = ((BRepPrim_GWedge*)nativeHandle)->Face((Primitives_Direction)d1);
  return gcnew OCTopoDS_Face(tmp);
}

OCgp_Pln^ OCBRepPrim_GWedge::Plane(OCPrimitives_Direction d1)
{
  gp_Pln* tmp = new gp_Pln();
  *tmp = ((BRepPrim_GWedge*)nativeHandle)->Plane((Primitives_Direction)d1);
  return gcnew OCgp_Pln(tmp);
}

 System::Boolean OCBRepPrim_GWedge::HasWire(OCPrimitives_Direction d1)
{
  return OCConverter::StandardBooleanToBoolean(((BRepPrim_GWedge*)nativeHandle)->HasWire((Primitives_Direction)d1));
}

OCTopoDS_Wire^ OCBRepPrim_GWedge::Wire(OCPrimitives_Direction d1)
{
  TopoDS_Wire* tmp = new TopoDS_Wire();
  *tmp = ((BRepPrim_GWedge*)nativeHandle)->Wire((Primitives_Direction)d1);
  return gcnew OCTopoDS_Wire(tmp);
}

 System::Boolean OCBRepPrim_GWedge::HasEdge(OCPrimitives_Direction d1, OCPrimitives_Direction d2)
{
  return OCConverter::StandardBooleanToBoolean(((BRepPrim_GWedge*)nativeHandle)->HasEdge((Primitives_Direction)d1, (Primitives_Direction)d2));
}

OCTopoDS_Edge^ OCBRepPrim_GWedge::Edge(OCPrimitives_Direction d1, OCPrimitives_Direction d2)
{
  TopoDS_Edge* tmp = new TopoDS_Edge();
  *tmp = ((BRepPrim_GWedge*)nativeHandle)->Edge((Primitives_Direction)d1, (Primitives_Direction)d2);
  return gcnew OCTopoDS_Edge(tmp);
}

OCgp_Lin^ OCBRepPrim_GWedge::Line(OCPrimitives_Direction d1, OCPrimitives_Direction d2)
{
  gp_Lin* tmp = new gp_Lin();
  *tmp = ((BRepPrim_GWedge*)nativeHandle)->Line((Primitives_Direction)d1, (Primitives_Direction)d2);
  return gcnew OCgp_Lin(tmp);
}

 System::Boolean OCBRepPrim_GWedge::HasVertex(OCPrimitives_Direction d1, OCPrimitives_Direction d2, OCPrimitives_Direction d3)
{
  return OCConverter::StandardBooleanToBoolean(((BRepPrim_GWedge*)nativeHandle)->HasVertex((Primitives_Direction)d1, (Primitives_Direction)d2, (Primitives_Direction)d3));
}

OCTopoDS_Vertex^ OCBRepPrim_GWedge::Vertex(OCPrimitives_Direction d1, OCPrimitives_Direction d2, OCPrimitives_Direction d3)
{
  TopoDS_Vertex* tmp = new TopoDS_Vertex();
  *tmp = ((BRepPrim_GWedge*)nativeHandle)->Vertex((Primitives_Direction)d1, (Primitives_Direction)d2, (Primitives_Direction)d3);
  return gcnew OCTopoDS_Vertex(tmp);
}

OCgp_Pnt^ OCBRepPrim_GWedge::Point(OCPrimitives_Direction d1, OCPrimitives_Direction d2, OCPrimitives_Direction d3)
{
  gp_Pnt* tmp = new gp_Pnt();
  *tmp = ((BRepPrim_GWedge*)nativeHandle)->Point((Primitives_Direction)d1, (Primitives_Direction)d2, (Primitives_Direction)d3);
  return gcnew OCgp_Pnt(tmp);
}


