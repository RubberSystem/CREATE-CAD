// File generated by CPPExt (CPP file)
//

#include "BRepPrim_Builder.h"
#include "../Converter.h"
#include "../BRep/BRep_Builder.h"
#include "../TopoDS/TopoDS_Shell.h"
#include "../TopoDS/TopoDS_Face.h"
#include "../gp/gp_Pln.h"
#include "../TopoDS/TopoDS_Wire.h"
#include "../TopoDS/TopoDS_Edge.h"
#include "../gp/gp_Lin.h"
#include "../gp/gp_Circ.h"
#include "../gp/gp_Lin2d.h"
#include "../gp/gp_Circ2d.h"
#include "../TopoDS/TopoDS_Vertex.h"
#include "../gp/gp_Pnt.h"


using namespace OCNaroWrappers;

OCBRepPrim_Builder::OCBRepPrim_Builder(BRepPrim_Builder* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCBRepPrim_Builder::OCBRepPrim_Builder() 
{
  nativeHandle = new BRepPrim_Builder();
}

OCBRepPrim_Builder::OCBRepPrim_Builder(OCNaroWrappers::OCBRep_Builder^ B) 
{
  nativeHandle = new BRepPrim_Builder(*((BRep_Builder*)B->Handle));
}

OCBRep_Builder^ OCBRepPrim_Builder::Builder()
{
  BRep_Builder* tmp = new BRep_Builder();
  *tmp = ((BRepPrim_Builder*)nativeHandle)->Builder();
  return gcnew OCBRep_Builder(tmp);
}

 void OCBRepPrim_Builder::MakeShell(OCNaroWrappers::OCTopoDS_Shell^ S)
{
  ((BRepPrim_Builder*)nativeHandle)->MakeShell(*((TopoDS_Shell*)S->Handle));
}

 void OCBRepPrim_Builder::MakeFace(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Pln^ P)
{
  ((BRepPrim_Builder*)nativeHandle)->MakeFace(*((TopoDS_Face*)F->Handle), *((gp_Pln*)P->Handle));
}

 void OCBRepPrim_Builder::MakeWire(OCNaroWrappers::OCTopoDS_Wire^ W)
{
  ((BRepPrim_Builder*)nativeHandle)->MakeWire(*((TopoDS_Wire*)W->Handle));
}

 void OCBRepPrim_Builder::MakeDegeneratedEdge(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  ((BRepPrim_Builder*)nativeHandle)->MakeDegeneratedEdge(*((TopoDS_Edge*)E->Handle));
}

 void OCBRepPrim_Builder::MakeEdge(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCgp_Lin^ L)
{
  ((BRepPrim_Builder*)nativeHandle)->MakeEdge(*((TopoDS_Edge*)E->Handle), *((gp_Lin*)L->Handle));
}

 void OCBRepPrim_Builder::MakeEdge(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCgp_Circ^ C)
{
  ((BRepPrim_Builder*)nativeHandle)->MakeEdge(*((TopoDS_Edge*)E->Handle), *((gp_Circ*)C->Handle));
}

 void OCBRepPrim_Builder::SetPCurve(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Lin2d^ L)
{
  ((BRepPrim_Builder*)nativeHandle)->SetPCurve(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle), *((gp_Lin2d*)L->Handle));
}

 void OCBRepPrim_Builder::SetPCurve(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Lin2d^ L1, OCNaroWrappers::OCgp_Lin2d^ L2)
{
  ((BRepPrim_Builder*)nativeHandle)->SetPCurve(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle), *((gp_Lin2d*)L1->Handle), *((gp_Lin2d*)L2->Handle));
}

 void OCBRepPrim_Builder::SetPCurve(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCgp_Circ2d^ C)
{
  ((BRepPrim_Builder*)nativeHandle)->SetPCurve(*((TopoDS_Edge*)E->Handle), *((TopoDS_Face*)F->Handle), *((gp_Circ2d*)C->Handle));
}

 void OCBRepPrim_Builder::MakeVertex(OCNaroWrappers::OCTopoDS_Vertex^ V, OCNaroWrappers::OCgp_Pnt^ P)
{
  ((BRepPrim_Builder*)nativeHandle)->MakeVertex(*((TopoDS_Vertex*)V->Handle), *((gp_Pnt*)P->Handle));
}

 void OCBRepPrim_Builder::ReverseFace(OCNaroWrappers::OCTopoDS_Face^ F)
{
  ((BRepPrim_Builder*)nativeHandle)->ReverseFace(*((TopoDS_Face*)F->Handle));
}

 void OCBRepPrim_Builder::AddEdgeVertex(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Vertex^ V, Standard_Real P, System::Boolean direct)
{
  ((BRepPrim_Builder*)nativeHandle)->AddEdgeVertex(*((TopoDS_Edge*)E->Handle), *((TopoDS_Vertex*)V->Handle), P, OCConverter::BooleanToStandardBoolean(direct));
}

 void OCBRepPrim_Builder::AddEdgeVertex(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Vertex^ V, Standard_Real P1, Standard_Real P2)
{
  ((BRepPrim_Builder*)nativeHandle)->AddEdgeVertex(*((TopoDS_Edge*)E->Handle), *((TopoDS_Vertex*)V->Handle), P1, P2);
}

 void OCBRepPrim_Builder::SetParameters(OCNaroWrappers::OCTopoDS_Edge^ E, OCNaroWrappers::OCTopoDS_Vertex^ V, Standard_Real P1, Standard_Real P2)
{
  ((BRepPrim_Builder*)nativeHandle)->SetParameters(*((TopoDS_Edge*)E->Handle), *((TopoDS_Vertex*)V->Handle), P1, P2);
}

 void OCBRepPrim_Builder::AddWireEdge(OCNaroWrappers::OCTopoDS_Wire^ W, OCNaroWrappers::OCTopoDS_Edge^ E, System::Boolean direct)
{
  ((BRepPrim_Builder*)nativeHandle)->AddWireEdge(*((TopoDS_Wire*)W->Handle), *((TopoDS_Edge*)E->Handle), OCConverter::BooleanToStandardBoolean(direct));
}

 void OCBRepPrim_Builder::AddFaceWire(OCNaroWrappers::OCTopoDS_Face^ F, OCNaroWrappers::OCTopoDS_Wire^ W)
{
  ((BRepPrim_Builder*)nativeHandle)->AddFaceWire(*((TopoDS_Face*)F->Handle), *((TopoDS_Wire*)W->Handle));
}

 void OCBRepPrim_Builder::AddShellFace(OCNaroWrappers::OCTopoDS_Shell^ Sh, OCNaroWrappers::OCTopoDS_Face^ F)
{
  ((BRepPrim_Builder*)nativeHandle)->AddShellFace(*((TopoDS_Shell*)Sh->Handle), *((TopoDS_Face*)F->Handle));
}

 void OCBRepPrim_Builder::CompleteEdge(OCNaroWrappers::OCTopoDS_Edge^ E)
{
  ((BRepPrim_Builder*)nativeHandle)->CompleteEdge(*((TopoDS_Edge*)E->Handle));
}

 void OCBRepPrim_Builder::CompleteWire(OCNaroWrappers::OCTopoDS_Wire^ W)
{
  ((BRepPrim_Builder*)nativeHandle)->CompleteWire(*((TopoDS_Wire*)W->Handle));
}

 void OCBRepPrim_Builder::CompleteFace(OCNaroWrappers::OCTopoDS_Face^ F)
{
  ((BRepPrim_Builder*)nativeHandle)->CompleteFace(*((TopoDS_Face*)F->Handle));
}

 void OCBRepPrim_Builder::CompleteShell(OCNaroWrappers::OCTopoDS_Shell^ S)
{
  ((BRepPrim_Builder*)nativeHandle)->CompleteShell(*((TopoDS_Shell*)S->Handle));
}


