// File generated by CPPExt (CPP file)
//

#include "math_TrigonometricFunctionRoots.h"
#include "../Converter.h"


using namespace OCNaroWrappers;

OCmath_TrigonometricFunctionRoots::OCmath_TrigonometricFunctionRoots(math_TrigonometricFunctionRoots* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCmath_TrigonometricFunctionRoots::OCmath_TrigonometricFunctionRoots(Standard_Real A, Standard_Real B, Standard_Real C, Standard_Real D, Standard_Real E, Standard_Real InfBound, Standard_Real SupBound) 
{
  nativeHandle = new math_TrigonometricFunctionRoots(A, B, C, D, E, InfBound, SupBound);
}

OCmath_TrigonometricFunctionRoots::OCmath_TrigonometricFunctionRoots(Standard_Real D, Standard_Real E, Standard_Real InfBound, Standard_Real SupBound) 
{
  nativeHandle = new math_TrigonometricFunctionRoots(D, E, InfBound, SupBound);
}

OCmath_TrigonometricFunctionRoots::OCmath_TrigonometricFunctionRoots(Standard_Real C, Standard_Real D, Standard_Real E, Standard_Real InfBound, Standard_Real SupBound) 
{
  nativeHandle = new math_TrigonometricFunctionRoots(C, D, E, InfBound, SupBound);
}

 System::Boolean OCmath_TrigonometricFunctionRoots::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((math_TrigonometricFunctionRoots*)nativeHandle)->IsDone());
}

 System::Boolean OCmath_TrigonometricFunctionRoots::InfiniteRoots()
{
  return OCConverter::StandardBooleanToBoolean(((math_TrigonometricFunctionRoots*)nativeHandle)->InfiniteRoots());
}

 Standard_Real OCmath_TrigonometricFunctionRoots::Value(Standard_Integer Index)
{
  return ((math_TrigonometricFunctionRoots*)nativeHandle)->Value(Index);
}

 Standard_Integer OCmath_TrigonometricFunctionRoots::NbSolutions()
{
  return ((math_TrigonometricFunctionRoots*)nativeHandle)->NbSolutions();
}

 void OCmath_TrigonometricFunctionRoots::Dump(Standard_OStream& o)
{
  ((math_TrigonometricFunctionRoots*)nativeHandle)->Dump(o);
}


