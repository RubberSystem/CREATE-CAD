// File generated by CPPExt (CPP file)
//

#include "math_Powell.h"
#include "../Converter.h"
#include "math_MultipleVarFunction.h"
#include "math_Vector.h"
#include "math_Matrix.h"


using namespace OCNaroWrappers;

OCmath_Powell::OCmath_Powell(math_Powell* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCmath_Powell::OCmath_Powell(OCNaroWrappers::OCmath_MultipleVarFunction^ F, OCNaroWrappers::OCmath_Vector^ StartingPoint, OCNaroWrappers::OCmath_Matrix^ StartingDirections, Standard_Real Tolerance, Standard_Integer NbIterations, Standard_Real ZEPS) 
{
  nativeHandle = new math_Powell(*((math_MultipleVarFunction*)F->Handle), *((math_Vector*)StartingPoint->Handle), *((math_Matrix*)StartingDirections->Handle), Tolerance, NbIterations, ZEPS);
}

OCmath_Powell::OCmath_Powell(OCNaroWrappers::OCmath_MultipleVarFunction^ F, Standard_Real Tolerance, Standard_Integer NbIterations, Standard_Real ZEPS) 
{
  nativeHandle = new math_Powell(*((math_MultipleVarFunction*)F->Handle), Tolerance, NbIterations, ZEPS);
}

 void OCmath_Powell::Delete()
{
  ((math_Powell*)nativeHandle)->Delete();
}

 void OCmath_Powell::Perform(OCNaroWrappers::OCmath_MultipleVarFunction^ F, OCNaroWrappers::OCmath_Vector^ StartingPoint, OCNaroWrappers::OCmath_Matrix^ StartingDirections)
{
  ((math_Powell*)nativeHandle)->Perform(*((math_MultipleVarFunction*)F->Handle), *((math_Vector*)StartingPoint->Handle), *((math_Matrix*)StartingDirections->Handle));
}

 System::Boolean OCmath_Powell::IsSolutionReached(OCNaroWrappers::OCmath_MultipleVarFunction^ F)
{
  return OCConverter::StandardBooleanToBoolean(((math_Powell*)nativeHandle)->IsSolutionReached(*((math_MultipleVarFunction*)F->Handle)));
}

 System::Boolean OCmath_Powell::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((math_Powell*)nativeHandle)->IsDone());
}

OCmath_Vector^ OCmath_Powell::Location()
{
  math_Vector* tmp = new math_Vector(0, 0);
  *tmp = ((math_Powell*)nativeHandle)->Location();
  return gcnew OCmath_Vector(tmp);
}

 void OCmath_Powell::Location(OCNaroWrappers::OCmath_Vector^ Loc)
{
  ((math_Powell*)nativeHandle)->Location(*((math_Vector*)Loc->Handle));
}

 Standard_Real OCmath_Powell::Minimum()
{
  return ((math_Powell*)nativeHandle)->Minimum();
}

 Standard_Integer OCmath_Powell::NbIterations()
{
  return ((math_Powell*)nativeHandle)->NbIterations();
}

 void OCmath_Powell::Dump(Standard_OStream& o)
{
  ((math_Powell*)nativeHandle)->Dump(o);
}


