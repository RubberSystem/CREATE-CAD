// File generated by CPPExt (MPV)
//
#ifndef _math_FunctionRoots_OCWrappers_HeaderFile
#define _math_FunctionRoots_OCWrappers_HeaderFile

// include native header
#include <math_FunctionRoots.hxx>
#include "../Converter.h"


#include "../TColStd/TColStd_SequenceOfReal.h"
#include "../TColStd/TColStd_SequenceOfInteger.h"


namespace OCNaroWrappers
{

ref class OCmath_FunctionWithDerivative;



//! This class implements an algorithm which finds all the real roots of <br>
//! a function with derivative within a given range. <br>
//! Knowledge of the derivative is required. <br>
public ref class OCmath_FunctionRoots  {

protected:
  math_FunctionRoots* nativeHandle;
  OCmath_FunctionRoots(OCDummy^) {};

public:
  property math_FunctionRoots* Handle
  {
    math_FunctionRoots* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCmath_FunctionRoots(math_FunctionRoots* nativeHandle);

// Methods PUBLIC

//! Calculates all the real roots of a function F-K within the range <br>
//! A..B. whithout conditions on A and B <br>
//! A solution X is found when <br>
//!   abs(Xi - Xi-1) <= Epsx and abs(F(Xi)-K) <= EpsF. <br>
//! The function is considered as null between A and B if <br>
//! abs(F-K) <= EpsNull within this range. <br>
OCmath_FunctionRoots(OCNaroWrappers::OCmath_FunctionWithDerivative^ F, Standard_Real A, Standard_Real B, Standard_Integer NbSample, Standard_Real EpsX, Standard_Real EpsF, Standard_Real EpsNull, Standard_Real K);

//! Returns true if the computations are successful, otherwise returns false. <br>
 /*instead*/  System::Boolean IsDone() ;


//! returns true if the function is considered as null between A and B. <br>
//! Exceptions <br>
//! StdFail_NotDone if the algorithm fails (and IsDone returns false). <br>
 /*instead*/  System::Boolean IsAllNull() ;

//! Returns the number of solutions found. <br>
//! Exceptions <br>
//! StdFail_NotDone if the algorithm fails (and IsDone returns false). <br>
 /*instead*/  Standard_Integer NbSolutions() ;

//! Returns the Nth value of the root of function F. <br>
//! Exceptions <br>
//! StdFail_NotDone if the algorithm fails (and IsDone returns false). <br>
 /*instead*/  Standard_Real Value(Standard_Integer Nieme) ;


//! returns the StateNumber  of the Nieme root. <br>
//! Exception RangeError is raised if Nieme is < 1 <br>
//!  or Nieme > NbSolutions. <br>
 /*instead*/  Standard_Integer StateNumber(Standard_Integer Nieme) ;

//! Prints on the stream o information on the current state <br>
//!          of the object. <br>
 /*instead*/  void Dump(Standard_OStream& o) ;

~OCmath_FunctionRoots()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
