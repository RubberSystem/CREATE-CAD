// File generated by CPPExt (MPV)
//
#ifndef _math_Array1OfValueAndWeight_OCWrappers_HeaderFile
#define _math_Array1OfValueAndWeight_OCWrappers_HeaderFile

// include native header
#include <math_Array1OfValueAndWeight.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{

ref class OCmath_ValueAndWeight;



public ref class OCmath_Array1OfValueAndWeight  {

protected:
  math_Array1OfValueAndWeight* nativeHandle;
  OCmath_Array1OfValueAndWeight(OCDummy^) {};

public:
  property math_Array1OfValueAndWeight* Handle
  {
    math_Array1OfValueAndWeight* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCmath_Array1OfValueAndWeight(math_Array1OfValueAndWeight* nativeHandle);

// Methods PUBLIC


OCmath_Array1OfValueAndWeight(Standard_Integer Low, Standard_Integer Up);


OCmath_Array1OfValueAndWeight(OCNaroWrappers::OCmath_ValueAndWeight^ Item, Standard_Integer Low, Standard_Integer Up);


 /*instead*/  void Init(OCNaroWrappers::OCmath_ValueAndWeight^ V) ;


 /*instead*/  System::Boolean IsAllocated() ;


 /*instead*/  OCmath_Array1OfValueAndWeight^ Assign(OCNaroWrappers::OCmath_Array1OfValueAndWeight^ Other) ;


 /*instead*/  Standard_Integer Length() ;


 /*instead*/  Standard_Integer Lower() ;


 /*instead*/  Standard_Integer Upper() ;


 /*instead*/  void SetValue(Standard_Integer Index, OCNaroWrappers::OCmath_ValueAndWeight^ Value) ;


 /*instead*/  OCmath_ValueAndWeight^ Value(Standard_Integer Index) ;


 /*instead*/  OCmath_ValueAndWeight^ ChangeValue(Standard_Integer Index) ;

~OCmath_Array1OfValueAndWeight()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
