// File generated by CPPExt (CPP file)
//

#include "math_FunctionRoots.h"
#include "../Converter.h"
#include "math_FunctionWithDerivative.h"


using namespace OCNaroWrappers;

OCmath_FunctionRoots::OCmath_FunctionRoots(math_FunctionRoots* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCmath_FunctionRoots::OCmath_FunctionRoots(OCNaroWrappers::OCmath_FunctionWithDerivative^ F, Standard_Real A, Standard_Real B, Standard_Integer NbSample, Standard_Real EpsX, Standard_Real EpsF, Standard_Real EpsNull, Standard_Real K) 
{
  nativeHandle = new math_FunctionRoots(*((math_FunctionWithDerivative*)F->Handle), A, B, NbSample, EpsX, EpsF, EpsNull, K);
}

 System::Boolean OCmath_FunctionRoots::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((math_FunctionRoots*)nativeHandle)->IsDone());
}

 System::Boolean OCmath_FunctionRoots::IsAllNull()
{
  return OCConverter::StandardBooleanToBoolean(((math_FunctionRoots*)nativeHandle)->IsAllNull());
}

 Standard_Integer OCmath_FunctionRoots::NbSolutions()
{
  return ((math_FunctionRoots*)nativeHandle)->NbSolutions();
}

 Standard_Real OCmath_FunctionRoots::Value(Standard_Integer Nieme)
{
  return ((math_FunctionRoots*)nativeHandle)->Value(Nieme);
}

 Standard_Integer OCmath_FunctionRoots::StateNumber(Standard_Integer Nieme)
{
  return ((math_FunctionRoots*)nativeHandle)->StateNumber(Nieme);
}

 void OCmath_FunctionRoots::Dump(Standard_OStream& o)
{
  ((math_FunctionRoots*)nativeHandle)->Dump(o);
}


