// File generated by CPPExt (CPP file)
//

#include "math_Crout.h"
#include "../Converter.h"
#include "math_Matrix.h"
#include "math_Vector.h"


using namespace OCNaroWrappers;

OCmath_Crout::OCmath_Crout(math_Crout* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCmath_Crout::OCmath_Crout(OCNaroWrappers::OCmath_Matrix^ A, Standard_Real MinPivot) 
{
  nativeHandle = new math_Crout(*((math_Matrix*)A->Handle), MinPivot);
}

 System::Boolean OCmath_Crout::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((math_Crout*)nativeHandle)->IsDone());
}

 void OCmath_Crout::Solve(OCNaroWrappers::OCmath_Vector^ B, OCNaroWrappers::OCmath_Vector^ X)
{
  ((math_Crout*)nativeHandle)->Solve(*((math_Vector*)B->Handle), *((math_Vector*)X->Handle));
}

OCmath_Matrix^ OCmath_Crout::Inverse()
{
  math_Matrix* tmp = new math_Matrix(0, 0, 0, 0);
  *tmp = ((math_Crout*)nativeHandle)->Inverse();
  return gcnew OCmath_Matrix(tmp);
}

 void OCmath_Crout::Invert(OCNaroWrappers::OCmath_Matrix^ Inv)
{
  ((math_Crout*)nativeHandle)->Invert(*((math_Matrix*)Inv->Handle));
}

 Standard_Real OCmath_Crout::Determinant()
{
  return ((math_Crout*)nativeHandle)->Determinant();
}

 void OCmath_Crout::Dump(Standard_OStream& o)
{
  ((math_Crout*)nativeHandle)->Dump(o);
}


