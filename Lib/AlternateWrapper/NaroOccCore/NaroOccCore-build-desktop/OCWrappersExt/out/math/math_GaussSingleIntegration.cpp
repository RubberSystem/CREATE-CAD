// File generated by CPPExt (CPP file)
//

#include "math_GaussSingleIntegration.h"
#include "../Converter.h"
#include "math_Function.h"


using namespace OCNaroWrappers;

OCmath_GaussSingleIntegration::OCmath_GaussSingleIntegration(math_GaussSingleIntegration* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCmath_GaussSingleIntegration::OCmath_GaussSingleIntegration() 
{
  nativeHandle = new math_GaussSingleIntegration();
}

OCmath_GaussSingleIntegration::OCmath_GaussSingleIntegration(OCNaroWrappers::OCmath_Function^ F, Standard_Real Lower, Standard_Real Upper, Standard_Integer Order) 
{
  nativeHandle = new math_GaussSingleIntegration(*((math_Function*)F->Handle), Lower, Upper, Order);
}

OCmath_GaussSingleIntegration::OCmath_GaussSingleIntegration(OCNaroWrappers::OCmath_Function^ F, Standard_Real Lower, Standard_Real Upper, Standard_Integer Order, Standard_Real Tol) 
{
  nativeHandle = new math_GaussSingleIntegration(*((math_Function*)F->Handle), Lower, Upper, Order, Tol);
}

 System::Boolean OCmath_GaussSingleIntegration::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((math_GaussSingleIntegration*)nativeHandle)->IsDone());
}

 Standard_Real OCmath_GaussSingleIntegration::Value()
{
  return ((math_GaussSingleIntegration*)nativeHandle)->Value();
}

 void OCmath_GaussSingleIntegration::Dump(Standard_OStream& o)
{
  ((math_GaussSingleIntegration*)nativeHandle)->Dump(o);
}


