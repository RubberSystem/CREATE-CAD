// File generated by CPPExt (MPV)
//
#ifndef _math_DirectPolynomialRoots_OCWrappers_HeaderFile
#define _math_DirectPolynomialRoots_OCWrappers_HeaderFile

// include native header
#include <math_DirectPolynomialRoots.hxx>
#include "../Converter.h"




namespace OCNaroWrappers
{




//! This class implements the calculation of all the real roots of a real <br>
//! polynomial of degree <= 4 using a direct method. Once found, <br>
//! the roots are polished using the Newton method. <br>
public ref class OCmath_DirectPolynomialRoots  {

protected:
  math_DirectPolynomialRoots* nativeHandle;
  OCmath_DirectPolynomialRoots(OCDummy^) {};

public:
  property math_DirectPolynomialRoots* Handle
  {
    math_DirectPolynomialRoots* get()
    {
      return nativeHandle;
    }
  }


// constructor from native
OCmath_DirectPolynomialRoots(math_DirectPolynomialRoots* nativeHandle);

// Methods PUBLIC


//! computes all the real roots of the polynomial <br>
//! Ax4 + Bx3 + Cx2 + Dx + E using a direct method. <br>
OCmath_DirectPolynomialRoots(Standard_Real A, Standard_Real B, Standard_Real C, Standard_Real D, Standard_Real E);


//! computes all the real roots of the polynomial <br>
//! Ax3 + Bx2 + Cx + D using a direct method. <br>
OCmath_DirectPolynomialRoots(Standard_Real A, Standard_Real B, Standard_Real C, Standard_Real D);


//! computes all the real roots of the polynomial <br>
//! Ax2 + Bx + C using a direct method. <br>
OCmath_DirectPolynomialRoots(Standard_Real A, Standard_Real B, Standard_Real C);


//! computes the real root of the polynomial Ax + B. <br>
OCmath_DirectPolynomialRoots(Standard_Real A, Standard_Real B);

//! Returns true if the computations are successful, otherwise returns false. <br>
 /*instead*/  System::Boolean IsDone() ;

//! Returns true if there is an infinity of roots, otherwise returns false. <br>
 /*instead*/  System::Boolean InfiniteRoots() ;

//! returns the number of solutions. <br>
//!          An exception is raised if there are an infinity of roots. <br>
 /*instead*/  Standard_Integer NbSolutions() ;

//! returns the value of the Nieme root. <br>
//!          An exception is raised if there are an infinity of roots. <br>
//!          Exception RangeError is raised if Nieme is < 1 <br>
//!          or Nieme > NbSolutions. <br>
 /*instead*/  Standard_Real Value(Standard_Integer Nieme) ;

//! Prints on the stream o information on the current state <br>
//!          of the object. <br>
//!          Is used to redefine the operator <<. <br>
 /*instead*/  void Dump(Standard_OStream& o) ;

~OCmath_DirectPolynomialRoots()
{
  delete nativeHandle;
}

};

}; // OCNaroWrappers

#endif
