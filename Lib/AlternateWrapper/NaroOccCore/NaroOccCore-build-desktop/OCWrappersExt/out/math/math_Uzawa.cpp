// File generated by CPPExt (CPP file)
//

#include "math_Uzawa.h"
#include "../Converter.h"
#include "math_Matrix.h"
#include "math_Vector.h"


using namespace OCNaroWrappers;

OCmath_Uzawa::OCmath_Uzawa(math_Uzawa* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCmath_Uzawa::OCmath_Uzawa(OCNaroWrappers::OCmath_Matrix^ Cont, OCNaroWrappers::OCmath_Vector^ Secont, OCNaroWrappers::OCmath_Vector^ StartingPoint, Standard_Real EpsLix, Standard_Real EpsLic, Standard_Integer NbIterations) 
{
  nativeHandle = new math_Uzawa(*((math_Matrix*)Cont->Handle), *((math_Vector*)Secont->Handle), *((math_Vector*)StartingPoint->Handle), EpsLix, EpsLic, NbIterations);
}

OCmath_Uzawa::OCmath_Uzawa(OCNaroWrappers::OCmath_Matrix^ Cont, OCNaroWrappers::OCmath_Vector^ Secont, OCNaroWrappers::OCmath_Vector^ StartingPoint, Standard_Integer Nci, Standard_Integer Nce, Standard_Real EpsLix, Standard_Real EpsLic, Standard_Integer NbIterations) 
{
  nativeHandle = new math_Uzawa(*((math_Matrix*)Cont->Handle), *((math_Vector*)Secont->Handle), *((math_Vector*)StartingPoint->Handle), Nci, Nce, EpsLix, EpsLic, NbIterations);
}

 System::Boolean OCmath_Uzawa::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((math_Uzawa*)nativeHandle)->IsDone());
}

OCmath_Vector^ OCmath_Uzawa::Value()
{
  math_Vector* tmp = new math_Vector(0, 0);
  *tmp = ((math_Uzawa*)nativeHandle)->Value();
  return gcnew OCmath_Vector(tmp);
}

OCmath_Vector^ OCmath_Uzawa::InitialError()
{
  math_Vector* tmp = new math_Vector(0, 0);
  *tmp = ((math_Uzawa*)nativeHandle)->InitialError();
  return gcnew OCmath_Vector(tmp);
}

 void OCmath_Uzawa::Duale(OCNaroWrappers::OCmath_Vector^ V)
{
  ((math_Uzawa*)nativeHandle)->Duale(*((math_Vector*)V->Handle));
}

OCmath_Vector^ OCmath_Uzawa::Error()
{
  math_Vector* tmp = new math_Vector(0, 0);
  *tmp = ((math_Uzawa*)nativeHandle)->Error();
  return gcnew OCmath_Vector(tmp);
}

 Standard_Integer OCmath_Uzawa::NbIterations()
{
  return ((math_Uzawa*)nativeHandle)->NbIterations();
}

OCmath_Matrix^ OCmath_Uzawa::InverseCont()
{
  math_Matrix* tmp = new math_Matrix(0, 0, 0, 0);
  *tmp = ((math_Uzawa*)nativeHandle)->InverseCont();
  return gcnew OCmath_Matrix(tmp);
}

 void OCmath_Uzawa::Dump(Standard_OStream& o)
{
  ((math_Uzawa*)nativeHandle)->Dump(o);
}


