// File generated by CPPExt (CPP file)
//

#include "math_BrentMinimum.h"
#include "../Converter.h"
#include "math_Function.h"


using namespace OCNaroWrappers;

OCmath_BrentMinimum::OCmath_BrentMinimum(math_BrentMinimum* nativeHandle) 
{
  this->nativeHandle = nativeHandle;
}

OCmath_BrentMinimum::OCmath_BrentMinimum(Standard_Real TolX, Standard_Integer NbIterations, Standard_Real ZEPS) 
{
  nativeHandle = new math_BrentMinimum(TolX, NbIterations, ZEPS);
}

OCmath_BrentMinimum::OCmath_BrentMinimum(Standard_Real TolX, Standard_Real Fbx, Standard_Integer NbIterations, Standard_Real ZEPS) 
{
  nativeHandle = new math_BrentMinimum(TolX, Fbx, NbIterations, ZEPS);
}

OCmath_BrentMinimum::OCmath_BrentMinimum(OCNaroWrappers::OCmath_Function^ F, Standard_Real Ax, Standard_Real Bx, Standard_Real Cx, Standard_Real TolX, Standard_Integer NbIterations, Standard_Real ZEPS) 
{
  nativeHandle = new math_BrentMinimum(*((math_Function*)F->Handle), Ax, Bx, Cx, TolX, NbIterations, ZEPS);
}

 void OCmath_BrentMinimum::Perform(OCNaroWrappers::OCmath_Function^ F, Standard_Real Ax, Standard_Real Bx, Standard_Real Cx)
{
  ((math_BrentMinimum*)nativeHandle)->Perform(*((math_Function*)F->Handle), Ax, Bx, Cx);
}

 System::Boolean OCmath_BrentMinimum::IsSolutionReached(OCNaroWrappers::OCmath_Function^ F)
{
  return OCConverter::StandardBooleanToBoolean(((math_BrentMinimum*)nativeHandle)->IsSolutionReached(*((math_Function*)F->Handle)));
}

 System::Boolean OCmath_BrentMinimum::IsDone()
{
  return OCConverter::StandardBooleanToBoolean(((math_BrentMinimum*)nativeHandle)->IsDone());
}

 Standard_Real OCmath_BrentMinimum::Location()
{
  return ((math_BrentMinimum*)nativeHandle)->Location();
}

 Standard_Real OCmath_BrentMinimum::Minimum()
{
  return ((math_BrentMinimum*)nativeHandle)->Minimum();
}

 Standard_Integer OCmath_BrentMinimum::NbIterations()
{
  return ((math_BrentMinimum*)nativeHandle)->NbIterations();
}

 void OCmath_BrentMinimum::Dump(Standard_OStream& o)
{
  ((math_BrentMinimum*)nativeHandle)->Dump(o);
}


